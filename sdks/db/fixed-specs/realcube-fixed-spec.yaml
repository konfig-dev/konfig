openapi: 3.0.0
info:
  title: REALCUBE API
  description: >-
    This API allows developers to communicate with the REALCUBE platform. Admins
    can also access the [admin area](https://api.realcube.com).
  version: 1.0.0
  contact:
    name: REALCUBE GmbH
    email: uwe.forgber@realcube.com
  x-konfig-ignore:
    object-with-no-properties: true
servers:
  - url: api.realcube.com/api
tags:
  - name: scorecard_memberships
  - description: Benutzer
    name: users
  - description: Hersteller
    name: manufacturers
  - name: dashboards
  - description: Anwendungen
    name: apps
  - description: Filtereinstellungen
    name: building_filter_settings
  - description: Gebäude
    name: buildings
  - description: Vorgänge
    name: activities
  - description: Stichworte
    name: tags
  - description: Mieterhöhungen
    name: rent_increases
  - description: Kundenkontoübersetzungen
    name: customer_account_translations
  - description: Kundenkonto-Attributgruppen
    name: customer_account_attribute_groups
  - description: Pläne
    name: plans
  - description: Abonnements für Anwendungen
    name: app_subscriptions
  - description: Anwendungs-Konfigurationen
    name: app_configs
  - description: App-Daten-Repository
    name: app_data_repositories
  - description: Liegenschaft
    name: properties
  - description: Liegenschaft Managers
    name: property_managers
  - description: Grundstück
    name: lots
  - description: Filter speichern
    name: building_save_filters
  - description: Einheit Klasse
    name: building_unit_types
  - description: Einheit
    name: building_units
  - description: Die Leute
    name: people
  - description: Die Verträge
    name: contracts
  - description: Ergänzungen zu einer Contract
    name: contract_additions
  - description: Zuschüsse zu einer Contract
    name: contract_grants
  - description: Mitgliedschaftskosten zu einer Contract Mitgliedschaft
    name: contract_membership_costs
  - description: Kostenarten
    name: cost_types
  - description: Die Berichtsvorlagen
    name: report_templates
  - description: Kontoschema-Bericht
    name: report_account_schemas
  - description: Stockwerk
    name: levels
  - description: Raum
    name: rooms
  - description: Anlage
    name: facilities
  - description: Leistungsarten
    name: activity_types
  - description: Rollen
    name: roles
  - description: Rollen Policen
    name: role_policies
  - description: Mieterhöhungstypen
    name: rent_increase_types
  - description: Mietsteigerungsindizes
    name: rent_increase_indices
  - description: Emissionsfaktor-Einstellungen
    name: emission_factor_settings
  - name: webhooks
  - name: scorecards
  - name: data_catalogs
  - description: Dashboard-Konfigurationen
    name: dashboard_configs
  - description: Organisation
    name: organisations
  - description: Benutzer Zugehörigkeit zu einer Organisation
    name: organisation_memberships
  - description: Schemakonfiguration zu einer Organisation
    name: organisation_configs
  - description: Kundenspezifisches Schema
    name: customer_account_schemas
  - description: Anlagengruppe
    name: departments
  - description: Zeitabhängige Attribute
    name: time_dependent_attributes
  - description: Tracker mieten
    name: rent_trackers
  - description: Plattform Konfigurationen
    name: platform_configs
  - description: Task-Mitgliedschaften
    name: task_memberships
  - name: customer_account_categories
  - name: csv_imports
  - name: scorecard_assigners
  - description: Kundenkonto
    name: customer_accounts
  - description: Kundenkontokategorie-Konfigurationen
    name: customer_account_category_configs
  - description: Plan Versionen
    name: plan_versions
  - description: Kundenspezifische Konfiguration
    name: customer_account_configs
  - description: Kundenspezifische Attribute
    name: customer_attributes_schemas
  - description: Benutzer Zugehörigkeit zu einer Person
    name: person_memberships
  - description: Kaution
    name: security_deposits
  - description: Fläche
    name: zones
  - description: Anlagenart
    name: facility_types
  - description: Dokumente
    name: attachments
  - description: Bilder
    name: images
  - description: Abfallverbrauch
    name: building_wastes
  - name: building_energies
  - name: buildings_finances
  - name: building_fms
  - name: building_unit_retails
  - name: building_unit_retail_metrics
  - name: building_waters
  - name: addtl_building_ids
  - name: phases
  - name: building_parkings
  - name: building_areas
  - name: building_unit_areas
  - name: building_unit_places
  - name: building_unit_places_timeboxeds
  - name: building_unit_places_properties
  - name: scorecard_segments
  - name: scorecard_topics
  - name: scorecard_subtopics
  - description: Berechtigungsnachweise
    name: credentials
  - description: Zugehörigkeit der kundenspezifischen Attribute
    name: customer_attributes_schema_memberships
  - description: Einheit Finanzen
    name: building_units_finances
  - description: Zugehörigkeit der Einheit zu Gebäude
    name: building_unit_memberships
  - description: Benutzer Zugehörigkeit zu einer Contract
    name: contract_memberships
  - name: raw_data_catalogs
  - description: Plan-Konfigurationen
    name: plan_configs
  - description: Anwendungs-Kategorien
    name: app_categories
  - description: Liegenschaftstyp
    name: property_types
  - description: Asset Klasse
    name: building_types
  - description: Raum- und Flächenart
    name: room_and_zone_types
  - description: EP_code Kombinationen
    name: ep_code_combinations
  - description: Mieter
    name: tenants
paths:
  /v1/platform_configs:
    post:
      tags:
        - platform_configs
      summary: Creates a platform_config within the current organisation
      operationId: Platformconfigs_createNewConfig
      security:
        - api_key: []
        - oauth:
            - platform_config_write
      description: Creates a platform_config within the current organisation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlatformConfigCreate'
        required: true
      responses:
        '201':
          description: PlatformConfig successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatformconfigsCreateNewConfigResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatformconfigsCreateNewConfig401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatformconfigsCreateNewConfig403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatformconfigsCreateNewConfig422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatformconfigsCreateNewConfig500Response'
    get:
      tags:
        - platform_configs
      summary: Shows the platform_configs
      operationId: Platformconfigs_showAllConfigs
      security:
        - api_key: []
        - oauth:
            - platform_config_read
      description: Shows the platform_configs
      responses:
        '200':
          description: Returns the platform_configs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatformconfigsShowAllConfigsResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatformconfigsShowAllConfigs401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatformconfigsShowAllConfigs403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatformconfigsShowAllConfigs404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatformconfigsShowAllConfigs422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatformconfigsShowAllConfigs500Response'
  /v1/platform_configs/{platform_config_id}:
    put:
      tags:
        - platform_configs
      summary: Updates an platform_config within the current organisation.
      operationId: Platformconfigs_updateWithinOrganisation
      security:
        - api_key: []
        - oauth:
            - platform_config_write
      description: >-
        Updates an platform_config within the current organisation. Organisation
        manager only 🔒
      parameters:
        - description: ID of the platform_config you want to update
          name: platform_config_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlatformConfig'
        required: true
      responses:
        '200':
          description: PlatformConfig successfully updated
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PlatformconfigsUpdateWithinOrganisationResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PlatformconfigsUpdateWithinOrganisation401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PlatformconfigsUpdateWithinOrganisation403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PlatformconfigsUpdateWithinOrganisation404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PlatformconfigsUpdateWithinOrganisation422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PlatformconfigsUpdateWithinOrganisation500Response
    delete:
      tags:
        - platform_configs
      summary: Marks a platform_config as deleted within the current organisation.
      operationId: Platformconfigs_markAsDeleted
      security:
        - api_key: []
        - oauth:
            - platform_config_destroy
      description: >-
        Marks a platform_config as deleted within the current organisation.
        Organisation manager only 🔒
      parameters:
        - description: ID of the platform_config you want to delete
          name: platform_config_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: PlatformConfig successfully marked as deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatformconfigsMarkAsDeletedResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatformconfigsMarkAsDeleted401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatformconfigsMarkAsDeleted403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatformconfigsMarkAsDeleted404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatformconfigsMarkAsDeleted422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatformconfigsMarkAsDeleted500Response'
  /v1/users:
    post:
      tags:
        - users
      summary: Creates a user.
      operationId: Users_createNewUser
      security:
        - api_key: []
        - oauth:
            - user_write
      description: |
        # Description
        Creates a new user
        # Password
          Make sure you use a strong password
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      responses:
        '201':
          description: Returns the created user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersCreateNewUserResponse'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersCreateNewUser422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersCreateNewUser500Response'
    get:
      tags:
        - users
      summary: Returns all users within the given account.
      operationId: Users_getAll
      security:
        - api_key: []
        - oauth:
            - user_read
      description: >-
        Returns all users within the given account. They can be filtered based
        on account.
      parameters:
        - description: The ID customer account to filter the users.
          name: customer_account_id
          in: query
          required: false
          schema:
            type: string
        - description: The page to paginate the users.
          name: page
          in: query
          required: false
          schema:
            type: string
        - description: The number of users for a page
          name: per_page
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Returns all users within the given account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersGetAllResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersGetAll401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersGetAll403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersGetAll422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersGetAll500Response'
  /v1/users/log_in:
    post:
      tags:
        - users
      summary: Login
      operationId: Users_authenticateUser
      security:
        - api_key: []
        - oauth:
            - user_write
      description: Authenticates user to get the API key or relevant information.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserSignIn'
        required: true
      responses:
        '200':
          description: Returns user object including the api_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersAuthenticateUserResponse'
        '401':
          description: Invalid email password combination
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersAuthenticateUser401Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersAuthenticateUser422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersAuthenticateUser500Response'
  /v1/users/refresh_token:
    get:
      tags:
        - users
      summary: Refresh token
      operationId: Users_refreshToken
      security:
        - api_key: []
        - oauth:
            - user_read
      description: Reauthenticate user to get the API key or relevant information.
      responses:
        '200':
          description: Returns user object including the api_token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersRefreshTokenResponse'
        '401':
          description: Invalid email password combination
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersRefreshToken401Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersRefreshToken422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersRefreshToken500Response'
  /v1/users/{user_id}:
    put:
      tags:
        - users
      summary: Updates the user.
      operationId: Users_updateUser
      security:
        - api_key: []
        - oauth:
            - user_write
      description: Updates the user
      parameters:
        - description: The ID customer account
          name: customer_account_id
          in: query
          required: false
          schema:
            type: string
        - description: The ID of the user to update
          name: user_id
          in: path
          required: true
          schema:
            type: integer
        - description: The reset token of the user
          name: reset_password_token
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
        required: true
      responses:
        '200':
          description: User successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersUpdateUserResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersUpdateUser401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersUpdateUser403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersUpdateUser404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersUpdateUser422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersUpdateUser500Response'
    delete:
      tags:
        - users
      summary: Delete the user.
      operationId: Users_deleteUser
      security:
        - api_key: []
        - oauth:
            - user_destroy
      description: Delete the user
      parameters:
        - description: The ID of the user to delete
          name: user_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersDeleteUserResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersDeleteUser401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersDeleteUser403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersDeleteUser404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersDeleteUser422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersDeleteUser500Response'
  /v1/users/log_out:
    delete:
      tags:
        - users
      summary: Invalidates the current api token
      operationId: Users_invalidateApiToken
      security:
        - api_key: []
        - oauth:
            - user_destroy
      description: Invalidates the current api token
      responses:
        '200':
          description: Returns the signed out user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersInvalidateApiTokenResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersInvalidateApiToken401Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersInvalidateApiToken422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersInvalidateApiToken500Response'
  /v1/users/reset_password_instructions:
    put:
      tags:
        - users
      summary: >-
        Sends reset password instructions to the user's email address (in german
        & english).
      operationId: Users_sendResetInstructions
      security:
        - api_key: []
        - oauth:
            - user_write
      description: >-
        Sends reset password instructions to the user's email address (in german
        & english).
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserResetPasswordInstructions'
        required: true
      responses:
        '200':
          description: Returns the user with email to which the instructions where sent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersSendResetInstructionsResponse'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersSendResetInstructions404Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersSendResetInstructions500Response'
  /v1/users/send_invitation:
    put:
      tags:
        - users
      summary: Sends invitation to the user's email address (in german & english).
      operationId: Users_sendInvitation
      security:
        - api_key: []
        - oauth:
            - user_write
      description: Sends invitation to the user's email address (in german & english).
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInvitations'
        required: true
      responses:
        '200':
          description: Returns the user with email to which the invitation where sent
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersSendInvitationResponse'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersSendInvitation404Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersSendInvitation500Response'
  /v1/roles:
    get:
      tags:
        - roles
      summary: Returns all roles
      operationId: Roles_getAllRoles
      security:
        - api_key: []
        - oauth:
            - role_read
      description: Returns all roles, Admin, Supervisor 🔒
      parameters:
        - description: The ID of the current customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns all roles
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesGetAllRolesResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesGetAllRoles401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesGetAllRoles403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesGetAllRoles422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesGetAllRoles500Response'
    post:
      tags:
        - roles
      summary: Creates a Role
      operationId: Roles_createRole
      security:
        - api_key: []
        - oauth:
            - role_write
      description: Creates a Role, Admin, Supervisor 🔒
      parameters:
        - description: The ID of the current_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleCreate'
        required: true
      responses:
        '201':
          description: Role successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesCreateRoleResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesCreateRole401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesCreateRole403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesCreateRole422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesCreateRole500Response'
  /v1/roles/{role_id}:
    get:
      tags:
        - roles
      summary: Shows a Role
      operationId: Roles_showRole
      security:
        - api_key: []
        - oauth:
            - role_read
      description: Shows a Role, Admin, Supervisor 🔒
      parameters:
        - description: The ID of the current_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the Role to show
          name: role_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the Role
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesShowRoleResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesShowRole401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesShowRole403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesShowRole404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesShowRole422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesShowRole500Response'
    put:
      tags:
        - roles
      summary: Updates a Role
      operationId: Roles_updateRole
      security:
        - api_key: []
        - oauth:
            - role_write
      description: Updates a Role, Admin, Supervisor 🔒
      parameters:
        - description: The ID of the current_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the Role to update
          name: role_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      responses:
        '200':
          description: Role successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesUpdateRoleResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesUpdateRole401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesUpdateRole403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesUpdateRole422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesUpdateRole500Response'
    delete:
      tags:
        - roles
      summary: Deletes the Role
      operationId: Roles_removeRole
      security:
        - api_key: []
        - oauth:
            - role_destroy
      description: Deletes the Role, Admin, Supervisor 🔒
      parameters:
        - description: The ID of the current_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the Role to delete
          name: role_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Role successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesRemoveRoleResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesRemoveRole401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesRemoveRole403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesRemoveRole404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesRemoveRole422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesRemoveRole500Response'
  /v1/role_policies:
    get:
      tags:
        - role_policies
      summary: Returns all Role Policies
      operationId: Rolepolicies_getAll
      security:
        - api_key: []
        - oauth:
            - role_policy_read
      description: Returns all role_policies , Admin, Supervisor ðŸ”’
      parameters:
        - description: The ID of the current customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 'Returns all Role Policies '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolepoliciesGetAllResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolepoliciesGetAll401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolepoliciesGetAll403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolepoliciesGetAll422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolepoliciesGetAll500Response'
    post:
      tags:
        - role_policies
      summary: Creates a Role Policy
      operationId: Rolepolicies_createPolicy
      security:
        - api_key: []
        - oauth:
            - role_policy_write
      description: |
        # Description
        Creates a Role Policy, Admin, Supervisor 🔒
        Rules format:
            {
              "resource": "User",
              "action": [],
              "description": "Something descriptive",
              "effect": "allow",
              "attributes": ['name'],
              "conditions": [[ "id", "eq", 30 ]]
            }
          # Allowed resource:
             App,  App::Category,  App::CategoryMembership,  Attachment,  Building,  Property,  Lot,  Building::FilterSetting,  Building::SaveFilter,  Building::Type,  Contract,  Contract::Addition,  Contract::Grant,  CustomerAccount,  CustomerAccount::Membership,  Facility,  Level,  Room,  Zone,  Facility::Type,  Image,  Organisation,  Organisation::Config,  Organisation::Membership,  Property::Type,  ReportTemplate,  User
          # Allowed conditions format:
             [['column name', 'predicate', 'value']]
          # Allowed conditions predicates:
             not_eq_all, eq, eq_any, eq_all, between, not_in, lteq, gteq, in_any, in_all, not_between, gt, not_in_any, not_in_all, in, gteq_any, gteq_all, gt_any, gt_all, lt_any, lt, lt_all, lteq_any, lteq_all, not_eq, not_eq_any
      parameters:
        - description: The ID of the current_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RolePolicyCreate'
        required: true
      responses:
        '201':
          description: Role Policy successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolepoliciesCreatePolicyResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolepoliciesCreatePolicy401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolepoliciesCreatePolicy403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolepoliciesCreatePolicy422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolepoliciesCreatePolicy500Response'
  /v1/role_policies/{role_policy_id}:
    get:
      tags:
        - role_policies
      summary: Shows a Role Policy
      operationId: Rolepolicies_showRolePolicy
      security:
        - api_key: []
        - oauth:
            - role_policy_read
      description: Shows a Policy, Admin, Supervisor ðŸ”’
      parameters:
        - description: The ID of the current_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the Role Policy to show
          name: role_policy_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the Role Policy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolepoliciesShowRolePolicyResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolepoliciesShowRolePolicy401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolepoliciesShowRolePolicy403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolepoliciesShowRolePolicy404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolepoliciesShowRolePolicy422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolepoliciesShowRolePolicy500Response'
    put:
      tags:
        - role_policies
      summary: Updates a Role Policy
      operationId: Rolepolicies_updatePolicy
      security:
        - api_key: []
        - oauth:
            - role_policy_write
      description: |
        # Description
        Updates a Role Policy, Admin, Supervisor 🔒
        Rules format:
            {
              "resource": "User",
              "action": [],
              "description": "Something descriptive",
              "effect": "allow",
              "attributes": ['name'],
              "conditions": [[ "id", "eq", 30 ]]
            }
          # Allowed resource:
             App,  App::Category,  App::CategoryMembership,  Attachment,  Building,  Property,  Lot,  Building::FilterSetting,  Building::SaveFilter,  Building::Type,  Contract,  Contract::Addition,  Contract::Grant,  CustomerAccount,  CustomerAccount::Membership,  Facility,  Level,  Room,  Zone,  Facility::Type,  Image,  Organisation,  Organisation::Config,  Organisation::Membership,  Property::Type,  ReportTemplate,  User
          # Allowed conditions format:
             [['column name', 'predicate', 'value']]
          # Allowed conditions predicates:
             not_eq_all, eq, eq_any, eq_all, between, not_in, lteq, gteq, in_any, in_all, not_between, gt, not_in_any, not_in_all, in, gteq_any, gteq_all, gt_any, gt_all, lt_any, lt, lt_all, lteq_any, lteq_all, not_eq, not_eq_any
      parameters:
        - description: The ID of the current_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the Role Policy to update
          name: role_policy_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
        required: true
      responses:
        '200':
          description: Role Policy successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolepoliciesUpdatePolicyResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolepoliciesUpdatePolicy401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolepoliciesUpdatePolicy403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolepoliciesUpdatePolicy422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolepoliciesUpdatePolicy500Response'
    delete:
      tags:
        - role_policies
      summary: Deletes the Role Policy
      operationId: Rolepolicies_deletePolicy
      security:
        - api_key: []
        - oauth:
            - role_policy_destroy
      description: Deletes the Role Policy, Admin, Supervisor ðŸ”’
      parameters:
        - description: The ID of the current_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the Role Policy to delete
          name: role_policy_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Role Policy successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolepoliciesDeletePolicyResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolepoliciesDeletePolicy401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolepoliciesDeletePolicy403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolepoliciesDeletePolicy404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolepoliciesDeletePolicy422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolepoliciesDeletePolicy500Response'
  /v1/tenants/{boarding_type}:
    get:
      tags:
        - tenants
      summary: Shows all tenants
      operationId: Tenants_listForBoardingType
      security:
        - api_key: []
        - oauth:
            - tenant_read
      description: Shows all tenants for a specific time range
      parameters:
        - description: 'The type of boarding: onboarding or offboarding'
          name: boarding_type
          in: path
          required: true
          schema:
            type: string
            enum:
              - onboarding
              - offboarding
        - description: The id of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: The starting date for new tenant
          name: start_date
          in: query
          example: '2024-04-16'
          schema:
            type: string
            format: date-time
        - description: The ending date for new tenant
          name: end_date
          in: query
          example: '2024-04-17'
          schema:
            type: string
            format: date-time
        - description: Search by object type
          name: search_by
          in: query
          schema:
            type: string
            enum:
              - organisation
              - property
              - building
              - building_unit
        - description: Search by object id
          name: item_id
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: Returns the tenant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantsListForBoardingTypeResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantsListForBoardingType401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantsListForBoardingType403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantsListForBoardingType404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantsListForBoardingType422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantsListForBoardingType500Response'
  /v1/customer_account_translations:
    get:
      tags:
        - customer_account_translations
      summary: >-
        Returns all customer_account's translations within the given customer
        account
      operationId: Customeraccounttranslations_getAllTranslations
      security:
        - api_key: []
        - oauth:
            - customer_account_translation_read
      description: >-
        Returns all customer_account's translations within the given customer
        account
      parameters:
        - description: The ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: >-
            Returns all customer_account' s translations within the given
            customer account
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccounttranslationsGetAllTranslationsResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccounttranslationsGetAllTranslations401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccounttranslationsGetAllTranslations403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccounttranslationsGetAllTranslations422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccounttranslationsGetAllTranslations500Response
    post:
      tags:
        - customer_account_translations
      summary: Creates a customer_account_translation
      operationId: Customeraccounttranslations_createTranslation
      security:
        - api_key: []
        - oauth:
            - customer_account_translation_write
      description: |
        # Description
        Creates a customer_account_translation
        # Allowed parent_type:
           * Building,  Building::Unit,  Property,  Facility,  CustomerAccountAttributeGroup,  ActivityType,  CustomerAccountCategory
        # Allowed languages:
           * de,  en,  gsw
        # Allowed field:
          1. Building:
             * id,  name,  custom_id,  comment,  street,  street_number,  city,  province,  country,  user_id,  organisation_id,  lot_id,  property_id,  last_editor_id,  created_at,  updated_at,  building_type_id,  zip_code,  latitude,  longitude,  year_of_construction,  gross_floor_area_in_sqm_din_277,  architect,  net_floor_area_in_sqm_din_277,  auxiliary_floor_area_in_sqm,  deleted_at,  dynamic_attribute_id,  customer_attributes_schema_id,  customer_attributes,  units_count,  customer_account_schema_id,  gross_floor_area_in_sqm_GIF,  parking_space,  old_roof_form,  external_id,  source_system,  gross_floor_area_in_sqm_sia_d_0165,  net_floor_area_in_sqm_sia_d_0165,  planned_monthly_rent,  number_of_floors,  last_refurbishment_at,  heating_type,  main_energy_provider,  floors_below_ground,  floors_above_ground,  stairwells,  main_energy_source,  parking_garage,  protective_area,  number_of_lifts,  facility_type,  institution_type,  deso_facility,  heating_used_energy,  kitchen_type,  objectphase,  region,  construction_project_category,  state_of_renovation,  roof_form,  number_of_windows,  user_intervention_window_number,  user_intervention_window_area,  fund_name,  own_use,  listed_building,  house_number,  address_suffix,  energy_certificate_type,  stored_energy_validity,  accounting_rules_applied,  energy_class,  year_of_construction_heat_generator,  air_conditioning,
          2. Building::Unit:
             * id,  building_id,  name,  comment,  last_editor_id,  organisation_id,  created_at,  updated_at,  tenant,  gross_floor_area_in_sqm_din_277,  net_floor_area_in_sqm_din_277,  building_unit_type_id,  user_id,  auxiliary_floor_area_in_sqm,  social_floor_area_in_sqm,  deleted_at,  owner,  dynamic_attribute_id,  customer_attributes_schema_id,  customer_attributes,  customer_account_schema_id,  gross_floor_area_in_sqm_GIF,  contract_id,  external_id,  source_system,  net_floor_area_in_sqm_sia_d_0165,  gross_floor_area_in_sqm_sia_d_0165,  market_rental_price,  planned_monthly_rent,  planned_operating_cost,  planned_total_rent,  planned_deposit,  number_of_rooms,  number_of_bedrooms,  number_of_bathrooms,  quality_of_available_features,  current_condition,  description,  description_of_features,  features,  heating_costs_in_operating_costs,  contracted_lease_base_rent,  contracted_lease_operating_costs,  contracted_lease_deposit,  floor,  group_home,
          3. Property:
             * id,  name,  comment,  created_at,  updated_at,  property_type_id,  custom_id,  user_id,  organisation_id,  last_editor_id,  zip_code,  city,  country,  deleted_at,  external_id,  source_system,  property_manager_id,
          4. Facility:
             * id,  name,  custom_id,  comment,  inventory_number,  serial_number,  year_of_construction,  last_inspection_at,  last_maintenance_at,  next_inspection_at,  next_maintenance_at,  latitude,  longitude,  manufacturer_id,  department_id,  facility_type_id,  user_id,  last_editor_id,  organisation_id,  created_at,  updated_at,  property_id,  lot_id,  building_id,  level_id,  room_id,  zone_id,  type_dependent_attributes,  ancestry,  deleted_at,  manufacturer_type,  equipment_collection,  quantity,  facility_parent,  model_type_id,  ep_code,  external_id,  source_system,
          5. ActivityType:
             * id,  name,  user_id,  last_editor_id,  deleted_at,  created_at,  updated_at,  customer_account_id,
      parameters:
        - description: The ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAccountTranslation'
        required: true
      responses:
        '201':
          description: CustomerAccountTranslation successfully created
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccounttranslationsCreateTranslationResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccounttranslationsCreateTranslation401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccounttranslationsCreateTranslation403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccounttranslationsCreateTranslation422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccounttranslationsCreateTranslation500Response
  /v1/customer_account_translations/{customer_account_translation_id}:
    get:
      tags:
        - customer_account_translations
      summary: Shows a customer_account_translation
      operationId: Customeraccounttranslations_showTranslation
      security:
        - api_key: []
        - oauth:
            - customer_account_translation_read
      description: Shows a customer_account_translation
      parameters:
        - description: The ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the customer_account_translation to show
          name: customer_account_translation_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the customer_account_translation
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccounttranslationsShowTranslationResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccounttranslationsShowTranslation401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccounttranslationsShowTranslation403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccounttranslationsShowTranslation404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccounttranslationsShowTranslation422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccounttranslationsShowTranslation500Response
    put:
      tags:
        - customer_account_translations
      summary: Updates an customer_account_translation
      operationId: Customeraccounttranslations_updateTranslation
      security:
        - api_key: []
        - oauth:
            - customer_account_translation_write
      description: |
        # Description
        Updates an customer_account_translation
        # Allowed parent_type:
           * Building,  Building::Unit,  Property,  Facility,  CustomerAccountAttributeGroup,  ActivityType,  CustomerAccountCategory
        # Allowed languages:
           * de,  en,  gsw
        # Allowed field:
          1. Building:
             * id,  name,  custom_id,  comment,  street,  street_number,  city,  province,  country,  user_id,  organisation_id,  lot_id,  property_id,  last_editor_id,  created_at,  updated_at,  building_type_id,  zip_code,  latitude,  longitude,  year_of_construction,  gross_floor_area_in_sqm_din_277,  architect,  net_floor_area_in_sqm_din_277,  auxiliary_floor_area_in_sqm,  deleted_at,  dynamic_attribute_id,  customer_attributes_schema_id,  customer_attributes,  units_count,  customer_account_schema_id,  gross_floor_area_in_sqm_GIF,  parking_space,  old_roof_form,  external_id,  source_system,  gross_floor_area_in_sqm_sia_d_0165,  net_floor_area_in_sqm_sia_d_0165,  planned_monthly_rent,  number_of_floors,  last_refurbishment_at,  heating_type,  main_energy_provider,  floors_below_ground,  floors_above_ground,  stairwells,  main_energy_source,  parking_garage,  protective_area,  number_of_lifts,  facility_type,  institution_type,  deso_facility,  heating_used_energy,  kitchen_type,  objectphase,  region,  construction_project_category,  state_of_renovation,  roof_form,  number_of_windows,  user_intervention_window_number,  user_intervention_window_area,  fund_name,  own_use,  listed_building,  house_number,  address_suffix,  energy_certificate_type,  stored_energy_validity,  accounting_rules_applied,  energy_class,  year_of_construction_heat_generator,  air_conditioning,
          2. Building::Unit:
             * id,  building_id,  name,  comment,  last_editor_id,  organisation_id,  created_at,  updated_at,  tenant,  gross_floor_area_in_sqm_din_277,  net_floor_area_in_sqm_din_277,  building_unit_type_id,  user_id,  auxiliary_floor_area_in_sqm,  social_floor_area_in_sqm,  deleted_at,  owner,  dynamic_attribute_id,  customer_attributes_schema_id,  customer_attributes,  customer_account_schema_id,  gross_floor_area_in_sqm_GIF,  contract_id,  external_id,  source_system,  net_floor_area_in_sqm_sia_d_0165,  gross_floor_area_in_sqm_sia_d_0165,  market_rental_price,  planned_monthly_rent,  planned_operating_cost,  planned_total_rent,  planned_deposit,  number_of_rooms,  number_of_bedrooms,  number_of_bathrooms,  quality_of_available_features,  current_condition,  description,  description_of_features,  features,  heating_costs_in_operating_costs,  contracted_lease_base_rent,  contracted_lease_operating_costs,  contracted_lease_deposit,  floor,  group_home,
          3. Property:
             * id,  name,  comment,  created_at,  updated_at,  property_type_id,  custom_id,  user_id,  organisation_id,  last_editor_id,  zip_code,  city,  country,  deleted_at,  external_id,  source_system,  property_manager_id,
          4. Facility:
             * id,  name,  custom_id,  comment,  inventory_number,  serial_number,  year_of_construction,  last_inspection_at,  last_maintenance_at,  next_inspection_at,  next_maintenance_at,  latitude,  longitude,  manufacturer_id,  department_id,  facility_type_id,  user_id,  last_editor_id,  organisation_id,  created_at,  updated_at,  property_id,  lot_id,  building_id,  level_id,  room_id,  zone_id,  type_dependent_attributes,  ancestry,  deleted_at,  manufacturer_type,  equipment_collection,  quantity,  facility_parent,  model_type_id,  ep_code,  external_id,  source_system,
          5. ActivityType:
             * id,  name,  user_id,  last_editor_id,  deleted_at,  created_at,  updated_at,  customer_account_id,
      parameters:
        - description: The ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the customer_account_translation to update
          name: customer_account_translation_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAccountTranslation'
        required: true
      responses:
        '200':
          description: CustomerAccountTranslation successfully updated
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccounttranslationsUpdateTranslationResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccounttranslationsUpdateTranslation401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccounttranslationsUpdateTranslation403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccounttranslationsUpdateTranslation404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccounttranslationsUpdateTranslation422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccounttranslationsUpdateTranslation500Response
    delete:
      tags:
        - customer_account_translations
      summary: >-
        Deletes the customer_account_translation within the current customer
        account.
      operationId: Customeraccounttranslations_deleteTranslation
      security:
        - api_key: []
        - oauth:
            - customer_account_translation_destroy
      description: >-
        Deletes the customer_account_translation within the current customer
        account. Account manager only🔒🔒
      parameters:
        - description: The ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the customer_account_translation to delete
          name: customer_account_translation_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: CustomerAccountTranslation successfully deleted
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccounttranslationsDeleteTranslationResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccounttranslationsDeleteTranslation401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccounttranslationsDeleteTranslation403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccounttranslationsDeleteTranslation404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccounttranslationsDeleteTranslation422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccounttranslationsDeleteTranslation500Response
  /v1/customer_account_attribute_groups:
    get:
      tags:
        - customer_account_attribute_groups
      summary: >-
        Returns all customer_account's translations within the given customer
        account
      operationId: Customeraccountattributegroups_getAllTranslations
      security:
        - api_key: []
        - oauth:
            - customer_account_attribute_group_read
      description: >-
        Returns all customer_account's translations within the given customer
        account
      parameters:
        - description: The ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: Filter by field
          name: search_field
          in: query
          schema:
            type: string
      responses:
        '200':
          description: >-
            Returns all customer_account' s translations within the given
            customer account
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountattributegroupsGetAllTranslationsResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountattributegroupsGetAllTranslations401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountattributegroupsGetAllTranslations403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountattributegroupsGetAllTranslations422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountattributegroupsGetAllTranslations500Response
    post:
      tags:
        - customer_account_attribute_groups
      summary: Creates a customer_account_attribute_group
      operationId: Customeraccountattributegroups_createGroup
      security:
        - api_key: []
        - oauth:
            - customer_account_attribute_group_write
      description: |
        # Description
        Creates a customer_account_attribute_group
        # Allowed parent_type:
           * building_unit,  building
      parameters:
        - description: The ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAccountAttributeGroup'
        required: true
      responses:
        '201':
          description: CustomerAccountAttributeGroup successfully created
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountattributegroupsCreateGroupResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountattributegroupsCreateGroup401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountattributegroupsCreateGroup403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountattributegroupsCreateGroup422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountattributegroupsCreateGroup500Response
  /v1/customer_account_attribute_groups/{customer_account_attribute_group_id}:
    get:
      tags:
        - customer_account_attribute_groups
      summary: Shows a customer_account_attribute_group
      operationId: Customeraccountattributegroups_showGroup
      security:
        - api_key: []
        - oauth:
            - customer_account_attribute_group_read
      description: Shows a customer_account_attribute_group
      parameters:
        - description: The ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the customer_account_attribute_group to show
          name: customer_account_attribute_group_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the customer_account_attribute_group
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountattributegroupsShowGroupResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountattributegroupsShowGroup401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountattributegroupsShowGroup403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountattributegroupsShowGroup404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountattributegroupsShowGroup422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountattributegroupsShowGroup500Response
    put:
      tags:
        - customer_account_attribute_groups
      summary: Updates an customer_account_attribute_group
      operationId: Customeraccountattributegroups_update
      security:
        - api_key: []
        - oauth:
            - customer_account_attribute_group_write
      description: |
        # Description
        Updates an customer_account_attribute_group
        # Allowed parent_type:
           * building_unit,  building
      parameters:
        - description: The ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the customer_account_attribute_group to update
          name: customer_account_attribute_group_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAccountAttributeGroup'
        required: true
      responses:
        '200':
          description: CustomerAccountAttributeGroup successfully updated
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountattributegroupsUpdateResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountattributegroupsUpdate401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountattributegroupsUpdate403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountattributegroupsUpdate404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountattributegroupsUpdate422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountattributegroupsUpdate500Response
    delete:
      tags:
        - customer_account_attribute_groups
      summary: >-
        Deletes the customer_account_attribute_group within the current customer
        account.
      operationId: Customeraccountattributegroups_deleteGroup
      security:
        - api_key: []
        - oauth:
            - customer_account_attribute_group_destroy
      description: >-
        Deletes the customer_account_attribute_group within the current customer
        account. Account manager only🔒🔒
      parameters:
        - description: The ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the customer_account_attribute_group to delete
          name: customer_account_attribute_group_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: CustomerAccountAttributeGroup successfully deleted
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountattributegroupsDeleteGroupResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountattributegroupsDeleteGroup401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountattributegroupsDeleteGroup403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountattributegroupsDeleteGroup404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountattributegroupsDeleteGroup422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountattributegroupsDeleteGroup500Response
  /v1/ep_code_combinations:
    get:
      tags:
        - ep_code_combinations
      summary: Returns all ep_code_combinations
      operationId: Epcodecombinations_getAll
      security:
        - api_key: []
        - oauth:
            - ep_code_combination_read
      description: >-
        Returns all ep_code_combinations, Organisation manager, building member
        🔒
      responses:
        '200':
          description: Returns all ep_code_combinations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EpcodecombinationsGetAllResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EpcodecombinationsGetAll401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EpcodecombinationsGetAll403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EpcodecombinationsGetAll422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EpcodecombinationsGetAll500Response'
  /v1/credentials/me:
    get:
      tags:
        - credentials
      summary: Returns user if logged via OAuth
      operationId: Credentials_getUserByOAuth
      security:
        - api_key: []
        - oauth:
            - credential_read
      description: |
        # Description
        Returns user if logged via OAuth
      responses:
        '200':
          description: Returns logged user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsGetUserByOAuthResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsGetUserByOAuth401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsGetUserByOAuth403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsGetUserByOAuth422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsGetUserByOAuth500Response'
  /v1/credentials/auth:
    post:
      tags:
        - credentials
      summary: Returns EstateOs token
      operationId: Credentials_returnToken
      security:
        - api_key: []
        - oauth:
            - credential_write
      description: |
        # Description
        Returns EstateOs token if the logged in user has permissions
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns logged user jwt token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsReturnTokenResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsReturnToken401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsReturnToken403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsReturnToken422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialsReturnToken500Response'
  /v1/dashboard_configs:
    post:
      tags:
        - dashboard_configs
      summary: Creates a dashboard_config within the current organisation
      operationId: Dashboardconfigs_createNewConfig
      security:
        - api_key: []
        - oauth:
            - dashboard_config_write
      description: Creates a dashboard_config within the current organisation
      parameters:
        - description: The ID of the customer_account to show
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardConfigCreate'
        required: true
      responses:
        '201':
          description: DashboardConfig successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardconfigsCreateNewConfigResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DashboardconfigsCreateNewConfig401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DashboardconfigsCreateNewConfig403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DashboardconfigsCreateNewConfig422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DashboardconfigsCreateNewConfig500Response
  /v1/dashboard_configs/{customer_account_id}:
    get:
      tags:
        - dashboard_configs
      summary: Shows the dashboard_configs
      operationId: Dashboardconfigs_show
      security:
        - api_key: []
        - oauth:
            - dashboard_config_read
      description: Shows the dashboard_configs
      parameters:
        - description: The ID of the customer_account to show
          name: customer_account_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the dashboard_configs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardconfigsShowResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardconfigsShow401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardconfigsShow403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardconfigsShow404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardconfigsShow422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardconfigsShow500Response'
    put:
      tags:
        - dashboard_configs
      summary: Updates an dashboard_config within the current organisation.
      operationId: Dashboardconfigs_updateWithinOrganisation
      security:
        - api_key: []
        - oauth:
            - dashboard_config_write
      description: >-
        Updates an dashboard_config within the current organisation.
        Organisation manager only 🔒
      parameters:
        - description: The ID of the customer account
          name: customer_account_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardConfig'
        required: true
      responses:
        '200':
          description: DashboardConfig successfully updated
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DashboardconfigsUpdateWithinOrganisationResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DashboardconfigsUpdateWithinOrganisation401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DashboardconfigsUpdateWithinOrganisation403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DashboardconfigsUpdateWithinOrganisation404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DashboardconfigsUpdateWithinOrganisation422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DashboardconfigsUpdateWithinOrganisation500Response
    delete:
      tags:
        - dashboard_configs
      summary: Marks a dashboard_config as deleted within the current organisation.
      operationId: Dashboardconfigs_markAsDeleted
      security:
        - api_key: []
        - oauth:
            - dashboard_config_destroy
      description: >-
        Marks a dashboard_config as deleted within the current organisation.
        Organisation manager only 🔒
      parameters:
        - description: The ID of the customer account
          name: customer_account_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: DashboardConfig successfully marked as deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardconfigsMarkAsDeletedResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardconfigsMarkAsDeleted401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardconfigsMarkAsDeleted403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardconfigsMarkAsDeleted404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardconfigsMarkAsDeleted422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardconfigsMarkAsDeleted500Response'
  /v1/dashboards:
    get:
      tags:
        - dashboards
      summary: Return customer account dashboards
      operationId: Dashboards_getCustomerAccount
      security:
        - api_key: []
        - oauth:
            - dashboard_read
      description: Return customer account dashboards
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: |
            Filter dashboard with filters <br>
            { key1: "value1", key2: "value2" }
          name: filters
          in: query
          required: false
          schema:
            type: string
        - description: Locale
          name: locale
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Return customer account dashboards
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardsGetCustomerAccountResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardsGetCustomerAccount401Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardsGetCustomerAccount500Response'
  /v1/dashboards/{dashboard_id}:
    get:
      tags:
        - dashboards
      summary: Shows a dashboard
      operationId: Dashboards_showDashboard
      security:
        - api_key: []
        - oauth:
            - dashboard_read
      description: |
        # Description
        Updates a dashboard Dashboard manager🔒
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the dashboard
          name: dashboard_id
          in: path
          required: true
          schema:
            type: integer
        - description: |
            Filter dashboard with filters <br>
            { key1: 'value1', key2: 'value2' }
          name: filters
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Dashboard successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardsShowDashboardResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardsShowDashboard401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardsShowDashboard403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardsShowDashboard422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardsShowDashboard500Response'
      type: string
      enum:
        - inspection
        - maintenance
        - disturbance
        - overhaul
        - other
    put:
      tags:
        - dashboards
      summary: Updates a dashboard
      operationId: Dashboards_updateDashboard
      security:
        - api_key: []
        - oauth:
            - dashboard_write
      description: |
        # Description
        Updates a dashboard Dashboard manager🔒
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the dashboard
          name: dashboard_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardUpdate'
        required: true
      responses:
        '200':
          description: Dashboard successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardsUpdateDashboardResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardsUpdateDashboard401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardsUpdateDashboard403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardsUpdateDashboard422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardsUpdateDashboard500Response'
  /v1/dashboards/synchronise:
    get:
      tags:
        - dashboards
      summary: Synchronise dashboards
      operationId: Dashboards_synchronise
      security:
        - api_key: []
        - oauth:
            - dashboard_read
      description: Synchronise dashboards
      parameters:
        - description: The ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return status ok
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardsSynchroniseResponse'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardsSynchronise403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardsSynchronise404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardsSynchronise422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardsSynchronise500Response'
  /v1/dashboards/session_expire:
    get:
      tags:
        - dashboards
      summary: Expire all sessions for the current user
      operationId: Dashboards_expireSessions
      security:
        - api_key: []
        - oauth:
            - dashboard_read
      description: Expire all sessions for the current user
      parameters:
        - description: The ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: The locale of the user
          name: locale
          in: query
          required: true
          schema:
            type: string
            enum:
              - en
              - de
      responses:
        '200':
          description: Return status ok
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardsExpireSessionsResponse'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardsExpireSessions403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardsExpireSessions404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardsExpireSessions422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardsExpireSessions500Response'
  /v1/dashboards/{dashboard_id}/copy:
    put:
      tags:
        - dashboards
      summary: Copy a dashboard on looker
      operationId: Dashboards_copyOnFolder
      security:
        - api_key: []
        - oauth:
            - dashboard_write
      description: >
        # Description

        Copy a dashboard on looker on the folder specified for the current
        account.
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the dashboard
          name: dashboard_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Dashboard successfully copied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardsCopyOnFolderResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardsCopyOnFolder401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardsCopyOnFolder403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardsCopyOnFolder422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardsCopyOnFolder500Response'
  /v1/dashboards/order:
    put:
      tags:
        - dashboards
      summary: Order dashboards
      operationId: Dashboards_orderDashboards
      security:
        - api_key: []
        - oauth:
            - dashboard_write
      description: |
        # Description
        Order dashboards by providing dashboard ids in array
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DashboardOrderUpdate'
        required: true
      responses:
        '200':
          description: Return customer account dashboards
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardsOrderDashboardsResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardsOrderDashboards401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardsOrderDashboards403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardsOrderDashboards404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardsOrderDashboards422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardsOrderDashboards500Response'
  /v1/dashboards/explore:
    get:
      tags:
        - dashboards
      summary: Return customer account explore with url
      operationId: Dashboards_returnCustomerAccountExploreWithUrl
      security:
        - api_key: []
        - oauth:
            - dashboard_read
      description: Return customer account explore with url
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: |
            Filter dashboard with filters <br>
            { key1: 'value1', key2: 'value2' }
          name: filters
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Returns the explore
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DashboardsReturnCustomerAccountExploreWithUrlResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DashboardsReturnCustomerAccountExploreWithUrl401Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/DashboardsReturnCustomerAccountExploreWithUrl500Response
  /v1/apps:
    get:
      tags:
        - apps
      summary: Returns all apps
      operationId: Apps_getAllApps
      security:
        - api_key: []
        - oauth:
            - app_read
      description: Returns all apps, Admin, Supervisor 🔒
      parameters:
        - description: The ID of the current customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns all apps
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsGetAllAppsResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsGetAllApps401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsGetAllApps403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsGetAllApps422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsGetAllApps500Response'
    post:
      tags:
        - apps
      summary: Creates a app
      operationId: Apps_createApp
      security:
        - api_key: []
        - oauth:
            - app_write
      description: Creates a app, Admin, Supervisor 🔒
      parameters:
        - description: The ID of the current_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppCreate'
        required: true
      responses:
        '201':
          description: App successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsCreateAppResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsCreateApp401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsCreateApp403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsCreateApp422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsCreateApp500Response'
  /v1/apps/{app_id}:
    get:
      tags:
        - apps
      summary: Shows a app
      operationId: Apps_showApp
      security:
        - api_key: []
        - oauth:
            - app_read
      description: Shows a app, Admin, Supervisor 🔒
      parameters:
        - description: The ID of the current_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the app to show
          name: app_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the app
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsShowAppResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsShowApp401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsShowApp403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsShowApp404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsShowApp422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsShowApp500Response'
    put:
      tags:
        - apps
      summary: Updates a app
      operationId: Apps_updateApp
      security:
        - api_key: []
        - oauth:
            - app_write
      description: Updates a app, Admin, Supervisor 🔒
      parameters:
        - description: The ID of the current_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the app to update
          name: app_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/App'
        required: true
      responses:
        '200':
          description: App successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsUpdateAppResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsUpdateApp401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsUpdateApp403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsUpdateApp422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsUpdateApp500Response'
    delete:
      tags:
        - apps
      summary: Deletes the app
      operationId: Apps_deleteApp
      security:
        - api_key: []
        - oauth:
            - app_destroy
      description: Deletes the app, Admin, Supervisor 🔒
      parameters:
        - description: The ID of the current_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the app to delete
          name: app_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: App successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsDeleteAppResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsDeleteApp401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsDeleteApp403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsDeleteApp404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsDeleteApp422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsDeleteApp500Response'
  /v1/app_categories:
    get:
      tags:
        - app_categories
      summary: Returns all app's categories
      operationId: Appcategories_getAllCategories
      security:
        - api_key: []
        - oauth:
            - app_category_read
      description: Returns all app's categories, Admin, Supervisor 🔒
      parameters:
        - description: The ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns all app's categories
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppcategoriesGetAllCategoriesResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppcategoriesGetAllCategories401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppcategoriesGetAllCategories403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppcategoriesGetAllCategories422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppcategoriesGetAllCategories500Response'
  /v1/app_subscriptions:
    get:
      tags:
        - app_subscriptions
      summary: Returns all app's subscriptions
      operationId: Appsubscriptions_getAllSubs
      security:
        - api_key: []
        - oauth:
            - app_subscription_read
      description: Admin, Supervisor 🔒
      parameters:
        - description: The ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns all app's subscriptions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsubscriptionsGetAllSubsResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsubscriptionsGetAllSubs401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsubscriptionsGetAllSubs403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsubscriptionsGetAllSubs422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsubscriptionsGetAllSubs500Response'
    post:
      tags:
        - app_subscriptions
      summary: Creates an app's subscription.
      operationId: Appsubscriptions_createSubscription
      security:
        - api_key: []
        - oauth:
            - app_subscription_write
      description: |
        # Description
        • Creates an app's subscription.
        • Name of app's subscription can be Free Tier, Premium
        • The periodicity can be month, year
      parameters:
        - description: The ID of the current_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppSubscriptionCreate'
        required: true
      responses:
        '201':
          description: App's subscription successfully created
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AppsubscriptionsCreateSubscriptionResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AppsubscriptionsCreateSubscription401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AppsubscriptionsCreateSubscription403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AppsubscriptionsCreateSubscription422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AppsubscriptionsCreateSubscription500Response
  /v1/app_subscriptions/{app_subscription_id}:
    get:
      tags:
        - app_subscriptions
      summary: Shows an app's subscription
      operationId: Appsubscriptions_showSubscription
      security:
        - api_key: []
        - oauth:
            - app_subscription_read
      description: Shows an app's subscription, Admin, Supervisor 🔒
      parameters:
        - description: The ID of the current_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the subscription to show
          name: app_subscription_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the app's subscription
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsubscriptionsShowSubscriptionResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AppsubscriptionsShowSubscription401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AppsubscriptionsShowSubscription403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AppsubscriptionsShowSubscription404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AppsubscriptionsShowSubscription422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AppsubscriptionsShowSubscription500Response
    put:
      tags:
        - app_subscriptions
      summary: Updates a app's subscription
      operationId: Appsubscriptions_updateSubscription
      security:
        - api_key: []
        - oauth:
            - app_subscription_write
      description: |
        # Description
        • Updates an app's subscription.
        • Name of app's subscription can be Free Tier, Premium
        • The periodicity can be month, year
      parameters:
        - description: The ID of the current_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the subscription to update
          name: app_subscription_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppSubscription'
        required: true
      responses:
        '200':
          description: App successfully updated
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AppsubscriptionsUpdateSubscriptionResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AppsubscriptionsUpdateSubscription401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AppsubscriptionsUpdateSubscription403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AppsubscriptionsUpdateSubscription422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AppsubscriptionsUpdateSubscription500Response
    delete:
      tags:
        - app_subscriptions
      summary: Deletes the subscription
      operationId: Appsubscriptions_deleteSubscription
      security:
        - api_key: []
        - oauth:
            - app_subscription_destroy
      description: Deletes the subscription, Admin, Supervisor 🔒
      parameters:
        - description: The ID of the current_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the subscription to delete
          name: app_subscription_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: App's subscription successfully deleted
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AppsubscriptionsDeleteSubscriptionResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AppsubscriptionsDeleteSubscription401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AppsubscriptionsDeleteSubscription403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AppsubscriptionsDeleteSubscription404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AppsubscriptionsDeleteSubscription422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AppsubscriptionsDeleteSubscription500Response
  /v1/app_configs:
    get:
      tags:
        - app_configs
      summary: Returns all app's configs.
      operationId: Appconfigs_getAllConfigs
      security:
        - api_key: []
        - oauth:
            - app_config_read
      description: Returns all app's configs, Admin, Supervisor 🔒
      parameters:
        - description: The ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the app_subscription
          name: app_subscription_id
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Returns all app's configs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppconfigsGetAllConfigsResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppconfigsGetAllConfigs401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppconfigsGetAllConfigs403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppconfigsGetAllConfigs422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppconfigsGetAllConfigs500Response'
    post:
      tags:
        - app_configs
      summary: Creates an app's config.
      operationId: Appconfigs_createConfig
      security:
        - api_key: []
        - oauth:
            - app_config_write
      description: Creates an app's config. Admin, Supervisor 🔒
      parameters:
        - description: The ID of the current_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppConfigCreate'
        required: true
      responses:
        '201':
          description: App's config successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppconfigsCreateConfigResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppconfigsCreateConfig401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppconfigsCreateConfig403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppconfigsCreateConfig422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppconfigsCreateConfig500Response'
  /v1/app_configs/{app_config_id}:
    get:
      tags:
        - app_configs
      summary: Shows an app's config.
      operationId: Appconfigs_showConfig
      security:
        - api_key: []
        - oauth:
            - app_config_read
      description: Shows an app's config. Admin, Supervisor 🔒
      parameters:
        - description: The ID of the current_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the config to show
          name: app_config_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the app's config
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppconfigsShowConfigResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppconfigsShowConfig401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppconfigsShowConfig403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppconfigsShowConfig404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppconfigsShowConfig422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppconfigsShowConfig500Response'
    put:
      tags:
        - app_configs
      summary: Updates a app's config.
      operationId: Appconfigs_updateConfig
      security:
        - api_key: []
        - oauth:
            - app_config_write
      description: Updates a app's config. Admin, Supervisor 🔒
      parameters:
        - description: The ID of the current_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the config to update
          name: app_config_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppConfig'
        required: true
      responses:
        '200':
          description: App config successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppconfigsUpdateConfigResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppconfigsUpdateConfig401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppconfigsUpdateConfig403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppconfigsUpdateConfig422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppconfigsUpdateConfig500Response'
    delete:
      tags:
        - app_configs
      summary: Deletes the config.
      operationId: Appconfigs_deleteConfig
      security:
        - api_key: []
        - oauth:
            - app_config_destroy
      description: Deletes the config. Admin, Supervisor 🔒
      parameters:
        - description: The ID of the current_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the config to delete
          name: app_config_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: App's config successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppconfigsDeleteConfigResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppconfigsDeleteConfig401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppconfigsDeleteConfig403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppconfigsDeleteConfig404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppconfigsDeleteConfig422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppconfigsDeleteConfig500Response'
  /v1/apps/{app_id}/memberships:
    post:
      tags:
        - apps
      summary: Creates a app membership to category
      operationId: Apps_createMembershipToCategory
      security:
        - api_key: []
        - oauth:
            - app_write
      description: Creates a app membership to category, Admin, Supervisor 🔒
      parameters:
        - description: The ID of the current_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the app membership to create
          name: app_category_membership_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppCategoryMembershipShow'
        required: true
      responses:
        '201':
          description: App Category Membership successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsCreateMembershipToCategoryResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsCreateMembershipToCategory401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsCreateMembershipToCategory403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsCreateMembershipToCategory422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsCreateMembershipToCategory500Response'
    delete:
      tags:
        - apps
      summary: Deletes the app category membership
      operationId: Apps_deleteCategoryMembership
      security:
        - api_key: []
        - oauth:
            - app_destroy
      description: Deletes the app category membership, Admin, Supervisor 🔒
      parameters:
        - description: The ID of the current_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the app category membership to delete
          name: app_category_membership_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: App category membership successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsDeleteCategoryMembershipResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsDeleteCategoryMembership401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsDeleteCategoryMembership403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsDeleteCategoryMembership404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsDeleteCategoryMembership422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppsDeleteCategoryMembership500Response'
  /v1/app_data_repositories:
    get:
      tags:
        - app_data_repositories
      summary: Returns all subscription's data_repositories.
      operationId: Appdatarepositories_getAllDataRepositories
      security:
        - api_key: []
        - oauth:
            - app_data_repository_read
      description: Returns all subscription's data_repositories. Admin, Supervisor 🔒
      parameters:
        - description: The ID of the current customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the app_subscription
          name: app_subscription_id
          in: query
          required: false
          schema:
            type: integer
        - description: The ID of the parent
          name: parent_id
          in: query
          required: false
          schema:
            type: integer
        - description: The Type of the parent
          name: parent_type
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Returns all app's data_repositories
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AppdatarepositoriesGetAllDataRepositoriesResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AppdatarepositoriesGetAllDataRepositories401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AppdatarepositoriesGetAllDataRepositories403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AppdatarepositoriesGetAllDataRepositories422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AppdatarepositoriesGetAllDataRepositories500Response
    post:
      tags:
        - app_data_repositories
      summary: Creates a app_data_repository
      operationId: Appdatarepositories_createNewRepository
      security:
        - api_key: []
        - oauth:
            - app_data_repository_write
      description: Creates a app_data_repository. Admin, Supervisor 🔒
      parameters:
        - description: The ID of the current_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppDataRepositoryCreate'
        required: true
      responses:
        '201':
          description: App's data_repository successfully created
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AppdatarepositoriesCreateNewRepositoryResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AppdatarepositoriesCreateNewRepository401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AppdatarepositoriesCreateNewRepository403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AppdatarepositoriesCreateNewRepository422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AppdatarepositoriesCreateNewRepository500Response
  /v1/app_data_repositories/latest_version:
    get:
      tags:
        - app_data_repositories
      summary: Shows an app_data_repository.
      operationId: Appdatarepositories_showRepository
      security:
        - api_key: []
        - oauth:
            - app_data_repository_read
      description: Shows an app_data_repository. Admin, Supervisor 🔒
      parameters:
        - description: The ID of the current_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the parent
          name: parent_id
          in: query
          required: false
          schema:
            type: integer
        - description: The Type of the parent
          name: parent_type
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Returns the app_data_repository
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppdatarepositoriesShowRepositoryResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AppdatarepositoriesShowRepository401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AppdatarepositoriesShowRepository403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AppdatarepositoriesShowRepository404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AppdatarepositoriesShowRepository422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AppdatarepositoriesShowRepository500Response
  /v1/app_data_repositories/{app_data_repository_id}:
    put:
      tags:
        - app_data_repositories
      summary: Updates an app_data_repository
      operationId: Appdatarepositories_updateRepository
      security:
        - api_key: []
        - oauth:
            - app_data_repository_write
      description: Updates an app_data_repository. Admin, Supervisor 🔒
      parameters:
        - description: The ID of the current_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the app_data_repository
          name: app_data_repository_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppDataRepositoryUpdate'
        required: true
      responses:
        '200':
          description: App's data_repository successfully updated
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AppdatarepositoriesUpdateRepositoryResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AppdatarepositoriesUpdateRepository401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AppdatarepositoriesUpdateRepository403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AppdatarepositoriesUpdateRepository422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AppdatarepositoriesUpdateRepository500Response
    delete:
      tags:
        - app_data_repositories
      summary: Deletes the app_data_repository.
      operationId: Appdatarepositories_deleteRepository
      security:
        - api_key: []
        - oauth:
            - app_data_repository_destroy
      description: Deletes the app_data_repository. Admin, Supervisor 🔒
      parameters:
        - description: The ID of the current_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the app_data_repository
          name: app_data_repository_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: App's data_repository successfully deleted
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AppdatarepositoriesDeleteRepositoryResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AppdatarepositoriesDeleteRepository401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AppdatarepositoriesDeleteRepository403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AppdatarepositoriesDeleteRepository404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AppdatarepositoriesDeleteRepository422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AppdatarepositoriesDeleteRepository500Response
  /v1/plans:
    get:
      tags:
        - plans
      summary: Returns all plans within the given building
      operationId: Plans_getAllInBuilding
      security:
        - api_key: []
        - oauth:
            - plan_read
      description: >-
        Returns all plans within the given building, Organisation manager,
        building member, plan_member, plan_manager 🔒
      parameters:
        - description: The ID of the building of the plan
          name: building_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns all plans within the given building
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlansGetAllInBuildingResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlansGetAllInBuilding401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlansGetAllInBuilding403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlansGetAllInBuilding422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlansGetAllInBuilding500Response'
    post:
      tags:
        - plans
      summary: Creates a plan
      operationId: Plans_createNewPlan
      security:
        - api_key: []
        - oauth:
            - plan_write
      description: >-
        Creates a plan, Organisation manager, building member, plan_member,
        plan_manager 🔒
      parameters:
        - description: The ID of the building of the plan
          name: building_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanCreate'
        required: true
      responses:
        '201':
          description: Plan successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlansCreateNewPlanResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlansCreateNewPlan401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlansCreateNewPlan403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlansCreateNewPlan422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlansCreateNewPlan500Response'
  /v1/plans/{plan_id}:
    get:
      tags:
        - plans
      summary: Shows a plan
      operationId: Plans_showPlan
      security:
        - api_key: []
        - oauth:
            - plan_read
      description: >-
        Shows a plan, Organisation manager, building member, plan_member,
        plan_manager 🔒
      parameters:
        - description: The ID of the building of the plan
          name: building_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the plan to show
          name: plan_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the plan
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlansShowPlanResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlansShowPlan401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlansShowPlan403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlansShowPlan404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlansShowPlan422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlansShowPlan500Response'
    put:
      tags:
        - plans
      summary: Updates a plan
      operationId: Plans_updatePlan
      security:
        - api_key: []
        - oauth:
            - plan_write
      description: >-
        Updates a plan, Organisation manager, building member, plan_member,
        plan_manager 🔒
      parameters:
        - description: The ID of the building of the plan
          name: building_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the plan to update
          name: plan_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Plan'
        required: true
      responses:
        '200':
          description: Plan successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlansUpdatePlanResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlansUpdatePlan401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlansUpdatePlan403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlansUpdatePlan422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlansUpdatePlan500Response'
    delete:
      tags:
        - plans
      summary: Deletes the plan within the current building
      operationId: Plans_deletePlanWithinBuilding
      security:
        - api_key: []
        - oauth:
            - plan_destroy
      description: >-
        Deletes the plan within the current building, Organisation manager,
        building member, plan_member, plan_manager 🔒
      parameters:
        - description: The ID of the building of the plan
          name: building_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the plan to delete
          name: plan_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Plan successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlansDeletePlanWithinBuildingResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlansDeletePlanWithinBuilding401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlansDeletePlanWithinBuilding403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlansDeletePlanWithinBuilding404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlansDeletePlanWithinBuilding422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlansDeletePlanWithinBuilding500Response'
  /v1/plan_configs:
    get:
      tags:
        - plan_configs
      summary: Returns all plan's configs.
      operationId: Planconfigs_getAllConfigs
      security:
        - api_key: []
        - oauth:
            - plan_config_read
      description: Returns all plan's configs. Admin, Supervisor 🔒
      parameters:
        - description: The ID of the parent
          name: parent_id
          in: query
          required: false
          schema:
            type: integer
        - description: |
            The type of the parent
              Allowed parent_types: ["Organisation", "Building", "Building::Unit"]
          name: parent_type
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Returns all plan's configs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanconfigsGetAllConfigsResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanconfigsGetAllConfigs401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanconfigsGetAllConfigs403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanconfigsGetAllConfigs422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanconfigsGetAllConfigs500Response'
  /v1/plan_versions:
    post:
      tags:
        - plan_versions
      summary: Creates a plan
      operationId: Planversions_createPlanVersion
      security:
        - api_key: []
        - oauth:
            - plan_version_write
      description: >-
        Creates a plan, organisation_manager, building_member, plan_member,
        plan_manager 🔒
      parameters:
        - description: The ID of the plan of the plan version
          name: plan_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanVersionCreate'
        required: true
      responses:
        '201':
          description: Plan Version successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanversionsCreatePlanVersionResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanversionsCreatePlanVersion401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanversionsCreatePlanVersion403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanversionsCreatePlanVersion422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanversionsCreatePlanVersion500Response'
  /v1/plan_versions/{id}:
    put:
      tags:
        - plan_versions
      summary: Updates a plan version
      operationId: Planversions_updateVersion
      security:
        - api_key: []
        - oauth:
            - plan_version_write
      description: >-
        Updates a plan version, organisation_manager, building_member,
        plan_member, plan_manager 🔒
      parameters:
        - description: The ID of the plan of the plan version
          name: plan_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the plan version to update
          name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlanVersionUpdate'
        required: true
      responses:
        '200':
          description: Plan Version successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanversionsUpdateVersionResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanversionsUpdateVersion401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanversionsUpdateVersion403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanversionsUpdateVersion422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlanversionsUpdateVersion500Response'
    delete:
      tags:
        - plan_versions
      summary: Deletes the plan version within the current plan
      operationId: Planversions_deleteWithinCurrentPlan
      security:
        - api_key: []
        - oauth:
            - plan_version_destroy
      description: >-
        Deletes the plan version within the current plan, organisation_manager,
        building_member, plan_member, plan_manager 🔒
      parameters:
        - description: The ID of the plan of the version
          name: plan_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the plan version to delete
          name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Plan Version successfully deleted
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PlanversionsDeleteWithinCurrentPlanResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PlanversionsDeleteWithinCurrentPlan401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PlanversionsDeleteWithinCurrentPlan403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PlanversionsDeleteWithinCurrentPlan404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PlanversionsDeleteWithinCurrentPlan422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PlanversionsDeleteWithinCurrentPlan500Response
  /v1/organisations:
    get:
      tags:
        - organisations
      summary: >-
        Returns all organisations the authenticated user is member of including
        her membership role within each organisation
      operationId: Organisations_listMemberRoles
      security:
        - api_key: []
        - oauth:
            - organisation_read
      description: >
        Returns all organisations the authenticated user is member of including
        her membership role within each organisation
      parameters:
        - description: The ID customer account to filter the users.
          name: customer_account_id
          in: query
          required: false
          schema:
            type: string
        - description: The page to paginate the users.
          name: page
          in: query
          required: false
          schema:
            type: string
        - description: The number of users for a page
          name: per_page
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Returns all organisations the authenticated user is member of
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationsListMemberRolesResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationsListMemberRoles401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationsListMemberRoles403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationsListMemberRoles422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationsListMemberRoles500Response'
    post:
      tags:
        - organisations
      summary: Creates a organisation of the user for a customer account
      operationId: Organisations_createUserForCustomer
      security:
        - api_key: []
        - oauth:
            - organisation_write
      description: |
        Creates a organisation of the user for a customer account
      parameters:
        - description: The ID customer account of organisation.
          name: customer_account_id
          in: query
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationCreate'
        required: true
      responses:
        '200':
          description: Creates an organisation of the user for a customer account
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganisationsCreateUserForCustomerResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganisationsCreateUserForCustomer401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganisationsCreateUserForCustomer403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganisationsCreateUserForCustomer422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganisationsCreateUserForCustomer500Response
  /v1/organisations/{organisation_id}:
    put:
      tags:
        - organisations
      summary: Updates an organisation.
      operationId: Organisations_updateOrganisation
      security:
        - api_key: []
        - oauth:
            - organisation_write
      description: Updates an organisation. Organisation manager only 🔒
      parameters:
        - description: The ID of the organisation to update
          name: organisation_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organisation'
        required: true
      responses:
        '200':
          description: Organisation successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationsUpdateOrganisationResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganisationsUpdateOrganisation401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganisationsUpdateOrganisation403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganisationsUpdateOrganisation404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganisationsUpdateOrganisation422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganisationsUpdateOrganisation500Response
    delete:
      tags:
        - organisations
      summary: Deletes the organisation.
      operationId: Organisations_deleteOrganisation
      security:
        - api_key: []
        - oauth:
            - organisation_destroy
      description: Deletes the organisation. Admin only 🔒
      parameters:
        - description: The ID of the organisation to delete
          name: organisation_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Organisation successfully marked as deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationsDeleteOrganisationResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganisationsDeleteOrganisation401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganisationsDeleteOrganisation403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganisationsDeleteOrganisation404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganisationsDeleteOrganisation422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganisationsDeleteOrganisation500Response
  /v1/organisation_configs:
    post:
      tags:
        - organisation_configs
      summary: Creates a config in an organisation for a user.
      operationId: Organisationconfigs_createConfigForUser
      security:
        - api_key: []
        - oauth:
            - organisation_config_write
      description: >-
        Creates a config in an organisation for a user. Organisation manager
        only 🔒
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
      requestBody:
        $ref: '#/components/requestBodies/OrganisationConfigCreate'
      responses:
        '201':
          description: Config successfully created
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganisationconfigsCreateConfigForUserResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganisationconfigsCreateConfigForUser401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganisationconfigsCreateConfigForUser403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganisationconfigsCreateConfigForUser422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganisationconfigsCreateConfigForUser500Response
  /v1/organisation_configs/{organisation_config_id}:
    get:
      tags:
        - organisation_configs
      summary: Returns the config for the current organisation of the user.
      operationId: Organisationconfigs_getConfig
      security:
        - api_key: []
        - oauth:
            - organisation_config_read
      description: >-
        Returns the config for the current organisation of the user.
        Organisation manager only 🔒
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - description: ID of the organisation config
          name: organisation_config_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns all configs within the given organisation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationconfigsGetConfigResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationconfigsGetConfig401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationconfigsGetConfig403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationconfigsGetConfig422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationconfigsGetConfig500Response'
    put:
      tags:
        - organisation_configs
      summary: Update a configs in an organisation for a user.
      operationId: Organisationconfigs_updateUserConfig
      security:
        - api_key: []
        - oauth:
            - organisation_config_write
      description: >-
        Update a configs in an organisation for a user. Organisation manager
        only 🔒
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - description: ID of the organisation config
          name: organisation_config_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/OrganisationConfigCreate'
      responses:
        '201':
          description: Membership successfully created
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganisationconfigsUpdateUserConfigResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganisationconfigsUpdateUserConfig401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganisationconfigsUpdateUserConfig403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganisationconfigsUpdateUserConfig422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganisationconfigsUpdateUserConfig500Response
    delete:
      tags:
        - organisation_configs
      summary: Deletes the organisation configs.
      operationId: Organisationconfigs_delete
      security:
        - api_key: []
        - oauth:
            - organisation_config_destroy
      description: Deletes the organisation configs. Organisation manager only 🔒
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - description: ID of the organisation config to delete
          name: organisation_config_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Config successfully marked as deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationconfigsDeleteResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationconfigsDelete401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationconfigsDelete403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationconfigsDelete404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationconfigsDelete422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationconfigsDelete500Response'
  /v1/organisation_memberships:
    get:
      tags:
        - organisation_memberships
      summary: Returns all memberships within the given organisation.
      operationId: Organisationmemberships_getAll
      security:
        - api_key: []
        - oauth:
            - organisation_membership_read
      description: >-
        Returns all memberships within the given organisation. Organisation
        manager only 🔒
      parameters:
        - description: ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the organisation
          name: current_organisation_id
          in: query
          required: false
          schema:
            type: integer
        - description: ID of the user
          name: user_id
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Returns all memberships within the given organisation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationmembershipsGetAllResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationmembershipsGetAll401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationmembershipsGetAll403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationmembershipsGetAll422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationmembershipsGetAll500Response'
    post:
      tags:
        - organisation_memberships
      summary: Creates a membership in an organisation for a user.
      operationId: Organisationmemberships_createUserMembership
      security:
        - api_key: []
        - oauth:
            - organisation_membership_write
      description: >-
        Creates a membership in an organisation for a user. Organisation manager
        only 🔒
      parameters:
        - description: ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationMembershipCreate'
        required: true
      responses:
        '201':
          description: Membership successfully created
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganisationmembershipsCreateUserMembershipResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganisationmembershipsCreateUserMembership401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganisationmembershipsCreateUserMembership403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganisationmembershipsCreateUserMembership422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganisationmembershipsCreateUserMembership500Response
  /v1/organisation_memberships/{organisations_membership_id}:
    put:
      tags:
        - organisation_memberships
      summary: Updates the organisation membership.
      operationId: Organisationmemberships_updateMembership
      security:
        - api_key: []
        - oauth:
            - organisation_membership_write
      description: Updates the organisation membership. Organisation manager only 🔒
      parameters:
        - description: ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the organisation membership to update
          name: organisations_membership_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationMembershipUpdate'
        required: true
      responses:
        '200':
          description: Organisation membership successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationMembershipUpdate'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganisationmembershipsUpdateMembershipResponse
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganisationmembershipsUpdateMembership403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganisationmembershipsUpdateMembership422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganisationmembershipsUpdateMembership500Response
    delete:
      tags:
        - organisation_memberships
      summary: Deletes the organisation membership.
      operationId: Organisationmemberships_deleteMembership
      security:
        - api_key: []
        - oauth:
            - organisation_membership_destroy
      description: Deletes the organisation membership. Organisation manager only 🔒
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the organisation membership to delete
          name: organisations_membership_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Membership successfully marked as deleted
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganisationmembershipsDeleteMembershipResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganisationmembershipsDeleteMembership401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganisationmembershipsDeleteMembership403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganisationmembershipsDeleteMembership404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganisationmembershipsDeleteMembership422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OrganisationmembershipsDeleteMembership500Response
  /v1/customer_accounts/{id}/time_attribute_schema:
    put:
      tags:
        - customer_accounts
      summary: Updates a customer_account's time_attribute_schema.
      operationId: Customeraccounts_updateTimeAttributeSchema
      security:
        - api_key: []
        - oauth:
            - customer_account_write
      description: >-
        Updates a customer account's time_attribute_schema. Account membership
        only🔒🔒
      parameters:
        - description: ID of the customer account
          name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAccount'
        required: true
      responses:
        '200':
          description: Customer account's time_attribute_schema successfully updated
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountsUpdateTimeAttributeSchemaResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountsUpdateTimeAttributeSchema401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountsUpdateTimeAttributeSchema403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountsUpdateTimeAttributeSchema404Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountsUpdateTimeAttributeSchema500Response
  /v1/customer_accounts:
    get:
      tags:
        - customer_accounts
      summary: Gets all user's customer_accounts.
      operationId: Customeraccounts_getAllUserAccounts
      security:
        - api_key: []
        - oauth:
            - customer_account_read
      description: Gets all user's customer_accounts.
      responses:
        '200':
          description: Customer account
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountsGetAllUserAccountsResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountsGetAllUserAccounts401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountsGetAllUserAccounts403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountsGetAllUserAccounts404Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountsGetAllUserAccounts500Response
  /v1/customer_accounts/{id}:
    get:
      tags:
        - customer_accounts
      summary: Gets a customer_account.
      operationId: Customeraccounts_getCustomerAccount
      security:
        - api_key: []
        - oauth:
            - customer_account_read
      description: Gets a customer account
      parameters:
        - description: ID of the customer account
          name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Customer account
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountsGetCustomerAccountResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountsGetCustomerAccount401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountsGetCustomerAccount403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountsGetCustomerAccount404Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountsGetCustomerAccount500Response
  /v1/customer_attributes_schemas:
    get:
      tags:
        - customer_attributes_schemas
      summary: Returns all customer attributes schemas.
      operationId: Customerattributesschemas_getAll
      security:
        - api_key: []
        - oauth:
            - customer_attributes_schema_read
      description: Returns all customer attributes schemas. Account manager only🔒
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns all customer attributes schemas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerattributesschemasGetAllResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomerattributesschemasGetAll401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomerattributesschemasGetAll403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomerattributesschemasGetAll422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomerattributesschemasGetAll500Response
    post:
      tags:
        - customer_attributes_schemas
      summary: Creates a customer attributes schema.
      operationId: Customerattributesschemas_createSchema
      security:
        - api_key: []
        - oauth:
            - customer_attributes_schema_write
      description: >
        # Description

        Account manager only🔒🔒

        Creates a customer attributes schema. A created customer attributes
        schema can not be

        changed afterwards, but in case you use an existing name for the same
        attributes type the version field is

        incremented.
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAttributesSchemaCreate'
        required: true
      responses:
        '201':
          description: Customer attributes schema successfully created
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomerattributesschemasCreateSchemaResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomerattributesschemasCreateSchema401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomerattributesschemasCreateSchema403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomerattributesschemasCreateSchema422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomerattributesschemasCreateSchema500Response
  /v1/customer_attributes_schemas/{customer_attributes_schema_id}:
    get:
      tags:
        - customer_attributes_schemas
      summary: Shows a customer attributes schema.
      operationId: Customerattributesschemas_showSchema
      security:
        - api_key: []
        - oauth:
            - customer_attributes_schema_read
      description: Shows a customer attributes schema. Account manager only🔒🔒
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the customer attributes schema to show
          name: customer_attributes_schema_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns customer attributes schema
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomerattributesschemasShowSchemaResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomerattributesschemasShowSchema401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomerattributesschemasShowSchema403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomerattributesschemasShowSchema404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomerattributesschemasShowSchema422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomerattributesschemasShowSchema500Response
  /v1/customer_attributes_schema_memberships:
    get:
      tags:
        - customer_attributes_schema_memberships
      summary: Returns all customer attributes schema memberships.
      operationId: Customerattributesschemamemberships_getAll
      security:
        - api_key: []
        - oauth:
            - customer_attributes_schema_membership_read
      description: >-
        Returns all customer attributes schema memberships. Account manager
        only🔒🔒
      parameters:
        - description: IDs of organisations
          name: organisation_ids
          in: query
          required: true
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
      responses:
        '200':
          description: Returns all customer attributes schema memberships
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomerattributesschemamembershipsGetAllResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomerattributesschemamembershipsGetAll401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomerattributesschemamembershipsGetAll403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomerattributesschemamembershipsGetAll422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomerattributesschemamembershipsGetAll500Response
    post:
      tags:
        - customer_attributes_schema_memberships
      summary: Creates a customer attributes schema membership.
      operationId: Customerattributesschemamemberships_createMembership
      security:
        - api_key: []
        - oauth:
            - customer_attributes_schema_membership_write
      description: >
        # Description

        Account manager only🔒🔒

        Creates a customer attributes schema membership. For each organisation
        it is only possible to have a base

        customer attributes schema and its subsequent versions per attributes
        type.

        <br>

        Example:

        <table>
            <tbody>
                <tr>
                    <td>Organisation A</td>
                    <td>Schema with name "Schema A", attributes type "building" and version 1</td>
                </tr>
               <tr>
                    <td>Organisation A</td>
                    <td>Schema with name "Schema A", attributes type "building" and version 2</td>
                </tr>
               <tr>
                    <td>Organisation A</td>
                    <td>Schema with name "Schema A", attributes type "building_unit" and version 1</td>
                </tr>
            </tbody>
        </table>
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAttributesSchemaMembershipCreate'
        required: true
      responses:
        '201':
          description: Customer attributes schema membership successfully created
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomerattributesschemamembershipsCreateMembershipResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomerattributesschemamembershipsCreateMembership401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomerattributesschemamembershipsCreateMembership403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomerattributesschemamembershipsCreateMembership422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomerattributesschemamembershipsCreateMembership500Response
  /v1/customer_account_configs:
    get:
      tags:
        - customer_account_configs
      summary: Return customer account configuration of customer_account
      operationId: Customeraccountconfigs_getConfiguration
      security:
        - api_key: []
        - oauth:
            - customer_account_config_read
      description: Return customer account configuration of customer_account
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: Locale
          name: locale
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Return customer account configuration of customer_account
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountconfigsGetConfigurationResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountconfigsGetConfiguration401Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountconfigsGetConfiguration500Response
    post:
      tags:
        - customer_account_configs
      summary: Create customer account configuration.
      operationId: Customeraccountconfigs_createConfiguration
      security:
        - api_key: []
        - oauth:
            - customer_account_config_write
      description: Create customer account configuration. Account manager only🔒
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAccountConfigCreate'
        required: true
      responses:
        '200':
          description: Create customer account configuration
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountconfigsCreateConfigurationResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountconfigsCreateConfiguration401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountconfigsCreateConfiguration403Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountconfigsCreateConfiguration500Response
  /v1/customer_account_configs/{customer_account_config_id}:
    put:
      tags:
        - customer_account_configs
      summary: Updates a customer account configuration.
      operationId: Customeraccountconfigs_updateConfiguration
      security:
        - api_key: []
        - oauth:
            - customer_account_config_write
      description: Updates a customer account configuration. Account manager only🔒
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the customer account to update
          name: customer_account_config_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAccountConfigUpdate'
        required: true
      responses:
        '200':
          description: Customer account configuration successfully updated
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountconfigsUpdateConfigurationResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountconfigsUpdateConfiguration401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountconfigsUpdateConfiguration403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountconfigsUpdateConfiguration404Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountconfigsUpdateConfiguration500Response
  /v1/customer_account_schemas:
    get:
      tags:
        - customer_account_schemas
      summary: Returns all customer account schemas.
      operationId: Customeraccountschemas_getAll
      security:
        - api_key: []
        - oauth:
            - customer_account_schema_read
      description: Returns all customer account schemas. Account manager only🔒🔒
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns all customer account schemas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomeraccountschemasGetAllResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomeraccountschemasGetAll401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomeraccountschemasGetAll403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomeraccountschemasGetAll422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomeraccountschemasGetAll500Response'
    post:
      tags:
        - customer_account_schemas
      summary: Create a customer account schema.
      operationId: Customeraccountschemas_createNewSchema
      security:
        - api_key: []
        - oauth:
            - customer_account_schema_write
      description: Create a customer account schema. Account manager only🔒🔒
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAccountSchema'
        required: true
      responses:
        '201':
          description: Customer account schema successfully created
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountschemasCreateNewSchemaResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountschemasCreateNewSchema401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountschemasCreateNewSchema403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountschemasCreateNewSchema422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountschemasCreateNewSchema500Response
  /v1/customer_account_schemas/{customer_account_schema_id}:
    get:
      tags:
        - customer_account_schemas
      summary: Shows a customer account schema.
      operationId: Customeraccountschemas_showSchema
      security:
        - api_key: []
        - oauth:
            - customer_account_schema_read
      description: Shows a customer account schema. Account manager only🔒
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the customer account schema to show
          name: customer_account_schema_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns customer account schema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomeraccountschemasShowSchemaResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountschemasShowSchema401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountschemasShowSchema403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountschemasShowSchema404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountschemasShowSchema422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountschemasShowSchema500Response
    put:
      tags:
        - customer_account_schemas
      summary: Update a customer account schema.
      operationId: Customeraccountschemas_updateSchema
      security:
        - api_key: []
        - oauth:
            - customer_account_schema_write
      description: Update a customer account schema. Account manager only🔒🔒
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the customer account schema to show
          name: customer_account_schema_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAccountSchemaUpdate'
        required: true
      responses:
        '200':
          description: Returns customer account schema
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountschemasUpdateSchemaResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountschemasUpdateSchema401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountschemasUpdateSchema403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountschemasUpdateSchema404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountschemasUpdateSchema422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountschemasUpdateSchema500Response
  /v1/customer_account_categories:
    get:
      tags:
        - customer_account_categories
      summary: Return customer account categories of customer_account
      operationId: Customeraccountcategories_getCategories
      security:
        - api_key: []
        - oauth:
            - customer_account_category_read
      description: Return customer account categories of customer_account
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: Filter customer account categories based on category id
          name: category_id
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Return customer account categories of customer_account
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountcategoriesGetCategoriesResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountcategoriesGetCategories401Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountcategoriesGetCategories500Response
    post:
      tags:
        - customer_account_categories
      summary: Creates a customer account category
      operationId: Customeraccountcategories_createAccountCategory
      security:
        - api_key: []
        - oauth:
            - customer_account_category_write
      description: |
        # Description
        Creates a customer account category
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAccountCategory'
        required: true
      responses:
        '201':
          description: Customer account category successfully created
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountcategoriesCreateAccountCategoryResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountcategoriesCreateAccountCategory401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountcategoriesCreateAccountCategory403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountcategoriesCreateAccountCategory422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountcategoriesCreateAccountCategory500Response
  /v1/customer_account_categories/{customer_account_category_id}:
    put:
      tags:
        - customer_account_categories
      summary: Update the customer account category
      operationId: Customeraccountcategories_updateCategory
      security:
        - api_key: []
        - oauth:
            - customer_account_category_write
      description: Update the customer account category
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the customer account category you want to update
          name: customer_account_category_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAccountCategoryUpdate'
        required: true
      responses:
        '200':
          description: Customer account category successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAccountCategoryShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountcategoriesUpdateCategoryResponse
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountcategoriesUpdateCategory403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountcategoriesUpdateCategory422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountcategoriesUpdateCategory500Response
    delete:
      tags:
        - customer_account_categories
      summary: Delete the customer account category
      operationId: Customeraccountcategories_deleteCategory
      security:
        - api_key: []
        - oauth:
            - customer_account_category_destroy
      description: Delete the customer account category
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the customer account category you want to delete
          name: customer_account_category_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Customer account category successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAccountCategoryShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountcategoriesDeleteCategoryResponse
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountcategoriesDeleteCategory403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountcategoriesDeleteCategory422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountcategoriesDeleteCategory500Response
  /v1/contracts:
    get:
      tags:
        - contracts
      summary: Returns all contracts within the given customer account
      operationId: Contracts_getAllContracts
      security:
        - api_key: []
        - oauth:
            - contract_read
      description: |
        # Description
        Returns all contracts within the given customer account
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the organisation
          name: organisation_id
          in: query
          required: false
          schema:
            type: integer
        - description: IDs of the contract
          name: ids
          in: query
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: integer
        - description: ID of the building related with contract
          name: building_id
          in: query
          required: false
          schema:
            type: integer
        - description: ID of the unit related with contract
          name: unit_id
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Returns all contracts within the given customer account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractsGetAllContractsResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractsGetAllContracts401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractsGetAllContracts403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractsGetAllContracts422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractsGetAllContracts500Response'
    post:
      tags:
        - contracts
      summary: Creates a contract
      operationId: Contracts_createNewContract
      security:
        - api_key: []
        - oauth:
            - contract_write
      description: |
        # Description
        Creates a contract
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractCreate'
        required: true
      responses:
        '201':
          description: Contract successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractsCreateNewContractResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractsCreateNewContract401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractsCreateNewContract403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractsCreateNewContract422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractsCreateNewContract500Response'
  /v1/contracts/{contract_id}:
    get:
      tags:
        - contracts
      summary: Shows a contract
      operationId: Contracts_showContract
      security:
        - api_key: []
        - oauth:
            - contract_read
      description: |
        # Description
        Shows a contract
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the contract to show
          name: contract_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the contract
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractsShowContractResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractsShowContract401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractsShowContract403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractsShowContract404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractsShowContract422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractsShowContract500Response'
    put:
      tags:
        - contracts
      summary: Updates an contract
      operationId: Contracts_updateContract
      security:
        - api_key: []
        - oauth:
            - contract_write
      description: |
        # Description
        Updates an contract
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the contract to update
          name: contract_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractUpdate'
        required: true
      responses:
        '200':
          description: Contract successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractsUpdateContractResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractsUpdateContract401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractsUpdateContract403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractsUpdateContract404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractsUpdateContract422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractsUpdateContract500Response'
    delete:
      tags:
        - contracts
      summary: Deletes the contract
      operationId: Contracts_deleteContract
      security:
        - api_key: []
        - oauth:
            - contract_destroy
      description: Deletes the contract
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the contract to update
          name: contract_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Contract successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractsDeleteContractResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractsDeleteContract401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractsDeleteContract403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractsDeleteContract404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractsDeleteContract422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractsDeleteContract500Response'
  /v1/contract_memberships/{contract_membership_id}:
    delete:
      tags:
        - contract_memberships
      summary: Destroys the contract membership.
      operationId: Contractmemberships_destroyMembership
      security:
        - api_key: []
        - oauth:
            - contract_membership_destroy
      description: Destroys the contract membership. Account manager only🔒
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the contract membership to be destroyed
          name: contract_membership_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Membership successfully marked as deleted
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractmembershipsDestroyMembershipResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractmembershipsDestroyMembership401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractmembershipsDestroyMembership403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractmembershipsDestroyMembership404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractmembershipsDestroyMembership422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractmembershipsDestroyMembership500Response
  /v1/contract_memberships:
    post:
      tags:
        - contract_memberships
      summary: Creates a membership in contract.
      operationId: Contractmemberships_createMembershipIn
      security:
        - api_key: []
        - oauth:
            - contract_membership_write
      description: Creates a membership in contract. Account manager only🔒
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContractMembershipCreate'
        required: true
      responses:
        '201':
          description: Membership successfully created
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractmembershipsCreateMembershipInResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractmembershipsCreateMembershipIn401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractmembershipsCreateMembershipIn403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractmembershipsCreateMembershipIn422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractmembershipsCreateMembershipIn500Response
  /v1/contract_membership_costs:
    get:
      tags:
        - contract_membership_costs
      summary: Returns all contract membership costs for current contract membership
      operationId: Contractmembershipcosts_getAllForMember
      security:
        - api_key: []
        - oauth:
            - contract_membership_cost_read
      description: Returns all contract membership costs for current contract membership
      parameters:
        - description: ID of contract membership
          name: contract_membership_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of cost type
          name: cost_type_id
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Returns all contract membership costs
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractmembershipcostsGetAllForMemberResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractmembershipcostsGetAllForMember401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractmembershipcostsGetAllForMember403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractmembershipcostsGetAllForMember422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractmembershipcostsGetAllForMember500Response
    post:
      tags:
        - contract_membership_costs
      summary: Create contract membership cost
      operationId: Contractmembershipcosts_createNewMembershipCost
      security:
        - api_key: []
        - oauth:
            - contract_membership_cost_write
      description: Create contract membership cost
      parameters:
        - description: ID of contract membership
          name: contract_membership_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/ContractMembershipCostCreate'
      responses:
        '200':
          description: Create contract membership cost
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractmembershipcostsCreateNewMembershipCostResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractmembershipcostsCreateNewMembershipCost401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractmembershipcostsCreateNewMembershipCost403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractmembershipcostsCreateNewMembershipCost422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractmembershipcostsCreateNewMembershipCost500Response
  /v1/contract_membership_costs/{contract_membership_cost_id}:
    get:
      tags:
        - contract_membership_costs
      summary: Shows a contract membership cost
      operationId: Contractmembershipcosts_showMembershipCost
      security:
        - api_key: []
        - oauth:
            - contract_membership_cost_read
      description: Shows a contract membership cost
      parameters:
        - description: ID of contract membership
          name: contract_membership_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of contract membership cost
          name: contract_membership_cost_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return contract membership cost
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractmembershipcostsShowMembershipCostResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractmembershipcostsShowMembershipCost401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractmembershipcostsShowMembershipCost403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractmembershipcostsShowMembershipCost404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractmembershipcostsShowMembershipCost422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractmembershipcostsShowMembershipCost500Response
    put:
      tags:
        - contract_membership_costs
      summary: Update a contract membership cost
      operationId: Contractmembershipcosts_updateMembershipCost
      security:
        - api_key: []
        - oauth:
            - contract_membership_cost_write
      description: Update a contract membership cost
      parameters:
        - description: ID of contract membership
          name: contract_membership_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of contract membership cost
          name: contract_membership_cost_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/ContractMembershipCostCreate'
      responses:
        '200':
          description: Contract membership cost successfully updated
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractmembershipcostsUpdateMembershipCostResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractmembershipcostsUpdateMembershipCost401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractmembershipcostsUpdateMembershipCost403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractmembershipcostsUpdateMembershipCost404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractmembershipcostsUpdateMembershipCost422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractmembershipcostsUpdateMembershipCost500Response
    delete:
      tags:
        - contract_membership_costs
      summary: Delete the contract membership cost
      operationId: Contractmembershipcosts_deleteMembershipCost
      security:
        - api_key: []
        - oauth:
            - contract_membership_cost_destroy
      description: Delete the contract membership cost
      parameters:
        - description: ID of contract membership
          name: contract_membership_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of contract membership cost
          name: contract_membership_cost_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Contract membership cost successfully deleted
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractmembershipcostsDeleteMembershipCostResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractmembershipcostsDeleteMembershipCost401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractmembershipcostsDeleteMembershipCost403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractmembershipcostsDeleteMembershipCost404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractmembershipcostsDeleteMembershipCost422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractmembershipcostsDeleteMembershipCost500Response
  /v1/contract_additions:
    get:
      tags:
        - contract_additions
      summary: Returns all contract additions for current contract
      operationId: Contractadditions_getAllForCurrentContract
      security:
        - api_key: []
        - oauth:
            - contract_addition_read
      description: Returns all contract additions for current contract
      parameters:
        - description: ID of the contract
          name: contract_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns all contract additions
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractadditionsGetAllForCurrentContractResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractadditionsGetAllForCurrentContract401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractadditionsGetAllForCurrentContract403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractadditionsGetAllForCurrentContract422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractadditionsGetAllForCurrentContract500Response
    post:
      tags:
        - contract_additions
      summary: Create contract addition
      operationId: Contractadditions_createNewAddition
      security:
        - api_key: []
        - oauth:
            - contract_addition_write
      description: Create contract addition
      parameters:
        - description: ID of the contract
          name: contract_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/ContractAdditionCreate'
      responses:
        '200':
          description: Create contract addition
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractadditionsCreateNewAdditionResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractadditionsCreateNewAddition401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractadditionsCreateNewAddition403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractadditionsCreateNewAddition422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractadditionsCreateNewAddition500Response
  /v1/contract_additions/{contract_addition_id}:
    get:
      tags:
        - contract_additions
      summary: Shows a contract addition
      operationId: Contractadditions_showDetail
      security:
        - api_key: []
        - oauth:
            - contract_addition_read
      description: Shows a contract addition
      parameters:
        - description: ID of the contract
          name: contract_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the contract addition
          name: contract_addition_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return contract addition
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractadditionsShowDetailResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractadditionsShowDetail401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractadditionsShowDetail403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractadditionsShowDetail404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractadditionsShowDetail422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractadditionsShowDetail500Response'
    put:
      tags:
        - contract_additions
      summary: Update a contract addition
      operationId: Contractadditions_updateContractAddition
      security:
        - api_key: []
        - oauth:
            - contract_addition_write
      description: Update a contract addition
      parameters:
        - description: ID of the contract
          name: contract_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the contract addition
          name: contract_addition_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/ContractAdditionCreate'
      responses:
        '200':
          description: Contract addition successfully updated
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractadditionsUpdateContractAdditionResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractadditionsUpdateContractAddition401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractadditionsUpdateContractAddition403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractadditionsUpdateContractAddition404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractadditionsUpdateContractAddition422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractadditionsUpdateContractAddition500Response
    delete:
      tags:
        - contract_additions
      summary: Delete the contract addition
      operationId: Contractadditions_deleteContractAddition
      security:
        - api_key: []
        - oauth:
            - contract_addition_destroy
      description: Delete the contract addition
      parameters:
        - description: ID of the contract
          name: contract_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the contract addition
          name: contract_addition_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Contract addition successfully deleted
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractadditionsDeleteContractAdditionResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractadditionsDeleteContractAddition401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractadditionsDeleteContractAddition403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractadditionsDeleteContractAddition404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractadditionsDeleteContractAddition422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractadditionsDeleteContractAddition500Response
  /v1/contract_grants:
    get:
      tags:
        - contract_grants
      summary: Returns all contract grants for current contract
      operationId: Contractgrants_getAllForCurrentContract
      security:
        - api_key: []
        - oauth:
            - contract_grant_read
      description: Returns all contract grants for current contract
      parameters:
        - description: ID of the contract membership
          name: contract_membership_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns all contract grants
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractgrantsGetAllForCurrentContractResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractgrantsGetAllForCurrentContract401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractgrantsGetAllForCurrentContract403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractgrantsGetAllForCurrentContract422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ContractgrantsGetAllForCurrentContract500Response
    post:
      tags:
        - contract_grants
      summary: Create contract grant
      operationId: Contractgrants_createGrant
      security:
        - api_key: []
        - oauth:
            - contract_grant_write
      description: Create contract grant
      parameters:
        - description: ID of the contract membership
          name: contract_membership_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/ContractGrantCreate'
      responses:
        '200':
          description: Create contract grant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractgrantsCreateGrantResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractgrantsCreateGrant401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractgrantsCreateGrant403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractgrantsCreateGrant422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractgrantsCreateGrant500Response'
  /v1/contract_grants/{contract_grant_id}:
    get:
      tags:
        - contract_grants
      summary: Shows a contract grant
      operationId: Contractgrants_showGrant
      security:
        - api_key: []
        - oauth:
            - contract_grant_read
      description: Shows a contract grant
      parameters:
        - description: ID of the contract membership
          name: contract_membership_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the contract grant
          name: contract_grant_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return contract grant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractgrantsShowGrantResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractgrantsShowGrant401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractgrantsShowGrant403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractgrantsShowGrant404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractgrantsShowGrant422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractgrantsShowGrant500Response'
    put:
      tags:
        - contract_grants
      summary: Update a contract grant
      operationId: Contractgrants_updateGrant
      security:
        - api_key: []
        - oauth:
            - contract_grant_write
      description: Update a contract grant
      parameters:
        - description: ID of the contract membership
          name: contract_membership_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the contract grant
          name: contract_grant_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/ContractGrantCreate'
      responses:
        '200':
          description: Contract grant successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractgrantsUpdateGrantResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractgrantsUpdateGrant401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractgrantsUpdateGrant403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractgrantsUpdateGrant404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractgrantsUpdateGrant422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractgrantsUpdateGrant500Response'
    delete:
      tags:
        - contract_grants
      summary: Delete the contract grant
      operationId: Contractgrants_deleteGrant
      security:
        - api_key: []
        - oauth:
            - contract_grant_destroy
      description: Delete the contract grant
      parameters:
        - description: ID of the contract membership
          name: contract_membership_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the contract grant
          name: contract_grant_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Contract grant successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractgrantsDeleteGrantResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractgrantsDeleteGrant401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractgrantsDeleteGrant403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractgrantsDeleteGrant404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractgrantsDeleteGrant422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractgrantsDeleteGrant500Response'
  /v1/security_deposits:
    post:
      tags:
        - security_deposits
      summary: Creates a security deposit
      operationId: Securitydeposits_createDeposit
      security:
        - api_key: []
        - oauth:
            - security_deposit_write
      description: >
        # Description

        Creates a security deposit

        Allowed security_deposit_payment_type: one_time_payment,
        paid_in_three_monthly_fees

        Allowed security_deposit_type: cash, bank_transaction, savings_account,
        surety
      parameters:
        - description: ID of the Contract Membership
          name: contract_membership_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/SecurityDepositCreate'
      responses:
        '201':
          description: Security Deposit successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecuritydepositsCreateDepositResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecuritydepositsCreateDeposit401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecuritydepositsCreateDeposit403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecuritydepositsCreateDeposit422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecuritydepositsCreateDeposit500Response'
  /v1/security_deposits/{security_deposit_id}:
    put:
      tags:
        - security_deposits
      summary: Updates an security deposit
      operationId: Securitydeposits_updateSecurityDeposit
      security:
        - api_key: []
        - oauth:
            - security_deposit_write
      description: >
        # Description

        Updates an security deposit

        Allowed security_deposit_payment_type: one_time_payment,
        paid_in_three_monthly_fees

        Allowed security_deposit_type: cash, bank_transaction, savings_account,
        surety
      parameters:
        - description: ID of the Contract Membership
          name: contract_membership_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the security deposit to update
          name: security_deposit_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/SecurityDepositCreate'
      responses:
        '200':
          description: Security Deposit successfully updated
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SecuritydepositsUpdateSecurityDepositResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SecuritydepositsUpdateSecurityDeposit401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SecuritydepositsUpdateSecurityDeposit403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SecuritydepositsUpdateSecurityDeposit404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SecuritydepositsUpdateSecurityDeposit422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SecuritydepositsUpdateSecurityDeposit500Response
    delete:
      tags:
        - security_deposits
      summary: Deletes the Security Deposit
      operationId: Securitydeposits_deleteDeposit
      security:
        - api_key: []
        - oauth:
            - security_deposit_destroy
      description: Deletes the Security Deposit
      parameters:
        - description: ID of the Security Deposit
          name: security_deposit_id
          in: path
          required: true
          schema:
            type: integer
        - description: The ID of the contract_membership
          name: contract_membership_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Security Deposit successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecuritydepositsDeleteDepositResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecuritydepositsDeleteDeposit401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecuritydepositsDeleteDeposit403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecuritydepositsDeleteDeposit404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecuritydepositsDeleteDeposit422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecuritydepositsDeleteDeposit500Response'
  /v1/cost_types:
    get:
      tags:
        - cost_types
      summary: Returns all types of costs within the given customer_account
      operationId: Costtypes_getAll
      security:
        - api_key: []
        - oauth:
            - cost_type_read
      description: Returns all types of costs within the given customer_account
      parameters:
        - description: The ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns all types of costs within the given customer_account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CosttypesGetAllResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CosttypesGetAll401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CosttypesGetAll403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CosttypesGetAll422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CosttypesGetAll500Response'
    post:
      tags:
        - cost_types
      summary: Creates a type of cost
      operationId: Costtypes_createTypeOfCost
      security:
        - api_key: []
        - oauth:
            - cost_type_write
      description: |
        # Description
        Creates a type of cost
      parameters:
        - description: The ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostTypeCreate'
        required: true
      responses:
        '201':
          description: Cost type successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CosttypesCreateTypeOfCostResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CosttypesCreateTypeOfCost401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CosttypesCreateTypeOfCost403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CosttypesCreateTypeOfCost422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CosttypesCreateTypeOfCost500Response'
  /v1/cost_types/{id}:
    get:
      tags:
        - cost_types
      summary: Shows a cost type
      operationId: Costtypes_showType
      security:
        - api_key: []
        - oauth:
            - cost_type_read
      description: Shows a cost type
      parameters:
        - description: The ID of the cost_type
          name: id
          in: path
          required: true
          schema:
            type: integer
        - description: The ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the cost_type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CosttypesShowTypeResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CosttypesShowType401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CosttypesShowType403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CosttypesShowType404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CosttypesShowType422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CosttypesShowType500Response'
    put:
      tags:
        - cost_types
      summary: Updates an cost_type
      operationId: Costtypes_updateCostType
      security:
        - api_key: []
        - oauth:
            - cost_type_write
      description: Updates an cost_type
      parameters:
        - description: The ID of the cost_type to update
          name: id
          in: path
          required: true
          schema:
            type: integer
        - description: The ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostType'
        required: true
      responses:
        '200':
          description: Cost type successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CosttypesUpdateCostTypeResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CosttypesUpdateCostType401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CosttypesUpdateCostType403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CosttypesUpdateCostType404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CosttypesUpdateCostType422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CosttypesUpdateCostType500Response'
    delete:
      tags:
        - cost_types
      summary: Deletes the cost_type
      operationId: Costtypes_deleteCostType
      security:
        - api_key: []
        - oauth:
            - cost_type_destroy
      description: Deletes the cost_type
      parameters:
        - description: The ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the cost_type to delete
          name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Cost type successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CosttypesDeleteCostTypeResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CosttypesDeleteCostType401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CosttypesDeleteCostType403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CosttypesDeleteCostType404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CosttypesDeleteCostType422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CosttypesDeleteCostType500Response'
  /v1/property_types:
    get:
      tags:
        - property_types
      summary: Returns all property types currently available
      operationId: Propertytypes_getAllAvailable
      security:
        - api_key: []
        - oauth:
            - property_type_read
      description: Returns all property types currently available
      responses:
        '200':
          description: Returns all property types
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertytypesGetAllAvailableResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertytypesGetAllAvailable401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertytypesGetAllAvailable403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertytypesGetAllAvailable422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertytypesGetAllAvailable500Response'
  /v1/properties:
    get:
      tags:
        - properties
      summary: >-
        Returns all properties for the current organisation within the given
        organisation.
      operationId: Properties_listForOrganisation
      security:
        - api_key: []
        - oauth:
            - property_read
      description: >-
        Returns all properties for the current organisation within the given
        organisation. Organisation manager only 🔒
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - description: The ID on other systems of the properties to show
          name: external_id
          in: query
          required: false
          schema:
            type: string
        - description: The name on other systems of the properties to show
          name: source_system
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: >-
            Returns all properties for the organisation within the given
            organisation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertiesListForOrganisationResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertiesListForOrganisation401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertiesListForOrganisation403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertiesListForOrganisation422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertiesListForOrganisation500Response'
    post:
      tags:
        - properties
      summary: Creates a property for the current organisation of the user.
      operationId: Properties_createForOrganisation
      security:
        - api_key: []
        - oauth:
            - property_write
      description: >-
        Creates a property for the current organisation of the user.
        Organisation manager only 🔒
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyCreate'
        required: true
      responses:
        '201':
          description: Property successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertiesCreateForOrganisationResponse'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PropertiesCreateForOrganisation403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PropertiesCreateForOrganisation422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PropertiesCreateForOrganisation500Response
  /v1/properties/{property_id}:
    get:
      tags:
        - properties
      summary: Returns the property for the current organisation of the user.
      operationId: Properties_getForOrganisation
      security:
        - api_key: []
        - oauth:
            - property_read
      description: >-
        Returns the property for the current organisation of the user.
        Organisation manager only 🔒
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - description: ID of the property
          name: property_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the property
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertiesGetForOrganisationResponse'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertiesGetForOrganisation403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertiesGetForOrganisation422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertiesGetForOrganisation500Response'
    put:
      tags:
        - properties
      summary: Updates the property for the current organisation of the user.
      operationId: Properties_updateForOrganisation
      security:
        - api_key: []
        - oauth:
            - property_write
      description: >-
        Updates the property for the current organisation of the user.
        Organisation manager only 🔒
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - description: ID of the property you want to update
          name: property_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyUpdate'
        required: true
      responses:
        '200':
          description: Property successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertiesUpdateForOrganisationResponse'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PropertiesUpdateForOrganisation403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PropertiesUpdateForOrganisation422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PropertiesUpdateForOrganisation500Response
    delete:
      tags:
        - properties
      summary: Deletes the property within the current organisation.
      operationId: Properties_deletePropertyWithinOrganisation
      security:
        - api_key: []
        - oauth:
            - property_destroy
      description: >-
        Deletes the property within the current organisation. Organisation
        manager only 🔒
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - description: ID of the property you want to delete
          name: property_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Property successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PropertiesDeletePropertyWithinOrganisationResponse
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PropertiesDeletePropertyWithinOrganisation403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PropertiesDeletePropertyWithinOrganisation422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PropertiesDeletePropertyWithinOrganisation500Response
  /v1/property_managers:
    get:
      tags:
        - property_managers
      summary: Returns all property managers within the given customer account.
      operationId: Propertymanagers_getAllWithinCustomer
      security:
        - api_key: []
        - oauth:
            - property_manager_read
      description: >-
        Returns all property managers within the given customer account. Admin
        and supervisor only 🔒
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns all property managers within the given customer account.
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PropertymanagersGetAllWithinCustomerResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PropertymanagersGetAllWithinCustomer401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PropertymanagersGetAllWithinCustomer403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PropertymanagersGetAllWithinCustomer422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PropertymanagersGetAllWithinCustomer500Response
    post:
      tags:
        - property_managers
      summary: Creates a property manager for the current customer account.
      operationId: Propertymanagers_createNewManager
      security:
        - api_key: []
        - oauth:
            - property_manager_write
      description: >-
        Creates a property manager for the current customer account. Admin and
        supervisor only 🔒
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyManagerCreate'
        required: true
      responses:
        '201':
          description: Property Manager successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyManagerShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertymanagersCreateNewManagerResponse'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PropertymanagersCreateNewManager403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PropertymanagersCreateNewManager422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PropertymanagersCreateNewManager500Response
  /v1/property_managers/{property_manager_id}:
    get:
      tags:
        - property_managers
      summary: Returns the property manager for the current account of the user.
      operationId: Propertymanagers_getCurrentManager
      security:
        - api_key: []
        - oauth:
            - property_manager_read
      description: >-
        Returns the property manager for the current account of the user. Admin
        and supervisor only 🔒
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the property manager
          name: property_manager_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the property manager
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyManagerShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertymanagersGetCurrentManagerResponse'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PropertymanagersGetCurrentManager403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PropertymanagersGetCurrentManager422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PropertymanagersGetCurrentManager500Response
    put:
      tags:
        - property_managers
      summary: Updates the property manager for the current account of the user.
      operationId: Propertymanagers_updateCurrentAccountUser
      security:
        - api_key: []
        - oauth:
            - property_manager_write
      description: >-
        Updates the property manager for the current account of the user. Admin
        and Supervisor only 🔒
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the property manager you want to update
          name: property_manager_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PropertyManagerUpdate'
        required: true
      responses:
        '200':
          description: Property Manager successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyManagerShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PropertymanagersUpdateCurrentAccountUserResponse
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PropertymanagersUpdateCurrentAccountUser403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PropertymanagersUpdateCurrentAccountUser422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PropertymanagersUpdateCurrentAccountUser500Response
    delete:
      tags:
        - property_managers
      summary: Deletes the property manager within the current account.
      operationId: Propertymanagers_deleteManagerWithinAccount
      security:
        - api_key: []
        - oauth:
            - property_manager_destroy
      description: >-
        Deletes the property manager within the current account. Admin and
        supervisor only 🔒
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the property manager you want to delete
          name: property_manager_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Property Manager successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PropertyManagerShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PropertymanagersDeleteManagerWithinAccountResponse
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PropertymanagersDeleteManagerWithinAccount403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PropertymanagersDeleteManagerWithinAccount422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PropertymanagersDeleteManagerWithinAccount500Response
  /v1/lots:
    get:
      tags:
        - lots
      summary: Returns all lots within the given organisation.
      operationId: Lots_getAll
      security:
        - api_key: []
        - oauth:
            - lot_read
      description: >-
        Returns all lots within the given organisation. Organisation manager
        only 🔒
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
      responses:
        '200':
          description: Returns all lots within the given organisation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LotsGetAllResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LotsGetAll401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LotsGetAll403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LotsGetAll422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LotsGetAll500Response'
    post:
      tags:
        - lots
      summary: Creates a lot.
      operationId: Lots_createNewLot
      security:
        - api_key: []
        - oauth:
            - lot_write
      description: Creates a lot. Organisation manager only 🔒
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LotCreate'
        required: true
      responses:
        '201':
          description: Lot successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LotsCreateNewLotResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LotsCreateNewLot401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LotsCreateNewLot403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LotsCreateNewLot422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LotsCreateNewLot500Response'
  /v1/lots/{lot_id}:
    get:
      tags:
        - lots
      summary: Shows a lot.
      operationId: Lots_showLot
      security:
        - api_key: []
        - oauth:
            - lot_read
      description: Shows a lot. Organisation manager only 🔒
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - description: The ID of the lot to show
          name: lot_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the lot
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LotsShowLotResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LotsShowLot401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LotsShowLot403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LotsShowLot404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LotsShowLot422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LotsShowLot500Response'
    put:
      tags:
        - lots
      summary: Updates an lot.
      operationId: Lots_updateLot
      security:
        - api_key: []
        - oauth:
            - lot_write
      description: Updates an lot. Organisation manager only 🔒
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - description: The ID of the lot to update
          name: lot_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LotUpdate'
        required: true
      responses:
        '200':
          description: Lot successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LotsUpdateLotResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LotsUpdateLot401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LotsUpdateLot403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LotsUpdateLot422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LotsUpdateLot500Response'
    delete:
      tags:
        - lots
      summary: Deletes the lot within the current organisation.
      operationId: Lots_deleteLotWithinOrganisation
      security:
        - api_key: []
        - oauth:
            - lot_destroy
      description: >-
        Deletes the lot within the current organisation. Organisation manager
        only 🔒
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - description: The ID of the lot to delete
          name: lot_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Lot successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LotsDeleteLotWithinOrganisationResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/LotsDeleteLotWithinOrganisation401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/LotsDeleteLotWithinOrganisation403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/LotsDeleteLotWithinOrganisation404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/LotsDeleteLotWithinOrganisation422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/LotsDeleteLotWithinOrganisation500Response
  /v1/building_filter_settings:
    get:
      tags:
        - building_filter_settings
      summary: Returns all building filter settings currently available
      operationId: Buildingfiltersettings_getAllSettings
      security:
        - api_key: []
        - oauth:
            - building_filter_setting_read
      description: Returns all building filter settings currently available
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns all building filter settings
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingfiltersettingsGetAllSettingsResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingfiltersettingsGetAllSettings401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingfiltersettingsGetAllSettings403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingfiltersettingsGetAllSettings422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingfiltersettingsGetAllSettings500Response
    post:
      tags:
        - building_filter_settings
      summary: Create building filter settings
      operationId: Buildingfiltersettings_createSettings
      security:
        - api_key: []
        - oauth:
            - building_filter_setting_write
      description: Create building filter settings
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/BuildingFilterSettingsCreate'
      responses:
        '200':
          description: Create building filter settings
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingfiltersettingsCreateSettingsResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingfiltersettingsCreateSettings401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingfiltersettingsCreateSettings403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingfiltersettingsCreateSettings422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingfiltersettingsCreateSettings500Response
  /v1/building_filter_settings/filter_setting_fields:
    get:
      tags:
        - building_filter_settings
      summary: Returns all building and building unit fields.
      operationId: Buildingfiltersettings_getAllFields
      security:
        - api_key: []
        - oauth:
            - building_filter_setting_read
      description: Returns all building and building unit fields. Account manager only🔒🔒
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns all building and building unit fields
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingfiltersettingsGetAllFieldsResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingfiltersettingsGetAllFields401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingfiltersettingsGetAllFields403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingfiltersettingsGetAllFields422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingfiltersettingsGetAllFields500Response
  /v1/building_filter_settings/{building_filter_setting_id}:
    get:
      tags:
        - building_filter_settings
      summary: Shows a building filter setting
      operationId: Buildingfiltersettings_showSetting
      security:
        - api_key: []
        - oauth:
            - building_filter_setting_read
      description: Shows a building filter setting
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the building filter setting to show
          name: building_filter_setting_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns customer attributes schema
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingfiltersettingsShowSettingResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingfiltersettingsShowSetting401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingfiltersettingsShowSetting403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingfiltersettingsShowSetting404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingfiltersettingsShowSetting422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingfiltersettingsShowSetting500Response
    put:
      tags:
        - building_filter_settings
      summary: Updates a building filter setting.
      operationId: Buildingfiltersettings_updateSetting
      security:
        - api_key: []
        - oauth:
            - building_filter_setting_write
      description: Updates a building filter setting. Account manager only🔒🔒
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the building filter setting you want to update
          name: building_filter_setting_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/BuildingFilterSettingsCreate'
      responses:
        '200':
          description: Building filter setting successfully updated
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingfiltersettingsUpdateSettingResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingfiltersettingsUpdateSetting401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingfiltersettingsUpdateSetting403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingfiltersettingsUpdateSetting404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingfiltersettingsUpdateSetting422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingfiltersettingsUpdateSetting500Response
    delete:
      tags:
        - building_filter_settings
      summary: Deletes the building filter setting within the current customer account.
      operationId: Buildingfiltersettings_deleteSetting
      security:
        - api_key: []
        - oauth:
            - building_filter_setting_destroy
      description: >-
        Deletes the building filter setting within the current customer account.
        Account manager only🔒
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the building filter setting to show
          name: building_filter_setting_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Building filter setting successfully deleted
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingfiltersettingsDeleteSettingResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingfiltersettingsDeleteSetting401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingfiltersettingsDeleteSetting403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingfiltersettingsDeleteSetting404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingfiltersettingsDeleteSetting422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingfiltersettingsDeleteSetting500Response
  /v1/building_save_filters:
    get:
      tags:
        - building_save_filters
      summary: Returns all save filters for current user
      operationId: Buildingsavefilters_getAllFilters
      security:
        - api_key: []
        - oauth:
            - building_save_filter_read
      description: Returns all save filters for current user
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns all save filters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingsavefiltersGetAllFiltersResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingsavefiltersGetAllFilters401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingsavefiltersGetAllFilters403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingsavefiltersGetAllFilters422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingsavefiltersGetAllFilters500Response
    post:
      tags:
        - building_save_filters
      summary: Create building save filter
      operationId: Buildingsavefilters_createBuildingSaveFilter
      security:
        - api_key: []
        - oauth:
            - building_save_filter_write
      description: Create building save filter
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/BuildingSaveFiltersCreate'
      responses:
        '200':
          description: Create save filter
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingsavefiltersCreateBuildingSaveFilterResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingsavefiltersCreateBuildingSaveFilter401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingsavefiltersCreateBuildingSaveFilter403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingsavefiltersCreateBuildingSaveFilter422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingsavefiltersCreateBuildingSaveFilter500Response
  /v1/building_save_filters/{building_save_filter_id}:
    get:
      tags:
        - building_save_filters
      summary: Shows a save filter
      operationId: Buildingsavefilters_showSaveFilter
      security:
        - api_key: []
        - oauth:
            - building_save_filter_read
      description: Shows a save filter
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the save filter
          name: building_save_filter_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return save filter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingsavefiltersShowSaveFilterResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingsavefiltersShowSaveFilter401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingsavefiltersShowSaveFilter403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingsavefiltersShowSaveFilter404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingsavefiltersShowSaveFilter422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingsavefiltersShowSaveFilter500Response
    put:
      tags:
        - building_save_filters
      summary: Update a save filter
      operationId: Buildingsavefilters_updateSaveFilter
      security:
        - api_key: []
        - oauth:
            - building_save_filter_write
      description: Update a save filter
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the save filter
          name: building_save_filter_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/BuildingSaveFiltersCreate'
      responses:
        '200':
          description: Save filter successfully updated
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingsavefiltersUpdateSaveFilterResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingsavefiltersUpdateSaveFilter401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingsavefiltersUpdateSaveFilter403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingsavefiltersUpdateSaveFilter404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingsavefiltersUpdateSaveFilter422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingsavefiltersUpdateSaveFilter500Response
    delete:
      tags:
        - building_save_filters
      summary: Delete the save filter
      operationId: Buildingsavefilters_deleteSaveFilter
      security:
        - api_key: []
        - oauth:
            - building_save_filter_destroy
      description: Delete the save filter
      parameters:
        - description: ID of the save filter
          name: building_save_filter_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Save filter successfully deleted
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingsavefiltersDeleteSaveFilterResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingsavefiltersDeleteSaveFilter401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingsavefiltersDeleteSaveFilter403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingsavefiltersDeleteSaveFilter404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingsavefiltersDeleteSaveFilter422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingsavefiltersDeleteSaveFilter500Response
  /v1/building_types:
    get:
      tags:
        - building_types
      summary: Returns all building types currently available
      operationId: Buildingtypes_getAllBuildingTypes
      security:
        - api_key: []
        - oauth:
            - building_type_read
      description: Returns all building types currently available
      responses:
        '200':
          description: Returns all building types
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingtypesGetAllBuildingTypesResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingtypesGetAllBuildingTypes401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingtypesGetAllBuildingTypes403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingtypesGetAllBuildingTypes422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingtypesGetAllBuildingTypes500Response
  /v1/buildings:
    get:
      tags:
        - buildings
      summary: Returns all buildings within the given organisation
      operationId: Buildings_getAllWithinOrganisation
      security:
        - api_key: []
        - oauth:
            - building_read
      description: >
        # Description

        Returns all buildings within the given organisation

        ⚠️⚠️ If <b>presets_standard_fields</b>,
        <b>presets_customer_attributes</b>, <b>tags</b> or <b>categories</b>
        params are provided

        it means filters are activated.
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - description: The ID on other systems of the buildings to show
          name: external_id
          in: query
          required: false
          schema:
            type: string
        - description: The name on other systems of the buildings to show
          name: source_system
          in: query
          required: false
          schema:
            type: string
        - description: >
            Filter building with standard fields of building and building_units
            <br>
              {
                building: { name: ['name_of_building',...], city: ['Berlin', ...]}
                building_unit: { name: ['name_of_unit', ...], tenant: ['name_of_tentant', ...] }
              }
          name: presets_standard_fields
          in: query
          required: false
          schema:
            type: object
        - description: >
            Filter building with customer_attributes of building and
            building_units <br>

            all attributes can be strings separated by | except array fields
            that should be one array with strings
              {
                building: { region: 'Südwest|West', ...}
                building_unit: { unit_type: 'assisted_living_own_woe|living', ... }
              }
          name: presets_customer_attributes
          in: query
          required: false
          schema:
            type: object
        - description: >
            Filter building with tag label related to building and
            building_units <br>
              {
                building: ['label_of_a_tag',...]
                building_unit: ['label_of_a_tag',...]
              }
          name: tags
          in: query
          required: false
          schema:
            type: object
        - description: >
            Filter building with category label related to building and
            building_units <br>
              {
                building: { person_memberships: { architect: ['John Doe'], property_manager: ['John Doe 2'] } }
                building_unit: { building_unit_places: ['Building unit place 1'] }
              }
          name: categories
          in: query
          required: false
          schema:
            type: object
      responses:
        '200':
          description: Returns all buildings within the given organisation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingsGetAllWithinOrganisationResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingsGetAllWithinOrganisation401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingsGetAllWithinOrganisation403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingsGetAllWithinOrganisation422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingsGetAllWithinOrganisation500Response
    post:
      tags:
        - buildings
      summary: Creates a building
      operationId: Buildings_createNewBuilding
      security:
        - api_key: []
        - oauth:
            - building_write
      description: >
        # Description

        Creates a building

        All global and local attributes that are time dependent will be added to
        the time_dependent_attributes table

        Global Time Dependent Attributes: ["planned_monthly_rent"]
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingCreate'
        required: true
      responses:
        '201':
          description: Building successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingsCreateNewBuildingResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingsCreateNewBuilding401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingsCreateNewBuilding403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingsCreateNewBuilding422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingsCreateNewBuilding500Response'
  /v1/buildings/{building_id}:
    get:
      tags:
        - buildings
      summary: Shows a building
      operationId: Buildings_showBuilding
      security:
        - api_key: []
        - oauth:
            - building_read
      description: Shows a building
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - description: The ID of the building to show
          name: building_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the building
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingsShowBuildingResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingsShowBuilding401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingsShowBuilding403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingsShowBuilding404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingsShowBuilding422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingsShowBuilding500Response'
    put:
      tags:
        - buildings
      summary: Updates an building
      operationId: Buildings_updateBuildingTimeDependentAttributes
      security:
        - api_key: []
        - oauth:
            - building_write
      description: >
        # Description

        Updates an building

        All global and local attributes that are time dependent cannot be
        updated directly.

        You need to create time_dependent_attributes.

        Global Time Dependent Attributes: ["planned_monthly_rent"]
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - description: The ID of the building to update
          name: building_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingUpdate'
        required: true
      responses:
        '200':
          description: Building successfully updated
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingsUpdateBuildingTimeDependentAttributesResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingsUpdateBuildingTimeDependentAttributes401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingsUpdateBuildingTimeDependentAttributes403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingsUpdateBuildingTimeDependentAttributes404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingsUpdateBuildingTimeDependentAttributes422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingsUpdateBuildingTimeDependentAttributes500Response
    delete:
      tags:
        - buildings
      summary: Deletes the building within the current organisation.
      operationId: Buildings_deleteBuilding
      security:
        - api_key: []
        - oauth:
            - building_destroy
      description: >-
        Deletes the building within the current organisation. Account manager
        only🔒🔒
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - description: The ID of the building to delete
          name: building_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Building successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingsDeleteBuildingResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingsDeleteBuilding401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingsDeleteBuilding403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingsDeleteBuilding404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingsDeleteBuilding422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingsDeleteBuilding500Response'
  /v1/buildings/{building_id}/scorecard_memberships:
    get:
      tags:
        - buildings
      summary: List scorecard memberships by building
      operationId: Buildings_listScorecardMemberships
      security:
        - api_key: []
        - oauth:
            - building_read
      description: List scorecard memberships by building
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - description: The ID of the building to show
          name: building_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the scorecard memberships
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingsListScorecardMembershipsResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingsListScorecardMemberships401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingsListScorecardMemberships403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingsListScorecardMemberships404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingsListScorecardMemberships422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingsListScorecardMemberships500Response
  /v1/building_unit_types:
    get:
      tags:
        - building_unit_types
      summary: >-
        Returns all building unit types for that customer account including
        default types
      operationId: Buildingunittypes_getAll
      security:
        - api_key: []
        - oauth:
            - building_unit_type_read
      description: >-
        Returns all building unit types for that customer account including
        default types
      parameters:
        - description: ID of customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns all building unit types
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunittypesGetAllResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunittypesGetAll401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunittypesGetAll403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunittypesGetAll422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunittypesGetAll500Response'
    post:
      tags:
        - building_unit_types
      summary: Create building unit type.
      operationId: Buildingunittypes_createType
      security:
        - api_key: []
        - oauth:
            - building_unit_type_write
      description: Create building unit type. Account manager only🔒🔒
      parameters:
        - description: ID of customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingUnitTypeCreate'
        required: true
      responses:
        '200':
          description: Create building unit type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunittypesCreateTypeResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunittypesCreateType401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunittypesCreateType403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunittypesCreateType422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunittypesCreateType500Response'
  /v1/building_unit_types/{building_unit_type_id}:
    get:
      tags:
        - building_unit_types
      summary: Shows a building unit type
      operationId: Buildingunittypes_showType
      security:
        - api_key: []
        - oauth:
            - building_unit_type_read
      description: Shows a building unit type
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of building unit type to show
          name: building_unit_type_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return building unit type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunittypesShowTypeResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunittypesShowType401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunittypesShowType403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunittypesShowType404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunittypesShowType422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunittypesShowType500Response'
    put:
      tags:
        - building_unit_types
      summary: Updates a building unit type.
      operationId: Buildingunittypes_updateBuildingUnitType
      security:
        - api_key: []
        - oauth:
            - building_unit_type_write
      description: Updates a building unit type. Account manager only🔒🔒
      parameters:
        - description: ID of customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of building unit type to show
          name: building_unit_type_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Building unit type successfully updated
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunittypesUpdateBuildingUnitTypeResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunittypesUpdateBuildingUnitType401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunittypesUpdateBuildingUnitType403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunittypesUpdateBuildingUnitType404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunittypesUpdateBuildingUnitType422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunittypesUpdateBuildingUnitType500Response
    delete:
      tags:
        - building_unit_types
      summary: Deletes building unit type within the current customer account.
      operationId: Buildingunittypes_delete
      security:
        - api_key: []
        - oauth:
            - building_unit_type_destroy
      description: >-
        Deletes building unit type within the current customer account. Account
        manager only🔒
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of building unit type to show
          name: building_unit_type_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Building unit type successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunittypesDeleteResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunittypesDelete401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunittypesDelete403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunittypesDelete404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunittypesDelete422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunittypesDelete500Response'
  /v1/building_units:
    get:
      tags:
        - building_units
      summary: Returns all building units within the given organisation
      operationId: Buildingunits_getAllWithinOrganisation
      security:
        - api_key: []
        - oauth:
            - building_unit_read
      description: >
        # Description

        Returns all building units within the given organisation

        ⚠️⚠️ If <b>presets_standard_fields</b>,
        <b>presets_customer_attributes</b>, <b>tags</b> or <b>categories</b>
        params are provided

        it means filters are activated.
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - description: The ID on other systems of the buildings to show
          name: external_id
          in: query
          required: false
          schema:
            type: string
        - description: The name on other systems of the buildings to show
          name: source_system
          in: query
          required: false
          schema:
            type: string
        - description: The IDs of building
          name: building_ids
          in: query
          required: false
          example: 1,2,3
          schema:
            type: string
        - description: |
            Filter building units with standard fields <br>
              {
                building_unit: { name: ['name_of_unit', ...], tenant: ['name_of_tentant', ...] }
              }
          name: presets_standard_fields
          in: query
          required: true
          schema:
            type: object
        - description: >
            Filter building units with customer_attributes fields <br>

            all attributes can be strings separated by | except array fields
            that should be one array with strings
              {
                building_unit: { unit_type: 'assisted_living_own_woe|living', ... }
              }
          name: presets_customer_attributes
          in: query
          required: true
          schema:
            type: object
        - description: |
            Filter units with tag label<br>
              {
                building_unit: ['label_of_a_tag',...]
              }
          name: tags
          in: query
          required: false
          schema:
            type: object
        - description: >
            Filter building units with category label related to building_units
            <br>
              {
                building: {}
                building_unit: { building_unit_places: ["Building unit place label"] }
              }
          name: categories
          in: query
          required: false
          schema:
            type: object
      responses:
        '200':
          description: Returns all building units within the given organisation
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitsGetAllWithinOrganisationResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitsGetAllWithinOrganisation401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitsGetAllWithinOrganisation403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitsGetAllWithinOrganisation422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitsGetAllWithinOrganisation500Response
    post:
      tags:
        - building_units
      summary: Creates a building unit
      operationId: Buildingunits_createUnit
      security:
        - api_key: []
        - oauth:
            - building_unit_write
      description: >
        # Description

        Creates a building unit

        All global and local attributes that are time dependent will be added to
        the time_dependent_attributes table

        Global Time Dependent Attributes: ["planned_monthly_rent"]
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingUnitCreate'
        required: true
      responses:
        '201':
          description: Building unit successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunitsCreateUnitResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunitsCreateUnit401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunitsCreateUnit403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunitsCreateUnit422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunitsCreateUnit500Response'
  /v1/building_units/{building_unit_id}:
    get:
      tags:
        - building_units
      summary: Shows a building unit and all memberships of that unit
      operationId: Buildingunits_showUnitMemberships
      security:
        - api_key: []
        - oauth:
            - building_unit_read
      description: Shows a building unit and all memberships of that unit
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - description: ID of the building unit to show
          name: building_unit_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns building unit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunitsShowUnitMembershipsResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitsShowUnitMemberships401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitsShowUnitMemberships403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitsShowUnitMemberships404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitsShowUnitMemberships422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitsShowUnitMemberships500Response
    put:
      tags:
        - building_units
      summary: Updates the building unit
      operationId: Buildingunits_updateUnit
      security:
        - api_key: []
        - oauth:
            - building_unit_write
      description: >
        # Description

        Updates the building unit

        All global and local attributes that are time dependent cannot be
        updated directly.

        You need to create time_dependent_attributes.

        Global Time Dependent Attributes: ["quality_of_available_features",
        "current_condition", "planned_monthly_rent", "planned_operating_cost",
        "planned_total_rent", "planned_deposit",
        "heating_costs_in_operating_costs", "quality_of_available_features",
        "current_condition"]
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - description: ID of the building unit to be updated
          name: building_unit_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingUnitUpdate'
        required: true
      responses:
        '200':
          description: Returns the updated building unit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunitsUpdateUnitResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunitsUpdateUnit401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunitsUpdateUnit403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunitsUpdateUnit404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunitsUpdateUnit422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunitsUpdateUnit500Response'
    delete:
      tags:
        - building_units
      summary: Destroys the building unit and all memberships of that unit!
      operationId: Buildingunits_destroyUnitAndMemberships
      security:
        - api_key: []
        - oauth:
            - building_unit_destroy
      description: Destroys the building unit and all memberships of that unit!
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - description: ID of the building unit to be destroyed
          name: building_unit_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the destroyed building unit
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitsDestroyUnitAndMembershipsResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitsDestroyUnitAndMemberships401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitsDestroyUnitAndMemberships403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitsDestroyUnitAndMemberships404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitsDestroyUnitAndMemberships422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitsDestroyUnitAndMemberships500Response
  /v1/building_unit_memberships/{building_unit_membership_id}:
    delete:
      tags:
        - building_unit_memberships
      summary: Destroys the organisation membership
      operationId: Buildingunitmemberships_destroyOrganisationMembership
      security:
        - api_key: []
        - oauth:
            - building_unit_membership_destroy
      description: Destroys the organisation membership
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - description: ID of the organisation membership to be destroyed
          name: building_unit_membership_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Membership successfully marked as deleted
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitmembershipsDestroyOrganisationMembershipResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitmembershipsDestroyOrganisationMembership401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitmembershipsDestroyOrganisationMembership403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitmembershipsDestroyOrganisationMembership404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitmembershipsDestroyOrganisationMembership422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitmembershipsDestroyOrganisationMembership500Response
  /v1/building_unit_memberships:
    post:
      tags:
        - building_unit_memberships
      summary: Creates a membership in building unit
      operationId: Buildingunitmemberships_createMembershipInUnit
      security:
        - api_key: []
        - oauth:
            - building_unit_membership_write
      description: Creates a membership in building unit
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingUnitMembershipCreate'
        required: true
      responses:
        '201':
          description: Membership successfully created
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitmembershipsCreateMembershipInUnitResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitmembershipsCreateMembershipInUnit401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitmembershipsCreateMembershipInUnit403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitmembershipsCreateMembershipInUnit422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitmembershipsCreateMembershipInUnit500Response
  /v1/building_energies:
    get:
      tags:
        - building_energies
      summary: Return building energies of the building
      operationId: Buildingenergies_getBuildingEnergies
      security:
        - api_key: []
        - oauth:
            - building_energy_read
      description: Return building energies of the building
      parameters:
        - description: ID of the building
          name: building_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return building energies of the building
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingenergiesGetBuildingEnergiesResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingenergiesGetBuildingEnergies401Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingenergiesGetBuildingEnergies500Response
    post:
      tags:
        - building_energies
      summary: Creates a building energy
      operationId: Buildingenergies_createEnergy
      security:
        - api_key: []
        - oauth:
            - building_energy_write
      description: |
        # Description
        Creates a building energy
      parameters:
        - description: ID of the building
          name: building_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingEnergyCreate'
        required: true
      responses:
        '201':
          description: Customer account category successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingenergiesCreateEnergyResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingenergiesCreateEnergy401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingenergiesCreateEnergy403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingenergiesCreateEnergy422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingenergiesCreateEnergy500Response'
  /v1/building_energies/{building_energy_id}:
    put:
      tags:
        - building_energies
      summary: Update building energy
      operationId: Buildingenergies_updateEnergy
      security:
        - api_key: []
        - oauth:
            - building_energy_write
      description: Update building energy
      parameters:
        - description: ID of the building
          name: building_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the building energy to update
          name: building_energy_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingEnergyUpdate'
        required: true
      responses:
        '200':
          description: Building energy successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingEnergyShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingenergiesUpdateEnergyResponse'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingenergiesUpdateEnergy403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingenergiesUpdateEnergy422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingenergiesUpdateEnergy500Response'
  /v1/buildings_finances:
    get:
      tags:
        - buildings_finances
      summary: Return building finances of the building
      operationId: Buildingsfinances_returnBuildingFinances
      security:
        - api_key: []
        - oauth:
            - buildings_finance_read
      description: Return building finances of the building
      parameters:
        - description: ID of the building
          name: building_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return building finances of the building
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingsfinancesReturnBuildingFinancesResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingsfinancesReturnBuildingFinances401Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingsfinancesReturnBuildingFinances500Response
    post:
      tags:
        - buildings_finances
      summary: Creates a building finance
      operationId: Buildingsfinances_createFinance
      security:
        - api_key: []
        - oauth:
            - buildings_finance_write
      description: |
        # Description
        Creates a building finance
      parameters:
        - description: ID of the building
          name: building_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingsFinanceCreate'
        required: true
      responses:
        '201':
          description: Customer account category successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingsfinancesCreateFinanceResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingsfinancesCreateFinance401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingsfinancesCreateFinance403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingsfinancesCreateFinance422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingsfinancesCreateFinance500Response'
  /v1/buildings_finances/{buildings_finance_id}:
    put:
      tags:
        - buildings_finances
      summary: Update building finance
      operationId: Buildingsfinances_updateFinance
      security:
        - api_key: []
        - oauth:
            - buildings_finance_write
      description: Update building finance
      parameters:
        - description: ID of the building
          name: building_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the building finance to update
          name: buildings_finance_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingsFinanceUpdate'
        required: true
      responses:
        '200':
          description: Building finance successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingsFinanceShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingsfinancesUpdateFinanceResponse'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingsfinancesUpdateFinance403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingsfinancesUpdateFinance422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingsfinancesUpdateFinance500Response'
  /v1/building_units_finances:
    post:
      tags:
        - building_units_finances
      summary: Creates a building unit finance
      operationId: Buildingunitsfinances_createFinance
      security:
        - api_key: []
        - oauth:
            - building_units_finance_write
      description: |
        # Description
        Creates a building unit finance
      parameters:
        - description: ID of the building unit
          name: building_unit_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingUnitsFinanceCreate'
        required: true
      responses:
        '201':
          description: Customer account category successfully created
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitsfinancesCreateFinanceResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitsfinancesCreateFinance401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitsfinancesCreateFinance403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitsfinancesCreateFinance422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitsfinancesCreateFinance500Response
  /v1/building_units_finances/{building_units_finance_id}:
    put:
      tags:
        - building_units_finances
      summary: Update building unit finance
      operationId: Buildingunitsfinances_updateFinance
      security:
        - api_key: []
        - oauth:
            - building_units_finance_write
      description: Update building unit finance
      parameters:
        - description: ID of the building unit
          name: building_unit_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the building unit finance to update
          name: building_units_finance_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingUnitsFinanceUpdate'
        required: true
      responses:
        '200':
          description: Building unit finance successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingUnitsFinanceShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitsfinancesUpdateFinanceResponse
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitsfinancesUpdateFinance403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitsfinancesUpdateFinance422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitsfinancesUpdateFinance500Response
  /v1/building_fms:
    get:
      tags:
        - building_fms
      summary: Return building fms of the building
      operationId: Buildingfms_getBuildingFms
      security:
        - api_key: []
        - oauth:
            - building_fm_read
      description: Return building fms of the building
      parameters:
        - description: ID of the building
          name: building_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return building fms of the building
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingfmsGetBuildingFmsResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingfmsGetBuildingFms401Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingfmsGetBuildingFms500Response'
    post:
      tags:
        - building_fms
      summary: Creates a building fm
      operationId: Buildingfms_createBuildingFm
      security:
        - api_key: []
        - oauth:
            - building_fm_write
      description: |
        # Description
        Creates a building fm
      parameters:
        - description: ID of the building
          name: building_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingFmCreate'
        required: true
      responses:
        '201':
          description: Customer account category successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingfmsCreateBuildingFmResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingfmsCreateBuildingFm401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingfmsCreateBuildingFm403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingfmsCreateBuildingFm422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingfmsCreateBuildingFm500Response'
  /v1/building_fms/{building_fm_id}:
    put:
      tags:
        - building_fms
      summary: Update building fm
      operationId: Buildingfms_updateBuildingFm
      security:
        - api_key: []
        - oauth:
            - building_fm_write
      description: Update building fm
      parameters:
        - description: ID of the building
          name: building_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the building fm to update
          name: building_fm_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingFmUpdate'
        required: true
      responses:
        '200':
          description: Building fm successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingFmShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingfmsUpdateBuildingFmResponse'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingfmsUpdateBuildingFm403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingfmsUpdateBuildingFm422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingfmsUpdateBuildingFm500Response'
  /v1/building_unit_retails:
    get:
      tags:
        - building_unit_retails
      summary: Return building unit retails of the building
      operationId: Buildingunitretails_list
      security:
        - api_key: []
        - oauth:
            - building_unit_retail_read
      description: Return building unit retails of the building
      parameters:
        - description: ID of the building unit
          name: building_unit_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return building unit retails of the building unit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunitretailsListResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunitretailsList401Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunitretailsList500Response'
    post:
      tags:
        - building_unit_retails
      summary: Creates a building unit retail
      operationId: Buildingunitretails_createRetailUnit
      security:
        - api_key: []
        - oauth:
            - building_unit_retail_write
      description: |
        # Description
        Creates a building unit retail
      parameters:
        - description: ID of the building unit
          name: building_unit_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingUnitRetailCreate'
        required: true
      responses:
        '201':
          description: Building unit retail successfully created
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitretailsCreateRetailUnitResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitretailsCreateRetailUnit401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitretailsCreateRetailUnit403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitretailsCreateRetailUnit422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitretailsCreateRetailUnit500Response
  /v1/building_unit_retails/{building_unit_retail_id}:
    put:
      tags:
        - building_unit_retails
      summary: Update building unit retail
      operationId: Buildingunitretails_updateUnitRetail
      security:
        - api_key: []
        - oauth:
            - building_unit_retail_write
      description: Update building unit retail
      parameters:
        - description: ID of the building
          name: building_unit_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the building unit retail to update
          name: building_unit_retail_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingUnitRetailUpdate'
        required: true
      responses:
        '200':
          description: Building unit retail successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingUnitRetailShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitretailsUpdateUnitRetailResponse
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitretailsUpdateUnitRetail403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitretailsUpdateUnitRetail422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitretailsUpdateUnitRetail500Response
  /v1/building_unit_retail_metrics:
    get:
      tags:
        - building_unit_retail_metrics
      summary: Return building unit retails of the building unit retail
      operationId: Buildingunitretailmetrics_getBuildingUnitRetails
      security:
        - api_key: []
        - oauth:
            - building_unit_retail_metric_read
      description: Return building unit retails of the building unit retail
      parameters:
        - description: ID of the building unit retail unit
          name: building_unit_retail_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return building unit retails of the building unit retail
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitretailmetricsGetBuildingUnitRetailsResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitretailmetricsGetBuildingUnitRetails401Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitretailmetricsGetBuildingUnitRetails500Response
    post:
      tags:
        - building_unit_retail_metrics
      summary: Creates a building unit retail metric
      operationId: Buildingunitretailmetrics_createMetric
      security:
        - api_key: []
        - oauth:
            - building_unit_retail_metric_write
      description: |
        # Description
        Creates a building unit retail metric
      parameters:
        - description: ID of the building unit retail unit
          name: building_unit_retail_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingUnitRetailMetricCreate'
        required: true
      responses:
        '201':
          description: Building unit retail metric successfully created
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitretailmetricsCreateMetricResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitretailmetricsCreateMetric401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitretailmetricsCreateMetric403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitretailmetricsCreateMetric422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitretailmetricsCreateMetric500Response
  /v1/building_unit_retail_metrics/{building_unit_retail_metric_id}:
    put:
      tags:
        - building_unit_retail_metrics
      summary: Update building unit retail
      operationId: Buildingunitretailmetrics_updateRetailBuildingUnit
      security:
        - api_key: []
        - oauth:
            - building_unit_retail_metric_write
      description: Update building unit retail
      parameters:
        - description: ID of the building unit retail
          name: building_unit_retail_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the building unit retail metric to update
          name: building_unit_retail_metric_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingUnitRetailMetricUpdate'
        required: true
      responses:
        '200':
          description: Building unit retail successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingUnitRetailMetricShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitretailmetricsUpdateRetailBuildingUnitResponse
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitretailmetricsUpdateRetailBuildingUnit403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitretailmetricsUpdateRetailBuildingUnit422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitretailmetricsUpdateRetailBuildingUnit500Response
  /v1/building_wastes:
    get:
      tags:
        - building_wastes
      summary: Return building wastes of the building
      operationId: Buildingwastes_getBuildingWastes
      security:
        - api_key: []
        - oauth:
            - building_waste_read
      description: Return building wastes of the building
      parameters:
        - description: ID of the building
          name: building_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return building wastes of the building
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingwastesGetBuildingWastesResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingwastesGetBuildingWastes401Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingwastesGetBuildingWastes500Response
    post:
      tags:
        - building_wastes
      summary: Creates a building waste
      operationId: Buildingwastes_createBuildingWaste
      security:
        - api_key: []
        - oauth:
            - building_waste_write
      description: |
        # Description
        Creates a building waste
      parameters:
        - description: ID of the building
          name: building_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingWasteCreate'
        required: true
      responses:
        '201':
          description: Customer account category successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingwastesCreateBuildingWasteResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingwastesCreateBuildingWaste401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingwastesCreateBuildingWaste403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingwastesCreateBuildingWaste422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingwastesCreateBuildingWaste500Response
  /v1/building_wastes/{building_waste_id}:
    put:
      tags:
        - building_wastes
      summary: Update building waste
      operationId: Buildingwastes_updateBuildingWaste
      security:
        - api_key: []
        - oauth:
            - building_waste_write
      description: Update building waste
      parameters:
        - description: ID of the building
          name: building_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the building waste to update
          name: building_waste_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingWasteUpdate'
        required: true
      responses:
        '200':
          description: Building waste successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingWasteShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingwastesUpdateBuildingWasteResponse'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingwastesUpdateBuildingWaste403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingwastesUpdateBuildingWaste422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingwastesUpdateBuildingWaste500Response
  /v1/building_waters:
    get:
      tags:
        - building_waters
      summary: Return building waters of the building
      operationId: Buildingwaters_getBuildingWaters
      security:
        - api_key: []
        - oauth:
            - building_water_read
      description: Return building waters of the building
      parameters:
        - description: ID of the building
          name: building_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return building waters of the building
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingwatersGetBuildingWatersResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingwatersGetBuildingWaters401Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingwatersGetBuildingWaters500Response
    post:
      tags:
        - building_waters
      summary: Creates a building water
      operationId: Buildingwaters_createBuildingWater
      security:
        - api_key: []
        - oauth:
            - building_water_write
      description: |
        # Description
        Creates a building water
      parameters:
        - description: ID of the building
          name: building_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingWaterCreate'
        required: true
      responses:
        '201':
          description: Customer account category successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingwatersCreateBuildingWaterResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingwatersCreateBuildingWater401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingwatersCreateBuildingWater403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingwatersCreateBuildingWater422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingwatersCreateBuildingWater500Response
  /v1/building_waters/{building_water_id}:
    put:
      tags:
        - building_waters
      summary: Update building water
      operationId: Buildingwaters_updateBuildingWater
      security:
        - api_key: []
        - oauth:
            - building_water_write
      description: Update building water
      parameters:
        - description: ID of the building
          name: building_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the building water to update
          name: building_water_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingWaterUpdate'
        required: true
      responses:
        '200':
          description: Building water successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingWaterShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingwatersUpdateBuildingWaterResponse'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingwatersUpdateBuildingWater403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingwatersUpdateBuildingWater422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingwatersUpdateBuildingWater500Response
  /v1/addtl_building_ids:
    get:
      tags:
        - addtl_building_ids
      summary: Return addtl building ids of the building
      operationId: Addtlbuildingids_getBuildingIds
      security:
        - api_key: []
        - oauth:
            - addtl_building_id_read
      description: Return addtl building ids of the building
      parameters:
        - description: ID of the building
          name: building_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return addtl building ids
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddtlbuildingidsGetBuildingIdsResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddtlbuildingidsGetBuildingIds401Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddtlbuildingidsGetBuildingIds500Response'
    post:
      tags:
        - addtl_building_ids
      summary: Creates a addtl building id
      operationId: Addtlbuildingids_createId
      security:
        - api_key: []
        - oauth:
            - addtl_building_id_write
      description: |
        # Description
        Creates a addtl building id
      parameters:
        - description: ID of the building
          name: building_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddtlBuildingIdCreate'
        required: true
      responses:
        '201':
          description: Customer account category successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddtlbuildingidsCreateIdResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddtlbuildingidsCreateId401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddtlbuildingidsCreateId403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddtlbuildingidsCreateId422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddtlbuildingidsCreateId500Response'
  /v1/addtl_building_ids/{addtl_building_id_id}:
    put:
      tags:
        - addtl_building_ids
      summary: Update addtl building id
      operationId: Addtlbuildingids_updateBuildingId
      security:
        - api_key: []
        - oauth:
            - addtl_building_id_write
      description: Update addtl building id
      parameters:
        - description: ID of the building
          name: building_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the addtl building id to update
          name: addtl_building_id_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddtlBuildingIdUpdate'
        required: true
      responses:
        '200':
          description: Addtl building id successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddtlBuildingIdShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddtlbuildingidsUpdateBuildingIdResponse'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AddtlbuildingidsUpdateBuildingId403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AddtlbuildingidsUpdateBuildingId422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/AddtlbuildingidsUpdateBuildingId500Response
  /v1/phases:
    get:
      tags:
        - phases
      summary: Return phases of the building
      operationId: Phases_getBuildingPhases
      security:
        - api_key: []
        - oauth:
            - phase_read
      description: Return phases of the building
      responses:
        '200':
          description: Return phases of the building or unit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhasesGetBuildingPhasesResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhasesGetBuildingPhases401Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhasesGetBuildingPhases500Response'
    post:
      tags:
        - phases
      summary: Creates a phase
      operationId: Phases_createPhase
      security:
        - api_key: []
        - oauth:
            - phase_write
      description: |
        # Description
        Creates a phase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhaseCreate'
        required: true
      responses:
        '201':
          description: Phase successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhasesCreatePhaseResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhasesCreatePhase401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhasesCreatePhase403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhasesCreatePhase422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhasesCreatePhase500Response'
  /v1/phases/{phase_id}:
    put:
      tags:
        - phases
      summary: Update phase
      operationId: Phases_updatePhase
      security:
        - api_key: []
        - oauth:
            - phase_write
      description: Update phase
      parameters:
        - description: ID of the phase to update
          name: phase_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhaseUpdate'
        required: true
      responses:
        '200':
          description: Building phase successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhaseShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhasesUpdatePhaseResponse'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhasesUpdatePhase403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhasesUpdatePhase422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhasesUpdatePhase500Response'
  /v1/rent_trackers:
    post:
      tags:
        - rent_trackers
      summary: Creates a rent_tracker
      operationId: Renttrackers_createRentTracker
      security:
        - api_key: []
        - oauth:
            - rent_tracker_write
      description: |
        # Description
        Creates a rent_tracker
      parameters:
        - description: ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/RentTrackerCreate'
      responses:
        '201':
          description: RentTracker successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenttrackersCreateRentTrackerResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenttrackersCreateRentTracker401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenttrackersCreateRentTracker403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenttrackersCreateRentTracker422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenttrackersCreateRentTracker500Response'
    get:
      tags:
        - rent_trackers
      summary: Return rent_trackers
      operationId: Renttrackers_getRentTrackers
      security:
        - api_key: []
        - oauth:
            - rent_tracker_read
      description: Return rent_trackers
      parameters:
        - description: ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: string
        - description: ID of the organisation
          name: organisation_id
          in: query
          schema:
            type: string
        - description: IDs of the units
          name: unit_ids
          in: query
          example: 1,2,3
          schema:
            type: string
        - description: IDs of the contracts
          name: contract_ids
          in: query
          example: 1,2,3
          schema:
            type: string
      responses:
        '200':
          description: Return rent_trackers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenttrackersGetRentTrackersResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenttrackersGetRentTrackers401Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenttrackersGetRentTrackers500Response'
  /v1/rent_trackers/{rent_tracker_id}:
    get:
      tags:
        - rent_trackers
      summary: Return rent_tracker
      operationId: Renttrackers_getRentTracker
      security:
        - api_key: []
        - oauth:
            - rent_tracker_read
      description: Return rent_tracker
      parameters:
        - description: ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: string
        - description: ID of the rent_tracker
          name: rent_tracker_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns rent_tracker
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenttrackersGetRentTrackerResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenttrackersGetRentTracker401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenttrackersGetRentTracker403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenttrackersGetRentTracker404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenttrackersGetRentTracker422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenttrackersGetRentTracker500Response'
    put:
      tags:
        - rent_trackers
      summary: Update rent_tracker
      operationId: Renttrackers_updateRentTracker
      security:
        - api_key: []
        - oauth:
            - rent_tracker_write
      description: Update rent_tracker
      parameters:
        - description: ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: string
        - description: ID of the rent_tracker to update
          name: rent_tracker_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/RentTrackerCreate'
      responses:
        '200':
          description: Building rent_tracker successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentTrackerShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenttrackersUpdateRentTrackerResponse'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenttrackersUpdateRentTracker403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenttrackersUpdateRentTracker422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenttrackersUpdateRentTracker500Response'
  /v1/building_parkings:
    get:
      tags:
        - building_parkings
      summary: Return building parkings of the building
      operationId: Buildingparkings_getBuildingParkings
      security:
        - api_key: []
        - oauth:
            - building_parking_read
      description: Return building parkings of the building
      parameters:
        - description: ID of the building
          name: building_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return building parkings of the building
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingparkingsGetBuildingParkingsResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingparkingsGetBuildingParkings401Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingparkingsGetBuildingParkings500Response
    post:
      tags:
        - building_parkings
      summary: Creates a building parking
      operationId: Buildingparkings_createNewParking
      security:
        - api_key: []
        - oauth:
            - building_parking_write
      description: |
        # Description
        Creates a building parking
      parameters:
        - description: ID of the building
          name: building_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingParkingCreate'
        required: true
      responses:
        '201':
          description: Customer account category successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingparkingsCreateNewParkingResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingparkingsCreateNewParking401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingparkingsCreateNewParking403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingparkingsCreateNewParking422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingparkingsCreateNewParking500Response
  /v1/building_parkings/{building_parking_id}:
    put:
      tags:
        - building_parkings
      summary: Update building parking
      operationId: Buildingparkings_updateParking
      security:
        - api_key: []
        - oauth:
            - building_parking_write
      description: Update building parking
      parameters:
        - description: ID of the building
          name: building_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the building parking to update
          name: building_parking_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingParkingUpdate'
        required: true
      responses:
        '200':
          description: Building parking successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingParkingShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingparkingsUpdateParkingResponse'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingparkingsUpdateParking403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingparkingsUpdateParking422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingparkingsUpdateParking500Response'
  /v1/building_areas:
    get:
      tags:
        - building_areas
      summary: Return building areas of the building
      operationId: Buildingareas_getBuildingAreas
      security:
        - api_key: []
        - oauth:
            - building_area_read
      description: Return building areas of the building
      parameters:
        - description: ID of the building
          name: building_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return building areas of the building
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingareasGetBuildingAreasResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingareasGetBuildingAreas401Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingareasGetBuildingAreas500Response'
    post:
      tags:
        - building_areas
      summary: Creates a building area
      operationId: Buildingareas_createNewBuildingArea
      security:
        - api_key: []
        - oauth:
            - building_area_write
      description: |
        # Description
        Creates a building area
      parameters:
        - description: ID of the building
          name: building_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingAreaCreate'
        required: true
      responses:
        '201':
          description: Customer account category successfully created
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingareasCreateNewBuildingAreaResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingareasCreateNewBuildingArea401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingareasCreateNewBuildingArea403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingareasCreateNewBuildingArea422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingareasCreateNewBuildingArea500Response
  /v1/building_areas/{building_area_id}:
    put:
      tags:
        - building_areas
      summary: Update building area
      operationId: Buildingareas_updateArea
      security:
        - api_key: []
        - oauth:
            - building_area_write
      description: Update building area
      parameters:
        - description: ID of the building
          name: building_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the building area to update
          name: building_area_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingAreaUpdate'
        required: true
      responses:
        '200':
          description: building area successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingAreaShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingareasUpdateAreaResponse'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingareasUpdateArea403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingareasUpdateArea422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingareasUpdateArea500Response'
  /v1/building_unit_areas:
    get:
      tags:
        - building_unit_areas
      summary: Return building areas of the building
      operationId: Buildingunitareas_getBuildingAreas
      security:
        - api_key: []
        - oauth:
            - building_unit_area_read
      description: Return building areas of the building
      parameters:
        - description: ID of the building unit
          name: building_unit_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return building areas of the building unit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunitareasGetBuildingAreasResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitareasGetBuildingAreas401Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitareasGetBuildingAreas500Response
    post:
      tags:
        - building_unit_areas
      summary: Creates a building area
      operationId: Buildingunitareas_createArea
      security:
        - api_key: []
        - oauth:
            - building_unit_area_write
      description: |
        # Description
        Creates a building area
      parameters:
        - description: ID of the building unit
          name: building_unit_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingUnitAreaCreate'
        required: true
      responses:
        '201':
          description: Customer account category successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunitareasCreateAreaResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunitareasCreateArea401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunitareasCreateArea403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunitareasCreateArea422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunitareasCreateArea500Response'
  /v1/building_unit_areas/{building_unit_area_id}:
    put:
      tags:
        - building_unit_areas
      summary: Update building area
      operationId: Buildingunitareas_updateArea
      security:
        - api_key: []
        - oauth:
            - building_unit_area_write
      description: Update building area
      parameters:
        - description: ID of the building unit
          name: building_unit_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the building area to update
          name: building_unit_area_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingUnitAreaUpdate'
        required: true
      responses:
        '200':
          description: building area successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingUnitAreaShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunitareasUpdateAreaResponse'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunitareasUpdateArea403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunitareasUpdateArea422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunitareasUpdateArea500Response'
  /v1/building_unit_places:
    get:
      tags:
        - building_unit_places
      summary: Return building unit places of the unit
      operationId: Buildingunitplaces_getUnitPlaces
      security:
        - api_key: []
        - oauth:
            - building_unit_place_read
      description: Return building unit places of the unit
      parameters:
        - description: ID of the building unit
          name: building_unit_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return building unit places of the unit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunitplacesGetUnitPlacesResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitplacesGetUnitPlaces401Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitplacesGetUnitPlaces500Response
    post:
      tags:
        - building_unit_places
      summary: Creates a building unit places
      operationId: Buildingunitplaces_createPlace
      security:
        - api_key: []
        - oauth:
            - building_unit_place_write
      description: |
        # Description
        Creates a building unit places
      parameters:
        - description: ID of the building unit
          name: building_unit_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingUnitPlaceCreate'
        required: true
      responses:
        '201':
          description: Customer account category successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunitplacesCreatePlaceResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunitplacesCreatePlace401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunitplacesCreatePlace403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunitplacesCreatePlace422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunitplacesCreatePlace500Response'
  /v1/building_unit_places/{building_unit_place_id}:
    put:
      tags:
        - building_unit_places
      summary: Update building unit place
      operationId: Buildingunitplaces_updatePlace
      security:
        - api_key: []
        - oauth:
            - building_unit_place_write
      description: Update building unit place
      parameters:
        - description: ID of the building unit
          name: building_unit_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the building unit place to update
          name: building_unit_place_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingUnitPlaceUpdate'
        required: true
      responses:
        '200':
          description: Building unit place successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingUnitPlaceShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunitplacesUpdatePlaceResponse'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunitplacesUpdatePlace403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunitplacesUpdatePlace422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingunitplacesUpdatePlace500Response'
  /v1/building_unit_places_timeboxeds:
    get:
      tags:
        - building_unit_places_timeboxeds
      summary: Return building energies of the building
      operationId: Buildingunitplacestimeboxeds_getBuildingEnergies
      security:
        - api_key: []
        - oauth:
            - building_unit_places_timeboxed_read
      description: Return building energies of the building
      parameters:
        - description: ID of the building unit place
          name: building_unit_place_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return building unit place timeboxes of the unit
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitplacestimeboxedsGetBuildingEnergiesResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitplacestimeboxedsGetBuildingEnergies401Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitplacestimeboxedsGetBuildingEnergies500Response
    post:
      tags:
        - building_unit_places_timeboxeds
      summary: Creates a building unit place timeboxed
      operationId: Buildingunitplacestimeboxeds_createTimeboxed
      security:
        - api_key: []
        - oauth:
            - building_unit_places_timeboxed_write
      description: |
        # Description
        Creates a building energy
      parameters:
        - description: ID of the building unit place
          name: building_unit_place_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingUnitPlacesTimeboxedCreate'
        required: true
      responses:
        '201':
          description: Building unit place timeboxed successfully created!
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitplacestimeboxedsCreateTimeboxedResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitplacestimeboxedsCreateTimeboxed401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitplacestimeboxedsCreateTimeboxed403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitplacestimeboxedsCreateTimeboxed422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitplacestimeboxedsCreateTimeboxed500Response
  /v1/building_unit_places_timeboxeds/{building_unit_places_timeboxed_id}:
    put:
      tags:
        - building_unit_places_timeboxeds
      summary: Update building unit place timeboxed
      operationId: Buildingunitplacestimeboxeds_updateTimeboxed
      security:
        - api_key: []
        - oauth:
            - building_unit_places_timeboxed_write
      description: Update building unit place timeboxed
      parameters:
        - description: ID of the building
          name: building_unit_place_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the building unit place timeboxed to update
          name: building_unit_places_timeboxed_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingUnitPlacesTimeboxedUpdate'
        required: true
      responses:
        '200':
          description: Building unit place timeboxed successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingUnitPlacesTimeboxedShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitplacestimeboxedsUpdateTimeboxedResponse
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitplacestimeboxedsUpdateTimeboxed403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitplacestimeboxedsUpdateTimeboxed422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitplacestimeboxedsUpdateTimeboxed500Response
  /v1/building_unit_places_properties:
    get:
      tags:
        - building_unit_places_properties
      summary: Return building unit place properties
      operationId: Buildingunitplacesproperties_returnProperties
      security:
        - api_key: []
        - oauth:
            - building_unit_places_property_read
      description: Return building unit place properties
      parameters:
        - description: ID of the building unit place timeboxed
          name: building_unit_places_timeboxed_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return building unit place properties of the timeboxed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitplacespropertiesReturnPropertiesResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitplacespropertiesReturnProperties401Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitplacespropertiesReturnProperties500Response
    post:
      tags:
        - building_unit_places_properties
      summary: Creates a building unit place property
      operationId: Buildingunitplacesproperties_createNew
      security:
        - api_key: []
        - oauth:
            - building_unit_places_property_write
      description: |
        # Description
        Creates a building unit place property
      parameters:
        - description: ID of the building unit timeboxed
          name: building_unit_places_timeboxed_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingUnitPlacesPropertyCreate'
        required: true
      responses:
        '201':
          description: Building unit place property successfully created!
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitplacespropertiesCreateNewResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitplacespropertiesCreateNew401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitplacespropertiesCreateNew403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitplacespropertiesCreateNew422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitplacespropertiesCreateNew500Response
  /v1/building_unit_places_properties/{building_unit_places_property_id}:
    put:
      tags:
        - building_unit_places_properties
      summary: Update building unit place property
      operationId: Buildingunitplacesproperties_updateProperty
      security:
        - api_key: []
        - oauth:
            - building_unit_places_property_write
      description: Update building unit place property
      parameters:
        - description: ID of the timeboxed
          name: building_unit_places_timeboxed_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the building unit place property to update
          name: building_unit_places_property_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildingUnitPlacesPropertyUpdate'
        required: true
      responses:
        '200':
          description: Building unit place property successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingUnitPlacesPropertieshow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitplacespropertiesUpdatePropertyResponse
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitplacespropertiesUpdateProperty403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitplacespropertiesUpdateProperty422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BuildingunitplacespropertiesUpdateProperty500Response
  /v1/people:
    get:
      tags:
        - people
      summary: Returns all people within the given organisation.
      operationId: People_getAllWithinOrganisation
      security:
        - api_key: []
        - oauth:
            - person_read
      description: >-
        Returns all people within the given organisation. Organisation manager
        only 🔒
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
      responses:
        '200':
          description: Returns all people within the given organisation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeopleGetAllWithinOrganisationResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeopleGetAllWithinOrganisation401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeopleGetAllWithinOrganisation403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeopleGetAllWithinOrganisation422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeopleGetAllWithinOrganisation500Response'
    post:
      tags:
        - people
      summary: Creates a person.
      operationId: People_createPerson
      security:
        - api_key: []
        - oauth:
            - person_write
      description: Creates a person. Organisation manager only 🔒
      parameters:
        - description: The ID of the current organisation
          name: current_organisation_id
          in: query
          required: false
          schema:
            type: integer
        - description: Boolean check if the person is a contact
          name: contact
          in: query
          required: false
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonCreate'
        required: true
      responses:
        '201':
          description: Person successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeopleCreatePersonResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeopleCreatePerson401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeopleCreatePerson403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeopleCreatePerson422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeopleCreatePerson500Response'
  /v1/people/{person_id}:
    get:
      tags:
        - people
      summary: Shows a person.
      operationId: People_showPerson
      security:
        - api_key: []
        - oauth:
            - person_read
      description: Shows a person. Organisation manager only 🔒
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - description: The ID of the person to show
          name: person_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the person
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeopleShowPersonResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeopleShowPerson401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeopleShowPerson403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeopleShowPerson404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeopleShowPerson422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeopleShowPerson500Response'
    put:
      tags:
        - people
      summary: Updates an person.
      operationId: People_updatePerson
      security:
        - api_key: []
        - oauth:
            - person_write
      description: Updates an person. Organisation manager only 🔒
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - description: The ID of the person to update
          name: person_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonUpdate'
        required: true
      responses:
        '200':
          description: Person successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeopleUpdatePersonResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeopleUpdatePerson401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeopleUpdatePerson403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeopleUpdatePerson422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PeopleUpdatePerson500Response'
    delete:
      tags:
        - people
      summary: Deletes the person within the current organisation.
      operationId: People_deletePersonWithinOrganisation
      security:
        - api_key: []
        - oauth:
            - person_destroy
      description: >-
        Deletes the person within the current organisation. Organisation manager
        only 🔒
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - description: The ID of the person to delete
          name: person_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Person successfully deleted
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PeopleDeletePersonWithinOrganisationResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PeopleDeletePersonWithinOrganisation401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PeopleDeletePersonWithinOrganisation403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PeopleDeletePersonWithinOrganisation404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PeopleDeletePersonWithinOrganisation422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PeopleDeletePersonWithinOrganisation500Response
  /v1/report_templates:
    get:
      tags:
        - report_templates
      summary: Returns all report template for current customer account
      operationId: Reporttemplates_getAllTemplates
      security:
        - api_key: []
        - oauth:
            - report_template_read
      description: Returns all report template for current customer account
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns all report templates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReporttemplatesGetAllTemplatesResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReporttemplatesGetAllTemplates401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReporttemplatesGetAllTemplates403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReporttemplatesGetAllTemplates422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReporttemplatesGetAllTemplates500Response'
    post:
      tags:
        - report_templates
      summary: Create report template.
      operationId: Reporttemplates_createNewTemplate
      security:
        - api_key: []
        - oauth:
            - report_template_write
      description: Create report template. Customer account users only 🔒
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/ReportTemplateCreate'
      responses:
        '200':
          description: Create report template
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReporttemplatesCreateNewTemplateResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ReporttemplatesCreateNewTemplate401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ReporttemplatesCreateNewTemplate403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ReporttemplatesCreateNewTemplate422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ReporttemplatesCreateNewTemplate500Response
  /v1/report_templates/{report_template_id}:
    get:
      tags:
        - report_templates
      summary: Shows a report template
      operationId: Reporttemplates_showTemplate
      security:
        - api_key: []
        - oauth:
            - report_template_read
      description: Shows a report template
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the report template
          name: report_template_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return report template
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReporttemplatesShowTemplateResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReporttemplatesShowTemplate401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReporttemplatesShowTemplate403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReporttemplatesShowTemplate404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReporttemplatesShowTemplate422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReporttemplatesShowTemplate500Response'
    put:
      tags:
        - report_templates
      summary: Update a report template.
      operationId: Reporttemplates_updateTemplate
      security:
        - api_key: []
        - oauth:
            - report_template_write
      description: Update a report template. Customer account users only 🔒
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the report template
          name: report_template_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/ReportTemplateCreate'
      responses:
        '200':
          description: Report template successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReporttemplatesUpdateTemplateResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReporttemplatesUpdateTemplate401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReporttemplatesUpdateTemplate403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReporttemplatesUpdateTemplate404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReporttemplatesUpdateTemplate422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReporttemplatesUpdateTemplate500Response'
    delete:
      tags:
        - report_templates
      summary: Delete the report template.
      operationId: Reporttemplates_deleteReportTemplate
      security:
        - api_key: []
        - oauth:
            - report_template_destroy
      description: Delete the report template. Customer account users only 🔒
      parameters:
        - description: ID of the report template
          name: report_template_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Report template successfully deleted
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ReporttemplatesDeleteReportTemplateResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ReporttemplatesDeleteReportTemplate401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ReporttemplatesDeleteReportTemplate403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ReporttemplatesDeleteReportTemplate404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ReporttemplatesDeleteReportTemplate422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ReporttemplatesDeleteReportTemplate500Response
  /v1/report_account_schemas:
    get:
      tags:
        - report_account_schemas
      summary: Returns all report account schemas for current customer account
      operationId: Reportaccountschemas_getAll
      security:
        - api_key: []
        - oauth:
            - report_account_schema_read
      description: Returns all report account schemas for current customer account
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns all report account schemas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportaccountschemasGetAllResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportaccountschemasGetAll401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportaccountschemasGetAll403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportaccountschemasGetAll422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportaccountschemasGetAll500Response'
    post:
      tags:
        - report_account_schemas
      summary: Customer account users only 🔒
      operationId: Reportaccountschemas_createNewReportAccountSchema
      security:
        - api_key: []
        - oauth:
            - report_account_schema_write
      description: Create report account schema
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/ReportAccountSchemaCreate'
      responses:
        '200':
          description: Create report account schema
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ReportaccountschemasCreateNewReportAccountSchemaResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ReportaccountschemasCreateNewReportAccountSchema401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ReportaccountschemasCreateNewReportAccountSchema403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ReportaccountschemasCreateNewReportAccountSchema422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ReportaccountschemasCreateNewReportAccountSchema500Response
  /v1/report_account_schemas/{report_account_schema_id}:
    get:
      tags:
        - report_account_schemas
      summary: Shows a report account schema
      operationId: Reportaccountschemas_showReportAccountSchema
      security:
        - api_key: []
        - oauth:
            - report_account_schema_read
      description: Shows a report account schema
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the report account schema
          name: report_account_schema_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return report account schema
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ReportaccountschemasShowReportAccountSchemaResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ReportaccountschemasShowReportAccountSchema401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ReportaccountschemasShowReportAccountSchema403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ReportaccountschemasShowReportAccountSchema404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ReportaccountschemasShowReportAccountSchema422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ReportaccountschemasShowReportAccountSchema500Response
    put:
      tags:
        - report_account_schemas
      summary: Update a report account schema.
      operationId: Reportaccountschemas_updateSchema
      security:
        - api_key: []
        - oauth:
            - report_account_schema_write
      description: Update a report account schema. Customer account users only 🔒
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the report account schema
          name: report_account_schema_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/ReportAccountSchemaCreate'
      responses:
        '200':
          description: Report account schema successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportaccountschemasUpdateSchemaResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ReportaccountschemasUpdateSchema401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ReportaccountschemasUpdateSchema403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ReportaccountschemasUpdateSchema404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ReportaccountschemasUpdateSchema422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ReportaccountschemasUpdateSchema500Response
    delete:
      tags:
        - report_account_schemas
      summary: Delete the report account schema.
      operationId: Reportaccountschemas_deleteSchema
      security:
        - api_key: []
        - oauth:
            - report_account_schema_destroy
      description: Delete the report account schema. Customer account users only 🔒
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the report account schema
          name: report_account_schema_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Report account schema successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportaccountschemasDeleteSchemaResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ReportaccountschemasDeleteSchema401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ReportaccountschemasDeleteSchema403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ReportaccountschemasDeleteSchema404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ReportaccountschemasDeleteSchema422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ReportaccountschemasDeleteSchema500Response
  /v1/person_memberships:
    get:
      tags:
        - person_memberships
      summary: 'Returns all person_memberships within the given organisation. '
      operationId: Personmemberships_listWithinOrganisation
      security:
        - api_key: []
        - oauth:
            - person_membership_read
      description: Returns all person_memberships within the given organisation.
      parameters:
        - description: The ID of the current organisation
          name: current_organisation_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the member
          name: member_id
          in: query
          required: true
          schema:
            type: integer
        - description: The type of the member
          name: member_type
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns all person_memberships within the given customer account
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PersonmembershipsListWithinOrganisationResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PersonmembershipsListWithinOrganisation401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PersonmembershipsListWithinOrganisation403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PersonmembershipsListWithinOrganisation422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PersonmembershipsListWithinOrganisation500Response
    post:
      tags:
        - person_memberships
      summary: Creates a membership in person
      operationId: Personmemberships_createMembershipInPerson
      security:
        - api_key: []
        - oauth:
            - person_membership_write
      description: Creates a membership in person
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonMembershipCreate'
        required: true
      responses:
        '201':
          description: Membership successfully created
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PersonmembershipsCreateMembershipInPersonResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PersonmembershipsCreateMembershipInPerson401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PersonmembershipsCreateMembershipInPerson403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PersonmembershipsCreateMembershipInPerson422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PersonmembershipsCreateMembershipInPerson500Response
  /v1/person_memberships/{person_membership_id}:
    delete:
      tags:
        - person_memberships
      summary: Destroys the person membership
      operationId: Personmemberships_destroyMembership
      security:
        - api_key: []
        - oauth:
            - person_membership_destroy
      description: Destroys the person membership
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - description: ID of the person membership to be destroyed
          name: person_membership_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Membership successfully marked as deleted
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PersonmembershipsDestroyMembershipResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PersonmembershipsDestroyMembership401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PersonmembershipsDestroyMembership403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PersonmembershipsDestroyMembership404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PersonmembershipsDestroyMembership422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/PersonmembershipsDestroyMembership500Response
  /v1/levels:
    get:
      tags:
        - levels
      summary: Returns all levels within the given organisation.
      operationId: Levels_getAll
      security:
        - api_key: []
        - oauth:
            - level_read
      description: >-
        Returns all levels within the given organisation. Organisation manager
        only 🔒
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - description: The ID of the building
          name: building_id
          in: query
          required: false
          schema:
            type: integer
        - description: The name of the level
          name: name
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Returns all levels within the given organisation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LevelsGetAllResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LevelsGetAll401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LevelsGetAll403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LevelsGetAll422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LevelsGetAll500Response'
    post:
      tags:
        - levels
      summary: Creates a level
      operationId: Levels_createNewLevel
      security:
        - api_key: []
        - oauth:
            - level_write
      description: Creates a level
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LevelCreate'
        required: true
      responses:
        '201':
          description: Level successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LevelsCreateNewLevelResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LevelsCreateNewLevel401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LevelsCreateNewLevel403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LevelsCreateNewLevel422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LevelsCreateNewLevel500Response'
  /v1/levels/{level_id}:
    put:
      tags:
        - levels
      summary: Updates an level
      operationId: Levels_updateLevel
      security:
        - api_key: []
        - oauth:
            - level_write
      description: Updates an level
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - description: The ID of the level to update
          name: level_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Level'
        required: true
      responses:
        '200':
          description: Level successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LevelsUpdateLevelResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LevelsUpdateLevel401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LevelsUpdateLevel403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LevelsUpdateLevel404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LevelsUpdateLevel422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LevelsUpdateLevel500Response'
    delete:
      tags:
        - levels
      summary: Deletes the level within the current organisation
      operationId: Levels_deleteLevel
      security:
        - api_key: []
        - oauth:
            - level_destroy
      description: Deletes the level within the current organisation
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - description: The ID of the level to delete
          name: level_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Level successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LevelsDeleteLevelResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LevelsDeleteLevel401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LevelsDeleteLevel403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LevelsDeleteLevel404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LevelsDeleteLevel422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LevelsDeleteLevel500Response'
    get:
      tags:
        - levels
      summary: Shows a level.
      operationId: Levels_showLevel
      security:
        - api_key: []
        - oauth:
            - level_read
      description: Shows a level. Organisation manager only 🔒
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - description: The ID of the level to show
          name: level_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the level
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LevelsShowLevelResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LevelsShowLevel401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LevelsShowLevel403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LevelsShowLevel404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LevelsShowLevel422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LevelsShowLevel500Response'
  /v1/room_and_zone_types:
    get:
      tags:
        - room_and_zone_types
      summary: Returns all room and area types currently available
      operationId: Roomandzonetypes_getAll
      security:
        - api_key: []
        - oauth:
            - room_and_zone_type_read
      description: Returns all room and area types currently available
      responses:
        '200':
          description: Returns all room and area types
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomandzonetypesGetAllResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomandzonetypesGetAll401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomandzonetypesGetAll403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomandzonetypesGetAll422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomandzonetypesGetAll500Response'
  /v1/rooms:
    get:
      tags:
        - rooms
      summary: Returns all rooms within the given organisation
      operationId: Rooms_getAllWithinOrganisation
      security:
        - api_key: []
        - oauth:
            - room_read
      description: Returns all rooms within the given organisation
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
      responses:
        '200':
          description: Returns all rooms within the given organisation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomsGetAllWithinOrganisationResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomsGetAllWithinOrganisation401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomsGetAllWithinOrganisation403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomsGetAllWithinOrganisation422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomsGetAllWithinOrganisation500Response'
    post:
      tags:
        - rooms
      summary: Creates a room
      operationId: Rooms_createRoom
      security:
        - api_key: []
        - oauth:
            - room_write
      description: Creates a room
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoomCreate'
        required: true
      responses:
        '201':
          description: Room successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomsCreateRoomResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomsCreateRoom401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomsCreateRoom403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomsCreateRoom422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomsCreateRoom500Response'
  /v1/rooms/{room_id}:
    get:
      tags:
        - rooms
      summary: Shows a room
      operationId: Rooms_showRoom
      security:
        - api_key: []
        - oauth:
            - room_read
      description: Shows a room
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - description: The ID of the room to show
          name: room_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the room
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomsShowRoomResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomsShowRoom401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomsShowRoom403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomsShowRoom404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomsShowRoom422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomsShowRoom500Response'
    put:
      tags:
        - rooms
      summary: Updates an room
      operationId: Rooms_updateRoom
      security:
        - api_key: []
        - oauth:
            - room_write
      description: Updates an room
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - description: The ID of the room to update
          name: room_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoomUpdate'
        required: true
      responses:
        '200':
          description: Room successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomsUpdateRoomResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomsUpdateRoom401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomsUpdateRoom403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomsUpdateRoom404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomsUpdateRoom422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomsUpdateRoom500Response'
    delete:
      tags:
        - rooms
      summary: Deletes the room within the current organisation
      operationId: Rooms_deleteRoomWithinOrganisation
      security:
        - api_key: []
        - oauth:
            - room_destroy
      description: Deletes the room within the current organisation
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - description: The ID of the room to delete
          name: room_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Room successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomsDeleteRoomWithinOrganisationResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RoomsDeleteRoomWithinOrganisation401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RoomsDeleteRoomWithinOrganisation403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RoomsDeleteRoomWithinOrganisation404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RoomsDeleteRoomWithinOrganisation422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RoomsDeleteRoomWithinOrganisation500Response
  /v1/zones:
    post:
      tags:
        - zones
      summary: Creates a zone
      operationId: Zones_createZone
      security:
        - api_key: []
        - oauth:
            - zone_write
      description: Creates a zone
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZoneCreate'
        required: true
      responses:
        '201':
          description: Zone successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonesCreateZoneResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonesCreateZone401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonesCreateZone403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonesCreateZone422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonesCreateZone500Response'
  /v1/zones/{zone_id}:
    put:
      tags:
        - zones
      summary: Updates an zone
      operationId: Zones_updateZone
      security:
        - api_key: []
        - oauth:
            - zone_write
      description: Updates an zone
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - description: The ID of the zone to update
          name: zone_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ZoneUpdate'
        required: true
      responses:
        '200':
          description: Zone successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonesUpdateZoneResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonesUpdateZone401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonesUpdateZone403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonesUpdateZone404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonesUpdateZone422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonesUpdateZone500Response'
    delete:
      tags:
        - zones
      summary: Deletes the zone within the current organisation
      operationId: Zones_deleteZone
      security:
        - api_key: []
        - oauth:
            - zone_destroy
      description: Deletes the zone within the current organisation
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - description: The ID of the zone to delete
          name: zone_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Zone successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonesDeleteZoneResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonesDeleteZone401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonesDeleteZone403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonesDeleteZone404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonesDeleteZone422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ZonesDeleteZone500Response'
  /v1/departments:
    get:
      tags:
        - departments
      summary: Returns all departments within the given organisation
      operationId: Departments_getAll
      security:
        - api_key: []
        - oauth:
            - department_read
      description: Returns all departments within the given organisation
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
      responses:
        '200':
          description: Returns all departments within the given organisation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentsGetAllResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentsGetAll401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentsGetAll403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentsGetAll422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentsGetAll500Response'
    post:
      tags:
        - departments
      summary: Creates a department within the current organisation
      operationId: Departments_createNewDepartment
      security:
        - api_key: []
        - oauth:
            - department_write
      description: Creates a department within the current organisation
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepartmentCreate'
        required: true
      responses:
        '201':
          description: Department successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentsCreateNewDepartmentResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentsCreateNewDepartment401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentsCreateNewDepartment403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentsCreateNewDepartment422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentsCreateNewDepartment500Response'
  /v1/departments/{department_id}:
    put:
      tags:
        - departments
      summary: Updates an department within the current organisation.
      operationId: Departments_updateDepartment
      security:
        - api_key: []
        - oauth:
            - department_write
      description: >-
        Updates an department within the current organisation. Organisation
        manager only 🔒
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - description: The ID of the department to update
          name: department_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Department'
        required: true
      responses:
        '200':
          description: Department successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentsUpdateDepartmentResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentsUpdateDepartment401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentsUpdateDepartment403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentsUpdateDepartment404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentsUpdateDepartment422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentsUpdateDepartment500Response'
    delete:
      tags:
        - departments
      summary: Marks a department as deleted within the current organisation.
      operationId: Departments_markAsDeleted
      security:
        - api_key: []
        - oauth:
            - department_destroy
      description: >-
        Marks a department as deleted within the current organisation.
        Organisation manager only 🔒
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - description: The ID of the department to delete
          name: department_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Department successfully marked as deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentsMarkAsDeletedResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentsMarkAsDeleted401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentsMarkAsDeleted403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentsMarkAsDeleted404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentsMarkAsDeleted422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepartmentsMarkAsDeleted500Response'
  /v1/manufacturers:
    get:
      tags:
        - manufacturers
      summary: Returns all manufacturers within the given organisation
      operationId: Manufacturers_getAll
      security:
        - api_key: []
        - oauth:
            - manufacturer_read
      description: Returns all manufacturers within the given organisation
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
      responses:
        '200':
          description: Returns all manufacturers within the given organisation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManufacturersGetAllResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManufacturersGetAll401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManufacturersGetAll403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManufacturersGetAll422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManufacturersGetAll500Response'
    post:
      tags:
        - manufacturers
      summary: Creates a manufacturer within the current organisation
      operationId: Manufacturers_createNewManufacturer
      security:
        - api_key: []
        - oauth:
            - manufacturer_write
      description: Creates a manufacturer within the current organisation
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManufacturerCreate'
        required: true
      responses:
        '201':
          description: Manufacturer successfully created
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ManufacturersCreateNewManufacturerResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ManufacturersCreateNewManufacturer401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ManufacturersCreateNewManufacturer403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ManufacturersCreateNewManufacturer422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ManufacturersCreateNewManufacturer500Response
  /v1/manufacturers/{manufacturer_id}:
    put:
      tags:
        - manufacturers
      summary: Updates an manufacturer within the current organisation.
      operationId: Manufacturers_updateManufacturer
      security:
        - api_key: []
        - oauth:
            - manufacturer_write
      description: >-
        Updates an manufacturer within the current organisation. Organisation
        manager only 🔒
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - description: The ID of the manufacturer to update
          name: manufacturer_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Manufacturer'
        required: true
      responses:
        '200':
          description: Manufacturer successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManufacturersUpdateManufacturerResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ManufacturersUpdateManufacturer401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ManufacturersUpdateManufacturer403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ManufacturersUpdateManufacturer404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ManufacturersUpdateManufacturer422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ManufacturersUpdateManufacturer500Response
    delete:
      tags:
        - manufacturers
      summary: Deletes the manufacturer within the current organisation.
      operationId: Manufacturers_deleteManufacturer
      security:
        - api_key: []
        - oauth:
            - manufacturer_destroy
      description: >-
        Deletes the manufacturer within the current organisation. Organisation
        manager only 🔒
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - description: The ID of the manufacturer to delete
          name: manufacturer_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Manufacturer successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManufacturersDeleteManufacturerResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ManufacturersDeleteManufacturer401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ManufacturersDeleteManufacturer403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ManufacturersDeleteManufacturer404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ManufacturersDeleteManufacturer422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ManufacturersDeleteManufacturer500Response
  /v1/manufacturers/{manufacturer_id}/model_types:
    get:
      tags:
        - manufacturers
      operationId: Manufacturers_listModelTypes
      security:
        - api_key: []
        - oauth:
            - manufacturer_read
      description: Returns all types of models within the given manufacturer
      parameters:
        - description: The ID of the manufacturer
          name: manufacturer_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns all types of models within the given manufacturer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManufacturersListModelTypesResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManufacturersListModelTypes401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManufacturersListModelTypes403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManufacturersListModelTypes422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManufacturersListModelTypes500Response'
    post:
      tags:
        - manufacturers
      operationId: Manufacturers_createModelType
      security:
        - api_key: []
        - oauth:
            - manufacturer_write
      description: Creates a model_type
      parameters:
        - description: The ID of the manufacturer
          name: manufacturer_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelTypeCreate'
        required: true
      responses:
        '201':
          description: Manufacturer successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManufacturersCreateModelTypeResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManufacturersCreateModelType401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManufacturersCreateModelType403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManufacturersCreateModelType422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManufacturersCreateModelType500Response'
  /v1/manufacturers/{manufacturer_id}/model_types/{id}:
    put:
      tags:
        - manufacturers
      operationId: Manufacturers_updateModelType
      security:
        - api_key: []
        - oauth:
            - manufacturer_write
      description: Updates an model_type
      parameters:
        - description: The ID of the model_type to update
          name: id
          in: path
          required: true
          schema:
            type: integer
        - description: The ID of the manufacturer
          name: manufacturer_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ModelType'
        required: true
      responses:
        '200':
          description: Model type successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManufacturersUpdateModelTypeResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManufacturersUpdateModelType401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManufacturersUpdateModelType403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManufacturersUpdateModelType404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManufacturersUpdateModelType422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManufacturersUpdateModelType500Response'
    delete:
      tags:
        - manufacturers
      operationId: Manufacturers_deleteModelType
      security:
        - api_key: []
        - oauth:
            - manufacturer_destroy
      description: Deletes the model_type
      parameters:
        - description: The ID of the model_type to delete
          name: id
          in: path
          required: true
          schema:
            type: integer
        - description: The ID of the manufacturer
          name: manufacturer_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Model type successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManufacturersDeleteModelTypeResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManufacturersDeleteModelType401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManufacturersDeleteModelType403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManufacturersDeleteModelType404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManufacturersDeleteModelType422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManufacturersDeleteModelType500Response'
  /v1/facility_types:
    get:
      tags:
        - facility_types
      summary: Returns all facility types.
      operationId: Facilitytypes_getAll
      security:
        - api_key: []
        - oauth:
            - facility_type_read
      description: >
        Returns all facility types.

        Use this endpoint to show a drop down of all available facility types.
        Once a specific facility type is selected you can lazy load the matching
        JSON schema via the <strong>Facility Types SHOW</strong> endpoint.
      responses:
        '200':
          description: Returns all facility types excluding their schemas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilitytypesGetAllResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilitytypesGetAll401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilitytypesGetAll403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilitytypesGetAll422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilitytypesGetAll500Response'
  /v1/facility_types/facility_types_with_schema:
    get:
      tags:
        - facility_types
      summary: Returns all facility types.
      operationId: Facilitytypes_getAll
      security:
        - api_key: []
        - oauth:
            - facility_type_read
      description: >
        Returns all facility types.

        Use this endpoint if you implement an own cache mechanism. The facility
        types do only change infrequently.
      responses:
        '200':
          description: Returns all facility types including their schemas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilitytypesGetAll200Response'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilitytypesGetAll401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilitytypesGetAll403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilitytypesGetAll422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilitytypesGetAll500Response'
  /v1/facility_types/{facility_type_id}:
    get:
      tags:
        - facility_types
      summary: Shows a facility type
      operationId: Facilitytypes_showType
      security:
        - api_key: []
        - oauth:
            - facility_type_read
      description: Shows a facility type
      parameters:
        - description: The ID of the facility type to show
          name: facility_type_id
          in: path
          required: true
          schema:
            type: integer
        - $ref: '#/components/parameters/current_organisation_id'
      responses:
        '200':
          description: Returns the facility type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilitytypesShowTypeResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilitytypesShowType401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilitytypesShowType403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilitytypesShowType404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilitytypesShowType422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilitytypesShowType500Response'
  /v1/facilities:
    get:
      tags:
        - facilities
      summary: Returns all facilities within the given organisation
      operationId: Facilities_getAllWithinOrganisation
      security:
        - api_key: []
        - oauth:
            - facility_read
      description: |+
        # Description
        Returns all facilities within the given organisation
        # Permissions

        Client manager:
        * Can manage facilities for all possible entities

        Client member:
        * Can manage facilities that are in the scope of the permitted buildings

      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - description: Filter facilities by custom_id
          name: custom_id
          in: query
          required: false
          schema:
            type: string
        - description: Filter facilities by inventory_number
          name: inventory_number
          in: query
          required: false
          schema:
            type: string
        - description: Filter facilities by serial_number
          name: serial_number
          in: query
          required: false
          schema:
            type: string
        - description: Filter facilities by year_of_construction
          name: year_of_construction
          in: query
          required: false
          schema:
            type: string
        - description: Filter facilities by manufacturer_id
          name: manufacturer_id
          in: query
          required: false
          schema:
            type: string
        - description: Filter facilities by department_id
          name: department_id
          in: query
          required: false
          schema:
            type: string
        - description: Filter facilities by facility_type_id
          name: facility_type_id
          in: query
          required: false
          schema:
            type: string
        - description: Filter facilities by property_id
          name: property_id
          in: query
          required: false
          schema:
            type: string
        - description: Filter facilities by lot_id
          name: lot_id
          in: query
          required: false
          schema:
            type: string
        - description: Filter facilities by building_id
          name: building_id
          in: query
          required: false
          schema:
            type: string
        - description: Filter facilities by level_id
          name: level_id
          in: query
          required: false
          schema:
            type: string
        - description: Filter facilities by room_id
          name: room_id
          in: query
          required: false
          schema:
            type: string
        - description: Filter facilities by zone_id
          name: zone_id
          in: query
          required: false
          schema:
            type: string
        - description: Filter facilities by user_id
          name: user_id
          in: query
          required: false
          schema:
            type: string
        - description: page for pagination by default 0
          name: page
          in: query
          required: false
          schema:
            type: number
        - description: number of items per page by default 50
          name: per_page
          in: query
          required: false
          schema:
            type: number
      responses:
        '200':
          description: Returns all facilities within the given organisation
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/FacilitiesGetAllWithinOrganisationResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/FacilitiesGetAllWithinOrganisation401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/FacilitiesGetAllWithinOrganisation403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/FacilitiesGetAllWithinOrganisation422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/FacilitiesGetAllWithinOrganisation500Response
    post:
      tags:
        - facilities
      summary: Creates a facility
      operationId: Facilities_createFacility
      security:
        - api_key: []
        - oauth:
            - facility_write
      description: |+
        # Description
        Creates a facility
        # Permissions

        Client manager:
        * Can manage facilities for all possible entities

        Client member:
        * Can manage facilities that are in the scope of the permitted buildings

      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - name: skip_type_dependent_attribute
          in: query
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacilityCreate'
        required: true
      responses:
        '201':
          description: Facility successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilitiesCreateFacilityResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilitiesCreateFacility401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilitiesCreateFacility403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilitiesCreateFacility422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilitiesCreateFacility500Response'
  /v1/facilities/{facility_id}:
    get:
      tags:
        - facilities
      summary: Shows a facility
      operationId: Facilities_showFacility
      security:
        - api_key: []
        - oauth:
            - facility_read
      description: |+
        # Description
        Shows a facility
        # Permissions

        Client manager:
        * Can manage facilities for all possible entities

        Client member:
        * Can manage facilities that are in the scope of the permitted buildings

      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - description: The ID of the facility to show
          name: facility_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the facility
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilitiesShowFacilityResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilitiesShowFacility401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilitiesShowFacility403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilitiesShowFacility404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilitiesShowFacility422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilitiesShowFacility500Response'
    put:
      tags:
        - facilities
      summary: Updates an facility
      operationId: Facilities_updateFacility
      security:
        - api_key: []
        - oauth:
            - facility_write
      description: |+
        # Description
        Updates an facility
        # Permissions

        Client manager:
        * Can manage facilities for all possible entities

        Client member:
        * Can manage facilities that are in the scope of the permitted buildings

      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - description: The ID of the facility to update
          name: facility_id
          in: path
          required: true
          schema:
            type: integer
        - name: skip_type_dependent_attribute
          in: query
          schema:
            type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacilityUpdate'
        required: true
      responses:
        '200':
          description: Facility successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilitiesUpdateFacilityResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilitiesUpdateFacility401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilitiesUpdateFacility403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilitiesUpdateFacility404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilitiesUpdateFacility422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilitiesUpdateFacility500Response'
    delete:
      tags:
        - facilities
      summary: Deletes the facility within the current organisation
      operationId: Facilities_deleteFacility
      security:
        - api_key: []
        - oauth:
            - facility_destroy
      description: |+
        # Description
        Deletes the facility within the current organisation
        # Permissions

        Client manager:
        * Can manage facilities for all possible entities

        Client member:
        * Can manage facilities that are in the scope of the permitted buildings

      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - description: The ID of the facility to delete
          name: facility_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Facility successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilitiesDeleteFacilityResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilitiesDeleteFacility401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilitiesDeleteFacility403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilitiesDeleteFacility404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilitiesDeleteFacility422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilitiesDeleteFacility500Response'
  /v1/activities:
    get:
      tags:
        - activities
      summary: Returns all activities within the given organisation.
      operationId: Activities_listWithFilters
      security:
        - api_key: []
        - oauth:
            - activity_read
      description: >-
        Returns all activities within the given organisation. They can be
        filtered based on property or building
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - description: The ID property to filter the activities.
          name: property_id
          in: query
          required: false
          schema:
            type: string
        - description: The ID of building to filter activities
          name: building_id
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Returns all activities within the given organisation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitiesListWithFiltersResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitiesListWithFilters401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitiesListWithFilters403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitiesListWithFilters422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitiesListWithFilters500Response'
    post:
      tags:
        - activities
      summary: Creates an activity
      operationId: Activities_createActivity
      security:
        - api_key: []
        - oauth:
            - activity_write
      description: >+
        # Description

        Creates an activity

        # Permissions


        Client manager:

        * Can manage activities for all possible entities


        Client member:

        * Can manage activities for facilities that are in the scope of the
        permitted buildings

      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityCreate'
        required: true
      responses:
        '201':
          description: Activity successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitiesCreateActivityResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitiesCreateActivity401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitiesCreateActivity403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitiesCreateActivity422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitiesCreateActivity500Response'
  /v1/activities/{activity_id}:
    get:
      tags:
        - activities
      summary: Shows a activity
      operationId: Activities_showActivity
      security:
        - api_key: []
        - oauth:
            - activity_read
      description: >+
        # Description

        Shows a activity

        # Permissions


        Client manager:

        * Can manage activities for all possible entities


        Client member:

        * Can manage activities for facilities that are in the scope of the
        permitted buildings

      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - description: The ID of the activity to show
          name: activity_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the activity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitiesShowActivityResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitiesShowActivity401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitiesShowActivity403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitiesShowActivity404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitiesShowActivity422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitiesShowActivity500Response'
    put:
      tags:
        - activities
      summary: Update the activity
      operationId: Activities_updateActivity
      security:
        - api_key: []
        - oauth:
            - activity_write
      description: Update the activity
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - description: ID of the activity you want to update
          name: activity_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ActivityUpdate'
        required: true
      responses:
        '200':
          description: Activity successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitiesUpdateActivityResponse'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitiesUpdateActivity403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitiesUpdateActivity422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitiesUpdateActivity500Response'
    delete:
      tags:
        - activities
      summary: Delete the activity
      operationId: Activities_removeActivity
      security:
        - api_key: []
        - oauth:
            - activity_destroy
      description: Delete the activity
      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - description: ID of the activity you want to delete
          name: activity_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Activity successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitiesRemoveActivityResponse'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitiesRemoveActivity403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitiesRemoveActivity422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitiesRemoveActivity500Response'
  /v1/activities/{external_id}/reference:
    get:
      tags:
        - activities
      summary: Shows a activity
      operationId: Activities_showActivity
      security:
        - api_key: []
        - oauth:
            - activity_read
      description: >+
        # Description

        Shows a activity

        # Permissions


        Client manager:

        * Can manage activities for all possible entities


        Client member:

        * Can manage activities for facilities that are in the scope of the
        permitted buildings

      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - description: The External ID of the activity to show
          name: external_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns the activity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitiesShowActivity200Response'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitiesShowActivity401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitiesShowActivity403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitiesShowActivity404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitiesShowActivity422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitiesShowActivity500Response'
  /v1/activity_types:
    get:
      tags:
        - activity_types
      summary: Returns all activity types
      operationId: Activitytypes_getAll
      security:
        - api_key: []
        - oauth:
            - activity_type_read
      description: Returns all activity types, Admin, Supervisor 🔒
      parameters:
        - description: The ID of the current account
          name: customer_account_id
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Returns all activity types
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitytypesGetAllResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitytypesGetAll401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitytypesGetAll403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitytypesGetAll422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitytypesGetAll500Response'
    post:
      tags:
        - activity_types
      summary: Creates an activity type
      operationId: Activitytypes_createActivity
      security:
        - api_key: []
        - oauth:
            - activity_type_write
      description: |
        # Description
        Creates an activity type
      parameters:
        - description: The ID of the current_account
          name: customer_account_id
          in: query
          required: false
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/ActivityTypeCreate'
      responses:
        '201':
          description: Activity type successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitytypesCreateActivityResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitytypesCreateActivity401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitytypesCreateActivity403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitytypesCreateActivity422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitytypesCreateActivity500Response'
  /v1/activity_types/{activity_type_id}:
    get:
      tags:
        - activity_types
      summary: Shows a activity type
      operationId: Activitytypes_showActivityType
      security:
        - api_key: []
        - oauth:
            - activity_type_read
      description: |
        # Description
        Shows a activity type
      parameters:
        - description: The ID of the current_account
          name: customer_account_id
          in: query
          required: false
          schema:
            type: integer
        - description: The ID of the activity type to show
          name: activity_type_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the activity type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitytypesShowActivityTypeResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitytypesShowActivityType401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitytypesShowActivityType403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitytypesShowActivityType404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitytypesShowActivityType422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitytypesShowActivityType500Response'
    put:
      tags:
        - activity_types
      summary: Update the activity type
      operationId: Activitytypes_updateType
      security:
        - api_key: []
        - oauth:
            - activity_type_write
      description: Update the activity type
      parameters:
        - description: The ID of the activity type to show
          name: activity_type_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/ActivityTypeCreate'
      responses:
        '200':
          description: Activity type successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityTypeShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitytypesUpdateTypeResponse'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitytypesUpdateType403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitytypesUpdateType422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitytypesUpdateType500Response'
    delete:
      tags:
        - activity_types
      summary: Delete the activity type
      operationId: Activitytypes_deleteActivityType
      security:
        - api_key: []
        - oauth:
            - activity_type_destroy
      description: Delete the activity type
      parameters:
        - description: The ID of the current_account
          name: customer_account_id
          in: query
          required: false
          schema:
            type: integer
        - description: The ID of the activity type to show
          name: activity_type_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Activity type successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityTypeShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitytypesDeleteActivityTypeResponse'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ActivitytypesDeleteActivityType403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ActivitytypesDeleteActivityType422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ActivitytypesDeleteActivityType500Response
  /v1/attachments:
    post:
      tags:
        - attachments
      summary: Creates an attachment
      operationId: Attachments_createNewAttachment
      security:
        - api_key: []
        - oauth:
            - attachment_write
      description: >+
        # Description

        Creates an attachment

        # Permissions


        Client manager:

        * Can manage attachments for all possible entities


        Client member:

        * Can not manage attachments for any property

        * Can not manage attachments for any lot

        * Can manage attachments for buildings that are in the scope of the
        permitted buildings

        * Can manage attachments for building units that are in the scope of the
        permitted buildings

        * Can manage attachments for levels that are in the scope of the
        permitted buildings

        * Can manage attachments for rooms that are in the scope of the
        permitted buildings

        * Can manage attachments for zones that are in the scope of the
        permitted buildings

        * Can manage attachments for facilities that are in the scope of the
        permitted buildings

        * Can manage attachments for activities that are in the scope of the
        permitted buildings

      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachmentCreate'
        required: true
      responses:
        '201':
          description: Attachment successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentsCreateNewAttachmentResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentsCreateNewAttachment401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentsCreateNewAttachment403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentsCreateNewAttachment422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentsCreateNewAttachment500Response'
  /v1/attachments/copy:
    post:
      tags:
        - attachments
      summary: Duplicate an attachment
      operationId: Attachments_duplicateAttachment
      security:
        - api_key: []
        - oauth:
            - attachment_write
      description: >+
        # Description

        Duplicate an attachment

        # Permissions


        Client manager:

        * Can manage attachments for all possible entities


        Client member:

        * Can not manage attachments for any property

        * Can not manage attachments for any lot

        * Can manage attachments for buildings that are in the scope of the
        permitted buildings

        * Can manage attachments for building units that are in the scope of the
        permitted buildings

        * Can manage attachments for levels that are in the scope of the
        permitted buildings

        * Can manage attachments for rooms that are in the scope of the
        permitted buildings

        * Can manage attachments for zones that are in the scope of the
        permitted buildings

        * Can manage attachments for facilities that are in the scope of the
        permitted buildings

        * Can manage attachments for activities that are in the scope of the
        permitted buildings

      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachmentDuplicate'
        required: true
      responses:
        '201':
          description: Attachment successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentsDuplicateAttachmentResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentsDuplicateAttachment401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentsDuplicateAttachment403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentsDuplicateAttachment422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentsDuplicateAttachment500Response'
  /v1/attachments/{attachment_id}:
    delete:
      tags:
        - attachments
      summary: Marks an attachment as deleted.
      operationId: Attachments_markAsDeleted
      security:
        - api_key: []
        - oauth:
            - attachment_destroy
      description: >+
        # Description

        Marks an attachment as deleted.

        # Permissions


        Client manager:

        * Can manage attachments for all possible entities


        Client member:

        * Can not manage attachments for any property

        * Can not manage attachments for any lot

        * Can manage attachments for buildings that are in the scope of the
        permitted buildings

        * Can manage attachments for building units that are in the scope of the
        permitted buildings

        * Can manage attachments for levels that are in the scope of the
        permitted buildings

        * Can manage attachments for rooms that are in the scope of the
        permitted buildings

        * Can manage attachments for zones that are in the scope of the
        permitted buildings

        * Can manage attachments for facilities that are in the scope of the
        permitted buildings

        * Can manage attachments for activities that are in the scope of the
        permitted buildings

      parameters:
        - $ref: '#/components/parameters/current_organisation_id'
        - description: The ID of the attachment to delete
          name: attachment_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Attachment successfully marked as deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentsMarkAsDeletedResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentsMarkAsDeleted401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentsMarkAsDeleted403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentsMarkAsDeleted404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentsMarkAsDeleted422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AttachmentsMarkAsDeleted500Response'
  /v1/images:
    post:
      tags:
        - images
      summary: Creates an image
      operationId: Images_createImage
      security:
        - api_key: []
        - oauth:
            - image_write
      description: >+
        # Description

        Creates an image

        # Permissions


        Client manager:

        * Can manage images for all possible entities


        Client member:

        * Can not manage images for any property

        * Can not manage images for any lot

        * Can manage images for buildings that are in the scope of the permitted
        buildings

        * Can manage images for building units that are in the scope of the
        permitted buildings

        * Can manage images for levels that are in the scope of the permitted
        buildings

        * Can manage images for rooms that are in the scope of the permitted
        buildings

        * Can manage images for zones that are in the scope of the permitted
        buildings

        * Can manage images for facilities that are in the scope of the
        permitted buildings

        * Can manage images for her own user, but not for other users

      parameters:
        - name: current_organisation_id
          in: query
          required: false
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageCreate'
        required: true
      responses:
        '201':
          description: Image successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagesCreateImageResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagesCreateImage401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagesCreateImage403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagesCreateImage422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagesCreateImage500Response'
  /v1/images/{image_id}:
    put:
      tags:
        - images
      summary: Updates an image.
      operationId: Images_updateImage
      security:
        - api_key: []
        - oauth:
            - image_write
      description: >+
        # Description

        Updates an image.

        # Permissions


        Client manager:

        * Can manage images for all possible entities


        Client member:

        * Can not manage images for any property

        * Can not manage images for any lot

        * Can manage images for buildings that are in the scope of the permitted
        buildings

        * Can manage images for building units that are in the scope of the
        permitted buildings

        * Can manage images for levels that are in the scope of the permitted
        buildings

        * Can manage images for rooms that are in the scope of the permitted
        buildings

        * Can manage images for zones that are in the scope of the permitted
        buildings

        * Can manage images for facilities that are in the scope of the
        permitted buildings

        * Can manage images for her own user, but not for other users

      parameters:
        - name: current_organisation_id
          in: query
          required: false
          schema:
            type: integer
        - description: The ID of the image to update
          name: image_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImageUpdate'
        required: true
      responses:
        '200':
          description: Image successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagesUpdateImageResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagesUpdateImage401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagesUpdateImage403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagesUpdateImage404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagesUpdateImage422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagesUpdateImage500Response'
    delete:
      tags:
        - images
      summary: Marks an image as deleted.
      operationId: Images_markAsDeleted
      security:
        - api_key: []
        - oauth:
            - image_destroy
      description: >+
        # Description

        Marks an image as deleted.

        # Permissions


        Client manager:

        * Can manage images for all possible entities


        Client member:

        * Can not manage images for any property

        * Can not manage images for any lot

        * Can manage images for buildings that are in the scope of the permitted
        buildings

        * Can manage images for building units that are in the scope of the
        permitted buildings

        * Can manage images for levels that are in the scope of the permitted
        buildings

        * Can manage images for rooms that are in the scope of the permitted
        buildings

        * Can manage images for zones that are in the scope of the permitted
        buildings

        * Can manage images for facilities that are in the scope of the
        permitted buildings

        * Can manage images for her own user, but not for other users

      parameters:
        - name: current_organisation_id
          in: query
          required: false
          schema:
            type: integer
        - description: The ID of the image to delete
          name: image_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Image successfully marked as deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagesMarkAsDeletedResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagesMarkAsDeleted401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagesMarkAsDeleted403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagesMarkAsDeleted404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagesMarkAsDeleted422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ImagesMarkAsDeleted500Response'
  /v1/time_dependent_attributes:
    get:
      tags:
        - time_dependent_attributes
      summary: Returns all time_dependent_attributes within the given parent
      operationId: Timedependentattributes_getAllWithinParent
      security:
        - api_key: []
        - oauth:
            - time_dependent_attribute_read
      description: Returns all time_dependent_attributes within the given parent
      parameters:
        - description: Filter time_dependent_attributes by id.
          name: id
          in: query
          required: false
          schema:
            type: string
        - description: Filter time_dependent_attributes by parent_id.
          name: parent_id
          in: query
          required: false
          schema:
            type: string
        - description: |
            Filter time_dependent_attributes by parent_type.
            Allowed parent_types: Building, Building::Unit
          name: parent_type
          in: query
          required: false
          schema:
            type: string
        - description: Filter time_dependent_attributes by attribute_key.
          name: attribute_key
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Returns all time_dependent_attributes within the given parent
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/TimedependentattributesGetAllWithinParentResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/TimedependentattributesGetAllWithinParent401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/TimedependentattributesGetAllWithinParent403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/TimedependentattributesGetAllWithinParent422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/TimedependentattributesGetAllWithinParent500Response
    post:
      tags:
        - time_dependent_attributes
      summary: Creates a time_dependent_attribute
      operationId: Timedependentattributes_createAttribute
      security:
        - api_key: []
        - oauth:
            - time_dependent_attribute_write
      description: |
        # Description
        Creates a time_dependent_attribute
        Allowed parent_types: Building, Building::Unit
        Allowed attribute_types: ["individual", "global"]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeDependentAttribute'
        required: true
      responses:
        '201':
          description: TimeDependentAttribute successfully created
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/TimedependentattributesCreateAttributeResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/TimedependentattributesCreateAttribute401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/TimedependentattributesCreateAttribute403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/TimedependentattributesCreateAttribute422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/TimedependentattributesCreateAttribute500Response
  /v1/time_dependent_attributes/{time_dependent_attribute_id}:
    put:
      tags:
        - time_dependent_attributes
      summary: Updates an time_dependent_attribute
      operationId: Timedependentattributes_updateAttribute
      security:
        - api_key: []
        - oauth:
            - time_dependent_attribute_write
      description: |
        # Description
        Updates an time_dependent_attribute
        Allowed parent_types: Building, Building::Unit
        Allowed attribute_types: ["individual", "global"]
      parameters:
        - description: The ID of the time_dependent_attribute to update
          name: time_dependent_attribute_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeDependentAttribute'
        required: true
      responses:
        '200':
          description: TimeDependentAttribute successfully updated
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/TimedependentattributesUpdateAttributeResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/TimedependentattributesUpdateAttribute401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/TimedependentattributesUpdateAttribute403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/TimedependentattributesUpdateAttribute404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/TimedependentattributesUpdateAttribute422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/TimedependentattributesUpdateAttribute500Response
    delete:
      tags:
        - time_dependent_attributes
      summary: Deletes the specified time_dependent_attribute
      operationId: Timedependentattributes_deleteTimeDependentAttribute
      security:
        - api_key: []
        - oauth:
            - time_dependent_attribute_destroy
      description: Deletes the specified time_dependent_attribute
      parameters:
        - description: The ID of the time_dependent_attribute to delete
          name: time_dependent_attribute_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: TimeDependentAttribute successfully deleted
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/TimedependentattributesDeleteTimeDependentAttributeResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/TimedependentattributesDeleteTimeDependentAttribute401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/TimedependentattributesDeleteTimeDependentAttribute403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/TimedependentattributesDeleteTimeDependentAttribute404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/TimedependentattributesDeleteTimeDependentAttribute422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/TimedependentattributesDeleteTimeDependentAttribute500Response
  /v1/webhooks:
    get:
      tags:
        - webhooks
      summary: Returns all webhooks
      operationId: Webhooks_getAll
      security:
        - api_key: []
        - oauth:
            - webhook_read
      description: Returns all webhooks within the given customer account.
      parameters:
        - description: The ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns all webhooks within the organisation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksGetAllResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksGetAll401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksGetAll403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksGetAll422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksGetAll500Response'
    post:
      tags:
        - webhooks
      summary: Creates a webhook
      operationId: Webhooks_createNewWebhook
      security:
        - api_key: []
        - oauth:
            - webhook_write
      description: |
        # Description
        Creates a new webhook
        # URL
          The url where the payload will be sent
        # Allowed events:
           building.create<br/>building.update<br/>building.delete<br/>unit.create<br/>unit.update<br/>unit.delete<br/>contract.create<br/>contract.update<br/>contract.delete<br/>property.create<br/>property.update<br/>property.delete
        # Modes
          testing = 0 , live = 1
        # Organisation IDs
          Leaving it empy will send the event to all of the customer account organisations
        # Secret
          This secret is used to encrypt checksum
      parameters:
        - description: The ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookCreate'
        required: true
      responses:
        '201':
          description: Webhook successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksCreateNewWebhookResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksCreateNewWebhook401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksCreateNewWebhook403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksCreateNewWebhook422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksCreateNewWebhook500Response'
  /v1/webhooks/{webhook_id}:
    get:
      tags:
        - webhooks
      summary: Shows a webhook
      operationId: Webhooks_showWebhook
      security:
        - api_key: []
        - oauth:
            - webhook_read
      description: Shows a webhook, Organisation manager 🔒
      parameters:
        - description: The ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: >-
            The ID of the webhook (only shows the webhooks based on
            current_organisation_id)
          name: webhook_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the webhook
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksShowWebhookResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksShowWebhook401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksShowWebhook403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksShowWebhook404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksShowWebhook422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksShowWebhook500Response'
    put:
      tags:
        - webhooks
      summary: Updates a webhook
      operationId: Webhooks_updateWebhook
      security:
        - api_key: []
        - oauth:
            - webhook_write
      description: |
        # Description
        Updates a webhook, Organisation manager 🔒
        # Allowed events:
           building.create<br/>building.update<br/>building.delete<br/>unit.create<br/>unit.update<br/>unit.delete<br/>contract.create<br/>contract.update<br/>contract.delete<br/>property.create<br/>property.update<br/>property.delete
      parameters:
        - description: The ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: >-
            The ID of the webhook (only shows the webhooks based on
            current_organisation_id)
          name: webhook_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Webhook'
        required: true
      responses:
        '200':
          description: Webhook successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksUpdateWebhookResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksUpdateWebhook401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksUpdateWebhook403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksUpdateWebhook422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksUpdateWebhook500Response'
    delete:
      tags:
        - webhooks
      summary: Deletes the webhook within the current organisation.
      operationId: Webhooks_deleteWebhookById
      security:
        - api_key: []
        - oauth:
            - webhook_destroy
      description: >-
        Deletes the webhook within the current organisation. Organisation
        manager only 🔒
      parameters:
        - description: The ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the webhook to delete
          name: webhook_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Webhook successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksDeleteWebhookByIdResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksDeleteWebhookById401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksDeleteWebhookById403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksDeleteWebhookById404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksDeleteWebhookById422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhooksDeleteWebhookById500Response'
  /v1/tags:
    get:
      tags:
        - tags
      summary: Returns all tags within the given customer account.
      operationId: Tags_getAllTagsWithCounts
      security:
        - api_key: []
        - oauth:
            - tag_read
      description: >-
        Returns all tags within the given customer account. It also returns the
        count of buildings and units
      parameters:
        - description: The ID of the current customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: Search for the label
          name: label
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Returns all tags within the given customer account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsGetAllTagsWithCountsResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsGetAllTagsWithCounts401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsGetAllTagsWithCounts403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsGetAllTagsWithCounts422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsGetAllTagsWithCounts500Response'
    post:
      tags:
        - tags
      summary: Creates a tag
      operationId: Tags_createTag
      security:
        - api_key: []
        - oauth:
            - tag_write
      description: |
        # Description
        Creates a tag
      parameters:
        - description: The ID of the current_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagCreate'
        required: true
      responses:
        '201':
          description: Tag successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsCreateTagResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsCreateTag401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsCreateTag403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsCreateTag422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsCreateTag500Response'
  /v1/tags/{tag_id}:
    put:
      tags:
        - tags
      summary: Update the tag
      operationId: Tags_updateTag
      security:
        - api_key: []
        - oauth:
            - tag_write
      description: Update the tag
      parameters:
        - description: The ID of the current customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the tag you want to update
          name: tag_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagUpdate'
        required: true
      responses:
        '200':
          description: Tag successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsUpdateTagResponse'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsUpdateTag403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsUpdateTag422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsUpdateTag500Response'
    delete:
      tags:
        - tags
      summary: Marks a tag as deleted.
      operationId: Tags_markAsDeleted
      security:
        - api_key: []
        - oauth:
            - tag_destroy
      description: |
        # Description
        Marks a tag as deleted.
      parameters:
        - description: The ID of the current customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the tag to delete
          name: tag_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Tag successfully marked as deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsMarkAsDeletedResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsMarkAsDeleted401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsMarkAsDeleted403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsMarkAsDeleted404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsMarkAsDeleted422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsMarkAsDeleted500Response'
  /v1/tags/merge:
    post:
      tags:
        - tags
      summary: Merges master tags with other tags
      operationId: Tags_mergeMasterTags
      security:
        - api_key: []
        - oauth:
            - tag_write
      description: |
        # Description
        Master tag is the main tag that get all other tags building or units
        Other tags after the merge will be deleted
      parameters:
        - description: The ID of the current_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagsMergeBody'
        required: true
      responses:
        '201':
          description: Tag successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsMergeMasterTagsResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsMergeMasterTags401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsMergeMasterTags403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsMergeMasterTags422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsMergeMasterTags500Response'
  /v1/tags/assign_buildings:
    put:
      tags:
        - tags
      summary: Assign multiple tags to multiple buildings
      operationId: Tags_assignBuildings
      security:
        - api_key: []
        - oauth:
            - tag_write
      description: >
        # Description

        Assign multiple tags to multiple buildings

        ATTENTION ⚠️ This will NOT delete previously assigned tags to those
        buildings

        If you see more tags they probably are assigned from building
        create/update endpoint.
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagAssignBuildings'
        required: true
      responses:
        '200':
          description: Tags assigned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsAssignBuildingsResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsAssignBuildings401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsAssignBuildings403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsAssignBuildings422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsAssignBuildings500Response'
  /v1/imports:
    get:
      tags:
        - csv_imports
      summary: Return all imports
      operationId: Csvimports_getAllImports
      security:
        - api_key: []
        - oauth:
            - import_read
      description: Return all imports
      parameters:
        - description: ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: Filter by is_demo
          name: is_demo
          in: query
          required: false
          schema:
            type: boolean
        - description: Filter the imports by type
          name: location_type
          in: query
          required: false
          schema:
            type: string
            enum:
              - properties
              - lots
              - buildings
              - building_units
              - levels
              - rooms
              - facilities
              - contracts
      responses:
        '200':
          description: Return all imports for the specific customer account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CsvimportsGetAllImportsResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CsvimportsGetAllImports401Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CsvimportsGetAllImports500Response'
    post:
      tags:
        - csv_imports
      summary: Creates a import by file
      operationId: Csvimports_createByFile
      security:
        - api_key: []
        - oauth:
            - import_write
      description: |
        # Description
        Creates a new import
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the organisation
          name: organisation_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CsvImportCreate'
        required: true
      responses:
        '201':
          description: Csv imported successfully!
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CsvImportShowCreate'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CsvimportsCreateByFileResponse'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CsvimportsCreateByFile403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CsvimportsCreateByFile422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CsvimportsCreateByFile500Response'
  /v1/imports/{import_id}:
    get:
      tags:
        - csv_imports
      summary: Shows information for specific import
      operationId: Csvimports_getInfo
      security:
        - api_key: []
        - oauth:
            - import_read
      description: Shows information for an import.
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the csv import
          name: import_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return an import
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CsvimportsGetInfoResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CsvimportsGetInfo401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CsvimportsGetInfo403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CsvimportsGetInfo404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CsvimportsGetInfo422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CsvimportsGetInfo500Response'
    put:
      tags:
        - csv_imports
      summary: Update the import
      operationId: Csvimports_updateImport
      security:
        - api_key: []
        - oauth:
            - import_write
      description: Update the import
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the import you want to update
          name: import_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CsvImportUpdate'
        required: true
      responses:
        '200':
          description: Import successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CsvImportShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CsvimportsUpdateImportResponse'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CsvimportsUpdateImport403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CsvimportsUpdateImport422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CsvimportsUpdateImport500Response'
  /v1/scorecards:
    get:
      tags:
        - scorecards
      summary: Returns all scorecards
      operationId: Scorecards_listAllScorecards
      security:
        - api_key: []
        - oauth:
            - scorecard_read
      description: Returns all scorecards within the given customer account.
      parameters:
        - description: The ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns all scorecards within the customer account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardsListAllScorecardsResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardsListAllScorecards401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardsListAllScorecards403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardsListAllScorecards422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardsListAllScorecards500Response'
    post:
      tags:
        - scorecards
      summary: Creates a scorecard
      operationId: Scorecards_createNewScorecard
      security:
        - api_key: []
        - oauth:
            - scorecard_write
      description: >
        # Description

        Creates a new scorecard. This only creates a new scorecard. The score
        calculation

        is triggered when the scorecard is assigned to a building. Check
        scorecard_memberships
      parameters:
        - description: The ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScorecardCreate'
        required: true
      responses:
        '201':
          description: Scorecard successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardsCreateNewScorecardResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardsCreateNewScorecard401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardsCreateNewScorecard403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardsCreateNewScorecard422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardsCreateNewScorecard500Response'
  /v1/scorecards/{scorecard_id}:
    get:
      tags:
        - scorecards
      summary: Shows a scorecard
      operationId: Scorecards_showDetails
      security:
        - api_key: []
        - oauth:
            - scorecard_read
      description: Shows a scorecard, Organisation manager 🔒
      parameters:
        - description: The ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: >-
            The ID of the scorecard (only shows the scorecards based on
            current_organisation_id)
          name: scorecard_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the scorecard
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardsShowDetailsResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardsShowDetails401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardsShowDetails403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardsShowDetails404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardsShowDetails422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardsShowDetails500Response'
    put:
      tags:
        - scorecards
      summary: Updates a scorecard
      operationId: Scorecards_updateScorecard
      security:
        - api_key: []
        - oauth:
            - scorecard_write
      description: |
        # Description
        Updates a scorecard, Organisation manager 🔒
      parameters:
        - description: The ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: >-
            The ID of the scorecard (only shows the scorecards based on
            current_organisation_id)
          name: scorecard_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Scorecard'
        required: true
      responses:
        '200':
          description: Scorecard successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardsUpdateScorecardResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardsUpdateScorecard401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardsUpdateScorecard403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardsUpdateScorecard422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardsUpdateScorecard500Response'
    delete:
      tags:
        - scorecards
      summary: Deletes the scorecard within the current account.
      operationId: Scorecards_deleteWithinAccount
      security:
        - api_key: []
        - oauth:
            - scorecard_destroy
      description: >-
        Deletes the scorecard within the current account. Customer account
        manager only 🔒
      parameters:
        - description: The ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the scorecard to delete
          name: scorecard_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: Scorecard successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardsDeleteWithinAccountResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardsDeleteWithinAccount401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardsDeleteWithinAccount403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardsDeleteWithinAccount404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardsDeleteWithinAccount422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardsDeleteWithinAccount500Response'
  /v1/scorecard_segments:
    post:
      tags:
        - scorecard_segments
      summary: Creates a scorecard segment
      operationId: Scorecardsegments_createNewSegment
      security:
        - api_key: []
        - oauth:
            - scorecard_segment_write
      description: |
        # Description
        Creates a new scorecard segment
      parameters:
        - description: The ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScorecardSegmentCreate'
        required: true
      responses:
        '201':
          description: Scorecard segment successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardsegmentsCreateNewSegmentResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardsegmentsCreateNewSegment401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardsegmentsCreateNewSegment403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardsegmentsCreateNewSegment422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardsegmentsCreateNewSegment500Response
  /v1/scorecard_segments/{scorecard_segment_id}:
    put:
      tags:
        - scorecard_segments
      summary: Updates a scorecard segment
      operationId: Scorecardsegments_updateSegment
      security:
        - api_key: []
        - oauth:
            - scorecard_segment_write
      description: |
        # Description
        Updates a scorecard segment, Account manager 🔒
      parameters:
        - description: The ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: >-
            The ID of the scorecard segment (only shows the scorecards based on
            current_organisation_id)
          name: scorecard_segment_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScorecardSegment'
        required: true
      responses:
        '200':
          description: Scorecard segment successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardsegmentsUpdateSegmentResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardsegmentsUpdateSegment401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardsegmentsUpdateSegment403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardsegmentsUpdateSegment422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardsegmentsUpdateSegment500Response'
    delete:
      tags:
        - scorecard_segments
      summary: Deletes the scorecard segment within the current account.
      operationId: Scorecardsegments_deleteSegment
      security:
        - api_key: []
        - oauth:
            - scorecard_segment_destroy
      description: >-
        Deletes the scorecard within the current account. Customer account
        manager only 🔒
      parameters:
        - description: The ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the scorecard segment to delete
          name: scorecard_segment_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: Scorecard segment successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardsegmentsDeleteSegmentResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardsegmentsDeleteSegment401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardsegmentsDeleteSegment403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardsegmentsDeleteSegment404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardsegmentsDeleteSegment422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardsegmentsDeleteSegment500Response'
  /v1/scorecard_topics:
    post:
      tags:
        - scorecard_topics
      summary: Creates a scorecard topic
      operationId: Scorecardtopics_createNewTopic
      security:
        - api_key: []
        - oauth:
            - scorecard_topic_write
      description: |
        # Description
        Creates a new scorecard topic
      parameters:
        - description: The ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScorecardTopicCreate'
        required: true
      responses:
        '201':
          description: Scorecard topic successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardtopicsCreateNewTopicResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardtopicsCreateNewTopic401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardtopicsCreateNewTopic403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardtopicsCreateNewTopic422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardtopicsCreateNewTopic500Response'
  /v1/scorecard_topics/{scorecard_topic_id}:
    put:
      tags:
        - scorecard_topics
      summary: Updates a scorecard topic
      operationId: Scorecardtopics_updateTopic
      security:
        - api_key: []
        - oauth:
            - scorecard_topic_write
      description: |
        # Description
        Updates a scorecard topic, Account manager 🔒
      parameters:
        - description: The ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: >-
            The ID of the scorecard topic (only shows the topic based on current
            account)
          name: scorecard_topic_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScorecardTopic'
        required: true
      responses:
        '200':
          description: scorecard topic successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardtopicsUpdateTopicResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardtopicsUpdateTopic401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardtopicsUpdateTopic403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardtopicsUpdateTopic422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardtopicsUpdateTopic500Response'
    delete:
      tags:
        - scorecard_topics
      summary: Deletes the scorecard topic within the current segment.
      operationId: Scorecardtopics_deleteTopic
      security:
        - api_key: []
        - oauth:
            - scorecard_topic_destroy
      description: >-
        Deletes the scorecard within the current account. Customer account
        manager only 🔒
      parameters:
        - description: The ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the scorecard topic to delete
          name: scorecard_topic_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: scorecard topic successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardtopicsDeleteTopicResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardtopicsDeleteTopic401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardtopicsDeleteTopic403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardtopicsDeleteTopic404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardtopicsDeleteTopic422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardtopicsDeleteTopic500Response'
  /v1/scorecard_subtopics:
    post:
      tags:
        - scorecard_subtopics
      summary: Creates a scorecard subtopic
      operationId: Scorecardsubtopics_createSubtopic
      security:
        - api_key: []
        - oauth:
            - scorecard_subtopic_write
      description: |
        # Description
        Creates a new scorecard subtopic
      parameters:
        - description: The ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScorecardSubtopicCreate'
        required: true
      responses:
        '201':
          description: Scorecard subtopic successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardsubtopicsCreateSubtopicResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardsubtopicsCreateSubtopic401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardsubtopicsCreateSubtopic403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardsubtopicsCreateSubtopic422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardsubtopicsCreateSubtopic500Response
  /v1/scorecard_subtopics/{scorecard_subtopic_id}:
    put:
      tags:
        - scorecard_subtopics
      summary: Updates a scorecard subtopic
      operationId: Scorecardsubtopics_updateSubtopic
      security:
        - api_key: []
        - oauth:
            - scorecard_subtopic_write
      description: |
        # Description
        Updates a scorecard subtopic, Account manager 🔒
      parameters:
        - description: The ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: >-
            The ID of the scorecard subtopic (only shows the subtopic based on
            current account)
          name: scorecard_subtopic_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScorecardSubtopic'
        required: true
      responses:
        '200':
          description: scorecard subtopic successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardsubtopicsUpdateSubtopicResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardsubtopicsUpdateSubtopic401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardsubtopicsUpdateSubtopic403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardsubtopicsUpdateSubtopic422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardsubtopicsUpdateSubtopic500Response
    delete:
      tags:
        - scorecard_subtopics
      summary: Deletes the scorecard subtopic within the current segment.
      operationId: Scorecardsubtopics_deleteSubtopic
      security:
        - api_key: []
        - oauth:
            - scorecard_subtopic_destroy
      description: >-
        Deletes the scorecard within the current account. Customer account
        manager only 🔒
      parameters:
        - description: The ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the scorecard subtopic to delete
          name: scorecard_subtopic_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: scorecard subtopic successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardsubtopicsDeleteSubtopicResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardsubtopicsDeleteSubtopic401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardsubtopicsDeleteSubtopic403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardsubtopicsDeleteSubtopic404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardsubtopicsDeleteSubtopic422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardsubtopicsDeleteSubtopic500Response
  /v1/scorecard_memberships/de_assign:
    post:
      tags:
        - scorecard_memberships
      summary: De-assigns scorecard memberships from scorecard
      operationId: Scorecardmemberships_deAssign
      security:
        - api_key: []
        - oauth:
            - scorecard_membership_write
      description: |
        # Description
        De-assigns scorecard memberships from scorecard
      parameters:
        - description: The ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScorecardMembershipDeAssign'
        required: true
      responses:
        '201':
          description: Scorecard membership de-assigned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardmembershipsDeAssignResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardmembershipsDeAssign401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardmembershipsDeAssign403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardmembershipsDeAssign422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardmembershipsDeAssign500Response'
  /v1/scorecard_memberships:
    get:
      tags:
        - scorecard_memberships
      summary: 'Returns all scorecard memberships within the given account. '
      operationId: Scorecardmemberships_listAllScorecardMemberships
      security:
        - api_key: []
        - oauth:
            - scorecard_membership_read
      description: Returns all scorecard memberships within the given account.
      parameters:
        - description: The ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID on other scorecard to filter memberships
          name: scorecard_id
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Returns all scorecard_memberships within the given customer account
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardmembershipsListAllScorecardMembershipsResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardmembershipsListAllScorecardMemberships401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardmembershipsListAllScorecardMemberships403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardmembershipsListAllScorecardMemberships422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardmembershipsListAllScorecardMemberships500Response
    post:
      tags:
        - scorecard_memberships
      summary: Creates a scorecard membership
      operationId: Scorecardmemberships_createMembership
      security:
        - api_key: []
        - oauth:
            - scorecard_membership_write
      description: |
        # Description
        Creates a new scorecard membership
      parameters:
        - description: The ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScorecardMembershipCreate'
        required: true
      responses:
        '201':
          description: Scorecard membership successfully created
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardmembershipsCreateMembershipResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardmembershipsCreateMembership401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardmembershipsCreateMembership403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardmembershipsCreateMembership422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardmembershipsCreateMembership500Response
  /v1/scorecard_memberships/{scorecard_membership_id}:
    get:
      tags:
        - scorecard_memberships
      summary: Shows a scorecard membership
      operationId: Scorecardmemberships_showMembership
      security:
        - api_key: []
        - oauth:
            - scorecard_membership_read
      description: Shows a scorecard membership, Customer account manager 🔒
      parameters:
        - description: The ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: >-
            The ID of the scorecard membership (only shows the scorecards based
            on current account)
          name: scorecard_membership_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the scorecard membership
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardmembershipsShowMembershipResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardmembershipsShowMembership401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardmembershipsShowMembership403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardmembershipsShowMembership404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardmembershipsShowMembership422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardmembershipsShowMembership500Response
    delete:
      tags:
        - scorecard_memberships
      summary: Deletes the scorecard membership within the current account.
      operationId: Scorecardmemberships_deleteMembership
      security:
        - api_key: []
        - oauth:
            - scorecard_membership_destroy
      description: >-
        Deletes the scorecard within the current account. Customer account
        manager only 🔒
      parameters:
        - description: The ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the scorecard membership to delete
          name: scorecard_membership_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: Scorecard membership successfully deleted
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardmembershipsDeleteMembershipResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardmembershipsDeleteMembership401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardmembershipsDeleteMembership403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardmembershipsDeleteMembership404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardmembershipsDeleteMembership422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardmembershipsDeleteMembership500Response
  /v1/scorecard_memberships/{scorecard_membership_id}/refresh:
    get:
      tags:
        - scorecard_memberships
      summary: Refresh a scorecard membership
      operationId: Scorecardmemberships_refreshMembership
      security:
        - api_key: []
        - oauth:
            - scorecard_membership_read
      description: Refresh a scorecard membership, Customer account manager 🔒
      parameters:
        - description: The ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: >-
            The ID of the scorecard membership (only shows the scorecards based
            on current account)
          name: scorecard_membership_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the scorecard membership
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardmembershipsRefreshMembershipResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardmembershipsRefreshMembership401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardmembershipsRefreshMembership403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardmembershipsRefreshMembership404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardmembershipsRefreshMembership422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardmembershipsRefreshMembership500Response
  /v1/scorecard_memberships/refresh_by_scorecard:
    post:
      tags:
        - scorecard_memberships
      summary: Refresh scores for specific scorecard/s
      operationId: Scorecardmemberships_refreshScores
      security:
        - api_key: []
        - oauth:
            - scorecard_membership_write
      description: Refresh scores for specific scorecard/s
      parameters:
        - description: The ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshByScorecard'
        required: true
      responses:
        '200':
          description: Returns all refreshed memberships
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardmembershipsRefreshScoresResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardmembershipsRefreshScores401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardmembershipsRefreshScores403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardmembershipsRefreshScores404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardmembershipsRefreshScores422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardmembershipsRefreshScores500Response
  /v1/scorecard_memberships/refresh_all_by_parent:
    post:
      tags:
        - scorecard_memberships
      summary: Refresh all scorecards by parent
      operationId: Scorecardmemberships_refreshAllByParent
      security:
        - api_key: []
        - oauth:
            - scorecard_membership_write
      description: Refresh all scorecards by parent
      parameters:
        - description: The ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshByParent'
        required: true
      responses:
        '200':
          description: Returns all refreshed memberships
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardmembershipsRefreshAllByParentResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardmembershipsRefreshAllByParent401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardmembershipsRefreshAllByParent403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardmembershipsRefreshAllByParent404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardmembershipsRefreshAllByParent422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardmembershipsRefreshAllByParent500Response
  /v1/scorecard_memberships/calculated_costs:
    post:
      tags:
        - scorecard_memberships
      summary: Calculated costs of scorecard memberships
      operationId: Scorecardmemberships_calculateCosts
      security:
        - api_key: []
        - oauth:
            - scorecard_membership_write
      description: >-
        Return calculated costs of scorecard memberships, Customer account
        manager 🔒
      parameters:
        - description: The ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/ScorecardMembershipCost'
      responses:
        '200':
          description: Returns status ok
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardmembershipsCalculateCostsResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardmembershipsCalculateCosts401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardmembershipsCalculateCosts403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardmembershipsCalculateCosts404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardmembershipsCalculateCosts422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardmembershipsCalculateCosts500Response
  /v1/scorecard_memberships/count_buildings:
    post:
      tags:
        - scorecard_memberships
      summary: Get number of buildings by providing scorecard ids
      operationId: Scorecardmemberships_countBuildingsByScorecardIds
      security:
        - api_key: []
        - oauth:
            - scorecard_membership_write
      description: >-
        Get number of buildings by providing scorecard ids, Customer account
        manager only 🔒
      parameters:
        - description: The ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/ScorecardMembershipCost'
      responses:
        '200':
          description: Returns status ok
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardmembershipsCountBuildingsByScorecardIdsResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardmembershipsCountBuildingsByScorecardIds401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardmembershipsCountBuildingsByScorecardIds403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardmembershipsCountBuildingsByScorecardIds404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardmembershipsCountBuildingsByScorecardIds422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardmembershipsCountBuildingsByScorecardIds500Response
  /v1/scorecard_assigners:
    get:
      tags:
        - scorecard_assigners
      summary: 'Returns all scorecard assigners within the given account. '
      operationId: Scorecardassigners_getAll
      security:
        - api_key: []
        - oauth:
            - scorecard_assigner_read
      description: Returns all scorecard assigners within the given account.
      parameters:
        - description: The ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID on other scorecard to filter assigners
          name: scorecard_id
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Returns all scorecard assigners within the given customer account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardassignersGetAllResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardassignersGetAll401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardassignersGetAll403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardassignersGetAll422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardassignersGetAll500Response'
    post:
      tags:
        - scorecard_assigners
      summary: Creates a scorecard assigner
      operationId: Scorecardassigners_createNewScorecardAssigner
      security:
        - api_key: []
        - oauth:
            - scorecard_assigner_write
      description: |
        # Description
        Creates a new scorecard assigner
      parameters:
        - description: The ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScorecardAssignerCreate'
        required: true
      responses:
        '201':
          description: Scorecard assigner successfully created
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardassignersCreateNewScorecardAssignerResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardassignersCreateNewScorecardAssigner401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardassignersCreateNewScorecardAssigner403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardassignersCreateNewScorecardAssigner422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardassignersCreateNewScorecardAssigner500Response
  /v1/scorecard_assigners/{scorecard_assigner_id}:
    get:
      tags:
        - scorecard_assigners
      summary: Shows a scorecard assigner
      operationId: Scorecardassigners_show
      security:
        - api_key: []
        - oauth:
            - scorecard_assigner_read
      description: Shows a scorecard assigner, Customer account manager 🔒
      parameters:
        - description: The ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: >-
            The ID of the scorecard assigner (only shows the scorecards based on
            current account)
          name: scorecard_assigner_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the scorecard assigner
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardassignersShowResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardassignersShow401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardassignersShow403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardassignersShow404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardassignersShow422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScorecardassignersShow500Response'
    delete:
      tags:
        - scorecard_assigners
      summary: Deletes the scorecard assigner within the current account.
      operationId: Scorecardassigners_deleteScorecardAssigner
      security:
        - api_key: []
        - oauth:
            - scorecard_assigner_destroy
      description: >-
        Deletes the scorecard within the current account. Customer account
        manager only 🔒
      parameters:
        - description: The ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the scorecard assigner to delete
          name: scorecard_assigner_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: Scorecard assigner successfully deleted
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardassignersDeleteScorecardAssignerResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardassignersDeleteScorecardAssigner401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardassignersDeleteScorecardAssigner403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardassignersDeleteScorecardAssigner404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardassignersDeleteScorecardAssigner422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ScorecardassignersDeleteScorecardAssigner500Response
  /v1/data_catalogs:
    get:
      tags:
        - data_catalogs
      summary: Returns all data catalogs
      operationId: Datacatalogs_getAll
      security:
        - api_key: []
        - oauth:
            - data_catalog_read
      description: Returns all data catalogs within the given customer account.
      parameters:
        - description: The locale for filtering the data catalogs.
          name: locale
          in: query
          required: false
          schema:
            type: string
            enum:
              - en
              - de
        - description: The ids of the apps for filtering the data catalogs.
          name: app_ids
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Returns all data catalogs within the app
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatacatalogsGetAllResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatacatalogsGetAll401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatacatalogsGetAll403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatacatalogsGetAll422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatacatalogsGetAll500Response'
    post:
      tags:
        - data_catalogs
      summary: Creates a data catalog
      operationId: Datacatalogs_createNewCatalog
      security:
        - api_key: []
        - oauth:
            - data_catalog_write
      description: |
        # Description
        Creates a new catalog
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataCatalogCreate'
        required: true
      responses:
        '201':
          description: data_catalog successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatacatalogsCreateNewCatalogResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatacatalogsCreateNewCatalog401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatacatalogsCreateNewCatalog403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatacatalogsCreateNewCatalog422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatacatalogsCreateNewCatalog500Response'
  /v1/data_catalogs/{data_catalog_id}:
    get:
      tags:
        - data_catalogs
      summary: Shows a data catalog
      operationId: Datacatalogs_showDataCatalog
      security:
        - api_key: []
        - oauth:
            - data_catalog_read
      description: Shows a data_catalog, Customer account manager 🔒
      parameters:
        - description: >-
            The ID of the data_catalog (only shows the data_catalogs based on
            current_organisation_id)
          name: data_catalog_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the data catalog
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatacatalogsShowDataCatalogResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatacatalogsShowDataCatalog401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatacatalogsShowDataCatalog403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatacatalogsShowDataCatalog404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatacatalogsShowDataCatalog422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatacatalogsShowDataCatalog500Response'
    put:
      tags:
        - data_catalogs
      summary: Updates a data_catalog
      operationId: Datacatalogs_updateCatalog
      security:
        - api_key: []
        - oauth:
            - data_catalog_write
      description: |
        # Description
        Updates a data_catalog, Organisation manager 🔒
      parameters:
        - description: The ID of the data catalog (only shows the data catalog)
          name: data_catalog_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataCatalog'
        required: true
      responses:
        '200':
          description: Data catalog successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatacatalogsUpdateCatalogResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatacatalogsUpdateCatalog401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatacatalogsUpdateCatalog403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatacatalogsUpdateCatalog422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatacatalogsUpdateCatalog500Response'
    delete:
      tags:
        - data_catalogs
      summary: Deletes the data catalog within the current app.
      operationId: Datacatalogs_deleteCatalog
      security:
        - api_key: []
        - oauth:
            - data_catalog_destroy
      description: >-
        Deletes the data_catalog within the current account. Customer account
        manager only 🔒
      parameters:
        - description: The ID of the data catalog to delete
          name: data_catalog_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Data catalog successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatacatalogsDeleteCatalogResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatacatalogsDeleteCatalog401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatacatalogsDeleteCatalog403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatacatalogsDeleteCatalog404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatacatalogsDeleteCatalog422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatacatalogsDeleteCatalog500Response'
  /v1/raw_data_catalogs:
    get:
      tags:
        - raw_data_catalogs
      summary: Returns all raw data catalogs
      operationId: Rawdatacatalogs_getAllRawdataCatalogs
      security:
        - api_key: []
        - oauth:
            - raw_data_catalog_read
      description: Returns all raw data catalogs within the given customer account.
      parameters:
        - description: The ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: >-
            Limit the number of results to return, if null then return all
            results
          name: limit
          in: query
          required: false
          schema:
            type: integer
        - description: >-
            The ordering of the results returned, if null then will return not
            ordered results.
                        Possible columns: app_id, status, version,
                        Possible order: asc, desc
          name: order_by
          in: query
          required: false
          example: app_id.desc, status.desc, version.desc
          schema:
            type: string
      responses:
        '200':
          description: Returns all raw data catalogs within the app
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RawdatacatalogsGetAllRawdataCatalogsResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RawdatacatalogsGetAllRawdataCatalogs401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RawdatacatalogsGetAllRawdataCatalogs403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RawdatacatalogsGetAllRawdataCatalogs422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RawdatacatalogsGetAllRawdataCatalogs500Response
  /v1/raw_data_catalogs/{raw_data_catalog_id}:
    get:
      tags:
        - raw_data_catalogs
      summary: Shows a data catalog
      operationId: Rawdatacatalogs_showDataCatalog
      security:
        - api_key: []
        - oauth:
            - raw_data_catalog_read
      description: Shows a data_catalog, Customer account manager 🔒
      parameters:
        - description: The ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: >-
            The ID of the data_catalog (only shows the raw_data_catalogs based
            on current_organisation_id)
          name: raw_data_catalog_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns the data catalog
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RawdatacatalogsShowDataCatalogResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RawdatacatalogsShowDataCatalog401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RawdatacatalogsShowDataCatalog403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RawdatacatalogsShowDataCatalog404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RawdatacatalogsShowDataCatalog422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RawdatacatalogsShowDataCatalog500Response'
  /v1/rent_increase_types:
    post:
      tags:
        - rent_increase_types
      summary: Creates a rent_increase_type (Admin only)
      operationId: Rentincreasetypes_createType
      security:
        - api_key: []
        - oauth:
            - rent_increase_type_write
      description: |
        # Description
        Creates a rent_increase_type
        Category: 1 for indexed and 2 for graduated.
      parameters:
        - description: ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/RentIncreaseType'
      responses:
        '201':
          description: RentIncreaseType successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentincreasetypesCreateTypeResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentincreasetypesCreateType401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentincreasetypesCreateType403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentincreasetypesCreateType422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentincreasetypesCreateType500Response'
    get:
      tags:
        - rent_increase_types
      summary: Return rent_increase_types
      operationId: Rentincreasetypes_getAllTypes
      security:
        - api_key: []
        - oauth:
            - rent_increase_type_read
      description: Return rent_increase_types
      parameters:
        - description: ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return rent_increase_types
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentincreasetypesGetAllTypesResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentincreasetypesGetAllTypes401Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentincreasetypesGetAllTypes500Response'
  /v1/rent_increase_types/{rent_increase_type_id}:
    get:
      tags:
        - rent_increase_types
      summary: Return rent_increase_type
      operationId: Rentincreasetypes_getById
      security:
        - api_key: []
        - oauth:
            - rent_increase_type_read
      description: Return rent_increase_type
      parameters:
        - description: ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the rent_increase_type
          name: rent_increase_type_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns rent_increase_type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentincreasetypesGetByIdResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentincreasetypesGetById401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentincreasetypesGetById403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentincreasetypesGetById404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentincreasetypesGetById422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentincreasetypesGetById500Response'
    put:
      tags:
        - rent_increase_types
      summary: Update rent_increase_type
      operationId: Rentincreasetypes_updateType
      security:
        - api_key: []
        - oauth:
            - rent_increase_type_write
      description: |
        # Description
        Update rent_increase_type (Admin only)
        Category: 1 for indexed and 2 for graduated.
      parameters:
        - description: ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the rent_increase_type to update
          name: rent_increase_type_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/RentIncreaseType'
      responses:
        '200':
          description: Building rent_increase_type successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentIncreaseTypeIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentincreasetypesUpdateTypeResponse'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentincreasetypesUpdateType403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentincreasetypesUpdateType422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentincreasetypesUpdateType500Response'
    delete:
      tags:
        - rent_increase_types
      summary: Delete a rent_increase_type (Admin only)
      operationId: Rentincreasetypes_delete
      security:
        - api_key: []
        - oauth:
            - rent_increase_type_destroy
      description: |
        # Description
        Delete a rent_increase_type.
      parameters:
        - name: customer_account_id
          in: query
          required: false
          schema:
            type: integer
        - description: The ID of the rent_increase_type to delete
          name: rent_increase_type_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: rent_increase_type successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentincreasetypesDeleteResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentincreasetypesDelete401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentincreasetypesDelete403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentincreasetypesDelete404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentincreasetypesDelete422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentincreasetypesDelete500Response'
  /v1/rent_increase_indices:
    post:
      tags:
        - rent_increase_indices
      summary: Creates a rent_increase_index (Admin only)
      operationId: Rentincreaseindices_createIndex
      security:
        - api_key: []
        - oauth:
            - rent_increase_index_write
      description: |
        # Description
        Creates a rent_increase_index
      parameters:
        - description: ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/RentIncreaseIndices'
      responses:
        '201':
          description: RentIncreaseIndex successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentincreaseindicesCreateIndexResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentincreaseindicesCreateIndex401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentincreaseindicesCreateIndex403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentincreaseindicesCreateIndex422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentincreaseindicesCreateIndex500Response'
    get:
      tags:
        - rent_increase_indices
      summary: Return rent_increase_indices
      operationId: Rentincreaseindices_getIndexData
      security:
        - api_key: []
        - oauth:
            - rent_increase_index_read
      description: Return rent_increase_indices
      parameters:
        - description: ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the rent_increase_type
          name: rent_increase_type_id
          in: query
          schema:
            type: integer
        - description: Date of the rent_increase_index
          name: date
          in: query
          schema:
            type: string
            format: date
        - description: Subtype (building_type) of the rent_increase
          name: subtype
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Return rent_increase_indices
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentincreaseindicesGetIndexDataResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RentincreaseindicesGetIndexData401Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RentincreaseindicesGetIndexData500Response
  /v1/rent_increase_indices/{rent_increase_index_id}:
    get:
      tags:
        - rent_increase_indices
      summary: Return rent_increase_index
      operationId: Rentincreaseindices_returnRentIncreaseIndex
      security:
        - api_key: []
        - oauth:
            - rent_increase_index_read
      description: Return rent_increase_index
      parameters:
        - description: ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the rent_increase_index
          name: rent_increase_index_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns rent_increase_index
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RentincreaseindicesReturnRentIncreaseIndexResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RentincreaseindicesReturnRentIncreaseIndex401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RentincreaseindicesReturnRentIncreaseIndex403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RentincreaseindicesReturnRentIncreaseIndex404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RentincreaseindicesReturnRentIncreaseIndex422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RentincreaseindicesReturnRentIncreaseIndex500Response
    put:
      tags:
        - rent_increase_indices
      summary: Update rent_increase_index
      operationId: Rentincreaseindices_updateRentIncreaseIndexById
      security:
        - api_key: []
        - oauth:
            - rent_increase_index_write
      description: |
        # Description
        Update rent_increase_index (Admin only)
      parameters:
        - description: ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the rent_increase_index to update
          name: rent_increase_index_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/RentIncreaseIndices'
      responses:
        '200':
          description: Building rent_increase_index successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentIncreaseIndicesIndex'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RentincreaseindicesUpdateRentIncreaseIndexByIdResponse
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RentincreaseindicesUpdateRentIncreaseIndexById403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RentincreaseindicesUpdateRentIncreaseIndexById422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RentincreaseindicesUpdateRentIncreaseIndexById500Response
    delete:
      tags:
        - rent_increase_indices
      summary: Delete a rent_increase_index (Admin only)
      operationId: Rentincreaseindices_deleteRentIncreaseIndex
      security:
        - api_key: []
        - oauth:
            - rent_increase_index_destroy
      description: |
        # Description
        Delete a rent_increase_index.
      parameters:
        - name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: The ID of the rent_increase_index to delete
          name: rent_increase_index_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: rent_increase_index successfully deleted
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RentincreaseindicesDeleteRentIncreaseIndexResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RentincreaseindicesDeleteRentIncreaseIndex401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RentincreaseindicesDeleteRentIncreaseIndex403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RentincreaseindicesDeleteRentIncreaseIndex404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RentincreaseindicesDeleteRentIncreaseIndex422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RentincreaseindicesDeleteRentIncreaseIndex500Response
  /v1/task_memberships:
    post:
      tags:
        - task_memberships
      summary: Creates a task_membership
      operationId: Taskmemberships_createMembership
      security:
        - api_key: []
        - oauth:
            - task_membership_write
      description: |
        # Description
        Creates a task_membership
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        $ref: '#/components/requestBodies/TaskMembership'
      responses:
        '201':
          description: TaskMembership successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskmembershipsCreateMembershipResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/TaskmembershipsCreateMembership401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/TaskmembershipsCreateMembership403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/TaskmembershipsCreateMembership422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/TaskmembershipsCreateMembership500Response
    get:
      tags:
        - task_memberships
      summary: Return task_memberships
      operationId: Taskmemberships_getAllTaskMemberships
      security:
        - api_key: []
        - oauth:
            - task_membership_read
      description: Return task_memberships
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: IDs of the tasks
          name: task_ids
          in: query
          example: 1,2,3
          schema:
            type: string
      responses:
        '200':
          description: Return task_memberships
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/TaskmembershipsGetAllTaskMembershipsResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/TaskmembershipsGetAllTaskMemberships401Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/TaskmembershipsGetAllTaskMemberships500Response
  /v1/task_memberships/{task_membership_id}:
    delete:
      tags:
        - task_memberships
      summary: Delete the task_membership
      operationId: Taskmemberships_deleteTaskMembership
      security:
        - api_key: []
        - oauth:
            - task_membership_destroy
      description: Delete the task_membership
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the task_membership you want to delete
          name: task_membership_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: TaskMembership successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskMembershipShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/TaskmembershipsDeleteTaskMembershipResponse
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/TaskmembershipsDeleteTaskMembership403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/TaskmembershipsDeleteTaskMembership422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/TaskmembershipsDeleteTaskMembership500Response
    put:
      tags:
        - task_memberships
      summary: Update task_membership
      operationId: Taskmemberships_updateMembership
      security:
        - api_key: []
        - oauth:
            - task_membership_write
      description: Update task_membership
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the task_membership to update
          name: task_membership_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/TaskMembership'
      responses:
        '200':
          description: Building task_membership successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskMembershipShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskmembershipsUpdateMembershipResponse'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/TaskmembershipsUpdateMembership403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/TaskmembershipsUpdateMembership422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/TaskmembershipsUpdateMembership500Response
  /v1/rent_increases:
    post:
      tags:
        - rent_increases
      summary: Creates a rent's increase (Admin only)
      operationId: Rentincreases_createNewIncrease
      security:
        - api_key: []
        - oauth:
            - rent_increase_write
      description: >
        # Description

        Creates a rent's increase

        Status: pending: 1, confirmed: 2, canceled: 3, confirmation_needed: 4,
        max_adjustments_reached: 5
      parameters:
        - description: ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RentIncreaseCreate'
        required: true
      responses:
        '201':
          description: RentIncrease successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentincreasesCreateNewIncreaseResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentincreasesCreateNewIncrease401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentincreasesCreateNewIncrease403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentincreasesCreateNewIncrease422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentincreasesCreateNewIncrease500Response'
    get:
      tags:
        - rent_increases
      summary: Return rent's increases
      operationId: Rentincreases_getIncreases
      security:
        - api_key: []
        - oauth:
            - rent_increase_read
      description: Return rent's increases
      parameters:
        - description: ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Return rent's increases
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentincreasesGetIncreasesResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentincreasesGetIncreases401Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentincreasesGetIncreases500Response'
  /v1/rent_increases/{rent_increase_id}/apply:
    put:
      tags:
        - rent_increases
      summary: Apply rent'  increase
      operationId: Rentincreases_applyRentIncrease
      security:
        - api_key: []
        - oauth:
            - rent_increase_write
      description: |
        # Description
        Apply rent_increase
      parameters:
        - description: ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the rent'  increase to update
          name: rent_increase_id
          in: path
          required: true
          schema:
            type: integer
        - name: apply
          in: query
          required: true
          schema:
            type: boolean
      responses:
        '200':
          description: Rent's increase successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentIncreaseShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentincreasesApplyRentIncreaseResponse'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentincreasesApplyRentIncrease403Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentincreasesApplyRentIncrease422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentincreasesApplyRentIncrease500Response'
  /v1/rent_increases/{rent_increase_id}:
    get:
      tags:
        - rent_increases
      summary: Return rent's increase
      operationId: Rentincreases_returnIncrease
      security:
        - api_key: []
        - oauth:
            - rent_increase_read
      description: Return rent's increase
      parameters:
        - description: ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the rent'  increase
          name: rent_increase_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Returns rent'  increase
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentincreasesReturnIncreaseResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentincreasesReturnIncrease401Response'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentincreasesReturnIncrease403Response'
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentincreasesReturnIncrease404Response'
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentincreasesReturnIncrease422Response'
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentincreasesReturnIncrease500Response'
    put:
      tags:
        - rent_increases
      summary: Update rent'  increase
      operationId: Rentincreases_updateRentIncrease
      security:
        - api_key: []
        - oauth:
            - rent_increase_write
      description: >
        # Description

        Update rent_increase (Admin only)

        Status: pending: 1, confirmed: 2, canceled: 3, confirmation_needed: 4,
        max_adjustments_reached: 5
      parameters:
        - description: ID of the customer_account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the rent'  increase to update
          name: rent_increase_id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RentIncrease'
        required: true
      responses:
        '200':
          description: Rent's increase successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentIncreaseShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentincreasesUpdateRentIncreaseResponse'
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RentincreasesUpdateRentIncrease403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RentincreasesUpdateRentIncrease422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RentincreasesUpdateRentIncrease500Response
    delete:
      tags:
        - rent_increases
      summary: Delete a rent_increase (Admin only)
      operationId: Rentincreases_deleteRentIncrease
      security:
        - api_key: []
        - oauth:
            - rent_increase_destroy
      description: |
        # Description
        Delete a rent_increase.
      parameters:
        - name: customer_account_id
          in: query
          required: false
          schema:
            type: integer
        - description: The ID of the rent_increase to delete
          name: rent_increase_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Rent's increase successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RentincreasesDeleteRentIncreaseResponse'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RentincreasesDeleteRentIncrease401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RentincreasesDeleteRentIncrease403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RentincreasesDeleteRentIncrease404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RentincreasesDeleteRentIncrease422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/RentincreasesDeleteRentIncrease500Response
  /v1/emission_factor_settings/update:
    post:
      tags:
        - emission_factor_settings
      summary: Updates an EmissionFactorSetting
      operationId: Emissionfactorsettings_updateEmissionFactorSetting
      security:
        - api_key: []
        - oauth:
            - emission_factor_setting_write
      description: Updates an EmissionFactorSetting within account
      parameters:
        - description: The ID on customer_account of the EmissionFactorSettings to show
          name: customer_account_id
          in: query
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmissionFactorSettingUpdate'
        required: true
      responses:
        '200':
          description: EmissionFactorSetting successfully updated
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmissionfactorsettingsUpdateEmissionFactorSettingResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmissionfactorsettingsUpdateEmissionFactorSetting401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmissionfactorsettingsUpdateEmissionFactorSetting403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmissionfactorsettingsUpdateEmissionFactorSetting404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmissionfactorsettingsUpdateEmissionFactorSetting422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmissionfactorsettingsUpdateEmissionFactorSetting500Response
  /v1/emission_factor_settings:
    get:
      tags:
        - emission_factor_settings
      summary: Returns all EmissionFactorSettings within the given account
      operationId: Emissionfactorsettings_getAllWithinAccount
      security:
        - api_key: []
        - oauth:
            - emission_factor_setting_read
      description: Returns all EmissionFactorSettings within the given account
      parameters:
        - description: The ID on customer_account of the EmissionFactorSettings to show
          name: customer_account_id
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Returns all EmissionFactorSettings within the given account
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmissionfactorsettingsGetAllWithinAccountResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmissionfactorsettingsGetAllWithinAccount401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmissionfactorsettingsGetAllWithinAccount403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmissionfactorsettingsGetAllWithinAccount422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmissionfactorsettingsGetAllWithinAccount500Response
    post:
      tags:
        - emission_factor_settings
      summary: Creates an EmissionFactorSetting
      operationId: Emissionfactorsettings_createEmissionFactorSetting
      security:
        - api_key: []
        - oauth:
            - emission_factor_setting_write
      description: Creates an EmissionFactorSetting
      parameters:
        - description: The ID on customer_account of the EmissionFactorSettings to show
          name: customer_account_id
          in: query
          required: false
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmissionFactorSettingCreate'
        required: true
      responses:
        '201':
          description: EmissionFactorSetting successfully created
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmissionfactorsettingsCreateEmissionFactorSettingResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmissionfactorsettingsCreateEmissionFactorSetting401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmissionfactorsettingsCreateEmissionFactorSetting403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmissionfactorsettingsCreateEmissionFactorSetting422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmissionfactorsettingsCreateEmissionFactorSetting500Response
  /v1/emission_factor_settings/{emission_factor_setting_id}:
    get:
      tags:
        - emission_factor_settings
      summary: Shows a EmissionFactorSetting
      operationId: Emissionfactorsettings_showEmissionFactorSetting
      security:
        - api_key: []
        - oauth:
            - emission_factor_setting_read
      description: Shows a EmissionFactorSetting
      parameters:
        - description: The ID of the emission_factor_setting to show
          name: emission_factor_setting_id
          in: path
          required: true
          schema:
            type: integer
        - description: The ID on customer_account of the EmissionFactorSettings to show
          name: customer_account_id
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Returns the EmissionFactorSetting
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmissionfactorsettingsShowEmissionFactorSettingResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmissionfactorsettingsShowEmissionFactorSetting401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmissionfactorsettingsShowEmissionFactorSetting403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmissionfactorsettingsShowEmissionFactorSetting404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmissionfactorsettingsShowEmissionFactorSetting422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmissionfactorsettingsShowEmissionFactorSetting500Response
    delete:
      tags:
        - emission_factor_settings
      summary: Deletes the EmissionFactorSetting within the account.
      operationId: Emissionfactorsettings_deleteEmissionFactorSetting
      security:
        - api_key: []
        - oauth:
            - emission_factor_setting_destroy
      description: Deletes the EmissionFactorSetting within the account.
      parameters:
        - description: The ID of the emission_factor_setting to show
          name: emission_factor_setting_id
          in: path
          required: true
          schema:
            type: integer
        - description: The ID on customer_account of the EmissionFactorSettings to show
          name: customer_account_id
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: EmissionFactorSetting successfully deleted
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmissionfactorsettingsDeleteEmissionFactorSettingResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmissionfactorsettingsDeleteEmissionFactorSetting401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmissionfactorsettingsDeleteEmissionFactorSetting403Response
        '404':
          description: A resource you were looking for can not be found
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmissionfactorsettingsDeleteEmissionFactorSetting404Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmissionfactorsettingsDeleteEmissionFactorSetting422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/EmissionfactorsettingsDeleteEmissionFactorSetting500Response
  /v1/customer_account_category_configs:
    post:
      tags:
        - customer_account_category_configs
      summary: Creates a customer account category config
      operationId: Customeraccountcategoryconfigs_createConfig
      security:
        - api_key: []
        - oauth:
            - customer_account_category_config_write
      description: |
        # Description
        Creates a customer account category config
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAccountCategoryConfigCreate'
        required: true
      responses:
        '201':
          description: Customer account category config successfully created
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountcategoryconfigsCreateConfigResponse
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountcategoryconfigsCreateConfig401Response
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountcategoryconfigsCreateConfig403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountcategoryconfigsCreateConfig422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountcategoryconfigsCreateConfig500Response
  /v1/customer_account_category_configs/{customer_account_category_config_id}:
    put:
      tags:
        - customer_account_category_configs
      summary: Update the customer account category config
      operationId: Customeraccountcategoryconfigs_updateConfig
      security:
        - api_key: []
        - oauth:
            - customer_account_category_config_write
      description: Update the customer account category config
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the customer account category config you want to update
          name: customer_account_category_config_id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerAccountCategoryConfig'
        required: true
      responses:
        '200':
          description: Customer account category config successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAccountCategoryConfigShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountcategoryconfigsUpdateConfigResponse
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountcategoryconfigsUpdateConfig403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountcategoryconfigsUpdateConfig422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountcategoryconfigsUpdateConfig500Response
    delete:
      tags:
        - customer_account_category_configs
      summary: Delete the customer account category config
      operationId: Customeraccountcategoryconfigs_deleteConfig
      security:
        - api_key: []
        - oauth:
            - customer_account_category_config_destroy
      description: Delete the customer account category config
      parameters:
        - description: ID of the customer account
          name: customer_account_id
          in: query
          required: true
          schema:
            type: integer
        - description: ID of the customer account category config you want to delete
          name: customer_account_category_config_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Customer account category config successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerAccountCategoryConfigShow'
        '401':
          description: Invalid or missing api key
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountcategoryconfigsDeleteConfigResponse
        '403':
          description: You are trying to access a resource but you are not allowed to
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountcategoryconfigsDeleteConfig403Response
        '422':
          description: The request could not be processed
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountcategoryconfigsDeleteConfig422Response
        '500':
          description: An unexpected error occurred
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/CustomeraccountcategoryconfigsDeleteConfig500Response
components:
  parameters:
    current_organisation_id:
      description: ID of the current organisation
      name: current_organisation_id
      in: query
      required: true
      schema:
        type: integer
  requestBodies:
    ContractMembershipCostCreate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContractMembershipCostCreate'
      required: true
    ActivityTypeCreate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ActivityTypeCreate'
      required: true
    ContractAdditionCreate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContractAdditionCreate'
      required: true
    BuildingFilterSettingsCreate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BuildingFilterSettingsCreate'
      required: true
    SecurityDepositCreate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SecurityDepositCreate'
      required: true
    TaskMembership:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TaskMembership'
      required: true
    RentIncreaseType:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RentIncreaseType'
      required: true
    OrganisationConfigCreate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrganisationConfigCreate'
      required: true
    ContractGrantCreate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContractGrantCreate'
      required: true
    BuildingSaveFiltersCreate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BuildingSaveFiltersCreate'
      required: true
    RentTrackerCreate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RentTrackerCreate'
      required: true
    ReportTemplateCreate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReportTemplateCreate'
      required: true
    ReportAccountSchemaCreate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReportAccountSchemaCreate'
      required: true
    ScorecardMembershipCost:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ScorecardMembershipCost'
      required: true
    RentIncreaseIndices:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RentIncreaseIndices'
      required: true
  securitySchemes:
    api_key:
      type: apiKey
      name: X-Api-Key
      in: header
    oauth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: /oauth/authorize
          tokenUrl: /oauth/token
          scopes:
            app_category_read: Get the app categories
            app_config_read: Get the app_configs
            app_config_write: Create or edit an app_config
            app_config_destroy: Delete the app_config
            app_data_repository_read: Get the app_data_repositories
            app_data_repository_write: Create or edit an app_data_repository
            app_data_repository_destroy: Delete the app_data_repository
            app_subscription_read: Get the app_subscriptions
            app_subscription_write: Create or edit an app_subscription
            app_subscription_destroy: Delete the app_subscription
            app_read: Get the apps
            app_write: Create or edit an app
            app_destroy: Delete the app
            contract_addition_read: Get the contract_additions
            contract_addition_write: Create or edit an contract_addition
            contract_addition_destroy: Delete the contract_addition
            contract_grant_read: Get the contract_grants
            contract_grant_write: Create or edit an contract_grant
            contract_grant_destroy: Delete the contract_grant
            contract_membership_cost_read: Get the contract_membership_costs
            contract_membership_cost_write: Create or edit an contract_membership_cost
            contract_membership_cost_destroy: Delete the contract_membership_cost
            contract_membership_write: Create or edit an contract_membership
            contract_membership_destroy: Delete the contract_membership
            contract_read: Get the contracts
            contract_write: Create or edit an contract
            contract_destroy: Delete the contract
            cost_type_read: Get the cost_types
            cost_type_write: Create or edit an cost_type
            cost_type_destroy: Delete the cost_type
            security_deposit_write: Create or edit an security_seposit
            security_deposit_destroy: Delete the security_seposit
            report_account_schema_read: Get the report_account_schemas
            report_account_schema_write: Create or edit an report_account_schema
            report_account_schema_destroy: Delete the report_account_schema
            report_template_read: Get the report_templates
            report_template_write: Create or edit the report_template
            report_template_destroy: Delete the report_template
            department_read: Get the departments
            department_write: Create or edit an department
            department_destroy: Delete the department
            manufacturer_read: Get the manufacturers
            manufacturer_write: Create or edit an manufacturer
            manufacturer_destroy: Delete the manufacturer
            room_and_zone_type_read: Get room_and_zone_types
            room_read: Get the rooms
            room_write: Create or edit an room
            room_destroy: Delete the room
            zone_write: Create or edit an zone
            zone_destroy: Delete the zone
            level_read: Get level
            level_write: Create or edit an facility_type
            level_destroy: Delete the facility_type
            facility_read: Get facility
            facility_write: Create or edit an facility_type
            facility_destroy: Delete the facility_type
            facility_type_read: Get the facility_types
            plan_version_write: Create or edit an plan_version
            plan_version_destroy: Delete the plan_version
            plan_read: Get the plans
            plan_write: Create or edit an plan
            plan_destroy: Delete the plan
            plan_config_read: Get the config of a plan
            activity_read: Fetch activities
            activity_write: Create and edit an activity
            activity_destroy: Delete the activity
            attachment_write: Create or edit an attachment
            attachment_destroy: Delete the attachment
            building_filter_setting_read: Get the building_filter_settings
            building_filter_setting_write: Create or edit an building_filter_setting
            building_filter_setting_destroy: Delete the building_filter_setting
            building_save_filter_read: Get the building_save_filters
            building_save_filter_write: Create or edit an building_save_filter
            building_save_filter_destroy: Delete the building_save_filter
            building_type_read: Get the building_types
            building_unit_membership_write: Create or edit an building_unit_membership
            building_unit_membership_destroy: Delete the building_unit_membership
            building_unit_type_read: Get the building_unit_types
            building_unit_type_write: Create or edit an building_unit_type
            building_unit_type_destroy: Delete the building_unit_type
            building_unit_read: Get the building_units
            building_unit_write: Create or edit an building_unit
            building_unit_destroy: Delete the building_unit
            building_read: Get the buildings
            building_write: Create or edit an building
            building_destroy: Delete the building
            customer_account_config_read: Get the customer_account_configs
            customer_account_config_write: Create or edit an customer_account_config
            customer_account_schema_read: Get the customer_account_schemas
            customer_account_schema_write: Create or edit an customer_account_schema
            customer_attributes_schema_membership_read: Get the customer_attributes_schema_memberships
            customer_attributes_schema_membership_write: Create or edit an customer_attributes_schema_membership
            customer_attributes_schema_read: Get the customer_attributes_schemas
            customer_attributes_schema_write: Create or edit an customer_attributes_schema
            image_write: Create or edit the image
            image_destroy: Delete the image
            lot_read: Get the lots
            lot_write: Create or edit an lot
            lot_destroy: Delete the lot
            organisation_config_read: Get the organisation_configs
            organisation_config_write: Create or edit an organisation_config
            organisation_membership_read: Get the organisation_memberships
            organisation_membership_write: Create or edit an organisation_membership
            organisation_membership_destroy: Delete the organisation_membership
            organisation_read: Get the organisations
            organisation_write: Create or edit an organisation
            person_read: Get the people
            person_write: Create or edit an person
            person_destroy: Delete the person
            person_membership_write: Create or edit an person_membership
            person_membership_destroy: Delete the person_membership
            property_read: Get the properties
            property_write: Create or edit an property
            property_destroy: Delete the property
            property_type_read: Get the property_types
            user_write: Log In or edit, or reset password for an user
            user_destroy: Log out
            vpi_index_read: Get the vpi_index
            credential_read: Get oauth credentials
            dashboard_config_read: Get dashboard config for an account
            dashboard_config_write: Add or edit the dashboard config for an account
            dashboard_config_destroy: Remove the dashboard config for an account
            time_dependent_attribute_read: Get time_dependent_attribute for an account
            time_dependent_attribute_write: Add or edit the time_dependent_attribute for an account
            time_dependent_attribute_destroy: Remove the time_dependent_attribute for an account
            ep_code_combination_read: Get the ep_code_combinations
            customer_account_write: ''
  schemas:
    PlatformConfig:
      type: object
      properties:
        landing_page_marketing:
          type: object
          properties:
            headline:
              type: string
            button_title:
              type: string
            button_link:
              type: string
            button_displayed:
              type: boolean
            image:
              type: string
            body:
              type: string
    PlatformConfigShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/PlatformConfig'
        - required:
            - platform_configs
          properties:
            user:
              $ref: '#/components/schemas/User'
            last_editor:
              $ref: '#/components/schemas/User'
    PlatformConfigCreate:
      allOf:
        - $ref: '#/components/schemas/PlatformConfig'
        - required:
            - platform_configs
    User:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
          format: email
        phone:
          type: string
        locale:
          type: string
          enum:
            - de
            - en
            - gsw
        user_settings:
          type: object
    UserShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/User'
        - required:
            - first_name
            - last_name
            - email
            - locale
          properties:
            images:
              type: array
              items:
                $ref: '#/components/schemas/ImageIndex'
    UserIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/User'
        - required:
            - first_name
            - last_name
            - email
            - locale
            - last_editor
          properties:
            thumbnail_url:
              type: string
            last_editor:
              $ref: '#/components/schemas/User'
    UserEmail:
      properties:
        email:
          type: string
    UserCreate:
      allOf:
        - $ref: '#/components/schemas/User'
        - required:
            - first_name
            - last_name
            - email
            - locale
          properties:
            redirect_url:
              type: string
            role_policy_ids:
              type: array
              items: {}
    UserUpdate:
      allOf:
        - $ref: '#/components/schemas/User'
        - properties:
            password:
              type: string
            current_password:
              type: string
            role_policy_ids:
              type: array
              items: {}
    UserResetPasswordInstructions:
      type: object
      required:
        - email
      properties:
        email:
          type: string
        redirect_url:
          type: string
    UserInvitations:
      type: object
      required:
        - email
      properties:
        email:
          type: string
        redirect_url:
          type: string
    UserSignIn:
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
    UserSignedIn:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/User'
        - required:
            - first_name
            - last_name
            - email
            - locale
            - api_key
          properties:
            role:
              type: string
              enum:
                - admin
                - client
            api_key:
              type: string
            thumbnail_url:
              type: string
            images:
              type: array
              items:
                $ref: '#/components/schemas/ImageIndex'
    UserWithRefreshedToken:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/User'
        - required:
            - api_key
            - first_name
            - last_name
            - email
          properties:
            api_key:
              type: string
    Role:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        role_policy_maps_attributes:
          type: array
          items:
            type: object
            properties:
              id:
                type: number
              role_policy_id:
                type: number
              _destroy:
                type: string
    RoleShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Role'
        - required:
            - name
            - currency
          properties:
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
    RoleCreate:
      allOf:
        - $ref: '#/components/schemas/Role'
        - required:
            - name
            - currency
    RoleIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Role'
        - required:
            - name
            - currency
          properties:
            user:
              $ref: '#/components/schemas/User'
            last_editor:
              $ref: '#/components/schemas/User'
    RolePolicy:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        rules:
          type: object
    RolePolicyShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/RolePolicy'
        - required:
            - name
            - currency
          properties:
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
    RolePolicyCreate:
      allOf:
        - $ref: '#/components/schemas/RolePolicy'
        - required:
            - name
            - currency
    RolePolicyIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/RolePolicy'
        - required:
            - name
            - currency
          properties:
            user:
              $ref: '#/components/schemas/User'
            last_editor:
              $ref: '#/components/schemas/User'
    Tenant:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        phone:
          type: string
    TenantContract:
      type: object
      properties:
        id:
          type: string
        start_date:
          type: string
        end_date:
          type: string
    TenantUnit:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        street:
          type: string
        street_number:
          type: string
        city:
          type: string
        province:
          type: string
        country:
          type: string
        zip_code:
          type: string
        latitude:
          type: string
        longitude:
          type: string
    TenantShow:
      allOf:
        - $ref: '#/components/schemas/Tenant'
        - required: []
          properties:
            contract:
              $ref: '#/components/schemas/TenantContract'
            unit:
              $ref: '#/components/schemas/TenantUnit'
    CustomerAccountTranslation:
      type: object
      properties:
        language:
          type: string
        value:
          type: string
        field:
          type: string
        parent_id:
          type: string
        parent_type:
          type: string
    CustomerAccountTranslationShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/CustomerAccountTranslation'
        - type: object
          required:
            - name
            - user
            - last_editor
          properties:
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            customer_account_id:
              type: string
            customer_account:
              $ref: '#/components/schemas/CustomerAccount'
    CustomerAccountTranslationIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/CustomerAccountTranslation'
        - required:
            - name
            - user
            - last_editor
            - organisation
          properties:
            id:
              type: integer
            customer_account_id:
              type: string
            customer_account:
              $ref: '#/components/schemas/CustomerAccountLightShow'
    CustomerAccountAttributeGroup:
      type: object
      properties:
        name:
          type: string
        fields:
          type: array
          items:
            type: string
        read_only:
          type: boolean
        parent_type:
          type: string
    CustomerAccountAttributeGroupShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/CustomerAccountAttributeGroup'
        - type: object
          required:
            - name
            - user
            - last_editor
          properties:
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            customer_account_id:
              type: string
            customer_account:
              $ref: '#/components/schemas/CustomerAccount'
    CustomerAccountAttributeGroupIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/CustomerAccountAttributeGroup'
        - required:
            - name
            - user
            - last_editor
          properties:
            id:
              type: integer
            customer_account_id:
              type: string
            customer_account:
              $ref: '#/components/schemas/CustomerAccountLightShow'
    EpCodeCombination:
      type: object
      properties:
        facility_type_id:
          type: integer
        ep_code:
          type: string
        repetition:
          type: integer
    EpCodeCombinationByFacilityType:
      allOf:
        - type: object
          additionalProperties:
            $ref: '#/components/schemas/EpCodeCombinationIndex'
        - required:
            - facility_type_id
    EpCodeCombinationIndex:
      allOf:
        - type: array
          items:
            $ref: '#/components/schemas/EpCodeCombination'
        - required:
            - facility_type_id
    DashboardConfig:
      type: object
      properties:
        aws_settings:
          type: object
          properties:
            aws_access_key_id:
              type: string
            aws_secret_access_key:
              type: string
            aws_region:
              type: string
            aws_account_id:
              type: string
            dashboard_id:
              type: string
            identity_type:
              type: string
              enum:
                - QUICKSIGHT
                - IAM
                - ANONYMOUS
    DashboardConfigShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/DashboardConfig'
        - required:
            - dashboard_configs
          properties:
            customer_account:
              type: array
              items:
                $ref: '#/components/schemas/CustomerAccountLightShow'
            embed_dashboard:
              type: object
              properties:
                embed_url:
                  type: string
                status:
                  type: number
                request_id:
                  type: string
    DashboardConfigCreate:
      allOf:
        - $ref: '#/components/schemas/DashboardConfig'
        - required:
            - dashboard_configs
    Dashboard:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        looker_item:
          type: string
        looker_config:
          type: object
        position:
          type: integer
        show_dashboard:
          type: boolean
    DashboardShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Dashboard'
        - required:
            - looker_embed_url
          properties:
            looker_embed_url:
              type: string
            customer_account_id:
              type: integer
            type:
              description: |
                standard: that cannot be editable
                custom: that are editable
              type: string
              enum:
                - standard
                - custom
    DashboardIndex:
      allOf:
        - $ref: '#/components/schemas/Dashboard'
        - properties:
            type:
              description: |
                standard: that cannot be editable
                custom: that are editable
              type: string
              enum:
                - standard
                - custom
            looker_embed_url:
              type: string
            customer_account_id:
              type: integer
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            last_editor:
              $ref: '#/components/schemas/UserIndex'
    DashboardUpdate:
      allOf:
        - required:
            - show_dashboard
          properties:
            description:
              type: string
            name:
              type: string
            looker_item:
              type: string
            show_dashboard:
              type: boolean
    DashboardOrderUpdate:
      allOf:
        - required:
            - dashboard_ids
          properties:
            dashboard_ids:
              type: array
              items:
                type: integer
    App:
      type: object
      properties:
        name:
          type: string
        currency:
          type: string
        short_name:
          type: string
        logo_base64:
          type: string
        logo_filename_with_extension:
          type: string
        data_partner_interface:
          type: string
        default_retail_price:
          type: integer
        default_retail_currency:
          type: string
        default_realcube_price:
          type: integer
        default_realcube_currency:
          type: string
        default_price_category:
          type: string
        default_data_lifetime:
          type: integer
        catalog_update_frequency:
          type: integer
        data_partner_base_url:
          type: string
        data_partner_score_url:
          type: string
    AppShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/App'
        - required:
            - name
            - currency
          properties:
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            app_subscriptions:
              type: array
              items:
                $ref: '#/components/schemas/AppSubscription'
            app_categories:
              type: array
              items:
                $ref: '#/components/schemas/AppCategory'
            images:
              type: array
              items:
                $ref: '#/components/schemas/Image'
            attachments:
              type: array
              items:
                $ref: '#/components/schemas/Attachment'
    AppCreate:
      allOf:
        - $ref: '#/components/schemas/App'
        - required:
            - name
            - currency
    AppIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/App'
        - required:
            - name
            - currency
          properties:
            user:
              $ref: '#/components/schemas/User'
            last_editor:
              $ref: '#/components/schemas/User'
            app_subscriptions:
              type: array
              items:
                $ref: '#/components/schemas/AppSubscription'
            app_categories:
              type: array
              items:
                $ref: '#/components/schemas/AppCategory'
            images:
              type: array
              items:
                $ref: '#/components/schemas/Image'
            attachments:
              type: array
              items:
                $ref: '#/components/schemas/Attachment'
    AppCategory:
      type: object
      properties:
        name:
          type: string
    AppCategoryShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/AppCategory'
        - required: []
          properties:
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            apps:
              type: array
              items:
                $ref: '#/components/schemas/App'
    AppSubscription:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        periodicity:
          type: string
        price:
          type: number
    AppSubscriptionCreate:
      allOf:
        - properties:
            app_id:
              type: integer
            name:
              type: string
              enum:
                - Free Tier
                - Premium
            periodicity:
              type: string
              enum:
                - month
                - year
        - $ref: '#/components/schemas/AppSubscription'
    AppSubscriptionShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/AppSubscription'
        - properties:
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            app:
              $ref: '#/components/schemas/App'
          required:
            - name
            - price
            - periodicity
    AppConfig:
      type: object
      properties:
        organisation_ids:
          type: array
          items:
            type: integer
    AppConfigCreate:
      properties:
        organisation_ids:
          type: array
          items:
            type: integer
        app_subscription_id:
          type: integer
    AppConfigShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/AppConfig'
        - required: []
          properties:
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            app_subscription:
              $ref: '#/components/schemas/AppSubscription'
            customer_account:
              $ref: '#/components/schemas/CustomerAccount'
    AppCategoryMembershipShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - required:
            - app_id
            - app_category_id
          properties:
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            app_subscription:
              $ref: '#/components/schemas/App'
            app_category:
              $ref: '#/components/schemas/AppCategory'
    AppDataRepository:
      type: object
      properties:
        app_data:
          type: object
    AppDataRepositoryCreate:
      type: object
      properties:
        app_data:
          type: object
        app_subscription_id:
          type: integer
        parent_id:
          type: integer
        parent_type:
          type: string
    AppDataRepositoryUpdate:
      type: object
      properties:
        app_data:
          type: object
    AppDataRepositoryShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/AppDataRepository'
        - required:
            - app_data
            - app_subscription_id
          properties:
            app_data:
              properties:
                example:
                  type: object
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            app_subscription:
              $ref: '#/components/schemas/AppSubscription'
    Plan:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        trade:
          type: string
          enum:
            - AA
            - AR
            - BA
            - BD
            - BG
            - BP
            - DV
            - ET
            - EW
            - FA
            - FT
            - HT
            - IA
            - KP
            - KT
            - LP
            - MT
            - SB
            - SI
            - ST
            - TE
            - TG
            - TW
            - VE
            - VM
            - VP
            - VT
        plan_type:
          type: string
          enum:
            - AA
            - AB
            - AF
            - AM
            - AP
            - AU
            - BA
            - BC
            - BE
            - BG
            - BL
            - BM
            - BN
            - BP
            - BS
            - BT
            - BW
            - BZ
            - DE
            - DP
            - DS
            - DT
            - EB
            - EL
            - EP
            - ER
            - ET
            - EW
            - FA
            - FS
            - FL
            - FN
            - FT
            - FW
            - GR
            - HH
            - HL
            - HP
            - HZ
            - IP
            - KA
            - KL
            - KM
            - KO
            - KP
            - KW
            - LA
            - LE
            - LF
            - LG
            - ME
            - MS
            - MT
            - NL
            - NS
            - PP
            - PZ
            - RW
            - SA
            - SB
            - SI
            - SK
            - SP
            - SS
            - SW
            - TH
            - TK
            - TV
            - UB
            - VK
            - VL
            - VM
            - VS
            - VT
            - WA
            - WP
            - AS
            - MO
            - BD
            - PF
            - TP
            - MF
        planning_phase:
          type: string
          enum:
            - '00'
            - '10'
            - '20'
            - '30'
            - '40'
            - '50'
            - '60'
            - '70'
            - '80'
            - '90'
            - AQ
            - WE
            - XX
        presentation:
          type: string
          enum:
            - GR
            - SC
            - AN
            - XX
            - PE
            - SH
            - VI
        plan_content:
          type: string
        floor:
          type: string
    PlanShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Plan'
        - required:
            - name
            - trade
            - plan_type
            - planning_phase
            - presentation
            - floor
          properties:
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            plan_versions:
              type: array
              items:
                $ref: '#/components/schemas/PlanVersion'
    PlanCreate:
      allOf:
        - $ref: '#/components/schemas/Plan'
        - required:
            - name
            - trade
            - plan_type
            - planning_phase
            - presentation
            - floor
    PlanIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Plan'
        - required:
            - building
          properties:
            user:
              $ref: '#/components/schemas/User'
            last_editor:
              $ref: '#/components/schemas/User'
            plan_versions:
              type: array
              items:
                $ref: '#/components/schemas/PlanVersion'
    PlanConfig:
      type: object
      properties:
        current_filename_config:
          type: object
        parent_type:
          type: string
    PlanConfigShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/PlanConfig'
        - required: []
          properties:
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
    PlanVersion:
      type: object
      properties:
        status:
          type: string
          enum:
            - VZ
            - BF
            - FR
            - ZF
    PlanVersionShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Plan'
        - required:
            - status
          properties:
            version:
              type: string
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            attachments:
              type: array
              items:
                $ref: '#/components/schemas/Attachment'
    PlanVersionCreate:
      allOf:
        - required:
            - status
          properties:
            version:
              type: string
            status:
              type: string
              enum:
                - VZ
                - BF
                - FR
                - ZF
    PlanVersionUpdate:
      allOf:
        - required:
            - status
          properties:
            version:
              type: string
            status:
              type: string
              enum:
                - VZ
                - BF
                - FR
                - ZF
    Organisation:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        comment:
          type: string
        street:
          type: string
        street_number:
          type: string
        zip_code:
          type: string
        city:
          type: string
    OrganisationShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Organisation'
        - properties:
            customer_accounts:
              $ref: '#/components/schemas/CustomerAccountShow'
        - required:
            - name
            - organisation_memberships
            - last_editor
          properties:
            organisation_memberships:
              $ref: '#/components/schemas/OrganisationMembershipShow'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
    OrganisationIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Organisation'
        - required:
            - name
            - last_editor
          properties:
            deleted_at:
              type: string
              nullable: true
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            customer_account:
              $ref: '#/components/schemas/CustomerAccountShow'
    OrganisationCreate:
      allOf:
        - $ref: '#/components/schemas/Organisation'
        - required:
            - name
    OrganisationConfig:
      type: object
      required:
        - id
        - building
        - building_unit
        - user
        - organisation
        - last_editor
      properties:
        id:
          type: integer
        building:
          type: object
          properties:
            standard_fields:
              type: array
              items: {}
            customer_attributes_fields:
              type: array
              items: {}
            tables:
              type: array
              items: {}
        building_unit:
          type: object
          properties:
            standard_fields:
              type: array
              items: {}
            customer_attributes_fields:
              type: array
              items: {}
            tables:
              type: array
              items: {}
        last_editor:
          $ref: '#/components/schemas/UserShow'
        user:
          $ref: '#/components/schemas/UserShow'
        organisation:
          $ref: '#/components/schemas/OrganisationIndex'
        deleted_at:
          type: string
          format: date-time
    OrganisationConfigCreate:
      properties:
        building:
          type: object
          properties:
            standard_fields:
              type: array
              example: []
              items: {}
            customer_attributes_fields:
              type: array
              example: []
              items: {}
            tables:
              type: array
              example: []
              items: {}
        building_unit:
          type: object
          properties:
            standard_fields:
              type: array
              example: []
              items: {}
            customer_attributes_fields:
              type: array
              example: []
              items: {}
            tables:
              type: array
              example: []
              items: {}
    OrganisationMembership:
      type: object
      required:
        - id
        - user
        - organisation
      properties:
        id:
          type: integer
        permitted_building_ids:
          type: array
          items: {}
        user:
          $ref: '#/components/schemas/UserShow'
        organisation:
          $ref: '#/components/schemas/OrganisationIndex'
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        deleted_at:
          type: string
          format: date-time
    OrganisationMembershipCreate:
      allOf:
        - type: object
          required:
            - user_id
          properties:
            user_id:
              type: integer
            permitted_building_ids:
              type: array
              items: {}
            role_ids:
              type: array
              items:
                type: integer
    OrganisationMembershipCreateFromEmail:
      type: object
      required:
        - email
      properties:
        email:
          type: string
          format: email
        permitted_building_ids:
          type: array
          items: {}
    OrganisationMembershipShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/OrganisationMembership'
        - type: object
          properties:
            id:
              type: integer
            permitted_building_ids:
              type: array
              items: {}
            last_editor:
              $ref: '#/components/schemas/UserIndex'
    OrganisationMembershipUpdate:
      allOf:
        - type: object
          properties:
            permitted_building_ids:
              type: array
              items: {}
            role_ids:
              type: array
              items:
                type: integer
    CustomerAccount:
      properties:
        time_attribute_schema:
          type: object
          properties:
            building:
              type: array
              items: {}
            unit:
              type: array
              items: {}
    CustomerAccountShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - type: object
          properties:
            name:
              type: string
            last_editor:
              $ref: '#/components/schemas/UserIndex'
        - $ref: '#/components/schemas/CustomerAccount'
    CustomerAccountLightShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - type: object
          properties:
            name:
              type: string
            has_contract:
              type: boolean
            demo_account:
              type: boolean
            demo_expires_at:
              type: string
            last_editor:
              $ref: '#/components/schemas/UserIndex'
        - $ref: '#/components/schemas/CustomerAccount'
    CustomerAttributesSchema:
      type: object
      properties:
        version:
          type: integer
        name:
          type: string
        comment:
          type: string
        attributes_type:
          type: string
          enum:
            - building
            - building_unit
        json_schema_de:
          type: object
        json_schema_en:
          type: object
    CustomerAttributesSchemaShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - properties:
            version:
              type: integer
            name:
              type: string
            comment:
              type: string
            attributes_type:
              type: string
              enum:
                - building
                - building_unit
            json_schema_en:
              type: object
            json_schema_de:
              type: object
          required:
            - name
            - version
            - attributes_type
            - json_schema
    CustomerAttributesSchemaCreate:
      allOf:
        - properties:
            name:
              type: string
            comment:
              type: string
            attributes_type:
              type: string
              enum:
                - building
                - building_unit
            json_schema_de:
              type: object
            json_schema_en:
              type: object
          required:
            - name
            - attributes_type
            - json_schema_de
            - json_schema_en
    CustomerAttributesSchemaMembership:
      type: object
      properties:
        organisation:
          $ref: '#/components/schemas/Organisation'
        customer_attributes_schema:
          $ref: '#/components/schemas/CustomerAttributesSchema'
    CustomerAttributesSchemaMembershipShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/CustomerAttributesSchemaMembership'
        - required:
            - organisation
            - customer_attributes_schema
            - last_editor
          properties:
            last_editor:
              $ref: '#/components/schemas/UserIndex'
    CustomerAttributesSchemaMembershipCreate:
      type: object
      properties:
        organisation_id:
          type: integer
        customer_attributes_schema_id:
          type: integer
      required:
        - organisation_id
        - customer_attributes_schema_id
    CustomerAccountConfig:
      type: object
      properties:
        building_fields:
          type: array
          items:
            type: string
        building_unit_fields:
          type: array
          items:
            type: string
        demo_data_uploaded:
          type: boolean
    PolicyAttributesMap:
      properties:
        policy_map:
          type: object
    CustomerAccountConfigShow:
      allOf:
        - $ref: '#/components/schemas/CustomerAccountConfig'
        - $ref: '#/components/schemas/PolicyAttributesMap'
        - properties:
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            contract_csv_url:
              type: string
              example: >-
                data:text/csv;base64,bmFtZSxwZXJzb25fZmlyc3RfbmFtZSxwZXJzb25fbGFzdF9uYW1lLGJ1aWxkaW5nX25hbWUsYnVpbGRpbmdfdW5pdF9uYW1lLGNvbnRyYWN0X21lbWJlcnNoaXBfdHlwZSxjb250cmFjdF90eXBlLHBhcmVudF9pZCxleHRlcm5hbF9pZCxyZW50YWxfcGVyaW9kLGNvbnRyYWN0X3N1Yl90eXBlLHN0YXJ0X2RhdGUsZW5kX2RhdGUsbWluaW11bV9jb250cmFjdF90ZXJtLG5vdGljZV9wZXJpb2QsY2FuY2VsbGluZ19hdF9kYXRlLGNhbmNlbGxlZF9hdF9kYXRlLHJlbnRfaW5jcmVhc2VfYWxsb3dhbmNlLGluZGV4X2Jhc2VkX2NvbmZpZyxzdGF0dXMscGVyc29uX21lbWJlcnNoaXBzX2F0dHJpYnV0ZXMsbWVtYmVyc2hpcHNfYXR0cmlidXRlcyxjdXJyZW5jeSxLYWx0bWlldGUsU29uc3RpZ2UsRGllbnN0ZSxNd1N0LEluc3RhbmRoYWx0dW5nLFZlcndhbHR1bmdzZ2Viw7xocmVuLFJlcGFyYXR1cmVuLFZlcnNpY2hlcnVuZyx0ZXN0Y29zdCxUSGlTSVNURVNUCg==
            landing_page_dashboards:
              type: array
              items:
                $ref: '#/components/schemas/DashboardIndex'
            has_datamarket_access:
              type: boolean
        - $ref: '#/components/schemas/PersistedRecord'
    CustomerAccountConfigCreate:
      allOf:
        - required:
            - building_fields
            - building_unit_fields
          properties:
            building_fields:
              type: array
              items:
                type: string
            building_unit_fields:
              type: array
              items:
                type: string
    CustomerAccountConfigUpdate:
      allOf:
        - $ref: '#/components/schemas/CustomerAccountConfig'
        - required:
            - demo_data_uploaded
          properties:
            demo_data_uploaded:
              type: boolean
    CustomerAccountSchema:
      type: object
      properties:
        name:
          type: string
        comment:
          type: string
        attributes_type:
          type: string
          enum:
            - building
            - building_unit
        json_schema_de:
          type: object
        json_schema_en:
          type: object
        json_schema_gsw:
          type: object
    CustomerAccountSchemaShow:
      allOf:
        - $ref: '#/components/schemas/CustomerAccountSchema'
        - $ref: '#/components/schemas/PersistedRecord'
    CustomerAccountSchemaUpdate:
      type: object
      properties:
        name:
          type: string
        comment:
          type: string
        json_schema_de:
          type: object
        json_schema_en:
          type: object
        json_schema_gsw:
          type: object
    CustomerAccountCategory:
      type: object
      properties:
        label:
          type: string
        grouping:
          type: string
        subgrouping:
          type: string
        display_sort_order:
          type: integer
        default:
          type: boolean
        conversion_factor:
          type: integer
        customer_editable:
          type: boolean
        external_conversion:
          type: boolean
        category:
          type: string
          enum:
            - length_metric
            - area_metric
            - area_norm
            - currency
            - energy_type
            - energy_volume
            - emission_volume
            - finance
            - water
            - water_volume
            - activity
            - shop_concept
            - retail
            - retail_metric
            - addl_id
            - phase
            - phase_status
            - payment_category
            - rent_tracker_payment
            - parking
            - summary_unit_type
            - summary_unit_type_classifier
            - building_area_type
            - unit_area_type
            - construction_project_category
            - main_energy_source
            - state_of_renovation
            - heating_used_energy
            - kitchen_type
            - objectphase
            - region
            - role
            - unit_type
            - property
            - property_value
            - facility_type
            - floor
            - institution_type
            - roof_form
            - unit_role
            - unit_finance
            - certificate_issuer
            - certificate_system
            - achieved_certificate_level
            - energy_performance
            - energy_source
            - waste_type
            - weight_unit
            - waste_treatment_method
    CustomerAccountCategoryShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/CustomerAccountCategory'
        - required:
            - label_id
            - customer_account_translations
          properties:
            label_id:
              type: integer
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            customer_account_translations:
              $ref: '#/components/schemas/CustomerAccountTranslationIndex'
    CustomerAccountCategoryUpdate:
      allOf:
        - properties:
            label:
              type: string
            grouping:
              type: string
            subgrouping:
              type: string
            display_sort_order:
              type: integer
            default:
              type: boolean
            customer_editable:
              type: boolean
    CustomerAccountCategoryIndex:
      allOf:
        - $ref: '#/components/schemas/CustomerAccountCategory'
        - properties:
            label_id:
              type: integer
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            deleted_at:
              type: string
              format: date-time
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            customer_account_translations:
              $ref: '#/components/schemas/CustomerAccountTranslationIndex'
    Contract:
      type: object
      properties:
        parent_id:
          type: string
        contract_type:
          type: string
          enum:
            - tenancy_contract
            - lease_contract
        name:
          type: string
        external_id:
          type: string
        source_system:
          type: string
        rental_period:
          type: string
        contract_sub_type:
          type: string
          enum:
            - empty
            - owner_occupation
            - rentable
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
        minimum_contract_term:
          type: string
          format: date-time
        debtor_number:
          type: string
        notice_period:
          type: object
          properties:
            value:
              type: number
            period:
              type: string
              enum:
                - days
                - weeks
                - months
                - years
        cancelling_at_date:
          type: string
          format: date-time
        cancelled_at_date:
          type: string
          format: date-time
        rent_increase_type:
          type: string
          enum:
            - comparable_rent
            - index_based_increase
            - graduate_rent
        rent_increase_allowance:
          type: string
          format: date-time
        index_based_config:
          type: object
          properties:
            base_index_date:
              type: string
            base_index_points:
              type: integer
            threshhold_type:
              type: string
              enum:
                - percentage
                - points
            threshhold_value:
              type: integer
            increase_type:
              type: string
              enum:
                - percentage
                - value
            increase_value:
              type: integer
        graduate_rent_config:
          type: object
          properties:
            increase_period:
              type: string
              enum:
                - monthly
                - yearly
            amount_type:
              type: string
              enum:
                - percentage
                - value
            amount_value:
              type: integer
            increase_yearly_date:
              type: string
            increase_monthly_day:
              type: string
        status:
          type: string
          enum:
            - draft
            - final
            - rejected
        currency:
          type: string
          enum:
            - EUR
            - CHF
        notes:
          type: string
    Amount:
      type: object
      properties:
        name:
          type: string
        amount_per_month:
          type: object
          properties:
            value:
              type: number
            currency:
              type: string
              enum:
                - EUR
                - USD
    ContractAttributes:
      properties:
        person_memberships_attributes:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              person_id:
                type: string
              member_id:
                type: string
              member_type:
                type: string
              role:
                type: string
              _destroy:
                type: string
        memberships_attributes:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              member_id:
                type: string
              member_type:
                type: string
              _destroy:
                type: string
        external_data_attributes:
          type: array
          items:
            type: object
            properties:
              external_id:
                type: integer
              source_system:
                type: string
              metadata:
                type: object
    ContractShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Contract'
        - required:
            - type
            - status
            - user
            - last_editor
            - customer_account
          properties:
            user:
              $ref: '#/components/schemas/User'
            last_editor:
              $ref: '#/components/schemas/User'
            customer_account:
              type: object
              properties:
                notes:
                  type: string
            parent:
              $ref: '#/components/schemas/ContractIndex'
            attachments:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentIndex'
            images:
              type: array
              items:
                $ref: '#/components/schemas/ImageIndex'
            organisation:
              $ref: '#/components/schemas/Organisation'
            external_data:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  external_id:
                    type: integer
                  source_system:
                    type: string
                  metadata:
                    type: object
                  parent_type:
                    type: string
                  parent_id:
                    type: string
            rent_increase_mappings:
              type: array
              items:
                $ref: '#/components/schemas/RentIncreaseMappingShow'
    ContractCreate:
      allOf:
        - $ref: '#/components/schemas/Contract'
        - $ref: '#/components/schemas/ContractAttributes'
        - required:
            - type
            - status
          properties:
            organisation_id:
              type: integer
    ContractUpdate:
      allOf:
        - $ref: '#/components/schemas/Contract'
        - $ref: '#/components/schemas/ContractAttributes'
        - properties:
            organisation_id:
              type: integer
    ContractIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Contract'
        - properties:
            thumbnail_url:
              type: string
            organisation:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
    ContractMembershipShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - required:
            - id
            - contract
            - member
            - last_editor
          properties:
            contract:
              $ref: '#/components/schemas/Contract'
            member:
              type: object
            deleted_at:
              type: string
              format: date-time
            last_editor:
              $ref: '#/components/schemas/UserIndex'
    ContractMembershipCreate:
      type: object
      required:
        - contract_id
        - member_id
        - member_type
      properties:
        contract_id:
          type: integer
        member_id:
          type: integer
        member_type:
          type: string
          enum:
            - building
            - building::unit
            - property
    ContractMembershipCost:
      type: object
      properties:
        description:
          type: string
        amount:
          type: number
        iban:
          type: string
        swift:
          type: string
        to_be_paid_at:
          type: string
        valid_from:
          type: string
          format: date-time
    ContractMembershipCostShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/ContractMembershipCost'
        - required:
            - amount
          properties:
            unit_type:
              $ref: '#/components/schemas/BuildingUnitType'
            cost_type:
              $ref: '#/components/schemas/CostType'
            user:
              $ref: '#/components/schemas/User'
            last_editor:
              $ref: '#/components/schemas/User'
    ContractMembershipCostCreate:
      allOf:
        - $ref: '#/components/schemas/ContractMembershipCost'
        - properties:
            unit_type_id:
              type: number
            cost_type_id:
              type: number
    ContractAddition:
      type: object
      properties:
        name:
          type: string
        signing_date:
          type: string
          format: date-time
    ContractAdditionShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/ContractAddition'
        - required:
            - name
          properties:
            contract:
              $ref: '#/components/schemas/Contract'
            user:
              $ref: '#/components/schemas/User'
            last_editor:
              $ref: '#/components/schemas/User'
    ContractAdditionCreate:
      allOf:
        - $ref: '#/components/schemas/ContractAddition'
        - required:
            - name
    ContractGrant:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        total_amount:
          type: number
        grant_type:
          type: string
          enum:
            - pre_opening
            - rent_free_time
            - other
        fee_split:
          type: array
          items:
            properties:
              percentage:
                type: number
              date_received:
                type: string
                format: date-time
    ContractGrantShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/ContractGrant'
        - required:
            - name
          properties:
            contract_membership_id:
              type: integer
            user:
              $ref: '#/components/schemas/User'
            last_editor:
              $ref: '#/components/schemas/User'
    ContractGrantCreate:
      allOf:
        - $ref: '#/components/schemas/ContractGrant'
        - required:
            - name
    SecurityDeposit:
      required: []
      type: object
      properties:
        amount:
          type: integer
        to_be_paid_before:
          type: string
          format: date-time
        payment_type:
          type: string
          enum:
            - one_time_payment
            - paid_in_three_monthly_fees
        deposit_type:
          type: string
          enum:
            - cash
            - bank_transaction
            - savings_account
            - surety
    SecurityDepositShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/SecurityDeposit'
        - required:
            - type
            - payment_type
            - user
            - last_editor
            - contract_membership
          properties:
            contract_membership_id:
              type: integer
            user:
              $ref: '#/components/schemas/User'
            last_editor:
              $ref: '#/components/schemas/User'
    SecurityDepositCreate:
      allOf:
        - $ref: '#/components/schemas/SecurityDeposit'
        - required:
            - type
            - payment_type
    CostType:
      type: object
      properties:
        name:
          type: string
        category:
          type: string
    CostTypeShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/CostType'
        - required:
            - name
    CostTypeCreate:
      allOf:
        - $ref: '#/components/schemas/CostType'
        - required:
            - name
    PropertyType:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
        name:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        last_editor:
          $ref: '#/components/schemas/UserIndex'
    Property:
      type: object
      properties:
        name:
          type: string
        country:
          type: string
        zip_code:
          type: string
        city:
          type: string
        custom_id:
          type: string
        comment:
          type: string
        external_id:
          type: string
        source_system:
          type: string
    PropertiesAttributes:
      properties:
        external_data_attributes:
          type: array
          items:
            type: object
            properties:
              external_id:
                type: integer
              source_system:
                type: string
              metadata:
                type: object
    PropertyShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Property'
        - required:
            - name
            - property_type
            - property_manager
            - user
            - organisation
            - last_editor
            - lots
            - buildings
            - attachments
          properties:
            deleted_at:
              type: string
              format: date-time
            property_type:
              $ref: '#/components/schemas/PropertyType'
            property_manager:
              $ref: '#/components/schemas/PropertyManager'
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            organisation:
              $ref: '#/components/schemas/OrganisationIndex'
            lots:
              type: array
              items:
                $ref: '#/components/schemas/LotIndex'
            buildings:
              type: array
              items:
                $ref: '#/components/schemas/BuildingIndex'
            attachments:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentIndex'
            images:
              type: array
              items:
                $ref: '#/components/schemas/ImageIndex'
            external_data:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  external_id:
                    type: integer
                  source_system:
                    type: string
                  metadata:
                    type: object
                  parent_type:
                    type: string
                  parent_id:
                    type: string
    PropertyCreate:
      allOf:
        - $ref: '#/components/schemas/Property'
        - $ref: '#/components/schemas/PropertiesAttributes'
        - required:
            - property_type_id
            - name
          properties:
            property_type_id:
              type: integer
            property_manager_id:
              type: integer
    PropertyUpdate:
      allOf:
        - $ref: '#/components/schemas/Property'
        - required:
            - property_type_id
            - name
          properties:
            property_type_id:
              type: integer
            property_manager_id:
              type: integer
        - $ref: '#/components/schemas/ActivitiesAttributes'
    PropertyIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Property'
        - $ref: '#/components/schemas/ActivitiesAttributes'
        - required:
            - name
            - property_type
          properties:
            deleted_at:
              type: string
              format: date-time
            property_manager_id:
              type: integer
            property_type:
              $ref: '#/components/schemas/PropertyType'
            thumbnail_url:
              type: string
    PropertyManager:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        phone_number:
          type: string
        contact_first_name:
          type: string
        contact_last_name:
          type: string
        street:
          type: string
        street_number:
          type: string
        city:
          type: string
        zip_code:
          type: string
        country:
          type: string
    PropertyManagerShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/PropertyManager'
        - properties:
            user:
              $ref: '#/components/schemas/User'
            last_editor:
              $ref: '#/components/schemas/User'
            customer_account:
              $ref: '#/components/schemas/CustomerAccount'
    PropertyManagerCreate:
      allOf:
        - $ref: '#/components/schemas/PropertyManager'
        - required:
            - name
          properties:
            user:
              $ref: '#/components/schemas/User'
            last_editor:
              $ref: '#/components/schemas/User'
            customer_account:
              $ref: '#/components/schemas/CustomerAccount'
    PropertyManagerUpdate:
      allOf:
        - $ref: '#/components/schemas/PropertyManager'
        - properties:
            user:
              $ref: '#/components/schemas/User'
            last_editor:
              $ref: '#/components/schemas/User'
            customer_account:
              $ref: '#/components/schemas/CustomerAccount'
    PropertyManagerIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/PropertyManager'
        - required:
            - name
          properties:
            customer_account:
              $ref: '#/components/schemas/CustomerAccount'
    Lot:
      type: object
      properties:
        custom_id:
          type: string
        external_id:
          type: string
        source_system:
          type: string
        name:
          type: string
        street:
          type: string
        street_number:
          type: string
        zip_code:
          type: string
        city:
          type: string
        province:
          type: string
        country:
          type: string
        comment:
          type: string
    LotsAttributes:
      properties:
        external_data_attributes:
          type: array
          items:
            type: object
            properties:
              external_id:
                type: integer
              source_system:
                type: string
              metadata:
                type: object
    LotShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Lot'
        - required:
            - name
            - property
            - user
            - organisation
          properties:
            deleted_at:
              type: string
              format: date-time
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            organisation:
              $ref: '#/components/schemas/OrganisationIndex'
            property:
              $ref: '#/components/schemas/PropertyIndex'
            buildings:
              type: array
              items:
                $ref: '#/components/schemas/BuildingIndexWithoutUnits'
            attachments:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentIndex'
            images:
              type: array
              items:
                $ref: '#/components/schemas/ImageIndex'
            external_data:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  external_id:
                    type: integer
                  source_system:
                    type: string
                  metadata:
                    type: object
                  parent_type:
                    type: string
                  parent_id:
                    type: string
    LotCreate:
      allOf:
        - $ref: '#/components/schemas/Lot'
        - $ref: '#/components/schemas/LotsAttributes'
        - required:
            - property_id
            - name
          properties:
            property_id:
              type: integer
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            organisation:
              $ref: '#/components/schemas/OrganisationIndex'
            property:
              $ref: '#/components/schemas/PropertyIndex'
            buildings:
              type: array
              items:
                $ref: '#/components/schemas/BuildingIndexWithoutUnits'
            attachments:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentIndex'
            images:
              type: array
              items:
                $ref: '#/components/schemas/ImageIndex'
    LotUpdate:
      allOf:
        - $ref: '#/components/schemas/Lot'
        - $ref: '#/components/schemas/LotsAttributes'
    LotIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Lot'
        - $ref: '#/components/schemas/LotsAttributes'
        - required:
            - name
            - property
            - user
            - organisation
          properties:
            deleted_at:
              type: string
              format: date-time
            thumbnail_url:
              type: string
    BuildingFilterSettings:
      type: object
      properties:
        name:
          type: string
        status:
          type: boolean
        tags_active:
          type: boolean
        fields:
          type: array
          items:
            type: string
        property_fields:
          type: array
          items:
            type: string
        customer_attributes:
          type: array
          items:
            type: string
        unit_fields:
          type: array
          items:
            type: string
        tag_fields:
          type: array
          items:
            type: string
        building_categories:
          type: object
          properties:
            person_memberships:
              type: array
              items: {}
        unit_categories:
          type: array
          items:
            type: string
        unit_customer_attributes:
          type: array
          items:
            type: string
    BuildingFilterSettingFields:
      type: object
      properties:
        fields:
          type: array
          items:
            type: string
        customer_attributes:
          type: array
          items:
            type: string
        unit_fields:
          type: array
          items:
            type: string
        tag_fields:
          type: array
          items:
            type: string
        building_categories:
          type: object
          properties:
            person_memberships:
              type: array
              items: {}
        unit_categories:
          type: array
          items:
            type: string
        unit_customer_attributes:
          type: array
          items:
            type: string
    BuildingFilterSettingsShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/BuildingFilterSettings'
        - required:
            - name
            - version
            - attributes_type
            - json_schema
    BuildingFilterSettingsCreate:
      allOf:
        - $ref: '#/components/schemas/BuildingFilterSettings'
        - required:
            - name
            - version
            - attributes_type
            - json_schema
    BuildingSaveFilters:
      type: object
      properties:
        name:
          type: string
        filter:
          type: object
          properties:
            presets_standard_fields:
              properties:
                building:
                  type: object
                  properties:
                    name:
                      type: array
                      items: {}
                building_unit:
                  type: object
                  properties:
                    name:
                      type: array
                      items: {}
            presets_customer_attributes:
              properties:
                building:
                  type: object
                  properties:
                    name:
                      type: string
                building_unit:
                  type: object
                  properties:
                    name:
                      type: string
    BuildingSaveFiltersShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/BuildingSaveFilters'
        - required:
            - name
            - filter
            - last_editor
          properties:
            last_editor:
              $ref: '#/components/schemas/UserIndex'
    BuildingSaveFiltersCreate:
      allOf:
        - $ref: '#/components/schemas/BuildingSaveFilters'
        - required:
            - name
            - filter
    BuildingType:
      type: object
      required:
        - id
        - name
        - code
      properties:
        id:
          type: integer
        name:
          type: string
        code:
          type: string
        parent_id:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        last_editor:
          $ref: '#/components/schemas/UserIndex'
    Building:
      type: object
      properties:
        name:
          type: string
        external_id:
          type: string
        source_system:
          type: string
        street:
          type: string
        street_number:
          type: string
        zip_code:
          type: string
        city:
          type: string
        province:
          type: string
        country:
          type: string
        comment:
          type: string
        latitude:
          type: number
        longitude:
          type: number
        units_count:
          type: number
        year_of_construction:
          type: integer
        gross_floor_area_in_sqm_din_277:
          type: number
        net_floor_area_in_sqm_din_277:
          type: number
        auxiliary_floor_area_in_sqm:
          type: number
        gross_floor_area_in_sqm_sia_d_0165:
          type: number
        net_floor_area_in_sqm_sia_d_0165:
          type: number
        architect:
          type: string
        contract_ids:
          type: array
          items: {}
        organisation_id:
          type: number
        customer_attributes_schema_id:
          type: number
        planned_monthly_rent:
          type: number
        number_of_floors:
          type: number
        number_of_windows:
          type: number
        user_intervention_window_number:
          type: number
        user_intervention_window_area:
          type: number
        last_refurbishment_at:
          type: string
          format: date
        heating_type:
          type: string
        main_energy_provider:
          type: string
        deso_facility:
          type: boolean
        institution_type:
          type: array
          items:
            type: integer
        facility_type:
          type: array
          items:
            type: integer
        number_of_lifts:
          type: integer
        protective_area:
          type: boolean
        parking_garage:
          type: integer
        main_energy_source:
          type: integer
        stairwells:
          type: integer
        state_of_renovation:
          type: integer
        construction_project_category:
          type: integer
        heating_used_energy:
          type: array
          items:
            type: integer
        kitchen_type:
          type: integer
        objectphase:
          type: integer
        region:
          type: integer
        floors_above_ground:
          type: integer
        floors_below_ground:
          type: integer
        customer_attributes:
          type: object
        fund_name:
          type: string
        own_use:
          type: boolean
        listed_building:
          type: boolean
        house_number:
          type: string
        address_suffix:
          type: string
        energy_certificate_type:
          type: string
          enum:
            - consumption_orientated
            - demand_orientated
        energy_class:
          type: string
        stored_energy_validity:
          type: string
          format: date-time
        accounting_rules_applied:
          type: string
        year_of_construction_heat_generator:
          type: string
        air_conditioning:
          type: boolean
    BuildingsAttributes:
      properties:
        external_data_attributes:
          type: array
          items:
            type: object
            properties:
              external_id:
                type: integer
              source_system:
                type: string
              metadata:
                type: object
    BuildingShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Building'
        - type: object
          required:
            - name
            - user
            - building_type
            - last_editor
            - organisation
            - customer_attributes
            - customer_attributes_schema
          properties:
            deleted_at:
              type: string
              format: date-time
            building_type:
              $ref: '#/components/schemas/BuildingType'
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            organisation:
              $ref: '#/components/schemas/OrganisationIndex'
            property:
              $ref: '#/components/schemas/PropertyIndex'
            lot:
              $ref: '#/components/schemas/LotIndex'
            levels:
              type: array
              items:
                $ref: '#/components/schemas/LevelShow'
            attachments:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentIndex'
            images:
              type: array
              items:
                $ref: '#/components/schemas/ImageIndex'
            facility_types:
              type: array
              items:
                $ref: '#/components/schemas/CustomerAccountCategory'
            heating_used_energies:
              type: array
              items:
                $ref: '#/components/schemas/CustomerAccountCategory'
            institution_types:
              type: array
              items:
                $ref: '#/components/schemas/CustomerAccountCategory'
            roof_forms:
              type: array
              items:
                $ref: '#/components/schemas/CustomerAccountCategory'
            objectphases:
              type: array
              items:
                $ref: '#/components/schemas/CustomerAccountCategory'
            regions:
              type: array
              items:
                $ref: '#/components/schemas/CustomerAccountCategory'
            kitchen_types:
              type: array
              items:
                $ref: '#/components/schemas/CustomerAccountCategory'
            construction_project_categories:
              type: array
              items:
                $ref: '#/components/schemas/CustomerAccountCategory'
            state_of_renovations:
              type: array
              items:
                $ref: '#/components/schemas/CustomerAccountCategory'
            main_energy_sources:
              type: array
              items:
                $ref: '#/components/schemas/CustomerAccountCategory'
            units:
              type: array
              items:
                $ref: '#/components/schemas/BuildingUnitIndex'
            customer_attributes_schema:
              $ref: '#/components/schemas/CustomerAttributesSchemaShow'
            external_data:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  external_id:
                    type: integer
                  source_system:
                    type: string
                  metadata:
                    type: object
                  parent_type:
                    type: string
                  parent_id:
                    type: string
    BuildingCreate:
      allOf:
        - $ref: '#/components/schemas/Building'
        - $ref: '#/components/schemas/BuildingsAttributes'
        - required:
            - building_type_id
            - parent_id
            - parent_type
            - name
            - customer_attributes
            - customer_attributes_schema_id
          properties:
            parent_id:
              type: integer
            parent_type:
              type: string
              enum:
                - property
                - lot
            building_type_id:
              type: integer
            customer_attributes_schema_id:
              type: integer
            tag_ids:
              type: array
              items:
                type: integer
    BuildingUpdate:
      allOf:
        - $ref: '#/components/schemas/Building'
        - properties:
            parent_id:
              type: integer
            parent_type:
              type: string
              enum:
                - property
                - lot
            organisation_id:
              type: integer
            building_type_id:
              type: integer
            customer_attributes_schema_id:
              type: integer
            tag_ids:
              type: array
              items:
                type: integer
        - $ref: '#/components/schemas/BuildingsAttributes'
    BuildingIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Building'
        - $ref: '#/components/schemas/BuildingsAttributes'
        - required:
            - name
            - user
            - building_type
            - last_editor
            - organisation
          properties:
            id:
              type: integer
            thumbnail_url:
              type: string
            deleted_at:
              type: string
              format: date-time
            building_type:
              $ref: '#/components/schemas/BuildingType'
            units:
              type: array
              items:
                $ref: '#/components/schemas/BuildingUnitIndex'
    BuildingShowWithFacilities:
      allOf:
        - $ref: '#/components/schemas/BuildingShow'
        - type: object
          properties:
            facilities_count:
              type: number
    BuildingPresets:
      type: object
      properties:
        tags:
          properties:
            building:
              type: array
              items: {}
            building_unit:
              type: array
              items: {}
        presets_standard_fields:
          properties:
            building:
              type: object
              properties:
                name:
                  type: array
                  items: {}
            building_unit:
              type: object
              properties:
                name:
                  type: array
                  items: {}
        presets_customer_attributes:
          properties:
            building:
              type: object
              properties:
                name:
                  type: string
            building_unit:
              type: object
              properties:
                name:
                  type: string
    BuildingIndexWithoutUnits:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Building'
        - required:
            - name
            - user
            - building_type
            - last_editor
            - organisation
          properties:
            id:
              type: integer
            thumbnail_url:
              type: string
            deleted_at:
              type: string
              format: date-time
            building_type:
              $ref: '#/components/schemas/BuildingType'
            property:
              $ref: '#/components/schemas/PropertyIndex'
            apps:
              type: array
              items:
                type: string
    BuildingForProperty:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Building'
        - required:
            - name
            - user
            - building_type
            - last_editor
            - organisation
          properties:
            id:
              type: integer
            thumbnail_url:
              type: string
            building_type:
              $ref: '#/components/schemas/BuildingType'
            property:
              $ref: '#/components/schemas/PropertyIndex'
    BuildingUnitType:
      type: object
      required:
        - id
        - name
        - updated_at
        - created_at
      properties:
        id:
          type: integer
        customer_account_id:
          type: integer
        name:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    BuildingUnitTypeCreate:
      type: object
      required:
        - name
      properties:
        name:
          type: string
    BuildingUnit:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        comment:
          type: string
        external_id:
          type: string
        source_system:
          type: string
        tenant:
          type: string
        owner:
          type: string
        building_id:
          type: number
        gross_floor_area_in_sqm_din_277:
          type: number
        net_floor_area_in_sqm_din_277:
          type: number
        auxiliary_floor_area_in_sqm:
          type: number
        social_floor_area_in_sqm:
          type: number
        market_rental_price:
          type: number
          format: float
        number_of_rooms:
          type: number
        number_of_bedrooms:
          type: number
        number_of_bathrooms:
          type: number
        quality_of_available_features:
          type: string
        current_condition:
          type: string
        description_of_features:
          type: string
        features:
          type: array
          enum:
            - einbauküche
            - balkon/terrasse
            - garten
            - stufenloser_zugang
            - wg_geeignet
            - parkplatz_vorhanden
            - haustiere_erlaubt
            - aufzug
            - gäste_wc
            - keller
            - wohnberechtigungsschein
          items: {}
        gross_floor_area_in_sqm_sia_d_0165:
          type: number
        net_floor_area_in_sqm_sia_d_0165:
          type: number
        planned_monthly_rent:
          type: number
        planned_operating_cost:
          type: number
        planned_deposit:
          type: number
        planned_total_rent:
          type: number
        heating_costs_in_operating_costs:
          type: boolean
        contracted_lease_base_rent:
          type: string
        contracted_lease_operating_costs:
          type: string
        contracted_lease_deposit:
          type: string
        floor:
          type: integer
        group_home:
          type: integer
        customer_attributes:
          type: object
    BuildingUnitsAttributes:
      properties:
        external_data_attributes:
          type: array
          items:
            type: object
            properties:
              external_id:
                type: integer
              source_system:
                type: string
              metadata:
                type: object
    BuildingUnitShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/BuildingUnit'
        - required:
            - name
            - building
            - type
            - user
            - last_editor
            - organisation
            - customer_attributes
            - customer_attributes_schema
          properties:
            deleted_at:
              type: string
              format: date-time
            user:
              $ref: '#/components/schemas/User'
            last_editor:
              $ref: '#/components/schemas/User'
            organisation:
              $ref: '#/components/schemas/OrganisationIndex'
            building_unit_type:
              $ref: '#/components/schemas/BuildingUnitType'
            customer_account_translations:
              $ref: '#/components/schemas/CustomerAccountTranslationIndex'
            levels:
              type: array
              items:
                $ref: '#/components/schemas/LevelIndex'
            rooms:
              type: array
              items:
                $ref: '#/components/schemas/RoomIndex'
            zones:
              type: array
              items:
                $ref: '#/components/schemas/ZoneIndex'
            facilites:
              type: array
              items:
                $ref: '#/components/schemas/FacilityIndex'
            attachments:
              type: array
              items:
                $ref: '#/components/schemas/ImageIndex'
            images:
              type: array
              items:
                $ref: '#/components/schemas/ImageIndex'
            customer_attributes_schema:
              $ref: '#/components/schemas/CustomerAttributesSchemaShow'
            external_data:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  external_id:
                    type: integer
                  source_system:
                    type: string
                  metadata:
                    type: object
                  parent_type:
                    type: string
                  parent_id:
                    type: string
    BuildingUnitIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/BuildingUnit'
        - $ref: '#/components/schemas/BuildingUnitsAttributes'
        - properties:
            building_unit_type:
              $ref: '#/components/schemas/BuildingUnitType'
            customer_account_translations:
              $ref: '#/components/schemas/CustomerAccountTranslationIndex'
            contract_ids:
              type: array
              example: []
              items: {}
            attachments:
              type: array
              items:
                $ref: '#/components/schemas/ImageIndex'
            images:
              type: array
              items:
                $ref: '#/components/schemas/ImageIndex'
            deleted_at:
              type: string
              format: date-time
            thumbnail_url:
              type: string
    BuildingUnitCreate:
      allOf:
        - $ref: '#/components/schemas/BuildingUnit'
        - $ref: '#/components/schemas/BuildingUnitsAttributes'
        - required:
            - name
            - building_id
            - customer_attributes
          properties:
            building_id:
              type: integer
            building_unit_type_id:
              type: integer
            tag_ids:
              type: array
              items:
                type: integer
    BuildingUnitUpdate:
      allOf:
        - $ref: '#/components/schemas/BuildingUnit'
        - properties:
            customer_account_translations:
              $ref: '#/components/schemas/CustomerAccountTranslationIndex'
            tag_ids:
              type: array
              items:
                type: integer
        - $ref: '#/components/schemas/BuildingUnitsAttributes'
    BuildingUnitMembershipShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - required:
            - id
            - unit
            - member
            - last_editor
          properties:
            unit:
              $ref: '#/components/schemas/BuildingUnit'
            member:
              type: object
            last_editor:
              $ref: '#/components/schemas/UserIndex'
    BuildingUnitMembershipCreate:
      type: object
      required:
        - unit_id
        - member_id
        - member_type
      properties:
        unit_id:
          type: integer
        member_id:
          type: integer
        member_type:
          type: string
          enum:
            - level
            - room
            - zone
            - facility
    BuildingEnergy:
      type: object
      properties:
        energy_volume:
          type: integer
        co2_emission_volume:
          type: integer
        from_date:
          type: string
          format: date-time
        to_date:
          type: string
          format: date-time
    BuildingEnergyShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/BuildingEnergy'
        - required:
            - energy_type
            - building
            - energy_volume_metric
            - co2_emission_volume_metric
          properties:
            building:
              $ref: '#/components/schemas/Building'
            energy_type:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            energy_volume_metric:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            co2_emission_volume_metric:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
    BuildingEnergyCreate:
      allOf:
        - $ref: '#/components/schemas/BuildingEnergy'
        - required:
            - energy_type_id
            - energy_volume_metric_id
            - co2_emission_volume_metric_id
          properties:
            energy_type_id:
              type: integer
            energy_volume_metric_id:
              type: integer
            co2_emission_volume_metric_id:
              type: integer
    BuildingEnergyUpdate:
      allOf:
        - $ref: '#/components/schemas/BuildingEnergy'
        - required:
            - energy_type_id
            - energy_volume_metric_id
            - co2_emission_volume_metric_id
          properties:
            energy_type_id:
              type: integer
            energy_volume_metric_id:
              type: integer
            co2_emission_volume_metric_id:
              type: integer
    BuildingEnergyIndex:
      allOf:
        - $ref: '#/components/schemas/BuildingEnergy'
        - properties:
            building:
              $ref: '#/components/schemas/BuildingShow'
            energy_type:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            energy_volume_metric:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            co2_emission_volume_metric:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            deleted_at:
              type: string
              format: date-time
    BuildingsFinance:
      type: object
      properties:
        value:
          type: integer
        from_date:
          type: string
          format: date-time
        to_date:
          type: string
          format: date-time
    BuildingsFinanceShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/BuildingsFinance'
        - required:
            - finance_category
            - building
            - value_metric
          properties:
            building:
              $ref: '#/components/schemas/Building'
            finance_category:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            value_metric:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
    BuildingsFinanceCreate:
      allOf:
        - $ref: '#/components/schemas/BuildingsFinance'
        - required:
            - finance_category_id
            - value_metric_id
          properties:
            finance_category_id:
              type: integer
            value_metric_id:
              type: integer
    BuildingsFinanceUpdate:
      allOf:
        - $ref: '#/components/schemas/BuildingsFinance'
        - required:
            - finance_category_id
            - value_metric_id
          properties:
            finance_category_id:
              type: integer
            value_metric_id:
              type: integer
    BuildingsFinanceIndex:
      allOf:
        - $ref: '#/components/schemas/BuildingsFinance'
        - properties:
            building:
              $ref: '#/components/schemas/BuildingShow'
            finance_category:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            value_metric:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            deleted_at:
              type: string
              format: date-time
    BuildingUnitsFinance:
      type: object
      properties:
        value:
          type: integer
        from_date:
          type: string
          format: date-time
        to_date:
          type: string
          format: date-time
    BuildingUnitsFinanceShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/BuildingUnitsFinance'
        - required:
            - finance_category
            - building_unit
            - value_metric
          properties:
            building_unit:
              $ref: '#/components/schemas/BuildingUnit'
            finance_category:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            value_metric:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
    BuildingUnitsFinanceCreate:
      allOf:
        - $ref: '#/components/schemas/BuildingUnitsFinance'
        - required:
            - finance_category_id
            - value_metric_id
          properties:
            finance_category_id:
              type: integer
            value_metric_id:
              type: integer
    BuildingUnitsFinanceUpdate:
      allOf:
        - $ref: '#/components/schemas/BuildingUnitsFinance'
        - required:
            - finance_category_id
            - value_metric_id
          properties:
            finance_category_id:
              type: integer
            value_metric_id:
              type: integer
    BuildingFm:
      type: object
      properties:
        value:
          type: integer
        from_date:
          type: string
          format: date-time
        to_date:
          type: string
          format: date-time
    BuildingFmShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/BuildingFm'
        - required:
            - activity_category
            - building
          properties:
            building:
              $ref: '#/components/schemas/Building'
            activity_category:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
    BuildingFmCreate:
      allOf:
        - $ref: '#/components/schemas/BuildingFm'
        - required:
            - activity_category_id
          properties:
            activity_category_id:
              type: integer
    BuildingFmUpdate:
      allOf:
        - $ref: '#/components/schemas/BuildingFm'
        - required:
            - activity_category_id
          properties:
            activity_category_id:
              type: integer
    BuildingFmIndex:
      allOf:
        - $ref: '#/components/schemas/BuildingFm'
        - properties:
            building:
              $ref: '#/components/schemas/BuildingShow'
            activity_category:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            deleted_at:
              type: string
              format: date-time
    BuildingUnitRetail:
      type: object
    BuildingUnitRetailShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/BuildingUnitRetail'
        - required:
            - shop_concept
            - building_unit
          properties:
            building_unit:
              $ref: '#/components/schemas/BuildingUnit'
            shop_concept:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
    BuildingUnitRetailCreate:
      allOf:
        - $ref: '#/components/schemas/BuildingUnitRetail'
        - required:
            - shop_concept_id
          properties:
            shop_concept_id:
              type: integer
    BuildingUnitRetailUpdate:
      allOf:
        - $ref: '#/components/schemas/BuildingUnitRetail'
        - required:
            - shop_concept_id
          properties:
            shop_concept_id:
              type: integer
    BuildingUnitRetailIndex:
      allOf:
        - $ref: '#/components/schemas/BuildingUnitRetail'
        - properties:
            building_unit:
              $ref: '#/components/schemas/BuildingUnit'
            shop_concept:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            deleted_at:
              type: string
              format: date-time
    BuildingUnitRetailMetric:
      type: object
      properties:
        value:
          type: integer
    BuildingUnitRetailMetricShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/BuildingUnitRetailMetric'
        - required:
            - building_unit_retail
            - category
            - value_metric
          properties:
            building_unit_retail:
              $ref: '#/components/schemas/BuildingUnitRetail'
            category:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            value_metric:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
    BuildingUnitRetailMetricCreate:
      allOf:
        - $ref: '#/components/schemas/BuildingUnitRetailMetric'
        - required:
            - category_id
            - value_metric_id
          properties:
            category_id:
              type: integer
            value_metric_id:
              type: integer
    BuildingUnitRetailMetricUpdate:
      allOf:
        - $ref: '#/components/schemas/BuildingUnitRetailMetric'
        - required:
            - category_id
            - value_metric_id
          properties:
            category_id:
              type: integer
            value_metric_id:
              type: integer
    BuildingUnitRetailMetricIndex:
      allOf:
        - $ref: '#/components/schemas/BuildingUnitRetailMetric'
        - properties:
            building_unit_retail:
              $ref: '#/components/schemas/BuildingUnitRetail'
            category:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            value_metric:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
    BuildingWaste:
      type: object
      properties:
        waste_amount:
          type: integer
        co2_emission_volume:
          type: integer
        from_date:
          type: string
          format: date-time
        to_date:
          type: string
          format: date-time
    BuildingWasteShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/BuildingWaste'
        - required:
            - waste_type
            - building
            - waste_amount_metric
            - co2_emission_volume_metric
          properties:
            building:
              $ref: '#/components/schemas/Building'
            waste_type:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            waste_amount_metric:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            co2_emission_volume_metric:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            waste_treatment_method:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
    BuildingWasteCreate:
      allOf:
        - $ref: '#/components/schemas/BuildingWaste'
        - required:
            - waste_type_id
            - waste_amount_metric_id
            - co2_emission_volume_metric_id
          properties:
            waste_type_id:
              type: integer
            waste_amount_metric_id:
              type: integer
            co2_emission_volume_metric_id:
              type: integer
            waste_treatment_method_id:
              type: integer
    BuildingWasteUpdate:
      allOf:
        - $ref: '#/components/schemas/BuildingWaste'
        - required:
            - waste_type_id
            - waste_amount_metric_id
            - co2_emission_volume_metric_id
          properties:
            waste_type_id:
              type: integer
            waste_amount_metric_id:
              type: integer
            co2_emission_volume_metric_id:
              type: integer
            waste_treatment_method_id:
              type: integer
    BuildingWasteIndex:
      allOf:
        - $ref: '#/components/schemas/BuildingWaste'
        - properties:
            building:
              $ref: '#/components/schemas/BuildingShow'
            waste_type:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            waste_amount_metric:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            co2_emission_volume_metric:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            waste_treatment_method:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            deleted_at:
              type: string
              format: date-time
    BuildingWater:
      type: object
      properties:
        water_volume:
          type: integer
        from_date:
          type: string
          format: date-time
        to_date:
          type: string
          format: date-time
    BuildingWaterShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/BuildingWater'
        - required:
            - water_category
            - building
            - water_volume_metric
          properties:
            building:
              $ref: '#/components/schemas/Building'
            water_category:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            water_volume_metric:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
    BuildingWaterCreate:
      allOf:
        - $ref: '#/components/schemas/BuildingWater'
        - required:
            - water_category_id
            - water_volume_metric_id
          properties:
            water_category_id:
              type: integer
            water_volume_metric_id:
              type: integer
    BuildingWaterUpdate:
      allOf:
        - $ref: '#/components/schemas/BuildingWater'
        - required:
            - water_category_id
            - water_volume_metric_id
          properties:
            water_category_id:
              type: integer
            water_volume_metric_id:
              type: integer
    BuildingWaterIndex:
      allOf:
        - $ref: '#/components/schemas/BuildingWater'
        - properties:
            building:
              $ref: '#/components/schemas/Building'
            water_category:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            water_volume_metric:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            deleted_at:
              type: string
              format: date-time
    AddtlBuildingId:
      type: object
      properties:
        addtl_id:
          type: string
    AddtlBuildingIdShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/AddtlBuildingId'
        - required:
            - addtl_id_category
            - building
          properties:
            building:
              $ref: '#/components/schemas/Building'
            addtl_id_category:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
    AddtlBuildingIdCreate:
      allOf:
        - $ref: '#/components/schemas/AddtlBuildingId'
        - required:
            - addtl_id_category_id
          properties:
            addtl_id_category_id:
              type: integer
    AddtlBuildingIdUpdate:
      allOf:
        - $ref: '#/components/schemas/AddtlBuildingId'
        - required:
            - addtl_id_category_id
          properties:
            addtl_id_category_id:
              type: integer
    AddtlBuildingIdIndex:
      allOf:
        - $ref: '#/components/schemas/AddtlBuildingId'
        - properties:
            building:
              $ref: '#/components/schemas/BuildingShow'
            addtl_id_category:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
    Phase:
      type: object
      properties:
        version:
          type: integer
        parent_id:
          type: integer
        parent_type:
          type: string
          enum:
            - building
            - building::unit
        phase_is_milestone:
          type: boolean
        szenario:
          type: string
        plan_start_date:
          type: string
          format: date-time
        plan_end_date:
          type: string
          format: date-time
        plan_cost:
          type: integer
        actual_start_date:
          type: string
          format: date-time
        actual_end_date:
          type: string
          format: date-time
        actual_cost:
          type: integer
    PhaseShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Phase'
        - required:
            - phase_category
            - status
            - plan_cost_metric
            - actual_cost_metric
          properties:
            phase_category:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            status:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            plan_cost_metric:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            actual_cost_metric:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
    PhaseCreate:
      allOf:
        - $ref: '#/components/schemas/Phase'
        - required:
            - status_id
            - plan_cost_metric_id
            - plan_cost_metric_id
            - actual_cost_metric_id
          properties:
            phase_category_id:
              type: integer
            status_id:
              type: integer
            plan_cost_metric_id:
              type: integer
            actual_cost_metric_id:
              type: integer
    PhaseUpdate:
      allOf:
        - $ref: '#/components/schemas/Phase'
        - required:
            - status_id
            - plan_cost_metric_id
            - plan_cost_metric_id
            - actual_cost_metric_id
          properties:
            phase_category_id:
              type: integer
            status_id:
              type: integer
            plan_cost_metric_id:
              type: integer
            actual_cost_metric_id:
              type: integer
    PhaseIndex:
      allOf:
        - $ref: '#/components/schemas/Phase'
        - properties:
            phase_category:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            status:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            plan_cost_metric:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            actual_cost_metric:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
    RentTracker:
      type: object
      properties:
        version:
          type: integer
        planned_pay:
          type: integer
        planned_pay_date:
          type: string
          format: date-time
        actual_pay:
          type: integer
        actual_pay_date:
          type: string
          format: date-time
    RentTrackerShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/RentTracker'
        - required:
            - payment_category
            - pay_currency
          properties:
            payment_category:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            pay_currency:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            building_unit:
              $ref: '#/components/schemas/BuildingUnit'
            property:
              $ref: '#/components/schemas/Property'
            building:
              $ref: '#/components/schemas/Building'
            contract:
              $ref: '#/components/schemas/Contract'
            lessor:
              $ref: '#/components/schemas/Person'
            child_of:
              $ref: '#/components/schemas/RentTracker'
    RentTrackerCreate:
      allOf:
        - $ref: '#/components/schemas/RentTracker'
        - required:
            - payment_category_id
            - pay_currency_id
          properties:
            payment_category_id:
              type: integer
            pay_currency_id:
              type: integer
            building_unit_id:
              type: integer
            property_id:
              type: integer
            building_id:
              type: integer
            contract_id:
              type: integer
            lessor_id:
              type: integer
            child_of_id:
              type: integer
            lessee_ids:
              type: array
              items:
                type: integer
    RentTrackerIndex:
      allOf:
        - $ref: '#/components/schemas/RentTracker'
        - properties:
            payment_category:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            pay_currency:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
    BuildingParking:
      type: object
      properties:
        places:
          type: integer
    BuildingParkingShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/BuildingParking'
        - required:
            - parking_category
          properties:
            parking_category:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
    BuildingParkingCreate:
      allOf:
        - $ref: '#/components/schemas/BuildingParking'
        - required:
            - parking_category_id
          properties:
            parking_category_id:
              type: integer
    BuildingParkingUpdate:
      allOf:
        - $ref: '#/components/schemas/BuildingParking'
        - required:
            - parking_category_id
          properties:
            parking_category_id:
              type: integer
    BuildingParkingIndex:
      allOf:
        - $ref: '#/components/schemas/BuildingParking'
        - properties:
            parking_category:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            deleted_at:
              type: string
              format: date-time
    BuildingArea:
      type: object
      properties:
        volume:
          type: integer
    BuildingAreaShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/BuildingArea'
        - required:
            - area_type
            - area_metric
            - area_norm
          properties:
            area_type:
              $ref: '#/components/schemas/Building'
            area_metric:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            area_norm:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
    BuildingAreaCreate:
      allOf:
        - $ref: '#/components/schemas/BuildingArea'
        - required:
            - area_type_id
            - area_metric_id
            - area_norm_id
          properties:
            area_type_id:
              type: integer
            area_metric_id:
              type: integer
            area_norm_id:
              type: integer
    BuildingAreaUpdate:
      allOf:
        - $ref: '#/components/schemas/BuildingArea'
        - required:
            - area_type_id
            - area_metric_id
            - area_norm_id
          properties:
            area_type_id:
              type: integer
            area_metric_id:
              type: integer
            area_norm_id:
              type: integer
    BuildingAreaIndex:
      allOf:
        - $ref: '#/components/schemas/BuildingArea'
        - properties:
            area_type:
              $ref: '#/components/schemas/Building'
            area_metric:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            area_norm:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            deleted_at:
              type: string
              format: date-time
    BuildingUnitArea:
      type: object
      properties:
        volume:
          type: integer
    BuildingUnitAreaShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/BuildingUnitArea'
        - required:
            - area_type
            - area_metric
            - area_norm
          properties:
            area_type:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            area_metric:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            area_norm:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
    BuildingUnitAreaCreate:
      allOf:
        - $ref: '#/components/schemas/BuildingUnitArea'
        - required:
            - area_type_id
            - area_metric_id
            - area_norm_id
          properties:
            area_type_id:
              type: integer
            area_metric_id:
              type: integer
            area_norm_id:
              type: integer
    BuildingUnitAreaUpdate:
      allOf:
        - $ref: '#/components/schemas/BuildingUnitArea'
        - required:
            - area_type_id
            - area_metric_id
            - area_norm_id
          properties:
            area_type_id:
              type: integer
            area_metric_id:
              type: integer
            area_norm_id:
              type: integer
    BuildingUnitAreaIndex:
      allOf:
        - $ref: '#/components/schemas/BuildingUnitArea'
        - properties:
            area_type:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            area_metric:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            area_norm:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            deleted_at:
              type: string
              format: date-time
    BuildingUnitPlace:
      type: object
    BuildingUnitPlaceShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/BuildingUnitPlace'
        - required:
            - type_label
          properties:
            building:
              $ref: '#/components/schemas/Building'
            type_label:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
    BuildingUnitPlaceCreate:
      allOf:
        - $ref: '#/components/schemas/BuildingUnitPlace'
        - required:
            - type_label_id
          properties:
            type_label_id:
              type: integer
    BuildingUnitPlaceUpdate:
      allOf:
        - $ref: '#/components/schemas/BuildingUnitPlace'
        - required:
            - type_label_id
          properties:
            type_label_id:
              type: integer
    BuildingUnitPlaceIndex:
      allOf:
        - $ref: '#/components/schemas/BuildingUnitPlace'
        - properties:
            building:
              $ref: '#/components/schemas/BuildingShow'
            type_label:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            deleted_at:
              type: string
              format: date-time
    BuildingUnitPlacesTimeboxed:
      type: object
      properties:
        num_of_units:
          type: integer
        num_of_places:
          type: integer
        num_of_vacant_places:
          type: integer
        area:
          type: integer
        from_date:
          type: string
          format: date-time
        to_date:
          type: string
          format: date-time
    BuildingUnitPlacesTimeboxedShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/BuildingUnitPlacesTimeboxed'
        - required:
            - building_unit_place
            - area_metric
            - area_norm
          properties:
            building_unit_place:
              $ref: '#/components/schemas/BuildingUnitPlace'
            area_metric:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            area_norm:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
    BuildingUnitPlacesTimeboxedCreate:
      allOf:
        - $ref: '#/components/schemas/BuildingUnitPlacesTimeboxed'
        - required:
            - area_metric_id
            - area_norm_id
          properties:
            area_metric_id:
              type: integer
            area_norm_id:
              type: integer
    BuildingUnitPlacesTimeboxedUpdate:
      allOf:
        - $ref: '#/components/schemas/BuildingUnitPlacesTimeboxed'
        - required:
            - area_metric_id
            - area_norm_id
          properties:
            area_metric_id:
              type: integer
            area_norm_id:
              type: integer
    BuildingUnitPlacesTimeboxedIndex:
      allOf:
        - $ref: '#/components/schemas/BuildingUnitPlacesTimeboxed'
        - properties:
            building_unit_place:
              $ref: '#/components/schemas/BuildingUnitPlace'
            area_metric:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            area_norm:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
    BuildingUnitPlacesProperty:
      type: object
    BuildingUnitPlacesPropertieshow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/BuildingUnitPlacesProperty'
        - required:
            - building_unit_places_timeboxed
            - property
            - property_value
          properties:
            building_unit_places_timeboxed:
              $ref: '#/components/schemas/BuildingUnitPlacesTimeboxed'
            property:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            property_value:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
    BuildingUnitPlacesPropertyCreate:
      allOf:
        - $ref: '#/components/schemas/BuildingUnitPlacesProperty'
        - required:
            - property_id
            - property_value_id
          properties:
            property_id:
              type: integer
            property_value_id:
              type: integer
    BuildingUnitPlacesPropertyUpdate:
      allOf:
        - $ref: '#/components/schemas/BuildingUnitPlacesProperty'
        - required:
            - property_id
            - property_value_id
          properties:
            property_id:
              type: integer
            property_value_id:
              type: integer
    BuildingUnitPlacesPropertyIndex:
      allOf:
        - $ref: '#/components/schemas/BuildingUnitPlacesProperty'
        - properties:
            building_unit_places_timeboxed:
              $ref: '#/components/schemas/BuildingUnitPlacesTimeboxed'
            property:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            property_value:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
    Person:
      type: object
      properties:
        name:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        company:
          type: string
        email:
          type: string
        phone:
          type: string
        street:
          type: string
        street_number:
          type: string
        zip_code:
          type: string
        city:
          type: string
        country:
          type: string
        external_id:
          type: string
        source_system:
          type: string
    PeopleAttributes:
      properties:
        external_data_attributes:
          type: array
          items:
            type: object
            properties:
              external_id:
                type: integer
              source_system:
                type: string
              metadata:
                type: object
    PersonShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Person'
        - required:
            - name
            - user
            - organisation
          properties:
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            organisation:
              $ref: '#/components/schemas/OrganisationIndex'
            external_data:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  external_id:
                    type: integer
                  source_system:
                    type: string
                  metadata:
                    type: object
                  parent_type:
                    type: string
                  parent_id:
                    type: string
    PersonCreate:
      allOf:
        - $ref: '#/components/schemas/Person'
        - $ref: '#/components/schemas/PeopleAttributes'
        - required:
            - name
    PersonUpdate:
      allOf:
        - $ref: '#/components/schemas/Person'
        - $ref: '#/components/schemas/PeopleAttributes'
    PersonIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Person'
        - $ref: '#/components/schemas/PeopleAttributes'
        - required:
            - name
            - user
            - organisation
    ReportTemplate:
      type: object
      properties:
        name:
          type: string
        query:
          properties:
            filters:
              type: array
              items:
                properties:
                  dimension:
                    type: string
                  operator:
                    type: string
                  values:
                    type: array
                    items: {}
            measures:
              type: array
              items: {}
            dimensions:
              type: array
              items: {}
            timeDimensions:
              type: array
              items: {}
    ReportTemplateShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/ReportTemplate'
        - required:
            - name
            - query
    ReportTemplateCreate:
      allOf:
        - $ref: '#/components/schemas/ReportTemplate'
        - required:
            - name
            - query
    ReportAccountSchema:
      type: object
      properties:
        cubes:
          type: array
          items:
            properties:
              name:
                type: string
              measures:
                type: array
                items: {}
              dimensions:
                type: array
                items: {}
              filters:
                type: array
                items: {}
              timeDimensions:
                type: array
                items: {}
              segments:
                type: array
                items: {}
              limit:
                type: integer
              offset:
                type: integer
              order:
                type: string
                enum:
                  - asc
                  - desc
              timezone:
                type: string
              renewQuery:
                type: boolean
              ungrouped:
                type: boolean
    ReportAccountSchemaShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/ReportAccountSchema'
        - required:
            - cubes
    ReportAccountSchemaCreate:
      allOf:
        - $ref: '#/components/schemas/ReportAccountSchema'
        - required:
            - cubes
    PersonMembership:
      type: object
      properties:
        person_id:
          type: number
        label_id:
          type: number
        role:
          type: string
        member_type:
          type: string
        member_id:
          type: number
        deleted_at:
          type: string
          format: date-time
    PersonMembershipIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/PersonMembership'
        - required:
            - user
            - organisation
    PersonMembershipShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - type: object
          required:
            - id
            - person
            - member
            - last_editor
          properties:
            deleted_at:
              type: string
              format: date-time
            label:
              $ref: '#/components/schemas/CustomerAccountCategory'
            person:
              $ref: '#/components/schemas/Person'
            member:
              type: object
            last_editor:
              $ref: '#/components/schemas/UserIndex'
    PersonMembershipCreate:
      type: object
      required:
        - person_id
        - member_id
        - member_type
      properties:
        person_id:
          type: integer
        role:
          type: string
          enum:
            - lessee
            - lift_manager
            - building_owner
            - building_operator
            - investor
            - facility_manager
            - property_manager
            - asset_manager
            - lessor
            - contact
        label_id:
          type: integer
        member_id:
          type: integer
        member_type:
          type: string
          enum:
            - building
            - building::unit
            - facility
            - contract
    Level:
      type: object
      properties:
        custom_id:
          type: string
        name:
          type: string
        comment:
          type: string
        number:
          type: integer
        category:
          description: >
            flat_roof: Flachdach

            saddleback_roof: Satteldach

            hipped_roof: Walmdach

            polygons_hipped_roof: Vielecken Walmdach

            crippled_hipped_roof: Krüppelwalmdach

            tent_roof: Zeltdach

            monopitch_roof: Pultdach

            schedule_roof: Scheddach

            mansard_roof: Mansardendach

            trailing_roof: Schleppdach

            only_roof: Nurdach

            roof_with_different_roof_pitches: Dach mit Verschiedenen
            Dachneigungen
          type: string
          enum:
            - flat_roof
            - saddleback_roof
            - hipped_roof
            - polygons_hipped_roof
            - crippled_hipped_roof
            - tent_roof
            - monopitch_roof
            - schedule_roof
            - mansard_roof
            - trailing_roof
            - only_roof
            - roof_with_different_roof_pitches
    LevelsAttributes:
      properties:
        external_data_attributes:
          type: array
          items:
            type: object
            properties:
              external_id:
                type: string
              source_system:
                type: string
              metadata:
                type: object
    LevelShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Level'
        - required:
            - name
            - number
            - building
            - user
            - last_editor
            - organisation
          properties:
            deleted_at:
              type: string
              format: date-time
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            organisation:
              $ref: '#/components/schemas/OrganisationIndex'
            building:
              $ref: '#/components/schemas/BuildingIndexWithoutUnits'
            rooms:
              type: array
              items:
                $ref: '#/components/schemas/RoomIndex'
            attachments:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentIndex'
            images:
              type: array
              items:
                $ref: '#/components/schemas/ImageIndex'
            building_units:
              type: array
              items:
                $ref: '#/components/schemas/BuildingUnitIndex'
    LevelCreate:
      allOf:
        - $ref: '#/components/schemas/Level'
        - required:
            - building_id
            - name
            - number
          properties:
            building_id:
              type: integer
        - $ref: '#/components/schemas/LevelsAttributes'
    LevelIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Level'
        - $ref: '#/components/schemas/LevelsAttributes'
        - properties:
            deleted_at:
              type: string
              format: date-time
            thumbnail_url:
              type: string
    RoomAndZoneType:
      type: object
      required:
        - id
        - name
        - code
        - level
        - net_floor_area_code
      properties:
        id:
          type: integer
        name:
          type: string
        code:
          type: string
        din_277_name:
          type: string
        example:
          type: string
        net_floor_area_code:
          type: string
        parent_id:
          type: integer
        depth:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        user:
          $ref: '#/components/schemas/UserIndex'
        last_editor:
          $ref: '#/components/schemas/UserIndex'
    Room:
      type: object
      properties:
        custom_id:
          type: string
        name:
          type: string
        comment:
          type: string
        number:
          type: string
        area_in_sqm:
          type: number
        height_in_m:
          type: number
        perimeter_in_m:
          type: number
    RoomsAttributes:
      properties:
        external_data_attributes:
          type: array
          items:
            type: object
            properties:
              external_id:
                type: string
              source_system:
                type: string
              metadata:
                type: object
    RoomShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Room'
        - required:
            - name
            - user
            - last_editor
            - organisation
            - level
          properties:
            deleted_at:
              type: string
              format: date-time
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            organisation:
              $ref: '#/components/schemas/OrganisationIndex'
            level:
              $ref: '#/components/schemas/LevelIndex'
            room_and_zone_type:
              $ref: '#/components/schemas/RoomAndZoneType'
            zones:
              type: array
              items:
                $ref: '#/components/schemas/ZoneShow'
            attachments:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentIndex'
            images:
              type: array
              items:
                $ref: '#/components/schemas/ImageIndex'
            building_units:
              type: array
              items:
                $ref: '#/components/schemas/BuildingUnitIndex'
    RoomCreate:
      allOf:
        - $ref: '#/components/schemas/Room'
        - required:
            - level_id
            - name
          properties:
            level_id:
              type: integer
            room_and_zone_type_id:
              type: integer
        - $ref: '#/components/schemas/RoomsAttributes'
    RoomUpdate:
      allOf:
        - $ref: '#/components/schemas/Room'
        - properties:
            room_and_zone_type_id:
              type: integer
    RoomIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Room'
        - $ref: '#/components/schemas/RoomsAttributes'
        - required:
            - name
          properties:
            deleted_at:
              type: string
              format: date-time
            room_and_zone_type:
              $ref: '#/components/schemas/RoomAndZoneType'
            level:
              $ref: '#/components/schemas/Level'
            thumbnail_url:
              type: string
    Zone:
      type: object
      properties:
        custom_id:
          type: string
        name:
          type: string
        comment:
          type: string
        area_in_sqm:
          type: number
    ZoneShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Zone'
        - required:
            - name
            - user
            - room_and_zone_type
            - last_editor
            - organisation
            - zone
          properties:
            deleted_at:
              type: string
              format: date-time
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            organisation:
              $ref: '#/components/schemas/OrganisationIndex'
            room:
              $ref: '#/components/schemas/RoomIndex'
            room_and_zone_type:
              $ref: '#/components/schemas/RoomAndZoneType'
            attachments:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentIndex'
            images:
              type: array
              items:
                $ref: '#/components/schemas/ImageIndex'
            building_units:
              type: array
              items:
                $ref: '#/components/schemas/BuildingUnitIndex'
    ZoneCreate:
      allOf:
        - $ref: '#/components/schemas/Zone'
        - required:
            - room_id
            - room_and_zone_type_id
            - name
          properties:
            room_id:
              type: integer
            room_and_zone_type_id:
              type: integer
    ZoneUpdate:
      allOf:
        - $ref: '#/components/schemas/Zone'
        - properties:
            room_and_zone_type_id:
              type: integer
    ZoneIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Zone'
        - required:
            - room_and_zone_type_id
            - name
          properties:
            thumbnail_url:
              type: string
            deleted_at:
              type: string
              format: date-time
            room_and_zone_type:
              $ref: '#/components/schemas/RoomAndZoneType'
    Department:
      type: object
      properties:
        name:
          type: string
    DepartmentShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Department'
        - required:
            - name
            - last_editor
          properties:
            last_editor:
              $ref: '#/components/schemas/UserIndex'
    DepartmentCreate:
      allOf:
        - $ref: '#/components/schemas/Department'
        - required:
            - name
    Manufacturer:
      type: object
      properties:
        name:
          type: string
    ManufacturerShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Manufacturer'
        - required:
            - name
            - last_editor
          properties:
            deleted_at:
              type: string
              format: date-time
            last_editor:
              $ref: '#/components/schemas/UserIndex'
    ManufacturerCreate:
      allOf:
        - $ref: '#/components/schemas/Manufacturer'
        - required:
            - name
    ModelType:
      type: object
      properties:
        name:
          type: string
    ModelTypeShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/ModelType'
        - required:
            - name
        - type: object
          required:
            - user
            - last_editor
          properties:
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
    ModelTypeCreate:
      allOf:
        - $ref: '#/components/schemas/ModelType'
        - required:
            - name
    FacilityType:
      type: object
      required:
        - id
        - code
        - group_1
        - version
      properties:
        description:
          type: string
        version:
          type: integer
        id:
          type: integer
        code:
          type: string
        group_1:
          type: string
        group_2:
          type: string
        group_3:
          type: string
        json_schema:
          type: object
        last_editor:
          $ref: '#/components/schemas/UserIndex'
    FacilityTypeIndex:
      type: object
      properties:
        description:
          type: string
        version:
          type: integer
        id:
          type: integer
        code:
          type: string
        group_1:
          type: string
        group_2:
          type: string
        group_3:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        last_editor:
          $ref: '#/components/schemas/UserIndex'
    FacilityTypeWithSchema:
      type: object
      properties:
        description:
          type: string
        version:
          type: integer
        id:
          type: integer
        code:
          type: string
        group_1:
          type: string
        group_2:
          type: string
        group_3:
          type: string
        json_schema:
          type: object
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        last_editor:
          $ref: '#/components/schemas/UserIndex'
    Facility:
      type: object
      properties:
        name:
          type: string
        custom_id:
          type: string
        external_id:
          type: string
        source_system:
          type: string
        ep_code:
          type: string
        comment:
          type: string
        inventory_number:
          type: string
        serial_number:
          type: string
        year_of_construction:
          type: integer
        last_inspection_at:
          type: string
          format: date-time
        last_maintenance_at:
          type: string
          format: date-time
        next_inspection_at:
          type: string
          format: date-time
        next_maintenance_at:
          type: string
          format: date-time
        latitude:
          type: number
        longitude:
          type: number
        type_dependent_attributes:
          type: object
        equipment_collection:
          type: boolean
        quantity:
          type: number
        facility_parent:
          type: string
    FacilitiesAttributes:
      properties:
        external_data_attributes:
          type: array
          items:
            type: object
            properties:
              external_id:
                type: integer
              source_system:
                type: string
              metadata:
                type: object
    FacilityShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Facility'
        - required:
            - name
            - facility_type
            - user
            - last_editor
            - organisation
          properties:
            deleted_at:
              type: string
              format: date-time
            user:
              $ref: '#/components/schemas/User'
            last_editor:
              $ref: '#/components/schemas/User'
            organisation:
              $ref: '#/components/schemas/OrganisationIndex'
            parent:
              $ref: '#/components/schemas/FacilityIndex'
            property:
              $ref: '#/components/schemas/PropertyIndex'
            lot:
              $ref: '#/components/schemas/LotIndex'
            building:
              $ref: '#/components/schemas/BuildingIndexWithoutUnits'
            level:
              $ref: '#/components/schemas/LevelIndex'
            room:
              $ref: '#/components/schemas/RoomIndex'
            zone:
              $ref: '#/components/schemas/ZoneIndex'
            manufacturer:
              $ref: '#/components/schemas/Manufacturer'
            model_type:
              $ref: '#/components/schemas/ModelTypeShow'
            facility_type:
              $ref: '#/components/schemas/FacilityType'
            attachments:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentIndex'
            images:
              type: array
              items:
                $ref: '#/components/schemas/ImageIndex'
            activities:
              type: array
              items:
                $ref: '#/components/schemas/ActivityForFacility'
            external_data:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  external_id:
                    type: integer
                  source_system:
                    type: string
                  metadata:
                    type: object
                  parent_type:
                    type: string
                  parent_id:
                    type: string
    FacilityCreate:
      allOf:
        - $ref: '#/components/schemas/Facility'
        - $ref: '#/components/schemas/FacilitiesAttributes'
        - required:
            - facility_type_id
            - location_id
            - location_type
          properties:
            facility_type_id:
              type: integer
            model_type_id:
              type: integer
            location_id:
              type: integer
            location_type:
              type: string
              enum:
                - property
                - lot
                - building
                - level
                - room
                - zone
            manufacturer_id:
              type: integer
            parent_id:
              type: integer
    FacilityUpdate:
      allOf:
        - $ref: '#/components/schemas/Facility'
        - properties:
            facility_type_id:
              type: integer
            model_type_id:
              type: integer
            manufacturer_id:
              type: integer
            parent_id:
              type: integer
        - $ref: '#/components/schemas/FacilitiesAttributes'
    FacilityIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Facility'
        - $ref: '#/components/schemas/FacilitiesAttributes'
        - properties:
            facility_type:
              $ref: '#/components/schemas/FacilityType'
            model_type:
              $ref: '#/components/schemas/ModelTypeShow'
            thumbnail_url:
              type: string
            deleted_at:
              type: string
              format: date-time
    Activity:
      type: object
      properties:
        description:
          type: string
        category:
          description: |
            inspection: Prüfung
            maintenance: Wartung
            disturbance: Störung
            overhaul: Instandsetzung
            other: Andere
          type: string
          enum:
            - inspection
            - maintenance
            - disturbance
            - overhaul
            - other
        company:
          type: string
        external_id:
          type: string
        conducted_at:
          type: string
          format: date
        labor_cost_in_cents:
          type: integer
        material_cost_in_cents:
          type: integer
    ActivitiesAttributes:
      properties:
        external_data_attributes:
          type: array
          items:
            type: object
            properties:
              external_id:
                type: integer
              source_system:
                type: string
              metadata:
                type: object
    ActivityShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Activity'
        - required:
            - deleted_at
            - facility
            - user
            - last_editor
            - organisation
          properties:
            deleted_at:
              type: string
              format: date-time
            activity_type:
              $ref: '#/components/schemas/ActivityType'
            facility:
              $ref: '#/components/schemas/FacilityIndex'
            property:
              $ref: '#/components/schemas/PropertyIndex'
            attachments:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentIndex'
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            organisation:
              $ref: '#/components/schemas/OrganisationIndex'
            external_data:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  external_id:
                    type: integer
                  source_system:
                    type: string
                  metadata:
                    type: object
                  parent_type:
                    type: string
                  parent_id:
                    type: string
    ActivityCreate:
      allOf:
        - $ref: '#/components/schemas/Activity'
        - required:
            - category
            - company
            - facility_ids
            - property_id
          properties:
            activity_type_id:
              type: integer
            facility_ids:
              type: array
              items:
                type: integer
            property_id:
              type: integer
        - $ref: '#/components/schemas/ActivitiesAttributes'
    ActivityUpdate:
      allOf:
        - required:
            - category
            - company
          properties:
            description:
              type: string
            category:
              description: |
                inspection: Prüfung
                maintenance: Wartung
                disturbance: Störung
                overhaul: Instandsetzung
                other: Andere
              type: string
              enum:
                - inspection
                - maintenance
                - disturbance
                - overhaul
                - other
            company:
              type: string
            conducted_at:
              type: string
              format: date
            labor_cost_in_cents:
              type: integer
            material_cost_in_cents:
              type: integer
            activity_type_id:
              type: integer
    ActivityIndex:
      allOf:
        - $ref: '#/components/schemas/Activity'
        - $ref: '#/components/schemas/ActivitiesAttributes'
        - properties:
            deleted_at:
              type: string
              format: date-time
            activity_type:
              $ref: '#/components/schemas/ActivityType'
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            organisation:
              $ref: '#/components/schemas/Organisation'
            facility:
              $ref: '#/components/schemas/Facility'
            attachments:
              $ref: '#/components/schemas/Attachment'
    ActivityForFacility:
      allOf:
        - $ref: '#/components/schemas/Activity'
        - properties:
            deleted_at:
              type: string
              format: date-time
            activity_type:
              type: array
              items:
                $ref: '#/components/schemas/ActivityType'
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            attachments:
              type: array
              items:
                $ref: '#/components/schemas/AttachmentIndex'
    ActivityType:
      type: object
      properties:
        name:
          type: string
    ActivityTypeShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/ActivityType'
        - required:
            - deleted_at
            - user
            - last_editor
          properties:
            deleted_at:
              type: string
              format: date-time
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            customer_account:
              $ref: '#/components/schemas/CustomerAccount'
            customer_account_translations:
              $ref: '#/components/schemas/CustomerAccountTranslationIndex'
    ActivityTypeCreate:
      allOf:
        - $ref: '#/components/schemas/ActivityType'
        - required:
            - name
    ActivityTypeIndex:
      allOf:
        - $ref: '#/components/schemas/ActivityType'
        - properties:
            deleted_at:
              type: string
              format: date-time
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            customer_account_translations:
              $ref: '#/components/schemas/CustomerAccountTranslationIndex'
    Attachment:
      type: object
      properties:
        description:
          type: string
        parent_id:
          type: integer
        parent_type:
          type: string
          enum:
            - taskmembership
            - property
            - lot
            - building
            - building::unit
            - level
            - room
            - zone
            - facility
            - activity
            - contract
            - contract::addition
            - planversion
            - app
        name:
          type: string
        url:
          type: string
        file_filename_with_extension:
          type: string
        category:
          description: |
            plan: Bauplan
            energy_pass: Energieausweis
            inspection_report: Wartungsbericht
            building_permit: Baugenehmigung
            certificate: Zertifikat
            bill: Rechnung
            other: Andere
          type: string
          enum:
            - app
            - plan
            - plan_version
            - nda
            - agb
            - energy_pass
            - inspection_report
            - building_permit
            - certificate
            - contract
            - contract_addition
            - bill
            - other
    AttachmentShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Attachment'
        - required:
            - parent_id
            - parent_type
            - category
            - last_editor
            - organisation
          properties:
            deleted_at:
              type: string
              format: date-time
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            organisation:
              $ref: '#/components/schemas/OrganisationIndex'
    AttachmentCreate:
      type: object
      required:
        - parent_type
        - parent_id
        - file_base64
        - file_filename_with_extension
        - category
      properties:
        description:
          type: string
        parent_id:
          type: integer
        parent_type:
          type: string
          enum:
            - taskmembership
            - property
            - lot
            - building
            - building::unit
            - level
            - room
            - zone
            - facility
            - activity
            - contract
            - contract::addition
            - planversion
            - app
        name:
          type: string
        file_base64:
          type: string
          format: byte
        file_filename_with_extension:
          type: string
        category:
          description: |
            plan: Bauplan
            energy_pass: Energieausweis
            inspection_report: Wartungsbericht
            building_permit: Baugenehmigung
            certificate: Zertifikat
            bill: Rechnung
            other: Andere
          type: string
          enum:
            - app
            - plan
            - plan_version
            - nda
            - agb
            - energy_pass
            - inspection_report
            - building_permit
            - certificate
            - contract
            - contract_addition
            - bill
            - other
    AttachmentDuplicate:
      type: object
      required:
        - copy_attachment_id
      properties:
        copy_attachment_id:
          type: integer
        parent_id:
          type: integer
        parent_type:
          type: string
          enum:
            - taskmembership
            - property
            - lot
            - building
            - building::unit
            - level
            - room
            - zone
            - facility
            - activity
            - contract
            - contract::addition
            - planversion
            - app
    AttachmentIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - type: object
          properties:
            description:
              type: string
            name:
              type: string
            url:
              type: string
            file_filename_with_extension:
              type: string
            category:
              description: |
                plan: Bauplan
                energy_pass: Energieausweis
                inspection_report: Wartungsbericht
                building_permit: Baugenehmigung
                certificate: Zertifikat
                bill: Rechnung
                other: Andere
              type: string
              enum:
                - app
                - plan
                - plan_version
                - nda
                - agb
                - energy_pass
                - inspection_report
                - building_permit
                - certificate
                - contract
                - contract_addition
                - bill
                - other
            deleted_at:
              type: string
              format: date-time
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
    Image:
      type: object
      properties:
        description:
          type: string
        parent_id:
          type: integer
        parent_type:
          type: string
          enum:
            - property
            - lot
            - building
            - building::unit
            - level
            - room
            - zone
            - facility
            - user
            - contract
            - contract::addition
            - app
        name:
          type: string
        url:
          type: string
        thumbnail_url:
          type: string
        file_filename_with_extension:
          type: string
        cover:
          type: boolean
    ImageShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Image'
        - required:
            - parent_id
            - parent_type
            - category
            - last_editor
            - organisation
          properties:
            deleted_at:
              type: string
              format: date-time
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            organisation:
              $ref: '#/components/schemas/OrganisationIndex'
    ImageCreate:
      type: object
      required:
        - parent_type
        - parent_id
        - file_base64
        - file_filename_with_extension
        - category
      properties:
        description:
          type: string
        parent_id:
          type: integer
        parent_type:
          type: string
          enum:
            - property
            - lot
            - building
            - building::unit
            - level
            - room
            - zone
            - facility
            - user
            - contract
            - contract::addition
            - app
        name:
          type: string
        file_base64:
          type: string
          format: byte
        file_filename_with_extension:
          type: string
        cover:
          type: boolean
    ImageUpdate:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        file_base64:
          type: string
          format: byte
        file_filename_with_extension:
          type: string
        cover:
          type: boolean
    ImageIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - type: object
          properties:
            description:
              type: string
            name:
              type: string
            url:
              type: string
            thumbnail_url:
              type: string
            file_filename_with_extension:
              type: string
            cover:
              type: boolean
            deleted_at:
              type: string
              format: date-time
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
    TimeDependentAttribute:
      required:
        - attribute_key
        - attribute_value
        - attribute_timestamp
        - parent_id
        - parent_type
      type: object
      properties:
        parent_id:
          type: integer
        customer_account_id:
          type: integer
        parent_type:
          type: string
          enum:
            - Building
            - Building::Unit
        attribute_key:
          type: string
        attribute_value:
          type: string
        attribute_type:
          type: string
          enum:
            - individual
            - global
        attribute_timestamp:
          type: string
          format: date-time
    TimeDependentAttributeShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/TimeDependentAttribute'
        - properties:
            user:
              $ref: '#/components/schemas/User'
            last_editor:
              $ref: '#/components/schemas/User'
    TimeDependentAttributeIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/TimeDependentAttribute'
        - properties:
            user:
              $ref: '#/components/schemas/User'
            last_editor:
              $ref: '#/components/schemas/User'
    Webhook:
      type: object
      properties:
        description:
          type: string
        url:
          type: string
        mode:
          type: number
        events:
          type: array
          items: {}
        secret:
          type: string
        organisation_ids:
          type: array
          items: {}
    WebhookShow:
      allOf:
        - $ref: '#/components/schemas/Webhook'
        - required:
            - url
            - description
            - mode
            - events
            - secret
          properties:
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            customer_account:
              $ref: '#/components/schemas/UserIndex'
            organisation_ids:
              type: array
              items:
                $ref: '#/components/schemas/Organisation'
    WebhookCreate:
      allOf:
        - $ref: '#/components/schemas/Webhook'
        - required:
            - url
            - description
            - mode
            - events
            - secret
    WebhookIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Webhook'
        - required:
            - customer_account_id
    Tag:
      type: object
      properties:
        label:
          type: string
    TagShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Tag'
        - required:
            - last_editor
          properties:
            deleted_at:
              type: string
              format: date-time
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            count:
              type: integer
    TagCreate:
      allOf:
        - $ref: '#/components/schemas/Tag'
        - required:
            - label
    TagsMergeBody:
      properties:
        master_tag:
          type: integer
        other_tags:
          type: array
          items: {}
    TagUpdate:
      allOf:
        - $ref: '#/components/schemas/Tag'
        - required:
            - label
    TagIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - type: object
          properties:
            label:
              type: string
            deleted_at:
              type: string
              format: date-time
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            count:
              type: integer
    TagAssignBuildings:
      allOf:
        - required:
            - building_ids
            - tag_ids
          properties:
            building_ids:
              type: array
              items:
                type: integer
            tag_ids:
              type: array
              items:
                type: integer
    CsvImport:
      type: object
      properties:
        location_type:
          type: string
        is_demo:
          type: boolean
        number_of_imported_records:
          type: integer
        metadata:
          type: object
    CsvImportShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/CsvImport'
        - required:
            - organisation
            - customer_account
          properties:
            metadata:
              type: object
            organisation:
              $ref: '#/components/schemas/Organisation'
            customer_account:
              $ref: '#/components/schemas/CustomerAccount'
            url:
              type: string
            file_filename_with_extension:
              type: string
    CsvImportShowCreate:
      required:
        - import_data
        - general_status
        - invalid_columns
      properties:
        import_data:
          $ref: '#/components/schemas/CsvImportShow'
        metadata:
          type: object
        general_status:
          type: string
        invalid_columns:
          type: array
          items:
            properties:
              row_number:
                type: integer
              failed_rows:
                type: object
    CsvImportCreate:
      type: object
      required:
        - location_type
        - file_base64
        - file_filename_with_extension
      properties:
        location_type:
          type: string
          enum:
            - properties
            - lots
            - buildings
            - building_units
            - levels
            - rooms
            - facilities
            - contracts
        is_demo:
          type: boolean
        metadata:
          type: object
        file_base64:
          type: string
          format: byte
        file_filename_with_extension:
          type: string
    CsvImportIndex:
      allOf:
        - $ref: '#/components/schemas/CsvImportShow'
        - properties:
            organisation:
              $ref: '#/components/schemas/Organisation'
            customer_account:
              $ref: '#/components/schemas/CustomerAccount'
            url:
              type: string
            file_filename_with_extension:
              type: string
    CsvImportUpdate:
      allOf:
        - required:
            - category
            - company
          properties:
            status:
              description: |
                imported
                canceled
                partially_imported
              type: string
              enum:
                - canceled
                - draft
                - partially_imported
                - imported
    Scorecard:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        status:
          type: string
          enum:
            - draft
            - final
    ScorecardShow:
      allOf:
        - $ref: '#/components/schemas/Scorecard'
        - required:
            - buildings_applied
            - assigners
          properties:
            active:
              type: boolean
            buildings_applied:
              type: array
              items: {}
            customer_account_id:
              type: integer
            assigners:
              type: array
              items: {}
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            segments:
              $ref: '#/components/schemas/ScorecardSegment'
            global:
              type: boolean
    ScorecardCreate:
      allOf:
        - $ref: '#/components/schemas/Scorecard'
        - required:
            - name
            - status
          properties:
            global:
              type: boolean
    ScorecardIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/Scorecard'
        - required:
            - buildings_applied
            - assigners
            - segments
            - active
          properties:
            active:
              type: boolean
            buildings_applied:
              type: array
              items: {}
            assigners:
              type: array
              items: {}
            segments:
              $ref: '#/components/schemas/ScorecardSegment'
            customer_account_id:
              type: integer
            global:
              type: boolean
    ScorecardSegment:
      type: object
      properties:
        name:
          type: string
        weight_type:
          type: string
        position:
          type: integer
    ScorecardSegmentShow:
      allOf:
        - $ref: '#/components/schemas/ScorecardSegment'
        - required:
            - name
            - weight_type
          properties:
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
    ScorecardSegmentCreate:
      allOf:
        - $ref: '#/components/schemas/ScorecardSegment'
        - required:
            - scorecard_id
          properties:
            scorecard_id:
              type: number
    ScorecardTopic:
      type: object
      properties:
        name:
          type: string
        weight_type:
          type: string
        weight_value:
          type: integer
        position:
          type: integer
    ScorecardTopicShow:
      allOf:
        - $ref: '#/components/schemas/ScorecardTopic'
        - required:
            - name
            - weight_type
            - weight_value
          properties:
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
    ScorecardTopicCreate:
      allOf:
        - $ref: '#/components/schemas/ScorecardTopic'
        - required:
            - scorecard_segment_id
          properties:
            scorecard_segment_id:
              type: number
    ScorecardSubtopic:
      type: object
      properties:
        name:
          type: string
        weight_value:
          type: integer
        scorecard_scores:
          type: array
          items:
            type: object
            properties:
              score:
                type: integer
              range_type:
                type: string
                enum:
                  - in_range
                  - eq
                  - lt
                  - lte
                  - gt
                  - gte
              attribute_value:
                type: string
                example: Can be of a type string, date, or array with two elements!
        attribute_type:
          type: string
        attribute_id:
          type: string
        position:
          type: integer
    ScorecardSubtopicShow:
      allOf:
        - $ref: '#/components/schemas/ScorecardSubtopic'
        - required:
            - name
            - weight_type
            - weight_value
          properties:
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
    ScorecardSubtopicCreate:
      allOf:
        - $ref: '#/components/schemas/ScorecardSubtopic'
        - required:
            - scorecard_topic_id
          properties:
            scorecard_topic_id:
              type: number
    ScorecardMembership:
      type: object
      properties:
        scorecard_id:
          type: number
        parent_type:
          type: string
          enum:
            - building
            - building_unit
            - facility
        parent_id:
          type: number
    SegmentScore:
      type: object
      properties:
        score:
          type: number
        topic_scores:
          type: array
          items:
            $ref: '#/components/schemas/TopicScore'
        segment:
          $ref: '#/components/schemas/ScorecardSegmentShow'
    TopicScore:
      type: object
      properties:
        unweighted_score:
          type: number
        weighted_score:
          type: number
        subtopic_scores:
          type: array
          items:
            $ref: '#/components/schemas/SubtopicScore'
        topic:
          $ref: '#/components/schemas/ScorecardTopicShow'
    SubtopicScore:
      type: object
      properties:
        unweighted_score:
          type: number
        weighted_score:
          type: number
        attribute_values:
          type: object
          example: '{ value: 123, type: numeric }'
        status:
          type: string
          enum:
            - pending
            - calculated
            - error
        subtopic:
          $ref: '#/components/schemas/ScorecardSubtopicShow'
    ScorecardMembershipCost:
      type: object
      properties:
        parent_id:
          type: number
        parent_type:
          type: string
        scorecard_id:
          type: number
        scorecard_name:
          type: string
        segment_id:
          type: number
        segment_name:
          type: string
        topic_id:
          type: number
        topic_name:
          type: string
        subtopic_id:
          type: number
        subtopic_name:
          type: string
        data_catalog_id:
          type: number
        technical_key:
          type: string
        name:
          type: string
        realcube_price:
          type: integer
      allOf:
        - required:
            - parent_ids
            - scorecard_ids
          properties:
            parent_ids:
              type: array
              items:
                type: integer
            scorecard_ids:
              type: array
              items:
                type: integer
    ScorecardMembershipsIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/ScorecardMembership'
        - required:
            - segment_scores
            - scorecard_id
            - parent_type
          properties:
            status:
              type: string
              enum:
                - pending
                - calculated
                - error
            error_messages:
              type: array
              items:
                type: string
            scorecard:
              $ref: '#/components/schemas/Scorecard'
            segment_scores:
              type: array
              items:
                $ref: '#/components/schemas/SegmentScore'
            parent:
              $ref: '#/components/schemas/BuildingShow'
            dirty_at:
              type: string
              format: date-time
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
    ScorecardMembershipsCosts:
      allOf:
        - properties:
            id:
              type: integer
        - $ref: '#/components/schemas/ScorecardMembershipCost'
    ScorecardMembershipsShow:
      allOf:
        - $ref: '#/components/schemas/ScorecardMembership'
        - required:
            - scorecard_id
            - parent_id
          properties:
            scorecard:
              $ref: '#/components/schemas/Scorecard'
            parent:
              $ref: '#/components/schemas/BuildingShow'
            segment_scores:
              type: array
              items:
                $ref: '#/components/schemas/SegmentScore'
            dirty_at:
              type: string
              format: date-time
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            status:
              type: string
              enum:
                - pending
                - calculated
                - error
            error_messages:
              type: array
              items:
                type: string
    ScorecardMembershipDeAssign:
      allOf:
        - required:
            - scorecard_id
            - parent_type
            - parent_ids
          properties:
            parent_ids:
              type: array
              items:
                type: integer
            parent_type:
              type: string
              enum:
                - Building
                - Building::Unit
                - Facility
            scorecard_id:
              type: number
    ScorecardMembershipCreate:
      allOf:
        - required:
            - scorecard_id
            - parent_type
            - parent_ids
          properties:
            parent_ids:
              type: array
              items:
                type: integer
            parent_type:
              type: string
              enum:
                - Building
                - Building::Unit
                - Facility
            scorecard_id:
              type: number
            attribute_values:
              type: object
              example: >-
                This is only used for manual entries ex: {'id_of_the_building':
                {'id_of_the_subtopic': 'value'}}
    RefreshByScorecard:
      allOf:
        - required:
            - scorecard_id
            - parent_id
            - parent_type
            - attribute_values
          properties:
            parent_id:
              type: integer
            parent_type:
              type: string
              enum:
                - Building
                - Building::Unit
                - Facility
            scorecard_ids:
              type: array
              items:
                type: integer
            attribute_values:
              type: object
              example: >-
                This is only used for manual entries ex: {'id_of_the_building':
                {'id_of_the_subtopic': 'value'}}
    RefreshByParent:
      allOf:
        - required:
            - parent_id
            - parent_type
            - attribute_values
          properties:
            parent_id:
              type: integer
            parent_type:
              type: string
              enum:
                - Building
                - Building::Unit
                - Facility
            attribute_values:
              type: object
              example: >-
                This is only used for manual entries ex: {'id_of_the_building':
                {'id_of_the_subtopic': 'value'}}
    ScorecardMembershipCostResponse:
      allOf:
        - required:
            - name
            - realcube_price
            - parent_id
            - parent_type
            - scorecard_id
            - scorecard_name
            - segment_id
            - segment_name
            - topic_id
            - topic_name
            - subtopic_id
            - subtopic_name
            - data_catalog_id
            - technical_key
          properties:
            name:
              type: string
            realcube_price:
              type: integer
            parent_type:
              type: string
            parent_id:
              type: integer
            scorecard_id:
              type: integer
            scorecard_name:
              type: string
            segment_id:
              type: integer
            segment_name:
              type: string
            topic_id:
              type: integer
            topic_name:
              type: string
    CountBuildingsResponse:
      allOf:
        - required:
            - scorecard_id
            - nr_of_buildings
          properties:
            scorecard_id:
              type: integer
            nr_of_buildings:
              type: integer
    ScorecardAssigner:
      type: object
    ScorecardAssignersIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/ScorecardAssigner'
        - required:
            - assigner
            - scorecard
          properties:
            scorecard:
              $ref: '#/components/schemas/ScorecardShow'
            assigner:
              $ref: '#/components/schemas/User'
            user:
              $ref: '#/components/schemas/User'
            last_editor:
              $ref: '#/components/schemas/User'
    ScorecardAssignersShow:
      allOf:
        - $ref: '#/components/schemas/ScorecardAssigner'
        - required:
            - assigner
            - scorecard
          properties:
            scorecard:
              $ref: '#/components/schemas/Scorecard'
            assigner:
              $ref: '#/components/schemas/User'
            user:
              $ref: '#/components/schemas/User'
            last_editor:
              $ref: '#/components/schemas/User'
    ScorecardAssignerCreate:
      allOf:
        - required:
            - assigner_id
            - scorecard_id
          properties:
            assigner_ids:
              type: array
              items:
                type: integer
            scorecard_id:
              type: number
    DataCatalog:
      type: object
      properties:
        description:
          type: string
        technical_key:
          type: string
        name:
          type: string
        sku:
          type: string
        source:
          type: string
        country:
          type: string
        locale:
          type: string
        quality_indicator:
          type: string
          enum:
            - fact
            - predicted
            - estimated
        category_l1:
          type: string
        category_l2:
          type: string
        category_l3:
          type: string
        category_l4:
          type: string
        category_l5:
          type: string
        realcube_price:
          type: integer
        realcube_currency:
          type: string
        realcube_price_category:
          type: string
        data_lifetime:
          type: integer
        attribute_type:
          type: string
          enum:
            - numeric
            - fixed
            - boolean
            - date
            - string
        unit:
          type: string
    data_catalogsShow:
      allOf:
        - $ref: '#/components/schemas/DataCatalog'
        - required:
            - app_id
            - source
            - country
            - locale
            - quality_indicator
            - category_l1
            - realcube_price
          properties:
            user:
              $ref: '#/components/schemas/UserIndex'
            last_editor:
              $ref: '#/components/schemas/UserIndex'
            app:
              $ref: '#/components/schemas/App'
    DataCatalogCreate:
      allOf:
        - $ref: '#/components/schemas/DataCatalog'
        - required:
            - technical_key
            - app_id
            - source
            - country
            - locale
            - quality_indicator
            - category_l1
            - realcube_price
          properties:
            app_id:
              type: integer
    DataCatalogIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/DataCatalog'
        - required:
            - app_id
          properties:
            user_id:
              type: integer
            last_editor_id:
              type: integer
            app_id:
              type: integer
    RawDataCatalog:
      type: object
      properties:
        version:
          type: integer
        status:
          type: string
          enum:
            - applied
            - new
        raw_data:
          type: object
    RawDataCatalogsShow:
      allOf:
        - $ref: '#/components/schemas/RawDataCatalog'
        - required:
            - app_id
            - version
          properties:
            user:
              $ref: '#/components/schemas/User'
            last_editor:
              $ref: '#/components/schemas/User'
            app:
              $ref: '#/components/schemas/App'
    RawDataCatalogIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/RawDataCatalog'
        - required:
            - app_id
            - version
          properties:
            user:
              $ref: '#/components/schemas/User'
            last_editor:
              $ref: '#/components/schemas/User'
            app:
              $ref: '#/components/schemas/App'
    RentIncreaseType:
      type: object
      properties:
        description:
          type: string
        name:
          type: string
        category:
          type: integer
    RentIncreaseTypeIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/RentIncreaseType'
        - properties:
            deleted_at:
              type: string
              format: date-time
            user:
              $ref: '#/components/schemas/User'
            last_editor:
              $ref: '#/components/schemas/User'
            rent_increase_type:
              $ref: '#/components/schemas/RentIncreaseType'
    RentIncreaseIndices:
      type: object
      properties:
        value:
          type: integer
        date:
          type: string
          format: date
        rent_increase_type_id:
          type: string
        subtype:
          type: string
          enum:
            - residential
            - office
            - commercial
    RentIncreaseIndicesIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/RentIncreaseIndices'
        - properties:
            deleted_at:
              type: string
              format: date-time
            rent_increase_type:
              $ref: '#/components/schemas/RentIncreaseType'
    RentIncreaseMapping:
      type: object
      properties:
        values:
          type: object
        apply_automatically:
          type: boolean
        contract_id:
          type: integer
        rent_increase_type_id:
          type: integer
        user_id:
          type: integer
        last_editor_id:
          type: integer
    RentIncreaseMappingShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/RentIncreaseMapping'
        - required:
            - rent_increase_type
          properties:
            rent_increase_type:
              type: object
    RentIncreaseMappingIndex:
      allOf:
        - $ref: '#/components/schemas/RentIncreaseMapping'
        - properties:
            rent_increase_type:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
    TaskMembership:
      type: object
      properties:
        task_id:
          type: integer
        place_id:
          type: integer
        organisation_id:
          type: integer
        place_type:
          type: string
          enum:
            - Building
            - Building::Unit
    TaskMembershipShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/TaskMembership'
        - properties:
            organisation_id:
              type: integer
            attachments:
              type: array
              items:
                $ref: '#/components/schemas/Attachment'
    TaskMembershipIndex:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/TaskMembershipShow'
        - properties:
            organisation_id:
              type: integer
            place_name:
              type: string
            place_parent_id:
              type: integer
    RentIncrease:
      type: object
      properties:
        start_date:
          type: string
          format: date-time
        value:
          type: integer
        recurring_increase_year:
          type: integer
        recurring_increase_month:
          type: integer
        recurring:
          type: boolean
        status:
          type: integer
          enum:
            - 1
            - 2
            - 3
            - 4
            - 5
        adjustment_percentage:
          type: number
        max_increase_percentage:
          type: number
        threshold:
          type: number
        adjustment_fixed_value:
          type: number
        step_two_enabled:
          type: boolean
        step_three_enabled:
          type: boolean
        old_vpi_month:
          type: string
          format: date
        new_vpi_month:
          type: string
          format: date
        building_type:
          type: string
          enum:
            - residential
            - office
            - commercial
        automatic_adjustment:
          type: boolean
        max_number_of_adjustments:
          type: number
    RentIncreaseShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - type: object
          properties:
            start_date:
              type: string
              format: date-time
            value:
              type: integer
            recurring_increase_year:
              type: integer
            recurring_increase_month:
              type: integer
            recurring:
              type: boolean
            status:
              type: integer
              enum:
                - 1
                - 2
                - 3
                - 4
                - 5
            adjustment_percentage:
              type: number
            max_increase_percentage:
              type: number
            threshold:
              type: number
            adjustment_fixed_value:
              type: number
            step_two_enabled:
              type: boolean
            step_three_enabled:
              type: boolean
            old_vpi_month:
              type: string
              format: date
            new_vpi_month:
              type: string
              format: date
            building_type:
              type: string
              enum:
                - residential
                - office
                - commercial
            automatic_adjustment:
              type: boolean
            next_adjustment_date:
              type: string
              format: date-time
            number_of_confirmed_adjustments:
              type: number
            max_number_of_adjustments:
              type: number
            rent_increase_type:
              $ref: '#/components/schemas/RentIncreaseType'
            customer_account:
              type: object
            contract_membership:
              type: object
              properties:
                id:
                  type: integer
                created_at:
                  type: string
                  format: date-time
                updated_at:
                  type: string
                  format: date-time
                member_type:
                  type: string
                member_id:
                  type: string
                member_name:
                  type: string
                parent_id:
                  type: string
                parent_name:
                  type: string
                contract:
                  type: object
                costs:
                  type: array
                  items:
                    type: object
    RentIncreaseIndex:
      allOf:
        - required:
            - id
            - created_at
          properties:
            id:
              type: integer
            created_at:
              type: string
              format: date-time
            contract_membership_id:
              type: integer
            start_date:
              type: string
              format: date-time
            value:
              type: integer
            status:
              type: integer
              enum:
                - 1
                - 2
                - 3
                - 4
                - 5
            recurring:
              type: boolean
            recurring_increase_month:
              type: integer
            recurring_increase_year:
              type: integer
            customer_account_id:
              type: integer
            contract_membership_member_type:
              type: string
            contract_membership_member_id:
              type: integer
            contract_membership_member_name:
              type: string
            person_name:
              type: string
            contract_start_date:
              type: string
              format: date-time
            contract_membership_cost_amount:
              type: integer
            rent_increase_type_category:
              type: string
            rent_increase_type_name:
              type: string
            rent_increase_type_id:
              type: integer
            old_vpi_month:
              type: string
              format: date
            new_vpi_month:
              type: string
              format: date
            automatic_adjustment:
              type: boolean
            adjustment_percentage:
              type: number
            max_increase_percentage:
              type: number
            threshold:
              type: number
            adjustment_fixed_value:
              type: number
            next_adjustment_date:
              type: string
              format: date-time
            building_type:
              type: string
              enum:
                - residential
                - office
                - commercial
            number_of_confirmed_adjustments:
              type: number
            max_number_of_adjustments:
              type: number
    RentIncreaseCreate:
      allOf:
        - $ref: '#/components/schemas/RentIncrease'
        - properties:
            rent_increase_type_id:
              type: integer
            contract_membership_id:
              type: integer
    EmissionFactorSetting:
      type: object
      properties:
        value:
          type: number
    EmissionFactorSettingShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/EmissionFactorSetting'
        - type: object
          required:
            - value
            - label
            - customer_account
          properties:
            customer_account:
              $ref: '#/components/schemas/CustomerAccount'
            label:
              $ref: '#/components/schemas/CustomerAccountCategoryShow'
    EmissionFactorSettingCreate:
      allOf:
        - $ref: '#/components/schemas/EmissionFactorSetting'
        - required:
            - value
            - customer_account_id
            - label_id
          properties:
            label_id:
              type: integer
    EmissionFactorSettingUpdate:
      allOf:
        - type: array
          items:
            type: object
            properties:
              label_id:
                type: number
              value:
                type: number
    CustomerAccountCategoryConfig:
      type: object
      properties:
        display:
          type: boolean
    CustomerAccountCategoryConfigShow:
      allOf:
        - $ref: '#/components/schemas/PersistedRecord'
        - $ref: '#/components/schemas/CustomerAccountCategoryConfig'
        - required:
            - label_id
            - customer_account_translations
          properties:
            customer_account_category:
              $ref: '#/components/schemas/CustomerAccountCategory'
            customer_account:
              $ref: '#/components/schemas/CustomerAccount'
    CustomerAccountCategoryConfigCreate:
      allOf:
        - $ref: '#/components/schemas/CustomerAccountCategoryConfig'
        - properties:
            customer_account_category_id:
              type: integer
    SignInError:
      properties:
        title:
          type: string
          example: Invalid email password combination
        source:
          type: string
          example: password
    AuthenticationError:
      properties:
        title:
          type: string
          example: Invalid or missing api key
        source:
          type: string
          example: X-Api-Key
    AuthorizationError:
      properties:
        title:
          type: string
          example: Invalid or missing authorization
        source:
          type: string
          example: X-Api-Key
    UnprocessableRequestError:
      properties:
        title:
          type: string
          example: could not be deleted
        source:
          type: string
          example: record
    NotFoundError:
      properties:
        title:
          type: string
          example: Couldn't find Resource with 'id'=12
        source:
          type: string
          example: id
    InternalServerError:
      properties:
        title:
          type: string
          example: We're sorry, but something went wrong
        source:
          type: string
          example: application
    ServiceUnavailableError:
      properties:
        title:
          type: string
          example: Service Temporarily Unavailable
        source:
          type: string
          example: application
    PersistedRecord:
      type: object
      properties:
        id:
          type: integer
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - updated_at
        - created_at
    PlatformconfigsShowAllConfigsResponse:
      type: object
      properties: {}
      example: {}
    PlatformconfigsShowAllConfigs401Response:
      type: object
      properties: {}
      example: {}
    PlatformconfigsShowAllConfigs403Response:
      type: object
      properties: {}
      example: {}
    PlatformconfigsShowAllConfigs404Response:
      type: object
      properties: {}
      example: {}
    PlatformconfigsShowAllConfigs422Response:
      type: object
      properties: {}
      example: {}
    PlatformconfigsShowAllConfigs500Response:
      type: object
      properties: {}
      example: {}
    PlatformconfigsCreateNewConfigResponse:
      type: object
      properties: {}
      example: {}
    PlatformconfigsCreateNewConfig401Response:
      type: object
      properties: {}
      example: {}
    PlatformconfigsCreateNewConfig403Response:
      type: object
      properties: {}
      example: {}
    PlatformconfigsCreateNewConfig422Response:
      type: object
      properties: {}
      example: {}
    PlatformconfigsCreateNewConfig500Response:
      type: object
      properties: {}
      example: {}
    PlatformconfigsMarkAsDeletedResponse:
      type: object
      properties: {}
      example: {}
    PlatformconfigsMarkAsDeleted401Response:
      type: object
      properties: {}
      example: {}
    PlatformconfigsMarkAsDeleted403Response:
      type: object
      properties: {}
      example: {}
    PlatformconfigsMarkAsDeleted404Response:
      type: object
      properties: {}
      example: {}
    PlatformconfigsMarkAsDeleted422Response:
      type: object
      properties: {}
      example: {}
    PlatformconfigsMarkAsDeleted500Response:
      type: object
      properties: {}
      example: {}
    PlatformconfigsUpdateWithinOrganisationResponse:
      type: object
      properties: {}
      example: {}
    PlatformconfigsUpdateWithinOrganisation401Response:
      type: object
      properties: {}
      example: {}
    PlatformconfigsUpdateWithinOrganisation403Response:
      type: object
      properties: {}
      example: {}
    PlatformconfigsUpdateWithinOrganisation404Response:
      type: object
      properties: {}
      example: {}
    PlatformconfigsUpdateWithinOrganisation422Response:
      type: object
      properties: {}
      example: {}
    PlatformconfigsUpdateWithinOrganisation500Response:
      type: object
      properties: {}
      example: {}
    UsersGetAllResponse:
      type: object
      properties: {}
      example: {}
    UsersGetAll401Response:
      type: object
      properties: {}
      example: {}
    UsersGetAll403Response:
      type: object
      properties: {}
      example: {}
    UsersGetAll422Response:
      type: object
      properties: {}
      example: {}
    UsersGetAll500Response:
      type: object
      properties: {}
      example: {}
    UsersCreateNewUserResponse:
      type: object
      properties: {}
      example: {}
    UsersCreateNewUser422Response:
      type: object
      properties: {}
      example: {}
    UsersCreateNewUser500Response:
      type: object
      properties: {}
      example: {}
    UsersAuthenticateUserResponse:
      type: object
      properties: {}
      example: {}
    UsersAuthenticateUser401Response:
      type: object
      properties: {}
      example: {}
    UsersAuthenticateUser422Response:
      type: object
      properties: {}
      example: {}
    UsersAuthenticateUser500Response:
      type: object
      properties: {}
      example: {}
    UsersRefreshTokenResponse:
      type: object
      properties: {}
      example: {}
    UsersRefreshToken401Response:
      type: object
      properties: {}
      example: {}
    UsersRefreshToken422Response:
      type: object
      properties: {}
      example: {}
    UsersRefreshToken500Response:
      type: object
      properties: {}
      example: {}
    UsersDeleteUserResponse:
      type: object
      properties: {}
      example: {}
    UsersDeleteUser401Response:
      type: object
      properties: {}
      example: {}
    UsersDeleteUser403Response:
      type: object
      properties: {}
      example: {}
    UsersDeleteUser404Response:
      type: object
      properties: {}
      example: {}
    UsersDeleteUser422Response:
      type: object
      properties: {}
      example: {}
    UsersDeleteUser500Response:
      type: object
      properties: {}
      example: {}
    UsersUpdateUserResponse:
      type: object
      properties: {}
      example: {}
    UsersUpdateUser401Response:
      type: object
      properties: {}
      example: {}
    UsersUpdateUser403Response:
      type: object
      properties: {}
      example: {}
    UsersUpdateUser404Response:
      type: object
      properties: {}
      example: {}
    UsersUpdateUser422Response:
      type: object
      properties: {}
      example: {}
    UsersUpdateUser500Response:
      type: object
      properties: {}
      example: {}
    UsersInvalidateApiTokenResponse:
      type: object
      properties: {}
      example: {}
    UsersInvalidateApiToken401Response:
      type: object
      properties: {}
      example: {}
    UsersInvalidateApiToken422Response:
      type: object
      properties: {}
      example: {}
    UsersInvalidateApiToken500Response:
      type: object
      properties: {}
      example: {}
    UsersSendResetInstructionsResponse:
      type: object
      properties: {}
      example: {}
    UsersSendResetInstructions404Response:
      type: object
      properties: {}
      example: {}
    UsersSendResetInstructions500Response:
      type: object
      properties: {}
      example: {}
    UsersSendInvitationResponse:
      type: object
      properties: {}
      example: {}
    UsersSendInvitation404Response:
      type: object
      properties: {}
      example: {}
    UsersSendInvitation500Response:
      type: object
      properties: {}
      example: {}
    RolesGetAllRolesResponse:
      type: object
      properties: {}
      example: {}
    RolesGetAllRoles401Response:
      type: object
      properties: {}
      example: {}
    RolesGetAllRoles403Response:
      type: object
      properties: {}
      example: {}
    RolesGetAllRoles422Response:
      type: object
      properties: {}
      example: {}
    RolesGetAllRoles500Response:
      type: object
      properties: {}
      example: {}
    RolesCreateRoleResponse:
      type: object
      properties: {}
      example: {}
    RolesCreateRole401Response:
      type: object
      properties: {}
      example: {}
    RolesCreateRole403Response:
      type: object
      properties: {}
      example: {}
    RolesCreateRole422Response:
      type: object
      properties: {}
      example: {}
    RolesCreateRole500Response:
      type: object
      properties: {}
      example: {}
    RolesRemoveRoleResponse:
      type: object
      properties: {}
      example: {}
    RolesRemoveRole401Response:
      type: object
      properties: {}
      example: {}
    RolesRemoveRole403Response:
      type: object
      properties: {}
      example: {}
    RolesRemoveRole404Response:
      type: object
      properties: {}
      example: {}
    RolesRemoveRole422Response:
      type: object
      properties: {}
      example: {}
    RolesRemoveRole500Response:
      type: object
      properties: {}
      example: {}
    RolesShowRoleResponse:
      type: object
      properties: {}
      example: {}
    RolesShowRole401Response:
      type: object
      properties: {}
      example: {}
    RolesShowRole403Response:
      type: object
      properties: {}
      example: {}
    RolesShowRole404Response:
      type: object
      properties: {}
      example: {}
    RolesShowRole422Response:
      type: object
      properties: {}
      example: {}
    RolesShowRole500Response:
      type: object
      properties: {}
      example: {}
    RolesUpdateRoleResponse:
      type: object
      properties: {}
      example: {}
    RolesUpdateRole401Response:
      type: object
      properties: {}
      example: {}
    RolesUpdateRole403Response:
      type: object
      properties: {}
      example: {}
    RolesUpdateRole422Response:
      type: object
      properties: {}
      example: {}
    RolesUpdateRole500Response:
      type: object
      properties: {}
      example: {}
    RolepoliciesGetAllResponse:
      type: object
      properties: {}
      example: {}
    RolepoliciesGetAll401Response:
      type: object
      properties: {}
      example: {}
    RolepoliciesGetAll403Response:
      type: object
      properties: {}
      example: {}
    RolepoliciesGetAll422Response:
      type: object
      properties: {}
      example: {}
    RolepoliciesGetAll500Response:
      type: object
      properties: {}
      example: {}
    RolepoliciesCreatePolicyResponse:
      type: object
      properties: {}
      example: {}
    RolepoliciesCreatePolicy401Response:
      type: object
      properties: {}
      example: {}
    RolepoliciesCreatePolicy403Response:
      type: object
      properties: {}
      example: {}
    RolepoliciesCreatePolicy422Response:
      type: object
      properties: {}
      example: {}
    RolepoliciesCreatePolicy500Response:
      type: object
      properties: {}
      example: {}
    RolepoliciesDeletePolicyResponse:
      type: object
      properties: {}
      example: {}
    RolepoliciesDeletePolicy401Response:
      type: object
      properties: {}
      example: {}
    RolepoliciesDeletePolicy403Response:
      type: object
      properties: {}
      example: {}
    RolepoliciesDeletePolicy404Response:
      type: object
      properties: {}
      example: {}
    RolepoliciesDeletePolicy422Response:
      type: object
      properties: {}
      example: {}
    RolepoliciesDeletePolicy500Response:
      type: object
      properties: {}
      example: {}
    RolepoliciesShowRolePolicyResponse:
      type: object
      properties: {}
      example: {}
    RolepoliciesShowRolePolicy401Response:
      type: object
      properties: {}
      example: {}
    RolepoliciesShowRolePolicy403Response:
      type: object
      properties: {}
      example: {}
    RolepoliciesShowRolePolicy404Response:
      type: object
      properties: {}
      example: {}
    RolepoliciesShowRolePolicy422Response:
      type: object
      properties: {}
      example: {}
    RolepoliciesShowRolePolicy500Response:
      type: object
      properties: {}
      example: {}
    RolepoliciesUpdatePolicyResponse:
      type: object
      properties: {}
      example: {}
    RolepoliciesUpdatePolicy401Response:
      type: object
      properties: {}
      example: {}
    RolepoliciesUpdatePolicy403Response:
      type: object
      properties: {}
      example: {}
    RolepoliciesUpdatePolicy422Response:
      type: object
      properties: {}
      example: {}
    RolepoliciesUpdatePolicy500Response:
      type: object
      properties: {}
      example: {}
    TenantsListForBoardingTypeResponse:
      type: object
      properties: {}
      example: {}
    TenantsListForBoardingType401Response:
      type: object
      properties: {}
      example: {}
    TenantsListForBoardingType403Response:
      type: object
      properties: {}
      example: {}
    TenantsListForBoardingType404Response:
      type: object
      properties: {}
      example: {}
    TenantsListForBoardingType422Response:
      type: object
      properties: {}
      example: {}
    TenantsListForBoardingType500Response:
      type: object
      properties: {}
      example: {}
    CustomeraccounttranslationsGetAllTranslationsResponse:
      type: object
      properties: {}
      example: {}
    CustomeraccounttranslationsGetAllTranslations401Response:
      type: object
      properties: {}
      example: {}
    CustomeraccounttranslationsGetAllTranslations403Response:
      type: object
      properties: {}
      example: {}
    CustomeraccounttranslationsGetAllTranslations422Response:
      type: object
      properties: {}
      example: {}
    CustomeraccounttranslationsGetAllTranslations500Response:
      type: object
      properties: {}
      example: {}
    CustomeraccounttranslationsCreateTranslationResponse:
      type: object
      properties: {}
      example: {}
    CustomeraccounttranslationsCreateTranslation401Response:
      type: object
      properties: {}
      example: {}
    CustomeraccounttranslationsCreateTranslation403Response:
      type: object
      properties: {}
      example: {}
    CustomeraccounttranslationsCreateTranslation422Response:
      type: object
      properties: {}
      example: {}
    CustomeraccounttranslationsCreateTranslation500Response:
      type: object
      properties: {}
      example: {}
    CustomeraccounttranslationsDeleteTranslationResponse:
      type: object
      properties: {}
      example: {}
    CustomeraccounttranslationsDeleteTranslation401Response:
      type: object
      properties: {}
      example: {}
    CustomeraccounttranslationsDeleteTranslation403Response:
      type: object
      properties: {}
      example: {}
    CustomeraccounttranslationsDeleteTranslation404Response:
      type: object
      properties: {}
      example: {}
    CustomeraccounttranslationsDeleteTranslation422Response:
      type: object
      properties: {}
      example: {}
    CustomeraccounttranslationsDeleteTranslation500Response:
      type: object
      properties: {}
      example: {}
    CustomeraccounttranslationsShowTranslationResponse:
      type: object
      properties: {}
      example: {}
    CustomeraccounttranslationsShowTranslation401Response:
      type: object
      properties: {}
      example: {}
    CustomeraccounttranslationsShowTranslation403Response:
      type: object
      properties: {}
      example: {}
    CustomeraccounttranslationsShowTranslation404Response:
      type: object
      properties: {}
      example: {}
    CustomeraccounttranslationsShowTranslation422Response:
      type: object
      properties: {}
      example: {}
    CustomeraccounttranslationsShowTranslation500Response:
      type: object
      properties: {}
      example: {}
    CustomeraccounttranslationsUpdateTranslationResponse:
      type: object
      properties: {}
      example: {}
    CustomeraccounttranslationsUpdateTranslation401Response:
      type: object
      properties: {}
      example: {}
    CustomeraccounttranslationsUpdateTranslation403Response:
      type: object
      properties: {}
      example: {}
    CustomeraccounttranslationsUpdateTranslation404Response:
      type: object
      properties: {}
      example: {}
    CustomeraccounttranslationsUpdateTranslation422Response:
      type: object
      properties: {}
      example: {}
    CustomeraccounttranslationsUpdateTranslation500Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountattributegroupsGetAllTranslationsResponse:
      type: object
      properties: {}
      example: {}
    CustomeraccountattributegroupsGetAllTranslations401Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountattributegroupsGetAllTranslations403Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountattributegroupsGetAllTranslations422Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountattributegroupsGetAllTranslations500Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountattributegroupsCreateGroupResponse:
      type: object
      properties: {}
      example: {}
    CustomeraccountattributegroupsCreateGroup401Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountattributegroupsCreateGroup403Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountattributegroupsCreateGroup422Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountattributegroupsCreateGroup500Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountattributegroupsDeleteGroupResponse:
      type: object
      properties: {}
      example: {}
    CustomeraccountattributegroupsDeleteGroup401Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountattributegroupsDeleteGroup403Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountattributegroupsDeleteGroup404Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountattributegroupsDeleteGroup422Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountattributegroupsDeleteGroup500Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountattributegroupsShowGroupResponse:
      type: object
      properties: {}
      example: {}
    CustomeraccountattributegroupsShowGroup401Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountattributegroupsShowGroup403Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountattributegroupsShowGroup404Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountattributegroupsShowGroup422Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountattributegroupsShowGroup500Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountattributegroupsUpdateResponse:
      type: object
      properties: {}
      example: {}
    CustomeraccountattributegroupsUpdate401Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountattributegroupsUpdate403Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountattributegroupsUpdate404Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountattributegroupsUpdate422Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountattributegroupsUpdate500Response:
      type: object
      properties: {}
      example: {}
    EpcodecombinationsGetAllResponse:
      type: object
      properties: {}
      example: {}
    EpcodecombinationsGetAll401Response:
      type: object
      properties: {}
      example: {}
    EpcodecombinationsGetAll403Response:
      type: object
      properties: {}
      example: {}
    EpcodecombinationsGetAll422Response:
      type: object
      properties: {}
      example: {}
    EpcodecombinationsGetAll500Response:
      type: object
      properties: {}
      example: {}
    CredentialsGetUserByOAuthResponse:
      type: object
      properties: {}
      example: {}
    CredentialsGetUserByOAuth401Response:
      type: object
      properties: {}
      example: {}
    CredentialsGetUserByOAuth403Response:
      type: object
      properties: {}
      example: {}
    CredentialsGetUserByOAuth422Response:
      type: object
      properties: {}
      example: {}
    CredentialsGetUserByOAuth500Response:
      type: object
      properties: {}
      example: {}
    CredentialsReturnTokenResponse:
      type: object
      properties: {}
      example: {}
    CredentialsReturnToken401Response:
      type: object
      properties: {}
      example: {}
    CredentialsReturnToken403Response:
      type: object
      properties: {}
      example: {}
    CredentialsReturnToken422Response:
      type: object
      properties: {}
      example: {}
    CredentialsReturnToken500Response:
      type: object
      properties: {}
      example: {}
    DashboardconfigsCreateNewConfigResponse:
      type: object
      properties: {}
      example: {}
    DashboardconfigsCreateNewConfig401Response:
      type: object
      properties: {}
      example: {}
    DashboardconfigsCreateNewConfig403Response:
      type: object
      properties: {}
      example: {}
    DashboardconfigsCreateNewConfig422Response:
      type: object
      properties: {}
      example: {}
    DashboardconfigsCreateNewConfig500Response:
      type: object
      properties: {}
      example: {}
    DashboardconfigsMarkAsDeletedResponse:
      type: object
      properties: {}
      example: {}
    DashboardconfigsMarkAsDeleted401Response:
      type: object
      properties: {}
      example: {}
    DashboardconfigsMarkAsDeleted403Response:
      type: object
      properties: {}
      example: {}
    DashboardconfigsMarkAsDeleted404Response:
      type: object
      properties: {}
      example: {}
    DashboardconfigsMarkAsDeleted422Response:
      type: object
      properties: {}
      example: {}
    DashboardconfigsMarkAsDeleted500Response:
      type: object
      properties: {}
      example: {}
    DashboardconfigsShowResponse:
      type: object
      properties: {}
      example: {}
    DashboardconfigsShow401Response:
      type: object
      properties: {}
      example: {}
    DashboardconfigsShow403Response:
      type: object
      properties: {}
      example: {}
    DashboardconfigsShow404Response:
      type: object
      properties: {}
      example: {}
    DashboardconfigsShow422Response:
      type: object
      properties: {}
      example: {}
    DashboardconfigsShow500Response:
      type: object
      properties: {}
      example: {}
    DashboardconfigsUpdateWithinOrganisationResponse:
      type: object
      properties: {}
      example: {}
    DashboardconfigsUpdateWithinOrganisation401Response:
      type: object
      properties: {}
      example: {}
    DashboardconfigsUpdateWithinOrganisation403Response:
      type: object
      properties: {}
      example: {}
    DashboardconfigsUpdateWithinOrganisation404Response:
      type: object
      properties: {}
      example: {}
    DashboardconfigsUpdateWithinOrganisation422Response:
      type: object
      properties: {}
      example: {}
    DashboardconfigsUpdateWithinOrganisation500Response:
      type: object
      properties: {}
      example: {}
    DashboardsGetCustomerAccountResponse:
      type: object
      properties: {}
      example: {}
    DashboardsGetCustomerAccount401Response:
      type: object
      properties: {}
      example: {}
    DashboardsGetCustomerAccount500Response:
      type: object
      properties: {}
      example: {}
    DashboardsShowDashboardResponse:
      type: object
      properties: {}
      example: {}
    DashboardsShowDashboard401Response:
      type: object
      properties: {}
      example: {}
    DashboardsShowDashboard403Response:
      type: object
      properties: {}
      example: {}
    DashboardsShowDashboard422Response:
      type: object
      properties: {}
      example: {}
    DashboardsShowDashboard500Response:
      type: object
      properties: {}
      example: {}
    DashboardsUpdateDashboardResponse:
      type: object
      properties: {}
      example: {}
    DashboardsUpdateDashboard401Response:
      type: object
      properties: {}
      example: {}
    DashboardsUpdateDashboard403Response:
      type: object
      properties: {}
      example: {}
    DashboardsUpdateDashboard422Response:
      type: object
      properties: {}
      example: {}
    DashboardsUpdateDashboard500Response:
      type: object
      properties: {}
      example: {}
    DashboardsSynchroniseResponse:
      type: object
      properties: {}
      example: {}
    DashboardsSynchronise403Response:
      type: object
      properties: {}
      example: {}
    DashboardsSynchronise404Response:
      type: object
      properties: {}
      example: {}
    DashboardsSynchronise422Response:
      type: object
      properties: {}
      example: {}
    DashboardsSynchronise500Response:
      type: object
      properties: {}
      example: {}
    DashboardsExpireSessionsResponse:
      type: object
      properties: {}
      example: {}
    DashboardsExpireSessions403Response:
      type: object
      properties: {}
      example: {}
    DashboardsExpireSessions404Response:
      type: object
      properties: {}
      example: {}
    DashboardsExpireSessions422Response:
      type: object
      properties: {}
      example: {}
    DashboardsExpireSessions500Response:
      type: object
      properties: {}
      example: {}
    DashboardsCopyOnFolderResponse:
      type: object
      properties: {}
      example: {}
    DashboardsCopyOnFolder401Response:
      type: object
      properties: {}
      example: {}
    DashboardsCopyOnFolder403Response:
      type: object
      properties: {}
      example: {}
    DashboardsCopyOnFolder422Response:
      type: object
      properties: {}
      example: {}
    DashboardsCopyOnFolder500Response:
      type: object
      properties: {}
      example: {}
    DashboardsOrderDashboardsResponse:
      type: object
      properties: {}
      example: {}
    DashboardsOrderDashboards401Response:
      type: object
      properties: {}
      example: {}
    DashboardsOrderDashboards403Response:
      type: object
      properties: {}
      example: {}
    DashboardsOrderDashboards404Response:
      type: object
      properties: {}
      example: {}
    DashboardsOrderDashboards422Response:
      type: object
      properties: {}
      example: {}
    DashboardsOrderDashboards500Response:
      type: object
      properties: {}
      example: {}
    DashboardsReturnCustomerAccountExploreWithUrlResponse:
      type: object
      properties: {}
      example: {}
    DashboardsReturnCustomerAccountExploreWithUrl401Response:
      type: object
      properties: {}
      example: {}
    DashboardsReturnCustomerAccountExploreWithUrl500Response:
      type: object
      properties: {}
      example: {}
    AppsGetAllAppsResponse:
      type: object
      properties: {}
      example: {}
    AppsGetAllApps401Response:
      type: object
      properties: {}
      example: {}
    AppsGetAllApps403Response:
      type: object
      properties: {}
      example: {}
    AppsGetAllApps422Response:
      type: object
      properties: {}
      example: {}
    AppsGetAllApps500Response:
      type: object
      properties: {}
      example: {}
    AppsCreateAppResponse:
      type: object
      properties: {}
      example: {}
    AppsCreateApp401Response:
      type: object
      properties: {}
      example: {}
    AppsCreateApp403Response:
      type: object
      properties: {}
      example: {}
    AppsCreateApp422Response:
      type: object
      properties: {}
      example: {}
    AppsCreateApp500Response:
      type: object
      properties: {}
      example: {}
    AppsDeleteAppResponse:
      type: object
      properties: {}
      example: {}
    AppsDeleteApp401Response:
      type: object
      properties: {}
      example: {}
    AppsDeleteApp403Response:
      type: object
      properties: {}
      example: {}
    AppsDeleteApp404Response:
      type: object
      properties: {}
      example: {}
    AppsDeleteApp422Response:
      type: object
      properties: {}
      example: {}
    AppsDeleteApp500Response:
      type: object
      properties: {}
      example: {}
    AppsShowAppResponse:
      type: object
      properties: {}
      example: {}
    AppsShowApp401Response:
      type: object
      properties: {}
      example: {}
    AppsShowApp403Response:
      type: object
      properties: {}
      example: {}
    AppsShowApp404Response:
      type: object
      properties: {}
      example: {}
    AppsShowApp422Response:
      type: object
      properties: {}
      example: {}
    AppsShowApp500Response:
      type: object
      properties: {}
      example: {}
    AppsUpdateAppResponse:
      type: object
      properties: {}
      example: {}
    AppsUpdateApp401Response:
      type: object
      properties: {}
      example: {}
    AppsUpdateApp403Response:
      type: object
      properties: {}
      example: {}
    AppsUpdateApp422Response:
      type: object
      properties: {}
      example: {}
    AppsUpdateApp500Response:
      type: object
      properties: {}
      example: {}
    AppcategoriesGetAllCategoriesResponse:
      type: object
      properties: {}
      example: {}
    AppcategoriesGetAllCategories401Response:
      type: object
      properties: {}
      example: {}
    AppcategoriesGetAllCategories403Response:
      type: object
      properties: {}
      example: {}
    AppcategoriesGetAllCategories422Response:
      type: object
      properties: {}
      example: {}
    AppcategoriesGetAllCategories500Response:
      type: object
      properties: {}
      example: {}
    AppsubscriptionsGetAllSubsResponse:
      type: object
      properties: {}
      example: {}
    AppsubscriptionsGetAllSubs401Response:
      type: object
      properties: {}
      example: {}
    AppsubscriptionsGetAllSubs403Response:
      type: object
      properties: {}
      example: {}
    AppsubscriptionsGetAllSubs422Response:
      type: object
      properties: {}
      example: {}
    AppsubscriptionsGetAllSubs500Response:
      type: object
      properties: {}
      example: {}
    AppsubscriptionsCreateSubscriptionResponse:
      type: object
      properties: {}
      example: {}
    AppsubscriptionsCreateSubscription401Response:
      type: object
      properties: {}
      example: {}
    AppsubscriptionsCreateSubscription403Response:
      type: object
      properties: {}
      example: {}
    AppsubscriptionsCreateSubscription422Response:
      type: object
      properties: {}
      example: {}
    AppsubscriptionsCreateSubscription500Response:
      type: object
      properties: {}
      example: {}
    AppsubscriptionsDeleteSubscriptionResponse:
      type: object
      properties: {}
      example: {}
    AppsubscriptionsDeleteSubscription401Response:
      type: object
      properties: {}
      example: {}
    AppsubscriptionsDeleteSubscription403Response:
      type: object
      properties: {}
      example: {}
    AppsubscriptionsDeleteSubscription404Response:
      type: object
      properties: {}
      example: {}
    AppsubscriptionsDeleteSubscription422Response:
      type: object
      properties: {}
      example: {}
    AppsubscriptionsDeleteSubscription500Response:
      type: object
      properties: {}
      example: {}
    AppsubscriptionsShowSubscriptionResponse:
      type: object
      properties: {}
      example: {}
    AppsubscriptionsShowSubscription401Response:
      type: object
      properties: {}
      example: {}
    AppsubscriptionsShowSubscription403Response:
      type: object
      properties: {}
      example: {}
    AppsubscriptionsShowSubscription404Response:
      type: object
      properties: {}
      example: {}
    AppsubscriptionsShowSubscription422Response:
      type: object
      properties: {}
      example: {}
    AppsubscriptionsShowSubscription500Response:
      type: object
      properties: {}
      example: {}
    AppsubscriptionsUpdateSubscriptionResponse:
      type: object
      properties: {}
      example: {}
    AppsubscriptionsUpdateSubscription401Response:
      type: object
      properties: {}
      example: {}
    AppsubscriptionsUpdateSubscription403Response:
      type: object
      properties: {}
      example: {}
    AppsubscriptionsUpdateSubscription422Response:
      type: object
      properties: {}
      example: {}
    AppsubscriptionsUpdateSubscription500Response:
      type: object
      properties: {}
      example: {}
    AppconfigsGetAllConfigsResponse:
      type: object
      properties: {}
      example: {}
    AppconfigsGetAllConfigs401Response:
      type: object
      properties: {}
      example: {}
    AppconfigsGetAllConfigs403Response:
      type: object
      properties: {}
      example: {}
    AppconfigsGetAllConfigs422Response:
      type: object
      properties: {}
      example: {}
    AppconfigsGetAllConfigs500Response:
      type: object
      properties: {}
      example: {}
    AppconfigsCreateConfigResponse:
      type: object
      properties: {}
      example: {}
    AppconfigsCreateConfig401Response:
      type: object
      properties: {}
      example: {}
    AppconfigsCreateConfig403Response:
      type: object
      properties: {}
      example: {}
    AppconfigsCreateConfig422Response:
      type: object
      properties: {}
      example: {}
    AppconfigsCreateConfig500Response:
      type: object
      properties: {}
      example: {}
    AppconfigsDeleteConfigResponse:
      type: object
      properties: {}
      example: {}
    AppconfigsDeleteConfig401Response:
      type: object
      properties: {}
      example: {}
    AppconfigsDeleteConfig403Response:
      type: object
      properties: {}
      example: {}
    AppconfigsDeleteConfig404Response:
      type: object
      properties: {}
      example: {}
    AppconfigsDeleteConfig422Response:
      type: object
      properties: {}
      example: {}
    AppconfigsDeleteConfig500Response:
      type: object
      properties: {}
      example: {}
    AppconfigsShowConfigResponse:
      type: object
      properties: {}
      example: {}
    AppconfigsShowConfig401Response:
      type: object
      properties: {}
      example: {}
    AppconfigsShowConfig403Response:
      type: object
      properties: {}
      example: {}
    AppconfigsShowConfig404Response:
      type: object
      properties: {}
      example: {}
    AppconfigsShowConfig422Response:
      type: object
      properties: {}
      example: {}
    AppconfigsShowConfig500Response:
      type: object
      properties: {}
      example: {}
    AppconfigsUpdateConfigResponse:
      type: object
      properties: {}
      example: {}
    AppconfigsUpdateConfig401Response:
      type: object
      properties: {}
      example: {}
    AppconfigsUpdateConfig403Response:
      type: object
      properties: {}
      example: {}
    AppconfigsUpdateConfig422Response:
      type: object
      properties: {}
      example: {}
    AppconfigsUpdateConfig500Response:
      type: object
      properties: {}
      example: {}
    AppsDeleteCategoryMembershipResponse:
      type: object
      properties: {}
      example: {}
    AppsDeleteCategoryMembership401Response:
      type: object
      properties: {}
      example: {}
    AppsDeleteCategoryMembership403Response:
      type: object
      properties: {}
      example: {}
    AppsDeleteCategoryMembership404Response:
      type: object
      properties: {}
      example: {}
    AppsDeleteCategoryMembership422Response:
      type: object
      properties: {}
      example: {}
    AppsDeleteCategoryMembership500Response:
      type: object
      properties: {}
      example: {}
    AppsCreateMembershipToCategoryResponse:
      type: object
      properties: {}
      example: {}
    AppsCreateMembershipToCategory401Response:
      type: object
      properties: {}
      example: {}
    AppsCreateMembershipToCategory403Response:
      type: object
      properties: {}
      example: {}
    AppsCreateMembershipToCategory422Response:
      type: object
      properties: {}
      example: {}
    AppsCreateMembershipToCategory500Response:
      type: object
      properties: {}
      example: {}
    AppdatarepositoriesGetAllDataRepositoriesResponse:
      type: object
      properties: {}
      example: {}
    AppdatarepositoriesGetAllDataRepositories401Response:
      type: object
      properties: {}
      example: {}
    AppdatarepositoriesGetAllDataRepositories403Response:
      type: object
      properties: {}
      example: {}
    AppdatarepositoriesGetAllDataRepositories422Response:
      type: object
      properties: {}
      example: {}
    AppdatarepositoriesGetAllDataRepositories500Response:
      type: object
      properties: {}
      example: {}
    AppdatarepositoriesCreateNewRepositoryResponse:
      type: object
      properties: {}
      example: {}
    AppdatarepositoriesCreateNewRepository401Response:
      type: object
      properties: {}
      example: {}
    AppdatarepositoriesCreateNewRepository403Response:
      type: object
      properties: {}
      example: {}
    AppdatarepositoriesCreateNewRepository422Response:
      type: object
      properties: {}
      example: {}
    AppdatarepositoriesCreateNewRepository500Response:
      type: object
      properties: {}
      example: {}
    AppdatarepositoriesShowRepositoryResponse:
      type: object
      properties: {}
      example: {}
    AppdatarepositoriesShowRepository401Response:
      type: object
      properties: {}
      example: {}
    AppdatarepositoriesShowRepository403Response:
      type: object
      properties: {}
      example: {}
    AppdatarepositoriesShowRepository404Response:
      type: object
      properties: {}
      example: {}
    AppdatarepositoriesShowRepository422Response:
      type: object
      properties: {}
      example: {}
    AppdatarepositoriesShowRepository500Response:
      type: object
      properties: {}
      example: {}
    AppdatarepositoriesDeleteRepositoryResponse:
      type: object
      properties: {}
      example: {}
    AppdatarepositoriesDeleteRepository401Response:
      type: object
      properties: {}
      example: {}
    AppdatarepositoriesDeleteRepository403Response:
      type: object
      properties: {}
      example: {}
    AppdatarepositoriesDeleteRepository404Response:
      type: object
      properties: {}
      example: {}
    AppdatarepositoriesDeleteRepository422Response:
      type: object
      properties: {}
      example: {}
    AppdatarepositoriesDeleteRepository500Response:
      type: object
      properties: {}
      example: {}
    AppdatarepositoriesUpdateRepositoryResponse:
      type: object
      properties: {}
      example: {}
    AppdatarepositoriesUpdateRepository401Response:
      type: object
      properties: {}
      example: {}
    AppdatarepositoriesUpdateRepository403Response:
      type: object
      properties: {}
      example: {}
    AppdatarepositoriesUpdateRepository422Response:
      type: object
      properties: {}
      example: {}
    AppdatarepositoriesUpdateRepository500Response:
      type: object
      properties: {}
      example: {}
    PlansGetAllInBuildingResponse:
      type: object
      properties: {}
      example: {}
    PlansGetAllInBuilding401Response:
      type: object
      properties: {}
      example: {}
    PlansGetAllInBuilding403Response:
      type: object
      properties: {}
      example: {}
    PlansGetAllInBuilding422Response:
      type: object
      properties: {}
      example: {}
    PlansGetAllInBuilding500Response:
      type: object
      properties: {}
      example: {}
    PlansCreateNewPlanResponse:
      type: object
      properties: {}
      example: {}
    PlansCreateNewPlan401Response:
      type: object
      properties: {}
      example: {}
    PlansCreateNewPlan403Response:
      type: object
      properties: {}
      example: {}
    PlansCreateNewPlan422Response:
      type: object
      properties: {}
      example: {}
    PlansCreateNewPlan500Response:
      type: object
      properties: {}
      example: {}
    PlansDeletePlanWithinBuildingResponse:
      type: object
      properties: {}
      example: {}
    PlansDeletePlanWithinBuilding401Response:
      type: object
      properties: {}
      example: {}
    PlansDeletePlanWithinBuilding403Response:
      type: object
      properties: {}
      example: {}
    PlansDeletePlanWithinBuilding404Response:
      type: object
      properties: {}
      example: {}
    PlansDeletePlanWithinBuilding422Response:
      type: object
      properties: {}
      example: {}
    PlansDeletePlanWithinBuilding500Response:
      type: object
      properties: {}
      example: {}
    PlansShowPlanResponse:
      type: object
      properties: {}
      example: {}
    PlansShowPlan401Response:
      type: object
      properties: {}
      example: {}
    PlansShowPlan403Response:
      type: object
      properties: {}
      example: {}
    PlansShowPlan404Response:
      type: object
      properties: {}
      example: {}
    PlansShowPlan422Response:
      type: object
      properties: {}
      example: {}
    PlansShowPlan500Response:
      type: object
      properties: {}
      example: {}
    PlansUpdatePlanResponse:
      type: object
      properties: {}
      example: {}
    PlansUpdatePlan401Response:
      type: object
      properties: {}
      example: {}
    PlansUpdatePlan403Response:
      type: object
      properties: {}
      example: {}
    PlansUpdatePlan422Response:
      type: object
      properties: {}
      example: {}
    PlansUpdatePlan500Response:
      type: object
      properties: {}
      example: {}
    PlanconfigsGetAllConfigsResponse:
      type: object
      properties: {}
      example: {}
    PlanconfigsGetAllConfigs401Response:
      type: object
      properties: {}
      example: {}
    PlanconfigsGetAllConfigs403Response:
      type: object
      properties: {}
      example: {}
    PlanconfigsGetAllConfigs422Response:
      type: object
      properties: {}
      example: {}
    PlanconfigsGetAllConfigs500Response:
      type: object
      properties: {}
      example: {}
    PlanversionsCreatePlanVersionResponse:
      type: object
      properties: {}
      example: {}
    PlanversionsCreatePlanVersion401Response:
      type: object
      properties: {}
      example: {}
    PlanversionsCreatePlanVersion403Response:
      type: object
      properties: {}
      example: {}
    PlanversionsCreatePlanVersion422Response:
      type: object
      properties: {}
      example: {}
    PlanversionsCreatePlanVersion500Response:
      type: object
      properties: {}
      example: {}
    PlanversionsDeleteWithinCurrentPlanResponse:
      type: object
      properties: {}
      example: {}
    PlanversionsDeleteWithinCurrentPlan401Response:
      type: object
      properties: {}
      example: {}
    PlanversionsDeleteWithinCurrentPlan403Response:
      type: object
      properties: {}
      example: {}
    PlanversionsDeleteWithinCurrentPlan404Response:
      type: object
      properties: {}
      example: {}
    PlanversionsDeleteWithinCurrentPlan422Response:
      type: object
      properties: {}
      example: {}
    PlanversionsDeleteWithinCurrentPlan500Response:
      type: object
      properties: {}
      example: {}
    PlanversionsUpdateVersionResponse:
      type: object
      properties: {}
      example: {}
    PlanversionsUpdateVersion401Response:
      type: object
      properties: {}
      example: {}
    PlanversionsUpdateVersion403Response:
      type: object
      properties: {}
      example: {}
    PlanversionsUpdateVersion422Response:
      type: object
      properties: {}
      example: {}
    PlanversionsUpdateVersion500Response:
      type: object
      properties: {}
      example: {}
    OrganisationsListMemberRolesResponse:
      type: object
      properties: {}
      example: {}
    OrganisationsListMemberRoles401Response:
      type: object
      properties: {}
      example: {}
    OrganisationsListMemberRoles403Response:
      type: object
      properties: {}
      example: {}
    OrganisationsListMemberRoles422Response:
      type: object
      properties: {}
      example: {}
    OrganisationsListMemberRoles500Response:
      type: object
      properties: {}
      example: {}
    OrganisationsCreateUserForCustomerResponse:
      type: object
      properties: {}
      example: {}
    OrganisationsCreateUserForCustomer401Response:
      type: object
      properties: {}
      example: {}
    OrganisationsCreateUserForCustomer403Response:
      type: object
      properties: {}
      example: {}
    OrganisationsCreateUserForCustomer422Response:
      type: object
      properties: {}
      example: {}
    OrganisationsCreateUserForCustomer500Response:
      type: object
      properties: {}
      example: {}
    OrganisationsDeleteOrganisationResponse:
      type: object
      properties: {}
      example: {}
    OrganisationsDeleteOrganisation401Response:
      type: object
      properties: {}
      example: {}
    OrganisationsDeleteOrganisation403Response:
      type: object
      properties: {}
      example: {}
    OrganisationsDeleteOrganisation404Response:
      type: object
      properties: {}
      example: {}
    OrganisationsDeleteOrganisation422Response:
      type: object
      properties: {}
      example: {}
    OrganisationsDeleteOrganisation500Response:
      type: object
      properties: {}
      example: {}
    OrganisationsUpdateOrganisationResponse:
      type: object
      properties: {}
      example: {}
    OrganisationsUpdateOrganisation401Response:
      type: object
      properties: {}
      example: {}
    OrganisationsUpdateOrganisation403Response:
      type: object
      properties: {}
      example: {}
    OrganisationsUpdateOrganisation404Response:
      type: object
      properties: {}
      example: {}
    OrganisationsUpdateOrganisation422Response:
      type: object
      properties: {}
      example: {}
    OrganisationsUpdateOrganisation500Response:
      type: object
      properties: {}
      example: {}
    OrganisationconfigsCreateConfigForUserResponse:
      type: object
      properties: {}
      example: {}
    OrganisationconfigsCreateConfigForUser401Response:
      type: object
      properties: {}
      example: {}
    OrganisationconfigsCreateConfigForUser403Response:
      type: object
      properties: {}
      example: {}
    OrganisationconfigsCreateConfigForUser422Response:
      type: object
      properties: {}
      example: {}
    OrganisationconfigsCreateConfigForUser500Response:
      type: object
      properties: {}
      example: {}
    OrganisationconfigsDeleteResponse:
      type: object
      properties: {}
      example: {}
    OrganisationconfigsDelete401Response:
      type: object
      properties: {}
      example: {}
    OrganisationconfigsDelete403Response:
      type: object
      properties: {}
      example: {}
    OrganisationconfigsDelete404Response:
      type: object
      properties: {}
      example: {}
    OrganisationconfigsDelete422Response:
      type: object
      properties: {}
      example: {}
    OrganisationconfigsDelete500Response:
      type: object
      properties: {}
      example: {}
    OrganisationconfigsGetConfigResponse:
      type: object
      properties: {}
      example: {}
    OrganisationconfigsGetConfig401Response:
      type: object
      properties: {}
      example: {}
    OrganisationconfigsGetConfig403Response:
      type: object
      properties: {}
      example: {}
    OrganisationconfigsGetConfig422Response:
      type: object
      properties: {}
      example: {}
    OrganisationconfigsGetConfig500Response:
      type: object
      properties: {}
      example: {}
    OrganisationconfigsUpdateUserConfigResponse:
      type: object
      properties: {}
      example: {}
    OrganisationconfigsUpdateUserConfig401Response:
      type: object
      properties: {}
      example: {}
    OrganisationconfigsUpdateUserConfig403Response:
      type: object
      properties: {}
      example: {}
    OrganisationconfigsUpdateUserConfig422Response:
      type: object
      properties: {}
      example: {}
    OrganisationconfigsUpdateUserConfig500Response:
      type: object
      properties: {}
      example: {}
    OrganisationmembershipsGetAllResponse:
      type: object
      properties: {}
      example: {}
    OrganisationmembershipsGetAll401Response:
      type: object
      properties: {}
      example: {}
    OrganisationmembershipsGetAll403Response:
      type: object
      properties: {}
      example: {}
    OrganisationmembershipsGetAll422Response:
      type: object
      properties: {}
      example: {}
    OrganisationmembershipsGetAll500Response:
      type: object
      properties: {}
      example: {}
    OrganisationmembershipsCreateUserMembershipResponse:
      type: object
      properties: {}
      example: {}
    OrganisationmembershipsCreateUserMembership401Response:
      type: object
      properties: {}
      example: {}
    OrganisationmembershipsCreateUserMembership403Response:
      type: object
      properties: {}
      example: {}
    OrganisationmembershipsCreateUserMembership422Response:
      type: object
      properties: {}
      example: {}
    OrganisationmembershipsCreateUserMembership500Response:
      type: object
      properties: {}
      example: {}
    OrganisationmembershipsDeleteMembershipResponse:
      type: object
      properties: {}
      example: {}
    OrganisationmembershipsDeleteMembership401Response:
      type: object
      properties: {}
      example: {}
    OrganisationmembershipsDeleteMembership403Response:
      type: object
      properties: {}
      example: {}
    OrganisationmembershipsDeleteMembership404Response:
      type: object
      properties: {}
      example: {}
    OrganisationmembershipsDeleteMembership422Response:
      type: object
      properties: {}
      example: {}
    OrganisationmembershipsDeleteMembership500Response:
      type: object
      properties: {}
      example: {}
    OrganisationmembershipsUpdateMembershipResponse:
      type: object
      properties: {}
      example: {}
    OrganisationmembershipsUpdateMembership403Response:
      type: object
      properties: {}
      example: {}
    OrganisationmembershipsUpdateMembership422Response:
      type: object
      properties: {}
      example: {}
    OrganisationmembershipsUpdateMembership500Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountsUpdateTimeAttributeSchemaResponse:
      type: object
      properties: {}
      example: {}
    CustomeraccountsUpdateTimeAttributeSchema401Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountsUpdateTimeAttributeSchema403Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountsUpdateTimeAttributeSchema404Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountsUpdateTimeAttributeSchema500Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountsGetAllUserAccountsResponse:
      type: object
      properties: {}
      example: {}
    CustomeraccountsGetAllUserAccounts401Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountsGetAllUserAccounts403Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountsGetAllUserAccounts404Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountsGetAllUserAccounts500Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountsGetCustomerAccountResponse:
      type: object
      properties: {}
      example: {}
    CustomeraccountsGetCustomerAccount401Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountsGetCustomerAccount403Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountsGetCustomerAccount404Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountsGetCustomerAccount500Response:
      type: object
      properties: {}
      example: {}
    CustomerattributesschemasGetAllResponse:
      type: object
      properties: {}
      example: {}
    CustomerattributesschemasGetAll401Response:
      type: object
      properties: {}
      example: {}
    CustomerattributesschemasGetAll403Response:
      type: object
      properties: {}
      example: {}
    CustomerattributesschemasGetAll422Response:
      type: object
      properties: {}
      example: {}
    CustomerattributesschemasGetAll500Response:
      type: object
      properties: {}
      example: {}
    CustomerattributesschemasCreateSchemaResponse:
      type: object
      properties: {}
      example: {}
    CustomerattributesschemasCreateSchema401Response:
      type: object
      properties: {}
      example: {}
    CustomerattributesschemasCreateSchema403Response:
      type: object
      properties: {}
      example: {}
    CustomerattributesschemasCreateSchema422Response:
      type: object
      properties: {}
      example: {}
    CustomerattributesschemasCreateSchema500Response:
      type: object
      properties: {}
      example: {}
    CustomerattributesschemasShowSchemaResponse:
      type: object
      properties: {}
      example: {}
    CustomerattributesschemasShowSchema401Response:
      type: object
      properties: {}
      example: {}
    CustomerattributesschemasShowSchema403Response:
      type: object
      properties: {}
      example: {}
    CustomerattributesschemasShowSchema404Response:
      type: object
      properties: {}
      example: {}
    CustomerattributesschemasShowSchema422Response:
      type: object
      properties: {}
      example: {}
    CustomerattributesschemasShowSchema500Response:
      type: object
      properties: {}
      example: {}
    CustomerattributesschemamembershipsGetAllResponse:
      type: object
      properties: {}
      example: {}
    CustomerattributesschemamembershipsGetAll401Response:
      type: object
      properties: {}
      example: {}
    CustomerattributesschemamembershipsGetAll403Response:
      type: object
      properties: {}
      example: {}
    CustomerattributesschemamembershipsGetAll422Response:
      type: object
      properties: {}
      example: {}
    CustomerattributesschemamembershipsGetAll500Response:
      type: object
      properties: {}
      example: {}
    CustomerattributesschemamembershipsCreateMembershipResponse:
      type: object
      properties: {}
      example: {}
    CustomerattributesschemamembershipsCreateMembership401Response:
      type: object
      properties: {}
      example: {}
    CustomerattributesschemamembershipsCreateMembership403Response:
      type: object
      properties: {}
      example: {}
    CustomerattributesschemamembershipsCreateMembership422Response:
      type: object
      properties: {}
      example: {}
    CustomerattributesschemamembershipsCreateMembership500Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountconfigsGetConfigurationResponse:
      type: object
      properties: {}
      example: {}
    CustomeraccountconfigsGetConfiguration401Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountconfigsGetConfiguration500Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountconfigsCreateConfigurationResponse:
      type: object
      properties: {}
      example: {}
    CustomeraccountconfigsCreateConfiguration401Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountconfigsCreateConfiguration403Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountconfigsCreateConfiguration500Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountconfigsUpdateConfigurationResponse:
      type: object
      properties: {}
      example: {}
    CustomeraccountconfigsUpdateConfiguration401Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountconfigsUpdateConfiguration403Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountconfigsUpdateConfiguration404Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountconfigsUpdateConfiguration500Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountschemasGetAllResponse:
      type: object
      properties: {}
      example: {}
    CustomeraccountschemasGetAll401Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountschemasGetAll403Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountschemasGetAll422Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountschemasGetAll500Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountschemasCreateNewSchemaResponse:
      type: object
      properties: {}
      example: {}
    CustomeraccountschemasCreateNewSchema401Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountschemasCreateNewSchema403Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountschemasCreateNewSchema422Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountschemasCreateNewSchema500Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountschemasShowSchemaResponse:
      type: object
      properties: {}
      example: {}
    CustomeraccountschemasShowSchema401Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountschemasShowSchema403Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountschemasShowSchema404Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountschemasShowSchema422Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountschemasShowSchema500Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountschemasUpdateSchemaResponse:
      type: object
      properties: {}
      example: {}
    CustomeraccountschemasUpdateSchema401Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountschemasUpdateSchema403Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountschemasUpdateSchema404Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountschemasUpdateSchema422Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountschemasUpdateSchema500Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountcategoriesGetCategoriesResponse:
      type: object
      properties: {}
      example: {}
    CustomeraccountcategoriesGetCategories401Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountcategoriesGetCategories500Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountcategoriesCreateAccountCategoryResponse:
      type: object
      properties: {}
      example: {}
    CustomeraccountcategoriesCreateAccountCategory401Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountcategoriesCreateAccountCategory403Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountcategoriesCreateAccountCategory422Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountcategoriesCreateAccountCategory500Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountcategoriesDeleteCategoryResponse:
      type: object
      properties: {}
      example: {}
    CustomeraccountcategoriesDeleteCategory403Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountcategoriesDeleteCategory422Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountcategoriesDeleteCategory500Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountcategoriesUpdateCategoryResponse:
      type: object
      properties: {}
      example: {}
    CustomeraccountcategoriesUpdateCategory403Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountcategoriesUpdateCategory422Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountcategoriesUpdateCategory500Response:
      type: object
      properties: {}
      example: {}
    ContractsGetAllContractsResponse:
      type: object
      properties: {}
      example: {}
    ContractsGetAllContracts401Response:
      type: object
      properties: {}
      example: {}
    ContractsGetAllContracts403Response:
      type: object
      properties: {}
      example: {}
    ContractsGetAllContracts422Response:
      type: object
      properties: {}
      example: {}
    ContractsGetAllContracts500Response:
      type: object
      properties: {}
      example: {}
    ContractsCreateNewContractResponse:
      type: object
      properties: {}
      example: {}
    ContractsCreateNewContract401Response:
      type: object
      properties: {}
      example: {}
    ContractsCreateNewContract403Response:
      type: object
      properties: {}
      example: {}
    ContractsCreateNewContract422Response:
      type: object
      properties: {}
      example: {}
    ContractsCreateNewContract500Response:
      type: object
      properties: {}
      example: {}
    ContractsDeleteContractResponse:
      type: object
      properties: {}
      example: {}
    ContractsDeleteContract401Response:
      type: object
      properties: {}
      example: {}
    ContractsDeleteContract403Response:
      type: object
      properties: {}
      example: {}
    ContractsDeleteContract404Response:
      type: object
      properties: {}
      example: {}
    ContractsDeleteContract422Response:
      type: object
      properties: {}
      example: {}
    ContractsDeleteContract500Response:
      type: object
      properties: {}
      example: {}
    ContractsShowContractResponse:
      type: object
      properties: {}
      example: {}
    ContractsShowContract401Response:
      type: object
      properties: {}
      example: {}
    ContractsShowContract403Response:
      type: object
      properties: {}
      example: {}
    ContractsShowContract404Response:
      type: object
      properties: {}
      example: {}
    ContractsShowContract422Response:
      type: object
      properties: {}
      example: {}
    ContractsShowContract500Response:
      type: object
      properties: {}
      example: {}
    ContractsUpdateContractResponse:
      type: object
      properties: {}
      example: {}
    ContractsUpdateContract401Response:
      type: object
      properties: {}
      example: {}
    ContractsUpdateContract403Response:
      type: object
      properties: {}
      example: {}
    ContractsUpdateContract404Response:
      type: object
      properties: {}
      example: {}
    ContractsUpdateContract422Response:
      type: object
      properties: {}
      example: {}
    ContractsUpdateContract500Response:
      type: object
      properties: {}
      example: {}
    ContractmembershipsDestroyMembershipResponse:
      type: object
      properties: {}
      example: {}
    ContractmembershipsDestroyMembership401Response:
      type: object
      properties: {}
      example: {}
    ContractmembershipsDestroyMembership403Response:
      type: object
      properties: {}
      example: {}
    ContractmembershipsDestroyMembership404Response:
      type: object
      properties: {}
      example: {}
    ContractmembershipsDestroyMembership422Response:
      type: object
      properties: {}
      example: {}
    ContractmembershipsDestroyMembership500Response:
      type: object
      properties: {}
      example: {}
    ContractmembershipsCreateMembershipInResponse:
      type: object
      properties: {}
      example: {}
    ContractmembershipsCreateMembershipIn401Response:
      type: object
      properties: {}
      example: {}
    ContractmembershipsCreateMembershipIn403Response:
      type: object
      properties: {}
      example: {}
    ContractmembershipsCreateMembershipIn422Response:
      type: object
      properties: {}
      example: {}
    ContractmembershipsCreateMembershipIn500Response:
      type: object
      properties: {}
      example: {}
    ContractmembershipcostsGetAllForMemberResponse:
      type: object
      properties: {}
      example: {}
    ContractmembershipcostsGetAllForMember401Response:
      type: object
      properties: {}
      example: {}
    ContractmembershipcostsGetAllForMember403Response:
      type: object
      properties: {}
      example: {}
    ContractmembershipcostsGetAllForMember422Response:
      type: object
      properties: {}
      example: {}
    ContractmembershipcostsGetAllForMember500Response:
      type: object
      properties: {}
      example: {}
    ContractmembershipcostsCreateNewMembershipCostResponse:
      type: object
      properties: {}
      example: {}
    ContractmembershipcostsCreateNewMembershipCost401Response:
      type: object
      properties: {}
      example: {}
    ContractmembershipcostsCreateNewMembershipCost403Response:
      type: object
      properties: {}
      example: {}
    ContractmembershipcostsCreateNewMembershipCost422Response:
      type: object
      properties: {}
      example: {}
    ContractmembershipcostsCreateNewMembershipCost500Response:
      type: object
      properties: {}
      example: {}
    ContractmembershipcostsDeleteMembershipCostResponse:
      type: object
      properties: {}
      example: {}
    ContractmembershipcostsDeleteMembershipCost401Response:
      type: object
      properties: {}
      example: {}
    ContractmembershipcostsDeleteMembershipCost403Response:
      type: object
      properties: {}
      example: {}
    ContractmembershipcostsDeleteMembershipCost404Response:
      type: object
      properties: {}
      example: {}
    ContractmembershipcostsDeleteMembershipCost422Response:
      type: object
      properties: {}
      example: {}
    ContractmembershipcostsDeleteMembershipCost500Response:
      type: object
      properties: {}
      example: {}
    ContractmembershipcostsShowMembershipCostResponse:
      type: object
      properties: {}
      example: {}
    ContractmembershipcostsShowMembershipCost401Response:
      type: object
      properties: {}
      example: {}
    ContractmembershipcostsShowMembershipCost403Response:
      type: object
      properties: {}
      example: {}
    ContractmembershipcostsShowMembershipCost404Response:
      type: object
      properties: {}
      example: {}
    ContractmembershipcostsShowMembershipCost422Response:
      type: object
      properties: {}
      example: {}
    ContractmembershipcostsShowMembershipCost500Response:
      type: object
      properties: {}
      example: {}
    ContractmembershipcostsUpdateMembershipCostResponse:
      type: object
      properties: {}
      example: {}
    ContractmembershipcostsUpdateMembershipCost401Response:
      type: object
      properties: {}
      example: {}
    ContractmembershipcostsUpdateMembershipCost403Response:
      type: object
      properties: {}
      example: {}
    ContractmembershipcostsUpdateMembershipCost404Response:
      type: object
      properties: {}
      example: {}
    ContractmembershipcostsUpdateMembershipCost422Response:
      type: object
      properties: {}
      example: {}
    ContractmembershipcostsUpdateMembershipCost500Response:
      type: object
      properties: {}
      example: {}
    ContractadditionsGetAllForCurrentContractResponse:
      type: object
      properties: {}
      example: {}
    ContractadditionsGetAllForCurrentContract401Response:
      type: object
      properties: {}
      example: {}
    ContractadditionsGetAllForCurrentContract403Response:
      type: object
      properties: {}
      example: {}
    ContractadditionsGetAllForCurrentContract422Response:
      type: object
      properties: {}
      example: {}
    ContractadditionsGetAllForCurrentContract500Response:
      type: object
      properties: {}
      example: {}
    ContractadditionsCreateNewAdditionResponse:
      type: object
      properties: {}
      example: {}
    ContractadditionsCreateNewAddition401Response:
      type: object
      properties: {}
      example: {}
    ContractadditionsCreateNewAddition403Response:
      type: object
      properties: {}
      example: {}
    ContractadditionsCreateNewAddition422Response:
      type: object
      properties: {}
      example: {}
    ContractadditionsCreateNewAddition500Response:
      type: object
      properties: {}
      example: {}
    ContractadditionsDeleteContractAdditionResponse:
      type: object
      properties: {}
      example: {}
    ContractadditionsDeleteContractAddition401Response:
      type: object
      properties: {}
      example: {}
    ContractadditionsDeleteContractAddition403Response:
      type: object
      properties: {}
      example: {}
    ContractadditionsDeleteContractAddition404Response:
      type: object
      properties: {}
      example: {}
    ContractadditionsDeleteContractAddition422Response:
      type: object
      properties: {}
      example: {}
    ContractadditionsDeleteContractAddition500Response:
      type: object
      properties: {}
      example: {}
    ContractadditionsShowDetailResponse:
      type: object
      properties: {}
      example: {}
    ContractadditionsShowDetail401Response:
      type: object
      properties: {}
      example: {}
    ContractadditionsShowDetail403Response:
      type: object
      properties: {}
      example: {}
    ContractadditionsShowDetail404Response:
      type: object
      properties: {}
      example: {}
    ContractadditionsShowDetail422Response:
      type: object
      properties: {}
      example: {}
    ContractadditionsShowDetail500Response:
      type: object
      properties: {}
      example: {}
    ContractadditionsUpdateContractAdditionResponse:
      type: object
      properties: {}
      example: {}
    ContractadditionsUpdateContractAddition401Response:
      type: object
      properties: {}
      example: {}
    ContractadditionsUpdateContractAddition403Response:
      type: object
      properties: {}
      example: {}
    ContractadditionsUpdateContractAddition404Response:
      type: object
      properties: {}
      example: {}
    ContractadditionsUpdateContractAddition422Response:
      type: object
      properties: {}
      example: {}
    ContractadditionsUpdateContractAddition500Response:
      type: object
      properties: {}
      example: {}
    ContractgrantsGetAllForCurrentContractResponse:
      type: object
      properties: {}
      example: {}
    ContractgrantsGetAllForCurrentContract401Response:
      type: object
      properties: {}
      example: {}
    ContractgrantsGetAllForCurrentContract403Response:
      type: object
      properties: {}
      example: {}
    ContractgrantsGetAllForCurrentContract422Response:
      type: object
      properties: {}
      example: {}
    ContractgrantsGetAllForCurrentContract500Response:
      type: object
      properties: {}
      example: {}
    ContractgrantsCreateGrantResponse:
      type: object
      properties: {}
      example: {}
    ContractgrantsCreateGrant401Response:
      type: object
      properties: {}
      example: {}
    ContractgrantsCreateGrant403Response:
      type: object
      properties: {}
      example: {}
    ContractgrantsCreateGrant422Response:
      type: object
      properties: {}
      example: {}
    ContractgrantsCreateGrant500Response:
      type: object
      properties: {}
      example: {}
    ContractgrantsDeleteGrantResponse:
      type: object
      properties: {}
      example: {}
    ContractgrantsDeleteGrant401Response:
      type: object
      properties: {}
      example: {}
    ContractgrantsDeleteGrant403Response:
      type: object
      properties: {}
      example: {}
    ContractgrantsDeleteGrant404Response:
      type: object
      properties: {}
      example: {}
    ContractgrantsDeleteGrant422Response:
      type: object
      properties: {}
      example: {}
    ContractgrantsDeleteGrant500Response:
      type: object
      properties: {}
      example: {}
    ContractgrantsShowGrantResponse:
      type: object
      properties: {}
      example: {}
    ContractgrantsShowGrant401Response:
      type: object
      properties: {}
      example: {}
    ContractgrantsShowGrant403Response:
      type: object
      properties: {}
      example: {}
    ContractgrantsShowGrant404Response:
      type: object
      properties: {}
      example: {}
    ContractgrantsShowGrant422Response:
      type: object
      properties: {}
      example: {}
    ContractgrantsShowGrant500Response:
      type: object
      properties: {}
      example: {}
    ContractgrantsUpdateGrantResponse:
      type: object
      properties: {}
      example: {}
    ContractgrantsUpdateGrant401Response:
      type: object
      properties: {}
      example: {}
    ContractgrantsUpdateGrant403Response:
      type: object
      properties: {}
      example: {}
    ContractgrantsUpdateGrant404Response:
      type: object
      properties: {}
      example: {}
    ContractgrantsUpdateGrant422Response:
      type: object
      properties: {}
      example: {}
    ContractgrantsUpdateGrant500Response:
      type: object
      properties: {}
      example: {}
    SecuritydepositsCreateDepositResponse:
      type: object
      properties: {}
      example: {}
    SecuritydepositsCreateDeposit401Response:
      type: object
      properties: {}
      example: {}
    SecuritydepositsCreateDeposit403Response:
      type: object
      properties: {}
      example: {}
    SecuritydepositsCreateDeposit422Response:
      type: object
      properties: {}
      example: {}
    SecuritydepositsCreateDeposit500Response:
      type: object
      properties: {}
      example: {}
    SecuritydepositsDeleteDepositResponse:
      type: object
      properties: {}
      example: {}
    SecuritydepositsDeleteDeposit401Response:
      type: object
      properties: {}
      example: {}
    SecuritydepositsDeleteDeposit403Response:
      type: object
      properties: {}
      example: {}
    SecuritydepositsDeleteDeposit404Response:
      type: object
      properties: {}
      example: {}
    SecuritydepositsDeleteDeposit422Response:
      type: object
      properties: {}
      example: {}
    SecuritydepositsDeleteDeposit500Response:
      type: object
      properties: {}
      example: {}
    SecuritydepositsUpdateSecurityDepositResponse:
      type: object
      properties: {}
      example: {}
    SecuritydepositsUpdateSecurityDeposit401Response:
      type: object
      properties: {}
      example: {}
    SecuritydepositsUpdateSecurityDeposit403Response:
      type: object
      properties: {}
      example: {}
    SecuritydepositsUpdateSecurityDeposit404Response:
      type: object
      properties: {}
      example: {}
    SecuritydepositsUpdateSecurityDeposit422Response:
      type: object
      properties: {}
      example: {}
    SecuritydepositsUpdateSecurityDeposit500Response:
      type: object
      properties: {}
      example: {}
    CosttypesGetAllResponse:
      type: object
      properties: {}
      example: {}
    CosttypesGetAll401Response:
      type: object
      properties: {}
      example: {}
    CosttypesGetAll403Response:
      type: object
      properties: {}
      example: {}
    CosttypesGetAll422Response:
      type: object
      properties: {}
      example: {}
    CosttypesGetAll500Response:
      type: object
      properties: {}
      example: {}
    CosttypesCreateTypeOfCostResponse:
      type: object
      properties: {}
      example: {}
    CosttypesCreateTypeOfCost401Response:
      type: object
      properties: {}
      example: {}
    CosttypesCreateTypeOfCost403Response:
      type: object
      properties: {}
      example: {}
    CosttypesCreateTypeOfCost422Response:
      type: object
      properties: {}
      example: {}
    CosttypesCreateTypeOfCost500Response:
      type: object
      properties: {}
      example: {}
    CosttypesDeleteCostTypeResponse:
      type: object
      properties: {}
      example: {}
    CosttypesDeleteCostType401Response:
      type: object
      properties: {}
      example: {}
    CosttypesDeleteCostType403Response:
      type: object
      properties: {}
      example: {}
    CosttypesDeleteCostType404Response:
      type: object
      properties: {}
      example: {}
    CosttypesDeleteCostType422Response:
      type: object
      properties: {}
      example: {}
    CosttypesDeleteCostType500Response:
      type: object
      properties: {}
      example: {}
    CosttypesShowTypeResponse:
      type: object
      properties: {}
      example: {}
    CosttypesShowType401Response:
      type: object
      properties: {}
      example: {}
    CosttypesShowType403Response:
      type: object
      properties: {}
      example: {}
    CosttypesShowType404Response:
      type: object
      properties: {}
      example: {}
    CosttypesShowType422Response:
      type: object
      properties: {}
      example: {}
    CosttypesShowType500Response:
      type: object
      properties: {}
      example: {}
    CosttypesUpdateCostTypeResponse:
      type: object
      properties: {}
      example: {}
    CosttypesUpdateCostType401Response:
      type: object
      properties: {}
      example: {}
    CosttypesUpdateCostType403Response:
      type: object
      properties: {}
      example: {}
    CosttypesUpdateCostType404Response:
      type: object
      properties: {}
      example: {}
    CosttypesUpdateCostType422Response:
      type: object
      properties: {}
      example: {}
    CosttypesUpdateCostType500Response:
      type: object
      properties: {}
      example: {}
    PropertytypesGetAllAvailableResponse:
      type: object
      properties: {}
      example: {}
    PropertytypesGetAllAvailable401Response:
      type: object
      properties: {}
      example: {}
    PropertytypesGetAllAvailable403Response:
      type: object
      properties: {}
      example: {}
    PropertytypesGetAllAvailable422Response:
      type: object
      properties: {}
      example: {}
    PropertytypesGetAllAvailable500Response:
      type: object
      properties: {}
      example: {}
    PropertiesListForOrganisationResponse:
      type: object
      properties: {}
      example: {}
    PropertiesListForOrganisation401Response:
      type: object
      properties: {}
      example: {}
    PropertiesListForOrganisation403Response:
      type: object
      properties: {}
      example: {}
    PropertiesListForOrganisation422Response:
      type: object
      properties: {}
      example: {}
    PropertiesListForOrganisation500Response:
      type: object
      properties: {}
      example: {}
    PropertiesCreateForOrganisationResponse:
      type: object
      properties: {}
      example: {}
    PropertiesCreateForOrganisation403Response:
      type: object
      properties: {}
      example: {}
    PropertiesCreateForOrganisation422Response:
      type: object
      properties: {}
      example: {}
    PropertiesCreateForOrganisation500Response:
      type: object
      properties: {}
      example: {}
    PropertiesDeletePropertyWithinOrganisationResponse:
      type: object
      properties: {}
      example: {}
    PropertiesDeletePropertyWithinOrganisation403Response:
      type: object
      properties: {}
      example: {}
    PropertiesDeletePropertyWithinOrganisation422Response:
      type: object
      properties: {}
      example: {}
    PropertiesDeletePropertyWithinOrganisation500Response:
      type: object
      properties: {}
      example: {}
    PropertiesGetForOrganisationResponse:
      type: object
      properties: {}
      example: {}
    PropertiesGetForOrganisation403Response:
      type: object
      properties: {}
      example: {}
    PropertiesGetForOrganisation422Response:
      type: object
      properties: {}
      example: {}
    PropertiesGetForOrganisation500Response:
      type: object
      properties: {}
      example: {}
    PropertiesUpdateForOrganisationResponse:
      type: object
      properties: {}
      example: {}
    PropertiesUpdateForOrganisation403Response:
      type: object
      properties: {}
      example: {}
    PropertiesUpdateForOrganisation422Response:
      type: object
      properties: {}
      example: {}
    PropertiesUpdateForOrganisation500Response:
      type: object
      properties: {}
      example: {}
    PropertymanagersGetAllWithinCustomerResponse:
      type: object
      properties: {}
      example: {}
    PropertymanagersGetAllWithinCustomer401Response:
      type: object
      properties: {}
      example: {}
    PropertymanagersGetAllWithinCustomer403Response:
      type: object
      properties: {}
      example: {}
    PropertymanagersGetAllWithinCustomer422Response:
      type: object
      properties: {}
      example: {}
    PropertymanagersGetAllWithinCustomer500Response:
      type: object
      properties: {}
      example: {}
    PropertymanagersCreateNewManagerResponse:
      type: object
      properties: {}
      example: {}
    PropertymanagersCreateNewManager403Response:
      type: object
      properties: {}
      example: {}
    PropertymanagersCreateNewManager422Response:
      type: object
      properties: {}
      example: {}
    PropertymanagersCreateNewManager500Response:
      type: object
      properties: {}
      example: {}
    PropertymanagersDeleteManagerWithinAccountResponse:
      type: object
      properties: {}
      example: {}
    PropertymanagersDeleteManagerWithinAccount403Response:
      type: object
      properties: {}
      example: {}
    PropertymanagersDeleteManagerWithinAccount422Response:
      type: object
      properties: {}
      example: {}
    PropertymanagersDeleteManagerWithinAccount500Response:
      type: object
      properties: {}
      example: {}
    PropertymanagersGetCurrentManagerResponse:
      type: object
      properties: {}
      example: {}
    PropertymanagersGetCurrentManager403Response:
      type: object
      properties: {}
      example: {}
    PropertymanagersGetCurrentManager422Response:
      type: object
      properties: {}
      example: {}
    PropertymanagersGetCurrentManager500Response:
      type: object
      properties: {}
      example: {}
    PropertymanagersUpdateCurrentAccountUserResponse:
      type: object
      properties: {}
      example: {}
    PropertymanagersUpdateCurrentAccountUser403Response:
      type: object
      properties: {}
      example: {}
    PropertymanagersUpdateCurrentAccountUser422Response:
      type: object
      properties: {}
      example: {}
    PropertymanagersUpdateCurrentAccountUser500Response:
      type: object
      properties: {}
      example: {}
    LotsGetAllResponse:
      type: object
      properties: {}
      example: {}
    LotsGetAll401Response:
      type: object
      properties: {}
      example: {}
    LotsGetAll403Response:
      type: object
      properties: {}
      example: {}
    LotsGetAll422Response:
      type: object
      properties: {}
      example: {}
    LotsGetAll500Response:
      type: object
      properties: {}
      example: {}
    LotsCreateNewLotResponse:
      type: object
      properties: {}
      example: {}
    LotsCreateNewLot401Response:
      type: object
      properties: {}
      example: {}
    LotsCreateNewLot403Response:
      type: object
      properties: {}
      example: {}
    LotsCreateNewLot422Response:
      type: object
      properties: {}
      example: {}
    LotsCreateNewLot500Response:
      type: object
      properties: {}
      example: {}
    LotsDeleteLotWithinOrganisationResponse:
      type: object
      properties: {}
      example: {}
    LotsDeleteLotWithinOrganisation401Response:
      type: object
      properties: {}
      example: {}
    LotsDeleteLotWithinOrganisation403Response:
      type: object
      properties: {}
      example: {}
    LotsDeleteLotWithinOrganisation404Response:
      type: object
      properties: {}
      example: {}
    LotsDeleteLotWithinOrganisation422Response:
      type: object
      properties: {}
      example: {}
    LotsDeleteLotWithinOrganisation500Response:
      type: object
      properties: {}
      example: {}
    LotsShowLotResponse:
      type: object
      properties: {}
      example: {}
    LotsShowLot401Response:
      type: object
      properties: {}
      example: {}
    LotsShowLot403Response:
      type: object
      properties: {}
      example: {}
    LotsShowLot404Response:
      type: object
      properties: {}
      example: {}
    LotsShowLot422Response:
      type: object
      properties: {}
      example: {}
    LotsShowLot500Response:
      type: object
      properties: {}
      example: {}
    LotsUpdateLotResponse:
      type: object
      properties: {}
      example: {}
    LotsUpdateLot401Response:
      type: object
      properties: {}
      example: {}
    LotsUpdateLot403Response:
      type: object
      properties: {}
      example: {}
    LotsUpdateLot422Response:
      type: object
      properties: {}
      example: {}
    LotsUpdateLot500Response:
      type: object
      properties: {}
      example: {}
    BuildingfiltersettingsGetAllSettingsResponse:
      type: object
      properties: {}
      example: {}
    BuildingfiltersettingsGetAllSettings401Response:
      type: object
      properties: {}
      example: {}
    BuildingfiltersettingsGetAllSettings403Response:
      type: object
      properties: {}
      example: {}
    BuildingfiltersettingsGetAllSettings422Response:
      type: object
      properties: {}
      example: {}
    BuildingfiltersettingsGetAllSettings500Response:
      type: object
      properties: {}
      example: {}
    BuildingfiltersettingsCreateSettingsResponse:
      type: object
      properties: {}
      example: {}
    BuildingfiltersettingsCreateSettings401Response:
      type: object
      properties: {}
      example: {}
    BuildingfiltersettingsCreateSettings403Response:
      type: object
      properties: {}
      example: {}
    BuildingfiltersettingsCreateSettings422Response:
      type: object
      properties: {}
      example: {}
    BuildingfiltersettingsCreateSettings500Response:
      type: object
      properties: {}
      example: {}
    BuildingfiltersettingsGetAllFieldsResponse:
      type: object
      properties: {}
      example: {}
    BuildingfiltersettingsGetAllFields401Response:
      type: object
      properties: {}
      example: {}
    BuildingfiltersettingsGetAllFields403Response:
      type: object
      properties: {}
      example: {}
    BuildingfiltersettingsGetAllFields422Response:
      type: object
      properties: {}
      example: {}
    BuildingfiltersettingsGetAllFields500Response:
      type: object
      properties: {}
      example: {}
    BuildingfiltersettingsDeleteSettingResponse:
      type: object
      properties: {}
      example: {}
    BuildingfiltersettingsDeleteSetting401Response:
      type: object
      properties: {}
      example: {}
    BuildingfiltersettingsDeleteSetting403Response:
      type: object
      properties: {}
      example: {}
    BuildingfiltersettingsDeleteSetting404Response:
      type: object
      properties: {}
      example: {}
    BuildingfiltersettingsDeleteSetting422Response:
      type: object
      properties: {}
      example: {}
    BuildingfiltersettingsDeleteSetting500Response:
      type: object
      properties: {}
      example: {}
    BuildingfiltersettingsShowSettingResponse:
      type: object
      properties: {}
      example: {}
    BuildingfiltersettingsShowSetting401Response:
      type: object
      properties: {}
      example: {}
    BuildingfiltersettingsShowSetting403Response:
      type: object
      properties: {}
      example: {}
    BuildingfiltersettingsShowSetting404Response:
      type: object
      properties: {}
      example: {}
    BuildingfiltersettingsShowSetting422Response:
      type: object
      properties: {}
      example: {}
    BuildingfiltersettingsShowSetting500Response:
      type: object
      properties: {}
      example: {}
    BuildingfiltersettingsUpdateSettingResponse:
      type: object
      properties: {}
      example: {}
    BuildingfiltersettingsUpdateSetting401Response:
      type: object
      properties: {}
      example: {}
    BuildingfiltersettingsUpdateSetting403Response:
      type: object
      properties: {}
      example: {}
    BuildingfiltersettingsUpdateSetting404Response:
      type: object
      properties: {}
      example: {}
    BuildingfiltersettingsUpdateSetting422Response:
      type: object
      properties: {}
      example: {}
    BuildingfiltersettingsUpdateSetting500Response:
      type: object
      properties: {}
      example: {}
    BuildingsavefiltersGetAllFiltersResponse:
      type: object
      properties: {}
      example: {}
    BuildingsavefiltersGetAllFilters401Response:
      type: object
      properties: {}
      example: {}
    BuildingsavefiltersGetAllFilters403Response:
      type: object
      properties: {}
      example: {}
    BuildingsavefiltersGetAllFilters422Response:
      type: object
      properties: {}
      example: {}
    BuildingsavefiltersGetAllFilters500Response:
      type: object
      properties: {}
      example: {}
    BuildingsavefiltersCreateBuildingSaveFilterResponse:
      type: object
      properties: {}
      example: {}
    BuildingsavefiltersCreateBuildingSaveFilter401Response:
      type: object
      properties: {}
      example: {}
    BuildingsavefiltersCreateBuildingSaveFilter403Response:
      type: object
      properties: {}
      example: {}
    BuildingsavefiltersCreateBuildingSaveFilter422Response:
      type: object
      properties: {}
      example: {}
    BuildingsavefiltersCreateBuildingSaveFilter500Response:
      type: object
      properties: {}
      example: {}
    BuildingsavefiltersDeleteSaveFilterResponse:
      type: object
      properties: {}
      example: {}
    BuildingsavefiltersDeleteSaveFilter401Response:
      type: object
      properties: {}
      example: {}
    BuildingsavefiltersDeleteSaveFilter403Response:
      type: object
      properties: {}
      example: {}
    BuildingsavefiltersDeleteSaveFilter404Response:
      type: object
      properties: {}
      example: {}
    BuildingsavefiltersDeleteSaveFilter422Response:
      type: object
      properties: {}
      example: {}
    BuildingsavefiltersDeleteSaveFilter500Response:
      type: object
      properties: {}
      example: {}
    BuildingsavefiltersShowSaveFilterResponse:
      type: object
      properties: {}
      example: {}
    BuildingsavefiltersShowSaveFilter401Response:
      type: object
      properties: {}
      example: {}
    BuildingsavefiltersShowSaveFilter403Response:
      type: object
      properties: {}
      example: {}
    BuildingsavefiltersShowSaveFilter404Response:
      type: object
      properties: {}
      example: {}
    BuildingsavefiltersShowSaveFilter422Response:
      type: object
      properties: {}
      example: {}
    BuildingsavefiltersShowSaveFilter500Response:
      type: object
      properties: {}
      example: {}
    BuildingsavefiltersUpdateSaveFilterResponse:
      type: object
      properties: {}
      example: {}
    BuildingsavefiltersUpdateSaveFilter401Response:
      type: object
      properties: {}
      example: {}
    BuildingsavefiltersUpdateSaveFilter403Response:
      type: object
      properties: {}
      example: {}
    BuildingsavefiltersUpdateSaveFilter404Response:
      type: object
      properties: {}
      example: {}
    BuildingsavefiltersUpdateSaveFilter422Response:
      type: object
      properties: {}
      example: {}
    BuildingsavefiltersUpdateSaveFilter500Response:
      type: object
      properties: {}
      example: {}
    BuildingtypesGetAllBuildingTypesResponse:
      type: object
      properties: {}
      example: {}
    BuildingtypesGetAllBuildingTypes401Response:
      type: object
      properties: {}
      example: {}
    BuildingtypesGetAllBuildingTypes403Response:
      type: object
      properties: {}
      example: {}
    BuildingtypesGetAllBuildingTypes422Response:
      type: object
      properties: {}
      example: {}
    BuildingtypesGetAllBuildingTypes500Response:
      type: object
      properties: {}
      example: {}
    BuildingsGetAllWithinOrganisationResponse:
      type: object
      properties: {}
      example: {}
    BuildingsGetAllWithinOrganisation401Response:
      type: object
      properties: {}
      example: {}
    BuildingsGetAllWithinOrganisation403Response:
      type: object
      properties: {}
      example: {}
    BuildingsGetAllWithinOrganisation422Response:
      type: object
      properties: {}
      example: {}
    BuildingsGetAllWithinOrganisation500Response:
      type: object
      properties: {}
      example: {}
    BuildingsCreateNewBuildingResponse:
      type: object
      properties: {}
      example: {}
    BuildingsCreateNewBuilding401Response:
      type: object
      properties: {}
      example: {}
    BuildingsCreateNewBuilding403Response:
      type: object
      properties: {}
      example: {}
    BuildingsCreateNewBuilding422Response:
      type: object
      properties: {}
      example: {}
    BuildingsCreateNewBuilding500Response:
      type: object
      properties: {}
      example: {}
    BuildingsDeleteBuildingResponse:
      type: object
      properties: {}
      example: {}
    BuildingsDeleteBuilding401Response:
      type: object
      properties: {}
      example: {}
    BuildingsDeleteBuilding403Response:
      type: object
      properties: {}
      example: {}
    BuildingsDeleteBuilding404Response:
      type: object
      properties: {}
      example: {}
    BuildingsDeleteBuilding422Response:
      type: object
      properties: {}
      example: {}
    BuildingsDeleteBuilding500Response:
      type: object
      properties: {}
      example: {}
    BuildingsShowBuildingResponse:
      type: object
      properties: {}
      example: {}
    BuildingsShowBuilding401Response:
      type: object
      properties: {}
      example: {}
    BuildingsShowBuilding403Response:
      type: object
      properties: {}
      example: {}
    BuildingsShowBuilding404Response:
      type: object
      properties: {}
      example: {}
    BuildingsShowBuilding422Response:
      type: object
      properties: {}
      example: {}
    BuildingsShowBuilding500Response:
      type: object
      properties: {}
      example: {}
    BuildingsUpdateBuildingTimeDependentAttributesResponse:
      type: object
      properties: {}
      example: {}
    BuildingsUpdateBuildingTimeDependentAttributes401Response:
      type: object
      properties: {}
      example: {}
    BuildingsUpdateBuildingTimeDependentAttributes403Response:
      type: object
      properties: {}
      example: {}
    BuildingsUpdateBuildingTimeDependentAttributes404Response:
      type: object
      properties: {}
      example: {}
    BuildingsUpdateBuildingTimeDependentAttributes422Response:
      type: object
      properties: {}
      example: {}
    BuildingsUpdateBuildingTimeDependentAttributes500Response:
      type: object
      properties: {}
      example: {}
    BuildingsListScorecardMembershipsResponse:
      type: object
      properties: {}
      example: {}
    BuildingsListScorecardMemberships401Response:
      type: object
      properties: {}
      example: {}
    BuildingsListScorecardMemberships403Response:
      type: object
      properties: {}
      example: {}
    BuildingsListScorecardMemberships404Response:
      type: object
      properties: {}
      example: {}
    BuildingsListScorecardMemberships422Response:
      type: object
      properties: {}
      example: {}
    BuildingsListScorecardMemberships500Response:
      type: object
      properties: {}
      example: {}
    BuildingunittypesGetAllResponse:
      type: object
      properties: {}
      example: {}
    BuildingunittypesGetAll401Response:
      type: object
      properties: {}
      example: {}
    BuildingunittypesGetAll403Response:
      type: object
      properties: {}
      example: {}
    BuildingunittypesGetAll422Response:
      type: object
      properties: {}
      example: {}
    BuildingunittypesGetAll500Response:
      type: object
      properties: {}
      example: {}
    BuildingunittypesCreateTypeResponse:
      type: object
      properties: {}
      example: {}
    BuildingunittypesCreateType401Response:
      type: object
      properties: {}
      example: {}
    BuildingunittypesCreateType403Response:
      type: object
      properties: {}
      example: {}
    BuildingunittypesCreateType422Response:
      type: object
      properties: {}
      example: {}
    BuildingunittypesCreateType500Response:
      type: object
      properties: {}
      example: {}
    BuildingunittypesDeleteResponse:
      type: object
      properties: {}
      example: {}
    BuildingunittypesDelete401Response:
      type: object
      properties: {}
      example: {}
    BuildingunittypesDelete403Response:
      type: object
      properties: {}
      example: {}
    BuildingunittypesDelete404Response:
      type: object
      properties: {}
      example: {}
    BuildingunittypesDelete422Response:
      type: object
      properties: {}
      example: {}
    BuildingunittypesDelete500Response:
      type: object
      properties: {}
      example: {}
    BuildingunittypesShowTypeResponse:
      type: object
      properties: {}
      example: {}
    BuildingunittypesShowType401Response:
      type: object
      properties: {}
      example: {}
    BuildingunittypesShowType403Response:
      type: object
      properties: {}
      example: {}
    BuildingunittypesShowType404Response:
      type: object
      properties: {}
      example: {}
    BuildingunittypesShowType422Response:
      type: object
      properties: {}
      example: {}
    BuildingunittypesShowType500Response:
      type: object
      properties: {}
      example: {}
    BuildingunittypesUpdateBuildingUnitTypeResponse:
      type: object
      properties: {}
      example: {}
    BuildingunittypesUpdateBuildingUnitType401Response:
      type: object
      properties: {}
      example: {}
    BuildingunittypesUpdateBuildingUnitType403Response:
      type: object
      properties: {}
      example: {}
    BuildingunittypesUpdateBuildingUnitType404Response:
      type: object
      properties: {}
      example: {}
    BuildingunittypesUpdateBuildingUnitType422Response:
      type: object
      properties: {}
      example: {}
    BuildingunittypesUpdateBuildingUnitType500Response:
      type: object
      properties: {}
      example: {}
    BuildingunitsGetAllWithinOrganisationResponse:
      type: object
      properties: {}
      example: {}
    BuildingunitsGetAllWithinOrganisation401Response:
      type: object
      properties: {}
      example: {}
    BuildingunitsGetAllWithinOrganisation403Response:
      type: object
      properties: {}
      example: {}
    BuildingunitsGetAllWithinOrganisation422Response:
      type: object
      properties: {}
      example: {}
    BuildingunitsGetAllWithinOrganisation500Response:
      type: object
      properties: {}
      example: {}
    BuildingunitsCreateUnitResponse:
      type: object
      properties: {}
      example: {}
    BuildingunitsCreateUnit401Response:
      type: object
      properties: {}
      example: {}
    BuildingunitsCreateUnit403Response:
      type: object
      properties: {}
      example: {}
    BuildingunitsCreateUnit422Response:
      type: object
      properties: {}
      example: {}
    BuildingunitsCreateUnit500Response:
      type: object
      properties: {}
      example: {}
    BuildingunitsDestroyUnitAndMembershipsResponse:
      type: object
      properties: {}
      example: {}
    BuildingunitsDestroyUnitAndMemberships401Response:
      type: object
      properties: {}
      example: {}
    BuildingunitsDestroyUnitAndMemberships403Response:
      type: object
      properties: {}
      example: {}
    BuildingunitsDestroyUnitAndMemberships404Response:
      type: object
      properties: {}
      example: {}
    BuildingunitsDestroyUnitAndMemberships422Response:
      type: object
      properties: {}
      example: {}
    BuildingunitsDestroyUnitAndMemberships500Response:
      type: object
      properties: {}
      example: {}
    BuildingunitsShowUnitMembershipsResponse:
      type: object
      properties: {}
      example: {}
    BuildingunitsShowUnitMemberships401Response:
      type: object
      properties: {}
      example: {}
    BuildingunitsShowUnitMemberships403Response:
      type: object
      properties: {}
      example: {}
    BuildingunitsShowUnitMemberships404Response:
      type: object
      properties: {}
      example: {}
    BuildingunitsShowUnitMemberships422Response:
      type: object
      properties: {}
      example: {}
    BuildingunitsShowUnitMemberships500Response:
      type: object
      properties: {}
      example: {}
    BuildingunitsUpdateUnitResponse:
      type: object
      properties: {}
      example: {}
    BuildingunitsUpdateUnit401Response:
      type: object
      properties: {}
      example: {}
    BuildingunitsUpdateUnit403Response:
      type: object
      properties: {}
      example: {}
    BuildingunitsUpdateUnit404Response:
      type: object
      properties: {}
      example: {}
    BuildingunitsUpdateUnit422Response:
      type: object
      properties: {}
      example: {}
    BuildingunitsUpdateUnit500Response:
      type: object
      properties: {}
      example: {}
    BuildingunitmembershipsDestroyOrganisationMembershipResponse:
      type: object
      properties: {}
      example: {}
    BuildingunitmembershipsDestroyOrganisationMembership401Response:
      type: object
      properties: {}
      example: {}
    BuildingunitmembershipsDestroyOrganisationMembership403Response:
      type: object
      properties: {}
      example: {}
    BuildingunitmembershipsDestroyOrganisationMembership404Response:
      type: object
      properties: {}
      example: {}
    BuildingunitmembershipsDestroyOrganisationMembership422Response:
      type: object
      properties: {}
      example: {}
    BuildingunitmembershipsDestroyOrganisationMembership500Response:
      type: object
      properties: {}
      example: {}
    BuildingunitmembershipsCreateMembershipInUnitResponse:
      type: object
      properties: {}
      example: {}
    BuildingunitmembershipsCreateMembershipInUnit401Response:
      type: object
      properties: {}
      example: {}
    BuildingunitmembershipsCreateMembershipInUnit403Response:
      type: object
      properties: {}
      example: {}
    BuildingunitmembershipsCreateMembershipInUnit422Response:
      type: object
      properties: {}
      example: {}
    BuildingunitmembershipsCreateMembershipInUnit500Response:
      type: object
      properties: {}
      example: {}
    BuildingenergiesGetBuildingEnergiesResponse:
      type: object
      properties: {}
      example: {}
    BuildingenergiesGetBuildingEnergies401Response:
      type: object
      properties: {}
      example: {}
    BuildingenergiesGetBuildingEnergies500Response:
      type: object
      properties: {}
      example: {}
    BuildingenergiesCreateEnergyResponse:
      type: object
      properties: {}
      example: {}
    BuildingenergiesCreateEnergy401Response:
      type: object
      properties: {}
      example: {}
    BuildingenergiesCreateEnergy403Response:
      type: object
      properties: {}
      example: {}
    BuildingenergiesCreateEnergy422Response:
      type: object
      properties: {}
      example: {}
    BuildingenergiesCreateEnergy500Response:
      type: object
      properties: {}
      example: {}
    BuildingenergiesUpdateEnergyResponse:
      type: object
      properties: {}
      example: {}
    BuildingenergiesUpdateEnergy403Response:
      type: object
      properties: {}
      example: {}
    BuildingenergiesUpdateEnergy422Response:
      type: object
      properties: {}
      example: {}
    BuildingenergiesUpdateEnergy500Response:
      type: object
      properties: {}
      example: {}
    BuildingsfinancesReturnBuildingFinancesResponse:
      type: object
      properties: {}
      example: {}
    BuildingsfinancesReturnBuildingFinances401Response:
      type: object
      properties: {}
      example: {}
    BuildingsfinancesReturnBuildingFinances500Response:
      type: object
      properties: {}
      example: {}
    BuildingsfinancesCreateFinanceResponse:
      type: object
      properties: {}
      example: {}
    BuildingsfinancesCreateFinance401Response:
      type: object
      properties: {}
      example: {}
    BuildingsfinancesCreateFinance403Response:
      type: object
      properties: {}
      example: {}
    BuildingsfinancesCreateFinance422Response:
      type: object
      properties: {}
      example: {}
    BuildingsfinancesCreateFinance500Response:
      type: object
      properties: {}
      example: {}
    BuildingsfinancesUpdateFinanceResponse:
      type: object
      properties: {}
      example: {}
    BuildingsfinancesUpdateFinance403Response:
      type: object
      properties: {}
      example: {}
    BuildingsfinancesUpdateFinance422Response:
      type: object
      properties: {}
      example: {}
    BuildingsfinancesUpdateFinance500Response:
      type: object
      properties: {}
      example: {}
    BuildingunitsfinancesCreateFinanceResponse:
      type: object
      properties: {}
      example: {}
    BuildingunitsfinancesCreateFinance401Response:
      type: object
      properties: {}
      example: {}
    BuildingunitsfinancesCreateFinance403Response:
      type: object
      properties: {}
      example: {}
    BuildingunitsfinancesCreateFinance422Response:
      type: object
      properties: {}
      example: {}
    BuildingunitsfinancesCreateFinance500Response:
      type: object
      properties: {}
      example: {}
    BuildingunitsfinancesUpdateFinanceResponse:
      type: object
      properties: {}
      example: {}
    BuildingunitsfinancesUpdateFinance403Response:
      type: object
      properties: {}
      example: {}
    BuildingunitsfinancesUpdateFinance422Response:
      type: object
      properties: {}
      example: {}
    BuildingunitsfinancesUpdateFinance500Response:
      type: object
      properties: {}
      example: {}
    BuildingfmsGetBuildingFmsResponse:
      type: object
      properties: {}
      example: {}
    BuildingfmsGetBuildingFms401Response:
      type: object
      properties: {}
      example: {}
    BuildingfmsGetBuildingFms500Response:
      type: object
      properties: {}
      example: {}
    BuildingfmsCreateBuildingFmResponse:
      type: object
      properties: {}
      example: {}
    BuildingfmsCreateBuildingFm401Response:
      type: object
      properties: {}
      example: {}
    BuildingfmsCreateBuildingFm403Response:
      type: object
      properties: {}
      example: {}
    BuildingfmsCreateBuildingFm422Response:
      type: object
      properties: {}
      example: {}
    BuildingfmsCreateBuildingFm500Response:
      type: object
      properties: {}
      example: {}
    BuildingfmsUpdateBuildingFmResponse:
      type: object
      properties: {}
      example: {}
    BuildingfmsUpdateBuildingFm403Response:
      type: object
      properties: {}
      example: {}
    BuildingfmsUpdateBuildingFm422Response:
      type: object
      properties: {}
      example: {}
    BuildingfmsUpdateBuildingFm500Response:
      type: object
      properties: {}
      example: {}
    BuildingunitretailsListResponse:
      type: object
      properties: {}
      example: {}
    BuildingunitretailsList401Response:
      type: object
      properties: {}
      example: {}
    BuildingunitretailsList500Response:
      type: object
      properties: {}
      example: {}
    BuildingunitretailsCreateRetailUnitResponse:
      type: object
      properties: {}
      example: {}
    BuildingunitretailsCreateRetailUnit401Response:
      type: object
      properties: {}
      example: {}
    BuildingunitretailsCreateRetailUnit403Response:
      type: object
      properties: {}
      example: {}
    BuildingunitretailsCreateRetailUnit422Response:
      type: object
      properties: {}
      example: {}
    BuildingunitretailsCreateRetailUnit500Response:
      type: object
      properties: {}
      example: {}
    BuildingunitretailsUpdateUnitRetailResponse:
      type: object
      properties: {}
      example: {}
    BuildingunitretailsUpdateUnitRetail403Response:
      type: object
      properties: {}
      example: {}
    BuildingunitretailsUpdateUnitRetail422Response:
      type: object
      properties: {}
      example: {}
    BuildingunitretailsUpdateUnitRetail500Response:
      type: object
      properties: {}
      example: {}
    BuildingunitretailmetricsGetBuildingUnitRetailsResponse:
      type: object
      properties: {}
      example: {}
    BuildingunitretailmetricsGetBuildingUnitRetails401Response:
      type: object
      properties: {}
      example: {}
    BuildingunitretailmetricsGetBuildingUnitRetails500Response:
      type: object
      properties: {}
      example: {}
    BuildingunitretailmetricsCreateMetricResponse:
      type: object
      properties: {}
      example: {}
    BuildingunitretailmetricsCreateMetric401Response:
      type: object
      properties: {}
      example: {}
    BuildingunitretailmetricsCreateMetric403Response:
      type: object
      properties: {}
      example: {}
    BuildingunitretailmetricsCreateMetric422Response:
      type: object
      properties: {}
      example: {}
    BuildingunitretailmetricsCreateMetric500Response:
      type: object
      properties: {}
      example: {}
    BuildingunitretailmetricsUpdateRetailBuildingUnitResponse:
      type: object
      properties: {}
      example: {}
    BuildingunitretailmetricsUpdateRetailBuildingUnit403Response:
      type: object
      properties: {}
      example: {}
    BuildingunitretailmetricsUpdateRetailBuildingUnit422Response:
      type: object
      properties: {}
      example: {}
    BuildingunitretailmetricsUpdateRetailBuildingUnit500Response:
      type: object
      properties: {}
      example: {}
    BuildingwastesGetBuildingWastesResponse:
      type: object
      properties: {}
      example: {}
    BuildingwastesGetBuildingWastes401Response:
      type: object
      properties: {}
      example: {}
    BuildingwastesGetBuildingWastes500Response:
      type: object
      properties: {}
      example: {}
    BuildingwastesCreateBuildingWasteResponse:
      type: object
      properties: {}
      example: {}
    BuildingwastesCreateBuildingWaste401Response:
      type: object
      properties: {}
      example: {}
    BuildingwastesCreateBuildingWaste403Response:
      type: object
      properties: {}
      example: {}
    BuildingwastesCreateBuildingWaste422Response:
      type: object
      properties: {}
      example: {}
    BuildingwastesCreateBuildingWaste500Response:
      type: object
      properties: {}
      example: {}
    BuildingwastesUpdateBuildingWasteResponse:
      type: object
      properties: {}
      example: {}
    BuildingwastesUpdateBuildingWaste403Response:
      type: object
      properties: {}
      example: {}
    BuildingwastesUpdateBuildingWaste422Response:
      type: object
      properties: {}
      example: {}
    BuildingwastesUpdateBuildingWaste500Response:
      type: object
      properties: {}
      example: {}
    BuildingwatersGetBuildingWatersResponse:
      type: object
      properties: {}
      example: {}
    BuildingwatersGetBuildingWaters401Response:
      type: object
      properties: {}
      example: {}
    BuildingwatersGetBuildingWaters500Response:
      type: object
      properties: {}
      example: {}
    BuildingwatersCreateBuildingWaterResponse:
      type: object
      properties: {}
      example: {}
    BuildingwatersCreateBuildingWater401Response:
      type: object
      properties: {}
      example: {}
    BuildingwatersCreateBuildingWater403Response:
      type: object
      properties: {}
      example: {}
    BuildingwatersCreateBuildingWater422Response:
      type: object
      properties: {}
      example: {}
    BuildingwatersCreateBuildingWater500Response:
      type: object
      properties: {}
      example: {}
    BuildingwatersUpdateBuildingWaterResponse:
      type: object
      properties: {}
      example: {}
    BuildingwatersUpdateBuildingWater403Response:
      type: object
      properties: {}
      example: {}
    BuildingwatersUpdateBuildingWater422Response:
      type: object
      properties: {}
      example: {}
    BuildingwatersUpdateBuildingWater500Response:
      type: object
      properties: {}
      example: {}
    AddtlbuildingidsGetBuildingIdsResponse:
      type: object
      properties: {}
      example: {}
    AddtlbuildingidsGetBuildingIds401Response:
      type: object
      properties: {}
      example: {}
    AddtlbuildingidsGetBuildingIds500Response:
      type: object
      properties: {}
      example: {}
    AddtlbuildingidsCreateIdResponse:
      type: object
      properties: {}
      example: {}
    AddtlbuildingidsCreateId401Response:
      type: object
      properties: {}
      example: {}
    AddtlbuildingidsCreateId403Response:
      type: object
      properties: {}
      example: {}
    AddtlbuildingidsCreateId422Response:
      type: object
      properties: {}
      example: {}
    AddtlbuildingidsCreateId500Response:
      type: object
      properties: {}
      example: {}
    AddtlbuildingidsUpdateBuildingIdResponse:
      type: object
      properties: {}
      example: {}
    AddtlbuildingidsUpdateBuildingId403Response:
      type: object
      properties: {}
      example: {}
    AddtlbuildingidsUpdateBuildingId422Response:
      type: object
      properties: {}
      example: {}
    AddtlbuildingidsUpdateBuildingId500Response:
      type: object
      properties: {}
      example: {}
    PhasesGetBuildingPhasesResponse:
      type: object
      properties: {}
      example: {}
    PhasesGetBuildingPhases401Response:
      type: object
      properties: {}
      example: {}
    PhasesGetBuildingPhases500Response:
      type: object
      properties: {}
      example: {}
    PhasesCreatePhaseResponse:
      type: object
      properties: {}
      example: {}
    PhasesCreatePhase401Response:
      type: object
      properties: {}
      example: {}
    PhasesCreatePhase403Response:
      type: object
      properties: {}
      example: {}
    PhasesCreatePhase422Response:
      type: object
      properties: {}
      example: {}
    PhasesCreatePhase500Response:
      type: object
      properties: {}
      example: {}
    PhasesUpdatePhaseResponse:
      type: object
      properties: {}
      example: {}
    PhasesUpdatePhase403Response:
      type: object
      properties: {}
      example: {}
    PhasesUpdatePhase422Response:
      type: object
      properties: {}
      example: {}
    PhasesUpdatePhase500Response:
      type: object
      properties: {}
      example: {}
    RenttrackersGetRentTrackersResponse:
      type: object
      properties: {}
      example: {}
    RenttrackersGetRentTrackers401Response:
      type: object
      properties: {}
      example: {}
    RenttrackersGetRentTrackers500Response:
      type: object
      properties: {}
      example: {}
    RenttrackersCreateRentTrackerResponse:
      type: object
      properties: {}
      example: {}
    RenttrackersCreateRentTracker401Response:
      type: object
      properties: {}
      example: {}
    RenttrackersCreateRentTracker403Response:
      type: object
      properties: {}
      example: {}
    RenttrackersCreateRentTracker422Response:
      type: object
      properties: {}
      example: {}
    RenttrackersCreateRentTracker500Response:
      type: object
      properties: {}
      example: {}
    RenttrackersGetRentTrackerResponse:
      type: object
      properties: {}
      example: {}
    RenttrackersGetRentTracker401Response:
      type: object
      properties: {}
      example: {}
    RenttrackersGetRentTracker403Response:
      type: object
      properties: {}
      example: {}
    RenttrackersGetRentTracker404Response:
      type: object
      properties: {}
      example: {}
    RenttrackersGetRentTracker422Response:
      type: object
      properties: {}
      example: {}
    RenttrackersGetRentTracker500Response:
      type: object
      properties: {}
      example: {}
    RenttrackersUpdateRentTrackerResponse:
      type: object
      properties: {}
      example: {}
    RenttrackersUpdateRentTracker403Response:
      type: object
      properties: {}
      example: {}
    RenttrackersUpdateRentTracker422Response:
      type: object
      properties: {}
      example: {}
    RenttrackersUpdateRentTracker500Response:
      type: object
      properties: {}
      example: {}
    BuildingparkingsGetBuildingParkingsResponse:
      type: object
      properties: {}
      example: {}
    BuildingparkingsGetBuildingParkings401Response:
      type: object
      properties: {}
      example: {}
    BuildingparkingsGetBuildingParkings500Response:
      type: object
      properties: {}
      example: {}
    BuildingparkingsCreateNewParkingResponse:
      type: object
      properties: {}
      example: {}
    BuildingparkingsCreateNewParking401Response:
      type: object
      properties: {}
      example: {}
    BuildingparkingsCreateNewParking403Response:
      type: object
      properties: {}
      example: {}
    BuildingparkingsCreateNewParking422Response:
      type: object
      properties: {}
      example: {}
    BuildingparkingsCreateNewParking500Response:
      type: object
      properties: {}
      example: {}
    BuildingparkingsUpdateParkingResponse:
      type: object
      properties: {}
      example: {}
    BuildingparkingsUpdateParking403Response:
      type: object
      properties: {}
      example: {}
    BuildingparkingsUpdateParking422Response:
      type: object
      properties: {}
      example: {}
    BuildingparkingsUpdateParking500Response:
      type: object
      properties: {}
      example: {}
    BuildingareasGetBuildingAreasResponse:
      type: object
      properties: {}
      example: {}
    BuildingareasGetBuildingAreas401Response:
      type: object
      properties: {}
      example: {}
    BuildingareasGetBuildingAreas500Response:
      type: object
      properties: {}
      example: {}
    BuildingareasCreateNewBuildingAreaResponse:
      type: object
      properties: {}
      example: {}
    BuildingareasCreateNewBuildingArea401Response:
      type: object
      properties: {}
      example: {}
    BuildingareasCreateNewBuildingArea403Response:
      type: object
      properties: {}
      example: {}
    BuildingareasCreateNewBuildingArea422Response:
      type: object
      properties: {}
      example: {}
    BuildingareasCreateNewBuildingArea500Response:
      type: object
      properties: {}
      example: {}
    BuildingareasUpdateAreaResponse:
      type: object
      properties: {}
      example: {}
    BuildingareasUpdateArea403Response:
      type: object
      properties: {}
      example: {}
    BuildingareasUpdateArea422Response:
      type: object
      properties: {}
      example: {}
    BuildingareasUpdateArea500Response:
      type: object
      properties: {}
      example: {}
    BuildingunitareasGetBuildingAreasResponse:
      type: object
      properties: {}
      example: {}
    BuildingunitareasGetBuildingAreas401Response:
      type: object
      properties: {}
      example: {}
    BuildingunitareasGetBuildingAreas500Response:
      type: object
      properties: {}
      example: {}
    BuildingunitareasCreateAreaResponse:
      type: object
      properties: {}
      example: {}
    BuildingunitareasCreateArea401Response:
      type: object
      properties: {}
      example: {}
    BuildingunitareasCreateArea403Response:
      type: object
      properties: {}
      example: {}
    BuildingunitareasCreateArea422Response:
      type: object
      properties: {}
      example: {}
    BuildingunitareasCreateArea500Response:
      type: object
      properties: {}
      example: {}
    BuildingunitareasUpdateAreaResponse:
      type: object
      properties: {}
      example: {}
    BuildingunitareasUpdateArea403Response:
      type: object
      properties: {}
      example: {}
    BuildingunitareasUpdateArea422Response:
      type: object
      properties: {}
      example: {}
    BuildingunitareasUpdateArea500Response:
      type: object
      properties: {}
      example: {}
    BuildingunitplacesGetUnitPlacesResponse:
      type: object
      properties: {}
      example: {}
    BuildingunitplacesGetUnitPlaces401Response:
      type: object
      properties: {}
      example: {}
    BuildingunitplacesGetUnitPlaces500Response:
      type: object
      properties: {}
      example: {}
    BuildingunitplacesCreatePlaceResponse:
      type: object
      properties: {}
      example: {}
    BuildingunitplacesCreatePlace401Response:
      type: object
      properties: {}
      example: {}
    BuildingunitplacesCreatePlace403Response:
      type: object
      properties: {}
      example: {}
    BuildingunitplacesCreatePlace422Response:
      type: object
      properties: {}
      example: {}
    BuildingunitplacesCreatePlace500Response:
      type: object
      properties: {}
      example: {}
    BuildingunitplacesUpdatePlaceResponse:
      type: object
      properties: {}
      example: {}
    BuildingunitplacesUpdatePlace403Response:
      type: object
      properties: {}
      example: {}
    BuildingunitplacesUpdatePlace422Response:
      type: object
      properties: {}
      example: {}
    BuildingunitplacesUpdatePlace500Response:
      type: object
      properties: {}
      example: {}
    BuildingunitplacestimeboxedsGetBuildingEnergiesResponse:
      type: object
      properties: {}
      example: {}
    BuildingunitplacestimeboxedsGetBuildingEnergies401Response:
      type: object
      properties: {}
      example: {}
    BuildingunitplacestimeboxedsGetBuildingEnergies500Response:
      type: object
      properties: {}
      example: {}
    BuildingunitplacestimeboxedsCreateTimeboxedResponse:
      type: object
      properties: {}
      example: {}
    BuildingunitplacestimeboxedsCreateTimeboxed401Response:
      type: object
      properties: {}
      example: {}
    BuildingunitplacestimeboxedsCreateTimeboxed403Response:
      type: object
      properties: {}
      example: {}
    BuildingunitplacestimeboxedsCreateTimeboxed422Response:
      type: object
      properties: {}
      example: {}
    BuildingunitplacestimeboxedsCreateTimeboxed500Response:
      type: object
      properties: {}
      example: {}
    BuildingunitplacestimeboxedsUpdateTimeboxedResponse:
      type: object
      properties: {}
      example: {}
    BuildingunitplacestimeboxedsUpdateTimeboxed403Response:
      type: object
      properties: {}
      example: {}
    BuildingunitplacestimeboxedsUpdateTimeboxed422Response:
      type: object
      properties: {}
      example: {}
    BuildingunitplacestimeboxedsUpdateTimeboxed500Response:
      type: object
      properties: {}
      example: {}
    BuildingunitplacespropertiesReturnPropertiesResponse:
      type: object
      properties: {}
      example: {}
    BuildingunitplacespropertiesReturnProperties401Response:
      type: object
      properties: {}
      example: {}
    BuildingunitplacespropertiesReturnProperties500Response:
      type: object
      properties: {}
      example: {}
    BuildingunitplacespropertiesCreateNewResponse:
      type: object
      properties: {}
      example: {}
    BuildingunitplacespropertiesCreateNew401Response:
      type: object
      properties: {}
      example: {}
    BuildingunitplacespropertiesCreateNew403Response:
      type: object
      properties: {}
      example: {}
    BuildingunitplacespropertiesCreateNew422Response:
      type: object
      properties: {}
      example: {}
    BuildingunitplacespropertiesCreateNew500Response:
      type: object
      properties: {}
      example: {}
    BuildingunitplacespropertiesUpdatePropertyResponse:
      type: object
      properties: {}
      example: {}
    BuildingunitplacespropertiesUpdateProperty403Response:
      type: object
      properties: {}
      example: {}
    BuildingunitplacespropertiesUpdateProperty422Response:
      type: object
      properties: {}
      example: {}
    BuildingunitplacespropertiesUpdateProperty500Response:
      type: object
      properties: {}
      example: {}
    PeopleGetAllWithinOrganisationResponse:
      type: object
      properties: {}
      example: {}
    PeopleGetAllWithinOrganisation401Response:
      type: object
      properties: {}
      example: {}
    PeopleGetAllWithinOrganisation403Response:
      type: object
      properties: {}
      example: {}
    PeopleGetAllWithinOrganisation422Response:
      type: object
      properties: {}
      example: {}
    PeopleGetAllWithinOrganisation500Response:
      type: object
      properties: {}
      example: {}
    PeopleCreatePersonResponse:
      type: object
      properties: {}
      example: {}
    PeopleCreatePerson401Response:
      type: object
      properties: {}
      example: {}
    PeopleCreatePerson403Response:
      type: object
      properties: {}
      example: {}
    PeopleCreatePerson422Response:
      type: object
      properties: {}
      example: {}
    PeopleCreatePerson500Response:
      type: object
      properties: {}
      example: {}
    PeopleDeletePersonWithinOrganisationResponse:
      type: object
      properties: {}
      example: {}
    PeopleDeletePersonWithinOrganisation401Response:
      type: object
      properties: {}
      example: {}
    PeopleDeletePersonWithinOrganisation403Response:
      type: object
      properties: {}
      example: {}
    PeopleDeletePersonWithinOrganisation404Response:
      type: object
      properties: {}
      example: {}
    PeopleDeletePersonWithinOrganisation422Response:
      type: object
      properties: {}
      example: {}
    PeopleDeletePersonWithinOrganisation500Response:
      type: object
      properties: {}
      example: {}
    PeopleShowPersonResponse:
      type: object
      properties: {}
      example: {}
    PeopleShowPerson401Response:
      type: object
      properties: {}
      example: {}
    PeopleShowPerson403Response:
      type: object
      properties: {}
      example: {}
    PeopleShowPerson404Response:
      type: object
      properties: {}
      example: {}
    PeopleShowPerson422Response:
      type: object
      properties: {}
      example: {}
    PeopleShowPerson500Response:
      type: object
      properties: {}
      example: {}
    PeopleUpdatePersonResponse:
      type: object
      properties: {}
      example: {}
    PeopleUpdatePerson401Response:
      type: object
      properties: {}
      example: {}
    PeopleUpdatePerson403Response:
      type: object
      properties: {}
      example: {}
    PeopleUpdatePerson422Response:
      type: object
      properties: {}
      example: {}
    PeopleUpdatePerson500Response:
      type: object
      properties: {}
      example: {}
    ReporttemplatesGetAllTemplatesResponse:
      type: object
      properties: {}
      example: {}
    ReporttemplatesGetAllTemplates401Response:
      type: object
      properties: {}
      example: {}
    ReporttemplatesGetAllTemplates403Response:
      type: object
      properties: {}
      example: {}
    ReporttemplatesGetAllTemplates422Response:
      type: object
      properties: {}
      example: {}
    ReporttemplatesGetAllTemplates500Response:
      type: object
      properties: {}
      example: {}
    ReporttemplatesCreateNewTemplateResponse:
      type: object
      properties: {}
      example: {}
    ReporttemplatesCreateNewTemplate401Response:
      type: object
      properties: {}
      example: {}
    ReporttemplatesCreateNewTemplate403Response:
      type: object
      properties: {}
      example: {}
    ReporttemplatesCreateNewTemplate422Response:
      type: object
      properties: {}
      example: {}
    ReporttemplatesCreateNewTemplate500Response:
      type: object
      properties: {}
      example: {}
    ReporttemplatesDeleteReportTemplateResponse:
      type: object
      properties: {}
      example: {}
    ReporttemplatesDeleteReportTemplate401Response:
      type: object
      properties: {}
      example: {}
    ReporttemplatesDeleteReportTemplate403Response:
      type: object
      properties: {}
      example: {}
    ReporttemplatesDeleteReportTemplate404Response:
      type: object
      properties: {}
      example: {}
    ReporttemplatesDeleteReportTemplate422Response:
      type: object
      properties: {}
      example: {}
    ReporttemplatesDeleteReportTemplate500Response:
      type: object
      properties: {}
      example: {}
    ReporttemplatesShowTemplateResponse:
      type: object
      properties: {}
      example: {}
    ReporttemplatesShowTemplate401Response:
      type: object
      properties: {}
      example: {}
    ReporttemplatesShowTemplate403Response:
      type: object
      properties: {}
      example: {}
    ReporttemplatesShowTemplate404Response:
      type: object
      properties: {}
      example: {}
    ReporttemplatesShowTemplate422Response:
      type: object
      properties: {}
      example: {}
    ReporttemplatesShowTemplate500Response:
      type: object
      properties: {}
      example: {}
    ReporttemplatesUpdateTemplateResponse:
      type: object
      properties: {}
      example: {}
    ReporttemplatesUpdateTemplate401Response:
      type: object
      properties: {}
      example: {}
    ReporttemplatesUpdateTemplate403Response:
      type: object
      properties: {}
      example: {}
    ReporttemplatesUpdateTemplate404Response:
      type: object
      properties: {}
      example: {}
    ReporttemplatesUpdateTemplate422Response:
      type: object
      properties: {}
      example: {}
    ReporttemplatesUpdateTemplate500Response:
      type: object
      properties: {}
      example: {}
    ReportaccountschemasGetAllResponse:
      type: object
      properties: {}
      example: {}
    ReportaccountschemasGetAll401Response:
      type: object
      properties: {}
      example: {}
    ReportaccountschemasGetAll403Response:
      type: object
      properties: {}
      example: {}
    ReportaccountschemasGetAll422Response:
      type: object
      properties: {}
      example: {}
    ReportaccountschemasGetAll500Response:
      type: object
      properties: {}
      example: {}
    ReportaccountschemasCreateNewReportAccountSchemaResponse:
      type: object
      properties: {}
      example: {}
    ReportaccountschemasCreateNewReportAccountSchema401Response:
      type: object
      properties: {}
      example: {}
    ReportaccountschemasCreateNewReportAccountSchema403Response:
      type: object
      properties: {}
      example: {}
    ReportaccountschemasCreateNewReportAccountSchema422Response:
      type: object
      properties: {}
      example: {}
    ReportaccountschemasCreateNewReportAccountSchema500Response:
      type: object
      properties: {}
      example: {}
    ReportaccountschemasDeleteSchemaResponse:
      type: object
      properties: {}
      example: {}
    ReportaccountschemasDeleteSchema401Response:
      type: object
      properties: {}
      example: {}
    ReportaccountschemasDeleteSchema403Response:
      type: object
      properties: {}
      example: {}
    ReportaccountschemasDeleteSchema404Response:
      type: object
      properties: {}
      example: {}
    ReportaccountschemasDeleteSchema422Response:
      type: object
      properties: {}
      example: {}
    ReportaccountschemasDeleteSchema500Response:
      type: object
      properties: {}
      example: {}
    ReportaccountschemasShowReportAccountSchemaResponse:
      type: object
      properties: {}
      example: {}
    ReportaccountschemasShowReportAccountSchema401Response:
      type: object
      properties: {}
      example: {}
    ReportaccountschemasShowReportAccountSchema403Response:
      type: object
      properties: {}
      example: {}
    ReportaccountschemasShowReportAccountSchema404Response:
      type: object
      properties: {}
      example: {}
    ReportaccountschemasShowReportAccountSchema422Response:
      type: object
      properties: {}
      example: {}
    ReportaccountschemasShowReportAccountSchema500Response:
      type: object
      properties: {}
      example: {}
    ReportaccountschemasUpdateSchemaResponse:
      type: object
      properties: {}
      example: {}
    ReportaccountschemasUpdateSchema401Response:
      type: object
      properties: {}
      example: {}
    ReportaccountschemasUpdateSchema403Response:
      type: object
      properties: {}
      example: {}
    ReportaccountschemasUpdateSchema404Response:
      type: object
      properties: {}
      example: {}
    ReportaccountschemasUpdateSchema422Response:
      type: object
      properties: {}
      example: {}
    ReportaccountschemasUpdateSchema500Response:
      type: object
      properties: {}
      example: {}
    PersonmembershipsListWithinOrganisationResponse:
      type: object
      properties: {}
      example: {}
    PersonmembershipsListWithinOrganisation401Response:
      type: object
      properties: {}
      example: {}
    PersonmembershipsListWithinOrganisation403Response:
      type: object
      properties: {}
      example: {}
    PersonmembershipsListWithinOrganisation422Response:
      type: object
      properties: {}
      example: {}
    PersonmembershipsListWithinOrganisation500Response:
      type: object
      properties: {}
      example: {}
    PersonmembershipsCreateMembershipInPersonResponse:
      type: object
      properties: {}
      example: {}
    PersonmembershipsCreateMembershipInPerson401Response:
      type: object
      properties: {}
      example: {}
    PersonmembershipsCreateMembershipInPerson403Response:
      type: object
      properties: {}
      example: {}
    PersonmembershipsCreateMembershipInPerson422Response:
      type: object
      properties: {}
      example: {}
    PersonmembershipsCreateMembershipInPerson500Response:
      type: object
      properties: {}
      example: {}
    PersonmembershipsDestroyMembershipResponse:
      type: object
      properties: {}
      example: {}
    PersonmembershipsDestroyMembership401Response:
      type: object
      properties: {}
      example: {}
    PersonmembershipsDestroyMembership403Response:
      type: object
      properties: {}
      example: {}
    PersonmembershipsDestroyMembership404Response:
      type: object
      properties: {}
      example: {}
    PersonmembershipsDestroyMembership422Response:
      type: object
      properties: {}
      example: {}
    PersonmembershipsDestroyMembership500Response:
      type: object
      properties: {}
      example: {}
    LevelsGetAllResponse:
      type: object
      properties: {}
      example: {}
    LevelsGetAll401Response:
      type: object
      properties: {}
      example: {}
    LevelsGetAll403Response:
      type: object
      properties: {}
      example: {}
    LevelsGetAll422Response:
      type: object
      properties: {}
      example: {}
    LevelsGetAll500Response:
      type: object
      properties: {}
      example: {}
    LevelsCreateNewLevelResponse:
      type: object
      properties: {}
      example: {}
    LevelsCreateNewLevel401Response:
      type: object
      properties: {}
      example: {}
    LevelsCreateNewLevel403Response:
      type: object
      properties: {}
      example: {}
    LevelsCreateNewLevel422Response:
      type: object
      properties: {}
      example: {}
    LevelsCreateNewLevel500Response:
      type: object
      properties: {}
      example: {}
    LevelsDeleteLevelResponse:
      type: object
      properties: {}
      example: {}
    LevelsDeleteLevel401Response:
      type: object
      properties: {}
      example: {}
    LevelsDeleteLevel403Response:
      type: object
      properties: {}
      example: {}
    LevelsDeleteLevel404Response:
      type: object
      properties: {}
      example: {}
    LevelsDeleteLevel422Response:
      type: object
      properties: {}
      example: {}
    LevelsDeleteLevel500Response:
      type: object
      properties: {}
      example: {}
    LevelsShowLevelResponse:
      type: object
      properties: {}
      example: {}
    LevelsShowLevel401Response:
      type: object
      properties: {}
      example: {}
    LevelsShowLevel403Response:
      type: object
      properties: {}
      example: {}
    LevelsShowLevel404Response:
      type: object
      properties: {}
      example: {}
    LevelsShowLevel422Response:
      type: object
      properties: {}
      example: {}
    LevelsShowLevel500Response:
      type: object
      properties: {}
      example: {}
    LevelsUpdateLevelResponse:
      type: object
      properties: {}
      example: {}
    LevelsUpdateLevel401Response:
      type: object
      properties: {}
      example: {}
    LevelsUpdateLevel403Response:
      type: object
      properties: {}
      example: {}
    LevelsUpdateLevel404Response:
      type: object
      properties: {}
      example: {}
    LevelsUpdateLevel422Response:
      type: object
      properties: {}
      example: {}
    LevelsUpdateLevel500Response:
      type: object
      properties: {}
      example: {}
    RoomandzonetypesGetAllResponse:
      type: object
      properties: {}
      example: {}
    RoomandzonetypesGetAll401Response:
      type: object
      properties: {}
      example: {}
    RoomandzonetypesGetAll403Response:
      type: object
      properties: {}
      example: {}
    RoomandzonetypesGetAll422Response:
      type: object
      properties: {}
      example: {}
    RoomandzonetypesGetAll500Response:
      type: object
      properties: {}
      example: {}
    RoomsGetAllWithinOrganisationResponse:
      type: object
      properties: {}
      example: {}
    RoomsGetAllWithinOrganisation401Response:
      type: object
      properties: {}
      example: {}
    RoomsGetAllWithinOrganisation403Response:
      type: object
      properties: {}
      example: {}
    RoomsGetAllWithinOrganisation422Response:
      type: object
      properties: {}
      example: {}
    RoomsGetAllWithinOrganisation500Response:
      type: object
      properties: {}
      example: {}
    RoomsCreateRoomResponse:
      type: object
      properties: {}
      example: {}
    RoomsCreateRoom401Response:
      type: object
      properties: {}
      example: {}
    RoomsCreateRoom403Response:
      type: object
      properties: {}
      example: {}
    RoomsCreateRoom422Response:
      type: object
      properties: {}
      example: {}
    RoomsCreateRoom500Response:
      type: object
      properties: {}
      example: {}
    RoomsDeleteRoomWithinOrganisationResponse:
      type: object
      properties: {}
      example: {}
    RoomsDeleteRoomWithinOrganisation401Response:
      type: object
      properties: {}
      example: {}
    RoomsDeleteRoomWithinOrganisation403Response:
      type: object
      properties: {}
      example: {}
    RoomsDeleteRoomWithinOrganisation404Response:
      type: object
      properties: {}
      example: {}
    RoomsDeleteRoomWithinOrganisation422Response:
      type: object
      properties: {}
      example: {}
    RoomsDeleteRoomWithinOrganisation500Response:
      type: object
      properties: {}
      example: {}
    RoomsShowRoomResponse:
      type: object
      properties: {}
      example: {}
    RoomsShowRoom401Response:
      type: object
      properties: {}
      example: {}
    RoomsShowRoom403Response:
      type: object
      properties: {}
      example: {}
    RoomsShowRoom404Response:
      type: object
      properties: {}
      example: {}
    RoomsShowRoom422Response:
      type: object
      properties: {}
      example: {}
    RoomsShowRoom500Response:
      type: object
      properties: {}
      example: {}
    RoomsUpdateRoomResponse:
      type: object
      properties: {}
      example: {}
    RoomsUpdateRoom401Response:
      type: object
      properties: {}
      example: {}
    RoomsUpdateRoom403Response:
      type: object
      properties: {}
      example: {}
    RoomsUpdateRoom404Response:
      type: object
      properties: {}
      example: {}
    RoomsUpdateRoom422Response:
      type: object
      properties: {}
      example: {}
    RoomsUpdateRoom500Response:
      type: object
      properties: {}
      example: {}
    ZonesCreateZoneResponse:
      type: object
      properties: {}
      example: {}
    ZonesCreateZone401Response:
      type: object
      properties: {}
      example: {}
    ZonesCreateZone403Response:
      type: object
      properties: {}
      example: {}
    ZonesCreateZone422Response:
      type: object
      properties: {}
      example: {}
    ZonesCreateZone500Response:
      type: object
      properties: {}
      example: {}
    ZonesDeleteZoneResponse:
      type: object
      properties: {}
      example: {}
    ZonesDeleteZone401Response:
      type: object
      properties: {}
      example: {}
    ZonesDeleteZone403Response:
      type: object
      properties: {}
      example: {}
    ZonesDeleteZone404Response:
      type: object
      properties: {}
      example: {}
    ZonesDeleteZone422Response:
      type: object
      properties: {}
      example: {}
    ZonesDeleteZone500Response:
      type: object
      properties: {}
      example: {}
    ZonesUpdateZoneResponse:
      type: object
      properties: {}
      example: {}
    ZonesUpdateZone401Response:
      type: object
      properties: {}
      example: {}
    ZonesUpdateZone403Response:
      type: object
      properties: {}
      example: {}
    ZonesUpdateZone404Response:
      type: object
      properties: {}
      example: {}
    ZonesUpdateZone422Response:
      type: object
      properties: {}
      example: {}
    ZonesUpdateZone500Response:
      type: object
      properties: {}
      example: {}
    DepartmentsGetAllResponse:
      type: object
      properties: {}
      example: {}
    DepartmentsGetAll401Response:
      type: object
      properties: {}
      example: {}
    DepartmentsGetAll403Response:
      type: object
      properties: {}
      example: {}
    DepartmentsGetAll422Response:
      type: object
      properties: {}
      example: {}
    DepartmentsGetAll500Response:
      type: object
      properties: {}
      example: {}
    DepartmentsCreateNewDepartmentResponse:
      type: object
      properties: {}
      example: {}
    DepartmentsCreateNewDepartment401Response:
      type: object
      properties: {}
      example: {}
    DepartmentsCreateNewDepartment403Response:
      type: object
      properties: {}
      example: {}
    DepartmentsCreateNewDepartment422Response:
      type: object
      properties: {}
      example: {}
    DepartmentsCreateNewDepartment500Response:
      type: object
      properties: {}
      example: {}
    DepartmentsMarkAsDeletedResponse:
      type: object
      properties: {}
      example: {}
    DepartmentsMarkAsDeleted401Response:
      type: object
      properties: {}
      example: {}
    DepartmentsMarkAsDeleted403Response:
      type: object
      properties: {}
      example: {}
    DepartmentsMarkAsDeleted404Response:
      type: object
      properties: {}
      example: {}
    DepartmentsMarkAsDeleted422Response:
      type: object
      properties: {}
      example: {}
    DepartmentsMarkAsDeleted500Response:
      type: object
      properties: {}
      example: {}
    DepartmentsUpdateDepartmentResponse:
      type: object
      properties: {}
      example: {}
    DepartmentsUpdateDepartment401Response:
      type: object
      properties: {}
      example: {}
    DepartmentsUpdateDepartment403Response:
      type: object
      properties: {}
      example: {}
    DepartmentsUpdateDepartment404Response:
      type: object
      properties: {}
      example: {}
    DepartmentsUpdateDepartment422Response:
      type: object
      properties: {}
      example: {}
    DepartmentsUpdateDepartment500Response:
      type: object
      properties: {}
      example: {}
    ManufacturersGetAllResponse:
      type: object
      properties: {}
      example: {}
    ManufacturersGetAll401Response:
      type: object
      properties: {}
      example: {}
    ManufacturersGetAll403Response:
      type: object
      properties: {}
      example: {}
    ManufacturersGetAll422Response:
      type: object
      properties: {}
      example: {}
    ManufacturersGetAll500Response:
      type: object
      properties: {}
      example: {}
    ManufacturersCreateNewManufacturerResponse:
      type: object
      properties: {}
      example: {}
    ManufacturersCreateNewManufacturer401Response:
      type: object
      properties: {}
      example: {}
    ManufacturersCreateNewManufacturer403Response:
      type: object
      properties: {}
      example: {}
    ManufacturersCreateNewManufacturer422Response:
      type: object
      properties: {}
      example: {}
    ManufacturersCreateNewManufacturer500Response:
      type: object
      properties: {}
      example: {}
    ManufacturersDeleteManufacturerResponse:
      type: object
      properties: {}
      example: {}
    ManufacturersDeleteManufacturer401Response:
      type: object
      properties: {}
      example: {}
    ManufacturersDeleteManufacturer403Response:
      type: object
      properties: {}
      example: {}
    ManufacturersDeleteManufacturer404Response:
      type: object
      properties: {}
      example: {}
    ManufacturersDeleteManufacturer422Response:
      type: object
      properties: {}
      example: {}
    ManufacturersDeleteManufacturer500Response:
      type: object
      properties: {}
      example: {}
    ManufacturersUpdateManufacturerResponse:
      type: object
      properties: {}
      example: {}
    ManufacturersUpdateManufacturer401Response:
      type: object
      properties: {}
      example: {}
    ManufacturersUpdateManufacturer403Response:
      type: object
      properties: {}
      example: {}
    ManufacturersUpdateManufacturer404Response:
      type: object
      properties: {}
      example: {}
    ManufacturersUpdateManufacturer422Response:
      type: object
      properties: {}
      example: {}
    ManufacturersUpdateManufacturer500Response:
      type: object
      properties: {}
      example: {}
    ManufacturersListModelTypesResponse:
      type: object
      properties: {}
      example: {}
    ManufacturersListModelTypes401Response:
      type: object
      properties: {}
      example: {}
    ManufacturersListModelTypes403Response:
      type: object
      properties: {}
      example: {}
    ManufacturersListModelTypes422Response:
      type: object
      properties: {}
      example: {}
    ManufacturersListModelTypes500Response:
      type: object
      properties: {}
      example: {}
    ManufacturersCreateModelTypeResponse:
      type: object
      properties: {}
      example: {}
    ManufacturersCreateModelType401Response:
      type: object
      properties: {}
      example: {}
    ManufacturersCreateModelType403Response:
      type: object
      properties: {}
      example: {}
    ManufacturersCreateModelType422Response:
      type: object
      properties: {}
      example: {}
    ManufacturersCreateModelType500Response:
      type: object
      properties: {}
      example: {}
    ManufacturersDeleteModelTypeResponse:
      type: object
      properties: {}
      example: {}
    ManufacturersDeleteModelType401Response:
      type: object
      properties: {}
      example: {}
    ManufacturersDeleteModelType403Response:
      type: object
      properties: {}
      example: {}
    ManufacturersDeleteModelType404Response:
      type: object
      properties: {}
      example: {}
    ManufacturersDeleteModelType422Response:
      type: object
      properties: {}
      example: {}
    ManufacturersDeleteModelType500Response:
      type: object
      properties: {}
      example: {}
    ManufacturersUpdateModelTypeResponse:
      type: object
      properties: {}
      example: {}
    ManufacturersUpdateModelType401Response:
      type: object
      properties: {}
      example: {}
    ManufacturersUpdateModelType403Response:
      type: object
      properties: {}
      example: {}
    ManufacturersUpdateModelType404Response:
      type: object
      properties: {}
      example: {}
    ManufacturersUpdateModelType422Response:
      type: object
      properties: {}
      example: {}
    ManufacturersUpdateModelType500Response:
      type: object
      properties: {}
      example: {}
    FacilitytypesGetAllResponse:
      type: object
      properties: {}
      example: {}
    FacilitytypesGetAll401Response:
      type: object
      properties: {}
      example: {}
    FacilitytypesGetAll403Response:
      type: object
      properties: {}
      example: {}
    FacilitytypesGetAll422Response:
      type: object
      properties: {}
      example: {}
    FacilitytypesGetAll500Response:
      type: object
      properties: {}
      example: {}
    FacilitytypesGetAll200Response:
      type: object
      properties: {}
      example: {}
    FacilitytypesShowTypeResponse:
      type: object
      properties: {}
      example: {}
    FacilitytypesShowType401Response:
      type: object
      properties: {}
      example: {}
    FacilitytypesShowType403Response:
      type: object
      properties: {}
      example: {}
    FacilitytypesShowType404Response:
      type: object
      properties: {}
      example: {}
    FacilitytypesShowType422Response:
      type: object
      properties: {}
      example: {}
    FacilitytypesShowType500Response:
      type: object
      properties: {}
      example: {}
    FacilitiesGetAllWithinOrganisationResponse:
      type: object
      properties: {}
      example: {}
    FacilitiesGetAllWithinOrganisation401Response:
      type: object
      properties: {}
      example: {}
    FacilitiesGetAllWithinOrganisation403Response:
      type: object
      properties: {}
      example: {}
    FacilitiesGetAllWithinOrganisation422Response:
      type: object
      properties: {}
      example: {}
    FacilitiesGetAllWithinOrganisation500Response:
      type: object
      properties: {}
      example: {}
    FacilitiesCreateFacilityResponse:
      type: object
      properties: {}
      example: {}
    FacilitiesCreateFacility401Response:
      type: object
      properties: {}
      example: {}
    FacilitiesCreateFacility403Response:
      type: object
      properties: {}
      example: {}
    FacilitiesCreateFacility422Response:
      type: object
      properties: {}
      example: {}
    FacilitiesCreateFacility500Response:
      type: object
      properties: {}
      example: {}
    FacilitiesDeleteFacilityResponse:
      type: object
      properties: {}
      example: {}
    FacilitiesDeleteFacility401Response:
      type: object
      properties: {}
      example: {}
    FacilitiesDeleteFacility403Response:
      type: object
      properties: {}
      example: {}
    FacilitiesDeleteFacility404Response:
      type: object
      properties: {}
      example: {}
    FacilitiesDeleteFacility422Response:
      type: object
      properties: {}
      example: {}
    FacilitiesDeleteFacility500Response:
      type: object
      properties: {}
      example: {}
    FacilitiesShowFacilityResponse:
      type: object
      properties: {}
      example: {}
    FacilitiesShowFacility401Response:
      type: object
      properties: {}
      example: {}
    FacilitiesShowFacility403Response:
      type: object
      properties: {}
      example: {}
    FacilitiesShowFacility404Response:
      type: object
      properties: {}
      example: {}
    FacilitiesShowFacility422Response:
      type: object
      properties: {}
      example: {}
    FacilitiesShowFacility500Response:
      type: object
      properties: {}
      example: {}
    FacilitiesUpdateFacilityResponse:
      type: object
      properties: {}
      example: {}
    FacilitiesUpdateFacility401Response:
      type: object
      properties: {}
      example: {}
    FacilitiesUpdateFacility403Response:
      type: object
      properties: {}
      example: {}
    FacilitiesUpdateFacility404Response:
      type: object
      properties: {}
      example: {}
    FacilitiesUpdateFacility422Response:
      type: object
      properties: {}
      example: {}
    FacilitiesUpdateFacility500Response:
      type: object
      properties: {}
      example: {}
    ActivitiesListWithFiltersResponse:
      type: object
      properties: {}
      example: {}
    ActivitiesListWithFilters401Response:
      type: object
      properties: {}
      example: {}
    ActivitiesListWithFilters403Response:
      type: object
      properties: {}
      example: {}
    ActivitiesListWithFilters422Response:
      type: object
      properties: {}
      example: {}
    ActivitiesListWithFilters500Response:
      type: object
      properties: {}
      example: {}
    ActivitiesCreateActivityResponse:
      type: object
      properties: {}
      example: {}
    ActivitiesCreateActivity401Response:
      type: object
      properties: {}
      example: {}
    ActivitiesCreateActivity403Response:
      type: object
      properties: {}
      example: {}
    ActivitiesCreateActivity422Response:
      type: object
      properties: {}
      example: {}
    ActivitiesCreateActivity500Response:
      type: object
      properties: {}
      example: {}
    ActivitiesRemoveActivityResponse:
      type: object
      properties: {}
      example: {}
    ActivitiesRemoveActivity403Response:
      type: object
      properties: {}
      example: {}
    ActivitiesRemoveActivity422Response:
      type: object
      properties: {}
      example: {}
    ActivitiesRemoveActivity500Response:
      type: object
      properties: {}
      example: {}
    ActivitiesShowActivityResponse:
      type: object
      properties: {}
      example: {}
    ActivitiesShowActivity401Response:
      type: object
      properties: {}
      example: {}
    ActivitiesShowActivity403Response:
      type: object
      properties: {}
      example: {}
    ActivitiesShowActivity404Response:
      type: object
      properties: {}
      example: {}
    ActivitiesShowActivity422Response:
      type: object
      properties: {}
      example: {}
    ActivitiesShowActivity500Response:
      type: object
      properties: {}
      example: {}
    ActivitiesUpdateActivityResponse:
      type: object
      properties: {}
      example: {}
    ActivitiesUpdateActivity403Response:
      type: object
      properties: {}
      example: {}
    ActivitiesUpdateActivity422Response:
      type: object
      properties: {}
      example: {}
    ActivitiesUpdateActivity500Response:
      type: object
      properties: {}
      example: {}
    ActivitiesShowActivity200Response:
      type: object
      properties: {}
      example: {}
    ActivitytypesGetAllResponse:
      type: object
      properties: {}
      example: {}
    ActivitytypesGetAll401Response:
      type: object
      properties: {}
      example: {}
    ActivitytypesGetAll403Response:
      type: object
      properties: {}
      example: {}
    ActivitytypesGetAll422Response:
      type: object
      properties: {}
      example: {}
    ActivitytypesGetAll500Response:
      type: object
      properties: {}
      example: {}
    ActivitytypesCreateActivityResponse:
      type: object
      properties: {}
      example: {}
    ActivitytypesCreateActivity401Response:
      type: object
      properties: {}
      example: {}
    ActivitytypesCreateActivity403Response:
      type: object
      properties: {}
      example: {}
    ActivitytypesCreateActivity422Response:
      type: object
      properties: {}
      example: {}
    ActivitytypesCreateActivity500Response:
      type: object
      properties: {}
      example: {}
    ActivitytypesDeleteActivityTypeResponse:
      type: object
      properties: {}
      example: {}
    ActivitytypesDeleteActivityType403Response:
      type: object
      properties: {}
      example: {}
    ActivitytypesDeleteActivityType422Response:
      type: object
      properties: {}
      example: {}
    ActivitytypesDeleteActivityType500Response:
      type: object
      properties: {}
      example: {}
    ActivitytypesShowActivityTypeResponse:
      type: object
      properties: {}
      example: {}
    ActivitytypesShowActivityType401Response:
      type: object
      properties: {}
      example: {}
    ActivitytypesShowActivityType403Response:
      type: object
      properties: {}
      example: {}
    ActivitytypesShowActivityType404Response:
      type: object
      properties: {}
      example: {}
    ActivitytypesShowActivityType422Response:
      type: object
      properties: {}
      example: {}
    ActivitytypesShowActivityType500Response:
      type: object
      properties: {}
      example: {}
    ActivitytypesUpdateTypeResponse:
      type: object
      properties: {}
      example: {}
    ActivitytypesUpdateType403Response:
      type: object
      properties: {}
      example: {}
    ActivitytypesUpdateType422Response:
      type: object
      properties: {}
      example: {}
    ActivitytypesUpdateType500Response:
      type: object
      properties: {}
      example: {}
    AttachmentsCreateNewAttachmentResponse:
      type: object
      properties: {}
      example: {}
    AttachmentsCreateNewAttachment401Response:
      type: object
      properties: {}
      example: {}
    AttachmentsCreateNewAttachment403Response:
      type: object
      properties: {}
      example: {}
    AttachmentsCreateNewAttachment422Response:
      type: object
      properties: {}
      example: {}
    AttachmentsCreateNewAttachment500Response:
      type: object
      properties: {}
      example: {}
    AttachmentsDuplicateAttachmentResponse:
      type: object
      properties: {}
      example: {}
    AttachmentsDuplicateAttachment401Response:
      type: object
      properties: {}
      example: {}
    AttachmentsDuplicateAttachment403Response:
      type: object
      properties: {}
      example: {}
    AttachmentsDuplicateAttachment422Response:
      type: object
      properties: {}
      example: {}
    AttachmentsDuplicateAttachment500Response:
      type: object
      properties: {}
      example: {}
    AttachmentsMarkAsDeletedResponse:
      type: object
      properties: {}
      example: {}
    AttachmentsMarkAsDeleted401Response:
      type: object
      properties: {}
      example: {}
    AttachmentsMarkAsDeleted403Response:
      type: object
      properties: {}
      example: {}
    AttachmentsMarkAsDeleted404Response:
      type: object
      properties: {}
      example: {}
    AttachmentsMarkAsDeleted422Response:
      type: object
      properties: {}
      example: {}
    AttachmentsMarkAsDeleted500Response:
      type: object
      properties: {}
      example: {}
    ImagesCreateImageResponse:
      type: object
      properties: {}
      example: {}
    ImagesCreateImage401Response:
      type: object
      properties: {}
      example: {}
    ImagesCreateImage403Response:
      type: object
      properties: {}
      example: {}
    ImagesCreateImage422Response:
      type: object
      properties: {}
      example: {}
    ImagesCreateImage500Response:
      type: object
      properties: {}
      example: {}
    ImagesMarkAsDeletedResponse:
      type: object
      properties: {}
      example: {}
    ImagesMarkAsDeleted401Response:
      type: object
      properties: {}
      example: {}
    ImagesMarkAsDeleted403Response:
      type: object
      properties: {}
      example: {}
    ImagesMarkAsDeleted404Response:
      type: object
      properties: {}
      example: {}
    ImagesMarkAsDeleted422Response:
      type: object
      properties: {}
      example: {}
    ImagesMarkAsDeleted500Response:
      type: object
      properties: {}
      example: {}
    ImagesUpdateImageResponse:
      type: object
      properties: {}
      example: {}
    ImagesUpdateImage401Response:
      type: object
      properties: {}
      example: {}
    ImagesUpdateImage403Response:
      type: object
      properties: {}
      example: {}
    ImagesUpdateImage404Response:
      type: object
      properties: {}
      example: {}
    ImagesUpdateImage422Response:
      type: object
      properties: {}
      example: {}
    ImagesUpdateImage500Response:
      type: object
      properties: {}
      example: {}
    TimedependentattributesGetAllWithinParentResponse:
      type: object
      properties: {}
      example: {}
    TimedependentattributesGetAllWithinParent401Response:
      type: object
      properties: {}
      example: {}
    TimedependentattributesGetAllWithinParent403Response:
      type: object
      properties: {}
      example: {}
    TimedependentattributesGetAllWithinParent422Response:
      type: object
      properties: {}
      example: {}
    TimedependentattributesGetAllWithinParent500Response:
      type: object
      properties: {}
      example: {}
    TimedependentattributesCreateAttributeResponse:
      type: object
      properties: {}
      example: {}
    TimedependentattributesCreateAttribute401Response:
      type: object
      properties: {}
      example: {}
    TimedependentattributesCreateAttribute403Response:
      type: object
      properties: {}
      example: {}
    TimedependentattributesCreateAttribute422Response:
      type: object
      properties: {}
      example: {}
    TimedependentattributesCreateAttribute500Response:
      type: object
      properties: {}
      example: {}
    TimedependentattributesDeleteTimeDependentAttributeResponse:
      type: object
      properties: {}
      example: {}
    TimedependentattributesDeleteTimeDependentAttribute401Response:
      type: object
      properties: {}
      example: {}
    TimedependentattributesDeleteTimeDependentAttribute403Response:
      type: object
      properties: {}
      example: {}
    TimedependentattributesDeleteTimeDependentAttribute404Response:
      type: object
      properties: {}
      example: {}
    TimedependentattributesDeleteTimeDependentAttribute422Response:
      type: object
      properties: {}
      example: {}
    TimedependentattributesDeleteTimeDependentAttribute500Response:
      type: object
      properties: {}
      example: {}
    TimedependentattributesUpdateAttributeResponse:
      type: object
      properties: {}
      example: {}
    TimedependentattributesUpdateAttribute401Response:
      type: object
      properties: {}
      example: {}
    TimedependentattributesUpdateAttribute403Response:
      type: object
      properties: {}
      example: {}
    TimedependentattributesUpdateAttribute404Response:
      type: object
      properties: {}
      example: {}
    TimedependentattributesUpdateAttribute422Response:
      type: object
      properties: {}
      example: {}
    TimedependentattributesUpdateAttribute500Response:
      type: object
      properties: {}
      example: {}
    WebhooksGetAllResponse:
      type: object
      properties: {}
      example: {}
    WebhooksGetAll401Response:
      type: object
      properties: {}
      example: {}
    WebhooksGetAll403Response:
      type: object
      properties: {}
      example: {}
    WebhooksGetAll422Response:
      type: object
      properties: {}
      example: {}
    WebhooksGetAll500Response:
      type: object
      properties: {}
      example: {}
    WebhooksCreateNewWebhookResponse:
      type: object
      properties: {}
      example: {}
    WebhooksCreateNewWebhook401Response:
      type: object
      properties: {}
      example: {}
    WebhooksCreateNewWebhook403Response:
      type: object
      properties: {}
      example: {}
    WebhooksCreateNewWebhook422Response:
      type: object
      properties: {}
      example: {}
    WebhooksCreateNewWebhook500Response:
      type: object
      properties: {}
      example: {}
    WebhooksDeleteWebhookByIdResponse:
      type: object
      properties: {}
      example: {}
    WebhooksDeleteWebhookById401Response:
      type: object
      properties: {}
      example: {}
    WebhooksDeleteWebhookById403Response:
      type: object
      properties: {}
      example: {}
    WebhooksDeleteWebhookById404Response:
      type: object
      properties: {}
      example: {}
    WebhooksDeleteWebhookById422Response:
      type: object
      properties: {}
      example: {}
    WebhooksDeleteWebhookById500Response:
      type: object
      properties: {}
      example: {}
    WebhooksShowWebhookResponse:
      type: object
      properties: {}
      example: {}
    WebhooksShowWebhook401Response:
      type: object
      properties: {}
      example: {}
    WebhooksShowWebhook403Response:
      type: object
      properties: {}
      example: {}
    WebhooksShowWebhook404Response:
      type: object
      properties: {}
      example: {}
    WebhooksShowWebhook422Response:
      type: object
      properties: {}
      example: {}
    WebhooksShowWebhook500Response:
      type: object
      properties: {}
      example: {}
    WebhooksUpdateWebhookResponse:
      type: object
      properties: {}
      example: {}
    WebhooksUpdateWebhook401Response:
      type: object
      properties: {}
      example: {}
    WebhooksUpdateWebhook403Response:
      type: object
      properties: {}
      example: {}
    WebhooksUpdateWebhook422Response:
      type: object
      properties: {}
      example: {}
    WebhooksUpdateWebhook500Response:
      type: object
      properties: {}
      example: {}
    TagsGetAllTagsWithCountsResponse:
      type: object
      properties: {}
      example: {}
    TagsGetAllTagsWithCounts401Response:
      type: object
      properties: {}
      example: {}
    TagsGetAllTagsWithCounts403Response:
      type: object
      properties: {}
      example: {}
    TagsGetAllTagsWithCounts422Response:
      type: object
      properties: {}
      example: {}
    TagsGetAllTagsWithCounts500Response:
      type: object
      properties: {}
      example: {}
    TagsCreateTagResponse:
      type: object
      properties: {}
      example: {}
    TagsCreateTag401Response:
      type: object
      properties: {}
      example: {}
    TagsCreateTag403Response:
      type: object
      properties: {}
      example: {}
    TagsCreateTag422Response:
      type: object
      properties: {}
      example: {}
    TagsCreateTag500Response:
      type: object
      properties: {}
      example: {}
    TagsMarkAsDeletedResponse:
      type: object
      properties: {}
      example: {}
    TagsMarkAsDeleted401Response:
      type: object
      properties: {}
      example: {}
    TagsMarkAsDeleted403Response:
      type: object
      properties: {}
      example: {}
    TagsMarkAsDeleted404Response:
      type: object
      properties: {}
      example: {}
    TagsMarkAsDeleted422Response:
      type: object
      properties: {}
      example: {}
    TagsMarkAsDeleted500Response:
      type: object
      properties: {}
      example: {}
    TagsUpdateTagResponse:
      type: object
      properties: {}
      example: {}
    TagsUpdateTag403Response:
      type: object
      properties: {}
      example: {}
    TagsUpdateTag422Response:
      type: object
      properties: {}
      example: {}
    TagsUpdateTag500Response:
      type: object
      properties: {}
      example: {}
    TagsMergeMasterTagsResponse:
      type: object
      properties: {}
      example: {}
    TagsMergeMasterTags401Response:
      type: object
      properties: {}
      example: {}
    TagsMergeMasterTags403Response:
      type: object
      properties: {}
      example: {}
    TagsMergeMasterTags422Response:
      type: object
      properties: {}
      example: {}
    TagsMergeMasterTags500Response:
      type: object
      properties: {}
      example: {}
    TagsAssignBuildingsResponse:
      type: object
      properties: {}
      example: {}
    TagsAssignBuildings401Response:
      type: object
      properties: {}
      example: {}
    TagsAssignBuildings403Response:
      type: object
      properties: {}
      example: {}
    TagsAssignBuildings422Response:
      type: object
      properties: {}
      example: {}
    TagsAssignBuildings500Response:
      type: object
      properties: {}
      example: {}
    CsvimportsGetAllImportsResponse:
      type: object
      properties: {}
      example: {}
    CsvimportsGetAllImports401Response:
      type: object
      properties: {}
      example: {}
    CsvimportsGetAllImports500Response:
      type: object
      properties: {}
      example: {}
    CsvimportsCreateByFileResponse:
      type: object
      properties: {}
      example: {}
    CsvimportsCreateByFile403Response:
      type: object
      properties: {}
      example: {}
    CsvimportsCreateByFile422Response:
      type: object
      properties: {}
      example: {}
    CsvimportsCreateByFile500Response:
      type: object
      properties: {}
      example: {}
    CsvimportsGetInfoResponse:
      type: object
      properties: {}
      example: {}
    CsvimportsGetInfo401Response:
      type: object
      properties: {}
      example: {}
    CsvimportsGetInfo403Response:
      type: object
      properties: {}
      example: {}
    CsvimportsGetInfo404Response:
      type: object
      properties: {}
      example: {}
    CsvimportsGetInfo422Response:
      type: object
      properties: {}
      example: {}
    CsvimportsGetInfo500Response:
      type: object
      properties: {}
      example: {}
    CsvimportsUpdateImportResponse:
      type: object
      properties: {}
      example: {}
    CsvimportsUpdateImport403Response:
      type: object
      properties: {}
      example: {}
    CsvimportsUpdateImport422Response:
      type: object
      properties: {}
      example: {}
    CsvimportsUpdateImport500Response:
      type: object
      properties: {}
      example: {}
    ScorecardsListAllScorecardsResponse:
      type: object
      properties: {}
      example: {}
    ScorecardsListAllScorecards401Response:
      type: object
      properties: {}
      example: {}
    ScorecardsListAllScorecards403Response:
      type: object
      properties: {}
      example: {}
    ScorecardsListAllScorecards422Response:
      type: object
      properties: {}
      example: {}
    ScorecardsListAllScorecards500Response:
      type: object
      properties: {}
      example: {}
    ScorecardsCreateNewScorecardResponse:
      type: object
      properties: {}
      example: {}
    ScorecardsCreateNewScorecard401Response:
      type: object
      properties: {}
      example: {}
    ScorecardsCreateNewScorecard403Response:
      type: object
      properties: {}
      example: {}
    ScorecardsCreateNewScorecard422Response:
      type: object
      properties: {}
      example: {}
    ScorecardsCreateNewScorecard500Response:
      type: object
      properties: {}
      example: {}
    ScorecardsDeleteWithinAccountResponse:
      type: object
      properties: {}
      example: {}
    ScorecardsDeleteWithinAccount401Response:
      type: object
      properties: {}
      example: {}
    ScorecardsDeleteWithinAccount403Response:
      type: object
      properties: {}
      example: {}
    ScorecardsDeleteWithinAccount404Response:
      type: object
      properties: {}
      example: {}
    ScorecardsDeleteWithinAccount422Response:
      type: object
      properties: {}
      example: {}
    ScorecardsDeleteWithinAccount500Response:
      type: object
      properties: {}
      example: {}
    ScorecardsShowDetailsResponse:
      type: object
      properties: {}
      example: {}
    ScorecardsShowDetails401Response:
      type: object
      properties: {}
      example: {}
    ScorecardsShowDetails403Response:
      type: object
      properties: {}
      example: {}
    ScorecardsShowDetails404Response:
      type: object
      properties: {}
      example: {}
    ScorecardsShowDetails422Response:
      type: object
      properties: {}
      example: {}
    ScorecardsShowDetails500Response:
      type: object
      properties: {}
      example: {}
    ScorecardsUpdateScorecardResponse:
      type: object
      properties: {}
      example: {}
    ScorecardsUpdateScorecard401Response:
      type: object
      properties: {}
      example: {}
    ScorecardsUpdateScorecard403Response:
      type: object
      properties: {}
      example: {}
    ScorecardsUpdateScorecard422Response:
      type: object
      properties: {}
      example: {}
    ScorecardsUpdateScorecard500Response:
      type: object
      properties: {}
      example: {}
    ScorecardsegmentsCreateNewSegmentResponse:
      type: object
      properties: {}
      example: {}
    ScorecardsegmentsCreateNewSegment401Response:
      type: object
      properties: {}
      example: {}
    ScorecardsegmentsCreateNewSegment403Response:
      type: object
      properties: {}
      example: {}
    ScorecardsegmentsCreateNewSegment422Response:
      type: object
      properties: {}
      example: {}
    ScorecardsegmentsCreateNewSegment500Response:
      type: object
      properties: {}
      example: {}
    ScorecardsegmentsDeleteSegmentResponse:
      type: object
      properties: {}
      example: {}
    ScorecardsegmentsDeleteSegment401Response:
      type: object
      properties: {}
      example: {}
    ScorecardsegmentsDeleteSegment403Response:
      type: object
      properties: {}
      example: {}
    ScorecardsegmentsDeleteSegment404Response:
      type: object
      properties: {}
      example: {}
    ScorecardsegmentsDeleteSegment422Response:
      type: object
      properties: {}
      example: {}
    ScorecardsegmentsDeleteSegment500Response:
      type: object
      properties: {}
      example: {}
    ScorecardsegmentsUpdateSegmentResponse:
      type: object
      properties: {}
      example: {}
    ScorecardsegmentsUpdateSegment401Response:
      type: object
      properties: {}
      example: {}
    ScorecardsegmentsUpdateSegment403Response:
      type: object
      properties: {}
      example: {}
    ScorecardsegmentsUpdateSegment422Response:
      type: object
      properties: {}
      example: {}
    ScorecardsegmentsUpdateSegment500Response:
      type: object
      properties: {}
      example: {}
    ScorecardtopicsCreateNewTopicResponse:
      type: object
      properties: {}
      example: {}
    ScorecardtopicsCreateNewTopic401Response:
      type: object
      properties: {}
      example: {}
    ScorecardtopicsCreateNewTopic403Response:
      type: object
      properties: {}
      example: {}
    ScorecardtopicsCreateNewTopic422Response:
      type: object
      properties: {}
      example: {}
    ScorecardtopicsCreateNewTopic500Response:
      type: object
      properties: {}
      example: {}
    ScorecardtopicsDeleteTopicResponse:
      type: object
      properties: {}
      example: {}
    ScorecardtopicsDeleteTopic401Response:
      type: object
      properties: {}
      example: {}
    ScorecardtopicsDeleteTopic403Response:
      type: object
      properties: {}
      example: {}
    ScorecardtopicsDeleteTopic404Response:
      type: object
      properties: {}
      example: {}
    ScorecardtopicsDeleteTopic422Response:
      type: object
      properties: {}
      example: {}
    ScorecardtopicsDeleteTopic500Response:
      type: object
      properties: {}
      example: {}
    ScorecardtopicsUpdateTopicResponse:
      type: object
      properties: {}
      example: {}
    ScorecardtopicsUpdateTopic401Response:
      type: object
      properties: {}
      example: {}
    ScorecardtopicsUpdateTopic403Response:
      type: object
      properties: {}
      example: {}
    ScorecardtopicsUpdateTopic422Response:
      type: object
      properties: {}
      example: {}
    ScorecardtopicsUpdateTopic500Response:
      type: object
      properties: {}
      example: {}
    ScorecardsubtopicsCreateSubtopicResponse:
      type: object
      properties: {}
      example: {}
    ScorecardsubtopicsCreateSubtopic401Response:
      type: object
      properties: {}
      example: {}
    ScorecardsubtopicsCreateSubtopic403Response:
      type: object
      properties: {}
      example: {}
    ScorecardsubtopicsCreateSubtopic422Response:
      type: object
      properties: {}
      example: {}
    ScorecardsubtopicsCreateSubtopic500Response:
      type: object
      properties: {}
      example: {}
    ScorecardsubtopicsDeleteSubtopicResponse:
      type: object
      properties: {}
      example: {}
    ScorecardsubtopicsDeleteSubtopic401Response:
      type: object
      properties: {}
      example: {}
    ScorecardsubtopicsDeleteSubtopic403Response:
      type: object
      properties: {}
      example: {}
    ScorecardsubtopicsDeleteSubtopic404Response:
      type: object
      properties: {}
      example: {}
    ScorecardsubtopicsDeleteSubtopic422Response:
      type: object
      properties: {}
      example: {}
    ScorecardsubtopicsDeleteSubtopic500Response:
      type: object
      properties: {}
      example: {}
    ScorecardsubtopicsUpdateSubtopicResponse:
      type: object
      properties: {}
      example: {}
    ScorecardsubtopicsUpdateSubtopic401Response:
      type: object
      properties: {}
      example: {}
    ScorecardsubtopicsUpdateSubtopic403Response:
      type: object
      properties: {}
      example: {}
    ScorecardsubtopicsUpdateSubtopic422Response:
      type: object
      properties: {}
      example: {}
    ScorecardsubtopicsUpdateSubtopic500Response:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsDeAssignResponse:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsDeAssign401Response:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsDeAssign403Response:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsDeAssign422Response:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsDeAssign500Response:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsListAllScorecardMembershipsResponse:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsListAllScorecardMemberships401Response:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsListAllScorecardMemberships403Response:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsListAllScorecardMemberships422Response:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsListAllScorecardMemberships500Response:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsCreateMembershipResponse:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsCreateMembership401Response:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsCreateMembership403Response:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsCreateMembership422Response:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsCreateMembership500Response:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsDeleteMembershipResponse:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsDeleteMembership401Response:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsDeleteMembership403Response:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsDeleteMembership404Response:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsDeleteMembership422Response:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsDeleteMembership500Response:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsShowMembershipResponse:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsShowMembership401Response:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsShowMembership403Response:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsShowMembership404Response:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsShowMembership422Response:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsShowMembership500Response:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsRefreshMembershipResponse:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsRefreshMembership401Response:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsRefreshMembership403Response:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsRefreshMembership404Response:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsRefreshMembership422Response:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsRefreshMembership500Response:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsRefreshScoresResponse:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsRefreshScores401Response:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsRefreshScores403Response:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsRefreshScores404Response:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsRefreshScores422Response:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsRefreshScores500Response:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsRefreshAllByParentResponse:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsRefreshAllByParent401Response:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsRefreshAllByParent403Response:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsRefreshAllByParent404Response:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsRefreshAllByParent422Response:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsRefreshAllByParent500Response:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsCalculateCostsResponse:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsCalculateCosts401Response:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsCalculateCosts403Response:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsCalculateCosts404Response:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsCalculateCosts422Response:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsCalculateCosts500Response:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsCountBuildingsByScorecardIdsResponse:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsCountBuildingsByScorecardIds401Response:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsCountBuildingsByScorecardIds403Response:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsCountBuildingsByScorecardIds404Response:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsCountBuildingsByScorecardIds422Response:
      type: object
      properties: {}
      example: {}
    ScorecardmembershipsCountBuildingsByScorecardIds500Response:
      type: object
      properties: {}
      example: {}
    ScorecardassignersGetAllResponse:
      type: object
      properties: {}
      example: {}
    ScorecardassignersGetAll401Response:
      type: object
      properties: {}
      example: {}
    ScorecardassignersGetAll403Response:
      type: object
      properties: {}
      example: {}
    ScorecardassignersGetAll422Response:
      type: object
      properties: {}
      example: {}
    ScorecardassignersGetAll500Response:
      type: object
      properties: {}
      example: {}
    ScorecardassignersCreateNewScorecardAssignerResponse:
      type: object
      properties: {}
      example: {}
    ScorecardassignersCreateNewScorecardAssigner401Response:
      type: object
      properties: {}
      example: {}
    ScorecardassignersCreateNewScorecardAssigner403Response:
      type: object
      properties: {}
      example: {}
    ScorecardassignersCreateNewScorecardAssigner422Response:
      type: object
      properties: {}
      example: {}
    ScorecardassignersCreateNewScorecardAssigner500Response:
      type: object
      properties: {}
      example: {}
    ScorecardassignersDeleteScorecardAssignerResponse:
      type: object
      properties: {}
      example: {}
    ScorecardassignersDeleteScorecardAssigner401Response:
      type: object
      properties: {}
      example: {}
    ScorecardassignersDeleteScorecardAssigner403Response:
      type: object
      properties: {}
      example: {}
    ScorecardassignersDeleteScorecardAssigner404Response:
      type: object
      properties: {}
      example: {}
    ScorecardassignersDeleteScorecardAssigner422Response:
      type: object
      properties: {}
      example: {}
    ScorecardassignersDeleteScorecardAssigner500Response:
      type: object
      properties: {}
      example: {}
    ScorecardassignersShowResponse:
      type: object
      properties: {}
      example: {}
    ScorecardassignersShow401Response:
      type: object
      properties: {}
      example: {}
    ScorecardassignersShow403Response:
      type: object
      properties: {}
      example: {}
    ScorecardassignersShow404Response:
      type: object
      properties: {}
      example: {}
    ScorecardassignersShow422Response:
      type: object
      properties: {}
      example: {}
    ScorecardassignersShow500Response:
      type: object
      properties: {}
      example: {}
    DatacatalogsGetAllResponse:
      type: object
      properties: {}
      example: {}
    DatacatalogsGetAll401Response:
      type: object
      properties: {}
      example: {}
    DatacatalogsGetAll403Response:
      type: object
      properties: {}
      example: {}
    DatacatalogsGetAll422Response:
      type: object
      properties: {}
      example: {}
    DatacatalogsGetAll500Response:
      type: object
      properties: {}
      example: {}
    DatacatalogsCreateNewCatalogResponse:
      type: object
      properties: {}
      example: {}
    DatacatalogsCreateNewCatalog401Response:
      type: object
      properties: {}
      example: {}
    DatacatalogsCreateNewCatalog403Response:
      type: object
      properties: {}
      example: {}
    DatacatalogsCreateNewCatalog422Response:
      type: object
      properties: {}
      example: {}
    DatacatalogsCreateNewCatalog500Response:
      type: object
      properties: {}
      example: {}
    DatacatalogsDeleteCatalogResponse:
      type: object
      properties: {}
      example: {}
    DatacatalogsDeleteCatalog401Response:
      type: object
      properties: {}
      example: {}
    DatacatalogsDeleteCatalog403Response:
      type: object
      properties: {}
      example: {}
    DatacatalogsDeleteCatalog404Response:
      type: object
      properties: {}
      example: {}
    DatacatalogsDeleteCatalog422Response:
      type: object
      properties: {}
      example: {}
    DatacatalogsDeleteCatalog500Response:
      type: object
      properties: {}
      example: {}
    DatacatalogsShowDataCatalogResponse:
      type: object
      properties: {}
      example: {}
    DatacatalogsShowDataCatalog401Response:
      type: object
      properties: {}
      example: {}
    DatacatalogsShowDataCatalog403Response:
      type: object
      properties: {}
      example: {}
    DatacatalogsShowDataCatalog404Response:
      type: object
      properties: {}
      example: {}
    DatacatalogsShowDataCatalog422Response:
      type: object
      properties: {}
      example: {}
    DatacatalogsShowDataCatalog500Response:
      type: object
      properties: {}
      example: {}
    DatacatalogsUpdateCatalogResponse:
      type: object
      properties: {}
      example: {}
    DatacatalogsUpdateCatalog401Response:
      type: object
      properties: {}
      example: {}
    DatacatalogsUpdateCatalog403Response:
      type: object
      properties: {}
      example: {}
    DatacatalogsUpdateCatalog422Response:
      type: object
      properties: {}
      example: {}
    DatacatalogsUpdateCatalog500Response:
      type: object
      properties: {}
      example: {}
    RawdatacatalogsGetAllRawdataCatalogsResponse:
      type: object
      properties: {}
      example: {}
    RawdatacatalogsGetAllRawdataCatalogs401Response:
      type: object
      properties: {}
      example: {}
    RawdatacatalogsGetAllRawdataCatalogs403Response:
      type: object
      properties: {}
      example: {}
    RawdatacatalogsGetAllRawdataCatalogs422Response:
      type: object
      properties: {}
      example: {}
    RawdatacatalogsGetAllRawdataCatalogs500Response:
      type: object
      properties: {}
      example: {}
    RawdatacatalogsShowDataCatalogResponse:
      type: object
      properties: {}
      example: {}
    RawdatacatalogsShowDataCatalog401Response:
      type: object
      properties: {}
      example: {}
    RawdatacatalogsShowDataCatalog403Response:
      type: object
      properties: {}
      example: {}
    RawdatacatalogsShowDataCatalog404Response:
      type: object
      properties: {}
      example: {}
    RawdatacatalogsShowDataCatalog422Response:
      type: object
      properties: {}
      example: {}
    RawdatacatalogsShowDataCatalog500Response:
      type: object
      properties: {}
      example: {}
    RentincreasetypesGetAllTypesResponse:
      type: object
      properties: {}
      example: {}
    RentincreasetypesGetAllTypes401Response:
      type: object
      properties: {}
      example: {}
    RentincreasetypesGetAllTypes500Response:
      type: object
      properties: {}
      example: {}
    RentincreasetypesCreateTypeResponse:
      type: object
      properties: {}
      example: {}
    RentincreasetypesCreateType401Response:
      type: object
      properties: {}
      example: {}
    RentincreasetypesCreateType403Response:
      type: object
      properties: {}
      example: {}
    RentincreasetypesCreateType422Response:
      type: object
      properties: {}
      example: {}
    RentincreasetypesCreateType500Response:
      type: object
      properties: {}
      example: {}
    RentincreasetypesDeleteResponse:
      type: object
      properties: {}
      example: {}
    RentincreasetypesDelete401Response:
      type: object
      properties: {}
      example: {}
    RentincreasetypesDelete403Response:
      type: object
      properties: {}
      example: {}
    RentincreasetypesDelete404Response:
      type: object
      properties: {}
      example: {}
    RentincreasetypesDelete422Response:
      type: object
      properties: {}
      example: {}
    RentincreasetypesDelete500Response:
      type: object
      properties: {}
      example: {}
    RentincreasetypesGetByIdResponse:
      type: object
      properties: {}
      example: {}
    RentincreasetypesGetById401Response:
      type: object
      properties: {}
      example: {}
    RentincreasetypesGetById403Response:
      type: object
      properties: {}
      example: {}
    RentincreasetypesGetById404Response:
      type: object
      properties: {}
      example: {}
    RentincreasetypesGetById422Response:
      type: object
      properties: {}
      example: {}
    RentincreasetypesGetById500Response:
      type: object
      properties: {}
      example: {}
    RentincreasetypesUpdateTypeResponse:
      type: object
      properties: {}
      example: {}
    RentincreasetypesUpdateType403Response:
      type: object
      properties: {}
      example: {}
    RentincreasetypesUpdateType422Response:
      type: object
      properties: {}
      example: {}
    RentincreasetypesUpdateType500Response:
      type: object
      properties: {}
      example: {}
    RentincreaseindicesGetIndexDataResponse:
      type: object
      properties: {}
      example: {}
    RentincreaseindicesGetIndexData401Response:
      type: object
      properties: {}
      example: {}
    RentincreaseindicesGetIndexData500Response:
      type: object
      properties: {}
      example: {}
    RentincreaseindicesCreateIndexResponse:
      type: object
      properties: {}
      example: {}
    RentincreaseindicesCreateIndex401Response:
      type: object
      properties: {}
      example: {}
    RentincreaseindicesCreateIndex403Response:
      type: object
      properties: {}
      example: {}
    RentincreaseindicesCreateIndex422Response:
      type: object
      properties: {}
      example: {}
    RentincreaseindicesCreateIndex500Response:
      type: object
      properties: {}
      example: {}
    RentincreaseindicesDeleteRentIncreaseIndexResponse:
      type: object
      properties: {}
      example: {}
    RentincreaseindicesDeleteRentIncreaseIndex401Response:
      type: object
      properties: {}
      example: {}
    RentincreaseindicesDeleteRentIncreaseIndex403Response:
      type: object
      properties: {}
      example: {}
    RentincreaseindicesDeleteRentIncreaseIndex404Response:
      type: object
      properties: {}
      example: {}
    RentincreaseindicesDeleteRentIncreaseIndex422Response:
      type: object
      properties: {}
      example: {}
    RentincreaseindicesDeleteRentIncreaseIndex500Response:
      type: object
      properties: {}
      example: {}
    RentincreaseindicesReturnRentIncreaseIndexResponse:
      type: object
      properties: {}
      example: {}
    RentincreaseindicesReturnRentIncreaseIndex401Response:
      type: object
      properties: {}
      example: {}
    RentincreaseindicesReturnRentIncreaseIndex403Response:
      type: object
      properties: {}
      example: {}
    RentincreaseindicesReturnRentIncreaseIndex404Response:
      type: object
      properties: {}
      example: {}
    RentincreaseindicesReturnRentIncreaseIndex422Response:
      type: object
      properties: {}
      example: {}
    RentincreaseindicesReturnRentIncreaseIndex500Response:
      type: object
      properties: {}
      example: {}
    RentincreaseindicesUpdateRentIncreaseIndexByIdResponse:
      type: object
      properties: {}
      example: {}
    RentincreaseindicesUpdateRentIncreaseIndexById403Response:
      type: object
      properties: {}
      example: {}
    RentincreaseindicesUpdateRentIncreaseIndexById422Response:
      type: object
      properties: {}
      example: {}
    RentincreaseindicesUpdateRentIncreaseIndexById500Response:
      type: object
      properties: {}
      example: {}
    TaskmembershipsGetAllTaskMembershipsResponse:
      type: object
      properties: {}
      example: {}
    TaskmembershipsGetAllTaskMemberships401Response:
      type: object
      properties: {}
      example: {}
    TaskmembershipsGetAllTaskMemberships500Response:
      type: object
      properties: {}
      example: {}
    TaskmembershipsCreateMembershipResponse:
      type: object
      properties: {}
      example: {}
    TaskmembershipsCreateMembership401Response:
      type: object
      properties: {}
      example: {}
    TaskmembershipsCreateMembership403Response:
      type: object
      properties: {}
      example: {}
    TaskmembershipsCreateMembership422Response:
      type: object
      properties: {}
      example: {}
    TaskmembershipsCreateMembership500Response:
      type: object
      properties: {}
      example: {}
    TaskmembershipsDeleteTaskMembershipResponse:
      type: object
      properties: {}
      example: {}
    TaskmembershipsDeleteTaskMembership403Response:
      type: object
      properties: {}
      example: {}
    TaskmembershipsDeleteTaskMembership422Response:
      type: object
      properties: {}
      example: {}
    TaskmembershipsDeleteTaskMembership500Response:
      type: object
      properties: {}
      example: {}
    TaskmembershipsUpdateMembershipResponse:
      type: object
      properties: {}
      example: {}
    TaskmembershipsUpdateMembership403Response:
      type: object
      properties: {}
      example: {}
    TaskmembershipsUpdateMembership422Response:
      type: object
      properties: {}
      example: {}
    TaskmembershipsUpdateMembership500Response:
      type: object
      properties: {}
      example: {}
    RentincreasesGetIncreasesResponse:
      type: object
      properties: {}
      example: {}
    RentincreasesGetIncreases401Response:
      type: object
      properties: {}
      example: {}
    RentincreasesGetIncreases500Response:
      type: object
      properties: {}
      example: {}
    RentincreasesCreateNewIncreaseResponse:
      type: object
      properties: {}
      example: {}
    RentincreasesCreateNewIncrease401Response:
      type: object
      properties: {}
      example: {}
    RentincreasesCreateNewIncrease403Response:
      type: object
      properties: {}
      example: {}
    RentincreasesCreateNewIncrease422Response:
      type: object
      properties: {}
      example: {}
    RentincreasesCreateNewIncrease500Response:
      type: object
      properties: {}
      example: {}
    RentincreasesApplyRentIncreaseResponse:
      type: object
      properties: {}
      example: {}
    RentincreasesApplyRentIncrease403Response:
      type: object
      properties: {}
      example: {}
    RentincreasesApplyRentIncrease422Response:
      type: object
      properties: {}
      example: {}
    RentincreasesApplyRentIncrease500Response:
      type: object
      properties: {}
      example: {}
    RentincreasesDeleteRentIncreaseResponse:
      type: object
      properties: {}
      example: {}
    RentincreasesDeleteRentIncrease401Response:
      type: object
      properties: {}
      example: {}
    RentincreasesDeleteRentIncrease403Response:
      type: object
      properties: {}
      example: {}
    RentincreasesDeleteRentIncrease404Response:
      type: object
      properties: {}
      example: {}
    RentincreasesDeleteRentIncrease422Response:
      type: object
      properties: {}
      example: {}
    RentincreasesDeleteRentIncrease500Response:
      type: object
      properties: {}
      example: {}
    RentincreasesReturnIncreaseResponse:
      type: object
      properties: {}
      example: {}
    RentincreasesReturnIncrease401Response:
      type: object
      properties: {}
      example: {}
    RentincreasesReturnIncrease403Response:
      type: object
      properties: {}
      example: {}
    RentincreasesReturnIncrease404Response:
      type: object
      properties: {}
      example: {}
    RentincreasesReturnIncrease422Response:
      type: object
      properties: {}
      example: {}
    RentincreasesReturnIncrease500Response:
      type: object
      properties: {}
      example: {}
    RentincreasesUpdateRentIncreaseResponse:
      type: object
      properties: {}
      example: {}
    RentincreasesUpdateRentIncrease403Response:
      type: object
      properties: {}
      example: {}
    RentincreasesUpdateRentIncrease422Response:
      type: object
      properties: {}
      example: {}
    RentincreasesUpdateRentIncrease500Response:
      type: object
      properties: {}
      example: {}
    EmissionfactorsettingsUpdateEmissionFactorSettingResponse:
      type: object
      properties: {}
      example: {}
    EmissionfactorsettingsUpdateEmissionFactorSetting401Response:
      type: object
      properties: {}
      example: {}
    EmissionfactorsettingsUpdateEmissionFactorSetting403Response:
      type: object
      properties: {}
      example: {}
    EmissionfactorsettingsUpdateEmissionFactorSetting404Response:
      type: object
      properties: {}
      example: {}
    EmissionfactorsettingsUpdateEmissionFactorSetting422Response:
      type: object
      properties: {}
      example: {}
    EmissionfactorsettingsUpdateEmissionFactorSetting500Response:
      type: object
      properties: {}
      example: {}
    EmissionfactorsettingsGetAllWithinAccountResponse:
      type: object
      properties: {}
      example: {}
    EmissionfactorsettingsGetAllWithinAccount401Response:
      type: object
      properties: {}
      example: {}
    EmissionfactorsettingsGetAllWithinAccount403Response:
      type: object
      properties: {}
      example: {}
    EmissionfactorsettingsGetAllWithinAccount422Response:
      type: object
      properties: {}
      example: {}
    EmissionfactorsettingsGetAllWithinAccount500Response:
      type: object
      properties: {}
      example: {}
    EmissionfactorsettingsCreateEmissionFactorSettingResponse:
      type: object
      properties: {}
      example: {}
    EmissionfactorsettingsCreateEmissionFactorSetting401Response:
      type: object
      properties: {}
      example: {}
    EmissionfactorsettingsCreateEmissionFactorSetting403Response:
      type: object
      properties: {}
      example: {}
    EmissionfactorsettingsCreateEmissionFactorSetting422Response:
      type: object
      properties: {}
      example: {}
    EmissionfactorsettingsCreateEmissionFactorSetting500Response:
      type: object
      properties: {}
      example: {}
    EmissionfactorsettingsDeleteEmissionFactorSettingResponse:
      type: object
      properties: {}
      example: {}
    EmissionfactorsettingsDeleteEmissionFactorSetting401Response:
      type: object
      properties: {}
      example: {}
    EmissionfactorsettingsDeleteEmissionFactorSetting403Response:
      type: object
      properties: {}
      example: {}
    EmissionfactorsettingsDeleteEmissionFactorSetting404Response:
      type: object
      properties: {}
      example: {}
    EmissionfactorsettingsDeleteEmissionFactorSetting422Response:
      type: object
      properties: {}
      example: {}
    EmissionfactorsettingsDeleteEmissionFactorSetting500Response:
      type: object
      properties: {}
      example: {}
    EmissionfactorsettingsShowEmissionFactorSettingResponse:
      type: object
      properties: {}
      example: {}
    EmissionfactorsettingsShowEmissionFactorSetting401Response:
      type: object
      properties: {}
      example: {}
    EmissionfactorsettingsShowEmissionFactorSetting403Response:
      type: object
      properties: {}
      example: {}
    EmissionfactorsettingsShowEmissionFactorSetting404Response:
      type: object
      properties: {}
      example: {}
    EmissionfactorsettingsShowEmissionFactorSetting422Response:
      type: object
      properties: {}
      example: {}
    EmissionfactorsettingsShowEmissionFactorSetting500Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountcategoryconfigsCreateConfigResponse:
      type: object
      properties: {}
      example: {}
    CustomeraccountcategoryconfigsCreateConfig401Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountcategoryconfigsCreateConfig403Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountcategoryconfigsCreateConfig422Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountcategoryconfigsCreateConfig500Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountcategoryconfigsDeleteConfigResponse:
      type: object
      properties: {}
      example: {}
    CustomeraccountcategoryconfigsDeleteConfig403Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountcategoryconfigsDeleteConfig422Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountcategoryconfigsDeleteConfig500Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountcategoryconfigsUpdateConfigResponse:
      type: object
      properties: {}
      example: {}
    CustomeraccountcategoryconfigsUpdateConfig403Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountcategoryconfigsUpdateConfig422Response:
      type: object
      properties: {}
      example: {}
    CustomeraccountcategoryconfigsUpdateConfig500Response:
      type: object
      properties: {}
      example: {}
security:
  - api_key: []
    oauth:
      - app_category_read
      - app_config_read
      - app_config_write
      - app_config_destroy
      - app_data_repository_read
      - app_data_repository_write
      - app_data_repository_destroy
      - app_subscription_read
      - app_subscription_write
      - app_subscription_destroy
      - app_read
      - app_write
      - app_destroy
      - contract_addition_read
      - contract_addition_write
      - contract_addition_destroy
      - contract_grant_read
      - contract_grant_write
      - contract_grant_destroy
      - contract_membership_cost_read
      - contract_membership_cost_write
      - contract_membership_cost_destroy
      - contract_membership_write
      - contract_membership_destroy
      - contract_read
      - contract_write
      - contract_destroy
      - cost_type_read
      - cost_type_write
      - cost_type_destroy
      - security_deposit_write
      - security_deposit_destroy
      - report_account_schema_read
      - report_account_schema_write
      - report_account_schema_destroy
      - report_template_read
      - report_template_write
      - report_template_destroy
      - department_read
      - department_write
      - department_destroy
      - manufacturer_read
      - manufacturer_write
      - manufacturer_destroy
      - room_and_zone_type_read
      - room_read
      - room_write
      - room_destroy
      - zone_write
      - zone_destroy
      - level_read
      - level_write
      - level_destroy
      - facility_read
      - facility_write
      - facility_destroy
      - facility_type_read
      - plan_version_write
      - plan_version_destroy
      - plan_read
      - plan_write
      - plan_destroy
      - plan_config_read
      - activity_read
      - activity_write
      - activity_destroy
      - attachment_write
      - attachment_destroy
      - building_filter_setting_read
      - building_filter_setting_write
      - building_filter_setting_destroy
      - building_save_filter_read
      - building_save_filter_write
      - building_save_filter_destroy
      - building_type_read
      - building_unit_membership_write
      - building_unit_membership_destroy
      - building_unit_type_read
      - building_unit_type_write
      - building_unit_type_destroy
      - building_unit_read
      - building_unit_write
      - building_unit_destroy
      - building_read
      - building_write
      - building_destroy
      - customer_account_config_read
      - customer_account_config_write
      - customer_account_schema_read
      - customer_account_schema_write
      - customer_attributes_schema_membership_read
      - customer_attributes_schema_membership_write
      - customer_attributes_schema_read
      - customer_attributes_schema_write
      - image_write
      - image_destroy
      - lot_read
      - lot_write
      - lot_destroy
      - organisation_config_read
      - organisation_config_write
      - organisation_membership_read
      - organisation_membership_write
      - organisation_membership_destroy
      - organisation_read
      - organisation_write
      - person_read
      - person_write
      - person_destroy
      - person_membership_write
      - person_membership_destroy
      - property_read
      - property_write
      - property_destroy
      - property_type_read
      - user_write
      - user_destroy
      - vpi_index_read
      - credential_read
      - dashboard_config_read
      - dashboard_config_write
      - dashboard_config_destroy
      - time_dependent_attribute_read
      - time_dependent_attribute_write
      - time_dependent_attribute_destroy
      - ep_code_combination_read
      - customer_account_write
externalDocs:
  description: 'Documentation: Developer Integration Workflow'
  url: /api/v1/docs/integration_workflow
