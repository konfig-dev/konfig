openapi: 3.0.0
info:
  title: Expense Reports
  description: API Documentation
  version: '1.0'
  termsOfService: https://www.bizmerlin.com/terms-of-service/
  contact: {}
  x-api-status-urls:
    - https://clayhr.readme.io/
  x-konfig-ignore:
    object-with-no-properties: true
    potential-incorrect-type: true
servers:
  - url: https://acmecompany.bizmerlin.net/rm/api
tags:
  - name: People and Permissions
  - name: Timesheets
  - name: Timecards
  - name: Expense Reports
  - name: Forms
  - name: Workflows
  - name: Leaves
  - name: Candidates
  - name: Custom Fields
  - name: Goals
  - name: Performance Review
  - name: Project
  - name: Survey
  - name: Announcement
  - name: Trainings
  - name: OrgRelation
  - name: Positions
  - name: Reports
  - name: Skills
  - name: Document Library
  - name: Org Units
  - name: User PTO Policies
  - name: Shifts
  - name: Dependents
  - name: Feedback
  - name: Invoice
  - name: Job profiles
  - name: Objective
  - name: Pay Stubs
  - name: Performance Review Assignment
  - name: Test
  - name: Authentication
  - name: UserWorkflow
  - description: List of APIs for Shifts
    name: Swagger Shift
paths:
  /api/token:
    get:
      tags:
        - Authentication
      summary: Get Access Token for Authentication
      operationId: Authentication_getAccessToken
      security:
        - sec0: []
          sec1: []
      description: Get Access Token for Authentication using x-api-key and userId.
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "accessToken": "String"
                    }
              schema:
                $ref: '#/components/schemas/AuthenticationGetAccessTokenResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "forbidden"
                    }
              schema:
                $ref: '#/components/schemas/AuthenticationGetAccessToken403Response'
        '409':
          description: Conflict
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "failure"
                    }
              schema:
                $ref: '#/components/schemas/AuthenticationGetAccessToken409Response'
      deprecated: false
  /api/announcement/create:
    post:
      tags:
        - Announcement
      summary: Create Announcement
      operationId: Announcement_createNewAnnouncement
      security:
        - sec0: []
          sec1: []
      description: ' '
      parameters:
        - description: Title of the announcement.
          name: title
          in: query
          required: true
          schema:
            type: string
            example: Travel Policies
        - description: Description of the announcement.
          name: description
          in: query
          required: true
          schema:
            type: string
            example: There are some amendments done in policy leave.
        - description: Any link associated/brief of the announcement.
          name: url
          in: query
          required: false
          schema:
            type: string
            example: https://www.google.com
        - description: >-
            Status of Announcement. Choose between ["A", "D", "I"]. Defaults to
            "A". 
             A - Active, D - In Draft, I - Archive
          name: status
          in: query
          required: false
          schema:
            type: string
            example: A
            enum:
              - A
              - D
              - I
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "annId": "int",
                      "message": "Announcement Created Successfully.
                    "
                    }
              schema:
                $ref: '#/components/schemas/AnnouncementCreateNewAnnouncementResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                    "message": "Error while Authenticating User."
                    }
              schema:
                $ref: >-
                  #/components/schemas/AnnouncementCreateNewAnnouncement401Response
        '409':
          description: Unauthorized
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                    "message": "Failure"
                    }
              schema:
                $ref: >-
                  #/components/schemas/AnnouncementCreateNewAnnouncement409Response
      deprecated: false
  /api/announcement/{annId}:
    get:
      tags:
        - Announcement
      summary: Retrieve Announcement
      operationId: Announcement_getById
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters:
        - description: The ID of the announcement.
          name: annId
          in: path
          required: true
          schema:
            type: integer
            format: int32
            example: .nan
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "locationIdList": "object",
                            "announcementModel": {
                                "annId": "int",
                                "title": "string",
                                "desciption": "string",
                                "url": "string",
                                "status": "string",
                                "cid": "int",
                                "createts": "int",
                                "userModel": {
                                    "cid": "int",
                                    "empId": "string",
                                    "userId": "int",
                                    "position": "string",
                                    "firstName": "string",
                                    "shortName": "string",
                                    "lastName": "string",
                                    "workerTypeModel": {
                                        "wtid": "int",
                                        "cid": "int",
                                        "code": "string",
                                        "description": "string",
                                        "createuserid": "string"
                                    },
                                    "displayFullName": "string",
                                    "userStartDate": "string",
                                    "email": "string",
                                    "cellPhone": "int",
                                    "userName": "string",
                                    "departmentModel": {
                                        "departmentId": "int",
                                        "name": "string",
                                        "description": "string",
                                        "deptHead": "int",
                                        "cid": "int",
                                        "departmentCode": "int",
                                        "departmentLabel": "string",
                                        "parentDepartmentId": "int",
                                        "parentDepartmentName": "string",
                                        "deptHeadName": "string",
                                        "noOfEmployees": "int",
                                        "userModel": {
                                            "userId": "int",
                                            "firstName": "string",
                                            "lastName": "string",
                                            "name": "string",
                                            "phone": "int",
                                            "email": "string",
                                            "status": "string",
                                            "shortName": "string",
                                            "gender": "string",
                                            "jobTitle": "string",
                                            "departmentId": "int",
                                            "department": "string",
                                            "profileId": "int",
                                            "profileName": "string",
                                            "timezone": "string",
                                            "userStartDate": "string",
                                            "userEndDate": "date",
                                            "cellPhone": "int",
                                            "empId": "string",
                                            "userDateOfBirth": "string",
                                            "allocation": "int",
                                            "userDateFormat": "date",
                                            "star": "int",
                                            "notes": "string",
                                            "im": "int",
                                            "createuserid": "int",
                                            "cid": "int",
                                            "guid": "string",
                                            "hasAccess": "int",
                                            "id": "int"
                                        }
                                    },
                                    "prefixSalutation": "string",
                                    "secondLastName": "string",
                                    "middleName": "string",
                                    "namePronunciation": "string",
                                    "familySuffix": "string",
                                    "status": "string",
                                    "ptoannual": "int",
                                    "ptobalance": "int",
                                    "gender": "string",
                                    "userDateOfBirth": "string",
                                    "phone": "int",
                                    "im": int,
                                    "createts": "int",
                                    "timezone": "string",
                                    "practiceId": "int",
                                    "imageName": "string",
                                    "thumbnail": "string",
                                    "profileId": "int",
                                    "allocation": "int",
                                    "countryId": "int",
                                    "lastupdateuserid": "int",
                                    "lastupdatets": "string",
                                    "userDateFormat": "date",
                                    "hrPortal": "string",
                                    "userDisplayName": "string",
                                    "star": "int",
                                    "timecardPeriodPref": "string",
                                    "languagePreference": "string",
                                    "tosVersion": "string",
                                    "guid": "string",
                                    "jobGrade": "",
                                    "paId": "int",
                                    "calendarId": "int",
                                    "hasAccess": "string",
                                    "notifications": "boolean",
                                    "locationModel": {
                                        "locationId": "int",
                                        "locationName": "string",
                                        "cid": "int",
                                        "locationDescription": "string",
                                        "locationType": "string",
                                        "address": "string",
                                        "lattitude": "string",
                                        "longitude": "string",
                                        "locationUID": "string",
                                        "status": "string",
                                        "workingDays": "string",
                                        "locationCode": "int",
                                        "locationLabel": "string",
                                        "parentLocationId": "string",
                                        "createuserid": "int",
                                        "addressModelList": [
                                            {
                                                "addressId": "int",
                                                "addressLine1": "string",
                                                "addressLine2": "string",
                                                "city": "string",
                                                "currentStatus": "string",
                                                "state": "int",
                                                "zipCode": "int",
                                                "createts": "int",,
                                                "cid": "int",
                                                "userId": "string",
                                                "candidateId": "string",
                                                "addressType": "string",
                                                "locationId": "int",
                                                "contactId": "string",
                                                "countryId": int,
                                                "countryModel": {
                                                    "countryId": "int"
                                                    "countryName": "string",
                                                    "iso2": "string"
                                                },
                                                "status": "string",
                                                "verificationStatus": "string",
                                                "custId": "string",
                                                "mapUrl": "string",
                                                "createUserId": "string",
                                                "extAppUID": "string",
                                                "countryid": "int"
                                            }
                                        ]
                                    },
                                    "practiceModel": {
                                        "practiceId": "int",
                                        "name": "string",
                                        "description": "string",
                                        "practiceHead": "int",
                                        "userModel": {
                                            "userId":"int",
                                            "firstName": "string",
                                            "lastName": "string",
                                            "name": "string",
                                            "phone": "int",
                                            "email": "string",
                                            "status": "string",
                                            "shortName": "string",
                                            "thumbnail": "string",
                                            "gender": "string",
                                            "jobTitle": "string",
                                            "departmentId": "int",
                                            "locationId": "int",
                                            "department": "string",
                                            "location": "string",
                                            "profileId": "int",
                                            "timezone": "string",
                                            "userStartDate": "string",
                                            "cellPhone": "int",
                                            "empId": "string",
                                            "userDateOfBirth": "string",
                                            "allocation": "int",
                                            "userDateFormat": "date",
                                            "star": "int",
                                            "imageName": "string",
                                            "notes": "string",
                                            "im": "int",
                                            "createuserid": "int",
                                            "countryId": "int",
                                            "cid": "int",
                                            "guid": "string",
                                            "hasAccess": "int",
                                            "calendarId": "int",
                                            "id": "int"
                                        },
                                        "createts": "int",
                                        "cid": "int",
                                    },
                                    "calendarModel": {
                                        "calendarId": "int",
                                        "name": "string",
                                        "colorCode": "string",
                                        "cid": "int",
                                        "createUserId": "int",
                                        "createts": "int",
                                        "createUserViewModel": "string"
                                    },
                                    "isView": "boolean",
                                    "view": "string"
                                },
                                "locationModel": "string",
                                "departmentModel": "string",
                                "annType": "string",
                                "expirationDate": "string",
                                "attachmentModel": "string",
                                "notificationPopup": "int"
                            },
                            "departmentIdList": [
                                "object"
                            ]
                        }
                    }
              schema:
                $ref: '#/components/schemas/AnnouncementGetByIdResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Failure"
                    }
              schema:
                $ref: '#/components/schemas/AnnouncementGetById401Response'
        '409':
          description: Unauthorized
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                    "message": "Failure"
                    }
              schema:
                $ref: '#/components/schemas/AnnouncementGetById409Response'
      deprecated: false
  /api/announcement/edit:
    put:
      tags:
        - Announcement
      summary: Update Announcement
      operationId: Announcement_updateAnnouncement
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters:
        - description: The ID of the announcement.
          name: annId
          in: query
          required: true
          schema:
            type: integer
            format: int32
            example: .nan
        - description: Title of the announcement.
          name: title
          in: query
          required: true
          schema:
            type: string
        - description: Description of the announcement.
          name: desciption
          in: query
          required: true
          schema:
            type: string
            example: ''
        - description: Link associated with the announcement.
          name: url
          in: query
          required: false
          schema:
            type: string
            example: ''
        - description: >-
            Status of Announcement. Choose between ["A", "D", "I"]. Defaults to
            "A". 
             A - Active, D - In Draft, I - Archive
          name: status
          in: query
          required: true
          schema:
            type: string
            example: A
            enum:
              - A
              - D
              - I
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Announcement Edit Successfully."
                    }
              schema:
                $ref: '#/components/schemas/AnnouncementUpdateAnnouncementResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Failure"
                    }
              schema:
                $ref: '#/components/schemas/AnnouncementUpdateAnnouncement401Response'
        '409':
          description: Unauthorized
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                    "message": "Failure"
                    }
              schema:
                $ref: '#/components/schemas/AnnouncementUpdateAnnouncement409Response'
      deprecated: false
  /api/attachment/list/{annId}:
    get:
      tags:
        - Announcement
      summary: Retrieve Announcement Attachments
      operationId: Announcement_getAttachmentsById
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters:
        - description: The ID of the announcement.
          name: annId
          in: path
          required: true
          schema:
            type: integer
            format: int32
            example: .nan
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": [
                        {
                          "attachid": "int",
                          "atchType": "string",
                          "fileExtn": "string",
                          "s3id": "int",
                          "filename": "int",
                          "authkey": "string",
                          "projectid": "int",
                          "cid": "int",
                          "createuserid": "int",
                          "size": "int",
                          "candidateid": "int",
                          "positionid": "string",
                          "ruleid": "int",
                          "comments": "string",
                          "createts": "int",
                          "userid": "int",
                          "attachUserModel": "object",
                          "userModel": {
                            "cid": "int",
                            "empId": "string",
                            "userId": "int",
                            "position": "string",
                            "firstName": "string",
                            "shortName": "string",
                            "lastName": "string",
                            "displayFullName": "string",
                            "userStartDate": "date",
                            "email": "string",
                            "cellPhone": "int",
                            "userName": "string",
                            "userProfileModel": {
                              "cid": "int",
                              "profileId": "int",
                              "profileName": "string",
                              "profileDescription": "string",
                              "orgId": "int",
                              "profileResponsibilities": "string",
                              "profileRequirements": "string",
                              "salaryBandMin": "double",
                              "salaryBandMax": "double",
                              "salaryBandCurrency": "string",
                              "managerProfileId": "int",
                              "managerProfileName": "string",
                              "customFieldValueModelList": "object",
                              "numberofUsers": "int",
                              "createuserid": "int",
                              "status": "string",
                              "careerPathwayModelList": "object",
                              "objectType": "string",
                              "objectName": "string",
                              "objectid": "int"
                            },
                            "departmentModel": {
                              "departmentId": "int",
                              "name": "string",
                              "description": "string",
                              "deptHead": "int",
                              "cid": "int",
                              "departmentCode": "int",
                              "departmentLabel": "string",
                              "parentDepartmentId": "int",
                              "parentDepartmentName": "string",
                              "deptHeadName": "string",
                              "noOfEmployees": "int",
                              "userModel": "object"
                            },
                            "prefixSalutation": "string",
                            "secondLastName": "string",
                            "middleName": "string",
                            "namePronunciation": "string",
                            "familySuffix": "string",
                            "status": "string",
                            "ptoannual": "int",
                            "ptobalance": "int",
                            "gender": "string",
                            "phone": "int",
                            "im": "int",
                            "createts": "int",
                            "timezone": "string",
                            "practiceId": "int",
                            "imageName": "string",
                            "thumbnail": "string",
                            "profileId": "int",
                            "allocation": "int",
                            "lastupdateuserid": "int",
                            "lastupdatets": "date",
                            "userDateFormat": "date",
                            "hrPortal": "string",
                            "userDisplayName": "string",
                            "star": "int",
                            "timecardPeriodPref": "string",
                            "languagePreference": "string",
                            "tosVersion": "string",
                            "guid": "string",
                            "jobGrade": "string",
                            "hasAccess": "boolean",
                            "notifications": "boolean",
                            "isView": "boolean",
                            "view": "string"
                          },
                          "projectModel": "object",
                          "objectType": "int",
                          "documentType": "string",
                          "signStatus": "string",
                          "signatureId": "int",
                          "taskId": "int",
                          "goalid": "int",
                          "assetid": "int",
                          "expenseid": "int",
                          "expenseItemId": "int",
                          "appraisalItemResponseId": "int",
                          "appraisalAssignmentId": "int",
                          "payStubId": "int",
                          "signingDate": "date",
                          "signatureRequestId": "int",
                          "folder": "string",
                          "folderId": "int",
                          "attachmentFolderModel": "object",
                          "topic": "string",
                          "annId": "int",
                          "timecardid": "int",
                          "customerId": "int",
                          "leaveid": "int",
                          "ticketId": "int",
                          "trainingId": "int",
                          "access": "string",
                          "userGroupModel": "object",
                          "objectAccessModelList": "object",
                          "documentContent": "string",
                          "documnetIssueDate": "date",
                          "documentExpiryDate": "date",
                          "dLIssueDate": "date",
                          "dLExpiryDate": "date",
                          "signNowTemplateId": "int",
                          "signNowDocId": "int",
                          "stateCountryModel": "object",
                          "userAccess": "string",
                          "language": "string",
                          "obtype": "string",
                          "multiSigning": "int",
                          "isPdfFiller": "int",
                          "skilluserId": "int",
                          "appraisalid": "int",
                          "status": "string",
                          "candidateAccess": "boolean",
                          "category": "string",
                          "secondSignerName": "string",
                          "global": "boolean",
                          "resume": "boolean"
                        }
                      ],
                      "message": "success"
                    }
              schema:
                $ref: '#/components/schemas/AnnouncementGetAttachmentsByIdResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Failure"
                    }
              schema:
                $ref: '#/components/schemas/AnnouncementGetAttachmentsById401Response'
        '409':
          description: Unauthorized
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                    "message": "Failure"
                    }
              schema:
                $ref: '#/components/schemas/AnnouncementGetAttachmentsById409Response'
      deprecated: false
  /:
    get:
      tags:
        - Candidates
      summary: Retrieve candidates
      operationId: Candidates_get
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters: []
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": [ 
                        {
                          "recruitId": "int",
                          "name": "string",
                          "referrerId": "int",
                          "referrer": "string",
                          "recruiter": "string",
                          "score": "int",
                          "updatedOn": "int",
                          "status": "string",
                          "notes": "string",
                          "dateOfBirth": "int",
                          "joiningDate": "int",
                          "cid": "int",
                          "email": "string",
                          "phone": "int",
                          "createts": "int",
                          "templateId": "int",
                          "recruiterUserId": "int",
                          "workflowId": "int",
                          "statusid": "int",
                          "workflowModel": "model",
                          "candidateStatusModel": "model",
                          "assessmentModel": "model",
                          "workflowName": "string",
                          "employmentModelList": "string",
                          "educationModelList": "string",
                          "customFieldValueModelList": "string",
                          "addressModelList": "string",
                          "skillModelList": "list",
                          "positionName": "string",
                          "candidatePositionsModelList": [
                            {
                              "candidatePositionsId": "int",
                              "candidateId": "int",
                              "positionid": "int",
                              "positionName": "string",
                              "positionDescription": "string",
                              "responsibilities": "string",
                              "positionDepartmentId": "int",
                              "positionLocationId": "int",
                              "positionProjectId": "int",
                              "positionProfileId": "int",
                              "count": "int",
                              "positioncreatets": "int",
                              "positionStatusOpenClosed": "string",
                              "applicationDueDate": "int",
                              "applicationStatusId": "int",
                              "applicationStatusValue": "int",
                              "sequence": "string",
                              "colorcode": "int",
                              "systemReco": "string",
                              "systemRecoHelp": "string",
                              "candidatePositionCreateTs": "int",
                              "cid": "int",
                              "appliedPositions": "string",
                              "status": "string"
                            }
                          ],
                          "createuserid": "int",
                          "lastupdateuserid": "int",
                          "accessCode": "int",
                          "source": "string",
                          "passwordHash": "string",
                          "acceptance1": "string",
                          "acceptance2": "string",
                          "summaryByCandidate": "string",
                          "systemReco": "string",
                          "systemRecoHelp": "string",
                          "candidateLock": "int",
                          "salaryCurrencyCode": "int",
                          "salaryAmount": "int",
                          "educationStr": "string",
                          "languagePreference": "string",
                          "userId": "int",
                          "verified": "string",
                          "verificationCode": "int",
                          "isInternalCand": "string",
                          "isNewCand": "string",
                          "timezone": "string",
                          "trainingAccess": "string",
                          "customfieldvalue": "string",
                          "cloudSearchSync": "int",
                          "jobBoardAccess": "string",
                          "bgScreeningOrderGuid": "string",
                          "bgScreeningOrderCreateDate": "int",
                          "checkrCandidateId": "int",
                          "positionModel": "model",
                          "certificationModelList": "string",
                          "attachmentModelList": "string"
                        }
                      ],
                      "message": "successful"
                    }
              schema:
                $ref: '#/components/schemas/CandidatesGetResponse'
        '401':
          description: '401'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "unauthorized"
                    }
              schema:
                $ref: '#/components/schemas/CandidatesGet401Response'
      deprecated: false
    post:
      tags:
        - Candidates
      summary: Create new candidate
      operationId: Candidates_submitNewCandidate
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters:
        - description: Name of the candidate.
          name: name
          in: query
          schema:
            type: string
        - description: Email ID of the candidate.
          name: email
          in: query
          schema:
            type: string
        - description: Is this new candidate?
          name: isNewCand
          in: query
          schema:
            type: string
            enum:
              - 'true'
              - 'false'
        - description: Phone number of the candidate.
          name: phone
          in: query
          schema:
            type: integer
            format: int32
        - description: The source from which the candidate is being created.
          name: source
          in: query
          schema:
            type: string
            default: API
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": "int",
                      "message": "successful"
                    }
              schema:
                $ref: '#/components/schemas/CandidatesSubmitNewCandidateResponse'
        '401':
          description: '401'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "unauthorized"
                    }
              schema:
                $ref: '#/components/schemas/CandidatesSubmitNewCandidate401Response'
        '409':
          description: '409'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Another candidate with the same email address already exists."
                    }
              schema:
                $ref: '#/components/schemas/CandidatesSubmitNewCandidate409Response'
      deprecated: false
  /detail/{recruitid}:
    get:
      tags:
        - Candidates
      summary: Retrieve the candidate detail by recruitid
      operationId: Candidates_getCandidateDetailByRecruitid
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters:
        - description: The ID of the recruiter.
          name: recruitid
          in: path
          schema:
            type: integer
            format: int32
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": {
                        "recruitId": "int",
                        "name": "string",
                        "referrerId": "int",
                        "referrer": "string",
                        "recruiter": "string",
                        "score": "string",
                        "updatedOn": "int",
                        "status": "string",
                        "notes": "string",
                        "dateOfBirth": "int",
                        "joiningDate": "int",
                        "cid": "int",
                        "email": "string",
                        "phone": "int",
                        "createts": "int",
                        "templateId": "int",
                        "recruiterUserId": "int",
                        "workflowId": "int",
                        "statusid": "int",
                        "workflowModel": "Model",
                        "candidateStatusModel": "Model",
                        "assessmentModel": "Model",
                        "workflowName": "string",
                        "employmentModelList": "ModelList",
                        "educationModelList": "ModelList",
                        "customFieldValueModelList": "ModelList",
                        "addressModelList": "ModelList",
                        "skillModelList": "ModelList",
                        "positionName": "string",
                        "candidatePositionsModelList": "ModelList",
                        "createuserid": "int",
                        "lastupdateuserid": "int",
                        "accessCode": "int",
                        "source": "int",
                        "passwordHash": "string",
                        "acceptance1": "string",
                        "acceptance2": "string",
                        "summaryByCandidate": "string",
                        "systemReco": "string",
                        "systemRecoHelp": "string",
                        "candidateLock": "int",
                        "salaryCurrencyCode": "int",
                        "salaryAmount": "int",
                        "educationStr": "string",
                        "languagePreference": "string",
                        "userId": "int",
                        "verified": "string",
                        "verificationCode": "int",
                        "isInternalCand": "string",
                        "isNewCand": "string",
                        "timezone": "string",
                        "trainingAccess": "string",
                        "customfieldvalue": "string",
                        "cloudSearchSync": "int",
                        "jobBoardAccess": "string",
                        "bgScreeningOrderGuid": "int",
                        "bgScreeningOrderCreateDate": "int",
                        "checkrCandidateId": "int",
                        "positionModel": "Model",
                        "certificationModelList": "ModelList",
                        "attachmentModelList": "ModelList"
                      },
                      "message": "successful"
                    }
              schema:
                $ref: >-
                  #/components/schemas/CandidatesGetCandidateDetailByRecruitidResponse
        '404':
          description: '404'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "not found"
                    }
              schema:
                $ref: >-
                  #/components/schemas/CandidatesGetCandidateDetailByRecruitid404Response
        '409':
          description: '409'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "failure"
                    }
              schema:
                $ref: >-
                  #/components/schemas/CandidatesGetCandidateDetailByRecruitid409Response
      deprecated: false
  /list:
    get:
      tags:
        - Candidates
      summary: Retrieve candidates with basic details
      operationId: Candidates_getBasicDetails
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters:
        - description: Page number.
          name: page
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: Number of candidates per page.
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 20
        - name: search
          in: query
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": [
                        {
                          "recruitId": "int",
                          "name": "string",
                          "email": "string",
                          "phone": "int",
                          "dateOfBirth": "int",
                          "statusid": "int",
                          "referrerId": "int",
                          "createts": "int",
                          "notes": "string",
                          "source": "API",
                          "userid": "int",
                          "recruiterUserId": "int",
                          "summaryByCandidate": "string",
                          "candidateLock": "int",
                          "educationStr": "string",
                          "status": "string",
                          "appliedPositions": "string",
                          "updatedOn": "int",
                          "cid": "int",
                          "tagIds": "int",
                          "statusColor": "string",
                          "appliedPositionIds": "int",
                          "appliedPositionUids": "int",
                          "recruiterThumbnail": "string",
                          "recruiterName": "string",
                          "recruiterGender": "string",
                          "referrerName": "string",
                          "isInternalCand": "string",
                          "applicationStatus": "string",
                          "verified": "string",
                          "positionNameList": "string",
                          "internalCandidate": "string"
                        }
                      ],
                      "message": "successful",
                      "editPermission": true
                    }
              schema:
                $ref: '#/components/schemas/CandidatesGetBasicDetailsResponse'
        '404':
          description: '404'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "not found"
                    }
              schema:
                $ref: '#/components/schemas/CandidatesGetBasicDetails404Response'
        '409':
          description: '409'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "failure"
                    }
              schema:
                $ref: '#/components/schemas/CandidatesGetBasicDetails409Response'
      deprecated: false
  /customfield:
    get:
      tags:
        - Custom Fields
      summary: Retrieve Custom Field by ID
      operationId: CustomFields_getById
      security:
        - sec0: []
          sec1: []
      description: Retrieve Custom Field by ID
      parameters:
        - description: The ID of the custom field.
          name: customFieldId
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                          "customFieldId": "int",
                          "customFieldName": "string",
                          "customFieldType": "string",
                          "objectType": "string",
                          "sequence": "int",
                          "cid": "int",
                          "fieldType": "string",
                          "defaultValue": "string",
                          "cfcode": "string",
                          "cfgroupid": "int",
                          "style": "string",
                          "opValues": "string",
                          "fieldFormula": "string",
                          "customFieldValueModel": "object",
                          "customFieldValueModelList": [
                            {
                              "customFieldValueId": "int",
                              "customFieldId": "int",
                              "customFieldValue": "string",
                              "customFieldObjectId": "int",
                              "cid": "int",
                              "createUserId": "int",
                              "customfieldName": "string"
                            }
                          ],
                          "customFieldGroupModel": {
                            "cfgroupid": "int",
                            "cfgroupname": "string",
                            "cid": "int",
                            "objectType": "string",
                            "access": "string",
                            "layout": "string",
                            "usergroupid": "int",
                            "createts": 1661411259000,
                            "sequence": "int",
                            "hasCustomFields": "boolean"
                          },
                          "objectAccessModel": "object",
                          "access": "string",
                          "userGroupId": "int",
                          "candidateAccess": "string",
                          "userAccess": "string",
                          "managerAccess": "string",
                          "integrationTypeId": "string",
                          "helpText": "string",
                          "createUserId": "int",
                          "createts": 1648203997000,
                          "customFieldStyleModel": "object",
                          "readAccessTypeCode": "int",
                          "readUserGroupId": "int",
                          "mandatory": "int",
                          "masked": "int"
                        },
                        "message": "success"
                    }
              schema:
                $ref: '#/components/schemas/CustomFieldsGetByIdResponse'
        '401':
          description: '401'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Exception while authenticating user."
                    }
              schema:
                $ref: '#/components/schemas/CustomFieldsGetById401Response'
        '409':
          description: '409'
          content:
            text/plain:
              examples:
                Result:
                  value: |-
                    {
                      "message": "failure"
                    }
              schema:
                $ref: '#/components/schemas/CustomFieldsGetById409Response'
      deprecated: false
  /customfields:
    get:
      tags:
        - Custom Fields
      summary: Retrieve Custom Fields
      operationId: CustomFields_getCustomFields
      security:
        - sec0: []
          sec1: []
      description: Retrieve Custom Fields
      parameters:
        - description: The object type of custom field.
          name: objectType
          in: query
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n  \"data\": [\n    {\n      \"customFieldId\": \"int\",\n      \"customFieldName\": \"string\",\n      \"customFieldType\": \"string\",\n      \"objectType\": \"string\",\n      \"sequence\": \"int\",\n      \"cid\": \"int\",\n      \"fieldType\": \"string\",\n      \"defaultValue\": \"string\",\n      \"cfcode\": \"string\",\n      \"cfgroupid\": \"int\",\n      \"style\": \"string\",\n      \"opValues\": \"string\",\n      \"fieldFormula\": \"string\",\n      \"customFieldValueModel\": \"object\",\n      \"customFieldValueModelList\": [\n        {\n          \"customFieldValueId\": \"int\",\n          \"customFieldId\": \"int\",\n          \"customFieldValue\": \"string\",\n          \"customFieldObjectId\": \"int\",\n          \"cid\": \"int\",\n          \"createUserId\": \"int\",\n          \"customfieldName\": \"string\"\n        }\n      ],\n      \"customFieldGroupModel\": {\n        \"cfgroupid\": \"int\",\n        \"cfgroupname\": \"string\",\n        \"cid\": \"int\",\n        \"objectType\": \"string\",\n        \"access\": \"string\",\n        \"layout\": \"string\",\n        \"usergroupid\": \"int\",\n        \"createts\": 1661411259000,\n        \"sequence\": \"int\",\n        \"hasCustomFields\": \"boolean\"\n      },\n      \"objectAccessModel\": \"object\",\n      \"access\": \"string\",\n      \"userGroupId\": \"int\",\n      \"candidateAccess\": \"string\",\n      \"userAccess\": \"string\",\n      \"managerAccess\": \"string\",\n      \"integrationTypeId\": \"string\",\n      \"helpText\": \"string\",\n      \"createUserId\": \"int\",\n      \"createts\": 1648203997000,\n      \"customFieldStyleModel\": \"object\",\n      \"readAccessTypeCode\": \"int\",\n      \"readUserGroupId\": \"int\",\n      \"mandatory\": \"int\",\n      \"masked\": \"int\"\n    },\n   \t{\n      \"customFieldId\": \"int\",\n      \"customFieldName\": \"string\",\n      \"customFieldType\": \"string\",\n      \"objectType\": \"string\",\n      \"sequence\": \"int\",\n      \"cid\": \"int\",\n      \"fieldType\": \"string\",\n      \"defaultValue\": \"string\",\n      \"cfcode\": \"string\",\n      \"cfgroupid\": \"int\",\n      \"style\": \"string\",\n      \"opValues\": \"string\",\n      \"fieldFormula\": \"string\",\n      \"customFieldValueModel\": \"object\",\n      \"customFieldValueModelList\": [\n        {\n          \"customFieldValueId\": \"int\",\n          \"customFieldId\": \"int\",\n          \"customFieldValue\": \"string\",\n          \"customFieldObjectId\": \"int\",\n          \"cid\": \"int\",\n          \"createUserId\": \"int\",\n          \"customfieldName\": \"string\"\n        }\n      ],\n      \"customFieldGroupModel\": {\n        \"cfgroupid\": \"int\",\n        \"cfgroupname\": \"string\",\n        \"cid\": \"int\",\n        \"objectType\": \"string\",\n        \"access\": \"string\",\n        \"layout\": \"string\",\n        \"usergroupid\": \"int\",\n        \"createts\": 1661411259000,\n        \"sequence\": \"int\",\n        \"hasCustomFields\": \"boolean\"\n      },\n      \"objectAccessModel\": \"object\",\n      \"access\": \"string\",\n      \"userGroupId\": \"int\",\n      \"candidateAccess\": \"string\",\n      \"userAccess\": \"string\",\n      \"managerAccess\": \"string\",\n      \"integrationTypeId\": \"string\",\n      \"helpText\": \"string\",\n      \"createUserId\": \"int\",\n      \"createts\": 1648203997000,\n      \"customFieldStyleModel\": \"object\",\n      \"readAccessTypeCode\": \"int\",\n      \"readUserGroupId\": \"int\",\n      \"mandatory\": \"int\",\n      \"masked\": \"int\"\n    }\n  ],\n  \"message\": \"success\"\n}"
              schema:
                $ref: '#/components/schemas/CustomFieldsGetCustomFieldsResponse'
        '401':
          description: '401'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Exception while authenticating user."
                    }
              schema:
                $ref: '#/components/schemas/CustomFieldsGetCustomFields401Response'
        '409':
          description: '409'
          content:
            text/plain:
              examples:
                Result:
                  value: |-
                    {
                      "message": "failure"
                    }
              schema:
                $ref: '#/components/schemas/CustomFieldsGetCustomFields409Response'
      deprecated: false
  /customfieldvalues:
    get:
      tags:
        - Custom Fields
      summary: Retrieve Custom Field Value
      operationId: CustomFields_getValue
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters:
        - description: customFieldCode
          name: customFieldCode
          in: query
          schema:
            type: string
        - description: customFieldId
          name: customFieldId
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - description: userEmail
          name: userEmail
          in: query
          schema:
            type: string
        - description: empId
          name: empId
          in: query
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "customFieldValueId": "int",
                      "customFieldId": "int",
                      "customFieldObjectId": "string",
                      "cid": "int",
                      "createUserId": "int",
                      "customfieldName": "string"
                    }
              schema:
                $ref: '#/components/schemas/CustomFieldsGetValueResponse'
        '401':
          description: '401'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Exception while authenticating user."
                    }
              schema:
                $ref: '#/components/schemas/CustomFieldsGetValue401Response'
        '409':
          description: '409'
          content:
            text/plain:
              examples:
                Result:
                  value: |-
                    {
                      "message": "failure"
                    }
              schema:
                $ref: '#/components/schemas/CustomFieldsGetValue409Response'
      deprecated: false
    post:
      tags:
        - Custom Fields
      summary: Update Custom Field Value
      operationId: CustomFields_updateValue
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters:
        - name: customFieldId
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: customFieldCode
          in: query
          schema:
            type: string
        - name: userEmail
          in: query
          schema:
            type: string
        - name: empId
          in: query
          schema:
            type: string
        - name: value
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "string"
                    }
              schema:
                $ref: '#/components/schemas/CustomFieldsUpdateValueResponse'
        '401':
          description: '401'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Exception while authenticating user."
                    }
              schema:
                $ref: '#/components/schemas/CustomFieldsUpdateValue401Response'
        '409':
          description: '409'
          content:
            text/plain:
              examples:
                Result:
                  value: |-
                    {
                      "message": "failure"
                    }
              schema:
                $ref: '#/components/schemas/CustomFieldsUpdateValue409Response'
      deprecated: false
  /customlist:
    get:
      tags:
        - Custom Fields
      summary: Retrieve Custom Lists
      operationId: CustomFields_getCustomLists
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters: []
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    [
                      {
                        "listId": "int",
                        "customListEntryModel": [
                          {
                            "entryId": "int",
                            "entryCode": "string",
                            "entryValue": "string",
                            "listId": "int",
                            "cid": "int"
                          },
                          {
                            "entryId": "int",
                            "entryCode": "string",
                            "entryValue": "string",
                            "listId": "int",
                            "cid": "int"
                          },
                          {
                            "entryId": "int",
                            "entryCode": "string",
                            "entryValue": "string",
                            "listId": "int",
                            "cid": "int"
                          },
                          {
                            "entryId": "int",
                            "entryCode": "string",
                            "entryValue": "string",
                            "listId": "int",
                            "cid": "int"
                          },
                          {
                            "entryId": "int",
                            "entryCode": "string",
                            "entryValue": "string",
                            "listId": "int",
                            "cid": "int"
                          },
                          {
                            "entryId": "int",
                            "entryCode": "string",
                            "entryValue": "string",
                            "listId": "int",
                            "cid": "int"
                          },
                          {
                            "entryId": "int",
                            "entryCode": "string",
                            "entryValue": "string",
                            "listId": "int",
                            "cid": "int"
                          },
                          {
                            "entryId": "int",
                            "entryCode": "string",
                            "entryValue": "string",
                            "listId": "int",
                            "cid": "int"
                          }
                        ],
                        "listName": "string",
                        "description": "string",
                        "cid": "int"
                      },
                      {
                        "listId": "int",
                        "customListEntryModel": [
                          {
                            "entryId": "int",
                            "entryCode": "string",
                            "entryValue": "string",
                            "listId": "int",
                            "cid": "int"
                          },
                          {
                            "entryId": "int",
                            "entryCode": "string",
                            "entryValue": "string",
                            "listId": "int",
                            "cid": "int"
                          },
                          {
                            "entryId": "int",
                            "entryCode": "string",
                            "entryValue": "string",
                            "listId": "int",
                            "cid": "int"
                          },
                          {
                            "entryId": "int",
                            "entryCode": "string",
                            "entryValue": "string",
                            "listId": "int",
                            "cid": "int"
                          }
                        ],
                        "listName": "string",
                        "description": "string",
                        "cid": "int"
                      }
                    ]
              schema:
                $ref: '#/components/schemas/CustomFieldsGetCustomListsResponse'
        '401':
          description: '401'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Exception while authenticating user."
                    }
              schema:
                $ref: '#/components/schemas/CustomFieldsGetCustomLists401Response'
        '409':
          description: '409'
          content:
            text/plain:
              examples:
                Result:
                  value: |-
                    {
                      "message": "failure"
                    }
              schema:
                $ref: '#/components/schemas/CustomFieldsGetCustomLists409Response'
      deprecated: false
  /delete:
    post:
      tags:
        - Dependents
      summary: Delete dependent by contactId
      operationId: Dependents_deleteByContactId
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters:
        - description: Contact ID of Dependent
          name: contactId
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "message": "User Contact deleted successfully."
                    }
              schema:
                $ref: '#/components/schemas/DependentsDeleteByContactIdResponse'
        '404':
          description: '404'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "message": "User Dependent Contact not found"
                    }
              schema:
                $ref: '#/components/schemas/DependentsDeleteByContactId404Response'
        '409':
          description: '409'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "message": "failure"
                    }
              schema:
                $ref: '#/components/schemas/DependentsDeleteByContactId409Response'
      deprecated: false
  /attachment/download:
    get:
      tags:
        - Document Library
      summary: Retrieve document as byte array
      operationId: DocumentLibrary_getDocumentAsByteArray
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters:
        - description: File ID from the server
          name: fileName
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "code": 1,
                        "data": "string",
                        "message": "successful"
                    }
              schema:
                $ref: >-
                  #/components/schemas/DocumentLibraryGetDocumentAsByteArrayResponse
        '409':
          description: '409'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "code": -1,
                        "message": "failure"
                    }
              schema:
                $ref: >-
                  #/components/schemas/DocumentLibraryGetDocumentAsByteArray409Response
      deprecated: false
  /documentLibrary:
    get:
      tags:
        - Document Library
      summary: Retrieve attachments within document library
      operationId: DocumentLibrary_getAttachments
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters: []
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "code": 1,
                      "data": [
                        {
                          "attachid": "int",
                          "atchType": "string",
                          "fileExtn": "string",
                          "s3id": "string",
                          "filename": "string",
                          "authkey": "string",
                          "projectid": "int",
                          "cid": "int",
                          "createuserid": "int",
                          "size": "int",
                          "candidateid": "int",
                          "positionid": "int",
                          "ruleid": "int",
                          "comments": "string",
                          "createts": "int",
                          "userid": "int",
                          "attachUserModel": "object",
                          "userModel": "object",
                          "projectModel": "object",
                          "objectType": "string",
                          "documentType": "string",
                          "signStatus": "string",
                          "signatureId": "int",
                          "taskId": "int",
                          "goalid": "int",
                          "assetid": "int",
                          "expenseid": "int",
                          "expenseItemId": "int",
                          "appraisalItemResponseId": "int",
                          "appraisalAssignmentId": "int",
                          "payStubId": "int",
                          "signingDate": "string",
                          "signatureRequestId": "int",
                          "folder": "string",
                          "folderId": "int",
                          "attachmentFolderModel": "object",
                          "topic": "string",
                          "annId": "int",
                          "timecardid": "int",
                          "customerId": "int",
                          "leaveid": "int",
                          "ticketId": "int",
                          "trainingId": "int",
                          "access": "string",
                          "userGroupModel": "object",
                          "objectAccessModelList": "list",
                          "documentContent": "string",
                          "documnetIssueDate": "string",
                          "documentExpiryDate": "string",
                          "dLIssueDate": "string",
                          "dLExpiryDate": "string",
                          "signNowTemplateId": "int",
                          "signNowDocId": "int",
                          "stateCountryModel": "object",
                          "userAccess": "boolean",
                          "licenseId": "int",
                          "educationId": "int",
                          "language": "en",
                          "obtype": "string",
                          "multiSigning": "int",
                          "isPdfFiller": "int",
                          "skilluserId": "int",
                          "appraisalid": "int",
                          "status": "string",
                          "candidateAccess": "boolean",
                          "category": "string",
                          "secondSignerName": "string",
                          "global": "boolean",
                          "resume": "boolean"
                        },
                      ],
                      "message": "success"
                    }
              schema:
                $ref: '#/components/schemas/DocumentLibraryGetAttachmentsResponse'
        '409':
          description: '409'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "failure"
                    }
              schema:
                $ref: '#/components/schemas/DocumentLibraryGetAttachments409Response'
      deprecated: false
  /currencylist:
    get:
      tags:
        - Expense Reports
      summary: Retrieve currencies
      operationId: ExpenseReports_getCurrencies
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters: []
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": [
                            {
                                "currencyId": "int",
                                "currencyCode": "string",
                                "currencyName": "string",
                                "cid": "int"
                            },
                            {
                                "currencyId": "int",
                                "currencyCode": "string",
                                "currencyName": "string",
                                "cid": "int"
                            },
                            {
                                "currencyId": "int",
                                "currencyCode": "string",
                                "currencyName": "string",
                                "cid": "int"
                            }
                        ],
                        "message": "success"
                    }
              schema:
                $ref: '#/components/schemas/ExpenseReportsGetCurrenciesResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/ExpenseReportsGetCurrencies400Response'
        '401':
          description: '401'
          content:
            text/plain:
              examples:
                Result:
                  value: ''
      deprecated: false
  /expensereport:
    post:
      tags:
        - Expense Reports
      summary: Create expense report
      operationId: ExpenseReports_createNew
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters:
        - description: Name of the expense report.
          name: name
          in: query
          example: Travel expense report.
          required: true
          schema:
            type: string
        - description: Amount to be added in expense report.
          name: amount
          in: query
          example: 300
          required: true
          schema:
            type: number
            format: double
        - description: Description of the expense report.
          name: description
          in: query
          example: This expene report is regarding the travelling.
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "message": "Expense Report created successfully.",
                        "expenseReportId": "int"
                    }
              schema:
                $ref: '#/components/schemas/ExpenseReportsCreateNewResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/ExpenseReportsCreateNew400Response'
        '401':
          description: '401'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "You don't have permission to perform this operation."
                    }
              schema:
                $ref: '#/components/schemas/ExpenseReportsCreateNew401Response'
        '409':
          description: '409'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Something Went Wrong!"
                    }
              schema:
                $ref: '#/components/schemas/ExpenseReportsCreateNew409Response'
      deprecated: false
    get:
      tags:
        - Expense Reports
      summary: Retrieve the details of expense report
      operationId: ExpenseReports_getReportDetails
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters:
        - description: The ID of the expense report.
          name: expenseReportId
          in: query
          schema:
            type: integer
            format: int32
        - description: The unique system generated ID of the user.
          name: guid
          in: query
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "expenseReportId": "int",
                        "name": "string",
                        "description": "string",
                        "userId": "int",
                        "createUserId": "int",
                        "cid": "int",
                        "projectId": "int",
                        "guid": "string",
                        "amount": "int",
                        "status": "string",
                        "createts": "int",
                        "currencyCode": "string",
                        "submittedts": "int",
                        "comments": "string",
                        "paymentStatus": "string",
                        "paymentMode": "string",
                        "paymentNotes": "string",
                        "paymentDate": "date",
                        "currencyModel": "string",
                        "userViewModel": {
                            "userId": "int",
                            "firstName": "string",
                            "lastName": "string",
                            "name": "string",
                            "phone": "int",
                            "email": "email",
                            "status": "string",
                            "shortName": "string",
                            "jobTitle": "string",
                            "departmentId": "int",
                            "department": "string",
                            "profileId": "int",
                            "profileName": "string",
                            "timezone": "string",
                            "userStartDate": "date",
                            "cellPhone": "int",
                            "empId": "string",
                            "allocation": "int",
                            "userDateFormat": "date",
                            "star": "int",
                            "imageName": "img8409.jpg",
                            "notes": "string",
                            "im": "string",
                            "createuserid": "int",
                            "cid": "int",
                            "guid": "string",
                            "hasAccess": "int"
                        },
                        "expenseItemModelList": [],
                        "timecardApprovalModel": "string,
                        "submittedOn": "date",
                        "approvalFlowId": "int"
                    }
              schema:
                $ref: '#/components/schemas/ExpenseReportsGetReportDetailsResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/ExpenseReportsGetReportDetails400Response'
        '401':
          description: '401'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "You don't have permission to perform this operation."
                    }
              schema:
                $ref: '#/components/schemas/ExpenseReportsGetReportDetails401Response'
        '409':
          description: '409'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Something Went Wrong!"
                    }
              schema:
                $ref: '#/components/schemas/ExpenseReportsGetReportDetails409Response'
      deprecated: false
  /expensetypes:
    get:
      tags:
        - Expense Reports
      summary: Retrieve expense types
      operationId: ExpenseReports_getExpenseTypes
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters: []
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": [
                            {
                                "expenseTypeId": "int",
                                "code": "string",
                                "description": "string",
                                "cid": "int",
                                "customfieldvalue": [
                                    {
                                        "customFieldValueId": "int",
                                        "customFieldId": "int",
                                        "customFieldValue": "string",
                                        "customFieldObjectId": "int",
                                        "cid": "int",
                                        "createUserId": "int",
                                        "customfieldName": "int"
                                    },
                                    {
                                        "customFieldValueId": "int",
                                        "customFieldId": "int",
                                        "customFieldValue": "int",
                                        "customFieldObjectId": "int",
                                        "cid": "int",
                                        "createUserId": "int",
                                        "customfieldName": "string"
                                    }
                                  ]
                            }
                          }
              schema:
                $ref: '#/components/schemas/ExpenseReportsGetExpenseTypesResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/ExpenseReportsGetExpenseTypes400Response'
        '401':
          description: '401'
          content:
            text/plain:
              examples:
                Result:
                  value: ''
      deprecated: false
  /expensereports:
    get:
      tags:
        - Expense Reports
      summary: Retrieve expense reports by User ID
      operationId: ExpenseReports_getByUserId
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters:
        - description: The unique system generated ID of the user.
          name: guid
          in: query
          schema:
            type: string
        - description: Email of the user.
          name: email
          in: query
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": [
                            {
                                "expenseReportId": "int",
                                "name": "string",
                                "description": "string",
                                "userId": "int",
                                "createUserId": "int",
                                "cid": "int",
                                "projectId": "int",
                                "guid": "string",
                                "amount": "int",
                                "status": "string",
                                "createts": "int",
                                "currencyCode": "string",
                                "submittedts": "int",
                                "comments": "string",
                                "paymentStatus": "string",
                                "paymentMode": "string",
                                "paymentNotes": "string",
                                "paymentDate": "date",
                                "currencyModel": {
                                    "currencyId": "int",
                                    "currencyCode": "string",
                                    "currencyName": "string",
                                    "cid": "int"
                                }
                              ]
                            }
              schema:
                $ref: '#/components/schemas/ExpenseReportsGetByUserIdResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/ExpenseReportsGetByUserId400Response'
        '401':
          description: '401'
          content:
            text/plain:
              examples:
                Result:
                  value: ''
      deprecated: false
  /expensereport/submit/{expenseReportId}:
    post:
      tags:
        - Expense Reports
      summary: Submit expense report
      operationId: ExpenseReports_submitExpenseReport
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters:
        - description: The ID of the expense report.
          name: expenseReportId
          in: path
          schema:
            type: integer
            format: int32
          required: true
        - description: Status of the expense report.
          name: status
          in: query
          required: true
          schema:
            type: string
            enum:
              - DRFT
              - SUB
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Expense Report submitted successfully.",
                      "expenseReportId": "int"
                    }
              schema:
                $ref: '#/components/schemas/ExpenseReportsSubmitExpenseReportResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: >-
                  #/components/schemas/ExpenseReportsSubmitExpenseReport400Response
        '401':
          description: '401'
          content:
            application/json:
              examples:
                Result:
                  value: ''
              schema:
                $ref: >-
                  #/components/schemas/ExpenseReportsSubmitExpenseReport401Response
      deprecated: false
  /expensereport/delete:
    post:
      tags:
        - Expense Reports
      summary: Delete expense report
      operationId: ExpenseReports_deleteExpenseReport
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters:
        - description: The ID of the expense report.
          name: expenseReportId
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "successful"
                    }
              schema:
                $ref: '#/components/schemas/ExpenseReportsDeleteExpenseReportResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: >-
                  #/components/schemas/ExpenseReportsDeleteExpenseReport400Response
      deprecated: false
  /expenseitem:
    post:
      tags:
        - Expense Reports
      summary: Create expense item
      operationId: ExpenseReports_createNewExpenseItem
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters:
        - description: Amount of the expense item.
          name: amount
          in: query
          required: true
          schema:
            type: number
            format: float
        - description: Y for "Yes" and N for "No".
          name: billable
          in: query
          required: true
          schema:
            type: string
            enum:
              - 'Y'
              - 'N'
        - description: The unique ID of the customer.
          name: cid
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - description: Code of the currency.
          name: currencyCode
          in: query
          required: true
          schema:
            type: string
            enum:
              - $(USD)
              - $(CD)
              - ₹(INR)
        - description: Date of creating expense item.
          name: date
          in: query
          required: true
          schema:
            type: string
            format: date
        - description: The ID of the expense item.
          name: expenseItemId
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - description: The type of expense.
          name: expenseType
          in: query
          required: true
          schema:
            type: string
        - description: The ID of the expense type.
          name: expenseTypeId
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - description: The ID of the project.
          name: projectId
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - description: Y for "Yes" and N for "No".
          name: reimbursible
          in: query
          required: true
          schema:
            type: string
            enum:
              - 'Y'
              - 'N'
        - name: remarks
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "expenseItemId": "int",
                      "message": "Expense Item created successfully."
                    }
              schema:
                $ref: >-
                  #/components/schemas/ExpenseReportsCreateNewExpenseItemResponse
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: >-
                  #/components/schemas/ExpenseReportsCreateNewExpenseItem400Response
      deprecated: false
  /api/getdynaforms:
    get:
      tags:
        - Forms
      summary: Retrieve forms
      operationId: Forms_getDynaForm
      security:
        - sec0: []
          sec1: []
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Result:
                  value: "{\n    \"code\": \"int\",\n    \"data\": [\n        {\n            \"dynamicFormId\": \"int\",\n            \"name\": \"string\",\n            \"dynaFormCode\": \"string\",\n            \"description\": \"string\",\n            \"createUserModel\": \"object\",\n            \"createUserViewModel\": {\n                \"userId\": \"int\",\n                \"firstName\": \"int\",\n                \"lastName\": \"string\",\n                \"name\": \"string\",\n                \"phone\": \"int\",\n                \"email\": \"string\",\n                \"status\": \"string\",\n                \"shortName\": \"string\",\n                \"gender\": \"string\",\n                \"jobTitle\": \"string\",\n                \"departmentId\": \"int\",\n                \"locationId\": \"int\",\n                \"department\": \"string\",\n                \"location\": \"string\",\n                \"profileId\": \"int\",\n                \"profileName\": \"string\",\n                \"timezone\": \"string\",\n                \"userStartDate\": \"date\",\n                \"userEndDate\": \"date\",\n                \"cellPhone\": \"int\",\n                \"empId\": \"string\",\n                \"allocation\": \"int\",\n                \"userDateFormat\": \"date\",\n                \"star\": \"string\",\n                \"notes\": \"string\",\n                \"im\": \"int\",\n                \"createuserid\": \"int\",\n                \"countryId\": \"int\",\n                \"cid\": \"int\",\n                \"guid\": \"string\",\n                \"hasAccess\": \"int\",\n                \"id\": \"int\"\n            },\n            \"createts\": \"int\",\n            \"updatets\": \"int\",\n            \"cid\": \"int\",\n            \"availability\": \"string\",\n            \"status\": \"string\",\n            \"anonymous\": \"int\",\n            \"helpTextStyle\": \"string\",\n            \"mappedEntity\": \"string\",\n            \"userGroupModel\": \"object\",\n            \"secSequence\": \"string\",\n            \"thresholdScore\": \"string\",\n            \"formType\": \"string\",\n            \"dataFlow\": \"string\",\n            \"showCorrect\": \"boolean\",\n            \"listed\": \"int\",\n            \"publicSummary\": \"string\",\n            \"presentationStyle\": \"string\",\n            \"timeLimit\": \"int\",\n            \"attemptLimit\": \"int\",\n            \"layout\": \"string\"\n        }\n\t\t],\n    \"message\": \"string\"\n}"
              schema:
                $ref: '#/components/schemas/FormsGetDynaFormResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid."
                    }
              schema:
                $ref: '#/components/schemas/FormsGetDynaForm401Response'
      deprecated: false
  /api/my:
    get:
      tags:
        - Forms
      summary: 'Retrieve completed forms assigned to me  '
      operationId: Forms_getAssignedForms
      security:
        - sec0: []
          sec1: []
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "code": "int",
                        "data": [
                            {
                                "assignmentId": "int",
                                "status": "string",
                                "createUserModel": "object",
                                "createUserViewModel": "object",
                                "assignUserModel": "object",
                                "assignUserViewModel": {
                                    "userId": "int",
                                    "firstName": "string",
                                    "lastName": "string",
                                    "name": "string",
                                    "phone": "int",
                                    "email": "string",
                                    "status": "string",
                                    "shortName": "string",
                                    "thumbnail": "string",
                                    "gender": "string",
                                    "jobTitle": "string",
                                    "departmentId": "int",
                                    "department": "string",
                                    "profileId": "int",
                                    "profileName": "string",
                                    "timezone": "Asia/Calcutta",
                                    "userStartDate": "date",
                                    "cellPhone": "int",
                                    "empId": "string",
                                    "allocation": "int",
                                    "userDateFormat": "string",
                                    "star": "int",
                                    "imageName": "string",
                                    "notes": "string",
                                    "im": "int",
                                    "createuserid": "int",
                                    "cid": "int",
                                    "guid": "string",
                                    "hasAccess": "int",
                                    "id": "int"
                                },
                                "assignCandidateModel": "object",
                                "assignContactModel": "object",
                                "dynaFormModel": {
                                    "dynamicFormId": "int",
                                    "name": "string",
                                    "dynaFormCode": "string",
                                    "description": "string",
                                    "createUserModel": "object",
                                    "createUserViewModel": {
                                        "userId": "int",
                                        "firstName": "string",
                                        "lastName": "string",
                                        "name": "string",
                                        "phone": "int",
                                        "email": "string",
                                        "status": "string",
                                        "shortName": "string",
                                        "thumbnail": "string",
                                        "gender": "string",
                                        "jobTitle": "string",
                                        "departmentId": "int",
                                        "department": "string",
                                        "profileId": "int",
                                        "profileName": "string",
                                        "timezone": "string",
                                        "userStartDate": "date",
                                        "cellPhone": "int",
                                        "empId": "string",
                                        "allocation": "int",
                                        "userDateFormat": "date",
                                        "star": "int",
                                        "imageName": "string",
                                        "notes": "",
                                        "im": "int",
                                        "createuserid": "int",
                                        "cid": "int",
                                        "guid": "string",
                                        "hasAccess": "int",
                                        "id": "int"
                                    },
                                    "createts": "int",
                                    "updatets": "int",
                                    "cid": "int",
                                    "availability": "string",
                                    "status": "string",
                                    "anonymous": "int",
                                    "helpTextStyle": "string",
                                    "mappedEntity": "string",
                                    "userGroupModel": "string",
                                    "secSequence": "string",
                                    "thresholdScore": "string",
                                    "formType": "string",
                                    "dataFlow": "string",
                                    "showCorrect": "boolean",
                                    "listed": "int",
                                    "publicSummary": "boolean",
                                    "presentationStyle": "string",
                                    "timeLimit": "int",
                                    "attemptLimit": "int",
                                    "layout": "string"
                                },
                                "createts": "int",
                                "lastupdatets": "int",
                                "testStartts": "string",
                                "formSummary": "string",
                                "testEndts": "date",
                                "testTimeStatus": "string",
                                "code": "string",
                                "cid": "int",
                                "dueDate": "date",
                                "assessmentScore": "int",
                                "graderUserModel": "object",
                                "dynaFormSectionAssignmentModel": [
                                    {
                                        "dynaFormSectionAssignId": "int",
                                        "cid": "int",
                                        "createts": "int",
                                        "assigneeRole": "string",
                                        "status": "string",
                                        "sectionId": "int",
                                        "userViewModel": {
                                            "userId": "int",
                                            "firstName": "string",
                                            "lastName": "string",
                                            "name": "string",
                                            "phone": "int",
                                            "email": "string",
                                            "status": "string",
                                            "shortName": "string",
                                            "thumbnail": "string",
                                            "gender": "string",
                                            "jobTitle": "string",
                                            "departmentId": "int",
                                            "department": "string",
                                            "profileId": "int",
                                            "profileName": "string",
                                            "timezone": "string",
                                            "userStartDate": "date",
                                            "cellPhone": "int",
                                            "empId": "string",
                                            "allocation": "int",
                                            "userDateFormat": "date",
                                            "star": "int",
                                            "imageName": "string",
                                            "notes": "string",
                                            "im": "int",
                                            "createuserid": "int",
                                            "cid": "int",
                                            "guid": "string",
                                            "hasAccess": "int",
                                            "id": "int"
                                        },
                                        "dynamicFormSectionModel": {
                                            "sectionId": "int",
                                            "name": "string",
                                            "cid": "int",
                                            "hidden": "boolean",
                                            "dynamicFormId": "int",
                                            "sequence": "int",
                                            "createUserId": "int",
                                            "description": "string",
                                            "dynamicFormItemModelList": [
                                                {
                                                    "dynamicFormItemId": "int",
                                                    "name": "string",
                                                    "sectionId": "int",
                                                    "createUserId": "int",
                                                    "cid": "int",
                                                    "fieldType": "string",
                                                    "optionValues": "string",
                                                    "helpText": "string",
                                                    "createts": "int",
                                                    "dynamicFormId": "int",
                                                    "mappedEntityItem": "string",
                                                    "fieldTypeItem": "string",
                                                    "mandatory": "int",
                                                    "sequence": "int",
                                                    "weightage": "int",
                                                    "expectedValue": "string",
                                                    "correctFeedback": "boolean",
                                                    "incorrectFeedback": "boolean",
                                                    "attachmentModel": "object",
                                                    "prefill": "string",
                                                    "dynaFormItemOptionModelList": [],
                                                    "customListModel": "string",
                                                    "optionRandom": "boolean",
                                                    "numberingStyle": "string"
                                                }
                                            ],
                                            "assignee": "string",
                                            "userGroupModel": "string",
                                            "attachmentModel": "string",
                                            "assigneeModel": "string",
                                            "sample": "string",
                                            "totalweightage": "int"
                                        },
                                        "userGroupModel": "object",
                                        "completedBy": {
                                            "userId": "int",
                                            "firstName": "string",
                                            "lastName": "string",
                                            "name": "string",
                                            "phone": "string",
                                            "email": "string",
                                            "status": "string",
                                            "shortName": "string",
                                            "thumbnail": "string",
                                            "gender": "string",
                                            "jobTitle": "string",
                                            "departmentId": "int",
                                            "department": "string",
                                            "profileId": "int",
                                            "profileName": "string",
                                            "timezone": "string",
                                            "userStartDate": "date",
                                            "cellPhone": "int",
                                            "empId": "string",
                                            "allocation": "int",
                                            "userDateFormat": "date",
                                            "star": "int",
                                            "imageName": "string",
                                            "notes": "string",
                                            "im": "int",
                                            "createuserid": "int",
                                            "cid": "string",
                                            "guid": "int",
                                            "hasAccess": "int",
                                            "id": "int"
                                        }
                                    }
                                ],
                                "testResult": "string",
                                "allowGrader": "boolean",
                                "comments": "string",
                                "trainingModel": "object",
                                "optedOutForEmail": "string"
                            },
                                ],
                                "testResult": "string",
                                "allowGrader": "boolean",
                                "comments": "string",
                                "trainingModel": "object",
                                "optedOutForEmail": "boolean"
                            }
                        ]
                        "message": "successful"
                    }
              schema:
                $ref: '#/components/schemas/FormsGetAssignedFormsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid."
                    }
              schema:
                $ref: '#/components/schemas/FormsGetAssignedForms401Response'
      deprecated: false
  /api/response/{dynamicFormId}:
    get:
      tags:
        - Forms
      summary: 'Retrieve form response '
      operationId: Forms_getFormResponse
      security:
        - sec0: []
          sec1: []
      parameters:
        - description: The ID of User.
          name: assignUserId
          in: query
          required: false
          schema:
            type: integer
            format: int32
            example: .nan
        - description: The Assignment ID of the User.
          name: assignmentId
          in: query
          required: false
          schema:
            type: integer
            format: int32
            example: .nan
        - description: The ID of Form.
          name: dynamicFormId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "FormData": {
                            "dynamicFormId": "int",
                            "name": "string",
                            "dynaFormCode": "string",
                            "description": "string",
                            "createUserModel": "object",
                            "createts": "int",
                            "updatets": "int",
                            "cid": "int",
                            "availability": "string",
                            "status": "string",
                            "anonymous": "int",
                            "userGroupId": "string",
                            "secSequence": "string",
                            "sectionModelList": [
                                {
                                    "sectionId": "int",
                                    "name": "string",
                                    "cid": "int",
                                    "hidden": "boolean",
                                    "dynamicFormId": "int",
                                    "sequence": "int",
                                    "createUserId": "int",
                                    "description": "string",
                                    "dynamicFormItemModelList": [
                                        {
                                            "dynamicFormItemId": "int",
                                            "name": "string",
                                            "sectionId": "int",
                                            "createUserId": "int",
                                            "cid": "int",
                                            "fieldType": "string",
                                            "optionValues": "string",
                                            "helpText": "string",
                                            "createts": "int",
                                            "dynamicFormId": "int",
                                            "mappedEntityItem": "string",
                                            "fieldTypeItem": "string",
                                            "mandatory": "int",
                                            "sequence": "int",
                                            "weightage": "string",
                                            "expectedValue": "string",
                                            "correctFeedback": "boolean",
                                            "incorrectFeedback": "string",
                                            "attachmentModel": "object",
                                            "prefill": "string",
                                            "dynaFormItemOptionModelList":"object",
                                            "customListModel": "object",
                                            "optionRandom": "boolean",
                                            "numberingStyle": "string"
                                        }   
                                    ],
                                    "assignee": "string",
                                    "userGroupModel": "object",
                                    "attachmentModel": "object",
                                    "assigneeModel": "object",
                                    "sample": "string",
                                    "totalweightage": "int"
                                }
                            ],
                            "thresholdScore": "string",
                            "formType": "string",
                            "dataFlow": "string",
                            "embedCode": "string",
                            "showCorrect": "boolean",
                            "listed": "int",
                            "publicSummary": "boolean",
                            "presentationStyle": "string",
                            "timeLimit": "string",
                            "attemptLimit": "string",
                            "layout": "string",
                            "helpTextStyle": "string",
                            "questionRandom": "boolean",
                            "specificQuestionRandom": "string",
                            "sectionVisibility": "boolean",
                            "mappedEntity": "string"
                        },
                        "code": "int",
                        "message": "string",
                        "Responses": {
                            "int": {
                                "responseId": "int",
                                "itemId": "int",
                                "response": "string",
                                "createUserId": "int",
                                "createts": "int",
                                "assignmentId": "int",
                                "digitalSignatureModel": "string",
                                "cid": "int",
                                "remoteAddr": "int",
                                "graderResponse": "boolean",
                                "attachmentModel": "object",
                                "sentimentCode": "string",
                                "sentimentScore": "string",
                                "answerCorrect": "boolean"
                            }
                        }
                    }
              schema:
                $ref: '#/components/schemas/FormsGetFormResponseResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid."
                    }
              schema:
                $ref: '#/components/schemas/FormsGetFormResponse401Response'
      deprecated: false
  /api/responselist:
    get:
      tags:
        - Forms
      summary: Retrieve form responses
      operationId: Forms_getFormResponses
      security:
        - sec0: []
          sec1: []
      parameters:
        - description: The ID of Form.
          name: dynamicFormId
          in: query
          required: true
          schema:
            type: integer
            format: int32
            example: .nan
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "FormData": {
                            "dynamicFormId": "int",
                            "name": "string",
                            "dynaFormCode": "string",
                            "description": "string",
                            "createUserModel": "object",
                            "createts": "int",
                            "updatets": "int",
                            "cid": "int",
                            "availability": "string",
                            "status": "string",
                            "anonymous": "int",
                            "userGroupId": "int",
                            "secSequence": "string",
                            "sectionModelList": [
                                {
                                    "sectionId": "int",
                                    "name": "string",
                                    "cid": "int",
                                    "hidden": "boolean",
                                    "dynamicFormId": "int",
                                    "sequence": "int",
                                    "createUserId": "int",
                                    "description": "string",
                                    "dynamicFormItemModelList": [
                                        {
                                            "dynamicFormItemId": "int",
                                            "name": "string",
                                            "sectionId": "int",
                                            "createUserId": "int",
                                            "cid": "int",
                                            "fieldType": "string",
                                            "optionValues": "string",
                                            "helpText": "string",
                                            "createts": "int",
                                            "dynamicFormId": "int",
                                            "mappedEntityItem": "string",
                                            "fieldTypeItem": "string",
                                            "mandatory": "int",
                                            "sequence": "int",
                                            "weightage": "string",
                                            "expectedValue": "string",
                                            "correctFeedback": "boolean",
                                            "incorrectFeedback": "boolean",
                                            "attachmentModel": "object",
                                            "prefill": "string",
                                            "dynaFormItemOptionModelList": "object",
                                            "customListModel": "object",
                                            "optionRandom": "boolean",
                                            "numberingStyle": "string"
                                        }
                                    ],
                                    "assignee": "string",
                                    "userGroupModel": "object",
                                    "attachmentModel": "object",
                                    "assigneeModel": "object",
                                    "sample": "string",
                                    "totalweightage": "int"
                                }
                            ],
                            "thresholdScore": "string",
                            "formType": "string",
                            "dataFlow": "string",
                            "embedCode": "string",
                            "showCorrect": "boolean",
                            "listed": "int",
                            "publicSummary": "string",
                            "presentationStyle": "string",
                            "timeLimit": "string",
                            "attemptLimit": "string",
                            "layout": "string",
                            "helpTextStyle": "string",
                            "questionRandom": "boolean",
                            "specificQuestionRandom": "string",
                            "sectionVisibility": "boolean",
                            "mappedEntity": "string"
                        },
                        "code": "int",
                        "message": "successful",
                        "Responses": {
                            "int": {
                                "responseId": "int",
                                "itemId": "int",
                                "response": "string",
                                "createUserId": "int",
                                "createts": "int",
                                "assignmentId": "int",
                                "digitalSignatureModel": "string",
                                "cid": "int",
                                "remoteAddr": "string",
                                "graderResponse": "boolean",
                                "attachmentModel": "object",
                                "sentimentCode": "string",
                                "sentimentScore": "string",
                                "answerCorrect": "boolean"
                            }
                        }
                    }
              schema:
                $ref: '#/components/schemas/FormsGetFormResponsesResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid."
                    }
              schema:
                $ref: '#/components/schemas/FormsGetFormResponses401Response'
      deprecated: false
  /api/saveFormResponse:
    post:
      tags:
        - Forms
      summary: 'Save form repsonse '
      operationId: Forms_saveFormResponse
      security:
        - sec0: []
          sec1: []
      parameters:
        - description: The Assignment ID of the User.
          name: assignmentId
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "code": "int",
                      "message": "Successful"
                    }
              schema:
                $ref: '#/components/schemas/FormsSaveFormResponseResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid."
                    }
              schema:
                $ref: '#/components/schemas/FormsSaveFormResponse401Response'
      deprecated: false
  /api/saveItemResponse:
    post:
      tags:
        - Forms
      summary: Save item response
      operationId: Forms_submitItemResponse
      security:
        - sec0: []
          sec1: []
      parameters:
        - description: The Assignment ID of the User.
          name: assignmentId
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - description: The ID of the form Item.
          name: itemId
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - description: Response Value to save in Form.
          name: responseValue
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "code": "int",
                      "message": "Successful"
                    }
              schema:
                $ref: '#/components/schemas/FormsSubmitItemResponseResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid."
                    }
              schema:
                $ref: '#/components/schemas/FormsSubmitItemResponse401Response'
      deprecated: false
  /api/view:
    get:
      tags:
        - Forms
      summary: Retrieve form details
      operationId: Forms_getDetails
      security:
        - sec0: []
          sec1: []
      parameters:
        - description: The ID of Form.
          name: dynamicFormId
          in: query
          required: true
          schema:
            type: integer
            format: int32
            example: .nan
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "FormData": {
                            "dynamicFormId": "int",
                            "name": "string",
                            "dynaFormCode": "string",
                            "description": "string",
                            "createUserModel": "object",
                            "createUserViewModel": {
                                "userId": "int",
                                "firstName": "string",
                                "lastName": "string",
                                "name": "string",
                                "phone": "int",
                                "email": "string",
                                "status": "string",
                                "shortName": "string",
                                "thumbnail": "string",
                                "gender": "string",
                                "jobTitle": "string",
                                "departmentId": "int",
                                "department": "string",
                                "profileId": "int",
                                "profileName": "string",
                                "timezone": "string",
                                "userStartDate": "int",
                                "cellPhone": "int",
                                "empId": "string",
                                "allocation": "int",
                                "userDateFormat": "string",
                                "star": "int",
                                "imageName": "string",
                                "notes": "string",
                                "im": "int",
                                "createuserid": "int",
                                "cid": "int",
                                "guid": "string",
                                "hasAccess": "int",
                                "id": "int"
                            },
                            "createts": "int",
                            "updatets": "string",
                            "cid": "int",
                            "availability": "string",
                            "status": "string",
                            "anonymous": "int",
                            "helpTextStyle": "string",
                            "mappedEntity": "string",
                            "userGroupModel": "object",
                            "secSequence": "string",
                            "thresholdScore": "int",
                            "formType": "string",
                            "dataFlow": "string",
                            "showCorrect": "boolean",
                            "listed": "int",
                            "publicSummary": "boolean",
                            "presentationStyle": "string",
                            "timeLimit": "int",
                            "attemptLimit": "string",
                            "layout": "string"
                        },
                        "code": "string",
                        "data": [
                            {
                                "sectionId": "int",
                                "name": "string",
                                "cid": "int",
                                "hidden": "boolean",
                                "dynamicFormId": "int",
                                "sequence": "int",
                                "createUserId": "int",
                                "description": "string",
                                "dynamicFormItemModelList": [
                                    {
                                        "dynamicFormItemId": "int",
                                        "name": "string",
                                        "sectionId": "int",
                                        "createUserId": "int",
                                        "cid": "int",
                                        "fieldType": "string",
                                        "optionValues": "string",
                                        "helpText": "string",
                                        "createts": "int",
                                        "dynamicFormId": "int",
                                        "mappedEntityItem": "string",
                                        "fieldTypeItem": "string",
                                        "mandatory": "int",
                                        "sequence": "int",
                                        "weightage": "string",
                                        "expectedValue": "string",
                                        "correctFeedback": "string",
                                        "incorrectFeedback": "string",
                                        "attachmentModel": "object",
                                        "prefill": "string",
                                        "dynaFormItemOptionModelList": [
                    "object"
                    ],
                                        "customListModel": "object",
                                        "optionRandom": "boolean",
                                        "numberingStyle": "string"
                                    }
                                    
                                ],
                                "assignee": "string",
                                "userGroupModel": "object",
                                "attachmentModel": "object",
                                "assigneeModel": "object",
                                "sample": "string",
                                "totalweightage": "int"
                            }
                        ],
                        "message": "string"
                    }
              schema:
                $ref: '#/components/schemas/FormsGetDetailsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid."
                    }
              schema:
                $ref: '#/components/schemas/FormsGetDetails401Response'
      deprecated: false
  /goal/list:
    get:
      tags:
        - Goals
      summary: Retrieve goals of user
      operationId: Goals_getUserGoals
      security:
        - sec0: []
          sec1: []
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "message": "Successfully retrieved the goal list."
                    }
              schema:
                $ref: '#/components/schemas/GoalsGetUserGoalsResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /api/jobprofiles:
    get:
      tags:
        - Job profiles
      summary: Retrieve job profiles
      operationId: JobProfiles_getJobProfiles
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters:
        - description: Status of the job profile A- Active, OPEN- Open, ARCHV- Archive
          name: status
          in: query
          required: true
          schema:
            type: string
            enum:
              - OPEN
              - A
              - ARCHV
            default: A
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    [
                      {
                        "cid": "int",
                        "profileId": "int",
                        "profileName": "string",
                        "profileDescription": "string",
                        "orgId": "int",
                        "profileResponsibilities": "string",
                        "profileRequirements": "string",
                        "salaryBandMin": "int",
                        "salaryBandMax": "int",
                        "salaryBandCurrency": "string",
                        "managerProfileId": "int",
                        "managerProfileName": "string",
                        "customFieldValueModelList": "string",
                        "numberofUsers": "int",
                        "createuserid": "int",
                        "status": "string",
                        "careerPathwayModelList": "string",
                        "objectType": "string",
                        "objectName": "string",
                        "objectid": "int"
                      }
                    ]
              schema:
                $ref: '#/components/schemas/JobProfilesGetJobProfilesResponse'
        '401':
          description: '401'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
                    }
              schema:
                $ref: '#/components/schemas/JobProfilesGetJobProfiles401Response'
      deprecated: false
  /api/leave/hours/credit:
    get:
      tags:
        - Leaves
      summary: Retrieve remaining hours credit for leave policy
      operationId: Leaves_getRemainingHoursCredit
      security:
        - sec0: []
          sec1: []
      parameters:
        - description: The date of the leave.
          name: leaveDate
          in: query
          required: true
          schema:
            type: string
            format: date
        - description: The Id of the leave.
          name: leaveId
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - description: The userId for that leave.
          name: leaveUserId
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - description: The Id of the ptoPolicy
          name: ptoPolicyId
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Successful."
                    }
              schema:
                $ref: '#/components/schemas/LeavesGetRemainingHoursCreditResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Bad Request."
                    }
              schema:
                $ref: '#/components/schemas/LeavesGetRemainingHoursCredit400Response'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
                    }
              schema:
                $ref: '#/components/schemas/LeavesGetRemainingHoursCredit401Response'
        '409':
          description: Conflict
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Something Went Wrong!"
                    }
              schema:
                $ref: '#/components/schemas/LeavesGetRemainingHoursCredit409Response'
      deprecated: false
  /api/leaverequest:
    post:
      tags:
        - Leaves
      summary: Create a new leave.
      operationId: Leaves_createNewLeave
      security:
        - sec0: []
          sec1: []
      parameters: []
      requestBody:
        description: leaveModel
        content:
          application/json:
            schema:
              required:
                - date
              $ref: '#/components/schemas/LeaveModel'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Leave Request is created successfully."
                    }
              schema:
                $ref: '#/components/schemas/LeavesCreateNewLeaveResponse'
        '400':
          description: Bad request
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Error while creating leave plan."
                    }
              schema:
                $ref: '#/components/schemas/LeavesCreateNewLeave400Response'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
                    }
              schema:
                $ref: '#/components/schemas/LeavesCreateNewLeave401Response'
        '409':
          description: Conflict
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Something Went Wrong!"
                    }
              schema:
                $ref: '#/components/schemas/LeavesCreateNewLeave409Response'
      deprecated: false
  /api/leaverequests:
    get:
      tags:
        - Leaves
      summary: Retrieve leave requests within a date range
      operationId: Leaves_getLeaveRequestsWithinDateRange
      security:
        - sec0: []
          sec1: []
      parameters:
        - description: End date of the leave.
          name: endDate
          in: query
          required: true
          schema:
            type: string
            format: date
        - description: The userId for that leave.
          name: leaveUserid
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - description: Start date of the leave.
          name: startDate
          in: query
          required: true
          schema:
            type: string
            format: date
        - description: |-
            The status of leave. 
             AP: Leave approved 
             WA: Leave is waiting for approval 
             RJ: Leave has been rejected 
             PAP: Leave is in a muti layer approval flow and has been partially approved 
             RCAL:  Leave was approved, taken, computed and then recalled 
          name: status
          in: query
          required: false
          schema:
            type: string
            default: AP
            enum:
              - AP
              - WA
              - RJ
              - PAP
              - RCAL
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    [
                      {
                        "cardId": "int",
                        "userModel": {
                          "cid": "int",
                          "userId": "int",
                          "position": "string",
                          "firstName": "string",
                          "shortName": "string",
                          "lastName": "string",
                          "displayFullName": "string",
                          "userStartDate": "Date",
                          "email": "string",
                          "cellPhone": "",
                          "userName": "string",
                          "userProfileModel": {
                            "cid": "int",
                            "profileId": "int",
                            "profileName": "string",
                            "profileDescription": "",
                            "profileResponsibilities": "",
                            "profileRequirements": "",
                            "salaryBandMin": "int",
                            "salaryBandMax": "int",
                            "salaryBandCurrency": "",
                            "managerProfileId": null,
                            "managerProfileName": null,
                            "customFieldValueModelList": null,
                            "numberofUsers": null,
                            "createuserid": null,
                            "status": "string",
                            "careerPathwayModelList": null,
                            "objectType": "string",
                            "objectName": "string",
                            "objectid": "int"
                          },
                          "departmentModel": {
                            "departmentId": "int",
                            "name": "string",
                            "description": "string",
                            "deptHead": "int",
                            "cid": "int",
                            "departmentCode": "",
                            "departmentLabel": "string",
                            "parentDepartmentId": null,
                            "parentDepartmentName": null,
                            "deptHeadName": null,
                            "noOfEmployees": "int",
                            "userModel": {
                              "userId": "int",
                              "firstName": "string",
                              "lastName": "string",
                              "name": "string",
                              "phone": "",
                              "email": "string",
                              "status": "string",
                              "shortName": "string",
                              "gender": "string",
                              "jobTitle": "",
                              "departmentId": "int",
                              "locationId": "int",
                              "location": "string",
                              "profileId": "int",
                              "profileName": "string",
                              "timezone": "string",
                              "userStartDate": "Date",
                              "userEndDate": "Date",
                              "cellPhone": "",
                              "empId": "",
                              "allocation": "int",
                              "userDateFormat": "Date",
                              "star": "int",
                              "createuserid": "int",
                              "countryId": "int",
                              "cid": "int",
                              "hasAccess": "int",
                              "userNameFormat": "string",
                              "id": "int"
                            }
                          },
                          "secondLastName": "string",
                          "middleName": "string",
                          "namePronunciation": "string",
                          "familySuffix": "string",
                          "status": "string",
                          "ptobalance": "int",
                          "timezone": "string",
                          "practiceId": "int",
                          "profileId": "int",
                          "allocation": "int",
                          "countryId": "int",
                          "lastupdateuserid": "int",
                          "lastupdatets": "Date",
                          "userDateFormat": "Date",
                          "hrPortal": "string",
                          "userDisplayName": "string",
                          "timecardPeriodPref": "string",
                          "languagePreference": "string",
                          "paId": "int",
                          "appMenuId": "int",
                          "calWeekPref": "string",
                          "locationModel": {
                            "locationId": "int",
                            "locationName": "string",
                            "cid": "int",
                            "locationDescription": "string",
                            "locationType": "string",
                            "address": "string",
                            "locationUID": "int",
                            "status": "string",
                            "workingDays": "int",
                            "locationLabel": "string",
                            "parentLocationId": "int",
                            "createuserid": "int",
                            "addressModelList": [
                              {
                                "addressId": "int",
                                "addressLine1": "string",
                                "addressLine2": "string",
                                "city": "string",
                                "state": "string",
                                "zipCode": "int",
                                "createts": "int",
                                "cid": "int",
                                "userId": "int",
                                "candidateId": "int",
                                "addressType": "int",
                                "locationId": "int",
                                "contactId": "int",
                                "countryId": "int",
                                "countryModel": {
                                  "countryId": "int",
                                  "countryName": "string",
                                },
                                "status": "string",
                                "verificationStatus": "string",
                                "custId": "int",
                                "createUserId": "int",
                                "countryid": "int"
                              }
                            ]
                          },
                          "azureObjectIdentifier": "string",
                          "isView": "boolean",
                          "view": "boolean"
                        },
                        "description": "strin.",
                        "date": "Date",
                        "leaveEndDate": "Date",
                        "status": "string",
                        "cid": "int",
                        "ptoPolicyModel": {
                          "ptoPolicyId": "int",
                          "cid": "int",
                          "effectiveDate": "Date",
                          "expirationDate": "Date",
                          "policyName": "string",
                          "description": "string",
                          "createUserId": "int",
                          "accrualThresholdWeeks": "int",
                          "accrualRateAnnual": "int",
                          "accrualRateHours": "int",
                          "rollOverMax": "int",
                          "applicability": "int",
                          "accrualtype": "string",
                          "accrualTimeSpan": "string",
                          "leaveYearStartDate": "Date",
                          "thresholdUnit": "string",
                          "thresholdQuantity": "int",
                          "allowRequestBeyondBal": "int",
                          "unit": "string",
                          "lastRun": "Date",
                          "nextRunDate": "Date",
                          "daysDefinition": "string",
                          "decimalDigits": "int",
                          "leastCount": "int",
                          "leaveMaxDays": "int",
                          "maxAccrual": "int",
                          "locationId": "int",
                          "orgUnitId": "int",
                          "lastupdateuserid": "int",
                          "policyNameUppercase": "string",
                          "allowToOverrideAccrualRate": true
                        },
                        "totalLeaveHours": "int",
                        "totalLeaveDays": "int",
                        "currentBalance": "int",
                        "balanceDate": "int",
                        "numberOfDays": "int",
                        "customHours": "int",
                        "ptoCalcReportId": "int",
                        "userPtoId": "int",
                        "integrationStatus": "string",
                        "source": "string",
                        "createUserViewModel": {
                          "userId": "int",
                          "firstName": "string",
                          "lastName": "string",
                          "name": "string",
                          "email": "string",
                          "status": "string",
                          "shortName": "string",
                          "jobTitle": "string",
                          "departmentId": "int",
                          "locationId": "int",
                          "department": "string",
                          "location": "string",
                          "profileId": "int",
                          "profileName": "string",
                          "timezone": "string",
                          "userStartDate": "Date",
                          "empId": "string",
                          "allocation": "int",
                          "userDateFormat": "Date
                          "createuserid": "int",
                          "countryId": "int",
                          "cid": "int",
                          "userNameFormat": "string",
                          "id": "int"
                        },
                        "approvalFlowId": "int",
                        "reason": "string",
                        "id": "int"
                      }
                    ]
              schema:
                $ref: >-
                  #/components/schemas/LeavesGetLeaveRequestsWithinDateRangeResponse
        '400':
          description: Bad Request
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Bad Request."
                    }
              schema:
                $ref: >-
                  #/components/schemas/LeavesGetLeaveRequestsWithinDateRange400Response
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
                    }
              schema:
                $ref: >-
                  #/components/schemas/LeavesGetLeaveRequestsWithinDateRange401Response
        '409':
          description: Conflict
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Something Went Wrong!"
                    }
              schema:
                $ref: >-
                  #/components/schemas/LeavesGetLeaveRequestsWithinDateRange409Response
      deprecated: false
  /api/manage/leaves:
    get:
      tags:
        - Leaves
      summary: Retrieve leaves for approval/rejection by filtering on basis of Role
      operationId: Leaves_getLeavesBasedOnRole
      security:
        - sec0: []
          sec1: []
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": [
                        {
                          "cardId": "int",
                          "userModel": {
                            "cid": "int",
                            "empId": "int",
                            "userId": "int",
                            "position": "string",
                            "firstName": "string",
                            "shortName": "string",
                            "lastName": "string",
                            "displayFullName": "string",
                            "userStartDate": "Date",
                            "userEndDate": "Date",
                            "email": "string",
                            "cellPhone": "string",
                            "userName": "string",
                            "userProfileModel": {
                              "cid": "int",
                              "profileId": "int",
                              "profileName": "string",
                              "profileDescription": "string",
                              "orgId": "int",
                              "profileResponsibilities": "string",
                              "profileRequirements": "string",
                              "salaryBandMin": "int",
                              "salaryBandMax": "int",
                              "managerProfileId": "int",
                              "managerProfileName": "string",
                              "numberofUsers": "int",
                              "createuserid": "int",
                              "status": "string",
                              "objectType": "string",
                              "objectName": "string",
                              "objectid": "int"
                            },
                            "departmentModel": {
                              "departmentId": "int",
                              "name": "string",
                              "description": "string",
                              "deptHead": "int",
                              "cid": "int",
                              "departmentCode": "string",
                              "departmentLabel": "string",
                              "parentDepartmentId": "int",
                              "parentDepartmentName": "string",
                              "deptHeadName": "string",
                              "noOfEmployees":"int",
                              "userModel": {
                                "userId": "int",
                                "firstName": "string",
                                "lastName": "string",
                                "name": "string",
                                "phone": "int",
                                "email": "string",
                                "status": "stringA",
                                "shortName": "string",
                                "gender": "string",
                                "jobTitle": "string",
                                "departmentId": "int",
                                "locationId": "int",
                                "department": "string",
                                "location": "string",
                                "profileId": "int",
                                "timezone": "string",
                                "userStartDate": "Date",
                                "userEndDate": "Date",
                                "cellPhone": "int",
                                "empId": "string",
                                "userDateOfBirth": "Date",
                                "allocation": "int",
                                "notes": "string",
                                "createuserid": "int",
                                "countryId": "int",
                                "cid": "int",
                                "hasAccess": "boolean",
                                "id": "int"
                              }
                            },
                            "prefixSalutation": "string",
                            "secondLastName": "string",
                            "middleName": "string",
                            "namePronunciation": "string",
                            "familySuffix": "string",
                            "status": "string",
                            "ptoannual": "int",
                            "ptobalance": "int",
                            "createts": "int",
                            "timezone": "string",
                            "practiceId": "int",
                            "profileId": "int",
                            "allocation": "int",
                            "lastupdateuserid": "int",
                            "lastupdatets": "Date",
                            "userDateFormat": "Date",
                            "hrPortal": "string",
                            "userDisplayName": "string",
                            "timecardPeriodPref": "string",
                            "languagePreference": "string",
                            "userNameFormat": "string",
                            "relativeDate": "date",
                            "paId": "int",
                            "calWeekPref": "boolean",
                            "hasAccess": "boolean",
                            "notifications": "boolean",
                            "locationModel": {
                              "locationId": "int",
                              "locationName": "string",
                              "cid": "int",
                              "locationDescription": "string",
                              "locationType": "string",
                              "address": "string",
                              "locationUID": "int",
                              "status": "string",
                              "workingDays": "int",
                              "locationCode": "string",
                              "locationLabel": "string",
                              "parentLocationId": "int",
                              "createuserid": "int",
                              "addressModelList": [
                                {
                                  "addressId": "int",
                                  "addressLine1": "string",
                                  "addressLine2": "string",
                                  "city": "string",
                                  "state": "string",
                                  "zipCode": "int",
                                  "createts": "int",
                                  "cid": "int",
                                  "userId": "int",
                                  "candidateId": "int",
                                  "addressType": "string",
                                  "locationId": "int",
                                  "contactId": "int",
                                  "countryId": "int",
                                  "countryModel": {
                                    "countryId": "int",
                                    "countryName": "string",
                                    "iso2": "string"
                                  },
                                  "status": "string",
                                  "verificationStatus": 'string",
                                  "custId": "int",
                                  "createUserId": "int",
                                  "countryCode": "string",
                                  "countryid": "int"
                                }
                              ]
                            },
                            "azureObjectIdentifier": "string",
                            "isView": "boolean",
                            "view": "boolean"
                          },
                          "description": "string",
                          "date": "Date",
                          "leaveEndDate": "Date",
                          "status": "string",
                          "cid": "int",
                          "ptoPolicyModel": {
                            "ptoPolicyId": "int",
                            "cid": "int",
                            "effectiveDate": "Date",
                            "expirationDate": "Date",
                            "policyName": "string",
                            "description": "string",
                            "leaveType": "string",
                            "createUserId": "int",
                            "createts": "int",
                            "accrualThresholdWeeks": "int",
                            "accrualRateAnnual": "int",
                            "accrualRateHours": "int",
                            "rollOverPercentage": "int",
                            "rollOverMax": "int",
                            "accrualtype": "string",
                            "bonus": "int",
                            "bonusMax": "int",
                            "accrualTimeSpan": "string",
                            "carryoverExpirationUnit": "string",
                            "carryoverExpirationQuantity": "int",
                            "carryoverDate": "Date",
                            "leaveYearStart": "string",
                            "leaveYearStartDate": "Date",
                            "thresholdUnit": "int",
                            "thresholdQuantity": "int",
                            "isAccrued": "boolean",
                            "allowRequestBeyondBal": "boolean",
                            "unit": "string",
                            "lastRun": "Date",
                            "nextRunDate": "Date",
                            "showInCalendar": "boolean",
                            "showInTimesheet": "boolean",
                            "accrualRateAnnualUnit": "int",
                            "accrualRateUnit": "int",
                            "daysDefinition": "string",
                            "ptoPolicyChainModel": {
                              "chainId": "int",
                              "chainName": "string",
                              "chainDesc": "",
                              "createts": "int",
                              "cid": "int",
                              "hasPtoPolicies": "boolean"
                            },
                            "ptoPolicyChainSeqId": "int",
                            "tenureThreshold": "int",
                            "halfDayAllowed": "boolean",
                            "decimalDigits": "int",
                            "leastCount": "int",
                            "leaveMaxDays": "int",
                            "maxAccrual": "int",
                            "locationId": "int",
                            "orgUnitId": "int",
                            "lastupdateuserid": "int",
                            "hasAssignment": "boolean",
                            "applicableToEveryone": "boolean",
                            "policyNameUppercase": "string",
                            "allowToOverrideAccrualRate": "boolean"
                          },
                          "totalLeaveHours": "int",
                          "totalLeaveDays": "int",
                          "currentBalance": "int",
                          "balanceDate": "Date",
                          "userDisplayName": "string",
                          "isAuthorizeToAccess": "boolean",
                          "authorizeToAccess": "boolean"
                        }
                          
                      ],
                      "message": "string"
                    }
              schema:
                $ref: '#/components/schemas/LeavesGetLeavesBasedOnRoleResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Bad Request."
                    }
              schema:
                $ref: '#/components/schemas/LeavesGetLeavesBasedOnRole400Response'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
                    }
              schema:
                $ref: '#/components/schemas/LeavesGetLeavesBasedOnRole401Response'
        '409':
          description: Conflict
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Something went wrong."
                    }
              schema:
                $ref: '#/components/schemas/LeavesGetLeavesBasedOnRole409Response'
      deprecated: false
  /api/process/leave:
    get:
      tags:
        - Leaves
      summary: Process the leave of a user by leave Id
      operationId: Leaves_processLeaveById
      security:
        - sec0: []
          sec1: []
      parameters:
        - description: The Id for the leave.
          name: leaveId
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - description: |-
            The status of leave. 
             AP: Leave approved 
             WA: Leave is waiting for approval 
             RJ: Leave has been rejected 
             PAP: Leave is in a muti layer approval flow and has been partially approved 
             RCAL:  Leave was approved, taken, computed and then recalled 
          name: status
          in: query
          required: true
          schema:
            type: string
            default: AP
            enum:
              - AP
              - WA
              - RJ
              - PAP
              - RCAL
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Successful."
                    }
              schema:
                $ref: '#/components/schemas/LeavesProcessLeaveByIdResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Bad Request."
                    }
              schema:
                $ref: '#/components/schemas/LeavesProcessLeaveById400Response'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
                    }
              schema:
                $ref: '#/components/schemas/LeavesProcessLeaveById401Response'
        '409':
          description: Conflict
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Something Went Wrong!"
                    }
              schema:
                $ref: '#/components/schemas/LeavesProcessLeaveById409Response'
      deprecated: false
  /api/userpto/balance/add:
    post:
      tags:
        - Leaves
      summary: Add PTO balance.
      operationId: Leaves_addPtoBalance
      security:
        - sec0: []
          sec1: []
      parameters: []
      requestBody:
        description: ptoBalances
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LeavesAddPtoBalanceRequest'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Userpto balance added successfully."
                    }
              schema:
                $ref: '#/components/schemas/LeavesAddPtoBalanceResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Bad Request."
                    }
              schema:
                $ref: '#/components/schemas/LeavesAddPtoBalance400Response'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
                    }
              schema:
                $ref: '#/components/schemas/LeavesAddPtoBalance401Response'
        '409':
          description: Conflict
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Something Went Wrong!"
                    }
              schema:
                $ref: '#/components/schemas/LeavesAddPtoBalance409Response'
      deprecated: false
  /api/orgrelation/orgRelationsByUser:
    get:
      tags:
        - OrgRelation
      summary: Retrieve all the OrgRelations for the given user.
      operationId: OrgRelation_getOrgRelationsByUser
      security:
        - sec0: []
          sec1: []
      description: >-
        Retrieve all the OrgRelations for the given user including Active,
        Archive and Future OrgRelations.
      parameters:
        - description: User Id for which org relation will be fetched.
          name: employeeUserId
          in: query
          schema:
            type: integer
            format: int32
        - description: Employee Id for which org relation will be fetched.
          name: empId
          in: query
          schema:
            type: string
        - description: Email for which org relation will be fetched.
          name: email
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": [
                            {
                                "orgRelationId": "int",
                                "userId": "int",
                                "managerUserId": "int",
                                "managerEmail": "string",
                                "userEmail": "string",
                                "relationType": "string",
                                "startDate": "Date",
                                "endDate": "Date",
                                "cid": "int",
                                "status": "string",
                                "positionId": "int",
                                "otherPositionId": "int",
                                "positionModel": "string",
                                "otherPositionModel": "string",
                                "reporteeUserModel": {
                                    "cid": "int",
                                    "empId": "int",
                                    "userId": "int",
                                    "position": "string",
                                    "firstName": "string",
                                    "shortName": "string",
                                    "lastName": "string",
                                    "displayFullName": "string",
                                    "userStartDate": "Date",
                                    "email": "string",
                                    "cellPhone": "int",
                                    "userName": "string",
                                    "userProfileModel": {
                                        "profileId": "int",
                                        "profileName": "string",
                                        "profileDescription": "string",
                                        "orgId": "int",
                                        "profileResponsibilities": "string",
                                        "profileRequirements": "string",
                                        "salaryBandMin": "double",
                                        "salaryBandMax": "double",
                                        "salaryBandCurrency": "int",
                                        "managerProfileId": "int",
                                        "customFieldValueModelList": "object"
                                    },
                                    "departmentModel": {
                                        "departmentId": "int",
                                        "name": "string",
                                        "description": "string",
                                        "deptHead": "string",
                                        "cid": "int",
                                        "departmentCode": "string",
                                        "departmentLabel": "string",
                                        "parentDepartmentId": "int",
                                        "parentDepartmentName": "string",
                                        "deptHeadName": "string",
                                        "noOfEmployees": "int"
                                    },
                                    "prefixSalutation": "string",
                                    "secondLastName": "string",
                                    "middleName": "string",
                                    "namePronunciation": "string",
                                    "familySuffix": "string",
                                    "status": "string",
                                    "notes": "string",
                                    "gender": "string",
                                    "phone": "int",
                                    "im": "int",
                                    "createts": "int",
                                    "allocation": "double",
                                    "countryId": "int",
                                    "userDisplayName": "string",
                                    "star": "int",
                                    "languagePreference": "string",
                                    "jobGrade": "string",
                                    "locationModel": {
                                        "locationId": "int",
                                        "locationName": "string",
                                        "locationDescription": "string",
                                        "locationType": "string",
                                        "address": "string",
                                        "lattitude": "string",
                                        "longitude": "string",
                                        "locationUID": "int",
                                        "status": "string",
                                        "workingDays": "string",
                                        "locationCode": "string",
                                        "locationLabel": "string",
                                        "parentLocationId": "int",
                                        "parentLocationName": "string",
                                        "noOfEmployees": "int"
                                    },
                                    "isView": "boolean"
                                },
                                "createts": "int"
                            },
                        ],
                        "message": "string"
                    }
              schema:
                $ref: '#/components/schemas/OrgRelationGetOrgRelationsByUserResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Result:
                  value: >-
                    {

                    "message": "Access denied! Either Authorization or x-api-key
                    & userid parameters are not present/valid or you don't have
                    the necessary permissions"

                    }  
              schema:
                $ref: >-
                  #/components/schemas/OrgRelationGetOrgRelationsByUser401Response
        '409':
          description: Conflict
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "message": "string"
                    }
              schema:
                $ref: >-
                  #/components/schemas/OrgRelationGetOrgRelationsByUser409Response
      deprecated: false
  /api/orgrelation/allactive:
    get:
      tags:
        - OrgRelation
      summary: Retrieve all active OrgRelations
      operationId: OrgRelation_getAllActive
      security:
        - sec0: []
          sec1: []
      description: Retrieve all active OrgRelations for entire organization.
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    "data": [
                            {
                                "orgRelationId": "int",
                                "userId": "int",
                                "managerUserId": "int",
                                "managerEmail": "string",
                                "userEmail": "string",
                                "relationType": "string",
                                "startDate": "date",
                                "endDate": "date",
                                "cid": "int",
                                "status": "string",
                                "positionId": "int",
                                "otherPositionId": "int",
                                "positionModel": "string",
                                "otherPositionModel": "string",
                                "reporteeUserModel": {
                                    "cid": "int",
                                    "empId": "int",
                                    "userId": "int",
                                    "position": "string",
                                    "firstName": "string",
                                    "shortName": "string",
                                    "lastName": "string",
                                    "displayFullName": "string",
                                    "userStartDate": "date",
                                    "email": "string",
                                    "cellPhone": "int",
                                    "userName":"string",
                                    "departmentModel": {
                                        "departmentId": "int",
                                        "name": "string",
                                        "description": "string",
                                        "deptHead": "int",
                                        "cid": "int",
                                        "departmentCode": "string",
                                        "departmentLabel": "string",
                                        "parentDepartmentId": "int",
                                        "parentDepartmentName": "string",
                                        "deptHeadName": "string",
                                        "noOfEmployees": "int"
                                    },
                                    "prefixSalutation": "string",
                                    "middleName": "string",
                                    "namePronunciation": "string",
                                    "familySuffix": "string",
                                    "status": "string",
                                    "notes": "string",
                                    "gender": "string",
                                    "phone": "int",
                                    "im": "string",
                                    "createts": "int",
                                    "imageName": "string",
                                    "thumbnail": "string",
                                    "allocation": "int",
                                    "countryId": "int",
                                    "userDisplayName": "string",
                                    "star": "int",
                                    "languagePreference": "string",
                                    "jobGrade": "string",
                                    "locationModel": {
                                        "locationId": "int",
                                        "locationName": "string",
                                        "locationDescription": "string",
                                        "locationType": "string",
                                        "address": "string",
                                        "lattitude": "string",
                                        "longitude": "string",
                                        "locationUID": "string",
                                        "status": "string",
                                        "workingDays": "string",
                                        "locationCode": "string",
                                        "locationLabel": "string",
                                        "parentLocationId": "int",
                                        "parentLocationName": "string",
                                        "noOfEmployees": "int"
                                    },
                                    "isView": "boolean"
                                },
                                "reporterUserModel": "string",
                                "createts": "int"
                            }
                      ],
                      "message": "string"
                    }
              schema:
                $ref: '#/components/schemas/OrgRelationGetAllActiveResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Result:
                  value: >-
                    {

                    "message": "Access denied! Either Authorization or x-api-key
                    & userid parameters are not present/valid or you don't have
                    the necessary permissions"

                    } 
              schema:
                $ref: '#/components/schemas/OrgRelationGetAllActive401Response'
        '409':
          description: Conflict
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "message": "string"
                    }
              schema:
                $ref: '#/components/schemas/OrgRelationGetAllActive409Response'
      deprecated: false
  /api/orgrelation/save:
    get:
      tags:
        - OrgRelation
      summary: Saves the OrgRelation for the User
      operationId: OrgRelation_saveUser
      security:
        - sec0: []
          sec1: []
      description: Saves the OrgRelation for the User.
      parameters:
        - description: ID of OrgRelation for which data will be saved.
          name: orgRelationId
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - description: User Id of the manager.
          name: managerUserId
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - description: Email of manager.
          name: managerEmail
          in: query
          required: true
          schema:
            type: string
        - description: User's email.
          name: userEmail
          in: query
          schema:
            type: string
        - description: User Id of the reporter.
          name: otherUserId
          in: query
          schema:
            type: integer
            format: int32
        - description: Type of relation w.r.t manager.
          name: relationType
          in: query
          schema:
            type: string
        - description: Date of start in that org unit.
          name: startDate
          in: query
          schema:
            type: string
            format: date
        - description: Ending date in that org unit.
          name: enddate
          in: query
          schema:
            type: string
            format: date
        - description: Company ID.
          name: cid
          in: query
          schema:
            type: integer
            format: int32
        - description: User is active or not active.
          name: status
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message":"Reports To added successfully."
                    }
              schema:
                $ref: '#/components/schemas/OrgRelationSaveUserResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Result:
                  value: >-
                    {

                    "message":"Access denied! Either Authorization or x-api-key
                    & userid parameters are not present/valid or you don't have
                    the necessary permissions"

                    }
              schema:
                $ref: '#/components/schemas/OrgRelationSaveUser401Response'
        '409':
          description: Conflict
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                    "message":"failure"
                    }
              schema:
                $ref: '#/components/schemas/OrgRelationSaveUser409Response'
      deprecated: false
  /api/orgunits:
    get:
      tags:
        - Org Units
      summary: Retrieve org units
      operationId: OrgUnits_getOrgUnits
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters: []
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    [
                      {
                        "departmentId": "int",
                        "name": "string",
                        "description": "string",
                        "deptHead": "string",
                        "cid": "int",
                        "departmentCode": "string",
                        "departmentLabel": "string",
                        "parentDepartmentId": "int",
                        "parentDepartmentName": "string",
                        "deptHeadName": "string",
                        "noOfEmployees": "int",
                        "userModel": "model"
                      }
                    ]
              schema:
                $ref: '#/components/schemas/OrgUnitsGetOrgUnitsResponse'
        '401':
          description: '401'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid."
                    }
              schema:
                $ref: '#/components/schemas/OrgUnitsGetOrgUnits401Response'
      deprecated: false
  /api/orgunits/add:
    post:
      tags:
        - Org Units
      summary: Create new org unit
      operationId: OrgUnits_createNewOrgUnit
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters:
        - description: Name of the org unit.
          name: name
          in: query
          required: true
          schema:
            type: string
        - description: Description of the org unit.
          name: description
          in: query
          required: true
          schema:
            type: string
        - description: The ID of the department head.
          name: deptHead
          in: query
          schema:
            type: integer
            format: int32
        - description: Name of the department head.
          name: deptHeadName
          in: query
          schema:
            type: string
        - description: The code of the department.
          name: departmentCode
          in: query
          schema:
            type: string
        - description: The ID of the department.
          name: departmentId
          in: query
          schema:
            type: integer
            format: int32
        - description: Label for the department.
          name: departmentLabel
          in: query
          schema:
            type: string
        - description: Number of employees.
          name: noOfEmployees
          in: query
          schema:
            type: integer
            format: int32
        - description: The ID of the parent department.
          name: parentDepartmentId
          in: query
          schema:
            type: integer
            format: int32
        - description: Name of the parent department.
          name: parentDepartmentName
          in: query
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "successful"
                    }
              schema:
                $ref: '#/components/schemas/OrgUnitsCreateNewOrgUnitResponse'
        '409':
          description: '409'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "failure"
                    }
              schema:
                $ref: '#/components/schemas/OrgUnitsCreateNewOrgUnit409Response'
      deprecated: false
  /paystub:
    get:
      tags:
        - Pay Stubs
      summary: Retrieve my pay stubs
      operationId: PayStubs_getDetails
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters: []
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "code": 1,
                      "data": [
                        {
                          "payStubId": "int",
                          "payrollRunId": "int",
                          "userViewModel": {
                            "userId": "int",
                            "firstName": "string",
                            "lastName": "string",
                            "name": "string",
                            "phone": "string",
                            "email": "string",
                            "status": "string",
                            "shortName": "string",
                            "thumbnail": "string",
                            "gender": "string",
                            "jobTitle": "string",
                            "departmentId": "int",
                            "department": "string",
                            "profileId": "int",
                            "profileName": "string",
                            "timezone": "string",
                            "userStartDate": "string",
                            "cellPhone": "string",
                            "empId": "string",
                            "allocation": "int",
                            "userDateFormat": "string",
                            "star": "int",
                            "imageName": "string",
                            "notes": "string",
                            "im": "int",
                            "createuserid": "int",
                            "cid": "int",
                            "guid": "string",
                            "hasAccess": "int",
                            "id": "int"
                          },
                          "payDate": "string",
                          "totalGrossPay": "int",
                          "taxes": "int",
                          "deductions": "int",
                          "netAmount": "int",
                          "ytdNet": "int",
                          "notes": "string",
                          "memo": "string",
                          "createts": "int",
                          "createUserId": "int",
                          "cid": "int",
                          "currencyCode": "string"
                        }
                      ],
                      "message": "successful"
                    }
              schema:
                $ref: '#/components/schemas/PayStubsGetDetailsResponse'
        '409':
          description: '409'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "message": "failure"
                    }
              schema:
                $ref: '#/components/schemas/PayStubsGetDetails409Response'
      deprecated: false
  /api/user/completeUserDetails:
    post:
      tags:
        - People and Permissions
      summary: Create or Update user
      operationId: PeopleAndPermissions_createOrUpdateUserDetails
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/PeopleAndPermissionsCreateOrUpdateUserDetailsRequest
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: >-
                  #/components/schemas/PeopleAndPermissionsCreateOrUpdateUserDetailsResponse
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: '{"message":"User created successfully."}'
              schema:
                $ref: >-
                  #/components/schemas/PeopleAndPermissionsCreateOrUpdateUserDetails201Response
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message":"Please verify the data parameters' format."
                    }
              schema:
                $ref: >-
                  #/components/schemas/PeopleAndPermissionsCreateOrUpdateUserDetails400Response
        '401':
          description: '401'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n\t\"message\": \"Unauthorized\"\n}"
              schema:
                $ref: >-
                  #/components/schemas/PeopleAndPermissionsCreateOrUpdateUserDetails401Response
        '409':
          description: '409'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message":"Conflict occured while creating user."
                    }
              schema:
                $ref: >-
                  #/components/schemas/PeopleAndPermissionsCreateOrUpdateUserDetails409Response
      deprecated: false
  /api/user/add:
    post:
      tags:
        - People and Permissions
      summary: Create user
      operationId: PeopleAndPermissions_createUser
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters:
        - description: First name of user.
          name: firstName
          required: true
          in: query
          schema:
            type: string
        - description: Mail ID of user.
          name: email
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "message": "string.",
                        "userID": "int"
                    }
              schema:
                $ref: '#/components/schemas/PeopleAndPermissionsCreateUserResponse'
        '401':
          description: '401'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n\t\"message\": \"Unauthorized\"\n}"
              schema:
                $ref: '#/components/schemas/PeopleAndPermissionsCreateUser401Response'
      deprecated: false
  /api/user/update:
    post:
      tags:
        - People and Permissions
      summary: Update user
      operationId: PeopleAndPermissions_updateUser
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters:
        - description: The unique system generated ID of the user.
          name: guid
          in: query
          schema:
            type: string
        - description: Email address of the user.
          name: email
          in: query
          schema:
            type: string
        - description: |-
            Employee ID of the user. 
             To update the employee ID, you need admin access.
          name: empId
          in: query
          schema:
            type: string
        - description: First name of the user.
          name: firstName
          in: query
          schema:
            type: string
        - description: Last name of the user.
          name: middleName
          in: query
          schema:
            type: string
        - description: Last name of the user.
          name: lastName
          in: query
          schema:
            type: string
        - description: Second last name of the user.
          name: secondLastName
          in: query
          schema:
            type: string
        - description: Display name of the user.
          name: displayFullName
          in: query
          schema:
            type: string
        - description: Cell phone of the user.
          name: cellPhone
          in: query
          schema:
            type: string
        - description: Phone number of the user.
          name: phone
          in: query
          schema:
            type: string
        - description: Family suffix of the user.
          name: familySuffix
          in: query
          schema:
            type: string
        - description: Date of birth of the user.
          name: userDateOfBirth
          in: query
          schema:
            type: string
            format: date
        - description: Job grade of the user.
          name: jobGrade
          in: query
          schema:
            type: string
        - description: Starting date of the user.
          name: userStartDate
          in: query
          schema:
            type: string
            format: date
        - description: End date of the user.
          name: userEndDate
          in: query
          schema:
            type: string
            format: date
        - description: Gender of the user.
          name: gender
          in: query
          schema:
            type: string
        - description: Position of the user.
          name: position
          in: query
          schema:
            type: string
        - description: Profile ID of the user.
          name: profileId
          in: query
          schema:
            type: string
        - description: Short name of the user.
          name: shortName
          in: query
          schema:
            type: string
        - description: Status of the user.
          name: status
          in: query
          schema:
            enum:
              - A
              - I
              - F
            type: string
        - description: Location of the user.
          name: locationName
          in: query
          schema:
            type: string
        - description: Location ID of user location.
          name: locationId
          in: query
          schema:
            type: string
        - description: ''
          name: notes
          in: query
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/PeopleAndPermissionsUpdateUserResponse'
        '401':
          description: '401'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n\t\"message\": \"Unauthorized\"\n}"
              schema:
                $ref: '#/components/schemas/PeopleAndPermissionsUpdateUser401Response'
      deprecated: false
  /api/user/basic:
    get:
      tags:
        - People and Permissions
      summary: Retrieve user basic information
      operationId: PeopleAndPermissions_getUserBasicInformation
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters:
        - description: Email of user
          name: email
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "userId": "int",
                      "firstName": "string",
                      "lastName": "string",
                      "name": "string",
                      "phone": "int",
                      "email": "string",
                      "status": "string",
                      "shortName": "string",
                      "jobTitle": "string",
                      "profileId": "int",
                      "timezone": "string",
                      "userStartDate": "string",
                      "cellPhone": "int",
                      "empId": "int",
                      "allocation": "int",
                      "userDateFormat": "string",
                      "star": "int",
                      "notes": "string",
                      "im": "int",
                      "createuserid": "int",
                      "cid": "int",
                      "guid": "string",
                      "hasAccess": "int"
                    }
              schema:
                $ref: >-
                  #/components/schemas/PeopleAndPermissionsGetUserBasicInformationResponse
        '401':
          description: '401'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n\t\"message\": \"Unauthorized\"\n}"
              schema:
                $ref: >-
                  #/components/schemas/PeopleAndPermissionsGetUserBasicInformation401Response
      deprecated: false
  /api/user/compensation/add:
    post:
      tags:
        - People and Permissions
      summary: Create compensation for user
      operationId: PeopleAndPermissions_createUserCompensation
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters:
        - description: Value of compensation
          name: value
          required: true
          in: query
          schema:
            type: string
        - description: |-
            Type of compensation. 
             sal - Salary, pay - , INCTV - Incentive, SVCR - Severance
          name: compensationType
          in: query
          required: true
          schema:
            enum:
              - sal
              - pay
              - bonus
              - INCTV
              - SVRC
              - other
            type: string
        - name: currencyCode
          in: query
          required: true
          schema:
            type: string
        - description: |-
            Time period for compensation. 
             HRLY - Hourly, DLY - Daily, WKLY - Weekly,
             BWKLY - Bi-Weekly, MTHLY - Monthly, BMTH - Bi-Monthly, QTRLY - Quarterly, BYRLY - Bi-Yearly, YRLY - Yearly, 
             ONEF - OneOff
          name: period
          in: query
          required: true
          schema:
            enum:
              - HRLY
              - DLY
              - WKLY
              - BWKLY
              - MTHLY
              - BMTH
              - QTRLY
              - BYRLY
              - YRLY
              - ONEF
            type: string
        - name: effectivedate
          required: true
          in: query
          schema:
            type: string
        - name: enddate
          in: query
          schema:
            type: string
        - description: |-
            Status of compensation. 
             ACTV - Active, ARCHV - Archive, PVNL - Provisional
          name: status
          required: true
          in: query
          schema:
            enum:
              - ACTV
              - ARCHV
              - PVNL
            type: string
        - name: notes
          in: query
          schema:
            type: string
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "GUID": "string",
                      "message": "string"
                    }
              schema:
                $ref: >-
                  #/components/schemas/PeopleAndPermissionsCreateUserCompensationResponse
        '401':
          description: '401'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n\t\"message\": \"Unauthorized\"\n}"
              schema:
                $ref: >-
                  #/components/schemas/PeopleAndPermissionsCreateUserCompensation401Response
      deprecated: false
  /api/user/compensation/update:
    post:
      tags:
        - People and Permissions
      summary: Update financial record of User
      operationId: PeopleAndPermissions_updateFinancialRecord
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters:
        - name: guid
          in: query
          required: true
          schema:
            type: string
        - name: value
          in: query
          required: true
          schema:
            type: string
        - description: |-
            Type of compensation. 
             sal - Salary, pay - , INCTV - Incentive, SVCR - Severance
          name: compensationType
          required: true
          in: query
          schema:
            default: sal
            enum:
              - sal
              - pay
              - bonus
              - INCTV
              - SVRC
              - other
            type: string
        - name: currencyCode
          required: true
          in: query
          schema:
            type: string
        - description: |-
            Time period for compensation. 
             HRLY - Hourly, DLY - Daily, WKLY - Weekly,
             BWKLY - Bi-Weekly, MTHLY - Monthly, BMTH - Bi-Monthly, QTRLY - Quarterly, BYRLY - Bi-Yearly, YRLY - Yearly, 
             ONEF - OneOff
          name: period
          required: true
          in: query
          schema:
            default: HRLY
            enum:
              - HRLY
              - DLY
              - WKLY
              - BWKLY
              - MTHLY
              - BMTH
              - QTRLY
              - BYRLY
              - YRLY
              - ONEF
            type: string
        - name: effectivedate
          in: query
          schema:
            type: string
            format: date
            pattern: YYYY-MM-DD
            example: yyyy-mm-dd
        - name: enddate
          in: query
          schema:
            type: string
            format: date
            pattern: YYYY-MM-DD
            example: yyyy-mm-dd
        - description: |-
            Status of compensation. 
             ACTV - Active, ARCHV - Archive, PVNL - Provisional
          name: status
          required: true
          in: query
          schema:
            default: ACTV
            enum:
              - ACTV
              - ARCHV
              - PVNL
            type: string
        - name: notes
          in: query
          schema:
            type: string
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "GUID": "string",
                      "message": "string."
                    }
              schema:
                $ref: >-
                  #/components/schemas/PeopleAndPermissionsUpdateFinancialRecordResponse
        '401':
          description: '401'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n\t\"message\": \"Unauthorized\"\n}"
              schema:
                $ref: >-
                  #/components/schemas/PeopleAndPermissionsUpdateFinancialRecord401Response
      deprecated: false
  /api/user/list:
    get:
      tags:
        - People and Permissions
      summary: Retrieve a user or list of users
      operationId: PeopleAndPermissions_getUserList
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters:
        - name: name
          in: query
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "userId": "int",
                        "firstName": "string",
                        "lastName": "string",
                        "name": "string",
                        "phone": "int",
                        "email": "string",
                        "status": "string",
                        "shortName": "string",
                        "thumbnail": "string",
                        "gender": "string",
                        "jobTitle": "string",
                        "departmentId": "int",
                        "department": "string",
                        "profileId": "int",
                        "profileName": "string",
                        "timezone": "string",
                        "userStartDate": "string",
                        "cellPhone": "int",
                        "empId": "string",
                        "allocation": "int",
                        "userDateFormat": "string",
                        "star": "int",
                        "imageName": "string",
                        "notes": "string",
                        "im": "int",
                        "createuserid": "int",
                        "cid": "int",
                        "guid": "string",
                        "hasAccess": "int",
                        "id": "int"
                     }
              schema:
                $ref: '#/components/schemas/PeopleAndPermissionsGetUserListResponse'
        '401':
          description: '401'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n\t\"message\": \"Unauthorized\"\n}"
              schema:
                $ref: >-
                  #/components/schemas/PeopleAndPermissionsGetUserList401Response
      deprecated: false
  /api/user/permissions:
    get:
      tags:
        - People and Permissions
      summary: Retrieve user permissions and menu configurations
      operationId: PeopleAndPermissions_getUserPermissionsAndMenuConfigurations
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters: []
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": {
                        "userGroupFunctionsList": [
                          "string"
                        ],
                        "appMenuModel": {
                          "appMenuId": "int",
                          "cid": "int",
                          "name": "string",
                          "defaultAppMenu": "boolean",
                          "lastUpdateUserId": "int",
                          "lastUpdateTimestamp": "int",
                          "menuPeople": "boolean",
                          "menuPeopleDirectory": "boolean",
                          "menuPeopleOrgChart": "boolean",
                          "menuPeopleAnnouncements": "boolean",
                          "menuPeopleDocLib": "boolean",
                          "menuPeopleOnboarding": "boolean",
                          "menuPeopleCalendar": "boolean",
                          "menuPeopleMyLeaves": "boolean",
                          "menuPeopleManageLeaves": "boolean",
                          "menuPeopleMyTimeCards": "boolean",
                          "menuPeopleManageTimeCards": "boolean",
                          "menuPeopleAssets": "boolean",
                          "menuPeopleOrgValues": "boolean",
                          "menuPeopleExpenseReports": "boolean",
                          "menuPerformance": "boolean",
                          "menuGoals": "boolean",
                          "menuGoalsNewGoal": "boolean",
                          "menuGoalsMyGoals": "boolean",
                          "menuGoalsMyArchivedGoals": "boolean",
                          "menuGoalsIReview": "boolean",
                          "menuGoalsICollaborateOn": "boolean",
                          "menuGoalsAllGoals": "boolean",
                          "menuGoalsCompanyGoals": "boolean",
                          "menuFeedback": "boolean",
                          "menuMyFeedback": "boolean",
                          "menuFeedbackMyTeamFeedback": "boolean",
                          "menuFeedbackAllFeedback": "boolean",
                          "menuFeedbackCompanyWall": "boolean",
                          "menuFeedbackAwards": "boolean",
                          "menuFeedbackAwardCategories": "boolean",
                          "menuFeedbackPerformanceReviewDashboard": "boolean",
                          "menuFeedbackAllPerformanceReviews": "boolean",
                          "menuFeedbackMyAssignments": "boolean",
                          "menuFeedbackPerformanceReviewTemplates": "boolean",
                          "menuFeedbackMyWall": "boolean",
                          "menuFeedbackMyPerformanceReviews": "boolean",
                          "menuFeedbackPerformanceAccelerationInterventions": "boolean",
                          "menuSkills": "boolean",
                          "menuSkillsSkillSummary": "boolean",
                          "menuSkillsSkills": "boolean",
                          "menuSkillsSkillTypes": "boolean",
                          "menuSkillsSkillMatrix": "boolean",
                          "menuSkillsTrainings": "boolean",
                          "menuSkillsMyTrainings": "boolean",
                          "menuAllocations": "boolean",
                          "menuAllocationsAccounts": "boolean",
                          "menuAllocationsProjects": "boolean",
                          "menuAllocationsUtilizationSummary": "boolean",
                          "menuAllocationsUserProjectAllocation": "boolean",
                          "menuAllocationsUnderutilizedUsers": "boolean",
                          "menuAllocationsOvercommittedUsers": "boolean",
                          "menuAllocationsAllocationForecastByUser": "boolean",
                          "menuAllocationsAllocationForecastByProject": "boolean",
                          "menuAllocationsUserForecasting": "boolean",
                          "menuAllocationsActivityLog": "boolean",
                          "menuHiring": "boolean",
                          "menuHiringDashboard": "boolean",
                          "menuHiringJobBoard": "boolean",
                          "menuHiringPositions": "boolean",
                          "menuHiringCandidates": "boolean",
                          "menuHiringResumeSearch": "boolean",
                          "menuHiringHiringTasks": "boolean",
                          "menuHiringOfferLetters": "boolean",
                          "menuHiringMyPendingApprovals": "boolean",
                          "menuHiringMyAssignments": "boolean",
                          "menuAnalytics": "boolean",
                          "menuAnalyticsReports": "boolean",
                          "menuAnalyticsDashboards": "boolean",
                          "menuOKR": "boolean",
                          "menuAllocationsRosterManagement": "boolean",
                          "menuAllocationsMyRoster": "boolean",
                          "menuOKRObjectives": "boolean"
                        }
                      },
                      "message": "string"
                    }
              schema:
                $ref: >-
                  #/components/schemas/PeopleAndPermissionsGetUserPermissionsAndMenuConfigurationsResponse
        '401':
          description: '401'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n\t\"message\": \"Unauthorized\"\n}"
              schema:
                $ref: >-
                  #/components/schemas/PeopleAndPermissionsGetUserPermissionsAndMenuConfigurations401Response
      deprecated: false
  /api/user/update/status:
    get:
      tags:
        - People and Permissions
      summary: Retrieve user financial status
      operationId: PeopleAndPermissions_getFinancialStatus
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters: []
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                     "code" : "int", "message": "string"
                    }
              schema:
                $ref: >-
                  #/components/schemas/PeopleAndPermissionsGetFinancialStatusResponse
        '401':
          description: '401'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n\t\"message\": \"Unauthorized\"\n}"
              schema:
                $ref: >-
                  #/components/schemas/PeopleAndPermissionsGetFinancialStatus401Response
      deprecated: false
  /api/user/uploadpicture:
    post:
      tags:
        - People and Permissions
      summary: Upload user profile
      operationId: PeopleAndPermissions_uploadUserProfilePicture
      security:
        - sec0: []
          sec1: []
      description: ' '
      parameters: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: >-
                #/components/schemas/PeopleAndPermissionsUploadUserProfilePictureRequest
      responses:
        '201':
          description: '201'
          content:
            '*/*':
              examples:
                Result:
                  value: |-
                    {
                      "imageName": "string",
                      "data": "You successfully uploaded file.",
                      "message": "successful"
                    }
              schema:
                $ref: >-
                  #/components/schemas/PeopleAndPermissionsUploadUserProfilePictureResponse
        '403':
          description: '403'
          content:
            '*/*':
              examples:
                Result:
                  value: |-
                    { 
                     "message:" "Unauthorized" 
                     }
              schema:
                $ref: >-
                  #/components/schemas/PeopleAndPermissionsUploadUserProfilePicture403Response
      deprecated: false
  /api/users:
    get:
      tags:
        - People and Permissions
      summary: Retrieve all users details
      operationId: PeopleAndPermissions_getAllUsersDetails
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters:
        - description: Name of the user.
          name: name
          in: query
          schema:
            type: string
        - description: Page number.
          name: page
          in: query
          schema:
            type: integer
            format: int32
            default: 1
        - description: Number of users per page.
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 20
        - name: search
          in: query
          schema:
            type: string
        - description: The date before the assigned Start Date.
          name: startDateBefore
          in: query
          schema:
            type: string
            format: date
        - description: The date after the assigned Start Date.
          name: startDateAfter
          in: query
          schema:
            type: string
            format: date
        - description: The date before the assigned End Date.
          name: endDateBefore
          in: query
          schema:
            type: string
            format: date
        - description: The date after the assigned End Date.
          name: endDateAfter
          in: query
          schema:
            type: string
            format: date
        - description: |-
            Status of the user. 
              A- Active User 
             I- Inactive User 
             F- Future Joiner 
          name: status
          in: query
          schema:
            type: string
            default: A
            enum:
              - A
              - I
              - F
      responses:
        '200':
          description: '200'
          content:
            '*/*':
              examples:
                Result:
                  value: |-
                    [
                      {
                        "cid": "int",
                        "userId": "int",
                        "firstName": "string",
                        "shortName": "string",
                        "lastName": "string",
                        "displayFullName": "string",
                        "userStartDate": "date",
                        "email": "string",
                        "cellPhone": "int",
                        "userName": "string",
                        "employmentModelList": "string",
                        "educationModelList": "string",
                        "licenseModelList": "int",
                        "supervisorModelList": [
                          {
                            "userId": "int",
                            "firstName": "string",
                            "empId": "int",
                            "lastName": "string",
                            "middleName": "string",
                            "email": "string",
                            "displayFullName": "string",
                            "userStartDate": "date",
                            "locationId": "int",
                            "departmentID": "int"
                          }
                        ],
                        "awardModelList": "string",
                        "addressModelList": "string",
                        "customFieldValueModelList": "string",
                        "status": "string",
                        "gender": "string",
                        "phone": "int",
                        "createts":"int",
                        "financialModelList":"string",
                        "allocation": "int",
                        "userDisplayName": "string",
                        "star": "int",
                        "isView": "string"
                      }
                    ]
              schema:
                $ref: >-
                  #/components/schemas/PeopleAndPermissionsGetAllUsersDetailsResponse
        '204':
          description: '204'
          content:
            '*/*':
              examples:
                Result:
                  value: |-
                    {
                      "message": "No Content."
                    }
              schema:
                $ref: >-
                  #/components/schemas/PeopleAndPermissionsGetAllUsersDetails204Response
      deprecated: false
  /api/users/basic:
    get:
      tags:
        - People and Permissions
      summary: Retrieve basic user details
      operationId: PeopleAndPermissions_getBasicUserDetails
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters:
        - description: Name of the user.
          name: name
          in: query
          schema:
            type: string
        - description: Page number.
          name: page
          in: query
          schema:
            type: integer
            format: int32
            default: 1
        - description: Number of users per page.
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 20
        - name: search
          in: query
          schema:
            type: string
        - description: The date before the assigned Start Date.
          name: startDateBefore
          in: query
          schema:
            type: string
            format: date
        - description: The date after the assigned Start Date.
          name: startDateAfter
          in: query
          schema:
            type: string
            format: date
        - description: The date before the assigned End Date.
          name: endDateBefore
          in: query
          schema:
            type: string
            format: date
        - description: The date after the assigned End Date.
          name: endDateAfter
          in: query
          schema:
            type: string
            format: date
        - description: |-
            Status of the user. 
              A- Active User 
             I- Inactive User 
             F- Future Joiner 
          name: status
          in: query
          schema:
            type: string
            default: A
            enum:
              - A
              - I
              - F
      responses:
        '200':
          description: '200'
          content:
            '*/*':
              examples:
                Result:
                  value: |-
                    [
                      {
                        "userId": "int",
                        "firstName": "string",
                        "lastName": "string",
                        "name": "string",
                        "phone": "int",
                        "email": "string",
                        "status": "string",
                        "shortName": "string",
                        "timezone": "string",
                        "userStartDate": "date",
                        "cellPhone": "int",
                        "allocation": "int",
                        "userDateFormat": "date",
                        "star": "int",
                        "createuserid": "int",
                        "cid": "int",
                        "guid": "string",
                        "hasAccess": "int"
                      }
                    ]
              schema:
                $ref: >-
                  #/components/schemas/PeopleAndPermissionsGetBasicUserDetailsResponse
        '204':
          description: '204'
          content:
            '*/*':
              examples:
                Result:
                  value: |-
                    {
                      "message": "No Content."
                    }
              schema:
                $ref: >-
                  #/components/schemas/PeopleAndPermissionsGetBasicUserDetails204Response
      deprecated: false
  /api/address/save:
    post:
      tags:
        - People and Permissions
      summary: Save User Address
      operationId: PeopleAndPermissions_saveUserAddress
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters:
        - description: 'The unique identity of the employee. '
          name: empId
          in: query
          schema:
            type: string
        - description: Email address of the user.
          name: email
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PeopleAndPermissionsSaveUserAddressRequest'
      responses:
        '201':
          description: '201'
          content:
            '*/*':
              examples:
                Result:
                  value: |-
                    {
                      "message": "Address details saved successfully."
                    }
              schema:
                $ref: >-
                  #/components/schemas/PeopleAndPermissionsSaveUserAddressResponse
        '401':
          description: '401'
          content:
            '*/*':
              examples:
                Result:
                  value: |-
                    {
                      "message": "Please fill the correct details"
                    }
              schema:
                $ref: >-
                  #/components/schemas/PeopleAndPermissionsSaveUserAddress401Response
      deprecated: false
  /api/education/save:
    post:
      tags:
        - People and Permissions
      summary: Save User Education
      operationId: PeopleAndPermissions_saveUserEducation
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters:
        - description: 'The unique identity of the employee. '
          name: empId
          in: query
          schema:
            type: string
        - description: Email address of the user.
          name: email
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/PeopleAndPermissionsSaveUserEducationRequest
      responses:
        '201':
          description: '201'
          content:
            '*/*':
              examples:
                Result:
                  value: |-
                    {
                      "message": "Education details saved successfully."
                    }
              schema:
                $ref: >-
                  #/components/schemas/PeopleAndPermissionsSaveUserEducationResponse
        '401':
          description: '401'
          content:
            '*/*':
              examples:
                Result:
                  value: |-
                    {
                      "message": "Please fill the correct details"
                    }
              schema:
                $ref: >-
                  #/components/schemas/PeopleAndPermissionsSaveUserEducation401Response
      deprecated: false
  /api/employment/save:
    post:
      tags:
        - People and Permissions
      summary: Save User Employment
      operationId: PeopleAndPermissions_saveUserEmployment
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters:
        - description: 'The unique identity of the employee. '
          name: empId
          in: query
          schema:
            type: string
        - description: Email address of the user.
          name: email
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/PeopleAndPermissionsSaveUserEmploymentRequest
      responses:
        '201':
          description: '201'
          content:
            '*/*':
              examples:
                Result:
                  value: |-
                    {
                      "message": "Employment details saved successfully."
                    }
              schema:
                $ref: >-
                  #/components/schemas/PeopleAndPermissionsSaveUserEmploymentResponse
        '401':
          description: '401'
          content:
            '*/*':
              examples:
                Result:
                  value: |-
                    {
                      "message": "Please fill the correct details"
                    }
              schema:
                $ref: >-
                  #/components/schemas/PeopleAndPermissionsSaveUserEmployment401Response
      deprecated: false
  /api/user/orgrelation/add:
    post:
      tags:
        - People and Permissions
      summary: Add reports to
      operationId: PeopleAndPermissions_addReportsTo
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters:
        - description: 'The unique identity of the employee. '
          name: empId
          in: query
          schema:
            type: string
        - description: Email address of the user.
          name: email
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PeopleAndPermissionsAddReportsToRequest'
      responses:
        '201':
          description: '201'
          content:
            '*/*':
              examples:
                Result:
                  value: |-
                    {
                      "message": "Reports To added successfully."
                    }
              schema:
                $ref: '#/components/schemas/PeopleAndPermissionsAddReportsToResponse'
        '401':
          description: '401'
          content:
            '*/*':
              examples:
                Result:
                  value: |-
                    {
                      "message": "Please fill the correct details"
                    }
              schema:
                $ref: >-
                  #/components/schemas/PeopleAndPermissionsAddReportsTo401Response
      deprecated: false
  /api/user/saveCustomFieldValues:
    post:
      tags:
        - People and Permissions
      summary: Save Custom Field values
      operationId: PeopleAndPermissions_saveCustomFieldValues
      security:
        - sec0: []
          sec1: []
      description: Save Custom Field values
      parameters:
        - description: The unique identity of the employee.
          name: empId
          in: query
          required: false
          schema:
            type: string
        - description: The unique system generated ID of the user.
          name: guid
          in: query
          required: false
          schema:
            type: string
        - description: Email address of the user.
          name: email
          in: query
          required: false
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/arrayCustomFields'
      responses:
        '200':
          description: '200'
          content:
            '*/*':
              examples:
                Result:
                  value: |-
                    {
                      "message": "Custom Field details saved successfully."
                    }
              schema:
                $ref: >-
                  #/components/schemas/PeopleAndPermissionsSaveCustomFieldValuesResponse
        '201':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Iterable'
        '400':
          description: '400'
          content:
            '*/*':
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: >-
                  #/components/schemas/PeopleAndPermissionsSaveCustomFieldValues400Response
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /api/user/address/delete:
    post:
      tags:
        - People and Permissions
      summary: Delete User Address
      operationId: PeopleAndPermissions_deleteUserAddress
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters:
        - description: The unique ID of the address.
          name: addressId
          in: query
          required: true
          schema:
            type: string
      responses:
        '201':
          description: '201'
          content:
            '*/*':
              examples:
                Result:
                  value: |-
                    {
                      "message": "User Address deleted successfully."
                    }
              schema:
                $ref: >-
                  #/components/schemas/PeopleAndPermissionsDeleteUserAddressResponse
        '401':
          description: '401'
          content:
            '*/*':
              examples:
                Result:
                  value: |-
                    {
                      "message": "Please fill the correct details"
                    }
              schema:
                $ref: >-
                  #/components/schemas/PeopleAndPermissionsDeleteUserAddress401Response
        '404':
          description: '404'
          content:
            '*/*':
              examples:
                Result:
                  value: |-
                    {
                      "message": "User employment details not found."
                    }
              schema:
                $ref: >-
                  #/components/schemas/PeopleAndPermissionsDeleteUserAddress404Response
      deprecated: false
  /api/user/employment/delete:
    post:
      tags:
        - People and Permissions
      summary: Deletes User Employment
      operationId: PeopleAndPermissions_deleteUserEmployment
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters:
        - description: 'The unique identity of the employee. '
          name: empid
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '201':
          description: '201'
          content:
            '*/*':
              examples:
                Result:
                  value: |-
                    {
                      "message": "User Employment deleted successfully."
                    }
              schema:
                $ref: >-
                  #/components/schemas/PeopleAndPermissionsDeleteUserEmploymentResponse
        '401':
          description: '401'
          content:
            '*/*':
              examples:
                Result:
                  value: |-
                    {
                      "message": "Please fill the correct details."
                    }
              schema:
                $ref: >-
                  #/components/schemas/PeopleAndPermissionsDeleteUserEmployment401Response
        '404':
          description: '404'
          content:
            '*/*':
              examples:
                Result:
                  value: |-
                    {
                      "message": "User employment details not found."
                    }
              schema:
                $ref: >-
                  #/components/schemas/PeopleAndPermissionsDeleteUserEmployment404Response
      deprecated: false
  /user/education/delete:
    post:
      tags:
        - People and Permissions
      summary: Delete User Education
      operationId: PeopleAndPermissions_deleteUserEducation
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters:
        - description: Education ID the user
          name: educationId
          in: query
          required: true
          schema:
            type: string
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "message": "string"
                    }
              schema:
                $ref: >-
                  #/components/schemas/PeopleAndPermissionsDeleteUserEducationResponse
        '401':
          description: '401'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n\t\"message\": \"Unauthorized\"\n}"
              schema:
                $ref: >-
                  #/components/schemas/PeopleAndPermissionsDeleteUserEducation401Response
        '404':
          description: '404'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "message": "User address not found."
                    }
              schema:
                $ref: >-
                  #/components/schemas/PeopleAndPermissionsDeleteUserEducation404Response
        '409':
          description: '409'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "message": "failure"
                    }
              schema:
                $ref: >-
                  #/components/schemas/PeopleAndPermissionsDeleteUserEducation409Response
      deprecated: false
  /appraisal/user:
    get:
      tags:
        - Performance Review
      summary: Retrieve Performance Reviews
      operationId: PerformanceReview_getPerformanceReviews
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters: []
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "code": 1,
                      "data": [
                        {
                          "appraisalId": "int",
                          "appraisalName": "string",
                          "description": "string",
                          "userModel": {
                            "cid": "int",
                            "userId": "int",
                            "position": "string",
                            "firstName": "string",
                            "shortName": "string",
                            "lastName": "string",
                            "displayFullName": "string",
                            "userStartDate": "string",
                            "email": "string",
                            "cellPhone": "string",
                            "userName": "string",
                            "userProfileModel": {
                              "cid": "int",
                              "profileId": "int",
                              "profileName": "string",
                              "profileDescription": "string",
                              "orgId": "int",
                              "profileResponsibilities": "string",
                              "profileRequirements": "string",
                              "salaryBandMin": "int",
                              "salaryBandMax": "int",
                              "salaryBandCurrency": "string",
                              "managerProfileId": "int",
                              "managerProfileName": "string",
                              "customFieldValueModelList": "object",
                              "numberofUsers": "int",
                              "createuserid": "int",
                              "status": "string",
                              "careerPathwayModelList": "object",
                              "objectType": "string",
                              "objectName": "string",
                              "objectid": "int"
                            },
                            "departmentModel": {
                              "departmentId": "int",
                              "name": "string",
                              "description": "string",
                              "deptHead": "int",
                              "cid": "int",
                              "departmentCode": "string",
                              "departmentLabel": "string",
                              "parentDepartmentId": "int",
                              "parentDepartmentName": "string",
                              "deptHeadName": "string",
                              "noOfEmployees": "int",
                              "userModel": "object"
                            },
                            "prefixSalutation": "string",
                            "secondLastName": "string",
                            "middleName": "string",
                            "namePronunciation": "string",
                            "familySuffix": "string",
                            "status": "string",
                            "ptoannual":"int",
                            "ptobalance": "int",
                            "gender": "string",
                            "phone": "string",
                            "im": "int",
                            "createts": "int",
                            "timezone": "string",
                            "practiceId": "int",
                            "imageName": "string",
                            "thumbnail": "string",
                            "profileId": "int",
                            "allocation": "int",
                            "lastupdateuserid": "int",
                            "lastupdatets": "string",
                            "userDateFormat": "string",
                            "hrPortal": "string",
                            "userDisplayName": "string",
                            "star": "int",
                            "timecardPeriodPref": "string",
                            "languagePreference": "string",
                            "tosVersion": "string",
                            "guid": "string",
                            "jobGrade": "string",
                            "hasAccess": "boolean",
                            "primaryColor": "string",
                            "secondaryColor": "string",
                            "notifications": "boolean",
                            "isView": "boolean",
                            "view": "boolean"
                          },
                          "startDate": "string",
                          "endDate": "string",
                          "managerId": "int",
                          "managerUserModel": "object",
                          "statusCode": "string",
                          "cid": "int",
                          "appraisalType": "string",
                          "userId": "int",
                          "candidatePositionId": "int",
                          "reviewMode": "string",
                          "workflowId": "int",
                          "finalComment": "string",
                          "createUserId": "int",
                          "createUserModel": {
                            "cid": "int",
                            "empId": "int",
                            "userId": "int",
                            "position": "string",
                            "firstName": "string",
                            "shortName": "string",
                            "lastName": "string",
                            "displayFullName": "string",
                            "userStartDate": "string",
                            "userEndDate": "string",
                            "email": "string",
                            "cellPhone": "string",
                            "userName": "string",
                            "userProfileModel": {
                              "cid": "int",
                              "profileId": "int",
                              "profileName": "string",
                              "profileDescription": "string",
                              "orgId": "int",
                              "profileResponsibilities": "string",
                              "profileRequirements": "string",
                              "salaryBandMin": "int",
                              "salaryBandMax": "int",
                              "salaryBandCurrency": "string",
                              "managerProfileId": "string",
                              "managerProfileName": "string",
                              "customFieldValueModelList": "string",
                              "numberofUsers": "int",
                              "createuserid": "int",
                              "status": "string",
                              "careerPathwayModelList": "object",
                              "objectType": "string",
                              "objectName": "string",
                              "objectid": "int"
                            },
                            "departmentModel": {
                              "departmentId": "int",
                              "name": "string",
                              "description": "string",
                              "deptHead": "int",
                              "cid": "int",
                              "departmentCode": "string",
                              "departmentLabel": "string",
                              "parentDepartmentId": "int",
                              "parentDepartmentName": "string",
                              "deptHeadName": "string",
                              "noOfEmployees":"int",
                              "userModel": {
                                "userId": "string",
                                "firstName": "string",
                                "lastName": "string",
                                "name": "string",
                                "phone": "string",
                                "email": "string",
                                "status": "string",
                                "shortName": "string",
                                "thumbnail": "string",
                                "gender": "string",
                                "jobTitle": "string",
                                "departmentId": "int",
                                "locationId": "int",
                                "department": "string",
                                "location": "string",
                                "profileId": "int",
                                "profileName": "string",
                                "timezone": "string",
                                "userStartDate": "string",
                                "userEndDate": "string",
                                "cellPhone": "int",
                                "empId": "string",
                                "allocation": "int",
                                "userDateFormat": "string",
                                "star": "int",
                                "imageName": "string",
                                "notes": "string",
                                "im": "int",
                                "createuserid": "int",
                                "countryId": "int",
                                "cid": "int",
                                "guid": "string",
                                "hasAccess": "int",
                                "calendarId": "int",
                                "id": "int"
                              }
                            },
                            "prefixSalutation": "string",
                            "secondLastName": "string",
                            "middleName": "string",
                            "namePronunciation": "string",
                            "familySuffix": "string",
                            "status": "string",
                            "ptoannual": "int",
                            "ptobalance": "int",
                            "gender": "string",
                            "userDateOfBirth": "string",
                            "phone": "string",
                            "im": "int",
                            "createts": "int",
                            "timezone": "string",
                            "practiceId": "int",
                            "imageName": "string",
                            "thumbnail": "string",
                            "profileId": "int",
                            "allocation": "int",
                            "countryId": "int",
                            "lastupdateuserid": "int",
                            "lastupdatets": "string",
                            "userDateFormat": "string",
                            "hrPortal": "string",
                            "userDisplayName": "string",
                            "star": "int",
                            "timecardPeriodPref": "string",
                            "languagePreference": "string",
                            "relativeDate": "string",
                            "tosVersion": "string",
                            "guid": "string",
                            "jobGrade": "string",
                            "paId": "int",
                            "careerPathwayId": "int",
                            "calendarId": "int",
                            "hasAccess": "boolean",
                            "notifications": "boolean",
                            "locationModel": {
                              "locationId": "int",
                              "locationName": "string",
                              "cid": "int",
                              "locationDescription": "string",
                              "locationType": "string",
                              "address": "string",
                              "lattitude": "int",
                              "longitude": "int",
                              "locationUID": "int",
                              "status": "string",
                              "workingDays": "int",
                              "locationCode": "int",
                              "locationLabel": "string",
                              "parentLocationId": "int",
                              "createuserid": "int",
                              "addressModelList": [
                                {
                                  "addressId": "int",
                                  "addressLine1": "string",
                                  "addressLine2": "string",
                                  "city": "string",
                                  "currentStatus": "string",
                                  "state": "string",
                                  "zipCode": "int",
                                  "createts": "int",
                                  "cid": "int",
                                  "userId": "int",
                                  "candidateId": "int",
                                  "addressType": "string",
                                  "locationId": "int",
                                  "contactId": "int",
                                  "countryId": "int",
                                  "countryModel": {
                                    "countryId": "int",
                                    "countryName": "string",
                                    "iso2": "string"
                                  },
                                  "status": "string",
                                  "verificationStatus": "string",
                                  "custId": "int",
                                  "mapUrl": "string",
                                  "createUserId": "int",
                                  "extAppUID": "int",
                                  "countryCode": "int",
                                  "countryid": "int"
                                }
                              ]
                            },
                            "practiceModel": {
                              "practiceId": "int",
                              "name": "string",
                              "description": "string",
                              "practiceHead": "int",
                              "userModel": {
                                "userId": "int",
                                "firstName": "string",
                                "lastName": "string",
                                "name": "string",
                                "phone": "string",
                                "email": "string",
                                "status": "string",
                                "shortName": "string",
                                "thumbnail": "string",
                                "gender": "string",
                                "jobTitle": "string",
                                "departmentId": "int",
                                "locationId": "int",
                                "department": "string",
                                "location": "string",
                                "profileId": "int",
                                "profileName": "string",
                                "timezone": "string",
                                "userStartDate": "string",
                                "cellPhone": "string",
                                "empId": "string",
                                "allocation": "int",
                                "userDateFormat": "string",
                                "star": "int",
                                "imageName": "string",
                                "notes": "string",
                                "im":"string",
                                "createuserid": "int",
                                "countryId": "int",
                                "cid": "int",
                                "guid": "string",
                                "hasAccess": "int",
                                "calendarId": "int",
                                "userNameFormat": "string",
                                "id": "int"
                              },
                              "createts": "int",
                              "cid": "int"
                            },
                            "calendarModel": {
                              "calendarId": "int",
                              "name": "string",
                              "colorCode": "string",
                              "cid": "int",
                              "createUserId": "int",
                              "createts": "int",
                              "createUserViewModel": {
                                "userId": "int",
                                "firstName": "string",
                                "lastName": "string",
                                "name": "string",
                                "phone": "string",
                                "email": "string",
                                "status": "string",
                                "shortName": "string",
                                "thumbnail": "string",
                                "gender": "string",
                                "jobTitle": "string",
                                "departmentId": "int",
                                "locationId": "int",
                                "department": "string",
                                "location": "string",
                                "profileId": "int",
                                "timezone": "string",
                                "userStartDate": "string",
                                "cellPhone": "string",
                                "empId": "string",
                                "userDateOfBirth": "string",
                                "allocation": "int",
                                "userDateFormat": "string",
                                "star": "int",
                                "imageName": "string",
                                "notes": "string",
                                "im": "string",
                                "createuserid": "int",
                                "countryId": "int",
                                "cid": "int",
                                "guid": "string",
                                "hasAccess":"int",
                                "userNameFormat": "string",
                                "id": "int"
                              }
                            },
                            "azureObjectIdentifier": "string",
                            "isView": "boolean",
                            "view": "boolean"
                          },
                          "finalValue": "string",
                          "obtype": "string",
                          "createts": "string",
                          "status": "string",
                          "preFinalValue": "int",
                          "preFinalComment": "string",
                          "finalValueStr": "string",
                          "preFinalValueStr": "string",
                          "showFinalValue": "int",
                          "showWeightedTotal": "string",
                          "userViewModel": {
                            "userId": "int",
                            "firstName": "string",
                            "lastName": "string",
                            "name": "string",
                            "phone": "string",
                            "email": "string",
                            "status": "string",
                            "shortName": "string",
                            "thumbnail": "string",
                            "gender": "string",
                            "jobTitle": "string",
                            "departmentId": "int",
                            "department": "string",
                            "profileId": "int",
                            "profileName": "string",
                            "timezone": "string",
                            "userStartDate": "string",
                            "cellPhone": "int",
                            "allocation": "int",
                            "userDateFormat": "string",
                            "star": "int",
                            "imageName": "string",
                            "notes": "string",
                            "im": "int",
                            "createuserid": "int",
                            "cid": "int",
                            "guid": "string",
                            "hasAccess": "int",
                            "id": "int"
                          },
                          "scoreTemplateId": "int",
                          "scoreTemplateModel": {
                            "scoretemplateid": "int",
                            "cid": "int",
                            "scoreMin": "int",
                            "scoreMax": "int",
                            "scoreMaxValidation": "string",
                            "scoringInstructions": "string",
                            "scoreName": "string",
                            "allowFractional": "int",
                            "rangeModelList": [
                              {
                                "strangeid": "int",
                                "scoreTempId": "int",
                                "rangeMin": "int",
                                "rangeMax": "int",
                                "interpretation": "string",
                                "colorCode": "string",
                                "cid": "int",
                                "description": "string"
                              }
                            ],
                            "visualizationType": "string",
                            "status": "string"
                          },
                          "saveForLater": "string",
                          "completionDate": "string",
                          "appraisalGroupId": "int",
                          "dynaFormId": "int",
                          "formAssignmentUrl": "string",
                          "signatureFlowLibraryId": "int",
                          "appraisalTemplateId": "int",
                          "isLocked": "int"
                        },  
                      ],
                      "message": "successful"
                    }
              schema:
                $ref: >-
                  #/components/schemas/PerformanceReviewGetPerformanceReviewsResponse
        '404':
          description: '404'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "The requested resource is not available."
                    }
              schema:
                $ref: >-
                  #/components/schemas/PerformanceReviewGetPerformanceReviews404Response
        '409':
          description: '409'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "failure"
                    }
              schema:
                $ref: >-
                  #/components/schemas/PerformanceReviewGetPerformanceReviews409Response
      deprecated: false
  /appraisal/template/list:
    get:
      tags:
        - Performance Review
      summary: Retrieve Performance Review Templates
      operationId: PerformanceReview_getTemplates
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters: []
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": [
                        {
                          "appraisalTemplateId": "int",
                          "name": "string",
                          "description": "string",
                          "userId": "int",
                          "startDate": "string",
                          "endDate": "string",
                          "cid": "int",
                          "managerId": "int",
                          "appraisalType": "string",
                          "obType": "string",
                          "createUserId": "int",
                          "contributorId": "int",
                          "scoreTemplateId": "int",
                          "signatureFlowLibraryId": "int",
                          "status": "string",
                          "processTemplateId": "int"
                        }
                      ],
                      "message": "successful"
                    }
              schema:
                $ref: '#/components/schemas/PerformanceReviewGetTemplatesResponse'
        '404':
          description: '404'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "The requested resource is not available."
                    }
              schema:
                $ref: '#/components/schemas/PerformanceReviewGetTemplates404Response'
        '409':
          description: '409'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "failure"
                    }
              schema:
                $ref: '#/components/schemas/PerformanceReviewGetTemplates409Response'
      deprecated: false
  /appraisal/add:
    post:
      tags:
        - Performance Review
      summary: Create Performance Review
      operationId: PerformanceReview_createPerformanceReview
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters:
        - description: The ID of the performance review template.
          name: templateId
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - description: Start Date of the performance review.
          name: StartDate
          in: query
          schema:
            type: string
            format: date
            example: '2022-10-02'
        - description: End Date of the performance review.
          name: EndDate
          in: query
          schema:
            type: string
            format: date
            example: '2022-10-02'
        - description: Review Period
          name: AppraisalType
          in: query
          schema:
            type: string
            default: Annual
            enum:
              - Annual
              - Mid-Year
              - Quarterly
              - Probation
              - Other
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "appraisalId": "int",
                        "message": "Performance review created successfully."
                    }
              schema:
                $ref: >-
                  #/components/schemas/PerformanceReviewCreatePerformanceReviewResponse
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Please verify the data parameters' format."
                    }
              schema:
                $ref: >-
                  #/components/schemas/PerformanceReviewCreatePerformanceReview400Response
        '409':
          description: '409'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "failure"
                    }
              schema:
                $ref: >-
                  #/components/schemas/PerformanceReviewCreatePerformanceReview409Response
      deprecated: false
  /appraisal/getCompletedReviews:
    get:
      tags:
        - Performance Review
      summary: Retrieve Completed Performance Reviews
      operationId: PerformanceReview_getCompletedReviewsBasedOnUserId
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters:
        - description: The ID of the user.
          name: targetUserId
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": [
                            {
                                "appraisalId": "int",
                                "appraisalName": "string",
                                "description": "string",
                                "userModel": {
                                    "cid": "int",
                                    "empId": "string",
                                    "userId": "int",
                                    "position": "string",
                                    "firstName": "string",
                                    "shortName": "string",
                                    "lastName": "string",
                                    "displayFullName": "string",
                                    "userStartDate": "int",
                                    "userEndDate": "int",
                                    "email": "string",
                                    "cellPhone": "int",
                                    "userName": "string",
                                    "userProfileModel": {
                                        "cid": "int",
                                        "profileId": "int",
                                        "profileName": "string",
                                        "profileDescription": "string",
                                        "orgId": "int",
                                        "profileResponsibilities": "string",
                                        "profileRequirements": "string",
                                        "salaryBandMin": "int",
                                        "salaryBandMax": "int",
                                        "salaryBandCurrency": "int",
                                        "managerProfileId": "int",
                                        "managerProfileName": "string",
                                        "customFieldValueModelList": "string",
                                        "numberofUsers": "int",
                                        "createuserid": "int",
                                        "status": "string",
                                        "careerPathwayModelList": "string",
                                        "objectType": "string",
                                        "objectName": "string",
                                        "objectid": "int"
                                    },
                                    "departmentModel": {
                                        "departmentId": "int",
                                        "name": "string",
                                        "description": "string",
                                        "deptHead": "int",
                                        "cid": "int",
                                        "departmentCode": "int",
                                        "departmentLabel": "string",
                                        "parentDepartmentId": "int",
                                        "parentDepartmentName": "string",
                                        "deptHeadName": "string",
                                        "noOfEmployees": "int",
                                        "userModel": {
                                            "userId": "int",
                                            "firstName": "string",
                                            "lastName": "string",
                                            "name": "string",
                                            "phone": "int",
                                            "email": "string",
                                            "status": "string",
                                            "shortName": "string",
                                            "gender": "string",
                                            "jobTitle": "string",
                                            "locationId": "int",
                                            "location": "string",
                                            "profileId": "int",
                                            "profileName": "string",
                                            "timezone": "string",
                                            "userStartDate": "int",
                                            "userEndDate": "int",
                                            "cellPhone": "int",
                                            "empId": "string",
                                            "userDateOfBirth": "int",
                                            "allocation": "int",
                                            "userDateFormat": "int",
                                            "star": "int",
                                            "notes": "string",
                                            "im": "string",
                                            "createuserid": "int",
                                            "countryId": "int",
                                            "cid": "int",
                                            "guid": "string",
                                            "hasAccess": "int",
                                            "id": "int"
                                        }
                                    },
                                    "prefixSalutation": "string",
                                    "secondLastName": "string",
                                    "middleName": "string",
                                    "namePronunciation": "string",
                                    "familySuffix": "string",
                                    "status": "string",
                                    "ptoannual": "int",
                                    "ptobalance": "int",
                                    "gender": "string",
                                    "phone": "int",
                                    "im": "string",
                                    "createts": "int",
                                    "timezone": "string",
                                    "practiceId": "int",
                                    "imageName": "string",
                                    "thumbnail": "string",
                                    "profileId": "int",
                                    "allocation": "int",
                                    "countryId": "int",
                                    "lastupdateuserid": "int",
                                    "lastupdatets": "int",
                                    "userDateFormat": "int",
                                    "hrPortal": "string",
                                    "userDisplayName": "string",
                                    "star": "int",
                                    "timecardPeriodPref": "string",
                                    "languagePreference": "string",
                                    "tosVersion": "string",
                                    "guid": "string",
                                    "jobGrade": "string",
                                    "paId": "int",
                                    "appMenuId": "int",
                                    "workingDays": "int",
                                    "hasAccess": "string",
                                    "notifications": "string",
                                    "locationModel": {
                                        "locationId": "int",
                                        "locationName": "string",
                                        "cid": "int",
                                        "locationDescription": "string",
                                        "locationType": "string",
                                        "address": "string",
                                        "lattitude": "int",
                                        "longitude": "int",
                                        "locationUID": "int",
                                        "status": "string",
                                        "workingDays": "int",
                                        "locationCode": "int",
                                        "locationLabel": "string",
                                        "parentLocationId": "int",
                                        "createuserid": "int",
                                        "addressModelList": [
                                            {
                                                "addressId": "int",
                                                "addressLine1": "string",
                                                "addressLine2": "string",
                                                "city": "string",
                                                "currentStatus": "string",
                                                "state": "string",
                                                "zipCode": "int",
                                                "createts": "int",
                                                "cid": "int",
                                                "userId": "int",
                                                "candidateId": "int",
                                                "addressType": "string",
                                                "locationId": "int",
                                                "contactId": "int",
                                                "countryId": "int",
                                                "countryModel": {
                                                    "countryId": "int",
                                                    "countryName": "string",
                                                    "iso2": "string"
                                                },
                                                "status": "string",
                                                "verificationStatus": "string",
                                                "custId": "int",
                                                "mapUrl": "",
                                                "createUserId": "int",
                                                "extAppUID": "int",
                                                "countryCode": "int",
                                                "countryid": "int"
                                            }
                                        ]
                                    },
                                    "azureObjectIdentifier": "string",
                                    "isView": "string",
                                    "view": "string"
                                },
                                "startDate": "int",
                                "endDate": "int",
                                "managerId": "int",
                                "managerUserModel": "string",
                                "statusCode": "string",
                                "cid": "int",
                                "appraisalType": "string",
                                "userId": "int",
                                "candidatePositionId": "int",
                                "reviewMode": "string",
                                "workflowId": "int",
                                "finalComment": "string",
                                "createUserId": "int",
                                "createUserModel": {
                                    "cid": "int",
                                    "empId": "string",
                                    "userId": "int",
                                    "position": "string",
                                    "firstName": "string",
                                    "shortName": "string",
                                    "lastName": "string",
                                    "workerTypeModel": {
                                        "wtid": "int",
                                        "cid": "int",
                                        "code": "string",
                                        "description": "string",
                                        "createuserid": "int"
                                    },
                                    "displayFullName": "string",
                                    "userStartDate": "int",
                                    "email": "string",
                                    "cellPhone": "int",
                                    "userName": "string",
                                    "userProfileModel": {
                                        "cid": "int",
                                        "profileId": "int",
                                        "profileName": "string",
                                        "profileDescription": "string",
                                        "orgId": "int",
                                        "profileResponsibilities": "string",
                                        "profileRequirements": "string",
                                        "salaryBandMin": "int",
                                        "salaryBandMax": "int",
                                        "salaryBandCurrency": "int",
                                        "managerProfileId": "int",
                                        "managerProfileName": "string",
                                        "customFieldValueModelList": "string",
                                        "numberofUsers": "int",
                                        "createuserid": "int",
                                        "status": "string",
                                        "careerPathwayModelList": "string",
                                        "objectType": "string",
                                        "objectName": "string",
                                        "objectid": "int"
                                    },
                                    "prefixSalutation": "string",
                                    "secondLastName": "string",
                                    "middleName": "string",
                                    "namePronunciation": "string",
                                    "familySuffix": "string",
                                    "status": "string",
                                    "ptoannual": "int",
                                    "ptobalance": "int",
                                    "gender": "string",
                                    "phone": "int",
                                    "im": "string",
                                    "createts": "int",
                                    "timezone": "string",
                                    "practiceId": "int",
                                    "imageName": "string",
                                    "thumbnail": "string",
                                    "profileId": "int",
                                    "allocation": "int",
                                    "lastupdateuserid": "int",
                                    "lastupdatets": "int",
                                    "workingDaysSchedule": "string",
                                    "userDateFormat": "int",
                                    "hrPortal": "string",
                                    "userDisplayName": "string",
                                    "star": "int",
                                    "timecardPeriodPref": "string",
                                    "languagePreference": "string",
                                    "tosVersion": "string",
                                    "guid": "string",
                                    "jobGrade": "string",
                                    "paId": "int",
                                    "careerPathwayId": "int",
                                    "calendarId": "int",
                                    "workingDays": "int",
                                    "hasAccess": "string",
                                    "notifications": "string",
                                    "calendarModel": {
                                        "calendarId": "int",
                                        "name": "string",
                                        "colorCode": "string",
                                        "cid": "int",
                                        "createUserId": "int",
                                        "createts": "int",
                                        "createUserViewModel": {
                                            "userId": "int",
                                            "firstName": "string",
                                            "lastName": "string",
                                            "name": "string",
                                            "phone": "int",
                                            "email": "string",
                                            "status": "string",
                                            "shortName": "string",
                                            "thumbnail": "string",
                                            "gender": "string",
                                            "jobTitle": "string",
                                            "departmentId": "int",
                                            "locationId": "int",
                                            "department": "string",
                                            "location": "string",
                                            "profileId": "int",
                                            "profileName": "string",
                                            "timezone": "string",
                                            "userStartDate": "int",
                                            "cellPhone": "int",
                                            "empId": "int",
                                            "allocation": "int",
                                            "userDateFormat": "int",
                                            "star": "int",
                                            "imageName": "string",
                                            "notes": "string",
                                            "im": "string",
                                            "countryId": "int",
                                            "cid": "int",
                                            "guid": "string",
                                            "hasAccess": "int",
                                            "calendarId": "int",
                                            "id": "int"
                                        }
                                    },
                                    "isView": "string",
                                    "view": "string"
                                },
                                "finalValue": "int",
                                "obtype": "string",
                                "createts": "int",
                                "status": "string",
                                "preFinalValue": "int",
                                "preFinalComment": "string",
                                "finalValueStr": "string",
                                "preFinalValueStr": "string",
                                "showFinalValue": "int",
                                "showWeightedTotal": "int",
                                "userViewModel": {
                                    "userId": "int",
                                    "firstName": "string",
                                    "lastName": "string",
                                    "name": "string",
                                    "phone": "int",
                                    "email": "string",
                                    "status": "string",
                                    "shortName": "string",
                                    "thumbnail": "string",
                                    "gender": "string",
                                    "jobTitle": "string",
                                    "departmentId": "int",
                                    "locationId": "int",
                                    "department": "string",
                                    "location": "string",
                                    "profileId": "int",
                                    "profileName": "string",
                                    "timezone": "string",
                                    "userStartDate": "int",
                                    "userEndDate": "int",
                                    "cellPhone": "int",
                                    "empId": "string",
                                    "allocation": "int",
                                    "userDateFormat": "int",
                                    "star": "int",
                                    "imageName": "string",
                                    "notes": "string",
                                    "im": "string",
                                    "createuserid": "int",
                                    "countryId": "int",
                                    "cid": "int",
                                    "guid": "string",
                                    "hasAccess": "int",
                                    "id": "int"
                                },
                                "scoreTemplateId": "int",
                                "scoreTemplateModel": {
                                    "scoretemplateid": "int",
                                    "cid": "int",
                                    "scoreMin": "int",
                                    "scoreMax": "int",
                                    "scoreMaxValidation": "int",
                                    "scoringInstructions": "string",
                                    "scoreName": "string",
                                    "allowFractional": "int",
                                    "rangeModelList": [
                                        {
                                            "strangeid": "int",
                                            "scoreTempId": "int",
                                            "rangeMin": "int",
                                            "rangeMax": "int",
                                            "interpretation": "string",
                                            "colorCode": "string",
                                            "cid": "int",
                                            "description": "string"
                                        },
                                        {
                                            "strangeid": "int",
                                            "scoreTempId": "int",
                                            "rangeMin": "int",
                                            "rangeMax": "int",
                                            "interpretation": "string",
                                            "colorCode": "string",
                                            "cid": "int",
                                            "description": "string"
                                        },
                                        {
                                            "strangeid": "int",
                                            "scoreTempId": "int",
                                            "rangeMin": "int",
                                            "rangeMax": "int",
                                            "interpretation": "string",
                                            "colorCode": "string",
                                            "cid": "int",
                                            "description": "string"
                                        }
                                    ],
                                    "visualizationType": "string",
                                    "status": "string"
                                },
                                "saveForLater": "string",
                                "completionDate": "int",
                                "appraisalGroupId": "int",
                                "dynaFormId": "int",
                                "formAssignmentUrl": "string",
                                "signatureFlowLibraryId": "int",
                                "appraisalTemplateId": "int",
                                "isLocked": "int"
                            }
                        ],
                        "message": "success"
                    }
              schema:
                $ref: >-
                  #/components/schemas/PerformanceReviewGetCompletedReviewsBasedOnUserIdResponse
        '409':
          description: '409'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "failure"
                    }
              schema:
                $ref: >-
                  #/components/schemas/PerformanceReviewGetCompletedReviewsBasedOnUserId409Response
      deprecated: false
  /appraisal/bulkLaunch:
    post:
      tags:
        - Performance Review
      summary: Launch Performance Reviews In Bulk
      operationId: PerformanceReview_launchPerformanceReviewsInBulk
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters:
        - name: templateId
          in: query
          schema:
            type: string
        - name: reviewType
          in: query
          schema:
            type: string
        - name: startDate
          in: query
          schema:
            type: string
        - name: endDate
          in: query
          schema:
            type: string
        - name: importGoals
          in: query
          schema:
            type: string
        - name: importJobProfileSkills
          in: query
          schema:
            type: string
        - name: importSkills
          in: query
          schema:
            type: string
        - name: userIdList
          in: query
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: >-
                  #/components/schemas/PerformanceReviewLaunchPerformanceReviewsInBulkResponse
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Please verify the data parameters' format."
                    }
              schema:
                $ref: >-
                  #/components/schemas/PerformanceReviewLaunchPerformanceReviewsInBulk400Response
      deprecated: false
  /appraisal/assignment:
    get:
      tags:
        - Performance Review Assignment
      summary: Retrieve Performance Review Assignments
      operationId: PerformanceReviewAssignment_getAssignments
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters: []
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "code": 1,
                      "data": [
                        {
                          "assignmentId": "int",
                          "appraisalId": "int",
                          "reviewerId": "int",
                          "externalReviewerId": "string",
                          "typeCode": "string",
                          "asgnStatusCode": "string",
                          "comments": "string",
                          "dueDate": "string",
                          "cid": "int",
                          "totalScore": "string",
                          "scoreTemplateId": "int",
                          "scoreTemplateModel": {
                            "scoretemplateid": "int",
                            "cid": "int",
                            "scoreMin": "int",
                            "scoreMax": "int",
                            "scoreMaxValidation": "string",
                            "scoringInstructions": "string",
                            "scoreName": "string",
                            "allowFractional": "int",
                            "rangeModelList": [
                              {
                                "strangeid": "int",
                                "scoreTempId": "int",
                                "rangeMin": "int",
                                "rangeMax": "int",
                                "interpretation": "string",
                                "colorCode": "string",
                                "cid": "int",
                                "description": "string"
                              }
                            ],
                            "visualizationType": "string",
                            "status": "string"
                          },
                          "code": "int",
                          "completedts": "int",
                          "userModel": {
                            "cid": "int",
                            "userId": "int",
                            "position": "string",
                            "firstName": "string",
                            "shortName": "string",
                            "lastName": "string",
                            "displayFullName": "string",
                            "userStartDate": "string",
                            "email": "string",
                            "cellPhone": "string",
                            "userName": "string",
                            "userProfileModel": {
                              "cid": "int",
                              "profileId": "int",
                              "profileName": "string",
                              "profileDescription": "string",
                              "orgId": "int",
                              "profileResponsibilities": "string",
                              "profileRequirements": "string",
                              "salaryBandMin": "int",
                              "salaryBandMax": "int",
                              "salaryBandCurrency": "",
                              "managerProfileId": "int",
                              "managerProfileName": "string",
                              "customFieldValueModelList": "object",
                              "numberofUsers": "string",
                              "createuserid": "object",
                              "status": "string",
                              "careerPathwayModelList": "object",
                              "objectType": "string",
                              "objectName": "string",
                              "objectid": "int"
                            },
                            "departmentModel": {
                              "departmentId": "inr",
                              "name": "string",
                              "description": "string",
                              "deptHead": "int",
                              "cid": "int",
                              "departmentCode": "int",
                              "departmentLabel": "string",
                              "parentDepartmentId": "object",
                              "parentDepartmentName": "string",
                              "deptHeadName": "string",
                              "noOfEmployees": "int",
                              "userModel": "object"
                            },
                            "prefixSalutation": "string",
                            "secondLastName": "string",
                            "middleName": "string",
                            "namePronunciation": "string",
                            "familySuffix": "string",
                            "status": "string",
                            "ptoannual": "int",
                            "ptobalance": "int",
                            "gender": "string",
                            "phone": "string",
                            "im": "string",
                            "createts": "int",
                            "timezone": "string",
                            "practiceId": "int",
                            "imageName": "string",
                            "thumbnail": "string",
                            "profileId": "int",
                            "allocation": "int",
                            "lastupdateuserid": "int",
                            "lastupdatets": "string",,
                            "userDateFormat": "string",
                            "hrPortal": "string",
                            "userDisplayName": "string",
                            "star": "int",
                            "timecardPeriodPref": "string",
                            "languagePreference": "string",
                            "tosVersion": "string",
                            "guid": "string",
                            "jobGrade": "string",
                            "hasAccess": "boolean",
                            "primaryColor": "string",
                            "secondaryColor": "string",
                            "notifications": "boolean",
                            "isView": "boolean",
                            "view": "boolean"
                          },
                          "externalUserModel": "object",
                          "reviewVisibility": "string",
                          "showReviewer": "boolean",
                          "userVisibility": "boolean",
                          "managerOnlyVisibility": "boolean",
                          "notified": "boolean",
                          "notificationDate": "string",
                          "weightage": "int",
                          "appraisalModel": {
                            "appraisalId": "int",
                            "appraisalName": "string",
                            "description": "string",
                            "userModel": {
                              "cid": "int",
                              "empId": "int",
                              "userId": "int",
                              "position": "int",
                              "firstName": "string",
                              "shortName": "string",
                              "lastName": "string",
                              "displayFullName": "string",
                              "email": "string",
                              "cellPhone": "string",
                              "userName": "string",
                              "prefixSalutation": "string",
                              "secondLastName": "string",
                              "middleName": "string",
                              "namePronunciation": "string",
                              "familySuffix": "string",
                              "status": "string",
                              "ptoannual": "int",
                              "ptobalance": "int",
                              "gender": "string",
                              "phone": "string",
                              "im": "int",
                              "createts": "int",
                              "timezone": "string",
                              "practiceId": "int",
                              "profileId": "int",
                              "allocation": "int",
                              "lastupdateuserid": "int",
                              "lastupdatets": "string",
                              "userDateFormat": "string",
                              "hrPortal": "string",
                              "userDisplayName": "string",
                              "star": "int",
                              "timecardPeriodPref": "string",
                              "languagePreference": "string",
                              "tosVersion": "string",
                              "guid": "string",
                              "jobGrade": "string",
                              "hasAccess": "boolean",
                              "notifications": "boolean",
                              "isView": "boolean",
                              "view": "boolean"
                            },
                            "startDate": "string",
                            "endDate": "string",
                            "managerId": "int",
                            "managerUserModel": "object",
                            "statusCode": "string",
                            "cid": "int",
                            "appraisalType": "string",
                            "userId": "int",
                            "candidatePositionId": "int",
                            "reviewMode": "object",
                            "workflowId": "int",
                            "finalComment": "string",
                            "createUserId": "int",
                            "createUserModel": {
                              "cid": "int",
                              "userId": "int",
                              "position": "string",
                              "firstName": "string",
                              "shortName": "string",
                              "lastName": "string",
                              "displayFullName": "string",
                              "userStartDate": "string",
                              "email": "string",
                              "cellPhone": "string",
                              "userName": "string",
                              "userProfileModel": {
                                "cid": "int",
                                "profileId": "int",
                                "profileName": "string",
                                "profileDescription": "string",
                                "orgId": "int",
                                "profileResponsibilities": "string",
                                "profileRequirements": "string",
                                "salaryBandMin": "int",
                                "salaryBandMax": "int",
                                "salaryBandCurrency": "string",
                                "managerProfileId": "int",
                                "managerProfileName": "string",
                                "customFieldValueModelList": "object",
                                "numberofUsers": "int",
                                "createuserid": "int",
                                "status": "string",
                                "careerPathwayModelList": "object",
                                "objectType": "string",
                                "objectName": "string",
                                "objectid": "int"
                              },
                              "departmentModel": {
                                "departmentId": "int",
                                "name": "string",
                                "description": "string",
                                "deptHead": "int",
                                "cid": "int",
                                "departmentCode": "int",
                                "departmentLabel": "string",
                                "parentDepartmentId": "int",
                                "parentDepartmentName": "string",
                                "deptHeadName": "string",
                                "noOfEmployees": "int",
                                "userModel": "object"
                              },
                              "prefixSalutation": "string",
                              "secondLastName": "string",
                              "middleName": "string",
                              "namePronunciation": "string",
                              "familySuffix": "string",
                              "status": "string",
                              "ptoannual": "int",
                              "ptobalance": "int",
                              "gender": "string",
                              "phone": "string",
                              "im": "string",
                              "createts": "int",
                              "timezone": "string",
                              "practiceId": "int",
                              "imageName": "string",
                              "thumbnail": "string",
                              "profileId": "int",
                              "allocation": "int",
                              "lastupdateuserid": "int",
                              "lastupdatets": "string",
                              "userDateFormat": "string",
                              "hrPortal": "string",
                              "userDisplayName": "string",
                              "star": "int",
                              "timecardPeriodPref": "string",
                              "languagePreference": "string",
                              "tosVersion": "string",
                              "guid": "string",
                              "jobGrade": "string",
                              "hasAccess": "boolean",
                              "primaryColor": "string",
                              "secondaryColor": "string",
                              "notifications": "boolean",
                              "isView": "boolean",
                              "view": "boolean"
                            },
                            "finalValue": "string",
                            "obtype": "string",
                            "createts": "string",
                            "status": "string",
                            "preFinalValue": "string",
                            "preFinalComment": "string",
                            "finalValueStr": "string",
                            "preFinalValueStr": "string",
                            "showFinalValue": "boolean",
                            "showWeightedTotal": "string",
                            "userViewModel": {
                              "userId": "int",
                              "firstName": "string",
                              "lastName": "string",
                              "name": "string",
                              "phone": "string",
                              "email": "string",
                              "status": "string",
                              "shortName": "string",
                              "gender": "string",
                              "jobTitle": "string",
                              "departmentId": "int",
                              "profileId": "int",
                              "timezone": "string",
                              "cellPhone": "string",
                              "empId": "int",
                              "allocation": "int",
                              "userDateFormat": "string",
                              "star": "int",
                              "notes": "string",
                              "im": "int",
                              "createuserid": "int",
                              "cid": "int",
                              "guid": "string",
                              "hasAccess": "int",
                              "id": "int"
                            },
                            "scoreTemplateId": "int",
                            "scoreTemplateModel": {
                              "scoretemplateid": "int",
                              "cid": "int",
                              "scoreMin": "int",
                              "scoreMax": "int",
                              "scoreMaxValidation": "string",
                              "scoringInstructions": "string",
                              "scoreName": "string",
                              "allowFractional": "int",
                              "rangeModelList": [
                                {
                                  "strangeid": "int",
                                  "scoreTempId": "int",
                                  "rangeMin": "int",
                                  "rangeMax": "int",
                                  "interpretation": "string",
                                  "colorCode": "string",
                                  "cid": "int",
                                  "description": "string"
                                }
                              ],
                              "visualizationType": "string",
                              "status": "string"
                            },
                            "saveForLater": "string",
                            "completionDate": "string",
                            "appraisalGroupId": "int",
                            "dynaFormId": "int",
                            "formAssignmentUrl": "string",
                            "signatureFlowLibraryId": "int",
                            "appraisalTemplateId": "int",
                            "isLocked": "int"
                          },
                          "createts": "string",
                          "createDirectReports": "boolean"
                        }
                      ],
                      "message": "successful"
                    }
              schema:
                $ref: >-
                  #/components/schemas/PerformanceReviewAssignmentGetAssignmentsResponse
        '404':
          description: '404'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "The requested resource is not available."
                    }
              schema:
                $ref: >-
                  #/components/schemas/PerformanceReviewAssignmentGetAssignments404Response
        '409':
          description: '409'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "failure"
                    }
              schema:
                $ref: >-
                  #/components/schemas/PerformanceReviewAssignmentGetAssignments409Response
      deprecated: false
  /position/save:
    post:
      tags:
        - Positions
      summary: Save Position
      operationId: Positions_createPosition
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters:
        - description: Name of Position
          name: name
          in: query
          required: true
          schema:
            type: string
        - description: Description of Position
          name: description
          in: query
          schema:
            type: string
        - description: Number of openings
          name: count
          in: query
          required: true
          schema:
            type: integer
            format: int32
            default: '1'
        - description: Status of Position
          name: status
          in: query
          required: true
          schema:
            type: string
            enum:
              - OPEN
              - HOLD
            default: OPEN
        - description: |-
            Access level of Position 
             'pvt' - Private, 'ijp' - Publish Internally, 'pub' - Public
          name: accessLevel
          in: query
          required: true
          schema:
            type: string
            enum:
              - pvt
              - ijp
              - pub
            default: pvt
        - description: Requirements of Position
          name: requirements
          in: query
          schema:
            type: string
        - description: Responsibilities of Position
          name: responsibilities
          in: query
          schema:
            type: string
        - description: Date of Opening
          name: dateOpen
          in: query
          required: true
          schema:
            type: string
        - description: Date of Closing
          name: dateClose
          in: query
          required: true
          schema:
            type: string
        - description: Unique Identity of Position
          name: positionUID
          required: true
          in: query
          schema:
            type: string
        - description: Project ID of Position
          name: projectid
          in: query
          schema:
            type: integer
            format: int32
        - description: Candidate Funnel ID of Position
          name: funnelId
          required: true
          in: query
          schema:
            type: integer
        - description: Position Approval Flow ID of Position
          name: approvalFlowId
          in: query
          schema:
            type: integer
            format: int32
        - description: Location ID of Position
          name: locationid
          in: query
          schema:
            type: integer
            format: int32
        - description: Department ID of Position
          name: departmentId
          in: query
          schema:
            type: string
        - description: Profile ID of Position
          name: profileid
          in: query
          schema:
            type: integer
            format: int32
        - description: ID of Recruiter
          name: recruiterId
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "message": "successful"
                    }
              schema:
                $ref: '#/components/schemas/PositionsCreatePositionResponse'
        '401':
          description: '401'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
                    }
              schema:
                $ref: '#/components/schemas/PositionsCreatePosition401Response'
        '404':
          description: '404'
          content:
            text:
              examples:
                Result:
                  value: Resource Path not found.
              schema:
                $ref: '#/components/schemas/PositionsCreatePosition404Response'
        '409':
          description: '409'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "message": "failure"
                    }
              schema:
                $ref: '#/components/schemas/PositionsCreatePosition409Response'
      deprecated: false
  /position/view:
    get:
      tags:
        - Positions
      summary: Retrieve position
      operationId: Positions_getPosition
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters:
        - name: positionid
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": {
                        "positionid": "int",
                        "name": "string",
                        "status": "string",
                        "description": "string",
                        "projectid": "int",
                        "approvalFlowId": "int",
                        "offerApprovalFlowId": "int",
                        "count": "int",
                        "customLocation": "string",
                        "locationid": "int",
                        "positionUID": "string",
                        "createDate": "string",
                        "cid": "int",
                        "accessLevel": "string",
                        "dateClose": "string",
                        "dateOpen": "string",
                        "dateApprove": "string",
                        "datePublish": "string",
                        "dateHold": "string",
                        "profileid": "int",
                        "requirements": "string",
                        "responsibilities": "string",
                        "htmlTemplate": "string",
                        "recruiterId": "int",
                        "recruiterModel": {
                          "userId": "int",
                          "firstName": "string",
                          "lastName": "string",
                          "name": "string",
                          "phone": "int",
                          "email": "string",
                          "status": "string",
                          "shortName": "string",
                          "thumbnail": "string",
                          "gender": "string",
                          "jobTitle": "string",
                          "profileId": "int",
                          "profileName": "string",
                          "timezone": "string",
                          "userStartDate": "string",
                          "cellPhone": "string",
                          "empId": "string",
                          "allocation": "int",
                          "userDateFormat": "string",
                          "star": "int",
                          "imageName": "string",
                          "notes": "string",
                          "im": "int",
                          "createuserid": "int",
                          "cid": "int",
                          "guid": "string",
                          "careerPathwayId": "int",
                          "hasAccess": "int",
                          "userNameFormat": "string",
                          "id": "int"
                        },
                        "assessmentTemplateId": "int",
                        "applicationFormId": "int",
                        "dynaFormModel": "object",
                        "departmentId": "int",
                        "departmentModel": {
                          "departmentId": "int",
                          "name": "string",
                          "description": "string",
                          "deptHead": "int",
                          "cid": "int",
                          "departmentCode": "int",
                          "departmentLabel": "string",
                          "parentDepartmentId": "int",
                          "parentDepartmentName": "string",
                          "deptHeadName": "string",
                          "noOfEmployees": "int",
                          "userModel": {
                            "userId": "int",
                            "firstName": "string",
                            "lastName": "string",
                            "name": "string",
                            "phone": "string",
                            "email": "string",
                            "status": "string",
                            "shortName": "string",
                            "gender": "string",
                            "jobTitle": "string",
                            "departmentId": "int",
                            "department": "string",
                            "profileId": "int",
                            "timezone": "string",
                            "userStartDate": "string",
                            "cellPhone": "int",
                            "empId": "string",
                            "allocation": "int",
                            "userDateFormat": "string",
                            "star": "int",
                            "notes": "string",
                            "im": "int",
                            "createuserid": "int",
                            "cid": "int",
                            "guid": "string",
                            "hasAccess": "int",
                            "id": "int"
                          }
                        },
                        "assessmentFormId": "int",
                        "applicationDueDate": "string",
                        "userName": "string",
                        "positionApprovalLevelList": "string",
                        "locationModel": {
                          "locationId": "int",
                          "locationName": "string",
                          "cid": "int",
                          "locationDescription": "string",
                          "locationType": "string",
                          "address": "string",
                          "lattitude": "string",
                          "longitude": "string",
                          "locationUID": "string",
                          "status": "string",
                          "workingDays": "string",
                          "locationCode": "",
                          "locationLabel": "string",
                          "parentLocationId": "int",
                          "createuserid": "int",
                          "addressModelList": [
                            {
                              "addressId": "int",
                              "addressLine1": "string",
                              "addressLine2": "string",
                              "city": "string",
                              "currentStatus": "string",
                              "state": "string",
                              "zipCode": "int",
                              "createts": "int",
                              "cid": "int",
                              "userId": "int",
                              "candidateId": "int",
                              "addressType": "string",
                              "locationId": "int",
                              "contactId": "int",
                              "countryId": "int",
                              "countryModel": {
                                "countryId": "int",
                                "countryName": "string",
                                "iso2": "string"
                              },
                              "status": "string",
                              "verificationStatus": "string",
                              "custId": "int",
                              "mapUrl": "string",
                              "createUserId": "int",
                              "extAppUID": "string",
                              "countryCode": "int",
                              "countryid": "int"
                            }
                          ]
                        },
                        "profileModel": "object",
                        "projectModel": "object",
                        "userViewModel": {
                          "userId": "int",
                          "firstName": "string",
                          "lastName": "string",
                          "name": "string",
                          "phone": "string",
                          "email": "string",
                          "status": "string",
                          "shortName": "string",
                          "thumbnail": "string",
                          "gender": "string",
                          "jobTitle": "string",
                          "departmentId": "int",
                          "locationId": "int",
                          "department": "string",
                          "location": "string",
                          "profileId": "int",
                          "profileName": "string",
                          "timezone": "string",
                          "userStartDate": "string",
                          "userEndDate": "string",
                          "cellPhone": "string",
                          "empId": "string",
                          "userDateOfBirth": "string",
                          "allocation": "int",
                          "userDateFormat": "string",
                          "star": "int",
                          "imageName": "string",
                          "notes": "string",
                          "im": "int",
                          "createuserid": "int",
                          "countryId": "int",
                          "cid": "int",
                          "guid": "string",
                          "hasAccess": "int",
                          "calendarId": "int",
                          "id": "int"
                        },
                        "lastUpdateUserViewModel": {
                          "userId": "int",
                          "firstName": "string",
                          "lastName": "string",
                          "name": "string",
                          "phone": "string",
                          "email": "string",
                          "status": "string",
                          "shortName": "string",
                          "thumbnail": "string",
                          "gender": "string",
                          "jobTitle": "string",
                          "profileId": "int",
                          "profileName": "string",
                          "timezone": "string",
                          "userStartDate": "string",
                          "cellPhone": "string",
                          "empId": "string",
                          "allocation": "int",
                          "userDateFormat": "string",
                          "star": "int",
                          "imageName": "string",
                          "notes": "string",
                          "im": "int",
                          "createuserid": "int",
                          "cid": "int",
                          "guid": "string",
                          "careerPathwayId": "int",
                          "hasAccess": "int",
                          "userNameFormat": "string",
                          "id": "int"
                        },
                        "candidatePositionModelList": "object",
                        "totalcandidate": "int",
                        "seoUrl": "string",
                        "lastUpdatets": "string",
                        "approvalStatus": "string",
                        "hiringManagerId": "int",
                        "requestApprovalId": "int",
                        "funnelId": "int",
                        "userapprovalList": "object",
                        "isRecommended": "boolean",
                        "category": "string",
                        "currencyId": "int",
                        "currencyModel": "object",
                        "minSalary": "int",
                        "maxSalary": "int",
                        "recommended": "boolean",
                        "id": "int"
                      },
                      "CandidateList": "object",
                      "candidateApplicationFunnelStatusModel": [
                        {
                          "funnelStatusId": "int",
                          "funnelId": "int",
                          "statusName": "string",
                          "sequence": "int",
                          "colorCode": "string",
                          "internalCode": "int",
                          "shareStatus": "string",
                          "cid": "int"
                        }
                      ],
                      "message": "successful"
                    }
              schema:
                $ref: '#/components/schemas/PositionsGetPositionResponse'
        '401':
          description: '401'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
                    }
              schema:
                $ref: '#/components/schemas/PositionsGetPosition401Response'
        '404':
          description: '404'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "not found"
                    }
              schema:
                $ref: '#/components/schemas/PositionsGetPosition404Response'
        '409':
          description: '409'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "failure"
                    }
              schema:
                $ref: '#/components/schemas/PositionsGetPosition409Response'
      deprecated: false
  /position/list:
    get:
      tags:
        - Positions
      summary: Retrieve positions
      operationId: Positions_getPositionsList
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters:
        - description: ''
          name: search
          in: query
          schema:
            type: string
        - description: Page number
          name: page
          in: query
          schema:
            type: integer
            format: int32
        - description: Number of users per page
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": [
                        {
                          "positionId": "int",
                          "positionUID": "string",
                          "positionName": "string",
                          "applicantsCount": "int",
                          "hiringFunnelName": "string",
                          "noOfOpenings": "int",
                          "positionDescription": "string",
                          "positionResponsibilities": "string",
                          "positionRequirements": "string",
                          "positionStatus": "string",
                          "publishStatus": "string",
                          "approvalStatus": "string",
                          "positionCreatets": "string",
                          "positionLastUpdatets": "string",
                          "cid": "int"
                        },
                        {
                          "positionId": "int",
                          "positionUID": "string",
                          "positionName": "string",
                          "applicantsCount": "int",
                          "hiringFunnelName": "string",
                          "noOfOpenings": "int",
                          "positionDescription": "string",
                          "positionResponsibilities": "string",
                          "positionRequirements": "string",
                          "positionStatus": "string",
                          "publishStatus": "string",
                          "approvalStatus": "string",
                          "positionCreatets": "string",
                          "positionLastUpdatets": "string",
                          "cid": "int"
                        },
                        {
                          "positionId": "int",
                          "positionUID": "int",
                          "positionName": "string",
                          "applicantsCount": "int",
                          "hiringFunnelName": "string",
                          "noOfOpenings": "int",
                          "positionDescription": "string",
                          "positionResponsibilities": "string",
                          "positionRequirements": "string",
                          "positionStatus": "string",
                          "publishStatus": "string",
                          "approvalStatus": "string",
                          "positionCreatets": "string",
                          "positionLastUpdatets": "string",
                          "cid": "int"
                        }
                      ],
                       "positionApprovalLevelList": [
                        {
                          "approvalId": "int",
                          "levelSequence": "int",
                          "userGroupModel": "object",
                          "relationType": "string",
                          "createUserId": "int",
                          "flowId": "int",
                          "userId": "int",
                          "userViewModel": "object",
                          "cid": "int"
                        },
                        {
                          "approvalId": "int",
                          "levelSequence": "int",
                          "userGroupModel": {
                            "usergroupid": "int",
                            "userViewModel": "object",
                            "usergroupname": "string",
                            "description": "string",
                            "createuserid": "int",
                            "cid": "int",
                            "updatets": "int",
                            "membershipGuidance": "string",
                            "functionid": "int"
                          },
                          "relationType": "string",
                          "createUserId": "int",
                          "flowId": "int",
                          "userId": "int",
                          "userViewModel": "int",
                          "cid": "int"
                        },
                        {
                          "approvalId": "int",
                          "levelSequence": "int",
                          "userGroupModel": {
                            "usergroupid": "int",
                            "userViewModel": {
                              "userId": "int",
                              "firstName": "string",
                              "lastName": "string",
                              "name": "string",
                              "phone": "string",
                              "email": "string",
                              "status": "string",
                              "shortName": "string",
                              "thumbnail": "string",
                              "gender": "string",
                              "jobTitle": "string",
                              "departmentId": "int",
                              "locationId": "int",
                              "department": "string",
                              "location": "string",
                              "profileId": "int",
                              "profileName": "string",
                              "timezone": "string",
                              "userStartDate": "string",
                              "userEndDate": "string",
                              "cellPhone": "string",
                              "empId": "string",
                              "userDateOfBirth": "string",
                              "allocation": "int",
                              "userDateFormat": "string",
                              "star": "int",
                              "imageName": "string",
                              "notes": "string",
                              "im": "int",
                              "createuserid": "int",
                              "countryId": "int",
                              "cid": "int",
                              "guid": "string",
                              "hasAccess": "int",
                              "calendarId": "int",
                              "id": "int"
                            },
                            "usergroupname": "string",
                            "description": "string",
                            "createuserid": "int",
                            "cid": "int",
                            "updatets": "int",
                            "membershipGuidance": "string",
                            "functionid": "int"
                          },
                          "relationType": "string",
                          "createUserId": "int",
                          "flowId": "int",
                          "userId": "int",
                          "userViewModel": "object",
                          "cid": "int"
                        }
                     }
              schema:
                $ref: '#/components/schemas/PositionsGetPositionsListResponse'
        '401':
          description: '401'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
                    }
              schema:
                $ref: '#/components/schemas/PositionsGetPositionsList401Response'
        '404':
          description: '404'
          content:
            text:
              examples:
                Result:
                  value: Resource Path not found.
              schema:
                $ref: '#/components/schemas/PositionsGetPositionsList404Response'
        '409':
          description: '409'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "failure"
                    }
              schema:
                $ref: '#/components/schemas/PositionsGetPositionsList409Response'
      deprecated: false
  /api/projects/allocation/{projectId}:
    get:
      tags:
        - Project
      summary: List Allocations
      operationId: Project_listAllocations
      security:
        - sec0: []
          sec1: []
      description: Returns all user allocations for the project.
      parameters:
        - description: The ID of the project.
          name: projectId
          in: path
          schema:
            type: integer
            format: int32
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "allocations": [
                        {
                          "userProjectId": "int",
                          "userReportModel": {
                            "cid": "int",
                            "userId": "int",
                            "firstName": "string",
                            "shortName": "string",
                            "lastName": "string",
                            "displayFullName": "string",
                            "userStartDate": "date",
                            "email": "email",
                            "cellPhone": "string",
                            "userName": "string",
                            "status": "string",
                            "gender": "string",
                            "createts": "long",
                            "allocation": "int",
                            "userDisplayName": "string",
                            "star": "int",
                            "locationModel": {
                              "locationId": "int",
                              "locationName": "string",
                              "locationDescription": "string",
                              "locationType": "string",
                              "address": "string",
                              "lattitude": "double",
                              "longitude": "double",
                              "locationUID": "int",
                              "status": "string",
                              "workingDays": "string",
                              "locationCode": "string",
                              "locationLabel": "string",
                              "parentLocationId": "int"
                            },
                            "isView": "boolean"
                          },
                          "projectModel": {
                            "projectId": "int",
                            "projectName": "string",
                            "projectDesc": "string",
                            "startDate": "date",
                            "endDate": "date",
                            "contactPerson": "int",
                            "account": "int",
                            "status": "string",
                            "createts": "long",
                            "shortCode": "string",
                            "probability": "int",
                            "contactPersonName": "string",
                            "statusValue": "string",
                            "puid": "int",
                            "billingType": "string"
                          },
                          "roleCode": "int",
                          "isAdmin": "int",
                          "allocation": "double",
                          "billableAllocation": "int",
                          "billRate": "int",
                          "billPeriod": "string",
                          "billCurrencyCode": "string",
                          "overtimeCoefficient": "double",
                          "cid": "int",
                          "startDate": "date",
                          "endDate": "date",
                          "createuserid": "int",
                          "status": "string",
                          "approvalFlowModel": {},
                          "userModel": {
                            "cid": "int",
                            "userId": "int",
                            "position": "string",
                            "firstName": "string",
                            "shortName": "string",
                            "lastName": "string",
                            "displayFullName": "string",
                            "userStartDate": "date",
                            "email": "string",
                            "cellPhone": "string",
                            "userName": "string",
                            "prefixSalutation": "string",
                            "middleName": "string",
                            "namePronunciation": "string",
                            "familySuffix": "string",
                            "status": "string",
                            "gender": "string",
                            "phone": "string",
                            "im": "string",
                            "createts": "long",
                            "imageName": "string",
                            "thumbnail": "string",
                            "allocation": "double",
                            "userDisplayName": "string",
                            "star": "int",
                            "languagePreference": "string",
                            "jobGrade": "string",
                            "isView": "boolean"
                          }
                        }
                      ]
                    }
              schema:
                $ref: '#/components/schemas/ProjectListAllocationsResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: ''
              schema:
                $ref: '#/components/schemas/ProjectListAllocations400Response'
        '401':
          description: '401'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/ProjectListAllocations401Response'
        '409':
          description: '409'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/ProjectListAllocations409Response'
      deprecated: false
  /api/projects/allocation:
    post:
      tags:
        - Project
      summary: Assign Project Allocation
      operationId: Project_assignUserAllocation
      security:
        - sec0: []
          sec1: []
      description: >-
        Assigns the project to the user based on the project ID and user ID and
        returns the userProjectId, which is the ID of the assignment.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectAssignUserAllocationRequest'
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "userProjectId": "int"
                    }
              schema:
                $ref: '#/components/schemas/ProjectAssignUserAllocationResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/ProjectAssignUserAllocation400Response'
        '401':
          description: '401'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/ProjectAssignUserAllocation401Response'
        '409':
          description: '409'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/ProjectAssignUserAllocation409Response'
      deprecated: false
  /api/projects/{projectId}:
    get:
      tags:
        - Project
      summary: Retrieve Project
      operationId: Project_detailsById
      security:
        - sec0: []
          sec1: []
      description: Retrieve the details of the Project by ID.
      parameters:
        - description: The ID of the project.
          name: projectId
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": {
                        "projectId": "int",
                        "projectName": "string",
                        "projectDesc": "string",
                        "startDate": "date",
                        "endDate": "date",
                        "contactPerson": "int",
                        "account": "int",
                        "status": "string",
                        "createts": "int",
                        "shortCode": "string",
                        "probability": "int",
                        "contactPersonName": "string",
                        "statusValue": "string",
                        "puid": "string",
                        "billingType": "string"
                      }
                    }
              schema:
                $ref: '#/components/schemas/ProjectDetailsByIdResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/ProjectDetailsById400Response'
        '401':
          description: '401'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "You don't have permission to perform this operation."
                    }
              schema:
                $ref: '#/components/schemas/ProjectDetailsById401Response'
        '409':
          description: '409'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Something Went Wrong!"
                    }
              schema:
                $ref: '#/components/schemas/ProjectDetailsById409Response'
      deprecated: false
  /api/projects:
    get:
      tags:
        - Project
      summary: List Projects
      operationId: Project_listProjects
      security:
        - sec0: []
          sec1: []
      description: Returns a list of projects.
      parameters: []
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "projects": [
                        {
                          "projectId": "int",
                          "projectName": "string",
                          "projectDesc": "string",
                          "startDate": "date",
                          "endDate": "date",
                          "contactPerson": "int",
                          "account": "int",
                          "status": "string",
                          "createts":"int",
                          "shortCode": "string",
                          "probability": "int",
                          "contactPersonName": "string",
                          "statusValue": "string",
                          "puid": "string",
                          "billingType": "string"
                        },
                        {
                          "projectId": "int",
                          "projectName": "string",
                          "projectDesc": "string",
                          "startDate": "date",
                          "endDate": "date",
                          "contactPerson": "int",
                          "account": "int",
                          "status": "string",
                          "createts": "int",
                          "shortCode": "string",
                          "probability": "int",
                          "contactPersonName": "string",
                          "statusValue": "string",
                          "puid": "string",
                          "billingType": "string"
                        }
                      ]
                    }
              schema:
                $ref: '#/components/schemas/ProjectListProjectsResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/ProjectListProjects400Response'
        '401':
          description: '401'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "You don't have permission to perform this operation."
                    }
              schema:
                $ref: '#/components/schemas/ProjectListProjects401Response'
        '409':
          description: '409'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Something Went Wrong!"
                    }
              schema:
                $ref: '#/components/schemas/ProjectListProjects409Response'
      deprecated: false
    post:
      tags:
        - Project
      summary: Create Project
      operationId: Project_createNew
      security:
        - sec0: []
          sec1: []
      description: Create a new project.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectCreateNewRequest'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "projectId": "int"
                    }
              schema:
                $ref: '#/components/schemas/ProjectCreateNewResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/ProjectCreateNew400Response'
        '401':
          description: '401'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "You don't have permission to perform this operation."
                    }
              schema:
                $ref: '#/components/schemas/ProjectCreateNew401Response'
        '409':
          description: '409'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Something Went Wrong!"
                    }
              schema:
                $ref: '#/components/schemas/ProjectCreateNew409Response'
      deprecated: false
  /api/report:
    get:
      tags:
        - Reports
      summary: Get report
      operationId: Reports_getReportDetails
      security:
        - sec0: []
          sec1: []
      parameters:
        - description: Authorization
          name: Authorization
          in: header
          required: false
          schema:
            type: string
        - description: analyticId
          name: analyticId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Iterable'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /api/report/content:
    get:
      tags:
        - Reports
      summary: Get content for report by analytic Id
      operationId: Reports_getContentByAnalyticId
      security:
        - sec0: []
          sec1: []
      parameters:
        - description: Authorization
          name: Authorization
          in: header
          required: false
          schema:
            type: string
        - description: analyticId
          name: analyticId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Iterable'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /report/content:
    get:
      tags:
        - Reports
      summary: Retrieve report content
      operationId: Reports_getContentForReport
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters:
        - description: The ID of the report.
          name: analyticId
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": [
                        {
                          "entityList": [
                            {
                              "Column Name": "string",
                              "Column Name": "string"
                            }
                          ]
                        }
                      ],
                      "message": "success"
                    }
              schema:
                $ref: '#/components/schemas/ReportsGetContentForReportResponse'
        '401':
          description: '401'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Error while authenticating user."
                    }
              schema:
                $ref: '#/components/schemas/ReportsGetContentForReport401Response'
        '404':
          description: '404'
          content:
            text/plain:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Error while processing this request."
                    }
              schema:
                $ref: '#/components/schemas/ReportsGetContentForReport404Response'
        '409':
          description: '409'
          content:
            text/plain:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Failure"
                    }
              schema:
                $ref: '#/components/schemas/ReportsGetContentForReport409Response'
      deprecated: false
  /skill/add:
    post:
      tags:
        - Skills
      summary: Create a new skill
      operationId: Skills_createNewSkill
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SkillsCreateNewSkillRequest'
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "Status": "string",
                        "Description": "string",
                        "SkillCode": "string",
                        "SkillTypeModel": {
                            "skillTypeId": "int",
                            "skillTypeName": "string",
                            "skillTypeDesc": "string",
                            "skillViewModelList": "model",
                            "createUserId": "string",
                            "createts": "int",
                            "skillCategoryModel": "model",
                            "cid": "int"
                        },
                        "AssessmentModel": {
                            "scoretemplateid": "int",
                            "cid": "int",
                            "scoreMin": "int",
                            "scoreMax": "int",
                            "scoreMaxValidation": "int",
                            "scoringInstructions": "string",
                            "scoreName": "string",
                            "allowFractional": "int",
                            "rangeModelList": "model",
                            "visualizationType": "string",
                            "status": "string"
                        },
                        "SkillId": "int",
                        "message": "Skill created successfully."
                    }
              schema:
                $ref: '#/components/schemas/SkillsCreateNewSkillResponse'
        '401':
          description: '401'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid."
                    }
              schema:
                $ref: '#/components/schemas/SkillsCreateNewSkill401Response'
        '409':
          description: '409'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Error while creating skill from API."
                    }
              schema:
                $ref: '#/components/schemas/SkillsCreateNewSkill409Response'
      deprecated: false
  /skills:
    get:
      tags:
        - Skills
      summary: Retrieve skills
      operationId: Skills_getSkills
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters: []
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    [
                      {
                        "sequence": "int",
                        "createUserId": "int",
                        "skillCode": "string",
                        "description": "string",
                        "createts": "int",
                        "id": "int",
                        "status": "string"
                      },
                      {
                        "sequence": "int",
                        "createUserId": "int",
                        "skillCode": "string",
                        "description": "string",
                        "createts": "int",
                        "id": "int",
                       "status": "string"
                      },
                        "message": "List of skills fetched successfully."
                    }
              schema:
                $ref: '#/components/schemas/SkillsGetSkillsResponse'
        '401':
          description: '401'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid."
                    }
              schema:
                $ref: '#/components/schemas/SkillsGetSkills401Response'
        '409':
          description: '409'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Error while getting skills from API."
                    }
              schema:
                $ref: '#/components/schemas/SkillsGetSkills409Response'
      deprecated: false
  /userSkill:
    get:
      tags:
        - Skills
      summary: Retrieve skills assigned to a user
      operationId: Skills_getUserAssignedSkills
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters:
        - description: The ID of the user whose skills should be retrieved.
          name: assignedUserID
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": [                       
                            {
                                "skillUserId": "int",
                                "skillId": "int",
                                "userId": "int",
                                "level": "int",
                                "description": "string",
                                "cid": "int",
                                "lastUpdateUserModel": "int",
                                "createUserId": "int",
                                "status": "string",
                                "createts": "int",
                                "performancelevel": "int",
                                "candidateid": "int",
                                "weightage": "int",
                                "targetLevel": "int",
                                "targetLevelCreatets": "int",
                                "targetLevelCreateUserId": "int",
                                "skillCounsellor": "string",
                                "yearsOfExperience": "int",
                                "dateOfLastUse": "int",
                                "skillAcquireDate": "int",
                                "skillModel": {
                                    "skillId": "int",
                                    "skillCode": "string",
                                    "description": "string",
                                    "cid": "int",
                                    "skillTypeModel": "string",
                                    "assessmentModel": {
                                        "scoretemplateid": "int",
                                        "cid": "int",
                                        "scoreMin": "int",
                                        "scoreMax": "int",
                                        "scoreMaxValidation": "int",
                                        "scoringInstructions": "string",
                                        "scoreName": "string",
                                        "allowFractional":"int",
                                        "rangeModelList": [
                                            {
                                                "strangeid": "int",
                                                "scoreTempId": "int",
                                                "rangeMin": "int",
                                                "rangeMax": "int",
                                                "interpretation": "string",
                                                "colorCode": "string",
                                                "cid": "int",
                                                "description": "string"
                                            },
                                            {
                                                "strangeid": "int",
                                                "scoreTempId": "int",
                                                "rangeMin": "int",
                                                "rangeMax": "int",
                                                "interpretation": "string",
                                                "colorCode": "string",
                                                "cid": "int",
                                                "description": "string"
                                            }
                                        ],
                                        "visualizationType": "string",
                                        "status": "string"
                                    },
                                    "sequence": "int",
                                    "skillTypeName": "string",
                                    "userSkillLevel": "int",
                                    "status": "string",
                                    "createUserId": "int",
                                    "createts": "int"
                                }
                            }
                        ],
                        "message": "List of skills fetched successfully."
                    }
              schema:
                $ref: '#/components/schemas/SkillsGetUserAssignedSkillsResponse'
        '401':
          description: '401'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid."
                    }
              schema:
                $ref: '#/components/schemas/SkillsGetUserAssignedSkills401Response'
        '409':
          description: '409'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Error while getting skills assigned to a user from API."
                    }
              schema:
                $ref: '#/components/schemas/SkillsGetUserAssignedSkills409Response'
      deprecated: false
  /api/survey/allresponses:
    get:
      tags:
        - Survey
      summary: Retrieve all the Responses of the Survey
      operationId: Survey_getAllSurveyResponses
      security:
        - sec0: []
          sec1: []
      description: This page will help you get started with Surveys.
      parameters:
        - description: The ID of the survey.
          name: SurveyId
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {}{
                        "success": 200,
                        "Responses": [
                            {
                                "responseId": "Integer",
                                "itemId":  "Integer",
                                "response": "String",
                                "createUserId":  "Integer",
                                "createts":  "Timestamp",
                                "assignmentId":  "Integer",
                                "digitalSignatureModel": "Object",
                                "cid":  "Integer",
                                "remoteAddr": "String",
                                "graderResponse": "Boolean",
                                "attachmentModel": "Object",
                                "sentimentCode": "String",
                                "sentimentScore": "JSON",
                                "answerCorrect": "Boolean",
                                "userId": "Integer"
                            }
                        ]
                    }
              schema:
                $ref: '#/components/schemas/SurveyGetAllSurveyResponsesResponse'
        '401':
          description: '401'
          content:
            text/plain:
              examples:
                Result:
                  value: |-
                    {
                        "message": "Exception while authenticating user."
                    }
              schema:
                $ref: '#/components/schemas/SurveyGetAllSurveyResponses401Response'
        '403':
          description: '403'
          content:
            text/plain:
              examples:
                Result:
                  value: |-
                    {
                        "message": "User doesn't have permission to view the responses of the survey."
                    }
              schema:
                $ref: '#/components/schemas/SurveyGetAllSurveyResponses403Response'
      deprecated: false
  /api/survey/item/save:
    post:
      tags:
        - Survey
      summary: Create the item's response for a survey
      operationId: Survey_createItemResponse
      security:
        - sec0: []
          sec1: []
      parameters:
        - description: Authorization
          name: Authorization
          in: header
          required: false
          schema:
            type: string
        - description: assignmentId
          name: assignmentId
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - description: itemId
          name: itemId
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - description: responseValue
          name: responseValue
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SurveyCreateItemResponseResponse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /api/survey/list:
    get:
      tags:
        - Survey
      summary: Get a list of surveys
      operationId: Survey_getList
      security:
        - sec0: []
          sec1: []
      parameters:
        - description: Authorization
          name: Authorization
          in: header
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SurveyGetListResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /api/survey/save:
    post:
      tags:
        - Survey
      summary: Create a survey response by assignment id
      operationId: Survey_createResponseByAssignmentId
      security:
        - sec0: []
          sec1: []
      parameters:
        - description: Authorization
          name: Authorization
          in: header
          required: false
          schema:
            type: string
        - description: assignmentId
          name: assignmentId
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/SurveyCreateResponseByAssignmentIdResponse
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /api/survey/view:
    get:
      tags:
        - Survey
      summary: Get the details of a survey form by form id
      operationId: Survey_detailsByFormId
      security:
        - sec0: []
          sec1: []
      parameters:
        - description: Authorization
          name: Authorization
          in: header
          required: false
          schema:
            type: string
        - description: dynamicFormId
          name: dynamicFormId
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SurveyDetailsByFormIdResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /api/user/timecard:
    get:
      tags:
        - Timecards
      summary: Retrieve timecard details by User ID.
      operationId: Timecards_getByUserId
      security:
        - sec0: []
          sec1: []
      description: >-
        Retrieve timecard details based on User ID with Add Time Cards For Other
        permission.
      parameters:
        - description: email of the user.
          name: email
          in: query
          required: false
          schema:
            type: string
        - description: Graphical user ID.
          name: guid
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Result:
                  value: |2-
                        {
                            "cardId": "int",
                            "userModel": {
                                "cid": "int",
                                "empId": "string",
                                "userId": "int",
                                "position": "string",
                                "firstName": "string",
                                "shortName": "string",
                                "lastName": "string",
                                "displayFullName": "string",
                                "userStartDate": "date",
                                "email": "string",
                                "cellPhone": "string",
                                "userName": "string",
                                "userProfileModel": {
                                    "cid": "int",
                                    "profileId": "int",
                                    "profileName": "string",
                                    "profileDescription": "string",
                                    "orgId": "int",
                                    "profileResponsibilities": "",
                                    "profileRequirements": "string",
                                    "salaryBandMin": "double",
                                    "salaryBandMax": "double",
                                    "salaryBandCurrency": "string",
                                    "managerProfileId": "int",
                                    "managerProfileName": "string",
                                    "customFieldValueModelList": "",
                                    "numberofUsers": "int",
                                    "createuserid": "int",
                                    "status": "string",
                                    "careerPathwayModelList": "",
                                    "objectType": "string",
                                    "objectName": "string",
                                    "objectid": "int",
                                },
                                "prefixSalutation": "string",
                                "secondLastName": "string",
                                "middleName": "string",
                                "namePronunciation": "string",
                                "familySuffix": "string",
                                "status": "string",
                                "notes": "string",
                                "ptoannual": "float",
                                "ptobalance": "float",
                                "gender": "string",
                                "phone": "string",
                                "im": "string",
                                "createts": "",
                                "timezone": "string",
                                "practiceId": "int",
                                "profileId": "int",
                                "allocation": "double",
                                "lastupdateuserid":"int",
                                "lastupdatets": "date",
                                "userDateFormat": "date",
                                "hrPortal": "string",
                                "userDisplayName": "string",
                                "star": "int",
                                "timecardPeriodPref": "string",
                                "languagePreference": "string",
                                "tosVersion": "string",
                                "guid": "string",
                                "jobGrade": "string",
                                "paId": "int",
                                "hasAccess": "boolean",
                                "notifications": "boolean",
                                "timesheetReminders": "boolean",
                                "firstSatWorking": "boolean",
                                "secondSatWorking": "boolean",
                                "isView": "boolean",
                                "view": "boolean",
                            },
                            "description": "string",
                            "startDateTime": "time",
                            "endDateTime": "time",
                            "projectId": "int",
                            "caseNum": "string",
                            "clockedOutsideGeofence": "int",
                            "elapsedTime": "time",
                            "chargeType": "string",
                            "ptoComputed": "string",
                            "caseURL": "string",
                            "status": "string",
                            "cid": "int",
                            "createts": "",
                            "date": "date",
                            "amount": "double",
                            "numberOfDays": "int",
                            "customHours": "string",
                            "paymentDate": "date",
                            "sumOfElapsedTime": "string",
                            "createUserID": "int",
                            "usedTime": "long",
                            "projectModel": {
                                "projectId": "int",
                                "projectName": "string",
                                "projectDesc": "string",
                                "startDate": "date",
                                "endDate": "date",
                                "contactPerson": "int",
                                "account": "int",
                                "accountModel": "",
                                "userModelList": "",
                                "status": "string",
                                "createts": "",
                                "shortCode": "string",
                                "probability": "int",
                                "contactPersonName": "string",
                                "statusValue": "string",
                                "pgroupid": "int",
                                "puid": "string",
                                "billingType": "string",
                                "currencyId": "int",
                                "currencyModel": "",
                                "fixedAmount": "double",
                                "timeSheetOpenToAll": "int",
                                "userModel": "",
                                "projectGroupModel": {
                                    "pgroupid": "int",
                                    "groupName": "string",
                                    "groupDesc": "string",
                                    "cid": "int",
                                },
                                "groupName": "string",
                                "accountName": "string",
                                "pmMail": "string",
                                "locationid": "int",
                                "locationModel": "",
                                "reportMethod": "string",
                                "industry": "string",
                                "cid": "int",
                                "isAdmin": "boolean",
                                "customFieldValueModelList": "",
                                "billinCategoryModels": "",
                                "createuserid": "int",
                                "lastupdateuserid": "int",
                                "admin": "boolean",
                                "projProbability": "int",
                                "projStatus": "string",
                            },
                            "createUserModel": {
                                "userId": "int",
                                "firstName": "string",
                                "lastName": "string",
                                "name": "string",
                                "phone": "long",
                                "email": "string",
                                "status": "string",
                                "shortName": "string",
                                "gender": "string",
                                "jobTitle": "string",
                                "departmentId": "int",
                                "profileId": "int",
                                "profileName": "string",
                                "timezone": "string",
                                "userStartDate": "date",
                                "cellPhone": "string",
                                "empId": "int",
                                "allocation": "double",
                                "userDateFormat": "date",
                                "star": "int",
                                "notes": "string",
                                "im": "string",
                                "createuserid": "int",
                                "cid": "int",
                                "guid": "string",
                                "hasAccess": "boolean",
                                "id": "int"
                            },
                            "source": "string",
                            "projectManager": "string",
                            "timezone": "string",
                            "categoryCode": "string",
                            "notes": "string",
                            "billable": "string",
                            "activity": "string",
                            "invoiceId": "int",
                            "approvalRejectionReason": "string",
                            "timesheetId": "int",
                            "timecardApprovalFlowModel": "",
                            "activityTypeModel": "",
                            "startDateTimeStr": "string",
                            "endDateTimeStr": "string",
                            "modValue": "int",
                            "minutes": "int",
                            "timecardApprovalModel": "",
                            "clockInLongitude": "double",
                            "clockInLatitude": "double",
                            "clockOutLongitude": "double",
                            "clockOutLatitude": "double",
                            "aerialDistance": "double",
                            "projectAreaId": "int",
                            "projectAreaModel": "",
                            "rawStartDateTime": "time",
                            "rawEndDateTime": "time",
                            "worklogId": "int",
                            "id": "int"
                        }
              schema:
                $ref: '#/components/schemas/TimecardsGetByUserIdResponse'
            '*/*':
              schema:
                $ref: '#/components/schemas/Iterable'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Result:
                  value: ''
              schema:
                $ref: '#/components/schemas/TimecardsGetByUserId401Response'
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
          content:
            application/json:
              examples:
                Result:
                  value: ''
              schema:
                $ref: '#/components/schemas/TimecardsGetByUserId409Response'
      deprecated: false
  /api/user/timecards:
    get:
      tags:
        - Timecards
      summary: Retrieve timecard basic details by User ID.
      operationId: Timecards_getByUserId
      security:
        - sec0: []
          sec1: []
      description: >-
        Retrieve timecard basic details based on User ID with Add Time Cards For
        Other permission.
      parameters:
        - description: email of the user.
          name: email
          in: query
          required: false
          schema:
            type: string
        - description: Graphical user ID.
          name: guid
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Result:
                  value: |2-
                        {
                            "createUserID": "int",
                            "startDateTime": "time",
                            "cardId": "int",
                            "description": "string",
                            "createts": "",
                            "id": "int",
                            "endDateTime": "time",
                            "projectId": "int",
                            "elapsedTime": "time",
                            "cid": "int"
                        }
              schema:
                $ref: '#/components/schemas/TimecardsGetByUserId200Response'
            '*/*':
              schema:
                $ref: '#/components/schemas/Iterable'
        '400':
          description: Bad Request
          content:
            application/json:
              examples:
                Result:
                  value: ''
              schema:
                $ref: '#/components/schemas/TimecardsGetByUserId400Response'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Result:
                  value: ''
              schema:
                $ref: '#/components/schemas/TimecardsGetByUserId401Response'
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
          content:
            application/json:
              examples:
                Result:
                  value: ''
              schema:
                $ref: '#/components/schemas/TimecardsGetByUserId409Response'
      deprecated: false
  /timecard/clock/out:
    get:
      tags:
        - Timecards
      summary: Clock Out
      operationId: Timecards_clockOut
      parameters:
        - description: Authorization
          name: Authorization
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Iterable'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /verify/device:
    get:
      tags:
        - Timecards
      summary: Device verification with DeviceUUID.
      operationId: Timecards_verifyDeviceWithDeviceUUID
      parameters:
        - description: deviceUUID
          name: deviceUUID
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Iterable'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /verify/tvc:
    get:
      tags:
        - Timecards
      summary: TVC code for clockin with QR Code using cid.
      operationId: Timecards_getTVCForClockinWithQRCodeUsingCid
      parameters:
        - description: cid
          name: cid
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Iterable'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /verify/user:
    get:
      tags:
        - Timecards
      summary: User verification with userid.
      operationId: Timecards_verifyUserWithUserid
      security:
        - sec1: []
      parameters:
        - name: adpAssociateOID
          in: query
          required: false
          schema:
            type: string
        - name: allocation
          in: query
          required: false
          schema:
            type: number
            format: double
        - name: appleUserIdentifier
          in: query
          required: false
          schema:
            type: string
        - name: assignments
          in: query
          required: false
          schema:
            type: string
        - name: authToken
          in: query
          required: false
          schema:
            type: string
        - name: calWeekPref
          in: query
          required: false
          schema:
            type: string
        - name: calendarId
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: candidateId
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: careerPathwayId
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: cellPhone
          in: query
          required: false
          schema:
            type: string
        - name: cid
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: countryId
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: createts.date
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: createts.day
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: createts.hours
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: createts.minutes
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: createts.month
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: createts.nanos
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: createts.seconds
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: createts.time
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: createts.timezoneOffset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: createts.year
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: createuserid
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: thumbnail
          in: query
          required: false
          schema:
            type: string
        - name: timecardPeriodPref
          in: query
          required: false
          schema:
            type: string
        - name: timezone
          in: query
          required: false
          schema:
            type: string
        - name: tosVersion
          in: query
          required: false
          schema:
            type: string
        - name: userCountry
          in: query
          required: false
          schema:
            type: string
        - name: userDateFormat
          in: query
          required: false
          schema:
            type: string
        - name: userDateOfBirth
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: userDisplayName
          in: query
          required: false
          schema:
            type: string
        - name: userEndDate
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: userName
          in: query
          required: false
          schema:
            type: string
        - name: userNameFormat
          in: query
          required: false
          schema:
            type: string
        - name: userType
          in: query
          required: false
          schema:
            type: string
        - name: view
          in: query
          required: false
          schema:
            type: boolean
        - name: workerType
          in: query
          required: false
          schema:
            type: string
        - name: workingDays
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Iterable'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /register:
    post:
      tags:
        - Timecards
      summary: Register device for ClockIn with AssetModel.
      operationId: Timecards_registerDeviceForClockInWithAssetModel
      security:
        - sec1: []
      parameters:
        - name: accessories
          in: query
          required: false
          schema:
            type: string
        - name: acknowledge
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: assetID
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: assetno
          in: query
          required: false
          schema:
            type: string
        - name: assetstatus
          in: query
          required: false
          schema:
            type: string
        - name: assettype
          in: query
          required: false
          schema:
            type: string
        - name: purchaseDate
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: selfAssign
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: serialno
          in: query
          required: false
          schema:
            type: string
        - name: service
          in: query
          required: false
          schema:
            type: string
        - name: source
          in: query
          required: false
          schema:
            type: string
        - name: specs
          in: query
          required: false
          schema:
            type: string
        - name: supplier
          in: query
          required: false
          schema:
            type: string
        - name: useStatusCode
          in: query
          required: false
          schema:
            type: string
        - name: userDomain
          in: query
          required: false
          schema:
            type: string
        - name: userMail
          in: query
          required: false
          schema:
            type: string
        - name: userPassword
          in: query
          required: false
          schema:
            type: string
        - name: uuid
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Iterable'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /api/timecards/details/{timecardId}:
    get:
      tags:
        - Timecards
      summary: Retrieve timecard details based on timecard ID.
      operationId: Timecards_getDetailsByTimecardId
      security:
        - sec0: []
          sec1: []
      description: >-
        Retrieve timecard details based on timecard ID with Add Time Cards For
        Other permission.
      parameters:
        - description: Timecard ID of the timecard.
          name: timecardId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: flatcustomfields
          in: query
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Result:
                  value: |2-
                        {
                            "cardId": "int",
                            "userModel": {
                                "cid": "int",
                                "empId": "string",
                                "userId": "int",
                                "position": "string",
                                "firstName": "string",
                                "shortName": "string",
                                "lastName": "string",
                                "displayFullName": "string",
                                "userStartDate": "date",
                                "email": "string",
                                "cellPhone": "string",
                                "userName": "string",
                                "userProfileModel": {
                                    "cid": "int",
                                    "profileId": "int",
                                    "profileName": "string",
                                    "profileDescription": "string",
                                    "orgId": "int",
                                    "profileResponsibilities": "",
                                    "profileRequirements": "string",
                                    "salaryBandMin": "double",
                                    "salaryBandMax": "double",
                                    "salaryBandCurrency": "string",
                                    "managerProfileId": "int",
                                    "managerProfileName": "string",
                                    "customFieldValueModelList": "",
                                    "numberofUsers": "int",
                                    "createuserid": "int",
                                    "status": "string",
                                    "careerPathwayModelList": "",
                                    "objectType": "string",
                                    "objectName": "string",
                                    "objectid": "int",
                                },
                                "prefixSalutation": "string",
                                "secondLastName": "string",
                                "middleName": "string",
                                "namePronunciation": "string",
                                "familySuffix": "string",
                                "status": "string",
                                "notes": "string",
                                "ptoannual": "float",
                                "ptobalance": "float",
                                "gender": "string",
                                "phone": "string",
                                "im": "string",
                                "createts": "",
                                "timezone": "string",
                                "practiceId": "int",
                                "profileId": "int",
                                "allocation": "double",
                                "lastupdateuserid":"int",
                                "lastupdatets": "date",
                                "userDateFormat": "date",
                                "hrPortal": "string",
                                "userDisplayName": "string",
                                "star": "int",
                                "timecardPeriodPref": "string",
                                "languagePreference": "string",
                                "tosVersion": "string",
                                "guid": "string",
                                "jobGrade": "string",
                                "paId": "int",
                                "hasAccess": "boolean",
                                "notifications": "boolean",
                                "timesheetReminders": "boolean",
                                "firstSatWorking": "boolean",
                                "secondSatWorking": "boolean",
                                "isView": "boolean",
                                "view": "boolean",
                            },
                            "description": "string",
                            "startDateTime": "time",
                            "endDateTime": "time",
                            "projectId": "int",
                            "caseNum": "string",
                            "clockedOutsideGeofence": "int",
                            "elapsedTime": "time",
                            "chargeType": "string",
                            "ptoComputed": "string",
                            "caseURL": "string",
                            "status": "string",
                            "cid": "int",
                            "createts": "",
                            "date": "date",
                            "amount": "double",
                            "numberOfDays": "int",
                            "customHours": "string",
                            "paymentDate": "date",
                            "sumOfElapsedTime": "string",
                            "createUserID": "int",
                            "usedTime": "long",
                            "projectModel": {
                                "projectId": "int",
                                "projectName": "string",
                                "projectDesc": "string",
                                "startDate": "date",
                                "endDate": "date",
                                "contactPerson": "int",
                                "account": "int",
                                "accountModel": "",
                                "userModelList": "",
                                "status": "string",
                                "createts": "",
                                "shortCode": "string",
                                "probability": "int",
                                "contactPersonName": "string",
                                "statusValue": "string",
                                "pgroupid": "int",
                                "puid": "string",
                                "billingType": "string",
                                "currencyId": "int",
                                "currencyModel": "",
                                "fixedAmount": "double",
                                "timeSheetOpenToAll": "int",
                                "userModel": "",
                                "projectGroupModel": {
                                    "pgroupid": "int",
                                    "groupName": "string",
                                    "groupDesc": "string",
                                    "cid": "int",
                                },
                                "groupName": "string",
                                "accountName": "string",
                                "pmMail": "string",
                                "locationid": "int",
                                "locationModel": "",
                                "reportMethod": "string",
                                "industry": "string",
                                "cid": "int",
                                "isAdmin": "boolean",
                                "customFieldValueModelList": "",
                                "billinCategoryModels": "",
                                "createuserid": "int",
                                "lastupdateuserid": "int",
                                "admin": "boolean",
                                "projProbability": "int",
                                "projStatus": "string",
                            },
                            "createUserModel": {
                                "userId": "int",
                                "firstName": "string",
                                "lastName": "string",
                                "name": "string",
                                "phone": "long",
                                "email": "string",
                                "status": "string",
                                "shortName": "string",
                                "gender": "string",
                                "jobTitle": "string",
                                "departmentId": "int",
                                "profileId": "int",
                                "profileName": "string",
                                "timezone": "string",
                                "userStartDate": "date",
                                "cellPhone": "string",
                                "empId": "int",
                                "allocation": "double",
                                "userDateFormat": "date",
                                "star": "int",
                                "notes": "string",
                                "im": "string",
                                "createuserid": "int",
                                "cid": "int",
                                "guid": "string",
                                "hasAccess": "boolean",
                                "id": "int"
                            },
                            "source": "string",
                            "projectManager": "string",
                            "timezone": "string",
                            "categoryCode": "string",
                            "notes": "string",
                            "billable": "string",
                            "activity": "string",
                            "invoiceId": "int",
                            "approvalRejectionReason": "string",
                            "timesheetId": "int",
                            "timecardApprovalFlowModel": "",
                            "activityTypeModel": "",
                            "startDateTimeStr": "string",
                            "endDateTimeStr": "string",
                            "modValue": "int",
                            "minutes": "int",
                            "timecardApprovalModel": "",
                            "clockInLongitude": "double",
                            "clockInLatitude": "double",
                            "clockOutLongitude": "double",
                            "clockOutLatitude": "double",
                            "aerialDistance": "double",
                            "projectAreaId": "int",
                            "projectAreaModel": "",
                            "rawStartDateTime": "time",
                            "rawEndDateTime": "time",
                            "worklogId": "int",
                            "id": "int"
                        }
              schema:
                $ref: '#/components/schemas/TimecardsGetDetailsByTimecardIdResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "User doesn't have persmission to fetch timecard details."
                    }
              schema:
                $ref: >-
                  #/components/schemas/TimecardsGetDetailsByTimecardId403Response
        '404':
          description: Not Found
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Timecard details not found"
                    }
              schema:
                $ref: >-
                  #/components/schemas/TimecardsGetDetailsByTimecardId404Response
        '409':
          description: Conflict
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Error while fetching timecard details"
                    }
              schema:
                $ref: >-
                  #/components/schemas/TimecardsGetDetailsByTimecardId409Response
      deprecated: false
  /api/timecards:
    get:
      tags:
        - Timesheets
      summary: Retrieve timecards by Timesheet ID.
      operationId: Timesheets_getTimecardsByTimesheetId
      security:
        - sec0: []
          sec1: []
      description: Retrieve a list of timecards.
      parameters:
        - description: Start date of the timesheet.
          name: startDate
          in: query
          required: true
          schema:
            type: string
            format: date
            example: ''
        - description: End date of the timesheet.
          name: endDate
          in: query
          required: true
          schema:
            type: string
            format: date
            example: ''
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "timesheetId": "int",
                        "isClockedIn": "boolean",
                        "data": [
                            {
                                "cardId": "int",
                                "userModel": {
                                    "cid": "int",
                                    "empId": "string",
                                    "userId": "int",
                                    "position": "string",
                                    "firstName": "string",
                                    "shortName": "string",
                                    "lastName": "string",
                                    "displayFullName": "string",
                                    "userStartDate": "Date",
                                    "email": "string",
                                    "cellPhone": "long",
                                },
                                "clockInLongitude":"double",
                                "clockInLatitude": "double",
                                "clockOutLongitude": "double",
                                "clockOutLatitude": "double",
                            }
                        ],
                        "message": "successful"
                    }
              schema:
                $ref: >-
                  #/components/schemas/TimesheetsGetTimecardsByTimesheetIdResponse
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."

                    }
              schema:
                $ref: >-
                  #/components/schemas/TimesheetsGetTimecardsByTimesheetId401Response
        '409':
          description: Conflict
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message":"failure."
                    }
              schema:
                $ref: >-
                  #/components/schemas/TimesheetsGetTimecardsByTimesheetId409Response
      deprecated: false
  /api/timesheet/activitytype/list:
    get:
      tags:
        - Timesheets
      summary: Retrieve list of activity types based on cid.
      operationId: Timesheets_listActivityTypesByCid
      security:
        - sec0: []
          sec1: []
      description: Retrieve list of activity types based on cid.
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": [
                            {
                                "activityId": "int",
                                "activityType": "string",
                                "description": "string",
                                "status": "string",
                                "cid": "int",
                                "createts": "int"
                            }
                        ]
                    }
              schema:
                $ref: '#/components/schemas/TimesheetsListActivityTypesByCidResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."

                    }
              schema:
                $ref: >-
                  #/components/schemas/TimesheetsListActivityTypesByCid401Response
        '409':
          description: Conflict
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message":"failure."
                    }
              schema:
                $ref: >-
                  #/components/schemas/TimesheetsListActivityTypesByCid409Response
      deprecated: false
  /api/timesheet/allocations/list:
    get:
      tags:
        - Timesheets
      summary: Retrieve my active allocations.
      operationId: Timesheets_getActiveAllocations
      security:
        - sec0: []
          sec1: []
      description: Retrieve list of active allocations of user.
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": [
                            {
                                "projectId": "int",
                                "projectName": "string",
                                "projectDesc": "string",
                                "startDate": "date",
                                "endDate": "date",
                                "contactPerson": "long",
                                "account": "long",
                                "status": "string",
                                "createts": "int",
                                "shortCode": "string",
                                "probability": "int",
                                "contactPersonName": "string",
                                "statusValue": "string",
                                "puid": "string",
                                "billingType": "string",
                                "timeSheetOpenToAll": "int",
                                "projectGroupModel": "string",
                                "locationModel": "string",
                                "customFieldValueModelList": "object",
                                "billinCategoryModels": "string"
                            }
                        ]
                    }
              schema:
                $ref: '#/components/schemas/TimesheetsGetActiveAllocationsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
                    }
              schema:
                $ref: '#/components/schemas/TimesheetsGetActiveAllocations401Response'
        '409':
          description: Conflict
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                    "message":"failure"
                    }
              schema:
                $ref: '#/components/schemas/TimesheetsGetActiveAllocations409Response'
      deprecated: false
  /api/timesheet/clockin:
    post:
      tags:
        - Timesheets
      summary: Clock in.
      operationId: Timesheets_clockIn
      security:
        - sec0: []
          sec1: []
      description: Allows to clock in.
      parameters:
        - description: To clockin outside geofence
          name: proceedOutsideGeoFence
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: Description of timecard.
          name: description
          in: query
          schema:
            type: string
        - description: Project ID of project.
          name: projectId
          in: query
          schema:
            type: integer
            format: int32
        - description: Project Manager corresponding user.
          name: projectManager
          in: query
          schema:
            type: string
        - description: Category of timecard. Choose between ["Regular", "Overtime"].
          name: categoryCode
          in: query
          schema:
            type: string
            example: RG
            enum:
              - RG
              - OT
        - description: Notes.
          name: notes
          in: query
          schema:
            type: string
        - description: >-
            Billable or non- billable timecard. Select 'Y' for billable and 'N'
            for non-billable
          name: billable
          in: query
          schema:
            type: string
            example: 'Y'
            enum:
              - 'Y'
              - 'N'
        - description: Activity type of timecard.
          name: activity
          in: query
          schema:
            type: string
        - description: Reason for approval rejection.
          name: approvalRejectionReason
          in: query
          schema:
            type: string
        - description: Longitude value while clocking in.
          name: clockInLongitude
          in: query
          schema:
            type: number
            format: double
        - description: Latitude value while clocking in.
          name: clockInLatitude
          in: query
          schema:
            type: number
            format: double
        - description: Longitude value while clocking out.
          name: clockOutLongitude
          in: query
          schema:
            type: number
            format: double
        - description: Latitude value while clocking out.
          name: clockOutLatitude
          in: query
          schema:
            type: number
            format: double
        - description: Project area ID of project area.
          name: projectAreaId
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '201':
          description: Created
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "timesheetId": "int",
                        "timecardId": "int",
                        "startTime": "time",
                        "message": "string"
                    }
              schema:
                $ref: '#/components/schemas/TimesheetsClockInResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
                    }
              schema:
                $ref: '#/components/schemas/TimesheetsClockIn401Response'
        '403':
          description: Forbidden
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message":"Clock in from mobile app is not allowed."
                    }
              schema:
                $ref: '#/components/schemas/TimesheetsClockIn403Response'
        '409':
          description: Conflict
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "failure."
                    }
              schema:
                $ref: '#/components/schemas/TimesheetsClockIn409Response'
      deprecated: false
  /api/timesheet/clockout:
    post:
      tags:
        - Timesheets
      summary: Clock out.
      operationId: Timesheets_clockOut
      security:
        - sec0: []
          sec1: []
      description: Allows user to clock out.
      parameters:
        - description: clock out outside geofence
          name: proceedOutsideGeoFence
          in: query
          schema:
            type: integer
            format: int32
            default: 0
        - description: Description of timecard.
          name: description
          in: query
          schema:
            type: string
        - description: Project ID of project.
          name: projectId
          in: query
          schema:
            type: integer
            format: int32
        - description: Project Manager corresponding user.
          name: projectManager
          in: query
          schema:
            type: string
        - description: Category of timecard. Choose between ["Regular", "Overtime"].
          name: categoryCode
          in: query
          schema:
            type: string
            example: RG
            enum:
              - RG
              - OT
        - description: Notes.
          name: notes
          in: query
          schema:
            type: string
        - description: >-
            Billable or non- billable timecard. Select 'Y' for billable and 'N'
            for non-billable
          name: billable
          in: query
          schema:
            type: string
            example: 'Y'
            enum:
              - 'Y'
              - 'N'
        - description: Activity type of timecard.
          name: activity
          in: query
          schema:
            type: string
        - description: Reason for approval rejection.
          name: approvalRejectionReason
          in: query
          schema:
            type: string
        - description: Longitude value while clocking in.
          name: clockInLongitude
          in: query
          schema:
            type: number
            format: double
        - description: Latitude value while clocking in.
          name: clockInLatitude
          in: query
          schema:
            type: number
            format: double
        - description: Longitude value while clocking out.
          name: clockOutLongitude
          in: query
          schema:
            type: number
            format: double
        - description: Latitude value while clocking out.
          name: clockOutLatitude
          in: query
          schema:
            type: number
            format: double
        - description: Project area ID of project area.
          name: projectAreaId
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "startTime": "time",
                        "endTime": "time",
                        "message": "string",
                        "elapsedTime": "time"
                    }
              schema:
                $ref: '#/components/schemas/TimesheetsClockOutResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
                    }
              schema:
                $ref: '#/components/schemas/TimesheetsClockOut401Response'
        '409':
          description: Conflict
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message":"failure."
                    }
              schema:
                $ref: '#/components/schemas/TimesheetsClockOut409Response'
      deprecated: false
  /api/timesheet/delete:
    post:
      tags:
        - Timesheets
      summary: Delete a timesheet.
      operationId: Timesheets_deleteByTimesheetId
      security:
        - sec0: []
          sec1: []
      description: Deletes a timesheet by Timesheet ID.
      parameters:
        - description: Timesheet ID of timesheet.
          name: timesheetId
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "message": "successful"
                    }
              schema:
                $ref: '#/components/schemas/TimesheetsDeleteByTimesheetIdResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
                    }
              schema:
                $ref: '#/components/schemas/TimesheetsDeleteByTimesheetId401Response'
        '409':
          description: Conflict
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message":"failure."
                    }
              schema:
                $ref: '#/components/schemas/TimesheetsDeleteByTimesheetId409Response'
      deprecated: false
  /api/timesheet/preferences/list:
    get:
      tags:
        - Timesheets
      summary: Retrieve my timesheet preferences.
      operationId: Timesheets_getPreferencesByCid
      security:
        - sec0: []
          sec1: []
      description: Retrieve list of timesheet preferences based in cid.
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "timesheetStartDay": "int",
                        "billablePrefValue": "string",
                        "futureTcPrefValue": "string",
                        "endDate": "date",
                        "projectAreaPrefValue": "string",
                        "complianceMsg": "string",
                        "activityTypePrefValue": "string",
                        "mobileAppClockInPrefValue": "string",
                        "allocatedProjectPrefValue": "string",
                        "addEditTcPrefValue": "string",
                        "backdatedTcReasonPrefValue": "string",
                        "timesheetPeriod": "string",
                        "categoryPrefValue": "string",
                        "startTimeEndTimeRequired": "string",
                        "workingHrsPerDay": "int",
                        "kioskAppClockInPrefValue": "string",
                        "qrCodeClockInPrefValue": "string",
                        "tcApprovalReasonPrefValue": "string",
                        "clockInOutsideGeofencePreferenceValue": "string",
                        "startDate": "date",
                        "tcRejectionReasonPrefValue": "string"
                    }
              schema:
                $ref: '#/components/schemas/TimesheetsGetPreferencesByCidResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
                    }
              schema:
                $ref: '#/components/schemas/TimesheetsGetPreferencesByCid401Response'
        '409':
          description: Conflict
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message":"failure."
                    }
              schema:
                $ref: '#/components/schemas/TimesheetsGetPreferencesByCid409Response'
      deprecated: false
  /api/timesheet/save:
    post:
      tags:
        - Timesheets
      summary: Create/Update a timesheet.
      operationId: Timesheets_createOrUpdateTimesheet
      security:
        - sec0: []
          sec1: []
      description: Creates a new timesheet and update existing timesheet.
      parameters:
        - description: Timesheet date.
          name: date
          in: query
          required: true
          schema:
            type: string
            format: date
        - description: Project ID of project.
          name: projectId
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - description: Elapsed Time of timecard.
          name: elapsedTime
          in: query
          required: true
          schema:
            type: string
            format: date-time
        - description: Timecard Id of timecard.
          name: cardId
          in: query
          schema:
            type: integer
            format: int32
        - description: Description of timecard.
          name: description
          in: query
          schema:
            type: string
        - description: Clocked in or clocked out outside geofence.
          name: clockedOutsideGeofence
          in: query
          schema:
            type: integer
            format: int32
        - description: Project Manager corresponding user.
          name: projectManager
          in: query
          schema:
            type: string
        - description: Category of timecard. Choose between ["Regular", "Overtime"].
          name: categoryCode
          in: query
          schema:
            type: string
            example: RG
            enum:
              - RG
              - OT
        - description: Notes.
          name: notes
          in: query
          schema:
            type: string
        - description: >-
            Billable or non- billable timecard. Select 'Y' for billable and 'N'
            for non-billable
          name: billable
          in: query
          schema:
            type: string
            example: 'Y'
            enum:
              - 'Y'
              - 'N'
        - description: Activity type of timecard.
          name: activity
          in: query
          schema:
            type: string
        - description: Reason for approval rejection.
          name: approvalRejectionReason
          in: query
          schema:
            type: string
        - description: Longitude value while clocking in.
          name: clockInLongitude
          in: query
          schema:
            type: number
            format: double
        - description: Latitude value while clocking in.
          name: clockInLatitude
          in: query
          schema:
            type: number
            format: double
        - description: Longitude value while clocking out.
          name: clockOutLongitude
          in: query
          schema:
            type: number
            format: double
        - description: Latitude value while clocking out.
          name: clockOutLatitude
          in: query
          schema:
            type: number
            format: double
        - description: Project area ID of project area.
          name: projectAreaId
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '201':
          description: Created
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "timesheetId": "int",
                        "timecardId": "int",
                       "message": "successful"
                    }
              schema:
                $ref: '#/components/schemas/TimesheetsCreateOrUpdateTimesheetResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
                    }
              schema:
                $ref: >-
                  #/components/schemas/TimesheetsCreateOrUpdateTimesheet401Response
        '403':
          description: Forbidden
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Cannot create timecard when timesheet is submitted/approved."
                    }
              schema:
                $ref: >-
                  #/components/schemas/TimesheetsCreateOrUpdateTimesheet403Response
        '409':
          description: Conflict
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "failure"
                    }
              schema:
                $ref: >-
                  #/components/schemas/TimesheetsCreateOrUpdateTimesheet409Response
      deprecated: false
  /api/timesheet/update:
    post:
      tags:
        - Timesheets
      summary: Update timesheet status by Timesheet ID.
      operationId: Timesheets_updateStatusByTimesheetId
      security:
        - sec0: []
          sec1: []
      description: >-
        Update the timesheet status (submit, approve, reject) corresponding to
        supplied Timesheet ID.
      parameters:
        - description: Timesheet ID of the timesheet.
          name: timesheetId
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - description: >-
            Status of timecard. Choose between ["PD-Pending for Approval",
            "PAP-Partially Approved", "AP-Fully Approved","NEW-New
            Timesheet","RJ-Rejected"].
          name: status
          in: query
          required: true
          schema:
            type: string
            example: AP
            enum:
              - PD
              - PAP
              - AP
              - NEW
              - RJ
        - description: Comments
          name: comments
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "message": "successful"
                    }
              schema:
                $ref: >-
                  #/components/schemas/TimesheetsUpdateStatusByTimesheetIdResponse
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                       "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
                    }
              schema:
                $ref: >-
                  #/components/schemas/TimesheetsUpdateStatusByTimesheetId401Response
        '409':
          description: Conflict
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                       "message": "failure"
                    }
              schema:
                $ref: >-
                  #/components/schemas/TimesheetsUpdateStatusByTimesheetId409Response
      deprecated: false
  /api/timesheets:
    get:
      tags:
        - Timesheets
      summary: Retrieve timesheets by User ID.
      operationId: Timesheets_getByUserId
      security:
        - sec0: []
          sec1: []
      description: Retrieve a list of timesheets.
      parameters:
        - description: Start date of the timesheet.
          name: startDate
          in: query
          required: false
          schema:
            type: string
        - description: End date of the timesheet.
          name: endDate
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                OK:
                  value: |2-
                     {
                        "data": [
                            {
                                "timesheetId": "int",
                                "startDate": "Date",
                                "endDate": "Date",
                                "status": "string",
                                "userName": "string",
                                "userId": "int",
                                "email": "string",
                                "empId": "string",
                                "gender": "string",
                                "orgUnit": "string",
                                "departmentId": "int",
                                "locationId": "int",
                                "locationName": "string",
                                "userStatus": "string",
                                "approvalFlowId": "int",
                                "cardsCount": "int",
                                "totalTime": "long",
                                "leaveHours": "long",
                                "holidayHours": "long",
                                "cid": "int",
                            }
                        ],
                        "message": "successful"
                    }
              schema:
                $ref: '#/components/schemas/TimesheetsGetByUserIdResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                       "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
                    }
              schema:
                $ref: '#/components/schemas/TimesheetsGetByUserId401Response'
        '409':
          description: Conflict
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "failure"
                    }
              schema:
                $ref: '#/components/schemas/TimesheetsGetByUserId409Response'
      deprecated: false
  /api/timesheet/approvals/list:
    get:
      tags:
        - Timesheets
      summary: Retrieve timesheet approvals.
      operationId: Timesheets_getApprovalList
      security:
        - sec0: []
          sec1: []
      description: Retrieve list of timesheet approvals on the basis of permission.
      parameters:
        - description: Start date of the timesheet.
          name: startDate
          in: query
          required: true
          schema:
            type: string
        - description: End date of the timesheet.
          name: endDate
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": [
                        {
                          "timesheetId": "int",
                          "startDate": "date",
                          "endDate": "date",
                          "status": "string",
                          "userName": "string",
                          "userId": "int",
                          "email": "string",
                          "empId": "long",
                          "gender": "string",
                          "orgUnit": "string",
                          "departmentId": "int",
                          "locationId": "int",
                          "locationName": "string",
                          "userStatus": "string",
                          "approvalFlowId": "int",
                          "cardsCount": "int",
                          "totalTime": "long",
                          "leaveHours": "long",
                          "holidayHours": "long",
                          "cid": "int"
                        }
                      ],
                      "message": "successful"
                    }
              schema:
                $ref: '#/components/schemas/TimesheetsGetApprovalListResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
                    }
              schema:
                $ref: '#/components/schemas/TimesheetsGetApprovalList401Response'
        '409':
          description: Conflict
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message":"failure"
                    }
              schema:
                $ref: '#/components/schemas/TimesheetsGetApprovalList409Response'
      deprecated: false
  /api/timesheet:
    get:
      tags:
        - Timesheets
      summary: Retrieve a timesheet by timesheet ID.
      operationId: Timesheets_getByTimesheetId
      security:
        - sec0: []
          sec1: []
      description: Retrieve a timesheet by timesheet ID.
      parameters:
        - description: Tmesheet ID of timesheet.
          name: timesheetId
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": {
                            "timesheetId": "int",
                            "tcStartDate": "date",
                            "tcEndDate": "date",
                            "userId": "int",
                            "createUserId": "int",
                            "status": "string",
                            "comments": "string",
                            "approvalFlowId": "int",
                            "cid": "int",
                            "createts": "int",
                            "totalTime": "time",
                            "cardsCount": "int",
                            "ptoComputed": "long",
                            "leaveHours":  "long",
                            "holidayHours": "long",
                            "overtimeHours":  "long",
                            "userViewModel": {
                                "userId": "int",
                                "firstName": "string",
                                "lastName": "string",
                                "name": "string",
                                "phone": "long",
                                "email": "string",
                                "status": "string",
                                "shortName": "string",
                                "gender": "string",
                                "jobTitle": "string",
                                "departmentId": "int",
                                "locationId": "int",
                                "department": "string",
                                "location": "string",
                                "profileId": "int",
                            "timecardApprovalFlowModel": {
                                "flowId": "int",
                                "flowName": "string",
                                "description": "string",
                                "countryId": "string",
                                "locationId": "int",
                                "departmentId": "int",
                                "cid": "int"
                            }
                        }
                    }
              schema:
                $ref: '#/components/schemas/TimesheetsGetByTimesheetIdResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
                    }
              schema:
                $ref: '#/components/schemas/TimesheetsGetByTimesheetId401Response'
        '409':
          description: Conflict
          content:
            application/json:
              examples:
                Result:
                  value: "{\n\t\"message\":\"Error while getting timesheet.\"\n}"
              schema:
                $ref: '#/components/schemas/TimesheetsGetByTimesheetId409Response'
      deprecated: false
  /api/timesheets/details/{timeSheetId}:
    get:
      tags:
        - Timesheets
      summary: Retrieve timesheet details by Timesheet ID.
      operationId: Timesheets_getDetailsByTimesheetId
      security:
        - sec0: []
          sec1: []
      description: Retrieve timesheet details by Timesheet ID.
      parameters:
        - description: Timesheet ID of timesheet.
          name: timeSheetId
          in: path
          schema:
            type: integer
            format: int32
          required: true
        - name: flatcustomfields
          in: query
          required: false
          schema:
            type: boolean
            default: 0
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "data": {
                        "timesheetId": "int",
                        "tcStartDate": "date",
                        "tcEndDate": "date",
                        "userId": "int",
                        "createUserId": "long",
                        "status": "string",
                        "comments": "string",
                        "approvalFlowId": "int",
                        "cid": "int",
                        "createts": "int",
                        "totalTime": "long",
                        "cardsCount": "int",
                        "leaveHours": "long",
                        "holidayHours": "long",
                        "overtimeHours": "long",
                        "timecardApprovalFlowModel": {},
                        "customFieldValueModelList": [],
                        "timesheetAuditModelList": [
                          {
                            "timesheetAuditId": "int",
                            "timesheetId": "int",
                            "comments": "string",
                            "createUserId": "long",
                            "status": "string",
                            "cid": "int",
                            "approvalLevel": "string",
                            "relationType": "string",
                            "createts": "int"
                          },
                          {
                            "timesheetAuditId": "int",
                            "timesheetId": "int",
                            "comments": "string",
                            "createUserId": "long",
                            "status": "string",
                            "cid": "int",
                            "approvalLevel": "int",
                            "relationType": "string",
                            "createts": "int"
                          }
                        ]
                    }
              schema:
                $ref: '#/components/schemas/TimesheetsGetDetailsByTimesheetIdResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
                    }
              schema:
                $ref: >-
                  #/components/schemas/TimesheetsGetDetailsByTimesheetId401Response
        '403':
          description: Forbidden
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message":"User doesn't have persmission to fetch timesheet details."
                    }
              schema:
                $ref: >-
                  #/components/schemas/TimesheetsGetDetailsByTimesheetId403Response
        '404':
          description: Not Found
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Timesheet details not found"
                    }
              schema:
                $ref: >-
                  #/components/schemas/TimesheetsGetDetailsByTimesheetId404Response
        '409':
          description: Conflict
          content:
            application/json:
              examples:
                Result:
                  value: "{\n\t\"message\":\"Error while fetching timesheet details.\"\n}"
              schema:
                $ref: >-
                  #/components/schemas/TimesheetsGetDetailsByTimesheetId409Response
      deprecated: false
  /api/training/content:
    get:
      tags:
        - Trainings
      summary: Retrieve training content by training ID
      operationId: Trainings_getTrainingContentByTrainingId
      security:
        - sec0: []
          sec1: []
      parameters:
        - description: trainingId
          name: trainingId
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Iterable'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /api/training/status/update:
    post:
      tags:
        - Trainings
      summary: Update training status for user
      operationId: Trainings_updateUserStatus
      security:
        - sec0: []
          sec1: []
      parameters:
        - description: Status of the user training.
          name: status
          in: query
          required: true
          schema:
            type: string
        - description: The ID of the user training.
          name: userTrainingId
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": [
                            {
                                "message": "string",
                     }
              schema:
                $ref: '#/components/schemas/TrainingsUpdateUserStatusResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid."
                    }
              schema:
                $ref: '#/components/schemas/TrainingsUpdateUserStatus401Response'
        '409':
          description: Conflict
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Error while updating the user training status."
                    }
              schema:
                $ref: '#/components/schemas/TrainingsUpdateUserStatus409Response'
      deprecated: false
  /api/training/talentlms/sync:
    get:
      tags:
        - Trainings
      summary: Sync with talent LMS
      operationId: Trainings_synchronizeWithTalentLMS
      security:
        - sec0: []
          sec1: []
      parameters:
        - description: redirectUrl
          name: redirectUrl
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": [
                            {
                                 "createdTrainingCount": "int",
                                "existingTrainings": "int",
                                "userTrainingCount": "int",
                                "userTrainingUpdateCount": "int",
                                "statusCode": "string,
                      }
              schema:
                $ref: '#/components/schemas/TrainingsSynchronizeWithTalentLmsResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid."
                    }
              schema:
                $ref: >-
                  #/components/schemas/TrainingsSynchronizeWithTalentLms401Response
        '409':
          description: Conflict
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Failed to sync with TalentLMS."
                    }
              schema:
                $ref: >-
                  #/components/schemas/TrainingsSynchronizeWithTalentLms409Response
      deprecated: false
  /api/trainings:
    get:
      tags:
        - Trainings
      summary: Retrieve trainings by user ID
      operationId: Trainings_getByUserId
      security:
        - sec0: []
          sec1: []
      parameters: []
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Iterable'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /ptopolicies:
    get:
      tags:
        - User PTO Policies
      summary: Retrieve list of PTO policies
      operationId: UserPtoPolicies_listPtoPolicies
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters: []
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": [
                            {
                                "ptoPolicyId": "int",
                                "cid": "int",
                                "effectiveDate": "string",
                                "expirationDate": "string",
                                "policyName": "string",
                                "description": "string",
                                "policycondition": "string",
                                "leaveType": "string",
                                "createUserId": "int",
                                "createts": "int",
                                "accrualThresholdWeeks": "int",
                                "accrualRateAnnual": "int",
                                "accrualRateHours": "string",
                                "icon": "string",
                                "rollOverPercentage": "int",
                                "rollOverMax": "int",
                                "applicability": "int",
                                "accrualtype": "string",
                                "bonus": "string",
                                "bonusMax": "string",
                                "accrualTime": "int",
                                "accrualTimeSpan": "string",
                                "carryoverExpirationUnit": "string",
                                "carryoverExpirationQuantity": "int",
                                "carryoverDate": "string",
                                "leaveYearStart": "string",
                                "leaveYearStartDate": "string",
                                "thresholdUnit": "string",
                                "thresholdQuantity": "int",
                                "isAccrued": "string",
                                "prorated": "int",
                                "paid": "int",
                                "allowRequestBeyondBal": "int",
                                "unit": "string",
                                "lastRun": "string",
                                "nextRunDate": "string",
                                "showInCalendar": "int",
                                "documentUploadMandatory": "int",
                                "showInTimesheet": "int",
                                "customIcon": "string",
                                "accrualRateAnnualUnit": "int",
                                "accrualRateUnit": "int",
                                "allowAccrualRateOverride": "int",
                                "daysDefinition": "string",
                                "ptoPolicyApprovalFlowModel": "object",
                                "ptoPolicyChainModel": {
                                    "chainId": "int",
                                    "chainName": "string",
                                    "chainDesc": "string",
                                    "createts": "int",
                                    "cid": "int",
                                    "hasPtoPolicies": "boolean"
                                },
                                "ptoPolicyChainSeqId": "int",
                                "tenureThreshold": "int",
                                "halfDayAllowed": "int",
                                "customHandler": "string",
                                "decimalDigits": "int",
                                "leastCount": "int",
                                "leaveMaxDays": "int",
                                "maxAccrual": "int",
                                "locationId": "int",
                                "orgUnitId": "int",
                                "lastupdateuserid": "int",
                                "hasAssignment": "boolean",
                                "applicableToEveryone": "boolean",
                                "policyNameUppercase": "string",
                                "allowToOverrideAccrualRate": "boolean"
                            },
                            {
                                "ptoPolicyId": "int",
                                "cid": "int",
                                "effectiveDate": "string",
                                "expirationDate": "string",
                                "policyName": "string",
                                "description": "string",
                                "policycondition": "string",
                                "leaveType": "string",
                                "createUserId": "int",
                                "createts": "int",
                                "accrualThresholdWeeks": "int",
                                "accrualRateAnnual": "int",
                                "accrualRateHours": "string",
                                "icon": "string",
                                "rollOverPercentage": "int",
                                "rollOverMax": "int",
                                "applicability": "int",
                                "accrualtype": "string",
                                "bonus": "string",
                                "bonusMax": "string",
                                "accrualTime": "int",
                                "accrualTimeSpan": "string",
                                "carryoverExpirationUnit": "string",
                                "carryoverExpirationQuantity": "int",
                                "carryoverDate": "string",
                                "leaveYearStart": "string",
                                "leaveYearStartDate": "string",
                                "thresholdUnit": "string",
                                "thresholdQuantity": "int",
                                "isAccrued": "string",
                                "prorated": "int",
                                "paid": "int",
                                "allowRequestBeyondBal": "int",
                                "unit": "string",
                                "lastRun": "string",
                                "nextRunDate": "string",
                                "showInCalendar": "int",
                                "documentUploadMandatory": "int",
                                "showInTimesheet": "int",
                                "customIcon": "string",
                                "accrualRateAnnualUnit": "int",
                                "accrualRateUnit": "int",
                                "allowAccrualRateOverride": "int",
                                "daysDefinition": "string",
                                "ptoPolicyApprovalFlowModel": "object",
                                "ptoPolicyChainModel": {
                                    "chainId": "int",
                                    "chainName": "string",
                                    "chainDesc": "string",
                                    "createts": "int",
                                    "cid": "int",
                                    "hasPtoPolicies": "boolean"
                                },
                                "ptoPolicyChainSeqId": "int",
                                "tenureThreshold": "int",
                                "halfDayAllowed": "int",
                                "customHandler": "string",
                                "decimalDigits": "int",
                                "leastCount": "int",
                                "leaveMaxDays": "int",
                                "maxAccrual": "int",
                                "locationId": "int",
                                "orgUnitId": "int",
                                "lastupdateuserid": "int",
                                "hasAssignment": "boolean",
                                "applicableToEveryone": "boolean",
                                "policyNameUppercase": "string",
                                "allowToOverrideAccrualRate": "boolean"
                            }
                        ]
                    }
              schema:
                $ref: '#/components/schemas/UserPtoPoliciesListPtoPoliciesResponse'
        '409':
          description: '409'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "message": "failure"
                    }
              schema:
                $ref: '#/components/schemas/UserPtoPoliciesListPtoPolicies409Response'
      deprecated: false
  /v3/user/pto:
    get:
      tags:
        - User PTO Policies
      summary: Retrieve your PTO Policies
      operationId: UserPtoPolicies_getPolicies
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters: []
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "code": 1,
                        "data": [
                            {
                                "userPtoId": "int",
                                "userId": "int",
                                "ptoPolicyModel": {
                                    "ptoPolicyId": "int",
                                    "cid": "int",
                                    "effectiveDate": "string",
                                    "expirationDate": "string",
                                    "policyName": "string",
                                    "description": "string",
                                    "policycondition": "string",
                                    "leaveType": "string",
                                    "createUserId": "int",
                                    "createts": "int",
                                    "accrualThresholdWeeks": "int",
                                    "accrualRateAnnual": "int",
                                    "accrualRateHours": "string",
                                    "icon": "string",
                                    "rollOverPercentage": "int",
                                    "rollOverMax": "int",
                                    "applicability": "int",
                                    "accrualtype": "string",
                                    "bonus": "string",
                                    "bonusMax": "string",
                                    "accrualTime": "int",
                                    "accrualTimeSpan": "string",
                                    "carryoverExpirationUnit": "string",
                                    "carryoverExpirationQuantity": "int",
                                    "carryoverDate": "string",
                                    "leaveYearStart": "string",
                                    "leaveYearStartDate": "string",
                                    "thresholdUnit": "string",
                                    "thresholdQuantity": "int",
                                    "isAccrued": "string",
                                    "prorated": "int",
                                    "paid": "int",
                                    "allowRequestBeyondBal": "int",
                                    "unit": "string",
                                    "lastRun": "string",
                                    "nextRunDate": "string",
                                    "showInCalendar": "int",
                                    "documentUploadMandatory": "int",
                                    "showInTimesheet": "int",
                                    "customIcon": "string",
                                    "accrualRateAnnualUnit": "int",
                                    "accrualRateUnit": "int",
                                    "allowAccrualRateOverride": "int",
                                    "daysDefinition": "string",
                                    "ptoPolicyApprovalFlowModel": "object",
                                    "ptoPolicyChainModel": {
                                        "chainId": "int",
                                        "chainName": "string",
                                        "chainDesc": "string",
                                        "createts": "int",
                                        "cid": "int",
                                        "hasPtoPolicies": "boolean"
                                    },
                                    "ptoPolicyChainSeqId": "int",
                                    "tenureThreshold": "int",
                                    "halfDayAllowed": "int",
                                    "customHandler": "string",
                                    "decimalDigits": "int",
                                    "leastCount": "string",
                                    "leaveMaxDays": "int",
                                    "maxAccrual": "int",
                                    "locationId": "int",
                                    "orgUnitId": "int",
                                    "lastupdateuserid": "int",
                                    "hasAssignment": "boolean",
                                    "applicableToEveryone": "boolean",
                                    "policyNameUppercase": "string",
                                    "allowToOverrideAccrualRate": "boolean"
                                },
                                "balance": "int",
                                "balanceDate": "string",
                                "calculationNotes": "string",
                                "cid": "int",
                                "createts": "int",
                                "lastUpdatets": "int",
                                "status": "string",
                                "credit": "int",
                                "debit": "int",
                                "carryover": "string",
                                "carryoverExpDate": "string",
                                "noteKey": "string",
                                "prevUserPtoId": "int",
                                "createUserModel": "object",
                                "leaveModelList": "object",
                                "userPTOHours": {
                                    "ptoPolicyID": "int",
                                    "used": "0.0",
                                    "planned": "0.0",
                                    "pending": "0.0",
                                    "credit": "string",
                                    "usedCarryoverHours": "int",
                                    "usedCarryoverDays": "int"
                                },
                                "farthestLeaveDate": "string"
                            }
                        ],
                        "message": "successful"
                    }
              schema:
                $ref: '#/components/schemas/UserPtoPoliciesGetPoliciesResponse'
        '401':
          description: '401'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
                    }
              schema:
                $ref: '#/components/schemas/UserPtoPoliciesGetPolicies401Response'
      deprecated: false
  /api/v3/userworkflow/assign/{workflowId}:
    post:
      tags:
        - UserWorkflow
      summary: Assign Workflow to User
      operationId: UserWorkflow_assignWorkflowToUser
      security:
        - sec0: []
          sec1: []
      description: This page will help you get started with Assign Workflow to User.
      parameters:
        - description: The ID of the workflow.
          name: workflowId
          in: path
          schema:
            type: integer
            format: int32
          required: true
        - description: The ID of Workflow Assignee.
          name: assigneeUserId
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - description: The ID of Workflow Coordinator.
          name: coordinatorUserId
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - description: Comment of the workflow.
          name: comment
          in: query
          schema:
            type: string
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: '{"message": "Workflow assigned successfully"}'
              schema:
                $ref: '#/components/schemas/UserWorkflowAssignWorkflowToUserResponse'
        '401':
          description: '401'
          content:
            application/json:
              examples:
                Result:
                  value: '{"message": "Please fill the correct details"}'
              schema:
                $ref: >-
                  #/components/schemas/UserWorkflowAssignWorkflowToUser401Response
        '403':
          description: '403'
          content:
            application/json:
              examples:
                Result:
                  value: >-
                    {"message": "User doesn't have permission to assign
                    workflow."}
              schema:
                $ref: >-
                  #/components/schemas/UserWorkflowAssignWorkflowToUser403Response
        '404':
          description: '404'
          content:
            application/json:
              examples:
                Result:
                  value: '{"message": "Not Found"}'
              schema:
                $ref: >-
                  #/components/schemas/UserWorkflowAssignWorkflowToUser404Response
        '409':
          description: '409'
          content:
            application/json:
              examples:
                Result:
                  value: '{"message": "Error while assigning workflow"}'
              schema:
                $ref: >-
                  #/components/schemas/UserWorkflowAssignWorkflowToUser409Response
      deprecated: false
  /api/v3/userworkflows:
    get:
      tags:
        - Workflows
      summary: Get workflows by user id.
      operationId: Workflows_getUserWorkflows
      security:
        - sec0: []
          sec1: []
      parameters:
        - description: Authorization
          name: Authorization
          in: header
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Iterable'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /api/v3/userworkflows/{userworkflowid}:
    get:
      tags:
        - Workflows
      summary: Get tasks by userworkflowid.
      operationId: Workflows_listTasksByUserworkflowId
      security:
        - sec0: []
          sec1: []
      parameters:
        - description: Authorization
          name: Authorization
          in: header
          required: false
          schema:
            type: string
        - description: userworkflowid
          name: userworkflowid
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Iterable'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /api/v3/task/add:
    post:
      tags:
        - Workflows
      summary: Create a new task.
      operationId: Workflows_createNewTask
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters: []
      requestBody:
        description: task object to create a new task
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/arrayTaskModel'
              type: object
              required:
                - title
                - assignedUserId
              properties:
                title:
                  description: Title of the task
                  type: string
                description:
                  description: Description of the task
                  type: string
                assignedUserId:
                  description: The ID of user to whom the task is to be assigned.
                  type: integer
                  format: int32
                dueDate:
                  description: Due date of the task
                  type: string
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Iterable'
                type: object
                properties:
                  message:
                    type: string
                    example: Task created successfully.
                  TaskModel:
                    type: object
                    properties:
                      title:
                        type: string
                        example: string
                      description:
                        type: string
                        example: string
                      taskId:
                        type: string
                        example: int
                      taskUID:
                        type: string
                        example: int
                      statusCode:
                        type: string
                        example: string
                      assignedUserId:
                        type: string
                        example: int
                      createUserId:
                        type: string
                        example: int
                      projectId:
                        type: string
                        example: int
                      userModel:
                        type: string
                        example: object
                      lastEdit:
                        type: string
                        example: string
                      createts:
                        type: string
                        example: date
                      launchts:
                        type: string
                        example: timestamp
                      dueDate:
                        type: string
                        example: date
                      availabilityDate:
                        type: string
                        example: date
                      phasename:
                        type: string
                        example: string
                      type:
                        type: string
                        example: string
                      appraisalId:
                        type: string
                        example: int
                      assgnUserModel:
                        type: string
                        example: object
                      userGroupModel:
                        type: string
                        example: object
                      recruitId:
                        type: string
                        example: int
                      taskAvailableStatus:
                        type: string
                        example: string
                      userId:
                        type: string
                        example: int
                      systemTask:
                        type: string
                        example: int
                      userWorkflowModel:
                        type: string
                        example: object
                      workflowStepId:
                        type: string
                        example: int
                      workflowStepModel:
                        type: string
                        example: object
                      transitionName:
                        type: string
                        example: string
                      assgnCandModel:
                        type: string
                        example: object
                      releventAttachmentModel:
                        type: string
                        example: object
                      releventUserWorkflowModel:
                        type: string
                        example: object
                      releventAppraisalModel:
                        type: string
                        example: object
                      ci:
                        type: string
                        example: int
                      relatedDynamicFormAssignmentModel:
                        type: string
                        example: object
                      releventUserTrainingModel:
                        type: string
                        example: object
                      workflowParameterAssignmentModel:
                        type: string
                        example: object
              examples:
                Result:
                  value: |-
                    {

                        "message": "Task created successfully.",
                        "TaskModel": {
                            "taskId": "int",
                            "taskUID": "int",
                            "title": "string",
                            "description": "string",
                            "statusCode": "string",
                            "assignedUserId": "int",
                            "createUserId": "int",
                            "projectId": "int",
                            "userModel": "object",
                            "lastEdit": "string",
                            "createts": "date",
                            "launchts": "timestamp",
                            "dueDate": "date",
                            "availabilityDate": "date",
                            "phasename": "string",
                            "type": "string",
                            "appraisalId": "int",
                            "assgnUserModel": "object",
                            "userGroupModel": "object",
                            "recruitId": "int",
                            "taskAvailableStatus": "string",
                            "userId": "int",
                            "systemTask": "int",
                            "userWorkflowModel": "object",
                            "workflowStepId": "int",
                            "workflowStepModel": "object",
                            "transitionName": "string",
                            "assgnCandModel": "object",
                            "releventAttachmentModel": "object",
                            "releventUserWorkflowModel": "object",
                            "releventAppraisalModel": "object",
                            "ci": "int",
                            "relatedDynamicFormAssignmentModel": "object",
                            "releventUserTrainingModel": "object",
                            "workflowParameterAssignmentModel": "object"
                        }
                    }
        '201':
          description: Created
        '400':
          description: '400'
          content:
            text/plain:
              examples:
                Result:
                  value: "{\n\t\"message : \"Please verify the data parameters' format.\"\n}"
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid."
                    }
              schema:
                $ref: '#/components/schemas/WorkflowsCreateNewTaskResponse'
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: '409'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                     "message" :"Error while creating task."
                    }
              schema:
                $ref: '#/components/schemas/WorkflowsCreateNewTask409Response'
      deprecated: false
  /api/v3/task/update/status:
    post:
      tags:
        - Workflows
      summary: Update status workflow task.
      operationId: Workflows_updateStatusTask
      security:
        - sec0: []
      parameters:
        - description: Authorization
          name: Authorization
          in: header
          required: false
          schema:
            type: string
        - name: appraisalId
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: assignedUserId
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: ci
          in: query
          required: false
          schema:
            type: boolean
        - name: cid
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: createUserId
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: createts
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: description
          in: query
          required: false
          schema:
            type: string
        - name: dueDate
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: lastEdit
          in: query
          required: false
          schema:
            type: string
        - name: launchts.date
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: launchts.day
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: launchts.hours
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: launchts.minutes
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: launchts.month
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: launchts.nanos
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: launchts.seconds
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: launchts.time
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: launchts.timezoneOffset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: launchts.year
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: phasename
          in: query
          required: false
          schema:
            type: string
        - name: projectId
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: recruitId
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: statusCode
          in: query
          required: false
          schema:
            type: string
        - name: systemTask
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: taskId
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: taskUID
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: title
          in: query
          required: false
          schema:
            type: string
        - name: transitionName
          in: query
          required: false
          schema:
            type: string
        - name: type
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Iterable'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /api/v3/task/{taskid}:
    get:
      tags:
        - Workflows
      summary: Get the details of a workflow task by task id.
      operationId: Workflows_getTaskDetailsByTaskId
      security:
        - sec0: []
          sec1: []
      parameters:
        - description: Authorization
          name: Authorization
          in: header
          required: false
          schema:
            type: string
        - description: taskid
          name: taskid
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Iterable'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /api/v3/tasks:
    get:
      tags:
        - Workflows
      summary: Get tasks by user id.
      operationId: Workflows_getTasksByUserId
      security:
        - sec0: []
          sec1: []
      parameters: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Iterable'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /api/workflows:
    get:
      tags:
        - Workflows
      summary: Get workflows.
      operationId: Workflows_getWorkflows
      security:
        - sec0: []
          sec1: []
      parameters:
        - description: status
          name: status
          in: query
          required: false
          schema:
            type: string
            default: A
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Iterable'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /api/test:
    get:
      tags:
        - Test
      summary: Retrieve test
      operationId: Test_getTest
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters:
        - description: >-
            The status of test - Choose between ["A-Active", "ARCHV-Archive",
            "DRAFT-Draft"].
          name: status
          in: query
          required: true
          schema:
            type: string
            default: A
            enum:
              - A
              - ARCHV
              - DRAFT
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Result:
                  value: "{\n            \"dynamicFormId\": \"int\",\n            \"name\": \"string\",\n            \"dynaFormCode\": \"string\",\n            \"description\": \"string\",\n            \"createUserModel\": {\n                \"cid\": \"int\",\n                \"empId\": \"string\",\n                \"userId\": \"int\",\n                \"position\": \"string\",\n                \"firstName\": \"string\",\n                \"shortName\": \"string\",\n                \"lastName\": \"string\",\n                \"workerTypeModel\": {\n                    \"wtid\": \"int\",\n                    \"cid\": \"int\",\n                    \"code\": \"string\",\n                    \"description\": \"string\",\n                    \"createuserid\": \"int\"\n                },\n                \"displayFullName\": \"string\",\n                \"userStartDate\": \"date\",\n                \"email\": \"string\",\n                \"cellPhone\": \"string\",\n                \"userName\": \"string\",\n                \"departmentModel\": {\n                    \"departmentId\": \"int\",\n                    \"name\": \"string\",\n                    \"description\": \"string\",\n                    \"deptHead\": \"int\",\n                    \"cid\": \"int\",\n                    \"departmentCode\": \"string\",\n                    \"departmentLabel\": \"string\",\n                    \"parentDepartmentId\": \"int\",\n                    \"parentDepartmentName\": \"string\",\n                    \"deptHeadName\": \"string\",\n                    \"noOfEmployees\": \"int\",\n                    \"userModel\": \"object\"\n                },\n                \"prefixSalutation\": \"string\",\n                \"secondLastName\": \"string\",\n                \"middleName\": \"string\",\n                \"familySuffix\": \"string\",\n                \"status\": \"string\",\n                \"notes\": \"string\",\n                \"ptoannual\": \"float\",\n                \"ptobalance\": \"float\",\n                \"gender\": \"string\",\n                \"userDateOfBirth\": \"date\",\n                \"phone\": \"string\",\n                \"im\": \"string\",\n                \"createts\": \"timestamp\",\n                \"timezone\": \"string\",\n                \"imageName\": \"string\",\n                \"thumbnail\": \"string\",\n                \"profileId\": \"int\",\n                \"allocation\": \"double\",\n                \"countryId\": \"int\",\n                \"lastupdateuserid\": \"int\",\n                \"lastupdatets\": \"int\",\n                \"userDateFormat\": \"string\",\n                \"hrPortal\": \"string\",\n                \"userDisplayName\": \"string\",\n                \"star\": \"int\",\n                \"timecardPeriodPref\": \"string\",\n                \"languagePreference\": \"string\",\n                \"tosVersion\": \"string\",\n                \"guid\": \"string\",\n                \"jobGrade\": \"string\",\n                \"paId\": \"int\",\n                \"hasAccess\": \"boolean\",\n                \"notifications\": \"boolean\",\n                \"timesheetReminders\": \"boolean\",\n                \"firstSatWorking\": \"boolean\",\n                \"secondSatWorking\": \"boolean\",\n                \"locationModel\": {\n                    \"locationId\": \"int\",\n                    \"locationName\": \"string\",\n                    \"cid\": \"int\",\n                    \"locationDescription\": \"string\",\n                    \"locationType\": \"string\",\n                    \"address\": \"string\",\n                    \"lattitude\": \"string\",\n                    \"longitude\": \"string\",\n                    \"locationUID\": \"string\",\n                    \"status\": \"string\",\n                    \"workingDays\": \"string\",\n                    \"locationCode\": \"string\",\n                    \"locationLabel\": \"string\",\n                    \"parentLocationId\": \"int\",\n                    \"createuserid\": \"int\",\n                    \"parentLocationName\": \"string\",\n                    \"noOfEmployees\": \"int\",\n                    \"addressModelList\": [\n                        {\n                            \"addressId\": \"int\",\n                            \"addressLine1\": \"string\",\n                            \"addressLine2\": \"string\",\n                            \"city\": \"string\",\n                            \"currentStatus\": \"string\",\n                            \"state\": \"string\",\n                            \"zipCode\": \"string\",\n                            \"createts\": \"timestamp\",\n                            \"cid\": \"int\",\n                            \"userId\": \"int\",\n                            \"candidateId\": \"int\",\n                            \"addressType\": \"string\",\n                            \"locationId\": \"int\",\n                            \"contactId\": \"int\",\n                            \"countryId\": \"int\",\n                            \"countryModel\": {\n                                \"countryId\": \"int\",\n                                \"countryName\": \"string\",\n                                \"iso2\": \"string\",\n                            },\n                            \"status\": \"string\",\n                            \"verificationStatus\": \"string\",\n                            \"custId\": \"int\",\n                            \"mapUrl\": \"string\",\n                            \"createUserId\": \"int\",\n                            \"extAppUID\": \"string\",\n                            \"countryCode\": \"string\",\n                            \"countryid\": \"int\"\n                        }\n                    ]\n                },\n                \"isView\": \"boolean\",\n                \"view\": \"boolean\"\n            },\n            \"formVisibility\": \"boolean\",\n            \"createts\": \"int\",\n            \"updatets\": \"int\",\n            \"cid\": \"int\",\n            \"availability\": \"string\",\n            \"status\": \"string\",\n            \"anonymous\": \"int\",\n            \"userGroupId\": \"int\",\n            \"secSequence\": \"string\",\n            \"sectionModelList\": [\n                {\n                    \"sectionId\": \"int\",\n                    \"name\": \"string\",\n                    \"cid\": \"int\",\n                    \"hidden\": \"boolean\",\n                    \"dynamicFormId\": \"int\",\n                    \"sequence\": \"int\",\n                    \"createUserId\": \"int\",\n                    \"description\": \"string\",\n                    \"dynamicFormItemModelList\": [\n                        {\n                            \"dynamicFormItemId\": \"int\",\n                            \"name\": \"string\",\n                            \"sectionId\": \"int\",\n                            \"createUserId\": \"int\",\n                            \"cid\": \"int\",\n                            \"fieldType\": \"string\",\n                            \"optionValues\": \"string\",\n                            \"helpText\": \"string\",\n                            \"createts\": \"int\",\n                            \"dynamicFormId\": \"int\",\n                            \"dynaFormFlow\": \"string\",\n                            \"mappedEntityItem\": \"string\",\n                            \"fieldTypeItem\": \"string\",\n                            \"mandatory\": \"int\",\n                            \"sequence\": \"int\",\n                            \"weightage\": \"double\",\n                            \"expectedValue\": \"string\",\n                            \"correctFeedback\": \"string\",\n                            \"incorrectFeedback\": \"string\",\n                            \"attachmentModel\": \"object\",\n                            \"prefill\": \"string\",\n                            \"dynaFormItemOptionModelList\": [\n                                {\n                                    \"optionId\": \"int\",\n                                    \"dynaFormItemId\": \"int\",\n                                    \"optionValue\": \"string\",\n                                    \"cid\": \"int\",\n                                    \"createts\": \"int\",\n                                    \"isCorrect\": \"boolean\"\n                                }\n                            ],\n                            \"customListModel\": \"object\",\n                            \"optionRandom\": \"boolean\",\n                            \"numberingStyle\": \"string\"\n                        }\n                      ],\n                    \"assignee\": \"string\",\n                    \"userGroupModel\": \"object\",\n                    \"reporting\": \"string\",\n                    \"departmentId\": \"int\",\n                    \"locationId\": \"int\",\n                    \"attachmentModel\": \"object\",\n                    \"assigneeModel\": \"object\",\n                    \"sample\": \"boolean\",\n                    \"totalweightage\": \"double\"\n                }\n            ],\n            \"thresholdScore\": \"double\",\n            \"formType\": \"string\",\n            \"dataFlow\": \"string\",\n            \"embedCode\": \"string\",\n            \"showCorrect\": \"boolean\",\n            \"listed\": \"int\",\n            \"publicSummary\": \"boolean\",\n            \"presentationStyle\": \"string\",\n            \"timeLimit\": \"int\",\n            \"attemptLimit\": \"string\",\n            \"layout\": \"string\",\n            \"helpTextStyle\": \"string\",\n            \"questionRandom\": \"boolean\",\n            \"specificQuestionRandom\": \"int\",\n            \"sectionVisibility\": \"boolean\",\n            \"mappedEntity\": \"string\",\n            \"automation\": \"boolean\"\n      }\n  ],\n  \"message\": \"successful\"\n}\n        \n\t\t"
              schema:
                $ref: '#/components/schemas/TestGetTestResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
                    }
              schema:
                $ref: '#/components/schemas/TestGetTest401Response'
        '409':
          description: Conflict
          content:
            application/json:
              examples:
                Result:
                  value: "{\n\t\"message\": \"failure\"\n}"
              schema:
                $ref: '#/components/schemas/TestGetTest409Response'
      deprecated: false
  /api/shifts:
    get:
      tags:
        - Shifts
      summary: Get Shifts
      operationId: Shifts_listShiftsUsingGET
      security:
        - sec0: []
          sec1: []
      parameters:
        - description: projectId
          name: projectId
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: startDate
          name: startDate
          in: query
          required: false
          schema:
            type: string
        - description: endDate
          name: endDate
          in: query
          required: false
          schema:
            type: string
        - description: status
          name: status
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": [
                            {
                                "shiftitemId": "int",
                                "createuserid": "int",
                                "cid": "int",
                                "createts": "long",
                                "shiftStartTime": "Time",
                                "shiftEndTime": "Time",
                                "shiftDate": "date",
                                "userprojectid":  "int",
                                "dayofweek":  "int",
                                "shiftId":  "int",
                                "status": "string",
                                "approvalFlowModel": {},
                                "userProjectModel": {
                                    "userProjectId":  "int",
                                    "userReportModel": {},
                                    "projectModel": {
                                        "projectId":  "int",
                                        "projectName": "string",
                                        "projectDesc": "string",
                                        "startDate": "date",
                                        "endDate":  "date",
                                        "contactPerson":  "int",
                                        "account":  "int",
                                        "status": "string",
                                        "createts":  "long",
                                        "shortCode": "string",
                                        "probability":  "int",
                                        "contactPersonName":  "string",
                                        "statusValue":  "string",
                                        "puid": "string",
                                        "billingType": "string",
                                        "timeSheetOpenToAll": "int"
                                    },
                                    "roleCode":  "int",
                                    "isAdmin":  "int",
                                    "allocation":  "double",
                                    "billableAllocation":  "double",
                                    "billRate":  "int",
                                    "billPeriod": "string",
                                    "billCurrencyCode": "string",
                                    "overtimeCoefficient":  "double",
                                    "cid":  "int",
                                    "startDate": "date",
                                    "endDate":  "date",
                                    "createuserid":  "int",
                                    "status": "string",
                                    "approvalFlowModel": {},
                                    "userModel": {
                                        "cid":  "int",
                                        "empId": "string",
                                        "userId":  "int",
                                        "position": "string",
                                        "firstName": "string",
                                        "shortName": "string",
                                        "lastName": "string",
                                        "workerTypeModel": {
                                            "wtid":  "int",
                                            "code": "string",
                                            "description": "string"
                                        },
                                        "displayFullName": "string",
                                        "userStartDate": "date",
                                        "email": "string",
                                        "cellPhone": "string",
                                        "userName": "string",
                                        "userProfileModel": {
                                            "profileId":  "int",
                                            "profileName": "string",
                                            "profileDescription": "string",
                                            "orgId":  "int",
                                            "profileResponsibilities": "string",
                                            "profileRequirements": "string",
                                            "salaryBandMin":  "double",
                                            "salaryBandMax":  "double",
                                            "salaryBandCurrency": "string",
                                            "managerProfileId":  "int",
                                            "customFieldValueModelList": null
                                        },
                                        "departmentModel": {
                                            "departmentId":  "int",
                                            "name": "string",
                                            "description": "string",
                                            "deptHead":  "int",
                                            "cid":  "int",
                                            "departmentCode": "string",
                                            "departmentLabel": "string",
                                            "parentDepartmentId":  "int",
                                            "parentDepartmentName":  "string",
                                            "deptHeadName":  "string",
                                            "noOfEmployees":  "int"
                                        },
                                        "prefixSalutation": "string",
                                        "secondLastName": "string",
                                        "middleName": "string",
                                        "namePronunciation": "string",
                                        "familySuffix": "string",
                                        "status": "string",
                                        "gender": "string",
                                        "phone": "string",
                                        "im": "string" "",
                                        "createts":  "long",
                                        "allocation":  "int",
                                        "countryId":  "int",
                                        "userDisplayName": "string",
                                        "star": "int",
                                        "languagePreference": "string",
                                        "userNameFormat": "string",
                                        "jobGrade": "string",
                                        "locationModel": {
                                            "locationId": "int",
                                            "locationName": "string",
                                            "locationDescription": "string",
                                            "locationType": "string",
                                            "address": "string",
                                            "lattitude": "string",
                                            "longitude": "string",
                                            "locationUID": "string",
                                            "status": "string",
                                            "workingDays": "string",
                                            "locationCode": "string",
                                            "locationLabel": "string",
                                            "parentLocationId":"int"
                                        },
                                        "calendarModel": {},
                                        "isView":"boolean" 
                                    }
                                }
                            },
                    }
              schema:
                $ref: '#/components/schemas/Iterable'
        '201':
          description: Created
        '401':
          description: Unauthorized
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "You don't have permission to perform this operation."
                    }
              schema:
                $ref: '#/components/schemas/ShiftsListShiftsUsingGetResponse'
        '403':
          description: Forbidden
        '404':
          description: Not Found
        '409':
          description: Conflict
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "Something Went Wrong!"
                    }
              schema:
                $ref: '#/components/schemas/ShiftsListShiftsUsingGet409Response'
      deprecated: false
  /api/shifts/save:
    post:
      tags:
        - Shifts
      summary: Save Shift
      operationId: Shifts_saveShift
      security:
        - sec0: []
          sec1: []
      parameters: []
      requestBody:
        description: shiftBody
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShiftsSaveShiftRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Iterable'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /resume:
    post:
      tags:
        - Candidates
      summary: Create a candidate from pdf resume
      operationId: Candidates_extractPdfResume
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CandidatesExtractPdfResumeRequest'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "message": "success"
                    }
              schema:
                $ref: '#/components/schemas/CandidatesExtractPdfResumeResponse'
        '401':
          description: '401'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "message": "unauthorized"
                    }
              schema:
                $ref: '#/components/schemas/CandidatesExtractPdfResume401Response'
      deprecated: false
  /rm/api/feedback:
    get:
      tags:
        - Feedback
      summary: Retrieve feedback
      operationId: Feedback_listFeedback
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters:
        - description: >-
            Type of feedback to retrieve. 

            Choose between ["all", "my", "team"]. all - All Feedback, my - My
            Feedback, team - Team's feedback
          name: type
          in: query
          required: true
          schema:
            type: string
            enum:
              - all
              - my
              - team
            default: all
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |
                    {
                        "message": "Feedback retrieved successfully.",
                        "feedbackList": [
                            {
                                "feedbackid": "int",
                                "feedback": "string",
                                "feedbackDesc": "string",
                                "assignedUserModel": {
                                    "cid": "int",
                                    "empId": "int",
                                    "userId": "int",
                                    "position": "string",
                                    "firstName": "string",
                                    "shortName": "string",
                                    "lastName": "string",
                                    "displayFullName": "string",
                                    "userStartDate": "date",
                                    "email": "string",
                                    "cellPhone": "string",
                                    "userName": "string",
                                    "departmentModel": {
                                        "departmentId": "int",
                                        "name": "string",
                                        "description": "string",
                                        "deptHead": "int",
                                        "cid": "int",
                                        "departmentCode": "string",
                                        "departmentLabel": "string",
                                        "parentDepartmentId": "int",
                                        "parentDepartmentName": "string",
                                        "deptHeadName": "string",
                                        "noOfEmployees": "int",
                                        "userModel": {
                                            "userId": "int",
                                            "firstName": "string",
                                            "lastName": "string",
                                            "name": "string",
                                            "phone": "string",
                                            "email": "string",
                                            "status": "string",
                                            "shortName": "string",
                                            "gender": "string",
                                            "jobTitle": "string",
                                            "departmentId": "int",
                                            "locationId": "int",
                                            "department": "string",
                                            "location": "string",
                                            "profileId": "int",
                                            "timezone": "string",
                                            "userStartDate": "date",
                                            "userEndDate": "date",
                                            "cellPhone": "string",
                                            "empId": "string",
                                            "allocation": "double",
                                            "userDateFormat": "string",
                                            "star": "int",
                                            "notes": "string",
                                            "im": "string",
                                            "createuserid": "int",
                                            "countryId": "int",
                                            "cid": "int",
                                            "guid": "string",
                                            "hasAccess": "int",
                                            "userNameFormat": "string",
                                            "id": "int"
                                        }
                                    },
                                    "prefixSalutation": "string",
                                    "secondLastName": "string",
                                    "middleName": "string",
                                    "familySuffix": "string",
                                    "status": "string",
                                    "ptoannual": "double",
                                    "ptobalance": "double",
                                    "workerType": "string",
                                    "gender": "string",
                                    "userDateOfBirth": "date",
                                    "phone": "string",
                                    "im": "string",
                                    "createts": "int",
                                    "timezone": "string",
                                    "adpAssociateOID": "string",
                                    "practiceId": "int",
                                    "imageName": "string",
                                    "thumbnail": "string",
                                    "profileId": "int",
                                    "allocation": "double",
                                    "countryId": "int",
                                    "lastupdateuserid": "int",
                                    "lastupdatets": "date",
                                    "userDateFormat": "date",
                                    "hrPortal": "string",
                                    "userDisplayName": "string",
                                    "star": "int",
                                    "timecardPeriodPref": "string",
                                    "tosVersion": "string",
                                    "guid": "string",
                                    "jobGrade": "string",
                                    "paId": "int",
                                    "appMenuId": "int",
                                    "calendarId": "int",
                                    "workingDays": "string",
                                    "hasAccess": "boolean",
                                    "notifications": "boolean",
                                    "locationModel": {
                                        "locationId": "int",
                                        "locationName": "string",
                                        "cid": "int",
                                        "locationDescription": "string",
                                        "locationType": "string",
                                        "address": "string",
                                        "lattitude": "string",
                                        "longitude": "string",
                                        "locationUID": "string",
                                        "status": "string",
                                        "workingDays": "string",
                                        "locationCode": "string",
                                        "locationLabel": "string",
                                        "parentLocationId": "int",
                                        "createuserid": "int",
                                        "addressModelList": [
                                            {
                                                "addressId": "int",
                                                "addressLine1": "string",
                                                "addressLine2": "string",
                                                "city": "string",
                                                "currentStatus": "status",
                                                "state": "string",
                                                "zipCode": "string",
                                                "createts": "int",
                                                "cid": "int",
                                                "userId": "int",
                                                "candidateId": "int",
                                                "addressType": "string",
                                                "locationId": "int",
                                                "contactId": "int",
                                                "countryId": "int",
                                                "countryModel": {
                                                    "countryId": "int",
                                                    "countryName": "string",
                                                    "iso2": "string"
                                                },
                                                "status": "string",
                                                "verificationStatus": "string",
                                                "custId": "int",
                                                "mapUrl": "string",
                                                "createUserId": "int",
                                                "extAppUID": "string",
                                                "countryCode": "string",
                                                "countryid": "int"
                                            }
                                        ]
                                    },
                                    "practiceModel": {
                                        "practiceId": "int",
                                        "name": "string",
                                        "description": "string",
                                        "practiceHead": "string",
                                        "userModel": "object",
                                        "createts": "object",
                                        "cid": "int"
                                    },
                                    "azureObjectIdentifier": "string",
                                    "isView": "boolean",
                                    "view": "boolean"
                                },
                                "cid": "int",
                                "createts": "int",
                                "pfSkillList": "object",
                                "createUserModel": "object",
                                "assessment": "int",
                                "status": "string",
                                "recipientStatus": "string",
                                "objectType": "string",
                                "sentimentCode": "string",
                                "sentimentScore": "string",
                                "pfBadgeList": "object",
                                "userName": "string",
                                "customFieldModelList": "object",
                                "badgeNames": "object",
                                "attachmentModelList": "object",
                                "wallName": "string",
                                "skillString": "string",
                                "reactionType": "string",
                                "id": "int"
                            }
                        ]
                    }
              schema:
                $ref: '#/components/schemas/FeedbackListFeedbackResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "message": "Error while retrieving feedback."
                    }
              schema:
                $ref: '#/components/schemas/FeedbackListFeedback400Response'
        '401':
          description: '401'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid."
                    }
              schema:
                $ref: '#/components/schemas/FeedbackListFeedback401Response'
        '409':
          description: '409'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "message": "Error while retrieving feedback."
                    }
              schema:
                $ref: '#/components/schemas/FeedbackListFeedback409Response'
      deprecated: false
  /getgoal:
    get:
      tags:
        - Goals
      summary: Retrieve Goal
      operationId: Goals_getGoal
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters:
        - description: ID to get a goal.
          name: goalid
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - description: The ID of the user who is reviewee.
          name: reviewUserId
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "goalId": "int",
                        "summary": "string",
                        "additive": "int",
                        "visibleToDirectReports": "int",
                        "freezeGoal": "int",
                        "isForward": "boolean",
                        "companyGoal": "int",
                        "elapsedTimeRatio": "float",
                        "completionRatio": "float",
                        "progressRatio": "float",
                        "description": "string",
                        "typecode": "string",
                        "status": "string",
                        "state": "string",
                        "predictiveIndex": "string",
                        "objectiveId": "int",
                        "cid": "int",
                        "disposition": "string",
                        "units": "string",
                        "assignedUserModel": {
                            "cid": "int",
                            "empId": "string",
                            "userId": "int",
                            "position": "string",
                            "firstName": "string",
                            "shortName": "string",
                            "lastName": "string",
                            "displayFullName": "string",
                            "userStartdate": "date",
                            "userEnddate": "date",
                            "email": "string",
                            "cellPhone": "string",
                            "userName": "string",
                            "userProfileModel": {
                                "cid": "int",
                                "profileId": "int",
                                "profileName": "string",
                                "profileDescription": "string",
                                "orgId": "int",
                                "profileResponsibilities": "string",
                                "profileRequirements": "string",
                                "salaryBandMin": "double",
                                "salaryBandMax": "double",
                                "salaryBandCurrency": "double",
                                "managerProfileId": "int",
                                "managerProfileName": "string",
                                "customFieldValueModelList": "object",
                                "numberofUsers": "int",
                                "createuserid": "int",
                                "status": "string",
                                "careerPathwayModelList": "object",
                                "objectType": "string",
                                "objectName": "string",
                                "objectid": "int"
                            },
                            "departmentModel": {
                                "departmentId": "int",
                                "name": "string",
                                "description": "string",
                                "deptHead": "int",
                                "cid": "int",
                                "departmentCode": "string",
                                "departmentLabel": "string",
                                "parentDepartmentId": "int",
                                "parentDepartmentName": "string",
                                "deptHeadName": "string",
                                "noOfEmployees": "int",
                                "userModel": {
                                    "userId": "int",
                                    "firstName": "string",
                                    "lastName": "string",
                                    "name": "string",
                                    "phone": "string",
                                    "email": "string",
                                    "status": "string",
                                    "shortName": "string",
                                    "thumbnail": "string",
                                    "gender": "string",
                                    "jobTitle": "string",
                                    "departmentId": "int",
                                    "locationId": "int",
                                    "department": "string",
                                    "location": "string",
                                    "profileId": "int",
                                    "timezone": "string",
                                    "userStartdate": "date",
                                    "userEnddate": "date",
                                    "cellPhone": "string",
                                    "empId": "string",
                                    "userdateOfBirth": "date",
                                    "allocation": "double",
                                    "userdateFormat": "string",
                                    "star": "int",
                                    "imageName": "string",
                                    "notes": "string",
                                    "im": "string",
                                    "createuserid": "int",
                                    "countryId": "int",
                                    "cid": "int",
                                    "guid": "string",
                                    "hasAccess": "boolean",
                                    "displayName": "string",
                                    "id": "int"
                                }
                            },
                            "prefixSalutation": "string",
                            "secondLastName": "string",
                            "middleName": "string",
                            "namePronunciation": "string",
                            "familySuffix": "string",
                            "status": "string",
                            "ptoannual": "float",
                            "ptobalance": "float",
                            "gender": "string",
                            "phone": "string",
                            "im": "string",
                            "createts": 1610359663000,
                            "timezone": "string",
                            "practiceId": "int",
                            "imageName": "string",
                            "thumbnail": "string",
                            "profileId": "int",
                            "allocation": "double",
                            "countryId": "int",
                            "lastupdateuserid": "int",
                            "lastupdatets": "date",
                            "workingDaysSchedule": "string",
                            "userdateFormat": "string",
                            "hrPortal": "string",
                            "userDisplayName": "string",
                            "star": "int",
                            "timecardPeriodPref": "string",
                            "languagePreference": "string",
                            "tosVersion": "string",
                            "guid": "string",
                            "jobGrade": "string",
                            "paId": "int",
                            "workingDays": "string",
                            "hasAccess": "boolean",
                            "notifications": "boolean",
                            "locationModel": {
                                "locationId": "int",
                                "locationName": "string",
                                "cid": "int",
                                "locationDescription": "string",
                                "locationType": "string",
                                "address": "string",
                                "lattitude": "string",
                                "longitude": "string",
                                "locationUID": "string",
                                "status": "string",
                                "workingDays": "string",
                                "locationCode": "string",
                                "locationLabel": "string",
                                "parentLocationId": "int",
                                "createuserid": "int",
                                "addressModelList": [
                                    {
                                        "addressId": "int",
                                        "addressLine1": "string",
                                        "addressLine2": "string",
                                        "city": "string",
                                        "currentStatus": "string",
                                        "state": "string",
                                        "zipCode": "string",
                                        "createts": 1538742819000,
                                        "cid": "int",
                                        "userId": "int",
                                        "candidateId": "int",
                                        "addressType": "string",
                                        "locationId": "int",
                                        "contactId": "int",
                                        "countryId": "int",
                                        "countryModel": {
                                            "countryId": "int",
                                            "countryName": "string",
                                            "iso2": "string"
                                        },
                                        "status": "string",
                                        "verificationStatus": "string",
                                        "custId": "int",
                                        "mapUrl": "string",
                                        "createUserId": "int",
                                        "extAppUID": "string",
                                        "countryid": "int"
                                    }
                                ]
                            },
                            "isView": "boolean",
                            "view": "boolean"
                        },
                        "reviewerUserModel": {
                            "cid": "int",
                            "empId": "string",
                            "userId": "int",
                            "position": "string",
                            "firstName": "string",
                            "shortName": "string",
                            "lastName": "string",
                            "displayFullName": "string",
                            "userStartdate": "date",
                            "email": "string",
                            "cellPhone": "string",
                            "userName": "string",
                            "departmentModel": {
                                "departmentId": "int",
                                "name": "string",
                                "description": "string",
                                "deptHead": "int",
                                "cid": "int",
                                "departmentCode": "string",
                                "departmentLabel": "string",
                                "parentDepartmentId": "int",
                                "parentDepartmentName": "string",
                                "deptHeadName": "string",
                                "noOfEmployees": "int",
                                "userModel": {
                                    "userId": "int",
                                    "firstName": "string",
                                    "lastName": "string",
                                    "name": "string",
                                    "phone": "string",
                                    "email": "string",
                                    "status": "string",
                                    "shortName": "string",
                                    "thumbnail": "string",
                                    "gender": "string",
                                    "jobTitle": "string",
                                    "departmentId": "int",
                                    "locationId": "int",
                                    "department": "string",
                                    "location": "string",
                                    "profileId": "int",
                                    "profileName": "string",
                                    "timezone": "string",
                                    "userStartdate": "date",
                                    "userEnddate": "date",
                                    "cellPhone": "string",
                                    "empId": "string",
                                    "userdateOfBirth": "date",
                                    "allocation": "double",
                                    "userdateFormat": "string",
                                    "star": "int",
                                    "imageName": "string",
                                    "notes": "string",
                                    "im": "string",
                                    "createuserid": "int",
                                    "countryId": "int",
                                    "cid": "int",
                                    "guid": "string",
                                    "hasAccess": "boolean",
                                    "displayName": "string",
                                    "id": "int"
                                }
                            },
                            "prefixSalutation": "string",
                            "middleName": "string",
                            "familySuffix": "string",
                            "status": "string",
                            "ptoannual": "float",
                            "ptobalance": "float",
                            "workerType": "string",
                            "gender": "string",
                            "phone": "string",
                            "im": "string",
                            "createts": 1521203555000,
                            "timezone": "string",
                            "profileId": "int",
                            "allocation": "double",
                            "lastupdateuserid": "int",
                            "lastupdatets": "date",
                            "userdateFormat": "string",
                            "hrPortal": "string",
                            "userDisplayName": "string",
                            "star": "int",
                            "timecardPeriodPref": "string",
                            "tosVersion": "string",
                            "guid": "string",
                            "jobGrade": "string",
                            "calendarId": "int",
                            "workingDays": "string",
                            "hasAccess": "boolean",
                            "notifications": "boolean",
                            "locationModel": {
                                "locationId": "int",
                                "locationName": "string",
                                "cid": "int",
                                "locationDescription": "string",
                                "locationType": "string",
                                "address": "string",
                                "lattitude": "string",
                                "longitude": "string",
                                "locationUID": "string",
                                "status": "string",
                                "workingDays": "string",
                                "locationCode": "string",
                                "locationLabel": "string",
                                "parentLocationId": "int",
                                "createuserid": "int",
                                "addressModelList": [
                                    {
                                        "addressId": "int",
                                        "addressLine1": "string",
                                        "addressLine2": "string",
                                        "city": "string",
                                        "currentStatus": "string",
                                        "state": "string",
                                        "zipCode": "string",
                                        "createts": 1538742819000,
                                        "cid": "int",
                                        "userId": "int",
                                        "candidateId": "int",
                                        "addressType": "string",
                                        "locationId": "int",
                                        "contactId": "int",
                                        "countryId": "int",
                                        "countryModel": {
                                            "countryId": "int",
                                            "countryName": "string",
                                            "iso2": "string"
                                        },
                                        "status": "string",
                                        "verificationStatus": "string",
                                        "custId": "int",
                                        "mapUrl": "string",
                                        "createUserId": "int",
                                        "extAppUID": "string",
                                        "countryid": "int"
                                    }
                                ]
                            },
                            "isView": "boolean",
                            "view": "boolean"
                        },
                        "goalCollaborationModel": [
                            {
                                "collabid": "int",
                                "goalid": "int",
                                "userid": "int",
                                "extuserid": "int",
                                "cid": "int",
                                "userModel": {
                                    "cid": "int",
                                    "empId": "string",
                                    "userId": "int",
                                    "firstName": "string",
                                    "shortName": "string",
                                    "lastName": "string",
                                    "displayFullName": "string",
                                    "email": "string",
                                    "userName": "string",
                                    "userProfileModel": {
                                        "cid": "int",
                                        "profileId": "int",
                                        "profileName": "string",
                                        "profileDescription": "string",
                                        "orgId": "int",
                                        "profileResponsibilities": "string",
                                        "profileRequirements": "string",
                                        "salaryBandMin": "double",
                                        "salaryBandMax": "double",
                                        "salaryBandCurrency": "string",
                                        "managerProfileId": "int",
                                        "managerProfileName": "string",
                                        "customFieldValueModelList": "List",
                                        "numberofUsers": "int",
                                        "createuserid": "int",
                                        "status": "string",
                                        "careerPathwayModelList": "List",
                                        "objectType": "string",
                                        "objectName": "string",
                                        "objectid": "int"
                                    },
                                    "status": "string",
                                    "ptoannual": "float",
                                    "ptobalance": "float",
                                    "gender": "string",
                                    "phone": "string",
                                    "createts": 1648276171000,
                                    "timezone": "string",
                                    "profileId": "int",
                                    "allocation": "double",
                                    "lastupdatets": "date",
                                    "userdateFormat": "string",
                                    "hrPortal": "string",
                                    "star": "int",
                                    "timecardPeriodPref": "string",
                                    "languagePreference": "string",
                                    "guid": "string",
                                    "hasAccess": "boolean",
                                    "notifications": "boolean",
                                    "isView": "boolean",
                                    "view": "boolean"
                                },
                                "extuserModel": "object"
                            }
                        ],
                        "crediteatets": "int",
                        "commentCrediteatets": "int",
                        "commentDescription": "string",
                        "uname": "string",
                        "hasGoalApprovalPermission": "boolean",
                        "begindate": "date",
                        "goalWeightage": "float",
                        "createuserid": "int",
                        "createts": 1661358176000,
                        "projectModel": {
                            "projectId": "int",
                            "projectName": "string",
                            "projectDesc": "string",
                            "startdate": "date",
                            "enddate": "date",
                            "contactPerson": "int",
                            "account": "int",
                            "accountModel": "object",
                            "userModelList": "List",
                            "status": "string",
                            "createts": 1623395718000,
                            "shortCode": "string",
                            "probability": "int",
                            "contactPersonName": "string",
                            "statusValue": "string",
                            "pgroupid": "int",
                            "puid": "string",
                            "billingType": "string",
                            "timeSheetOpenToAll": "int",
                            "userModel": {
                                "userId": "int",
                                "firstName": "string",
                                "lastName": "string",
                                "name": "string",
                                "phone": "string",
                                "email": "string",
                                "status": "string",
                                "shortName": "string",
                                "thumbnail": "string",
                                "gender": "string",
                                "jobTitle": "string",
                                "departmentId": "int",
                                "locationId": "int",
                                "department": "string",
                                "location": "string",
                                "profileId": "int",
                                "profileName": "string",
                                "timezone": "string",
                                "userStartdate": "date",
                                "userEnddate": "date",
                                "cellPhone": "string",
                                "empId": "string",
                                "userdateOfBirth": "date",
                                "allocation": "double",
                                "userdateFormat": "string",
                                "star": "int",
                                "imageName": "string",
                                "notes": "string",
                                "im": "string",
                                "createuserid": "int",
                                "countryId": "int",
                                "cid": "int",
                                "guid": "string",
                                "hasAccess": "boolean",
                                "displayName": "string",
                                "id": "int"
                            },
                            "projectGroupModel": "object",
                            "groupName": "string",
                            "accountName": "string",
                            "pmMail": "string",
                            "locationid": "int",
                            "reportMethod": "string",
                            "industry": "string",
                            "cid": "int",
                            "isAdmin": "boolean",
                            "createuserid": "int",
                            "lastupdateuserid": "int",
                            "admin": "boolean",
                            "projStatus": "string",
                            "projProbability": "int"
                        },
                        "goalTypeModel": {
                            "goalTypeId": "int",
                            "goalTypeName": "string",
                            "goalTypeDescription": "string",
                            "assessmentModel": {
                                "scoretemplateid": "int",
                                "cid": "int",
                                "scoreMin": "float",
                                "scoreMax": "float",
                                "scoreMaxValidation": "float",
                                "scoringInstructions": "string",
                                "scoreName": "string",
                                "allowFractional": "int",
                                "rangeModelList": [
                                    {
                                        "strangeid": "int",
                                        "scoreTempId": "int",
                                        "rangeMin": "float",
                                        "rangeMax": "float",
                                        "interpretation": "string",
                                        "colorCode": "string",
                                        "cid": "int",
                                        "description": "string"
                                    },
                                    {
                                        "strangeid": "int",
                                        "scoreTempId": "int",
                                        "rangeMin": "float",
                                        "rangeMax": "float",
                                        "interpretation": "string",
                                        "colorCode": "string",
                                        "cid": "int",
                                        "description": "string"
                                    }
                                ],
                                "visualizationType": "string",
                                "status": "string"
                            },
                            "createts": 1593877398000,
                            "cid": "int"
                        },
                        "parentGoalId": "int",
                        "id": "int",
                        "createUserId": "int",
                        "lastUpdateUserId": "int",
                        "projectid": "int",
                        "begindate": "date",
                        "targetdate": "date",
                        "initialvalue": "double",
                        "currentvalue": "double",
                        "goalvalue": "double"
                    }
              schema:
                $ref: '#/components/schemas/GoalsGetGoalResponse'
        '401':
          description: '401'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid."
                    }
              schema:
                $ref: '#/components/schemas/GoalsGetGoal401Response'
        '404':
          description: '404'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "message": "Goal not found."
                    }
              schema:
                $ref: '#/components/schemas/GoalsGetGoal404Response'
      deprecated: false
  /goal:
    get:
      tags:
        - Goals
      summary: Retrieve all goals
      operationId: Goals_getAllGoals
      security:
        - sec0: []
          sec1: []
      parameters: []
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Iterable'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
    post:
      tags:
        - Goals
      summary: Create new goal
      operationId: Goals_createNewGoal
      security:
        - sec0: []
          sec1: []
      parameters:
        - name: additive
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: begindate
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: cid
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: commentCrediteatets
          in: query
          required: false
          schema:
            type: string
        - name: commentDescription
          in: query
          required: false
          schema:
            type: string
        - name: companyGoal
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: completionRatio
          in: query
          required: false
          schema:
            type: number
            format: float
        - name: createUserId
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: createts.date
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: createts.day
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: createts.hours
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: createts.minutes
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: createts.month
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: createts.nanos
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: createts.seconds
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: createts.time
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: createts.timezoneOffset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: createts.year
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: crediteatets
          in: query
          required: false
          schema:
            type: string
            format: date-time
        - name: currentValue
          in: query
          required: false
          schema:
            type: number
            format: float
        - name: description
          in: query
          required: false
          schema:
            type: string
        - name: disposition
          in: query
          required: false
          schema:
            type: string
        - name: elapsedTimeRatio
          in: query
          required: false
          schema:
            type: number
            format: float
        - name: goalId
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: goalValue
          in: query
          required: false
          schema:
            type: number
            format: float
        - name: goalWeightage
          in: query
          required: false
          schema:
            type: number
            format: float
        - name: hasGoalApprovalPermission
          in: query
          required: false
          schema:
            type: boolean
        - name: id
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: initialvalue
          in: query
          required: false
          schema:
            type: number
            format: float
        - name: isForward
          in: query
          required: false
          schema:
            type: boolean
        - name: lastUpdateUserId
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: objectiveId
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: parentGoalId
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: progressRatio
          in: query
          required: false
          schema:
            type: number
            format: float
        - name: projectid
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - description: reviewUserId
          name: reviewUserId
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
        - name: state
          in: query
          required: false
          schema:
            type: string
        - name: status
          in: query
          required: false
          schema:
            type: string
        - name: summary
          in: query
          required: false
          schema:
            type: string
        - name: targetDate
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: typecode
          in: query
          required: false
          schema:
            type: string
        - name: uname
          in: query
          required: false
          schema:
            type: string
        - name: units
          in: query
          required: false
          schema:
            type: string
        - name: visibleToDirectReports
          in: query
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Iterable'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /deletegoal:
    delete:
      tags:
        - Goals
      summary: Delete Goal
      operationId: Goals_deleteGoal
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters:
        - description: GoalId to delete a goal
          name: goalId
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "message": "Success"
                    }
              schema:
                $ref: '#/components/schemas/GoalsDeleteGoalResponse'
        '401':
          description: '401'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid."
                    }
              schema:
                $ref: '#/components/schemas/GoalsDeleteGoal401Response'
        '403':
          description: '403'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "message": "You do not have the permission to delete this goal."
                    }
              schema:
                $ref: '#/components/schemas/GoalsDeleteGoal403Response'
        '404':
          description: '404'
          content:
            text/plain:
              examples:
                Result:
                  value: |-
                    {
                        "message": "Goal not found."
                    }
              schema:
                $ref: '#/components/schemas/GoalsDeleteGoal404Response'
      deprecated: false
  /invoice:
    get:
      tags:
        - Invoice
      summary: Retrieve invoices by Project Id
      operationId: Invoice_getByProjectId
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters:
        - description: The ID of the project
          name: projectId
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "data": [
                            {
                                "invoiceId": "int",
                                "amount": "int",
                                "description": "string",
                                "cid": "int",
                                "projectid": "int",
                                "projectModel": {
                                    "projectId": "int",
                                    "projectName": "string",
                                    "projectDesc": "string",
                                    "startDate": "string",
                                    "endDate": "string",
                                    "contactPerson": "int",
                                    "account": "int",
                                    "accountModel": "object",
                                    "userModelList": "object",
                                    "status": "string",
                                    "createts": "int",
                                    "shortCode": "string",
                                    "probability": "int",
                                    "contactPersonName": "string",
                                    "statusValue": "string",
                                    "pgroupid": "int",
                                    "puid": "int",
                                    "billingType": "string",
                                    "timeSheetOpenToAll": "int",
                                    "userModel": {
                                        "userId": "int",
                                        "firstName": "string",
                                        "lastName": "string",
                                        "name": "string",
                                        "phone": "string",
                                        "email": "string",
                                        "status": "string",
                                        "shortName": "string",
                                        "thumbnail": "string",
                                        "gender": "string",
                                        "jobTitle": "string",
                                        "departmentId": "int",
                                        "department": "string",
                                        "profileId": "int",
                                        "profileName": "string",
                                        "timezone": "string",
                                        "userStartDate": "2022-08-29",
                                        "cellPhone": "string",
                                        "empId": "string",
                                        "allocation": "int",
                                        "userDateFormat": "string",
                                        "star": "int",
                                        "imageName": "string",
                                        "notes": "string",
                                        "im": "int",
                                        "createuserid": "int",
                                        "cid": "int",
                                        "guid": "string",
                                        "hasAccess": "int",
                                        "id": "int"
                                    },
                                    "projectGroupModel": "object",
                                    "groupName": "string",
                                    "accountName": "string",
                                    "pmMail": "string",
                                    "locationid": "int",
                                    "reportMethod": "string",
                                    "industry": "string",
                                    "cid": "int",
                                    "isAdmin": "boolean",
                                    "createuserid": "int",
                                    "lastupdateuserid": "int",
                                    "projStatus": "string",
                                    "projProbability": "int",
                                    "admin": "boolean"
                                },
                                "status": "string",
                                "dueDate": "string",
                                "userModel": {
                                    "cid": "int",
                                    "empId": "string",
                                    "userId": "int",
                                    "position": "string",
                                    "firstName": "string",
                                    "shortName": "string",
                                    "lastName": "string",
                                    "displayFullName": "string",
                                    "userStartDate": "string",
                                    "email": "string",
                                    "cellPhone": "string",
                                    "userName": "string",
                                    "userProfileModel": {
                                        "cid": "int",
                                        "profileId": "int",
                                        "profileName": "string",
                                        "profileDescription": "string",
                                        "orgId": "int",
                                        "profileResponsibilities": "string",
                                        "profileRequirements": "string",
                                        "salaryBandMin": "int",
                                        "salaryBandMax": "int",
                                        "salaryBandCurrency": "string",
                                        "managerProfileId": "int",
                                        "managerProfileName": "int",
                                        "customFieldValueModelList": "object",
                                        "numberofUsers": "int",
                                        "createuserid": "int",
                                        "status": "string",
                                        "careerPathwayModelList": "object",
                                        "objectType": "string",
                                        "objectName": "string",
                                        "objectid": "int"
                                    },
                                    "departmentModel": {
                                        "departmentId": "int",
                                        "name": "string",
                                        "description": "string",
                                        "deptHead": "int",
                                        "cid": "int",
                                        "departmentCode": "string",
                                        "departmentLabel": "string",
                                        "parentDepartmentId": "int",
                                        "parentDepartmentName": "string",
                                        "deptHeadName": "string",
                                        "noOfEmployees": "int",
                                        "userModel": "object"
                                    },
                                    "prefixSalutation": "string",
                                    "secondLastName": "string",
                                    "middleName": "string",
                                    "namePronunciation": "string",
                                    "familySuffix": "string",
                                    "status": "string",
                                    "ptoannual": "int",
                                    "ptobalance": "int",
                                    "gender": "string",
                                    "phone": "string",
                                    "im": "int",
                                    "createts": "int",
                                    "timezone": "string",
                                    "practiceId": "int",
                                    "imageName": "string",
                                    "thumbnail": "string",
                                    "profileId": "int",
                                    "allocation": "int",
                                    "lastupdateuserid": "int",
                                    "lastupdatets": "string",
                                    "userDateFormat": "string",
                                    "hrPortal": "string",
                                    "userDisplayName": "string",
                                    "star": "int",
                                    "timecardPeriodPref": "string",
                                    "languagePreference": "string",
                                    "tosVersion": "string",
                                    "guid": "string",
                                    "jobGrade": "string",
                                    "hasAccess": "boolean",
                                    "notifications": "boolean",
                                    "isView": "boolean",
                                    "view": "boolean"
                                },
                                "invoiceLineItemModelList": "object",
                                "beginDate": "string",
                                "endDate": "string",
                                "invoiceDate": "string",
                                "currencyCode": "string",
                                "createts": "int",
                                "summary": "string",
                                "accountid": "int"
                            }
                        ],
                        "message": "successful"
                    }
              schema:
                $ref: '#/components/schemas/InvoiceGetByProjectIdResponse'
        '401':
          description: '401'
          content:
            text/plain:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/InvoiceGetByProjectId401Response'
      deprecated: false
  /objective:
    get:
      tags:
        - Objective
      summary: Retrieve objectives
      operationId: Objective_getByUserIdOrSpecificObjectiveById
      security:
        - sec0: []
          sec1: []
      description: Retrieve objectives by user ID or specific objective by objective ID
      parameters:
        - description: ID of Objective
          name: objectiveId
          in: query
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "code": 1,
                      "data": [
                        {
                          "objectiveId": "int",
                          "objective": "string",
                          "type": "string",
                          "objectiveType": "string",
                          "description": "string",
                          "beginDate": "string",
                          "targetDate": "string",
                          "leadUserId": "int",
                          "weightage": "int",
                          "status": "string",
                          "objectiveProgress": "int",
                          "cid": "int",
                          "userViewModel": {
                            "userId": "int",
                            "firstName": "string",
                            "lastName": "string",
                            "name": "string",
                            "phone": "string",
                            "email": "string",
                            "status": "string",
                            "shortName": "string",
                            "thumbnail": "string",
                            "gender": "string",
                            "jobTitle": "string",
                            "departmentId": "int",
                            "department": "string",
                            "profileId": "int",
                            "profileName": "string",
                            "timezone": "string",
                            "userStartDate": "string",
                            "cellPhone": "string",
                            "empId": "string",
                            "userDateOfBirth": "string",
                            "allocation": "int",
                            "userDateFormat": "string",
                            "star": "int",
                            "imageName": "string",
                            "notes": "string",
                            "im": "string",
                            "createuserid": "int",
                            "cid": "int",
                            "guid": "string",
                            "hasAccess":"int",
                            "id": "int"
                          },
                          "keyResultModelList": [
                            {
                              "goalId": "int",
                              "summary": "string",
                              "additive": "int",
                              "visibleToDirectReports": "int",
                              "freezeGoal": "int",
                              "isForward": "boolean",
                              "companyGoal": "string",
                              "elapsedTimeRatio": "string",
                              "completionRatio": "string",
                              "progressRatio": "string",
                              "description": "string",
                              "typecode": "string",
                              "goalsLeastStep": "int",
                              "status": "string",
                              "state": "string",
                              "predictiveIndex": "string",
                              "objectiveId": "int",
                              "cid": "int",
                              "disposition": "string",
                              "units": "string",
                              "assignedUserModel": {
                                "cid": "int",
                                "empId": "string",
                                "userId": "int",
                                "position": "string",
                                "firstName": "string",
                                "shortName": "string",
                                "lastName": "string",
                                "displayFullName": "string",
                                "userStartDate": "string",
                                "userEndDate": "string",
                                "email": "string",
                                "cellPhone": "string",
                                "userName": "string",
                                "userProfileModel": {
                                  "cid": "int",
                                  "profileId": "int",
                                  "profileName": "string",
                                  "profileDescription": "string",
                                  "orgId": "int",
                                  "profileResponsibilities": "string",
                                  "profileRequirements": "string",
                                  "salaryBandMin": "int",
                                  "salaryBandMax": "int",
                                  "salaryBandCurrency": "",
                                  "managerProfileId": "int",
                                  "managerProfileName": "string",
                                  "customFieldValueModelList": "object",
                                  "numberofUsers": "int",
                                  "createuserid": "int",
                                  "status": "string",
                                  "careerPathwayModelList": "string",
                                  "objectType": "string",
                                  "objectName": "string",
                                  "objectid": "int"
                                },
                                "departmentModel": {
                                  "departmentId": "int",
                                  "name": "string",
                                  "description": "string",
                                  "deptHead": "int",
                                  "cid": "int",
                                  "departmentCode": "int",
                                  "departmentLabel": "string",
                                  "parentDepartmentId": "int",
                                  "parentDepartmentName": "string",
                                  "deptHeadName": "string",
                                  "noOfEmployees": "int",
                                  "userModel": {
                                    "userId": "int",
                                    "firstName": "string",
                                    "lastName": "string",
                                    "name": "string",
                                    "phone": "string",
                                    "email": "string",
                                    "status": "string",
                                    "shortName": "string",
                                    "thumbnail": "string",
                                    "gender": "string",
                                    "jobTitle": "string",
                                    "departmentId": "int",
                                    "locationId": "int",
                                    "department": "string",
                                    "location": "string",
                                    "profileId": "int",
                                    "profileName": "string",
                                    "timezone": "string",
                                    "userStartDate": "string",
                                    "userEndDate": "string",
                                    "cellPhone": "string",
                                    "empId": "string",
                                    "userDateOfBirth": "string",
                                    "allocation": "int",
                                    "userDateFormat": "string",
                                    "star": "int",
                                    "imageName": "string",
                                    "notes": "string",
                                    "im": "string",
                                    "createuserid": "int",
                                    "countryId": "int",
                                    "cid": "int",
                                    "guid": "string",
                                    "hasAccess": "int",
                                    "id": "int"
                                  }
                                },
                                "prefixSalutation": "string",
                                "secondLastName": "string",
                                "middleName": "string",
                                "namePronunciation": "string",
                                "familySuffix": "string",
                                "status": "string",
                                "ptoannual": "int",
                                "ptobalance": "int",
                                "gender": "string",
                                "userDateOfBirth": "string",
                                "phone": "string",
                                "im": "string",
                                "createts": "int",
                                "timezone": "string",
                                "practiceId": "int",
                                "imageName": "string",
                                "thumbnail": "string",
                                "profileId": "int",
                                "allocation": "int",
                                "countryId": "int",
                                "lastupdateuserid": "int",
                                "lastupdatets": "string",
                                "userDateFormat": "string",
                                "hrPortal": "string",
                                "userDisplayName": "string",
                                "star": "int",
                                "timecardPeriodPref": "string",
                                "languagePreference": "string",
                                "relativeDate": "string",
                                "tosVersion": "string",
                                "guid": "string",
                                "jobGrade": "string",
                                "hasAccess": "boolean",
                                "primaryColor": "string",
                                "secondaryColor": "string",
                                "notifications": "boolean",
                                "locationModel": {
                                  "locationId": "int",
                                  "locationName": "string",
                                  "cid": "int",
                                  "locationDescription": "string",
                                  "locationType": "string",
                                  "address": "string",
                                  "lattitude": "int",
                                  "longitude": "int",
                                  "locationUID": "string",
                                  "status": "string",
                                  "workingDays": "int",
                                  "locationCode": "int",
                                  "locationLabel": "string",
                                  "parentLocationId": "int",
                                  "createuserid": "int",
                                  "addressModelList": [
                                    {
                                      "addressId": "int",
                                      "addressLine1": "string",
                                      "addressLine2": "string",
                                      "city": "string",
                                      "currentStatus": "string",
                                      "state": "string",
                                      "zipCode": "string",
                                      "createts": "int",
                                      "cid": "int",
                                      "userId": "int",
                                      "candidateId": "int",
                                      "addressType": "string",
                                      "locationId": "int",
                                      "contactId": "int",
                                      "countryId": "int",
                                      "countryModel": {
                                        "countryId": "int",
                                        "countryName": "string",
                                        "iso2": "string"
                                      },
                                      "status": "int",
                                      "verificationStatus": "int",
                                      "custId": "int",
                                      "mapUrl": "string",
                                      "createUserId": "int",
                                      "extAppUID": "int",
                                      "countryCode": "int",
                                      "countryid": "int"
                                    }
                                  ]
                                },
                                "isView": "int",
                                "view": "int"
                              },
                              "reviewerUserModel": {
                                "cid": "int",
                                "empId": "string",
                                "userId": "int",
                                "position": "string",
                                "firstName": "string",
                                "shortName": "string",
                                "lastName": "string",
                                "displayFullName": "string",
                                "userStartDate": "string",
                                "userEndDate": "string",
                                "email": "string",
                                "cellPhone": "string",
                                "userName": "string",
                                "userProfileModel": {
                                  "cid": "int",
                                  "profileId": "int",
                                  "profileName": "string",
                                  "profileDescription": "string",
                                  "orgId": "string",
                                  "profileResponsibilities": "string",
                                  "profileRequirements": "string",
                                  "salaryBandMin": "int",
                                  "salaryBandMax": "int",
                                  "salaryBandCurrency": "",
                                  "managerProfileId": "int",
                                  "managerProfileName": "string",
                                  "customFieldValueModelList": "string",
                                  "numberofUsers": "int",
                                  "createuserid": "int",
                                  "status": "string",
                                  "careerPathwayModelList": "string",
                                  "objectType": "string",
                                  "objectName": "string",
                                  "objectid": "int"
                                },
                                "departmentModel": {
                                  "departmentId": "int",
                                  "name": "string",
                                  "description": "string",
                                  "deptHead": "int",
                                  "cid": "int",
                                  "departmentCode": "string",
                                  "departmentLabel": "string",
                                  "parentDepartmentId": "int",
                                  "parentDepartmentName": "string",
                                  "deptHeadName": "int",
                                  "noOfEmployees": "int",
                                  "userModel": {
                                    "userId": "int",
                                    "firstName": "string",
                                    "lastName": "string",
                                    "name": "string",
                                    "phone": "string",
                                    "email": "string",
                                    "status": "string",
                                    "shortName": "string",
                                    "thumbnail": "string",
                                    "gender": "string",
                                    "jobTitle": "string",
                                    "departmentId": "int",
                                    "locationId": "int",
                                    "department": "string",
                                    "location": "string",
                                    "profileId": "int",
                                    "profileName": "string",
                                    "timezone": "string",
                                    "userStartDate": "string",
                                    "userEndDate": "string",
                                    "cellPhone": "string",
                                    "empId": "string",
                                    "allocation": "int",
                                    "userDateFormat": "string",
                                    "star": "int",
                                    "imageName": "string",
                                    "notes": "string",
                                    "im": "string",
                                    "createuserid": "int",
                                    "countryId": "int",
                                    "cid": "int",
                                    "guid": "string",
                                    "hasAccess": "int",
                                    "calendarId": "int",
                                    "id": "int"
                                  }
                                },
                                "prefixSalutation": "string",
                                "secondLastName": "string",
                                "middleName": "pstringal",
                                "namePronunciation": "string",
                                "familySuffix": "string",
                                "status": "string",
                                "ptoannual": "int",
                                "ptobalance": "int",
                                "gender": "string",
                                "userDateOfBirth": "string",
                                "phone": "string",
                                "im": "string",
                                "createts": "int",
                                "timezone": "string",
                                "practiceId": "int",
                                "imageName": "string",
                                "thumbnail": "string",
                                "profileId": "int",
                                "allocation": "int",
                                "countryId": "int",
                                "lastupdateuserid": "int",
                                "lastupdatets": "string",
                                "userDateFormat": "string",
                                "hrPortal": "string",
                                "userDisplayName": "string",
                                "star": "int",
                                "timecardPeriodPref": "string",
                                "languagePreference": "string",
                                "relativeDate": "string",
                                "tosVersion": "string",
                                "guid": "string",
                                "jobGrade": "string",
                                "paId": "int",
                                "careerPathwayId": "int",
                                "calendarId": "int",
                                "hasAccess": "boolean",
                                "notifications": "boolean",
                                "locationModel": {
                                  "locationId": "int",
                                  "locationName": "string",
                                  "cid": "int",
                                  "locationDescription": "string",
                                  "locationType": "string",
                                  "address": "string",
                                  "lattitude": "int",
                                  "longitude": "int",
                                  "locationUID": "int",
                                  "status": "string",
                                  "workingDays": "string",
                                  "locationCode": "int",
                                  "locationLabel": "string",
                                  "parentLocationId": "int",
                                  "createuserid": "int",
                                  "addressModelList": [
                                    {
                                      "addressId": "int",
                                      "addressLine1": "string",
                                      "addressLine2": "string",
                                      "city": "ludhiana",
                                      "currentStatus": "string",
                                      "state": "string",
                                      "zipCode": "int",
                                      "createts": "int",
                                      "cid": "int",
                                      "userId": "int",
                                      "candidateId": "int",
                                      "addressType": "string",
                                      "locationId": "int",
                                      "contactId": "int",
                                      "countryId": "int",
                                      "countryModel": {
                                        "countryId": "int",
                                        "countryName": "India",
                                        "iso2": "string"
                                      },
                                      "status": "string",
                                      "verificationStatus": "string",
                                      "custId": "int",
                                      "mapUrl": "string",
                                      "createUserId": "int",
                                      "extAppUID": "int",
                                      "countryCode": "int",
                                      "countryid": "int"
                                    }
                                  ]
                                },
                                "practiceModel": {
                                  "practiceId": "int",
                                  "name": "string",
                                  "description": "string",
                                  "practiceHead": "string",
                                  "userModel": {
                                    "userId": "int",
                                    "firstName": "string",
                                    "lastName": "string",
                                    "name": "string",
                                    "phone": "string",
                                    "email": "string",
                                    "status": "string",
                                    "shortName": "string",
                                    "thumbnail": "string",
                                    "gender": "string",
                                    "jobTitle": "string",
                                    "departmentId": "int",
                                    "locationId": "int",
                                    "department": "string",
                                    "location": "string",
                                    "profileId": "int",
                                    "profileName": "string",
                                    "timezone": "string",
                                    "userStartDate": "string",
                                    "userEndDate": "string",
                                    "cellPhone": "string",
                                    "empId": "string",
                                    "userDateOfBirth": "string",
                                    "allocation": "int",
                                    "userDateFormat": "string",
                                    "star": "int",
                                    "imageName": "string",
                                    "notes": "string",
                                    "im": "string",
                                    "createuserid": "int",
                                    "countryId": "int",
                                    "cid": "int",
                                    "guid": "string",
                                    "hasAccess": "int",
                                    "id": "int"
                                  },
                                  "createts": "string",
                                  "cid": "int"
                                },
                                "azureObjectIdentifier": "string",
                                "isView": "boolean",
                                "view": "boolean"
                              },
                              "goalCollaborationModel": [],
                              "crediteatets": "string",
                              "commentCrediteatets": "string",
                              "commentDescription": "string",
                              "uname": "string",
                              "hasGoalApprovalPermission": "string",
                              "parentGoalName": "string",
                              "beginDate": "string",
                              "goalWeightage": "int",
                              "createuserid": "int",
                              "createts": "int",
                              "projectModel": {
                                "projectId": "int",
                                "projectName": "string",
                                "projectDesc": "string",
                                "startDate": "string",
                                "endDate": "string",
                                "contactPerson": "int",
                                "account": "string",
                                "accountModel": "string",
                                "userModelList": "string",
                                "status": "string",
                                "createts": "int",
                                "shortCode": "string",
                                "probability": "int",
                                "contactPersonName": "string",
                                "statusValue": "string",
                                "pgroupid": "int",
                                "puid": "int",
                                "billingType": "string",
                                "timeSheetOpenToAll": "int",
                                "userModel": {
                                  "userId": "int",
                                  "firstName": "string",
                                  "lastName": "string",
                                  "name": "string",
                                  "phone": "string",
                                  "email": "string",
                                  "status": "string",
                                  "shortName": "string",
                                  "thumbnail": "string",
                                  "gender": "string",
                                  "jobTitle": "string",
                                  "departmentId": "int",
                                  "locationId": "int",
                                  "department": "string",
                                  "location": "string",
                                  "profileId": "int",
                                  "profileName": "string",
                                  "timezone": "string",
                                  "userStartDate": "string",
                                  "cellPhone": "string",
                                  "empId": "string",
                                  "allocation": "int",
                                  "userDateFormat": "string",
                                  "star": "int",
                                  "imageName": "string",
                                  "notes": "string",
                                  "im": "int",
                                  "createuserid": "int",
                                  "countryId": "int",
                                  "cid": "int",
                                  "guid": "string",
                                  "careerPathwayId": "int",
                                  "hasAccess": "int",
                                  "calendarId": "int",
                                  "id": "int"
                                },
                                "projectGroupModel": "string",
                                "groupName": "string",
                                "accountName": "string",
                                "pmMail": "string",
                                "locationid": "int",
                                "reportMethod": "string",
                                "industry": "string",
                                "cid": "int",
                                "isAdmin": "boolean",
                                "createuserid": "int",
                                "lastupdateuserid": "int",
                                "admin": "boolean",
                                "projStatus": "string",
                                "projProbability": "int"
                              },
                              "goalTypeModel": "boolean",
                              "parentGoalId": "int",
                              "id": "int",
                              "createUserId": "int",
                              "projectid": "int",
                              "targetdate": "string",
                              "lastUpdateUserId": "int",
                              "begindate": "string",
                              "initialvalue": "int",
                              "currentvalue": "int",
                              "goalvalue": "int"
                            }
                          ]
                        },
                      ],
                      "message": "Successful"
                    }
              schema:
                $ref: >-
                  #/components/schemas/ObjectiveGetByUserIdOrSpecificObjectiveByIdResponse
        '401':
          description: '401'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "message": "failure"
                    }
              schema:
                $ref: >-
                  #/components/schemas/ObjectiveGetByUserIdOrSpecificObjectiveById401Response
      deprecated: false
  /api/user:
    get:
      tags:
        - People and Permissions
      summary: Retrieve user details
      operationId: PeopleAndPermissions_getUserDetails
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters: []
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                      "cid": "int",
                      "empId": "string",
                      "userId": "int",
                      "position": "string",
                      "firstName": "string",
                      "shortName": "string",
                      "lastName": "string",
                      "displayFullName": "string",
                      "userStartDate": "date",
                      "email": "string",
                      "cellPhone": "int",
                      "userName": "string",
                      "employmentModelList": [
                        {
                          "empId": "int",
                          "userId": "int",
                          "employerName": "string",
                          "position": "string",
                          "department": "string",
                          "city": "string",
                          "state": "string",
                          "startDate": "date",
                          "endDate": "date",
                          "duties": "string",
                          "recruitid": "int",
                          "countryId": "int",
                          "custAppId": "int",
                          "employmentType": "string",
                          "SOCCode": "int"
                        }
                      ],
                      "contactList": "object",
                      "educationModelList": [
                        {
                          "educationId": "int",
                          "userId": "int",
                          "degree": "string",
                          "degreeType": "string",
                          "institution": "string",
                          "institutionId": "int",
                          "degreeId": "int",
                          "city": "string",
                          "state": "string",
                          "countryId": "int",
                          "startDate": "date",
                          "endDate": "date",
                          "course": "string",
                          "cid": "int",
                          "graduation":"int",
                          "isHighest": "int",
                          "attachmentId": "int",
                          "attachmentModel": "object"
                        }
                      ],
                      "licenseModelList": "object",
                      "supervisorModelList": "object",
                      "awardModelList": "object",
                      "addressModelList": [
                        {
                          "addressId": "int",
                          "addressLine1": "string",
                          "addressLine2": "string",
                          "city": "string",
                          "currentStatus": "string",
                          "state": "string",
                          "zipCode": "string",
                          "cid": "int",
                          "userId": "int",
                          "candidateId": "int",
                          "addressType": "string",
                          "locationId": "int",
                          "countryId": "int",
                          "countryModel": {
                            "countryId": "int",
                            "countryName": "string",
                            "iso2": "string"
                          },
                          "status": "string",
                          "verificationStatus": "string",
                          "custId": "int",
                          "mapUrl": "string"
                        }
                      ],
                      "customTableModelList": "object",
                      "customFieldValueModelList": [
                        {
                          "customFieldValueId": "int",
                          "customFieldId": "int",
                          "customFieldValue": "string",
                          "customFieldObjectId": "int",
                          "cid": "int",
                          "createUserId": "int",
                          "customfieldName": "string"
                        }
                      ],
                      "prefixSalutation": "string",
                      "middleName": "string",
                      "namePronunciation": "string",
                      "familySuffix": "string",
                      "status": "string",
                      "gender": "string",
                      "phone": "int",
                      "im": "int",
                      "createts": "int",
                      "financialModelList": "object",
                      "allocation": "int",
                      "userDisplayName": "string",
                      "star": "int",
                      "languagePreference": "string",
                      "jobGrade": "string",
                      "isView": "boolean"
                    }
              schema:
                $ref: >-
                  #/components/schemas/PeopleAndPermissionsGetUserDetailsResponse
        '401':
          description: '401'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n\t\"message\": \"Unauthorized\"\n}"
              schema:
                $ref: >-
                  #/components/schemas/PeopleAndPermissionsGetUserDetails401Response
      deprecated: false
  /api/user/compensation:
    get:
      tags:
        - People and Permissions
      summary: Retrieve user financial record
      operationId: PeopleAndPermissions_getFinancialRecord
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters:
        - description: Email address of the user.
          name: email
          required: false
          in: query
          schema:
            type: string
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    [
                      {
                        "cid": "int",
                        "userId": "int",
                        "financialId": "int",
                        "value": "int",
                        "period": "string",
                        "userModel": {
                          "cid": "int",
                          "empId": "string",
                          "userId": "int",
                          "position": "string",
                          "firstName": "string",
                          "shortName": "string",
                          "lastName": "string",
                          "workerTypeModel": {
                            "wtid": "int",
                            "cid": "int",
                            "code": "string",
                            "description": "string",
                            "createuserid": "int"
                          },
                          "displayFullName": "string",
                          "userStartDate": "string",
                          "email": "string",
                          "cellPhone": "int",
                          "userName": "string",
                          "userProfileModel": {
                            "cid": "int",
                            "profileId": "int",
                            "profileName": "string",
                            "profileDescription": "string",
                            "orgId": "int",
                            "profileResponsibilities": "string",
                            "profileRequirements": "string",
                            "salaryBandMin": "string",
                            "salaryBandMax": "string",
                            "salaryBandCurrency": "int",
                            "managerProfileId": "int",
                            "managerProfileName": "string",
                            "customFieldValueModelList": "object",
                            "numberofUsers": "int",
                            "createuserid": "int",
                            "status": "string",
                            "careerPathwayModelList": "object",
                            "objectType": "string",
                            "objectName": "string",
                            "objectid": "int"
                          },
                          "prefixSalutation": "string",
                          "middleName": "string",
                          "namePronunciation": "string",
                          "familySuffix": "string",
                          "status": "string",
                          "ptoannual": "int",
                          "ptobalance": "int",
                          "gender": "string",
                          "userDateOfBirth": "string",
                          "phone": "int",
                          "im": "int",
                          "createts": "int",
                          "timezone": "string",
                          "practiceId": "int",
                          "imageName": "string",
                          "thumbnail": "string",
                          "profileId": "int",
                          "allocation": "int",
                          "countryId": "int",
                          "lastupdateuserid": "int",
                          "lastupdatets": "string",
                          "userDateFormat": "string",
                          "hrPortal": "string",
                          "userDisplayName": "string",
                          "star": "int",
                          "timecardPeriodPref": "string",
                          "languagePreference": "string",
                          "tosVersion": "string",
                          "guid": "string",
                          "jobGrade": "string",
                          "careerPathwayId": "int",
                          "hasAccess": "boolean",
                          "notifications": "boolean",
                          "locationModel": {
                            "locationId": "int",
                            "locationName": "string",
                            "cid": "int",
                            "locationDescription": "string",
                            "locationType": "string",
                            "address": "string",
                            "lattitude": "int",
                            "longitude": "int",
                            "locationUID": "int",
                            "status": "string",
                            "workingDays": "int",
                            "locationCode": "IN",
                            "locationLabel": "string",
                            "parentLocationId": "int",
                            "createuserid": "int",
                            "addressModelList": [
                              {
                                "addressId": "int",
                                "addressLine1": "string",
                                "addressLine2": "string",
                                "city": "string",
                                "currentStatus": "string",
                                "state": "string",
                                "zipCode": "int",
                                "createts": "int",
                                "cid": "int",
                                "userId": "int",
                                "candidateId": "int",
                                "addressType": "string",
                                "locationId": "int",
                                "contactId": "int",
                                "countryId": "int",
                                "countryModel": {
                                  "countryId": "int",
                                  "countryName": "string",
                                  "iso2": "string"
                                },
                                "status": "string",
                                "verificationStatus": "string",
                                "custId": "int",
                                "mapUrl": "string",
                                "createUserId": "int",
                                "extAppUID": "int",
                                "countryCode": "int",
                                "countryid": "int"
                              }
                            ]
                          },
                          "isView": "boolean",
                          "view": "boolean"
                        },
                        "financialType": "string",
                        "currencyCode": "string",
                        "notes": "string",
                        "AmountType": "string",
                        "amountChange": "int",
                        "percentageChange": "int",
                        "effectivedate": "string",
                        "createUserId": "int",
                        "enddate": "string",
                        "compensationType": "string",
                        "status": "string",
                        "createts": "int",
                        "amountType": "string"
                      }
                    ]
              schema:
                $ref: >-
                  #/components/schemas/PeopleAndPermissionsGetFinancialRecordResponse
        '401':
          description: '401'
          content:
            application/json:
              examples:
                Result:
                  value: "{\n\t\"message\": \"Unauthorized\"\n}"
              schema:
                $ref: >-
                  #/components/schemas/PeopleAndPermissionsGetFinancialRecord401Response
      deprecated: false
  /resource:
    get:
      tags:
        - People and Permissions
      summary: Retrieve users
      operationId: PeopleAndPermissions_getUsers
      security:
        - sec0: []
          sec1: []
      description: ''
      parameters:
        - description: Name of the user.
          name: name
          in: query
          schema:
            type: string
        - description: Page number.
          name: page
          in: query
          schema:
            type: integer
            format: int32
            default: 1
        - description: Number of users per page.
          name: pageSize
          in: query
          schema:
            type: integer
            format: int32
            default: 20
        - name: sortBy
          in: query
          schema:
            type: string
        - description: |-
            Order to sort the users. 
             asc- Ascending Order 
             desc- Descending Order 
          name: sortOrder
          in: query
          schema:
            type: string
            default: asc
            enum:
              - asc
              - desc
        - description: |-
            Status of the user. 
              A- Active User 
             I- Inactive User 
             F- Future Joiner 
          name: status
          in: query
          schema:
            type: string
            default: A
            enum:
              - A
              - I
              - F
      responses:
        '200':
          description: '200'
          content:
            '*/*':
              examples:
                Result:
                  value: |-
                    {
                      "code": "int",
                      "data": [
                        {
                          "resourceId": "int",
                          "name": "string",
                          "position": "string",
                          "assignments": "string",
                          "allocation": "int",
                          "startDate": "int",
                          "endDate": "int",
                          "workerType": "string",
                          "location": "string",
                          "timeZone": "string",
                          "notes": "string",
                          "emailAddress": "string",
                          "phone": "int",
                          "im": "string",
                          "dateOfBirth": "int",
                          "gender": "string",
                          "imageName": "string",
                          "customFieldList": "string",
                          "department": "string",
                          "departmentLabel": "string",
                          "profileName": "string",
                          "userReporterList": {
                            "149109": "string"
                          },
                          "empId": "string"
                        }
                      ],
                      "message": "Successful"
                    }
              schema:
                $ref: '#/components/schemas/PeopleAndPermissionsGetUsersResponse'
        '409':
          description: '409'
          content:
            '*/*':
              examples:
                Result:
                  value: |-
                    {
                      "message": "failure"
                    }
              schema:
                $ref: '#/components/schemas/PeopleAndPermissionsGetUsers409Response'
      deprecated: false
  /timecard:
    get:
      tags:
        - Timecards
      summary: Get timecards by user id.
      operationId: Timecards_getUserById
      parameters:
        - description: Authorization
          name: Authorization
          in: header
          required: true
          schema:
            type: string
        - description: type
          name: type
          in: query
          required: false
          schema:
            type: string
            default: leave
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Iterable'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /timecard/addtimecard:
    post:
      tags:
        - Timecards
      summary: Create a new timecard.
      operationId: Timecards_createTimecard
      parameters:
        - name: createts.date
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: createts.day
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: createts.hours
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: createts.minutes
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: createts.month
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: createts.nanos
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: createts.seconds
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: createts.time
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: createts.timezoneOffset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: createts.year
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: customHours
          in: query
          required: false
          schema:
            type: string
        - name: date
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: description
          in: query
          required: false
          schema:
            type: string
        - name: elapsedTime.date
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: elapsedTime.day
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: elapsedTime.hours
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: elapsedTime.minutes
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: elapsedTime.month
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: elapsedTime.seconds
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: elapsedTime.time
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: elapsedTime.timezoneOffset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: elapsedTime.year
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: endDateTime.date
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: endDateTime.day
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: endDateTime.hours
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: endDateTime.minutes
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: endDateTime.month
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: endDateTime.nanos
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: endDateTime.seconds
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: endDateTime.time
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: endDateTime.timezoneOffset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: endDateTime.year
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: endDateTimeStr
          in: query
          required: false
          schema:
            type: string
        - name: id
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: invoiceId
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: notes
          in: query
          required: false
          schema:
            type: string
        - name: numberOfDays
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: paymentDate
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: projectId
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: projectManager
          in: query
          required: false
          schema:
            type: string
        - name: projectModel.account
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: timesheetId
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: timezone
          in: query
          required: false
          schema:
            type: string
        - name: usedTime
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Iterable'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
  /timecard/clockin:
    post:
      tags:
        - Timecards
      summary: Create a past timecard.
      operationId: Timecards_createPastTimecard
      parameters:
        - description: Authorization
          name: Authorization
          in: header
          required: true
          schema:
            type: string
        - name: activity
          in: query
          required: false
          schema:
            type: string
        - name: amount
          in: query
          required: false
          schema:
            type: number
            format: double
        - name: approvalRejectionReason
          in: query
          required: false
          schema:
            type: string
        - name: billable
          in: query
          required: false
          schema:
            type: string
        - name: cardId
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: caseNum
          in: query
          required: false
          schema:
            type: string
        - name: caseURL
          in: query
          required: false
          schema:
            type: string
        - name: categoryCode
          in: query
          required: false
          schema:
            type: string
        - name: chargeType
          in: query
          required: false
          schema:
            type: string
        - name: cid
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: createUserID
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: createts.date
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: createts.day
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: createts.hours
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: createts.minutes
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: createts.month
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: createts.nanos
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: createts.seconds
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: createts.time
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: createts.timezoneOffset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: createts.year
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: customHours
          in: query
          required: false
          schema:
            type: string
        - name: date
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: description
          in: query
          required: false
          schema:
            type: string
        - name: elapsedTime.date
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: elapsedTime.day
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: elapsedTime.hours
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: elapsedTime.minutes
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: elapsedTime.month
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: elapsedTime.seconds
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: elapsedTime.time
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: elapsedTime.timezoneOffset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: elapsedTime.year
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: endDateTime.date
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: endDateTime.day
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: endDateTime.hours
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: endDateTime.minutes
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: endDateTime.month
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: endDateTime.nanos
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: endDateTime.seconds
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: endDateTime.time
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: endDateTime.timezoneOffset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: endDateTime.year
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: endDateTimeStr
          in: query
          required: false
          schema:
            type: string
        - name: id
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: invoiceId
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: notes
          in: query
          required: false
          schema:
            type: string
        - name: numberOfDays
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: paymentDate
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: projectId
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: projectManager
          in: query
          required: false
          schema:
            type: string
        - name: projectModel.account
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: ptoComputed
          in: query
          required: false
          schema:
            type: string
        - name: source
          in: query
          required: false
          schema:
            type: string
        - name: startDateTime.date
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: startDateTime.day
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: startDateTime.hours
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: startDateTime.minutes
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: startDateTime.month
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: startDateTime.nanos
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: startDateTime.seconds
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: startDateTime.time
          in: query
          required: false
          schema:
            type: integer
            format: int64
        - name: startDateTime.timezoneOffset
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: startDateTime.year
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: startDateTimeStr
          in: query
          required: false
          schema:
            type: string
        - name: status
          in: query
          required: false
          schema:
            type: string
        - name: sumOfElapsedTime
          in: query
          required: false
          schema:
            type: string
        - name: timesheetId
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: timezone
          in: query
          required: false
          schema:
            type: string
        - name: usedTime
          in: query
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Iterable'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      deprecated: false
components:
  schemas:
    Iterable:
      title: Iterable
      type: object
    AccountModel:
      title: AccountModel
      type: object
      properties:
        accountCreateUserModel:
          $ref: '#/components/schemas/UserViewModel'
        accountDescription:
          type: string
        accountId:
          type: integer
          format: int32
        accountName:
          type: string
        accountOwnerModel:
          $ref: '#/components/schemas/ContactModel'
        cid:
          type: integer
          format: int32
        id:
          type: integer
          format: int32
    AddressModel:
      title: AddressModel
      type: object
      properties:
        addressId:
          type: integer
          format: int32
        addressLine1:
          type: string
        addressLine2:
          type: string
        addressType:
          type: string
        candidateId:
          type: integer
          format: int32
        cid:
          type: integer
          format: int32
        city:
          type: string
        contactId:
          type: integer
          format: int32
        countryId:
          type: integer
          format: int32
        countryModel:
          $ref: '#/components/schemas/CountryModel'
        countryid:
          type: integer
          format: int32
        createUserId:
          type: integer
          format: int32
        createts:
          $ref: '#/components/schemas/Timestamp'
        currentStatus:
          type: string
        custId:
          type: integer
          format: int32
        locationId:
          type: integer
          format: int32
        mapUrl:
          type: string
        state:
          type: string
        status:
          type: string
        userId:
          type: integer
          format: int32
        verificationStatus:
          type: string
        zipCode:
          type: string
    AssessmentModel:
      title: AssessmentModel
      type: object
      properties:
        allowFractional:
          type: integer
          format: int32
        cid:
          type: integer
          format: int32
        rangeModelList:
          type: array
          items:
            $ref: '#/components/schemas/AssessmentRangeModel'
        scoreMax:
          type: number
          format: float
        scoreMaxValidation:
          type: number
          format: float
        scoreMin:
          type: number
          format: float
        scoreName:
          type: string
        scoretemplateid:
          type: integer
          format: int32
        scoringInstructions:
          type: string
        status:
          type: string
        visualizationType:
          type: string
    AssessmentRangeModel:
      title: AssessmentRangeModel
      type: object
      properties:
        description:
          type: string
        cid:
          type: integer
          format: int32
        colorCode:
          type: string
        interpretation:
          type: string
        rangeMax:
          type: number
          format: float
        rangeMin:
          type: number
          format: float
        scoreTempId:
          type: integer
          format: int32
        strangeid:
          type: integer
          format: int32
    AttachmentFolderModel:
      title: AttachmentFolderModel
      type: object
      properties:
        atchFolderId:
          type: integer
          format: int32
        atchFolderName:
          type: string
        cid:
          type: integer
          format: int32
        createuserid:
          type: integer
          format: int32
        usedCount:
          type: integer
          format: int32
    AttachmentModel:
      title: AttachmentModel
      type: object
      properties:
        access:
          type: string
        annId:
          type: integer
          format: int32
        appraisalAssignmentId:
          type: integer
          format: int32
        appraisalItemResponseId:
          type: integer
          format: int32
        appraisalid:
          type: integer
          format: int32
        assetid:
          type: integer
          format: int32
        atchType:
          type: string
        attachUserModel:
          $ref: '#/components/schemas/UserModel'
        attachid:
          type: integer
          format: int32
        attachmentFolderModel:
          $ref: '#/components/schemas/AttachmentFolderModel'
        authkey:
          type: string
        candidateAccess:
          type: boolean
        candidateid:
          type: integer
          format: int32
        category:
          type: string
        cid:
          type: integer
          format: int32
        comments:
          type: string
        createts:
          type: string
          format: date-time
        createuserid:
          type: integer
          format: int32
        customerId:
          type: integer
          format: int32
        dLExpiryDate:
          type: string
        dLIssueDate:
          type: string
        documentContent:
          type: string
        documentExpiryDate:
          type: string
          format: date-time
        documentType:
          type: string
        documnetIssueDate:
          type: string
          format: date-time
        expenseItemId:
          type: integer
          format: int32
        expenseid:
          type: integer
          format: int32
        fileExtn:
          type: string
        filename:
          type: string
        folder:
          type: string
        folder_id:
          type: integer
          format: int32
        global:
          type: boolean
        goalid:
          type: integer
          format: int32
        language:
          type: string
        leaveid:
          type: integer
          format: int32
        multiSigning:
          type: integer
          format: int32
        objectAccessModelList:
          type: array
          items:
            $ref: '#/components/schemas/ObjectAccessModel'
        objectType:
          type: string
        obtype:
          type: string
        payStubId:
          type: integer
          format: int32
        positionid:
          type: integer
          format: int32
        projectModel:
          $ref: '#/components/schemas/ProjectModel'
        projectid:
          type: integer
          format: int32
        resume:
          type: boolean
        ruleid:
          type: integer
          format: int32
        s3id:
          type: string
        signNowDocId:
          type: string
        signNowTemplateId:
          type: string
        signStatus:
          type: string
        signatureId:
          type: string
        signatureRequestId:
          type: string
        signingDate:
          type: string
          format: date-time
        size:
          type: integer
          format: int32
        skilluserId:
          type: integer
          format: int32
        stateCountryModel:
          $ref: '#/components/schemas/StateCountryModel'
        status:
          type: string
        taskId:
          type: integer
          format: int32
        ticketId:
          type: integer
          format: int32
        timecardid:
          type: integer
          format: int32
        topic:
          type: string
        trainingId:
          type: integer
          format: int32
        userAccess:
          type: integer
          format: int32
        userGroupModel:
          $ref: '#/components/schemas/UserGroupModel'
        userModel:
          $ref: '#/components/schemas/UserModel'
        userid:
          type: integer
          format: int32
    AwardModel:
      title: AwardModel
      type: object
      properties:
        appraisalId:
          type: integer
          format: int32
        attribution:
          type: string
        awardDate:
          type: string
          format: date
        awardId:
          type: integer
          format: int64
        awardTypeModel:
          $ref: '#/components/schemas/AwardTypeModel'
        cid:
          type: integer
          format: int32
        createts:
          $ref: '#/components/schemas/Timestamp'
        currencyModel:
          $ref: '#/components/schemas/CurrencyModel'
        feedbackId:
          type: integer
          format: int32
        finAccountCode:
          type: string
        finAmount:
          type: number
          format: double
        finCurrencyCode:
          type: string
        finPaymentDate:
          type: string
          format: date
        finPaymentStatus:
          type: string
        nonMonetaryCompensation:
          type: string
        notes:
          type: string
        userViewModel:
          $ref: '#/components/schemas/UserViewModel'
    AwardTypeModel:
      title: AwardTypeModel
      type: object
      properties:
        description:
          type: string
        amount:
          type: number
          format: double
        amountType:
          type: string
        awardTypeId:
          type: integer
          format: int64
        budget:
          type: number
          format: double
        cid:
          type: integer
          format: int32
        code:
          type: string
        createUserId:
          type: integer
          format: int32
        createts:
          $ref: '#/components/schemas/Timestamp'
        currencyCode:
          type: string
        currencyModel:
          $ref: '#/components/schemas/CurrencyModel'
        departmentModel:
          $ref: '#/components/schemas/DepartmentModel'
        locationModel:
          $ref: '#/components/schemas/LocationModel'
        managerUserViewModel:
          $ref: '#/components/schemas/UserViewModel'
    BankAccountModel:
      title: BankAccountModel
      type: object
      properties:
        accountCode:
          type: string
        accountNumber:
          type: string
        accountType:
          type: string
        bankAccountId:
          type: integer
          format: int32
        bankCountryId:
          type: integer
          format: int32
        branchCode:
          type: string
        branchName:
          type: string
        cid:
          type: integer
          format: int32
        countryId:
          type: integer
          format: int32
        createUserId:
          type: integer
          format: int32
        name:
          type: string
        ownerType:
          type: string
        paymentEmail:
          type: string
        routingNumber:
          type: string
        status:
          type: string
        swiftCode:
          type: string
        userId:
          type: integer
          format: int32
    CandidateApplicationsModel:
      title: CandidateApplicationsModel
      type: object
      properties:
        applicationDueDate:
          type: string
          format: date-time
        applicationStatusId:
          type: integer
          format: int32
        applicationStatusValue:
          type: string
        appliedPositions:
          type: string
        candidateId:
          type: integer
          format: int32
        candidatePositionCreateTs:
          $ref: '#/components/schemas/Timestamp'
        candidatePositionsId:
          type: integer
          format: int64
        cid:
          type: integer
          format: int32
        colorcode:
          type: string
        count:
          type: integer
          format: int32
        positionDepartmentId:
          type: integer
          format: int32
        positionDescription:
          type: string
        positionLocationId:
          type: integer
          format: int32
        positionName:
          type: string
        positionProfileId:
          type: integer
          format: int32
        positionProjectId:
          type: integer
          format: int32
        positionStatusOpenClosed:
          type: string
        positioncreatets:
          $ref: '#/components/schemas/Timestamp'
        positionid:
          type: integer
          format: int32
        responsibilities:
          type: string
        sequence:
          type: integer
          format: int32
        status:
          type: string
        systemReco:
          type: string
        systemRecoHelp:
          type: string
    CandidateModel:
      title: CandidateModel
      type: object
      properties:
        acceptance1:
          type: boolean
        acceptance2:
          type: boolean
        accessCode:
          type: string
        addressModelList:
          type: array
          items:
            $ref: '#/components/schemas/AddressModel'
        assessmentModel:
          $ref: '#/components/schemas/AssessmentModel'
        attachmentModelList:
          type: array
          items:
            $ref: '#/components/schemas/AttachmentModel'
        candidateLock:
          type: integer
          format: int32
        candidatePositionsModelList:
          type: array
          items:
            $ref: '#/components/schemas/CandidateApplicationsModel'
        candidateStatusModel:
          $ref: '#/components/schemas/CandidateStatusModel'
        certificationModelList:
          type: array
          items:
            $ref: '#/components/schemas/CertificationModel'
        cid:
          type: integer
          format: int32
        cloudSearchSync:
          type: integer
          format: int32
        createts:
          $ref: '#/components/schemas/Timestamp'
        createuserid:
          type: integer
          format: int32
        customFieldValueModelList:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldValueModel'
        customfieldvalue:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldValueModel'
        dateOfBirth:
          type: string
          format: date
        educationModelList:
          type: array
          items:
            $ref: '#/components/schemas/EducationModel'
        educationStr:
          type: string
        email:
          type: string
        employmentModelList:
          type: array
          items:
            $ref: '#/components/schemas/EmploymentModel'
        isInternalCand:
          type: boolean
        isNewCand:
          type: boolean
        languagePreference:
          type: string
        lastupdateuserid:
          type: integer
          format: int32
        name:
          type: string
        notes:
          type: string
        passwordHash:
          type: string
        phone:
          type: string
        positionModel:
          $ref: '#/components/schemas/PositionModel'
        positionName:
          type: string
        recruitId:
          type: integer
          format: int32
        recruiter:
          type: string
        recruiterUserId:
          type: integer
          format: int32
        referrer:
          type: string
        referrerId:
          type: integer
          format: int32
        salaryAmount:
          type: integer
          format: int32
        salaryCurrencyCode:
          type: string
        score:
          type: number
          format: double
        skillModelList:
          type: array
          items:
            $ref: '#/components/schemas/SkillUserModel'
        source:
          type: string
        status:
          type: string
        statusid:
          type: integer
          format: int32
        summaryByCandidate:
          type: string
        systemReco:
          type: string
        systemRecoHelp:
          type: string
        templateId:
          type: integer
          format: int32
        timezone:
          type: string
        trainingAccess:
          type: boolean
        updatedOn:
          $ref: '#/components/schemas/Timestamp'
        userId:
          type: integer
          format: int32
        verificationCode:
          type: integer
          format: int32
        verified:
          type: string
        workflowId:
          type: integer
          format: int32
        workflowModel:
          $ref: '#/components/schemas/WorkflowModel'
        workflowName:
          type: string
    CandidateStatusModel:
      title: CandidateStatusModel
      type: object
      properties:
        cid:
          type: integer
          format: int32
        colorCode:
          type: string
        internalCode:
          type: string
        noOfCandidates:
          type: string
        sequence:
          type: integer
          format: int32
        shareStatus:
          type: string
        statusId:
          type: integer
          format: int32
        statusValue:
          type: string
        totalCandidates:
          type: string
    CertificationModel:
      title: CertificationModel
      type: object
      properties:
        CertificationNumber:
          type: string
        authority:
          type: string
        candidateId:
          type: integer
          format: int32
        certificationId:
          type: integer
          format: int64
        certificationNumber:
          type: string
        cid:
          type: integer
          format: int32
        comments:
          type: string
        createUserId:
          type: integer
          format: int32
        createts:
          $ref: '#/components/schemas/Timestamp'
        expireDate:
          type: string
          format: date
        issueDate:
          type: string
          format: date
        issueState:
          type: string
        type:
          type: string
        userId:
          type: integer
          format: int32
        validState:
          type: string
    ContactModel:
      title: ContactModel
      type: object
      properties:
        addressModelList:
          type: array
          items:
            $ref: '#/components/schemas/AddressModel'
        candidateId:
          type: integer
          format: int32
        cid:
          type: integer
          format: int32
        contactType:
          type: string
        contactid:
          type: integer
          format: int32
        createuserid:
          type: integer
          format: int32
        dateOfBirth:
          type: string
          format: date
        email1:
          type: string
        gender:
          type: string
        lastName:
          type: string
        name:
          type: string
        notes:
          type: string
        otherRelationToUser:
          type: string
        phone1:
          type: string
        phone1type:
          type: string
        phone2:
          type: string
        phone2type:
          type: string
        phone3:
          type: string
        phone3type:
          type: string
        relationToUser:
          type: string
        status:
          type: string
        taxNumber:
          type: string
        userId:
          type: integer
          format: int32
    CountryModel:
      title: CountryModel
      type: object
      properties:
        countryId:
          type: integer
          format: int32
        countryName:
          type: string
        iso2:
          type: string
    CurrencyModel:
      title: CurrencyModel
      type: object
      properties:
        cid:
          type: integer
          format: int32
        currencyCode:
          type: string
        currencyId:
          type: integer
          format: int32
        currencyName:
          type: string
    CustomFieldGroupModel:
      title: CustomFieldGroupModel
      type: object
      properties:
        access:
          type: string
        cfgroupid:
          type: integer
          format: int32
        cfgroupname:
          type: string
        cid:
          type: integer
          format: int32
        createts:
          $ref: '#/components/schemas/Timestamp'
        hasCustomFields:
          type: boolean
        layout:
          type: string
        objectType:
          type: string
        sequence:
          type: integer
          format: int32
        usergroupid:
          type: integer
          format: int32
    CustomFieldModel:
      title: CustomFieldModel
      type: object
      properties:
        access:
          type: string
        candidateAccess:
          type: string
        cfcode:
          type: string
        cfgroupid:
          type: integer
          format: int32
        cid:
          type: integer
          format: int32
        createUserId:
          type: integer
          format: int32
        createts:
          $ref: '#/components/schemas/Timestamp'
        customFieldGroupModel:
          $ref: '#/components/schemas/CustomFieldGroupModel'
        customFieldId:
          type: integer
          format: int32
        customFieldName:
          type: string
        customFieldStyleModel:
          $ref: '#/components/schemas/CustomFieldStyleModel'
        customFieldType:
          type: string
        customFieldValueModel:
          $ref: '#/components/schemas/CustomFieldValueModel'
        customFieldValueModelList:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldValueModel'
        defaultValue:
          type: string
        fieldType:
          type: string
        helpText:
          type: string
        integrationTypeId:
          type: integer
          format: int32
        mandatory:
          type: integer
          format: int32
        masked:
          type: integer
          format: int32
        objectAccessModel:
          type: array
          items:
            $ref: '#/components/schemas/ObjectAccessModel'
        objectType:
          type: string
        opValues:
          type: string
        readAccessTypeCode:
          type: string
        readUserGroupId:
          type: integer
          format: int32
        sequence:
          type: integer
          format: int32
        style:
          type: string
        userAccess:
          type: string
        userGroupId:
          type: integer
          format: int32
    CustomFieldStyleModel:
      title: CustomFieldStyleModel
      type: object
      properties:
        bold:
          type: string
        color:
          type: string
        italic:
          type: string
    CustomFieldValueModel:
      title: CustomFieldValueModel
      type: object
      properties:
        cid:
          type: integer
          format: int32
        createUserId:
          type: integer
          format: int32
        customFieldId:
          type: integer
          format: int32
        customFieldObjectId:
          type: integer
          format: int32
        customFieldValue:
          type: string
        customFieldValueId:
          type: integer
          format: int32
        customfieldName:
          type: string
    CustomTableColumnModel:
      title: CustomTableColumnModel
      type: object
      properties:
        cid:
          type: integer
          format: int32
        columnCode:
          type: string
        columnHeader:
          type: string
        columnType:
          type: string
        createts:
          $ref: '#/components/schemas/Timestamp'
        ctColumnId:
          type: integer
          format: int32
        customFieldStyleModel:
          $ref: '#/components/schemas/CustomFieldStyleModel'
        customTableId:
          type: integer
          format: int32
        fieldType:
          type: string
        helpText:
          type: string
        mandatory:
          type: integer
          format: int32
        masked:
          type: integer
          format: int32
        optionValues:
          type: string
        sequence:
          type: integer
          format: int32
        style:
          type: string
    CustomTableColumnValueModel:
      title: CustomTableColumnValueModel
      type: object
      properties:
        candidateId:
          type: integer
          format: int32
        cid:
          type: integer
          format: int32
        colType:
          type: string
        colValue:
          type: string
        createUserId:
          type: integer
          format: int32
        createts:
          $ref: '#/components/schemas/Timestamp'
        ctColumnModel:
          $ref: '#/components/schemas/CustomTableColumnModel'
        ctValueId:
          type: integer
          format: int32
        ctcValueId:
          type: integer
          format: int32
        ctcolumnid:
          type: integer
          format: int32
        customTableId:
          type: integer
          format: int32
        userid:
          type: integer
          format: int32
        value:
          type: string
    CustomTableModel:
      title: CustomTableModel
      type: object
      properties:
        candidateAccess:
          type: string
        cid:
          type: integer
          format: int32
        createUserModel:
          $ref: '#/components/schemas/UserModel'
        createts:
          $ref: '#/components/schemas/Timestamp'
        ctColumnList:
          type: array
          items:
            $ref: '#/components/schemas/CustomTableColumnModel'
        ctValueList:
          type: array
          items:
            $ref: '#/components/schemas/CustomTableValueModel'
        customTableId:
          type: integer
          format: int32
        helpText:
          type: string
        objectType:
          type: string
        readAccess:
          type: string
        readUserGroupId:
          type: integer
          format: int32
        readUserGroupModel:
          $ref: '#/components/schemas/UserGroupModel'
        sequence:
          type: integer
          format: int32
        tableName:
          type: string
        userAccess:
          type: string
        writeAccess:
          type: string
        writeUserGroupId:
          type: integer
          format: int32
        writeUserGroupModel:
          $ref: '#/components/schemas/UserGroupModel'
    CustomTableValueModel:
      title: CustomTableValueModel
      type: object
      properties:
        candidateId:
          type: integer
          format: int32
        cid:
          type: integer
          format: int32
        createUserId:
          type: integer
          format: int32
        createts:
          $ref: '#/components/schemas/Timestamp'
        ctColumnValueList:
          type: array
          items:
            $ref: '#/components/schemas/CustomTableColumnValueModel'
        ctValueId:
          type: integer
          format: int32
        customTableId:
          type: integer
          format: int32
        userId:
          type: integer
          format: int32
        userModel:
          $ref: '#/components/schemas/UserViewModel'
    DepartmentModel:
      title: DepartmentModel
      type: object
      properties:
        description:
          type: string
        cid:
          type: integer
          format: int32
        departmentCode:
          type: string
        departmentId:
          type: integer
          format: int32
        departmentLabel:
          type: string
        deptHead:
          type: integer
          format: int32
        deptHeadName:
          type: string
        name:
          type: string
        noOfEmployees:
          type: integer
          format: int32
        parentDepartmentId:
          type: integer
          format: int32
        parentDepartmentName:
          type: string
        userModel:
          $ref: '#/components/schemas/UserViewModel'
    DynaFormSlimModel:
      title: DynaFormSlimModel
      type: object
      properties:
        description:
          type: string
        anonymous:
          type: integer
          format: int32
        attemptLimit:
          type: string
        availability:
          type: string
        cid:
          type: integer
          format: int32
        createUserModel:
          $ref: '#/components/schemas/UserModel'
        createUserViewModel:
          $ref: '#/components/schemas/UserViewModel'
        createts:
          $ref: '#/components/schemas/Timestamp'
        dataFlow:
          type: string
        dynaFormCode:
          type: string
        dynamicFormId:
          type: integer
          format: int32
        formType:
          type: string
        layout:
          type: string
        mappedEntity:
          type: string
        name:
          type: string
        presentationStyle:
          type: string
        publicSummary:
          type: boolean
        secSequence:
          type: string
        showCorrect:
          type: boolean
        status:
          type: string
        thresholdScore:
          type: number
          format: double
        timeLimit:
          type: integer
          format: int32
        updatets:
          $ref: '#/components/schemas/Timestamp'
        userGroupModel:
          $ref: '#/components/schemas/UserGroupModel'
    EducationModel:
      title: EducationModel
      type: object
      properties:
        cid:
          type: integer
          format: int32
        city:
          type: string
        countryId:
          type: integer
          format: int32
        course:
          type: string
        createts:
          $ref: '#/components/schemas/Timestamp'
        degree:
          type: string
        degreeId:
          type: integer
          format: int32
        degreeType:
          type: string
        educationId:
          type: integer
          format: int32
        endDate:
          type: string
          format: date
        expirationDate:
          type: string
          format: date
        gpa:
          type: string
        graduation:
          type: integer
          format: int32
        institution:
          type: string
        institutionId:
          type: integer
          format: int32
        isHighest:
          type: integer
          format: int32
        profileid:
          type: integer
          format: int32
        recruitid:
          type: integer
          format: int32
        startDate:
          type: string
          format: date
        state:
          type: string
        userId:
          type: integer
          format: int32
    EmploymentModel:
      title: EmploymentModel
      type: object
      properties:
        SOCCode:
          type: string
        cid:
          type: integer
          format: int32
        city:
          type: string
        countryId:
          type: integer
          format: int32
        createts:
          $ref: '#/components/schemas/Timestamp'
        custAppId:
          type: integer
          format: int32
        customFieldModelList:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldModel'
        department:
          type: string
        duties:
          type: string
        empId:
          type: integer
          format: int32
        employerName:
          type: string
        employerTypeBus:
          type: string
        employmentType:
          type: string
        endDate:
          type: string
          format: date
        naicscode:
          type: string
        position:
          type: string
        recruitid:
          type: integer
          format: int32
        soccode:
          type: string
        startDate:
          type: string
          format: date
        state:
          type: string
        userId:
          type: integer
          format: int32
    FinancialModel:
      title: FinancialModel
      type: object
      properties:
        AmountType:
          type: string
        amountChange:
          type: number
          format: double
        amountType:
          type: string
        cid:
          type: integer
          format: int32
        compensationType:
          type: string
        createUserId:
          type: integer
          format: int32
        currencyCode:
          type: string
        customFieldModelList:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldModel'
        effectivedate:
          type: string
          format: date
        enddate:
          type: string
          format: date
        financialId:
          type: integer
          format: int32
        financialType:
          type: string
        fincode:
          type: string
        guid:
          type: string
        notes:
          type: string
        period:
          type: string
        projectId:
          type: integer
          format: int32
        status:
          type: string
        userId:
          type: integer
          format: int32
        value:
          type: number
          format: double
    HRCalendarModel:
      title: HRCalendarModel
      type: object
      properties:
        calendarId:
          type: integer
          format: int32
        cid:
          type: integer
          format: int32
        colorCode:
          type: string
        createUserId:
          type: integer
          format: int32
        createUserViewModel:
          $ref: '#/components/schemas/UserViewModel'
        createts:
          $ref: '#/components/schemas/Timestamp'
        name:
          type: string
    LeaveModel:
      title: LeaveModel
      type: object
      required:
        - date
      properties:
        description:
          description: Description for the leave.
          type: string
        createUserViewModel:
          $ref: '#/components/schemas/UserViewModel'
        date:
          description: Date of the leave.
          type: string
          format: date
        endDateMeridiem:
          type: string
        meridiem:
          type: string
        numberOfDays:
          description: Number of days for which leave is requested.
          type: integer
          format: int32
        ptoPolicyModel:
          $ref: '#/components/schemas/PtoPolicyModel'
        totalLeaveDays:
          description: Total days of leave.
          type: number
          format: double
        totalLeaveHours:
          description: Total hours of leave.
          type: number
          format: double
        userModel:
          $ref: '#/components/schemas/UserModel'
    LocationModel:
      title: LocationModel
      type: object
      properties:
        address:
          type: string
        addressModelList:
          type: array
          items:
            $ref: '#/components/schemas/AddressModel'
        cid:
          type: integer
          format: int32
        createuserid:
          type: integer
          format: int32
        lattitude:
          type: string
        locationCode:
          type: string
        locationDescription:
          type: string
        locationId:
          type: integer
          format: int32
        locationLabel:
          type: string
        locationName:
          type: string
        locationType:
          type: string
        locationUID:
          type: string
        longitude:
          type: string
        parentLocationId:
          type: integer
          format: int32
        status:
          type: string
        workingDays:
          type: string
    ObjectAccessModel:
      title: ObjectAccessModel
      type: object
      properties:
        accessCode:
          type: string
        atchfolderid:
          type: integer
          format: int32
        atchid:
          type: integer
          format: int32
        cfid:
          type: integer
          format: int32
        cid:
          type: integer
          format: int32
        createTimestamp:
          $ref: '#/components/schemas/Timestamp'
        createUserId:
          type: integer
          format: int32
        departmentId:
          type: integer
          format: int32
        departmentModel:
          $ref: '#/components/schemas/DepartmentModel'
        locationId:
          type: integer
          format: int32
        locationModel:
          $ref: '#/components/schemas/LocationModel'
        objectAccessId:
          type: integer
          format: int32
        obtype:
          type: string
        userGroupId:
          type: integer
          format: int32
        userGroupModel:
          $ref: '#/components/schemas/UserGroupModel'
        userViewModel:
          $ref: '#/components/schemas/UserViewModel'
        userid:
          type: integer
          format: int32
    PositionApprovalLevelModel:
      title: PositionApprovalLevelModel
      type: object
      properties:
        approvalId:
          type: integer
          format: int32
        cid:
          type: integer
          format: int32
        createUserId:
          type: integer
          format: int32
        flowId:
          type: integer
          format: int32
        levelSequence:
          type: integer
          format: int32
        relationType:
          type: string
        userGroupModel:
          $ref: '#/components/schemas/UserGroupModel'
    PositionModel:
      title: PositionModel
      type: object
      properties:
        description:
          type: string
        accessLevel:
          type: string
        applicationDueDate:
          type: string
          format: date
        applicationFormId:
          type: integer
          format: int32
        approvalFlowId:
          type: integer
          format: int32
        approvalStatus:
          type: string
        assessmentFormId:
          type: integer
          format: int32
        assessmentTemplateId:
          type: integer
          format: int32
        candidatePositionModelList:
          type: array
          items:
            $ref: '#/components/schemas/CandidateApplicationsModel'
        cid:
          type: integer
          format: int32
        count:
          type: integer
          format: int32
        createDate:
          type: string
          format: date
        createUserId:
          type: integer
          format: int32
        customLocation:
          type: string
        dateClose:
          type: string
          format: date
        departmentId:
          type: integer
          format: int32
        funnelId:
          type: integer
          format: int64
        hiringManagerId:
          type: integer
          format: int32
        htmlTemplate:
          type: string
        isRecommended:
          type: boolean
        lastUpdatets:
          type: string
          format: date
        lastupdateuserid:
          type: integer
          format: int32
        locationModel:
          $ref: '#/components/schemas/LocationModel'
        locationid:
          type: integer
          format: int32
        name:
          type: string
        positionApprovalLevelList:
          type: array
          items:
            $ref: '#/components/schemas/PositionApprovalLevelModel'
        positionUID:
          type: string
        positionid:
          type: integer
          format: int32
        profileModel:
          $ref: '#/components/schemas/UserProfileModel'
        profileid:
          type: integer
          format: int32
        projectModel:
          $ref: '#/components/schemas/ProjectModel'
        projectid:
          type: integer
          format: int32
        recommended:
          type: boolean
        recruiterId:
          type: integer
          format: int32
        recruiterModel:
          $ref: '#/components/schemas/UserViewModel'
        requestApprovalId:
          type: integer
          format: int32
        requirements:
          type: string
        responsibilities:
          type: string
        seoUrl:
          type: string
        status:
          type: string
        totalcandidate:
          type: integer
          format: int32
        userName:
          type: string
        userViewModel:
          $ref: '#/components/schemas/UserViewModel'
        userapprovalList:
          type: array
          items:
            $ref: '#/components/schemas/UserPositionApprovalModel'
        id:
          type: integer
          format: int32
    ProjectGroupModel:
      title: ProjectGroupModel
      type: object
      properties:
        cid:
          type: integer
          format: int32
        groupDesc:
          type: string
        groupName:
          type: string
        pgroupid:
          type: integer
          format: int32
    ProjectModel:
      title: ProjectModel
      type: object
      properties:
        Probability:
          type: integer
          format: int32
        account:
          type: integer
          format: int32
        accountModel:
          $ref: '#/components/schemas/AccountModel'
        accountName:
          type: string
        billing_type:
          type: string
        cid:
          type: integer
          format: int32
        contactPerson:
          type: integer
          format: int32
        contactPersonName:
          type: string
        createts:
          $ref: '#/components/schemas/Timestamp'
        createuserid:
          type: integer
          format: int32
        endDate:
          type: string
          format: date
        groupName:
          type: string
        industry:
          type: string
        lastupdateuserid:
          type: integer
          format: int32
        locationid:
          type: integer
          format: int32
        pgroupid:
          type: integer
          format: int32
        pmMail:
          type: string
        probability:
          type: integer
          format: int32
        projProbability:
          type: integer
          format: int32
        projStatus:
          type: string
        projectDesc:
          type: string
        projectGroupModel:
          $ref: '#/components/schemas/ProjectGroupModel'
        projectId:
          type: integer
          format: int32
        projectName:
          type: string
        puid:
          type: string
        reportMethod:
          type: string
        shortCode:
          type: string
        startDate:
          type: string
          format: date
        status:
          type: string
        statusValue:
          type: string
        userModel:
          $ref: '#/components/schemas/UserViewModel'
        userModelList:
          type: array
          items:
            $ref: '#/components/schemas/UserModel'
    PtoPolicyApprovalFlowModel:
      title: PtoPolicyApprovalFlowModel
      type: object
      properties:
        description:
          type: string
        cid:
          type: integer
          format: int32
        createts:
          $ref: '#/components/schemas/Timestamp'
        flowId:
          type: integer
          format: int32
        flowName:
          type: string
        ptoPolicyApprovalModelList:
          type: array
          items:
            $ref: '#/components/schemas/PtoPolicyApprovalModel'
        ptoPolicyList:
          type: array
          items:
            type: string
    PtoPolicyApprovalModel:
      title: PtoPolicyApprovalModel
      type: object
      properties:
        approvalId:
          type: integer
          format: int32
        cid:
          type: integer
          format: int32
        createUserId:
          type: integer
          format: int32
        flowId:
          type: integer
          format: int32
        levelSequence:
          type: integer
          format: int32
        relationType:
          type: string
        skippable:
          type: integer
          format: int32
        userGroupModel:
          $ref: '#/components/schemas/UserGroupModel'
    PtoPolicyChainModel:
      title: PtoPolicyChainModel
      type: object
      properties:
        chainDesc:
          type: string
        chainId:
          type: integer
          format: int32
        chainName:
          type: string
        cid:
          type: integer
          format: int32
        createts:
          $ref: '#/components/schemas/Timestamp'
        hasPtoPolicies:
          type: boolean
    PtoPolicyModel:
      title: PtoPolicyModel
      type: object
      required:
        - ptoPolicyId
      properties:
        description:
          type: string
        accrualRateAnnual:
          type: number
          format: float
        accrualRateAnnualUnit:
          type: number
          format: double
        accrualRateHours:
          type: number
          format: float
        accrualRateUnit:
          type: number
          format: double
        accrualThresholdWeeks:
          type: integer
          format: int32
        accrualTime:
          type: integer
          format: int32
        accrualTimeSpan:
          type: string
        accrualtype:
          type: string
        allowAccrualRateOverride:
          type: integer
          format: int32
        allowRequestBeyondBal:
          type: integer
          format: int32
        applicability:
          type: integer
          format: int32
        bonus:
          type: number
          format: float
        bonusMax:
          type: number
          format: float
        carryoverDate:
          type: string
          format: date
        carryoverExpirationQuantity:
          type: integer
          format: int32
        carryoverExpirationUnit:
          type: string
        cid:
          type: integer
          format: int32
        createUserId:
          type: integer
          format: int32
        createts:
          $ref: '#/components/schemas/Timestamp'
        customIcon:
          type: string
        daysDefinition:
          type: string
        effectiveDate:
          type: string
          format: date
        expirationDate:
          type: string
          format: date
        halfDayAllowed:
          type: integer
          format: int32
        hasAssignment:
          type: boolean
        icon:
          type: string
        isAccrued:
          type: string
        lastRun:
          type: string
          format: date
        leaveType:
          type: string
        leaveYearStart:
          type: string
        leaveYearStartDate:
          type: string
          format: date
        nextRunDate:
          type: string
          format: date
        paid:
          type: integer
          format: int32
        policyName:
          type: string
        policycondition:
          type: string
        prorated:
          type: integer
          format: int32
        ptoPolicyApprovalFlowModel:
          $ref: '#/components/schemas/PtoPolicyApprovalFlowModel'
        ptoPolicyChainModel:
          $ref: '#/components/schemas/PtoPolicyChainModel'
        ptoPolicyChainSeqId:
          type: integer
          format: int32
        ptoPolicyId:
          type: integer
          format: int32
        rollOverMax:
          type: number
          format: double
        rollOverPercentage:
          type: number
          format: double
        showInCalendar:
          type: integer
          format: int32
        tenureThreshold:
          type: number
          format: float
        thresholdQuantity:
          type: integer
          format: int32
        thresholdUnit:
          type: string
        unit:
          type: string
    SkillModel:
      title: SkillModel
      type: object
      properties:
        description:
          type: string
        assessmentModel:
          $ref: '#/components/schemas/AssessmentModel'
        cid:
          type: integer
          format: int32
        createUserId:
          type: integer
          format: int32
        createts:
          type: string
          format: date
        sequence:
          type: integer
          format: int32
        skillCode:
          type: string
        skillId:
          type: integer
          format: int32
        skillTypeModel:
          $ref: '#/components/schemas/SkillTypeModel'
        skillTypeName:
          type: string
        status:
          type: string
        userSkillLevel:
          type: number
          format: float
    SkillTypeModel:
      title: SkillTypeModel
      type: object
      properties:
        cid:
          type: integer
          format: int32
        createUserId:
          type: integer
          format: int32
        createts:
          type: string
          format: date
        skillTypeDesc:
          type: string
        skillTypeId:
          type: integer
          format: int32
        skillTypeName:
          type: string
        skillViewModelList:
          type: array
          items:
            $ref: '#/components/schemas/SkillViewModel'
    SkillUserModel:
      title: SkillUserModel
      type: object
      properties:
        description:
          type: string
        candidateid:
          type: integer
          format: int32
        cid:
          type: integer
          format: int32
        createUserId:
          type: integer
          format: int32
        createts:
          $ref: '#/components/schemas/Timestamp'
        dateOfLastUse:
          type: string
          format: date
        lastUpdateUserModel:
          $ref: '#/components/schemas/UserModel'
        level:
          type: number
          format: float
        performancelevel:
          type: number
          format: float
        skillAcquireDate:
          type: string
          format: date
        skillCounsellor:
          type: boolean
        skillId:
          type: integer
          format: int32
        skillModel:
          $ref: '#/components/schemas/SkillModel'
        skillUserId:
          type: integer
          format: int32
        status:
          type: string
        targetLevel:
          type: number
          format: float
        targetLevelCreateUserId:
          type: integer
          format: int32
        targetLevelCreatets:
          $ref: '#/components/schemas/Timestamp'
        userId:
          type: integer
          format: int32
        weightage:
          type: number
          format: float
        yearsOfExperience:
          type: integer
          format: int32
    SkillViewModel:
      title: SkillViewModel
      type: object
      properties:
        description:
          type: string
        average:
          type: number
          format: double
        cid:
          type: integer
          format: int32
        scoreMax:
          type: number
          format: double
        scoreName:
          type: string
        scoreTemplateId:
          type: integer
          format: int32
        skillCode:
          type: string
        skillId:
          type: integer
          format: int32
        skillTypeId:
          type: integer
          format: int32
        skillTypeName:
          type: string
        socreMin:
          type: number
          format: double
        status:
          type: string
        userCount:
          type: integer
          format: int32
    StateCountryModel:
      title: StateCountryModel
      type: object
      properties:
        countryId:
          type: integer
          format: int32
        stateCode:
          type: string
        stateId:
          type: integer
          format: int32
        stateName:
          type: string
    Timestamp:
      title: Timestamp
      type: object
      properties:
        date:
          type: integer
          format: int32
        hours:
          type: integer
          format: int32
        minutes:
          type: integer
          format: int32
        month:
          type: integer
          format: int32
        nanos:
          type: integer
          format: int32
        seconds:
          type: integer
          format: int32
        time:
          type: integer
          format: int64
        year:
          type: integer
          format: int32
        day:
          type: integer
          format: int32
        timezoneOffset:
          type: integer
          format: int32
    TrainingModel:
      title: TrainingModel
      type: object
      properties:
        description:
          type: string
        approvalStatus:
          type: string
        assignedUsersCount:
          type: integer
          format: int32
        attachmentId:
          type: integer
          format: int32
        chargeType:
          type: string
        cid:
          type: integer
          format: int32
        city:
          type: string
        contentMandatory:
          type: integer
          format: int32
        contentURL:
          type: string
        country:
          type: string
        courseName:
          type: string
        createts:
          $ref: '#/components/schemas/Timestamp'
        currencyCode:
          type: string
        dynaFormSlimModel:
          $ref: '#/components/schemas/DynaFormSlimModel'
        endDate:
          type: string
          format: date
        externalSource:
          type: string
        externalTrainingId:
          type: integer
          format: int32
        guid:
          type: string
        hasCertificate:
          type: integer
          format: int32
        hours:
          type: number
          format: double
        institution:
          type: string
        institutionUrl:
          type: string
        isAssignedToCandidate:
          type: integer
          format: int32
        isAssignedToUser:
          type: integer
          format: int32
        isUserAssigned:
          type: boolean
        isactive:
          type: integer
          format: int32
        parentTrainingId:
          type: integer
          format: int32
        price:
          type: number
          format: double
        rating:
          type: number
          format: double
        selfAssign:
          type: integer
          format: int32
        startDate:
          type: string
          format: date
        state:
          type: string
        status:
          type: string
        studyCourse:
          type: string
        thumbnail:
          type: string
        trainingId:
          type: integer
          format: int32
        updateSkillLevel:
          type: integer
          format: int32
        url:
          type: string
        userAssigned:
          type: boolean
        videoUrl:
          type: string
    UserGroupModel:
      title: UserGroupModel
      type: object
      properties:
        description:
          type: string
        cid:
          type: integer
          format: int32
        createuserid:
          type: integer
          format: int32
        functionid:
          type: integer
          format: int32
        membershipGuidance:
          type: string
        updatets:
          $ref: '#/components/schemas/Timestamp'
        usergroupid:
          type: integer
          format: int32
        usergroupname:
          type: string
    UserModel:
      title: UserModel
      type: object
      required:
        - userId
      properties:
        addressModelList:
          type: array
          items:
            $ref: '#/components/schemas/AddressModel'
        adpAssociateOID:
          type: string
        allocation:
          type: number
          format: double
        appleUserIdentifier:
          type: string
        assignments:
          type: string
        awardModelList:
          type: array
          items:
            $ref: '#/components/schemas/AwardModel'
        bankAccountModel:
          $ref: '#/components/schemas/BankAccountModel'
        calWeekPref:
          type: string
        calendarId:
          type: integer
          format: int32
        calendarModel:
          $ref: '#/components/schemas/HRCalendarModel'
        candidateId:
          type: integer
          format: int32
        careerPathwayId:
          type: integer
          format: int32
        cellPhone:
          type: string
        cid:
          type: integer
          format: int32
        countryId:
          type: integer
          format: int32
        createts:
          $ref: '#/components/schemas/Timestamp'
        customFieldValueModelList:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldValueModel'
        customTableModelList:
          type: array
          items:
            $ref: '#/components/schemas/CustomTableModel'
        departmentModel:
          $ref: '#/components/schemas/DepartmentModel'
        departmentName:
          type: string
        displayFullName:
          type: string
        educationModelList:
          type: array
          items:
            $ref: '#/components/schemas/EducationModel'
        email:
          type: string
        empId:
          type: string
        employmentModelList:
          type: array
          items:
            $ref: '#/components/schemas/EmploymentModel'
        familySuffix:
          type: string
        financialModelList:
          type: array
          items:
            $ref: '#/components/schemas/FinancialModel'
        firstName:
          type: string
        gender:
          type: string
        guid:
          type: string
        hasAccess:
          type: boolean
        hrPortal:
          type: string
        im:
          type: string
        imageName:
          type: string
        isView:
          type: boolean
        jobGrade:
          type: string
        languagePreference:
          type: string
        lastName:
          type: string
        lastUpdateUsername:
          type: string
        lastupdatets:
          type: string
          format: date
        lastupdateuserid:
          type: integer
          format: int32
        licenseModelList:
          type: array
          items:
            $ref: '#/components/schemas/CertificationModel'
        locationModel:
          $ref: '#/components/schemas/LocationModel'
        mfaPreference:
          type: boolean
        mfaSecretKey:
          type: string
        middleName:
          type: string
        namePronunciation:
          type: string
        notifications:
          type: boolean
        paId:
          type: integer
          format: int32
        phone:
          type: string
        position:
          type: string
        prefixSalutation:
          type: string
        profileId:
          type: integer
          format: int32
        profileName:
          type: string
        projectModel:
          $ref: '#/components/schemas/ProjectModel'
        projectModelList:
          type: array
          items:
            $ref: '#/components/schemas/ProjectModel'
        ptoannual:
          type: number
          format: float
        ptobalance:
          type: number
          format: float
        qboPref:
          type: integer
          format: int32
        relativeDate:
          type: string
        reportsToListMap:
          type: object
          additionalProperties:
            type: string
        secondLastName:
          type: string
        shortName:
          type: string
        skillUserModelList:
          type: array
          items:
            $ref: '#/components/schemas/SkillUserModel'
        star:
          type: integer
          format: int32
        status:
          type: string
        stripeId:
          type: string
        supervisorModelList:
          type: array
          items:
            $ref: '#/components/schemas/UserThinModel'
        thumbnail:
          type: string
        timecardPeriodPref:
          type: string
        timezone:
          type: string
        tosVersion:
          type: string
        userCountry:
          type: string
        userDateFormat:
          type: string
        userDateOfBirth:
          type: string
          format: date
        userDisplayName:
          type: string
        userEndDate:
          type: string
          format: date
        userId:
          type: integer
          format: int32
        userNameFormat:
          type: string
        userProfileModel:
          $ref: '#/components/schemas/UserProfileModel'
        userStartDate:
          type: string
          format: date
        userTrainingModelList:
          type: array
          items:
            $ref: '#/components/schemas/UserTrainingModel'
        userType:
          type: string
        view:
          type: boolean
        workerType:
          type: string
        workerTypeModel:
          $ref: '#/components/schemas/WorkerTypeModel'
        workingDays:
          type: string
        userName:
          type: string
    UserPositionApprovalModel:
      title: UserPositionApprovalModel
      type: object
      properties:
        cid:
          type: integer
          format: int32
        positionId:
          type: integer
          format: int32
        position_approval_id:
          type: integer
          format: int32
        status:
          type: string
        userId:
          type: integer
          format: int32
        userViewModel:
          $ref: '#/components/schemas/UserViewModel'
    UserProfileModel:
      title: UserProfileModel
      type: object
      properties:
        cid:
          type: integer
          format: int32
        createuserid:
          type: integer
          format: int32
        customFieldValueModelList:
          type: array
          items:
            $ref: '#/components/schemas/CustomFieldValueModel'
        managerProfileId:
          type: integer
          format: int32
        managerProfileName:
          type: string
        orgId:
          type: integer
          format: int32
        profileDescription:
          type: string
        profileId:
          type: integer
          format: int32
        profileName:
          type: string
        profileRequirements:
          type: string
        profileResponsibilities:
          type: string
        salaryBandCurrency:
          type: string
        salaryBandMax:
          type: number
          format: double
        salaryBandMin:
          type: number
          format: double
        objectName:
          type: string
        objectType:
          type: string
        objectid:
          type: integer
          format: int32
    UserThinModel:
      title: UserThinModel
      type: object
      properties:
        adpAssociateOID:
          type: string
        careerPathwayId:
          type: integer
          format: int32
        cellPhone:
          type: string
        cid:
          type: integer
          format: int32
        countryId:
          type: integer
          format: int32
        createts:
          $ref: '#/components/schemas/Timestamp'
        departmentID:
          type: integer
          format: int32
        displayFullName:
          type: string
        email:
          type: string
        empId:
          type: string
        familySuffix:
          type: string
        firstName:
          type: string
        gender:
          type: string
        guid:
          type: string
        hrPortal:
          type: string
        im:
          type: string
        imageName:
          type: string
        jobGrade:
          type: string
        languagePreference:
          type: string
        lastName:
          type: string
        lastupdatets:
          type: string
          format: date
        lastupdateuserid:
          type: integer
          format: int32
        locationId:
          type: integer
          format: int32
        middleName:
          type: string
        paId:
          type: integer
          format: int32
        passcode:
          type: string
        phone:
          type: string
        position:
          type: string
        prefixSalutation:
          type: string
        profileId:
          type: integer
          format: int32
        ptoannual:
          type: number
          format: float
        ptobalance:
          type: number
          format: float
        relativeDate:
          type: string
        secondLastName:
          type: string
        shortName:
          type: string
        star:
          type: integer
          format: int32
        status:
          type: string
        stripeId:
          type: string
        thumbnail:
          type: string
        timecardPeriodPref:
          type: string
        timezone:
          type: string
        tosVersion:
          type: string
        userDateFormat:
          type: string
        userDisplayName:
          type: string
        userId:
          type: integer
          format: int32
        userNameFormat:
          type: string
        userStartDate:
          type: string
          format: date
        userType:
          type: string
        workerType:
          type: string
        workerTypeModel:
          $ref: '#/components/schemas/WorkerTypeModel'
        userName:
          type: string
    UserTrainingModel:
      title: UserTrainingModel
      type: object
      properties:
        assessmentScore:
          type: number
          format: double
        assignedByUserId:
          type: integer
          format: int32
        candidateModel:
          $ref: '#/components/schemas/CandidateModel'
        candidateid:
          type: integer
          format: int32
        cid:
          type: integer
          format: int32
        completionts:
          $ref: '#/components/schemas/Timestamp'
        coordinatorName:
          type: string
        createts:
          $ref: '#/components/schemas/Timestamp'
        dueDate:
          type: string
          format: date
        dynaFormAssignmentId:
          type: integer
          format: int32
        status:
          type: string
        testResult:
          type: string
        trainingCoordinator:
          type: integer
          format: int32
        trainingId:
          type: integer
          format: int32
        trainingModel:
          $ref: '#/components/schemas/TrainingModel'
        traininguserId:
          type: integer
          format: int32
        userModel:
          $ref: '#/components/schemas/UserViewModel'
        userid:
          type: integer
          format: int32
    UserViewModel:
      title: UserViewModel
      type: object
      properties:
        adpAssociateOID:
          type: string
        allocation:
          type: number
          format: double
        careerPathwayId:
          type: integer
          format: int32
        cellPhone:
          type: string
        cid:
          type: integer
          format: int32
        countryId:
          type: integer
          format: int32
        createuserid:
          type: integer
          format: int32
        department:
          type: string
        departmentId:
          type: integer
          format: int32
        email:
          type: string
        empId:
          type: string
        firstName:
          type: string
        gender:
          type: string
        guid:
          type: string
        hasAccess:
          type: integer
          format: int32
        im:
          type: string
        imageName:
          type: string
        jobTitle:
          type: string
        lastName:
          type: string
        location:
          type: string
        locationId:
          type: integer
          format: int32
        name:
          type: string
        notes:
          type: string
        phone:
          type: string
        profileId:
          type: integer
          format: int32
        profileName:
          type: string
        shortName:
          type: string
        star:
          type: integer
          format: int32
        status:
          type: string
        thumbnail:
          type: string
        timezone:
          type: string
        userDateFormat:
          type: string
        userDateOfBirth:
          type: string
          format: date
        userEndDate:
          type: string
          format: date
        userId:
          type: integer
          format: int32
        userStartDate:
          type: string
          format: date
        userType:
          type: string
        workerType:
          type: string
        id:
          type: integer
          format: int32
    WorkerTypeModel:
      title: WorkerTypeModel
      type: object
      properties:
        description:
          type: string
        cid:
          type: integer
          format: int32
        code:
          type: string
        createuserid:
          type: integer
          format: int32
        wtid:
          type: integer
          format: int32
    WorkflowModel:
      title: WorkflowModel
      type: object
      properties:
        description:
          type: string
        cid:
          type: integer
          format: int32
        createUser:
          type: integer
          format: int32
        createUserModel:
          $ref: '#/components/schemas/UserViewModel'
        createts:
          $ref: '#/components/schemas/Timestamp'
        duration:
          type: string
        objectType:
          type: string
        shortcut:
          type: boolean
        status:
          type: string
        visibility:
          type: string
        workflowId:
          type: integer
          format: int32
        workflowName:
          type: string
        workflowType:
          type: string
    arrayCustomFields:
      type: object
      items: {}
    CustomFields:
      title: ''
      type: object
      properties:
        customField1:
          type: string
        customField2:
          type: string
        customField3:
          type: string
    AppraisalModel:
      title: AppraisalModel
      type: object
      properties:
        description:
          type: string
        appraisalId:
          type: integer
          format: int32
        appraisalName:
          type: string
        appraisalType:
          type: string
        candidatePositionId:
          type: integer
          format: int64
        cid:
          type: integer
          format: int32
        completionDate:
          type: string
          format: date
        createUserId:
          type: integer
          format: int32
        createUserModel:
          $ref: '#/components/schemas/UserModel'
        createts:
          type: string
          format: date
        endDate:
          type: string
          format: date
        finalComment:
          type: string
        finalValue:
          type: number
          format: double
        finalValueStr:
          type: string
        managerId:
          type: integer
          format: int32
        managerUserModel:
          $ref: '#/components/schemas/UserModel'
        obtype:
          type: string
        preFinalComment:
          type: string
        preFinalValue:
          type: number
          format: double
        preFinalValueStr:
          type: string
        reviewMode:
          type: string
        saveForLater:
          type: integer
          format: int32
        scoreTemplateId:
          type: integer
          format: int32
        scoreTemplateModel:
          $ref: '#/components/schemas/AssessmentModel'
        showFinalValue:
          type: integer
          format: int32
        showWeightedTotal:
          type: integer
          format: int32
        startDate:
          type: string
          format: date
        status:
          type: string
        statusCode:
          type: string
        userId:
          type: integer
          format: int32
        userModel:
          $ref: '#/components/schemas/UserModel'
        userViewModel:
          $ref: '#/components/schemas/UserViewModel'
        workflowId:
          type: integer
          format: int32
    CustomListEntryModel:
      title: CustomListEntryModel
      type: object
      properties:
        cid:
          type: integer
          format: int32
        entryCode:
          type: string
        entryId:
          type: integer
          format: int32
        entryValue:
          type: string
        listId:
          type: integer
          format: int32
    CustomListModel:
      title: CustomListModel
      type: object
      properties:
        description:
          type: string
        cid:
          type: integer
          format: int32
        customListEntryModel:
          type: array
          items:
            $ref: '#/components/schemas/CustomListEntryModel'
        listId:
          type: integer
          format: int32
        listName:
          type: string
    DynaFormItemOptionModel:
      title: DynaFormItemOptionModel
      type: object
      properties:
        cid:
          type: integer
          format: int32
        createts:
          $ref: '#/components/schemas/Timestamp'
        dynaFormItemId:
          type: integer
          format: int32
        optionId:
          type: integer
          format: int32
        optionValue:
          type: string
    DynaFormSectionAssignmentModel:
      title: DynaFormSectionAssignmentModel
      type: object
      properties:
        assigneeRole:
          type: string
        cid:
          type: integer
          format: int32
        completedBy:
          $ref: '#/components/schemas/UserViewModel'
        createts:
          $ref: '#/components/schemas/Timestamp'
        dynaFormSectionAssignId:
          type: integer
          format: int32
        dynamicFormAssignmentModel:
          $ref: '#/components/schemas/DynamicFormAssignmentModel'
        dynamicFormSectionModel:
          $ref: '#/components/schemas/DynamicFormSectionModel'
        status:
          type: string
        userGroupModel:
          $ref: '#/components/schemas/UserGroupModel'
        userViewModel:
          $ref: '#/components/schemas/UserViewModel'
    DynamicFormAssignmentModel:
      title: DynamicFormAssignmentModel
      type: object
      properties:
        allowGrader:
          type: boolean
        assessmentScore:
          type: number
          format: double
        assignCandidateModel:
          $ref: '#/components/schemas/CandidateModel'
        assignUserModel:
          $ref: '#/components/schemas/UserModel'
        assignUserViewModel:
          $ref: '#/components/schemas/UserViewModel'
        assignmentId:
          type: integer
          format: int32
        cid:
          type: integer
          format: int32
        createUserModel:
          $ref: '#/components/schemas/UserModel'
        createUserViewModel:
          $ref: '#/components/schemas/UserViewModel'
        createts:
          $ref: '#/components/schemas/Timestamp'
        dueDate:
          type: string
          format: date
        dynaFormModel:
          $ref: '#/components/schemas/DynaFormSlimModel'
        dynaFormSectionAssignmentModel:
          type: array
          items:
            $ref: '#/components/schemas/DynaFormSectionAssignmentModel'
        formSummary:
          type: string
        graderUserModel:
          $ref: '#/components/schemas/UserModel'
        lastupdatets:
          $ref: '#/components/schemas/Timestamp'
        optedOutForEmail:
          type: boolean
        status:
          type: string
        testEndts:
          $ref: '#/components/schemas/Timestamp'
        testResult:
          type: string
        testStartts:
          $ref: '#/components/schemas/Timestamp'
        testTimeStatus:
          type: string
    DynamicFormItemModel:
      title: DynamicFormItemModel
      type: object
      properties:
        attachmentModel:
          $ref: '#/components/schemas/AttachmentModel'
        cid:
          type: integer
          format: int32
        correctFeedback:
          type: string
        createUserId:
          type: integer
          format: int32
        createts:
          $ref: '#/components/schemas/Timestamp'
        customListModel:
          $ref: '#/components/schemas/CustomListModel'
        dynaFormItemOptionModelList:
          type: array
          items:
            $ref: '#/components/schemas/DynaFormItemOptionModel'
        dynamicFormId:
          type: integer
          format: int32
        dynamicFormItemId:
          type: integer
          format: int32
        expectedValue:
          type: string
        fieldType:
          type: string
        fieldTypeItem:
          type: string
        helpText:
          type: string
        incorrectFeedback:
          type: string
        mandatory:
          type: integer
          format: int32
        mappedEntityItem:
          type: string
        name:
          type: string
        numberingStyle:
          type: string
        optionRandom:
          type: boolean
        optionValues:
          type: string
        sectionId:
          type: integer
          format: int32
        sequence:
          type: integer
          format: int32
        weightage:
          type: number
          format: double
    DynamicFormSectionModel:
      title: DynamicFormSectionModel
      type: object
      properties:
        description:
          type: string
        assignee:
          type: string
        assigneeModel:
          $ref: '#/components/schemas/UserModel'
        attachmentModel:
          $ref: '#/components/schemas/AttachmentModel'
        cid:
          type: integer
          format: int32
        createUserId:
          type: integer
          format: int32
        dynamicFormId:
          type: integer
          format: int32
        dynamicFormItemModelList:
          type: array
          items:
            $ref: '#/components/schemas/DynamicFormItemModel'
        hidden:
          type: boolean
        name:
          type: string
        sectionId:
          type: integer
          format: int32
        sequence:
          type: integer
          format: int32
        totalweightage:
          type: number
          format: double
        userGroupModel:
          $ref: '#/components/schemas/UserGroupModel'
    MailTemplateModel:
      title: MailTemplateModel
      type: object
      properties:
        title:
          type: string
        cid:
          type: integer
          format: int32
        communicationType:
          type: string
        createUserModel:
          $ref: '#/components/schemas/UserModel'
        createts:
          $ref: '#/components/schemas/Timestamp'
        footerAdditionalInfo:
          type: string
        footerCompanyAddress:
          type: boolean
        footerCompanyLogo:
          type: boolean
        footerContentAlignmnet:
          type: string
        headerAdditionalInfo:
          type: string
        headerCompanyAddress:
          type: boolean
        headerCompanyLogo:
          type: boolean
        headerContentAlignment:
          type: string
        lastupdatets:
          $ref: '#/components/schemas/Timestamp'
        message:
          type: string
        object:
          type: string
        subject:
          type: string
        systemUsage:
          type: string
        templateId:
          type: integer
          format: int32
    PositionStatusModel:
      title: PositionStatusModel
      type: object
      properties:
        cid:
          type: integer
          format: int32
        defaultStatus:
          type: boolean
        internalStatus:
          type: string
        statusId:
          type: integer
          format: int32
        statusName:
          type: string
    arrayTaskModel:
      type: object
      items:
        $ref: '#/components/schemas/TaskModel'
    TaskModel:
      title: TaskModel
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        appraisalId:
          type: integer
          format: int32
        assgnCandModel:
          $ref: '#/components/schemas/CandidateModel'
        assgnUserModel:
          $ref: '#/components/schemas/UserModel'
        assignedUserId:
          type: integer
          format: int32
        ci:
          type: boolean
        createUserId:
          type: integer
          format: int32
        createts:
          type: string
          format: date
        dueDate:
          type: string
          format: date
        lastEdit:
          type: string
        launchts:
          $ref: '#/components/schemas/Timestamp'
        phasename:
          type: string
        projectId:
          type: integer
          format: int32
        recruitId:
          type: integer
          format: int32
        relatedDynamicFormAssignmentModel:
          $ref: '#/components/schemas/DynamicFormAssignmentModel'
        releventAppraisalModel:
          $ref: '#/components/schemas/AppraisalModel'
        releventAttachmentModel:
          $ref: '#/components/schemas/AttachmentModel'
        releventUserTrainingModel:
          $ref: '#/components/schemas/UserTrainingModel'
        statusCode:
          type: string
        systemTask:
          type: integer
          format: int32
        taskId:
          type: integer
          format: int32
        taskUID:
          type: integer
          format: int32
        transitionName:
          type: string
        type:
          type: string
        userGroupModel:
          $ref: '#/components/schemas/UserGroupModel'
        userId:
          type: integer
          format: int32
        userModel:
          $ref: '#/components/schemas/UserModel'
        userWorkflowModel:
          $ref: '#/components/schemas/UserWorkflowModel'
        workflowParameterAssignmentModel:
          $ref: '#/components/schemas/WorkflowParameterAssignmentModel'
        workflowStepId:
          type: integer
          format: int64
        workflowStepModel:
          $ref: '#/components/schemas/WorkflowStepModel'
    UserWorkflowModel:
      title: UserWorkflowModel
      type: object
      properties:
        assignCandidateModel:
          $ref: '#/components/schemas/CandidateModel'
        assignPositionModel:
          $ref: '#/components/schemas/PositionModel'
        assignUserModel:
          $ref: '#/components/schemas/UserModel'
        cid:
          type: integer
          format: int32
        coordinatorUserViewModel:
          $ref: '#/components/schemas/UserViewModel'
        createTS:
          $ref: '#/components/schemas/Timestamp'
        createUserModel:
          $ref: '#/components/schemas/UserModel'
        launchStatus:
          type: string
        launchts:
          $ref: '#/components/schemas/Timestamp'
        optedOutForEmail:
          type: boolean
        statusCode:
          type: string
        userWorkflowId:
          type: integer
          format: int32
        workflowModel:
          $ref: '#/components/schemas/WorkflowModel'
        workflowProgress:
          type: number
          format: float
        workflowStatus:
          type: string
    WorkflowParameterAssignmentModel:
      title: WorkflowParameterAssignmentModel
      type: object
      properties:
        cid:
          type: integer
          format: int32
        paramName:
          type: string
        paramValue:
          type: string
        parameterModel:
          $ref: '#/components/schemas/WorkflowParameterModel'
        userWorkflowid:
          type: integer
          format: int32
        waParamId:
          type: integer
          format: int32
        workflowArgId:
          type: integer
          format: int32
    WorkflowParameterModel:
      title: WorkflowParameterModel
      type: object
      properties:
        cid:
          type: integer
          format: int32
        createts:
          $ref: '#/components/schemas/Timestamp'
        paramName:
          type: string
        paramType:
          type: string
        workflowArgId:
          type: integer
          format: int32
        workflowId:
          type: integer
          format: int32
    WorkflowStepModel:
      title: WorkflowStepModel
      type: object
      properties:
        appraisalModel:
          $ref: '#/components/schemas/AppraisalModel'
        assignee:
          type: string
        assigneeModel:
          $ref: '#/components/schemas/UserModel'
        attachmentModel:
          $ref: '#/components/schemas/AttachmentModel'
        cid:
          type: integer
          format: int32
        createUserId:
          type: integer
          format: int32
        dependentStepId:
          type: integer
          format: int32
        dependentStepModel:
          $ref: '#/components/schemas/WorkflowStepModel'
        dueDate:
          type: string
        dynamicFormModel:
          $ref: '#/components/schemas/DynaFormSlimModel'
        fieldToChange:
          type: string
        fromPositionStatusModel:
          $ref: '#/components/schemas/PositionStatusModel'
        mailTemplateModel:
          $ref: '#/components/schemas/MailTemplateModel'
        phaseId:
          type: integer
          format: int64
        relativeTo:
          type: string
        reqApproval:
          type: boolean
        sequence:
          type: integer
          format: int32
        stepDesc:
          type: string
        stepId:
          type: integer
          format: int64
        stepName:
          type: string
        stepType:
          type: string
        toPositionStatusModel:
          $ref: '#/components/schemas/PositionStatusModel'
        trainingModel:
          $ref: '#/components/schemas/TrainingModel'
        transitionName:
          type: string
        userGroupModel:
          $ref: '#/components/schemas/UserGroupModel'
        workflowParameterModel:
          $ref: '#/components/schemas/WorkflowParameterModel'
    LeavesAddPtoBalanceRequest:
      type: object
      required:
        - ptobalances
      properties:
        ptobalances:
          description: PTO Balance of user.
          type: string
    PeopleAndPermissionsCreateOrUpdateUserDetailsRequest:
      type: object
      properties:
        firstName:
          description: First name of user.
          type: string
        email:
          description: Mail ID of user.
          type: string
        lastName:
          description: Last name of user.
          type: string
        empId:
          description: Employee ID of the user.
          type: string
        gender:
          description: Gender of the user.
          type: string
        guid:
          description: The unique system generated ID of the user.
          type: string
        status:
          description: Status of the user. A - Active, I - Inactive, F - Future Joiner
          type: string
          enum:
            - A
            - I
            - F
        displayFullName:
          description: Display name of the user.
          type: string
        middleName:
          description: Middle name of user.
          type: string
        secondLastName:
          description: Second Last name of user.
          type: string
        shortName:
          description: Short name of user.
          type: string
        namePronunciation:
          description: Name Pronunciation
          type: string
        familySuffix:
          description: Family Suffix
          type: string
        workerType:
          description: Worker type of the user.
          type: string
        userDateOfBirth:
          description: Birth date of user.
          type: string
        phone:
          description: Phone number of the user.
          type: string
        cellPhone:
          description: Cell phone of the user.
          type: string
        position:
          description: Profile ID of the user.
          type: integer
          format: int32
        departmentID:
          description: Org Unit ID of the user.
          type: integer
          format: int32
        locationId:
          description: Location ID of the user.
          type: integer
          format: int32
        locationName:
          description: Location of user.
          type: string
        userStartDate:
          description: Start Date of user.
          type: string
        reportsToEmail:
          description: Managers detail of user.
          type: array
          items:
            type: string
        addressList:
          description: Address detail of user.
          type: array
          items:
            properties:
              addressLine1:
                type: string
              addressLine2:
                type: string
              addressType:
                type: string
                enum:
                  - Billing
                  - Home
                  - Mailing
                  - Permanent
                  - Physical
                  - Work
                  - Other
              zipCode:
                type: string
              city:
                type: string
              state:
                type: string
              countryId:
                description: Country Identifier (should be a number id).
                type: string
              extAppUID:
                type: string
              countryCode:
                description: Country ISO2 code.
                type: string
            type: object
        educationList:
          description: Education detail of user.
          type: array
          items:
            properties:
              course:
                description: Name of the course.
                type: string
              degree:
                description: Name of the degree.
                type: string
              institution:
                description: Name of the institution.
                type: string
              gpa:
                type: string
              state:
                description: Name of the state.
                type: string
              city:
                description: Name of the city.
                type: string
              countryId:
                description: Country Identifier (should be a number id).
                type: string
              countryCode:
                description: Country ISO2 code.
                type: string
              startDate:
                description: Start Date of the course.
                type: string
              endDate:
                description: End Date of the course.
                type: string
              extAppUID:
                type: string
            type: object
        contactList:
          description: Contact detail of user
          type: array
          items:
            properties:
              name:
                type: string
              lastName:
                type: string
              relationToUser:
                type: string
                enum:
                  - Spouse
                  - Parent
                  - Child
                  - Other
              contactType:
                type: string
                enum:
                  - DEP
                  - ECON
                  - ACCT
              gender:
                type: string
                enum:
                  - M
                  - F
                  - H
              taxNumber:
                type: string
              dateOfBirth:
                type: string
              status:
                type: string
                enum:
                  - AP
                  - WA
              extAppUID:
                type: string
            type: object
        financialList:
          description: Financial detail of user.
          type: array
          items:
            properties:
              value:
                type: number
                format: float
              period:
                description: >-
                  Time period for compensation. HRLY - Hourly, DLY - Daily, WKLY
                  - Weekly, BWKLY - Bi-Weekly, MTHLY - Monthly, BMTH -
                  Bi-Monthly, QTRLY - Quarterly, BYRLY - Bi-Yearly, YRLY -
                  Yearly, ONEF - OneOff
                type: string
                enum:
                  - HRLY
                  - DLY
                  - WKLY
                  - BWKLY
                  - BMTH
                  - MTHLY
                  - QTRLY
                  - BYRLY
                  - YRLY
                  - ONEF
              financialType:
                type: string
                enum:
                  - COMP
              currencyCode:
                type: string
              effectivedate:
                type: string
              compensationType:
                description: >-
                  Type of compensation. sal - Salary, pay - Compensation, INCTV
                  - Incentive, SVCR - Severance
                type: string
                enum:
                  - sal
                  - pay
                  - bonus
                  - INCTV
                  - SVRC
                  - other
              status:
                description: >-
                  Status of compensation. ACTV - Active, ARCHV - Archive, PVNL -
                  Provisional
                type: string
                enum:
                  - ACTV
                  - ARCHV
                  - PVNL
              changeTypeId:
                type: integer
                format: int32
              changeTypeCode:
                type: string
              extAppUID:
                type: string
            type: object
        customFieldValues:
          description: key - cfcode , value - cfvalue
          type: string
          format: json
    PeopleAndPermissionsUploadUserProfilePictureRequest:
      type: object
      required:
        - file
        - userid
      properties:
        file:
          description: Upload the profile picture here.
          type: string
          format: binary
        userid:
          description: The ID of the user whose profile picture has to be updated.
          type: string
    PeopleAndPermissionsSaveUserAddressRequest:
      type: object
      properties:
        RAW_BODY:
          type: array
          items:
            properties:
              addressLine1:
                type: string
              addressLine2:
                type: string
              addressType:
                type: string
              zipCode:
                type: string
                default: '121121'
              city:
                type: string
              countryId:
                description: Country Idenifier (should be a number id).
                type: string
              state:
                type: string
            type: object
    PeopleAndPermissionsSaveUserEducationRequest:
      type: object
      properties:
        RAW_BODY:
          type: array
          items:
            properties:
              course:
                description: Name of the course.
                type: string
                example: Business Administration and Management
              degree:
                description: Name of the degree.
                type: string
                format: string
                example: Bachelor of Liberal Arts (A.L.B.)
              institution:
                description: Name of the institution.
                type: string
                example: Harvard University
              gpa:
                type: string
                example: '98.5'
              state:
                description: Name of the state.
                type: string
                example: Massachusetts
              city:
                description: Name of the city.
                type: string
                example: Cambridge
              countryId:
                description: Country Idenifier (should be a number id).
                type: integer
                format: int32
                example: .nan
              startDate:
                description: Start Date of the course.
                type: string
                format: date
              endDate:
                description: End Date of the course.
                type: string
                format: date
            type: object
    PeopleAndPermissionsSaveUserEmploymentRequest:
      type: object
      properties:
        RAW_BODY:
          type: array
          items:
            properties:
              employerName:
                description: Name of the employer.
                type: string
              position:
                description: Position of the employer.
                type: string
              department:
                description: Department of the employer.
                type: string
              state:
                description: State of the employer.
                type: string
              startDate:
                description: Start Date of the employment.
                type: string
                format: date
              endDate:
                description: End Date of the employment.
                type: string
                format: date
              city:
                description: City of the employer.
                type: string
              countryId:
                description: Country Idenifier (should be a number id).
                type: string
            type: object
    PeopleAndPermissionsAddReportsToRequest:
      type: object
      properties:
        Add Objects:
          type: array
          items:
            properties:
              adpAssociateOID:
                type: string
              managerId:
                type: integer
                format: int32
              relationType:
                type: string
              startDate:
                type: string
                format: date
              endDate:
                type: string
                format: date
            type: object
    ProjectAssignUserAllocationRequest:
      type: object
      required:
        - projectId
        - userId
      properties:
        projectId:
          description: The ID of the project.
          type: integer
          format: int32
        userId:
          description: The ID of the user to whom the project should be assigned.
          type: integer
          format: int32
    ProjectCreateNewRequest:
      type: object
      required:
        - projectName
        - projectDesc
        - shortCode
        - startDate
      properties:
        projectName:
          description: Name of the project.
          type: string
          example: Machine Learning
        projectDesc:
          description: Description of the project.
          type: string
          example: The project relates to the machine learning services.
        shortCode:
          description: A unique short code to identify the project.
          type: string
          example: ML_007
        startDate:
          description: Start date of the project.
          type: string
          format: date
    SkillsCreateNewSkillRequest:
      type: object
      required:
        - description
        - skillCode
      properties:
        description:
          description: Description of the skill.
          type: string
        skillCode:
          description: The title of the skill.
          type: string
        assessmentModel:
          type: object
          required:
            - scoretemplateid
          properties:
            rangeModelList:
              type: array
              items:
                properties:
                  description:
                    description: Description of the range.
                    type: string
                  interpretation:
                    type: string
                  rangeMax:
                    description: Maximum range.
                    type: number
                    default: 0
                    format: float
                  rangeMin:
                    description: Minimum range.
                    type: number
                    default: 0
                    format: float
                  scoreTempId:
                    description: The ID of the assessment scale.
                    type: integer
                    default: 0
                    format: int32
                  strangeid:
                    type: integer
                    default: 0
                    format: int32
                type: object
            scoreMax:
              description: Maximum score of the assessment.
              type: number
              format: float
            scoreMin:
              description: Minimum score of the assessment.
              type: number
              format: float
            scoreName:
              description: Name of the score.
              type: string
            scoretemplateid:
              description: The ID of the assessment scale.
              type: integer
              format: int32
            status:
              description: |-
                Status of the assessment. 
                 A -Active, ARCHV -Archive
              type: string
              default: A
              enum:
                - A
                - ARCHV
        skillTypeModel:
          type: object
          required:
            - skillTypeId
          properties:
            createUserId:
              description: The ID of the user who is creating skill.
              type: integer
              format: int32
            skillTypeDesc:
              description: Description of the skill type.
              type: string
            skillTypeId:
              description: The ID of the assessment scale.
              type: integer
              format: int32
            skillTypeName:
              description: Name of the skill type.
              type: string
    ShiftsSaveShiftRequest:
      type: string
    CandidatesExtractPdfResumeRequest:
      type: object
      required:
        - file
      properties:
        file:
          description: The pdf resume of the candidate.
          type: string
          format: binary
    AuthenticationGetAccessTokenResponse:
      type: object
      properties:
        accessToken:
          type: string
          example: String
    AuthenticationGetAccessToken403Response:
      type: object
      properties:
        message:
          type: string
          example: forbidden
    AuthenticationGetAccessToken409Response:
      type: object
      properties:
        message:
          type: string
          example: failure
    AnnouncementCreateNewAnnouncementResponse:
      type: string
      example: |-
        {
          "annId": "int",
          "message": "Announcement Created Successfully.
        "
        }
    AnnouncementCreateNewAnnouncement401Response:
      type: string
      example: |-
        {
        "message": "Error while Authenticating User."
        }
    AnnouncementCreateNewAnnouncement409Response:
      type: string
      example: |-
        {
        "message": "Failure"
        }
    AnnouncementGetByIdResponse:
      type: string
      example: |-
        {
            "data": {
                "locationIdList": "object",
                "announcementModel": {
                    "annId": "int",
                    "title": "string",
                    "desciption": "string",
                    "url": "string",
                    "status": "string",
                    "cid": "int",
                    "createts": "int",
                    "userModel": {
                        "cid": "int",
                        "empId": "string",
                        "userId": "int",
                        "position": "string",
                        "firstName": "string",
                        "shortName": "string",
                        "lastName": "string",
                        "workerTypeModel": {
                            "wtid": "int",
                            "cid": "int",
                            "code": "string",
                            "description": "string",
                            "createuserid": "string"
                        },
                        "displayFullName": "string",
                        "userStartDate": "string",
                        "email": "string",
                        "cellPhone": "int",
                        "userName": "string",
                        "departmentModel": {
                            "departmentId": "int",
                            "name": "string",
                            "description": "string",
                            "deptHead": "int",
                            "cid": "int",
                            "departmentCode": "int",
                            "departmentLabel": "string",
                            "parentDepartmentId": "int",
                            "parentDepartmentName": "string",
                            "deptHeadName": "string",
                            "noOfEmployees": "int",
                            "userModel": {
                                "userId": "int",
                                "firstName": "string",
                                "lastName": "string",
                                "name": "string",
                                "phone": "int",
                                "email": "string",
                                "status": "string",
                                "shortName": "string",
                                "gender": "string",
                                "jobTitle": "string",
                                "departmentId": "int",
                                "department": "string",
                                "profileId": "int",
                                "profileName": "string",
                                "timezone": "string",
                                "userStartDate": "string",
                                "userEndDate": "date",
                                "cellPhone": "int",
                                "empId": "string",
                                "userDateOfBirth": "string",
                                "allocation": "int",
                                "userDateFormat": "date",
                                "star": "int",
                                "notes": "string",
                                "im": "int",
                                "createuserid": "int",
                                "cid": "int",
                                "guid": "string",
                                "hasAccess": "int",
                                "id": "int"
                            }
                        },
                        "prefixSalutation": "string",
                        "secondLastName": "string",
                        "middleName": "string",
                        "namePronunciation": "string",
                        "familySuffix": "string",
                        "status": "string",
                        "ptoannual": "int",
                        "ptobalance": "int",
                        "gender": "string",
                        "userDateOfBirth": "string",
                        "phone": "int",
                        "im": int,
                        "createts": "int",
                        "timezone": "string",
                        "practiceId": "int",
                        "imageName": "string",
                        "thumbnail": "string",
                        "profileId": "int",
                        "allocation": "int",
                        "countryId": "int",
                        "lastupdateuserid": "int",
                        "lastupdatets": "string",
                        "userDateFormat": "date",
                        "hrPortal": "string",
                        "userDisplayName": "string",
                        "star": "int",
                        "timecardPeriodPref": "string",
                        "languagePreference": "string",
                        "tosVersion": "string",
                        "guid": "string",
                        "jobGrade": "",
                        "paId": "int",
                        "calendarId": "int",
                        "hasAccess": "string",
                        "notifications": "boolean",
                        "locationModel": {
                            "locationId": "int",
                            "locationName": "string",
                            "cid": "int",
                            "locationDescription": "string",
                            "locationType": "string",
                            "address": "string",
                            "lattitude": "string",
                            "longitude": "string",
                            "locationUID": "string",
                            "status": "string",
                            "workingDays": "string",
                            "locationCode": "int",
                            "locationLabel": "string",
                            "parentLocationId": "string",
                            "createuserid": "int",
                            "addressModelList": [
                                {
                                    "addressId": "int",
                                    "addressLine1": "string",
                                    "addressLine2": "string",
                                    "city": "string",
                                    "currentStatus": "string",
                                    "state": "int",
                                    "zipCode": "int",
                                    "createts": "int",,
                                    "cid": "int",
                                    "userId": "string",
                                    "candidateId": "string",
                                    "addressType": "string",
                                    "locationId": "int",
                                    "contactId": "string",
                                    "countryId": int,
                                    "countryModel": {
                                        "countryId": "int"
                                        "countryName": "string",
                                        "iso2": "string"
                                    },
                                    "status": "string",
                                    "verificationStatus": "string",
                                    "custId": "string",
                                    "mapUrl": "string",
                                    "createUserId": "string",
                                    "extAppUID": "string",
                                    "countryid": "int"
                                }
                            ]
                        },
                        "practiceModel": {
                            "practiceId": "int",
                            "name": "string",
                            "description": "string",
                            "practiceHead": "int",
                            "userModel": {
                                "userId":"int",
                                "firstName": "string",
                                "lastName": "string",
                                "name": "string",
                                "phone": "int",
                                "email": "string",
                                "status": "string",
                                "shortName": "string",
                                "thumbnail": "string",
                                "gender": "string",
                                "jobTitle": "string",
                                "departmentId": "int",
                                "locationId": "int",
                                "department": "string",
                                "location": "string",
                                "profileId": "int",
                                "timezone": "string",
                                "userStartDate": "string",
                                "cellPhone": "int",
                                "empId": "string",
                                "userDateOfBirth": "string",
                                "allocation": "int",
                                "userDateFormat": "date",
                                "star": "int",
                                "imageName": "string",
                                "notes": "string",
                                "im": "int",
                                "createuserid": "int",
                                "countryId": "int",
                                "cid": "int",
                                "guid": "string",
                                "hasAccess": "int",
                                "calendarId": "int",
                                "id": "int"
                            },
                            "createts": "int",
                            "cid": "int",
                        },
                        "calendarModel": {
                            "calendarId": "int",
                            "name": "string",
                            "colorCode": "string",
                            "cid": "int",
                            "createUserId": "int",
                            "createts": "int",
                            "createUserViewModel": "string"
                        },
                        "isView": "boolean",
                        "view": "string"
                    },
                    "locationModel": "string",
                    "departmentModel": "string",
                    "annType": "string",
                    "expirationDate": "string",
                    "attachmentModel": "string",
                    "notificationPopup": "int"
                },
                "departmentIdList": [
                    "object"
                ]
            }
        }
    AnnouncementGetById401Response:
      type: string
      example: |-
        {
          "message": "Failure"
        }
    AnnouncementGetById409Response:
      type: string
      example: |-
        {
        "message": "Failure"
        }
    AnnouncementUpdateAnnouncementResponse:
      type: string
      example: |-
        {
          "message": "Announcement Edit Successfully."
        }
    AnnouncementUpdateAnnouncement401Response:
      type: string
      example: |-
        {
          "message": "Failure"
        }
    AnnouncementUpdateAnnouncement409Response:
      type: string
      example: |-
        {
        "message": "Failure"
        }
    AnnouncementGetAttachmentsByIdResponse:
      type: string
      example: |-
        {
          "data": [
            {
              "attachid": "int",
              "atchType": "string",
              "fileExtn": "string",
              "s3id": "int",
              "filename": "int",
              "authkey": "string",
              "projectid": "int",
              "cid": "int",
              "createuserid": "int",
              "size": "int",
              "candidateid": "int",
              "positionid": "string",
              "ruleid": "int",
              "comments": "string",
              "createts": "int",
              "userid": "int",
              "attachUserModel": "object",
              "userModel": {
                "cid": "int",
                "empId": "string",
                "userId": "int",
                "position": "string",
                "firstName": "string",
                "shortName": "string",
                "lastName": "string",
                "displayFullName": "string",
                "userStartDate": "date",
                "email": "string",
                "cellPhone": "int",
                "userName": "string",
                "userProfileModel": {
                  "cid": "int",
                  "profileId": "int",
                  "profileName": "string",
                  "profileDescription": "string",
                  "orgId": "int",
                  "profileResponsibilities": "string",
                  "profileRequirements": "string",
                  "salaryBandMin": "double",
                  "salaryBandMax": "double",
                  "salaryBandCurrency": "string",
                  "managerProfileId": "int",
                  "managerProfileName": "string",
                  "customFieldValueModelList": "object",
                  "numberofUsers": "int",
                  "createuserid": "int",
                  "status": "string",
                  "careerPathwayModelList": "object",
                  "objectType": "string",
                  "objectName": "string",
                  "objectid": "int"
                },
                "departmentModel": {
                  "departmentId": "int",
                  "name": "string",
                  "description": "string",
                  "deptHead": "int",
                  "cid": "int",
                  "departmentCode": "int",
                  "departmentLabel": "string",
                  "parentDepartmentId": "int",
                  "parentDepartmentName": "string",
                  "deptHeadName": "string",
                  "noOfEmployees": "int",
                  "userModel": "object"
                },
                "prefixSalutation": "string",
                "secondLastName": "string",
                "middleName": "string",
                "namePronunciation": "string",
                "familySuffix": "string",
                "status": "string",
                "ptoannual": "int",
                "ptobalance": "int",
                "gender": "string",
                "phone": "int",
                "im": "int",
                "createts": "int",
                "timezone": "string",
                "practiceId": "int",
                "imageName": "string",
                "thumbnail": "string",
                "profileId": "int",
                "allocation": "int",
                "lastupdateuserid": "int",
                "lastupdatets": "date",
                "userDateFormat": "date",
                "hrPortal": "string",
                "userDisplayName": "string",
                "star": "int",
                "timecardPeriodPref": "string",
                "languagePreference": "string",
                "tosVersion": "string",
                "guid": "string",
                "jobGrade": "string",
                "hasAccess": "boolean",
                "notifications": "boolean",
                "isView": "boolean",
                "view": "string"
              },
              "projectModel": "object",
              "objectType": "int",
              "documentType": "string",
              "signStatus": "string",
              "signatureId": "int",
              "taskId": "int",
              "goalid": "int",
              "assetid": "int",
              "expenseid": "int",
              "expenseItemId": "int",
              "appraisalItemResponseId": "int",
              "appraisalAssignmentId": "int",
              "payStubId": "int",
              "signingDate": "date",
              "signatureRequestId": "int",
              "folder": "string",
              "folderId": "int",
              "attachmentFolderModel": "object",
              "topic": "string",
              "annId": "int",
              "timecardid": "int",
              "customerId": "int",
              "leaveid": "int",
              "ticketId": "int",
              "trainingId": "int",
              "access": "string",
              "userGroupModel": "object",
              "objectAccessModelList": "object",
              "documentContent": "string",
              "documnetIssueDate": "date",
              "documentExpiryDate": "date",
              "dLIssueDate": "date",
              "dLExpiryDate": "date",
              "signNowTemplateId": "int",
              "signNowDocId": "int",
              "stateCountryModel": "object",
              "userAccess": "string",
              "language": "string",
              "obtype": "string",
              "multiSigning": "int",
              "isPdfFiller": "int",
              "skilluserId": "int",
              "appraisalid": "int",
              "status": "string",
              "candidateAccess": "boolean",
              "category": "string",
              "secondSignerName": "string",
              "global": "boolean",
              "resume": "boolean"
            }
          ],
          "message": "success"
        }
    AnnouncementGetAttachmentsById401Response:
      type: string
      example: |-
        {
          "message": "Failure"
        }
    AnnouncementGetAttachmentsById409Response:
      type: string
      example: |-
        {
        "message": "Failure"
        }
    CandidatesGetResponse:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              recruitId:
                type: string
                example: int
              name:
                type: string
                example: string
              referrerId:
                type: string
                example: int
              referrer:
                type: string
                example: string
              recruiter:
                type: string
                example: string
              score:
                type: string
                example: int
              updatedOn:
                type: string
                example: int
              status:
                type: string
                example: string
              notes:
                type: string
                example: string
              dateOfBirth:
                type: string
                example: int
              joiningDate:
                type: string
                example: int
              cid:
                type: string
                example: int
              email:
                type: string
                example: string
              phone:
                type: string
                example: int
              createts:
                type: string
                example: int
              templateId:
                type: string
                example: int
              recruiterUserId:
                type: string
                example: int
              workflowId:
                type: string
                example: int
              statusid:
                type: string
                example: int
              workflowModel:
                type: string
                example: model
              candidateStatusModel:
                type: string
                example: model
              assessmentModel:
                type: string
                example: model
              workflowName:
                type: string
                example: string
              employmentModelList:
                type: string
                example: string
              educationModelList:
                type: string
                example: string
              customFieldValueModelList:
                type: string
                example: string
              addressModelList:
                type: string
                example: string
              skillModelList:
                type: string
                example: list
              positionName:
                type: string
                example: string
              candidatePositionsModelList:
                type: array
                items:
                  type: object
                  properties:
                    candidatePositionsId:
                      type: string
                      example: int
                    candidateId:
                      type: string
                      example: int
                    positionid:
                      type: string
                      example: int
                    positionName:
                      type: string
                      example: string
                    positionDescription:
                      type: string
                      example: string
                    responsibilities:
                      type: string
                      example: string
                    positionDepartmentId:
                      type: string
                      example: int
                    positionLocationId:
                      type: string
                      example: int
                    positionProjectId:
                      type: string
                      example: int
                    positionProfileId:
                      type: string
                      example: int
                    count:
                      type: string
                      example: int
                    positioncreatets:
                      type: string
                      example: int
                    positionStatusOpenClosed:
                      type: string
                      example: string
                    applicationDueDate:
                      type: string
                      example: int
                    applicationStatusId:
                      type: string
                      example: int
                    applicationStatusValue:
                      type: string
                      example: int
                    sequence:
                      type: string
                      example: string
                    colorcode:
                      type: string
                      example: int
                    systemReco:
                      type: string
                      example: string
                    systemRecoHelp:
                      type: string
                      example: string
                    candidatePositionCreateTs:
                      type: string
                      example: int
                    cid:
                      type: string
                      example: int
                    appliedPositions:
                      type: string
                      example: string
                    status:
                      type: string
                      example: string
              createuserid:
                type: string
                example: int
              lastupdateuserid:
                type: string
                example: int
              accessCode:
                type: string
                example: int
              source:
                type: string
                example: string
              passwordHash:
                type: string
                example: string
              acceptance1:
                type: string
                example: string
              acceptance2:
                type: string
                example: string
              summaryByCandidate:
                type: string
                example: string
              systemReco:
                type: string
                example: string
              systemRecoHelp:
                type: string
                example: string
              candidateLock:
                type: string
                example: int
              salaryCurrencyCode:
                type: string
                example: int
              salaryAmount:
                type: string
                example: int
              educationStr:
                type: string
                example: string
              languagePreference:
                type: string
                example: string
              userId:
                type: string
                example: int
              verified:
                type: string
                example: string
              verificationCode:
                type: string
                example: int
              isInternalCand:
                type: string
                example: string
              isNewCand:
                type: string
                example: string
              timezone:
                type: string
                example: string
              trainingAccess:
                type: string
                example: string
              customfieldvalue:
                type: string
                example: string
              cloudSearchSync:
                type: string
                example: int
              jobBoardAccess:
                type: string
                example: string
              bgScreeningOrderGuid:
                type: string
                example: string
              bgScreeningOrderCreateDate:
                type: string
                example: int
              checkrCandidateId:
                type: string
                example: int
              positionModel:
                type: string
                example: model
              certificationModelList:
                type: string
                example: string
              attachmentModelList:
                type: string
                example: string
        message:
          type: string
          example: successful
    CandidatesGet401Response:
      type: object
      properties:
        message:
          type: string
          example: unauthorized
    CandidatesSubmitNewCandidateResponse:
      type: object
      properties:
        data:
          type: string
          example: int
        message:
          type: string
          example: successful
    CandidatesSubmitNewCandidate401Response:
      type: object
      properties:
        message:
          type: string
          example: unauthorized
    CandidatesSubmitNewCandidate409Response:
      type: object
      properties:
        message:
          type: string
          example: Another candidate with the same email address already exists.
    CandidatesGetCandidateDetailByRecruitidResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            recruitId:
              type: string
              example: int
            name:
              type: string
              example: string
            referrerId:
              type: string
              example: int
            referrer:
              type: string
              example: string
            recruiter:
              type: string
              example: string
            score:
              type: string
              example: string
            updatedOn:
              type: string
              example: int
            status:
              type: string
              example: string
            notes:
              type: string
              example: string
            dateOfBirth:
              type: string
              example: int
            joiningDate:
              type: string
              example: int
            cid:
              type: string
              example: int
            email:
              type: string
              example: string
            phone:
              type: string
              example: int
            createts:
              type: string
              example: int
            templateId:
              type: string
              example: int
            recruiterUserId:
              type: string
              example: int
            workflowId:
              type: string
              example: int
            statusid:
              type: string
              example: int
            workflowModel:
              type: string
              example: Model
            candidateStatusModel:
              type: string
              example: Model
            assessmentModel:
              type: string
              example: Model
            workflowName:
              type: string
              example: string
            employmentModelList:
              type: string
              example: ModelList
            educationModelList:
              type: string
              example: ModelList
            customFieldValueModelList:
              type: string
              example: ModelList
            addressModelList:
              type: string
              example: ModelList
            skillModelList:
              type: string
              example: ModelList
            positionName:
              type: string
              example: string
            candidatePositionsModelList:
              type: string
              example: ModelList
            createuserid:
              type: string
              example: int
            lastupdateuserid:
              type: string
              example: int
            accessCode:
              type: string
              example: int
            source:
              type: string
              example: int
            passwordHash:
              type: string
              example: string
            acceptance1:
              type: string
              example: string
            acceptance2:
              type: string
              example: string
            summaryByCandidate:
              type: string
              example: string
            systemReco:
              type: string
              example: string
            systemRecoHelp:
              type: string
              example: string
            candidateLock:
              type: string
              example: int
            salaryCurrencyCode:
              type: string
              example: int
            salaryAmount:
              type: string
              example: int
            educationStr:
              type: string
              example: string
            languagePreference:
              type: string
              example: string
            userId:
              type: string
              example: int
            verified:
              type: string
              example: string
            verificationCode:
              type: string
              example: int
            isInternalCand:
              type: string
              example: string
            isNewCand:
              type: string
              example: string
            timezone:
              type: string
              example: string
            trainingAccess:
              type: string
              example: string
            customfieldvalue:
              type: string
              example: string
            cloudSearchSync:
              type: string
              example: int
            jobBoardAccess:
              type: string
              example: string
            bgScreeningOrderGuid:
              type: string
              example: int
            bgScreeningOrderCreateDate:
              type: string
              example: int
            checkrCandidateId:
              type: string
              example: int
            positionModel:
              type: string
              example: Model
            certificationModelList:
              type: string
              example: ModelList
            attachmentModelList:
              type: string
              example: ModelList
        message:
          type: string
          example: successful
    CandidatesGetCandidateDetailByRecruitid404Response:
      type: object
      properties:
        message:
          type: string
          example: not found
    CandidatesGetCandidateDetailByRecruitid409Response:
      type: object
      properties:
        message:
          type: string
          example: failure
    CandidatesGetBasicDetailsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              recruitId:
                type: string
                example: int
              name:
                type: string
                example: string
              email:
                type: string
                example: string
              phone:
                type: string
                example: int
              dateOfBirth:
                type: string
                example: int
              statusid:
                type: string
                example: int
              referrerId:
                type: string
                example: int
              createts:
                type: string
                example: int
              notes:
                type: string
                example: string
              source:
                type: string
                example: API
              userid:
                type: string
                example: int
              recruiterUserId:
                type: string
                example: int
              summaryByCandidate:
                type: string
                example: string
              candidateLock:
                type: string
                example: int
              educationStr:
                type: string
                example: string
              status:
                type: string
                example: string
              appliedPositions:
                type: string
                example: string
              updatedOn:
                type: string
                example: int
              cid:
                type: string
                example: int
              tagIds:
                type: string
                example: int
              statusColor:
                type: string
                example: string
              appliedPositionIds:
                type: string
                example: int
              appliedPositionUids:
                type: string
                example: int
              recruiterThumbnail:
                type: string
                example: string
              recruiterName:
                type: string
                example: string
              recruiterGender:
                type: string
                example: string
              referrerName:
                type: string
                example: string
              isInternalCand:
                type: string
                example: string
              applicationStatus:
                type: string
                example: string
              verified:
                type: string
                example: string
              positionNameList:
                type: string
                example: string
              internalCandidate:
                type: string
                example: string
        message:
          type: string
          example: successful
        editPermission:
          type: boolean
          example: true
          default: true
    CandidatesGetBasicDetails404Response:
      type: object
      properties:
        message:
          type: string
          example: not found
    CandidatesGetBasicDetails409Response:
      type: object
      properties:
        message:
          type: string
          example: failure
    CustomFieldsGetByIdResponse:
      type: object
      properties:
        data:
          type: object
          properties:
            customFieldId:
              type: string
              example: int
            customFieldName:
              type: string
              example: String
            customFieldType:
              type: string
              example: String
            objectType:
              type: string
              example: String
            sequence:
              type: string
              example: int
            cid:
              type: string
              example: int
            fieldType:
              type: string
              example: String
            defaultValue:
              type: string
              example: String
            cfcode:
              type: string
              example: String
            cfgroupid:
              type: string
              example: int
            style:
              type: string
              example: String
            opValues:
              type: string
              example: String
            fieldFormula:
              type: string
              example: String
            customFieldValueModel:
              type: string
              example: object
            customFieldValueModelList:
              type: array
              items:
                type: object
                properties:
                  customFieldValueId:
                    type: string
                    example: int
                  customFieldId:
                    type: string
                    example: int
                  customFieldValue:
                    type: string
                    example: String
                  customFieldObjectId:
                    type: string
                    example: int
                  cid:
                    type: string
                    example: int
                  createUserId:
                    type: string
                    example: int
                  customfieldName:
                    type: string
                    example: String
            customFieldGroupModel:
              type: object
              properties:
                cfgroupid:
                  type: string
                  example: int
                cfgroupname:
                  type: string
                  example: String
                cid:
                  type: string
                  example: int
                objectType:
                  type: string
                  example: String
                access:
                  type: string
                  example: String
                layout:
                  type: string
                  example: String
                usergroupid:
                  type: string
                  example: int
                createts:
                  type: integer
                  example: 1661411259000
                  default: 0
                sequence:
                  type: string
                  example: int
                hasCustomFields:
                  type: string
                  example: boolean
            objectAccessModel:
              type: string
              example: object
            access:
              type: string
              example: String
            userGroupId:
              type: string
              example: int
            candidateAccess:
              type: string
              example: String
            userAccess:
              type: string
              example: String
            managerAccess:
              type: string
              example: String
            integrationTypeId:
              type: string
              example: String
            helpText:
              type: string
              example: String
            createUserId:
              type: string
              example: int
            createts:
              type: integer
              example: 1648203997000
              default: 0
            customFieldStyleModel:
              type: string
              example: object
            readAccessTypeCode:
              type: string
              example: int
            readUserGroupId:
              type: string
              example: int
            mandatory:
              type: string
              example: int
            masked:
              type: string
              example: int
        message:
          type: string
          example: success
    CustomFieldsGetById401Response:
      type: object
      properties:
        message:
          type: string
          example: Exception while authenticating user.
    CustomFieldsGetById409Response:
      type: object
      properties:
        message:
          type: string
          example: failure
    CustomFieldsGetCustomFieldsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              customFieldId:
                type: string
                example: int
              customFieldName:
                type: string
                example: String
              customFieldType:
                type: string
                example: String
              objectType:
                type: string
                example: String
              sequence:
                type: string
                example: int
              cid:
                type: string
                example: int
              fieldType:
                type: string
                example: String
              defaultValue:
                type: string
                example: String
              cfcode:
                type: string
                example: String
              cfgroupid:
                type: string
                example: int
              style:
                type: string
                example: String
              opValues:
                type: string
                example: String
              fieldFormula:
                type: string
                example: String
              customFieldValueModel:
                type: string
                example: object
              customFieldValueModelList:
                type: array
                items:
                  type: object
                  properties:
                    customFieldValueId:
                      type: string
                      example: int
                    customFieldId:
                      type: string
                      example: int
                    customFieldValue:
                      type: string
                      example: String
                    customFieldObjectId:
                      type: string
                      example: int
                    cid:
                      type: string
                      example: int
                    createUserId:
                      type: string
                      example: int
                    customfieldName:
                      type: string
                      example: String
              customFieldGroupModel:
                type: object
                properties:
                  cfgroupid:
                    type: string
                    example: int
                  cfgroupname:
                    type: string
                    example: String
                  cid:
                    type: string
                    example: int
                  objectType:
                    type: string
                    example: String
                  access:
                    type: string
                    example: String
                  layout:
                    type: string
                    example: String
                  usergroupid:
                    type: string
                    example: int
                  createts:
                    type: integer
                    example: 1661411259000
                    default: 0
                  sequence:
                    type: string
                    example: int
                  hasCustomFields:
                    type: string
                    example: boolean
              objectAccessModel:
                type: string
                example: object
              access:
                type: string
                example: String
              userGroupId:
                type: string
                example: int
              candidateAccess:
                type: string
                example: String
              userAccess:
                type: string
                example: String
              managerAccess:
                type: string
                example: String
              integrationTypeId:
                type: string
                example: String
              helpText:
                type: string
                example: String
              createUserId:
                type: string
                example: int
              createts:
                type: integer
                example: 1648203997000
                default: 0
              customFieldStyleModel:
                type: string
                example: object
              readAccessTypeCode:
                type: string
                example: int
              readUserGroupId:
                type: string
                example: int
              mandatory:
                type: string
                example: int
              masked:
                type: string
                example: int
        message:
          type: string
          example: success
    CustomFieldsGetCustomFields401Response:
      type: object
      properties:
        message:
          type: string
          example: Exception while authenticating user.
    CustomFieldsGetCustomFields409Response:
      type: object
      properties:
        message:
          type: string
          example: failure
    CustomFieldsGetValueResponse:
      type: object
      properties:
        customFieldValueId:
          type: string
          example: int
        customFieldId:
          type: string
          example: int
        customFieldObjectId:
          type: string
          example: string
        cid:
          type: string
          example: int
        createUserId:
          type: string
          example: int
        customfieldName:
          type: string
          example: string
    CustomFieldsGetValue401Response:
      type: object
      properties:
        message:
          type: string
          example: Exception while authenticating user.
    CustomFieldsGetValue409Response:
      type: object
      properties:
        message:
          type: string
          example: failure
    CustomFieldsUpdateValueResponse:
      type: object
      properties:
        message:
          type: string
          example: string
    CustomFieldsUpdateValue401Response:
      type: object
      properties:
        message:
          type: string
          example: Exception while authenticating user.
    CustomFieldsUpdateValue409Response:
      type: object
      properties:
        message:
          type: string
          example: failure
    CustomFieldsGetCustomListsResponse:
      type: array
      items:
        type: object
        properties:
          description:
            type: string
            example: String
          listId:
            type: string
            example: int
          customListEntryModel:
            type: array
            items:
              type: object
              properties:
                entryId:
                  type: string
                  example: int
                entryCode:
                  type: string
                  example: String
                entryValue:
                  type: string
                  example: String
                listId:
                  type: string
                  example: int
                cid:
                  type: string
                  example: int
          listName:
            type: string
            example: String
          cid:
            type: string
            example: int
    CustomFieldsGetCustomLists401Response:
      type: object
      properties:
        message:
          type: string
          example: Exception while authenticating user.
    CustomFieldsGetCustomLists409Response:
      type: object
      properties:
        message:
          type: string
          example: failure
    DependentsDeleteByContactIdResponse:
      type: object
      properties:
        message:
          type: string
          example: User Contact deleted successfully.
    DependentsDeleteByContactId404Response:
      type: object
      properties:
        message:
          type: string
          example: User Dependent Contact not found
    DependentsDeleteByContactId409Response:
      type: object
      properties:
        message:
          type: string
          example: failure
    DocumentLibraryGetDocumentAsByteArrayResponse:
      type: object
      properties:
        code:
          type: integer
          example: 1
          default: 0
        data:
          type: string
          example: string
        message:
          type: string
          example: successful
    DocumentLibraryGetDocumentAsByteArray409Response:
      type: object
      properties:
        code:
          type: integer
          example: -1
          default: 0
        message:
          type: string
          example: failure
    DocumentLibraryGetAttachmentsResponse:
      type: string
      example: |-
        {
          "code": 1,
          "data": [
            {
              "attachid": "int",
              "atchType": "string",
              "fileExtn": "string",
              "s3id": "string",
              "filename": "string",
              "authkey": "string",
              "projectid": "int",
              "cid": "int",
              "createuserid": "int",
              "size": "int",
              "candidateid": "int",
              "positionid": "int",
              "ruleid": "int",
              "comments": "string",
              "createts": "int",
              "userid": "int",
              "attachUserModel": "object",
              "userModel": "object",
              "projectModel": "object",
              "objectType": "string",
              "documentType": "string",
              "signStatus": "string",
              "signatureId": "int",
              "taskId": "int",
              "goalid": "int",
              "assetid": "int",
              "expenseid": "int",
              "expenseItemId": "int",
              "appraisalItemResponseId": "int",
              "appraisalAssignmentId": "int",
              "payStubId": "int",
              "signingDate": "string",
              "signatureRequestId": "int",
              "folder": "string",
              "folderId": "int",
              "attachmentFolderModel": "object",
              "topic": "string",
              "annId": "int",
              "timecardid": "int",
              "customerId": "int",
              "leaveid": "int",
              "ticketId": "int",
              "trainingId": "int",
              "access": "string",
              "userGroupModel": "object",
              "objectAccessModelList": "list",
              "documentContent": "string",
              "documnetIssueDate": "string",
              "documentExpiryDate": "string",
              "dLIssueDate": "string",
              "dLExpiryDate": "string",
              "signNowTemplateId": "int",
              "signNowDocId": "int",
              "stateCountryModel": "object",
              "userAccess": "boolean",
              "licenseId": "int",
              "educationId": "int",
              "language": "en",
              "obtype": "string",
              "multiSigning": "int",
              "isPdfFiller": "int",
              "skilluserId": "int",
              "appraisalid": "int",
              "status": "string",
              "candidateAccess": "boolean",
              "category": "string",
              "secondSignerName": "string",
              "global": "boolean",
              "resume": "boolean"
            },
          ],
          "message": "success"
        }
    DocumentLibraryGetAttachments409Response:
      type: object
      properties:
        message:
          type: string
          example: failure
    ExpenseReportsGetCurrenciesResponse:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              currencyId:
                type: string
                example: int
              currencyCode:
                type: string
                example: string
              currencyName:
                type: string
                example: string
              cid:
                type: string
                example: int
        message:
          type: string
          example: success
    ExpenseReportsGetCurrencies400Response:
      type: object
      properties: {}
    ExpenseReportsGetReportDetailsResponse:
      type: string
      example: |-
        {
            "expenseReportId": "int",
            "name": "string",
            "description": "string",
            "userId": "int",
            "createUserId": "int",
            "cid": "int",
            "projectId": "int",
            "guid": "string",
            "amount": "int",
            "status": "string",
            "createts": "int",
            "currencyCode": "string",
            "submittedts": "int",
            "comments": "string",
            "paymentStatus": "string",
            "paymentMode": "string",
            "paymentNotes": "string",
            "paymentDate": "date",
            "currencyModel": "string",
            "userViewModel": {
                "userId": "int",
                "firstName": "string",
                "lastName": "string",
                "name": "string",
                "phone": "int",
                "email": "email",
                "status": "string",
                "shortName": "string",
                "jobTitle": "string",
                "departmentId": "int",
                "department": "string",
                "profileId": "int",
                "profileName": "string",
                "timezone": "string",
                "userStartDate": "date",
                "cellPhone": "int",
                "empId": "string",
                "allocation": "int",
                "userDateFormat": "date",
                "star": "int",
                "imageName": "img8409.jpg",
                "notes": "string",
                "im": "string",
                "createuserid": "int",
                "cid": "int",
                "guid": "string",
                "hasAccess": "int"
            },
            "expenseItemModelList": [],
            "timecardApprovalModel": "string,
            "submittedOn": "date",
            "approvalFlowId": "int"
        }
    ExpenseReportsGetReportDetails400Response:
      type: object
      properties: {}
    ExpenseReportsGetReportDetails401Response:
      type: object
      properties: {}
    ExpenseReportsGetReportDetails409Response:
      type: object
      properties: {}
    ExpenseReportsCreateNewResponse:
      type: object
      properties:
        message:
          type: string
          example: Expense Report created successfully.
        expenseReportId:
          type: string
          example: int
    ExpenseReportsCreateNew400Response:
      type: object
      properties: {}
    ExpenseReportsCreateNew401Response:
      type: object
      properties: {}
    ExpenseReportsCreateNew409Response:
      type: object
      properties: {}
    ExpenseReportsGetExpenseTypesResponse:
      type: string
      example: |-
        {
            "data": [
                {
                    "expenseTypeId": "int",
                    "code": "string",
                    "description": "string",
                    "cid": "int",
                    "customfieldvalue": [
                        {
                            "customFieldValueId": "int",
                            "customFieldId": "int",
                            "customFieldValue": "string",
                            "customFieldObjectId": "int",
                            "cid": "int",
                            "createUserId": "int",
                            "customfieldName": "int"
                        },
                        {
                            "customFieldValueId": "int",
                            "customFieldId": "int",
                            "customFieldValue": "int",
                            "customFieldObjectId": "int",
                            "cid": "int",
                            "createUserId": "int",
                            "customfieldName": "string"
                        }
                      ]
                }
              }
    ExpenseReportsGetExpenseTypes400Response:
      type: object
      properties: {}
    ExpenseReportsGetByUserIdResponse:
      type: string
      example: |-
        {
            "data": [
                {
                    "expenseReportId": "int",
                    "name": "string",
                    "description": "string",
                    "userId": "int",
                    "createUserId": "int",
                    "cid": "int",
                    "projectId": "int",
                    "guid": "string",
                    "amount": "int",
                    "status": "string",
                    "createts": "int",
                    "currencyCode": "string",
                    "submittedts": "int",
                    "comments": "string",
                    "paymentStatus": "string",
                    "paymentMode": "string",
                    "paymentNotes": "string",
                    "paymentDate": "date",
                    "currencyModel": {
                        "currencyId": "int",
                        "currencyCode": "string",
                        "currencyName": "string",
                        "cid": "int"
                    }
                  ]
                }
    ExpenseReportsGetByUserId400Response:
      type: object
      properties: {}
    ExpenseReportsSubmitExpenseReportResponse:
      type: object
      properties:
        message:
          type: string
          example: Expense Report submitted successfully.
        expenseReportId:
          type: string
          example: int
    ExpenseReportsSubmitExpenseReport400Response:
      type: object
      properties: {}
    ExpenseReportsSubmitExpenseReport401Response:
      type: string
      example: ''
    ExpenseReportsDeleteExpenseReportResponse:
      type: object
      properties:
        message:
          type: string
          example: successful
    ExpenseReportsDeleteExpenseReport400Response:
      type: object
      properties: {}
    ExpenseReportsCreateNewExpenseItemResponse:
      type: object
      properties:
        expenseItemId:
          type: string
          example: int
        message:
          type: string
          example: Expense Item created successfully.
    ExpenseReportsCreateNewExpenseItem400Response:
      type: object
      properties: {}
    FormsGetDynaFormResponse:
      type: string
      example: "{\n    \"code\": \"int\",\n    \"data\": [\n        {\n            \"dynamicFormId\": \"int\",\n            \"name\": \"string\",\n            \"dynaFormCode\": \"string\",\n            \"description\": \"string\",\n            \"createUserModel\": \"object\",\n            \"createUserViewModel\": {\n                \"userId\": \"int\",\n                \"firstName\": \"int\",\n                \"lastName\": \"string\",\n                \"name\": \"string\",\n                \"phone\": \"int\",\n                \"email\": \"string\",\n                \"status\": \"string\",\n                \"shortName\": \"string\",\n                \"gender\": \"string\",\n                \"jobTitle\": \"string\",\n                \"departmentId\": \"int\",\n                \"locationId\": \"int\",\n                \"department\": \"string\",\n                \"location\": \"string\",\n                \"profileId\": \"int\",\n                \"profileName\": \"string\",\n                \"timezone\": \"string\",\n                \"userStartDate\": \"date\",\n                \"userEndDate\": \"date\",\n                \"cellPhone\": \"int\",\n                \"empId\": \"string\",\n                \"allocation\": \"int\",\n                \"userDateFormat\": \"date\",\n                \"star\": \"string\",\n                \"notes\": \"string\",\n                \"im\": \"int\",\n                \"createuserid\": \"int\",\n                \"countryId\": \"int\",\n                \"cid\": \"int\",\n                \"guid\": \"string\",\n                \"hasAccess\": \"int\",\n                \"id\": \"int\"\n            },\n            \"createts\": \"int\",\n            \"updatets\": \"int\",\n            \"cid\": \"int\",\n            \"availability\": \"string\",\n            \"status\": \"string\",\n            \"anonymous\": \"int\",\n            \"helpTextStyle\": \"string\",\n            \"mappedEntity\": \"string\",\n            \"userGroupModel\": \"object\",\n            \"secSequence\": \"string\",\n            \"thresholdScore\": \"string\",\n            \"formType\": \"string\",\n            \"dataFlow\": \"string\",\n            \"showCorrect\": \"boolean\",\n            \"listed\": \"int\",\n            \"publicSummary\": \"string\",\n            \"presentationStyle\": \"string\",\n            \"timeLimit\": \"int\",\n            \"attemptLimit\": \"int\",\n            \"layout\": \"string\"\n        }\n\t\t],\n    \"message\": \"string\"\n}"
    FormsGetDynaForm401Response:
      type: string
      example: |-
        {
          "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid."
        }
    FormsGetAssignedFormsResponse:
      type: string
      example: |-
        {
            "code": "int",
            "data": [
                {
                    "assignmentId": "int",
                    "status": "string",
                    "createUserModel": "object",
                    "createUserViewModel": "object",
                    "assignUserModel": "object",
                    "assignUserViewModel": {
                        "userId": "int",
                        "firstName": "string",
                        "lastName": "string",
                        "name": "string",
                        "phone": "int",
                        "email": "string",
                        "status": "string",
                        "shortName": "string",
                        "thumbnail": "string",
                        "gender": "string",
                        "jobTitle": "string",
                        "departmentId": "int",
                        "department": "string",
                        "profileId": "int",
                        "profileName": "string",
                        "timezone": "Asia/Calcutta",
                        "userStartDate": "date",
                        "cellPhone": "int",
                        "empId": "string",
                        "allocation": "int",
                        "userDateFormat": "string",
                        "star": "int",
                        "imageName": "string",
                        "notes": "string",
                        "im": "int",
                        "createuserid": "int",
                        "cid": "int",
                        "guid": "string",
                        "hasAccess": "int",
                        "id": "int"
                    },
                    "assignCandidateModel": "object",
                    "assignContactModel": "object",
                    "dynaFormModel": {
                        "dynamicFormId": "int",
                        "name": "string",
                        "dynaFormCode": "string",
                        "description": "string",
                        "createUserModel": "object",
                        "createUserViewModel": {
                            "userId": "int",
                            "firstName": "string",
                            "lastName": "string",
                            "name": "string",
                            "phone": "int",
                            "email": "string",
                            "status": "string",
                            "shortName": "string",
                            "thumbnail": "string",
                            "gender": "string",
                            "jobTitle": "string",
                            "departmentId": "int",
                            "department": "string",
                            "profileId": "int",
                            "profileName": "string",
                            "timezone": "string",
                            "userStartDate": "date",
                            "cellPhone": "int",
                            "empId": "string",
                            "allocation": "int",
                            "userDateFormat": "date",
                            "star": "int",
                            "imageName": "string",
                            "notes": "",
                            "im": "int",
                            "createuserid": "int",
                            "cid": "int",
                            "guid": "string",
                            "hasAccess": "int",
                            "id": "int"
                        },
                        "createts": "int",
                        "updatets": "int",
                        "cid": "int",
                        "availability": "string",
                        "status": "string",
                        "anonymous": "int",
                        "helpTextStyle": "string",
                        "mappedEntity": "string",
                        "userGroupModel": "string",
                        "secSequence": "string",
                        "thresholdScore": "string",
                        "formType": "string",
                        "dataFlow": "string",
                        "showCorrect": "boolean",
                        "listed": "int",
                        "publicSummary": "boolean",
                        "presentationStyle": "string",
                        "timeLimit": "int",
                        "attemptLimit": "int",
                        "layout": "string"
                    },
                    "createts": "int",
                    "lastupdatets": "int",
                    "testStartts": "string",
                    "formSummary": "string",
                    "testEndts": "date",
                    "testTimeStatus": "string",
                    "code": "string",
                    "cid": "int",
                    "dueDate": "date",
                    "assessmentScore": "int",
                    "graderUserModel": "object",
                    "dynaFormSectionAssignmentModel": [
                        {
                            "dynaFormSectionAssignId": "int",
                            "cid": "int",
                            "createts": "int",
                            "assigneeRole": "string",
                            "status": "string",
                            "sectionId": "int",
                            "userViewModel": {
                                "userId": "int",
                                "firstName": "string",
                                "lastName": "string",
                                "name": "string",
                                "phone": "int",
                                "email": "string",
                                "status": "string",
                                "shortName": "string",
                                "thumbnail": "string",
                                "gender": "string",
                                "jobTitle": "string",
                                "departmentId": "int",
                                "department": "string",
                                "profileId": "int",
                                "profileName": "string",
                                "timezone": "string",
                                "userStartDate": "date",
                                "cellPhone": "int",
                                "empId": "string",
                                "allocation": "int",
                                "userDateFormat": "date",
                                "star": "int",
                                "imageName": "string",
                                "notes": "string",
                                "im": "int",
                                "createuserid": "int",
                                "cid": "int",
                                "guid": "string",
                                "hasAccess": "int",
                                "id": "int"
                            },
                            "dynamicFormSectionModel": {
                                "sectionId": "int",
                                "name": "string",
                                "cid": "int",
                                "hidden": "boolean",
                                "dynamicFormId": "int",
                                "sequence": "int",
                                "createUserId": "int",
                                "description": "string",
                                "dynamicFormItemModelList": [
                                    {
                                        "dynamicFormItemId": "int",
                                        "name": "string",
                                        "sectionId": "int",
                                        "createUserId": "int",
                                        "cid": "int",
                                        "fieldType": "string",
                                        "optionValues": "string",
                                        "helpText": "string",
                                        "createts": "int",
                                        "dynamicFormId": "int",
                                        "mappedEntityItem": "string",
                                        "fieldTypeItem": "string",
                                        "mandatory": "int",
                                        "sequence": "int",
                                        "weightage": "int",
                                        "expectedValue": "string",
                                        "correctFeedback": "boolean",
                                        "incorrectFeedback": "boolean",
                                        "attachmentModel": "object",
                                        "prefill": "string",
                                        "dynaFormItemOptionModelList": [],
                                        "customListModel": "string",
                                        "optionRandom": "boolean",
                                        "numberingStyle": "string"
                                    }
                                ],
                                "assignee": "string",
                                "userGroupModel": "string",
                                "attachmentModel": "string",
                                "assigneeModel": "string",
                                "sample": "string",
                                "totalweightage": "int"
                            },
                            "userGroupModel": "object",
                            "completedBy": {
                                "userId": "int",
                                "firstName": "string",
                                "lastName": "string",
                                "name": "string",
                                "phone": "string",
                                "email": "string",
                                "status": "string",
                                "shortName": "string",
                                "thumbnail": "string",
                                "gender": "string",
                                "jobTitle": "string",
                                "departmentId": "int",
                                "department": "string",
                                "profileId": "int",
                                "profileName": "string",
                                "timezone": "string",
                                "userStartDate": "date",
                                "cellPhone": "int",
                                "empId": "string",
                                "allocation": "int",
                                "userDateFormat": "date",
                                "star": "int",
                                "imageName": "string",
                                "notes": "string",
                                "im": "int",
                                "createuserid": "int",
                                "cid": "string",
                                "guid": "int",
                                "hasAccess": "int",
                                "id": "int"
                            }
                        }
                    ],
                    "testResult": "string",
                    "allowGrader": "boolean",
                    "comments": "string",
                    "trainingModel": "object",
                    "optedOutForEmail": "string"
                },
                    ],
                    "testResult": "string",
                    "allowGrader": "boolean",
                    "comments": "string",
                    "trainingModel": "object",
                    "optedOutForEmail": "boolean"
                }
            ]
            "message": "successful"
        }
    FormsGetAssignedForms401Response:
      type: string
      example: |-
        {
          "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid."
        }
    FormsGetFormResponseResponse:
      type: string
      example: |-
        {
            "FormData": {
                "dynamicFormId": "int",
                "name": "string",
                "dynaFormCode": "string",
                "description": "string",
                "createUserModel": "object",
                "createts": "int",
                "updatets": "int",
                "cid": "int",
                "availability": "string",
                "status": "string",
                "anonymous": "int",
                "userGroupId": "string",
                "secSequence": "string",
                "sectionModelList": [
                    {
                        "sectionId": "int",
                        "name": "string",
                        "cid": "int",
                        "hidden": "boolean",
                        "dynamicFormId": "int",
                        "sequence": "int",
                        "createUserId": "int",
                        "description": "string",
                        "dynamicFormItemModelList": [
                            {
                                "dynamicFormItemId": "int",
                                "name": "string",
                                "sectionId": "int",
                                "createUserId": "int",
                                "cid": "int",
                                "fieldType": "string",
                                "optionValues": "string",
                                "helpText": "string",
                                "createts": "int",
                                "dynamicFormId": "int",
                                "mappedEntityItem": "string",
                                "fieldTypeItem": "string",
                                "mandatory": "int",
                                "sequence": "int",
                                "weightage": "string",
                                "expectedValue": "string",
                                "correctFeedback": "boolean",
                                "incorrectFeedback": "string",
                                "attachmentModel": "object",
                                "prefill": "string",
                                "dynaFormItemOptionModelList":"object",
                                "customListModel": "object",
                                "optionRandom": "boolean",
                                "numberingStyle": "string"
                            }   
                        ],
                        "assignee": "string",
                        "userGroupModel": "object",
                        "attachmentModel": "object",
                        "assigneeModel": "object",
                        "sample": "string",
                        "totalweightage": "int"
                    }
                ],
                "thresholdScore": "string",
                "formType": "string",
                "dataFlow": "string",
                "embedCode": "string",
                "showCorrect": "boolean",
                "listed": "int",
                "publicSummary": "boolean",
                "presentationStyle": "string",
                "timeLimit": "string",
                "attemptLimit": "string",
                "layout": "string",
                "helpTextStyle": "string",
                "questionRandom": "boolean",
                "specificQuestionRandom": "string",
                "sectionVisibility": "boolean",
                "mappedEntity": "string"
            },
            "code": "int",
            "message": "string",
            "Responses": {
                "int": {
                    "responseId": "int",
                    "itemId": "int",
                    "response": "string",
                    "createUserId": "int",
                    "createts": "int",
                    "assignmentId": "int",
                    "digitalSignatureModel": "string",
                    "cid": "int",
                    "remoteAddr": "int",
                    "graderResponse": "boolean",
                    "attachmentModel": "object",
                    "sentimentCode": "string",
                    "sentimentScore": "string",
                    "answerCorrect": "boolean"
                }
            }
        }
    FormsGetFormResponse401Response:
      type: string
      example: |-
        {
          "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid."
        }
    FormsGetFormResponsesResponse:
      type: string
      example: |-
        {
            "FormData": {
                "dynamicFormId": "int",
                "name": "string",
                "dynaFormCode": "string",
                "description": "string",
                "createUserModel": "object",
                "createts": "int",
                "updatets": "int",
                "cid": "int",
                "availability": "string",
                "status": "string",
                "anonymous": "int",
                "userGroupId": "int",
                "secSequence": "string",
                "sectionModelList": [
                    {
                        "sectionId": "int",
                        "name": "string",
                        "cid": "int",
                        "hidden": "boolean",
                        "dynamicFormId": "int",
                        "sequence": "int",
                        "createUserId": "int",
                        "description": "string",
                        "dynamicFormItemModelList": [
                            {
                                "dynamicFormItemId": "int",
                                "name": "string",
                                "sectionId": "int",
                                "createUserId": "int",
                                "cid": "int",
                                "fieldType": "string",
                                "optionValues": "string",
                                "helpText": "string",
                                "createts": "int",
                                "dynamicFormId": "int",
                                "mappedEntityItem": "string",
                                "fieldTypeItem": "string",
                                "mandatory": "int",
                                "sequence": "int",
                                "weightage": "string",
                                "expectedValue": "string",
                                "correctFeedback": "boolean",
                                "incorrectFeedback": "boolean",
                                "attachmentModel": "object",
                                "prefill": "string",
                                "dynaFormItemOptionModelList": "object",
                                "customListModel": "object",
                                "optionRandom": "boolean",
                                "numberingStyle": "string"
                            }
                        ],
                        "assignee": "string",
                        "userGroupModel": "object",
                        "attachmentModel": "object",
                        "assigneeModel": "object",
                        "sample": "string",
                        "totalweightage": "int"
                    }
                ],
                "thresholdScore": "string",
                "formType": "string",
                "dataFlow": "string",
                "embedCode": "string",
                "showCorrect": "boolean",
                "listed": "int",
                "publicSummary": "string",
                "presentationStyle": "string",
                "timeLimit": "string",
                "attemptLimit": "string",
                "layout": "string",
                "helpTextStyle": "string",
                "questionRandom": "boolean",
                "specificQuestionRandom": "string",
                "sectionVisibility": "boolean",
                "mappedEntity": "string"
            },
            "code": "int",
            "message": "successful",
            "Responses": {
                "int": {
                    "responseId": "int",
                    "itemId": "int",
                    "response": "string",
                    "createUserId": "int",
                    "createts": "int",
                    "assignmentId": "int",
                    "digitalSignatureModel": "string",
                    "cid": "int",
                    "remoteAddr": "string",
                    "graderResponse": "boolean",
                    "attachmentModel": "object",
                    "sentimentCode": "string",
                    "sentimentScore": "string",
                    "answerCorrect": "boolean"
                }
            }
        }
    FormsGetFormResponses401Response:
      type: string
      example: |-
        {
          "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid."
        }
    FormsSaveFormResponseResponse:
      type: string
      example: |-
        {
          "code": "int",
          "message": "Successful"
        }
    FormsSaveFormResponse401Response:
      type: string
      example: |-
        {
          "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid."
        }
    FormsSubmitItemResponseResponse:
      type: string
      example: |-
        {
          "code": "int",
          "message": "Successful"
        }
    FormsSubmitItemResponse401Response:
      type: string
      example: |-
        {
          "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid."
        }
    FormsGetDetailsResponse:
      type: string
      example: |-
        {
            "FormData": {
                "dynamicFormId": "int",
                "name": "string",
                "dynaFormCode": "string",
                "description": "string",
                "createUserModel": "object",
                "createUserViewModel": {
                    "userId": "int",
                    "firstName": "string",
                    "lastName": "string",
                    "name": "string",
                    "phone": "int",
                    "email": "string",
                    "status": "string",
                    "shortName": "string",
                    "thumbnail": "string",
                    "gender": "string",
                    "jobTitle": "string",
                    "departmentId": "int",
                    "department": "string",
                    "profileId": "int",
                    "profileName": "string",
                    "timezone": "string",
                    "userStartDate": "int",
                    "cellPhone": "int",
                    "empId": "string",
                    "allocation": "int",
                    "userDateFormat": "string",
                    "star": "int",
                    "imageName": "string",
                    "notes": "string",
                    "im": "int",
                    "createuserid": "int",
                    "cid": "int",
                    "guid": "string",
                    "hasAccess": "int",
                    "id": "int"
                },
                "createts": "int",
                "updatets": "string",
                "cid": "int",
                "availability": "string",
                "status": "string",
                "anonymous": "int",
                "helpTextStyle": "string",
                "mappedEntity": "string",
                "userGroupModel": "object",
                "secSequence": "string",
                "thresholdScore": "int",
                "formType": "string",
                "dataFlow": "string",
                "showCorrect": "boolean",
                "listed": "int",
                "publicSummary": "boolean",
                "presentationStyle": "string",
                "timeLimit": "int",
                "attemptLimit": "string",
                "layout": "string"
            },
            "code": "string",
            "data": [
                {
                    "sectionId": "int",
                    "name": "string",
                    "cid": "int",
                    "hidden": "boolean",
                    "dynamicFormId": "int",
                    "sequence": "int",
                    "createUserId": "int",
                    "description": "string",
                    "dynamicFormItemModelList": [
                        {
                            "dynamicFormItemId": "int",
                            "name": "string",
                            "sectionId": "int",
                            "createUserId": "int",
                            "cid": "int",
                            "fieldType": "string",
                            "optionValues": "string",
                            "helpText": "string",
                            "createts": "int",
                            "dynamicFormId": "int",
                            "mappedEntityItem": "string",
                            "fieldTypeItem": "string",
                            "mandatory": "int",
                            "sequence": "int",
                            "weightage": "string",
                            "expectedValue": "string",
                            "correctFeedback": "string",
                            "incorrectFeedback": "string",
                            "attachmentModel": "object",
                            "prefill": "string",
                            "dynaFormItemOptionModelList": [
        "object"
        ],
                            "customListModel": "object",
                            "optionRandom": "boolean",
                            "numberingStyle": "string"
                        }
                        
                    ],
                    "assignee": "string",
                    "userGroupModel": "object",
                    "attachmentModel": "object",
                    "assigneeModel": "object",
                    "sample": "string",
                    "totalweightage": "int"
                }
            ],
            "message": "string"
        }
    FormsGetDetails401Response:
      type: string
      example: |-
        {
          "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid."
        }
    GoalsGetUserGoalsResponse:
      type: object
      properties:
        message:
          type: string
          example: Successfully retrieved the goal list.
    JobProfilesGetJobProfilesResponse:
      type: array
      items:
        type: object
        properties:
          cid:
            type: string
            example: int
          profileId:
            type: string
            example: int
          profileName:
            type: string
            example: string
          profileDescription:
            type: string
            example: string
          orgId:
            type: string
            example: int
          profileResponsibilities:
            type: string
            example: string
          profileRequirements:
            type: string
            example: string
          salaryBandMin:
            type: string
            example: int
          salaryBandMax:
            type: string
            example: int
          salaryBandCurrency:
            type: string
            example: string
          managerProfileId:
            type: string
            example: int
          managerProfileName:
            type: string
            example: string
          customFieldValueModelList:
            type: string
            example: string
          numberofUsers:
            type: string
            example: int
          createuserid:
            type: string
            example: int
          status:
            type: string
            example: string
          careerPathwayModelList:
            type: string
            example: string
          objectType:
            type: string
            example: string
          objectName:
            type: string
            example: string
          objectid:
            type: string
            example: int
    JobProfilesGetJobProfiles401Response:
      type: object
      properties:
        message:
          type: string
          example: >-
            Access denied! Either Authorization or x-api-key & userid parameters
            are not present/valid or you don't have the necessary permissions.
    LeavesGetRemainingHoursCreditResponse:
      type: string
      example: |-
        {
          "message": "Successful."
        }
    LeavesGetRemainingHoursCredit400Response:
      type: string
      example: |-
        {
          "message": "Bad Request."
        }
    LeavesGetRemainingHoursCredit401Response:
      type: string
      example: |-
        {
          "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
        }
    LeavesGetRemainingHoursCredit409Response:
      type: string
      example: |-
        {
          "message": "Something Went Wrong!"
        }
    LeavesCreateNewLeaveResponse:
      type: string
      example: |-
        {
          "message": "Leave Request is created successfully."
        }
    LeavesCreateNewLeave400Response:
      type: string
      example: |-
        {
          "message": "Error while creating leave plan."
        }
    LeavesCreateNewLeave401Response:
      type: string
      example: |-
        {
          "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
        }
    LeavesCreateNewLeave409Response:
      type: string
      example: |-
        {
          "message": "Something Went Wrong!"
        }
    LeavesGetLeaveRequestsWithinDateRangeResponse:
      type: string
      example: |-
        [
          {
            "cardId": "int",
            "userModel": {
              "cid": "int",
              "userId": "int",
              "position": "string",
              "firstName": "string",
              "shortName": "string",
              "lastName": "string",
              "displayFullName": "string",
              "userStartDate": "Date",
              "email": "string",
              "cellPhone": "",
              "userName": "string",
              "userProfileModel": {
                "cid": "int",
                "profileId": "int",
                "profileName": "string",
                "profileDescription": "",
                "profileResponsibilities": "",
                "profileRequirements": "",
                "salaryBandMin": "int",
                "salaryBandMax": "int",
                "salaryBandCurrency": "",
                "managerProfileId": null,
                "managerProfileName": null,
                "customFieldValueModelList": null,
                "numberofUsers": null,
                "createuserid": null,
                "status": "string",
                "careerPathwayModelList": null,
                "objectType": "string",
                "objectName": "string",
                "objectid": "int"
              },
              "departmentModel": {
                "departmentId": "int",
                "name": "string",
                "description": "string",
                "deptHead": "int",
                "cid": "int",
                "departmentCode": "",
                "departmentLabel": "string",
                "parentDepartmentId": null,
                "parentDepartmentName": null,
                "deptHeadName": null,
                "noOfEmployees": "int",
                "userModel": {
                  "userId": "int",
                  "firstName": "string",
                  "lastName": "string",
                  "name": "string",
                  "phone": "",
                  "email": "string",
                  "status": "string",
                  "shortName": "string",
                  "gender": "string",
                  "jobTitle": "",
                  "departmentId": "int",
                  "locationId": "int",
                  "location": "string",
                  "profileId": "int",
                  "profileName": "string",
                  "timezone": "string",
                  "userStartDate": "Date",
                  "userEndDate": "Date",
                  "cellPhone": "",
                  "empId": "",
                  "allocation": "int",
                  "userDateFormat": "Date",
                  "star": "int",
                  "createuserid": "int",
                  "countryId": "int",
                  "cid": "int",
                  "hasAccess": "int",
                  "userNameFormat": "string",
                  "id": "int"
                }
              },
              "secondLastName": "string",
              "middleName": "string",
              "namePronunciation": "string",
              "familySuffix": "string",
              "status": "string",
              "ptobalance": "int",
              "timezone": "string",
              "practiceId": "int",
              "profileId": "int",
              "allocation": "int",
              "countryId": "int",
              "lastupdateuserid": "int",
              "lastupdatets": "Date",
              "userDateFormat": "Date",
              "hrPortal": "string",
              "userDisplayName": "string",
              "timecardPeriodPref": "string",
              "languagePreference": "string",
              "paId": "int",
              "appMenuId": "int",
              "calWeekPref": "string",
              "locationModel": {
                "locationId": "int",
                "locationName": "string",
                "cid": "int",
                "locationDescription": "string",
                "locationType": "string",
                "address": "string",
                "locationUID": "int",
                "status": "string",
                "workingDays": "int",
                "locationLabel": "string",
                "parentLocationId": "int",
                "createuserid": "int",
                "addressModelList": [
                  {
                    "addressId": "int",
                    "addressLine1": "string",
                    "addressLine2": "string",
                    "city": "string",
                    "state": "string",
                    "zipCode": "int",
                    "createts": "int",
                    "cid": "int",
                    "userId": "int",
                    "candidateId": "int",
                    "addressType": "int",
                    "locationId": "int",
                    "contactId": "int",
                    "countryId": "int",
                    "countryModel": {
                      "countryId": "int",
                      "countryName": "string",
                    },
                    "status": "string",
                    "verificationStatus": "string",
                    "custId": "int",
                    "createUserId": "int",
                    "countryid": "int"
                  }
                ]
              },
              "azureObjectIdentifier": "string",
              "isView": "boolean",
              "view": "boolean"
            },
            "description": "strin.",
            "date": "Date",
            "leaveEndDate": "Date",
            "status": "string",
            "cid": "int",
            "ptoPolicyModel": {
              "ptoPolicyId": "int",
              "cid": "int",
              "effectiveDate": "Date",
              "expirationDate": "Date",
              "policyName": "string",
              "description": "string",
              "createUserId": "int",
              "accrualThresholdWeeks": "int",
              "accrualRateAnnual": "int",
              "accrualRateHours": "int",
              "rollOverMax": "int",
              "applicability": "int",
              "accrualtype": "string",
              "accrualTimeSpan": "string",
              "leaveYearStartDate": "Date",
              "thresholdUnit": "string",
              "thresholdQuantity": "int",
              "allowRequestBeyondBal": "int",
              "unit": "string",
              "lastRun": "Date",
              "nextRunDate": "Date",
              "daysDefinition": "string",
              "decimalDigits": "int",
              "leastCount": "int",
              "leaveMaxDays": "int",
              "maxAccrual": "int",
              "locationId": "int",
              "orgUnitId": "int",
              "lastupdateuserid": "int",
              "policyNameUppercase": "string",
              "allowToOverrideAccrualRate": true
            },
            "totalLeaveHours": "int",
            "totalLeaveDays": "int",
            "currentBalance": "int",
            "balanceDate": "int",
            "numberOfDays": "int",
            "customHours": "int",
            "ptoCalcReportId": "int",
            "userPtoId": "int",
            "integrationStatus": "string",
            "source": "string",
            "createUserViewModel": {
              "userId": "int",
              "firstName": "string",
              "lastName": "string",
              "name": "string",
              "email": "string",
              "status": "string",
              "shortName": "string",
              "jobTitle": "string",
              "departmentId": "int",
              "locationId": "int",
              "department": "string",
              "location": "string",
              "profileId": "int",
              "profileName": "string",
              "timezone": "string",
              "userStartDate": "Date",
              "empId": "string",
              "allocation": "int",
              "userDateFormat": "Date
              "createuserid": "int",
              "countryId": "int",
              "cid": "int",
              "userNameFormat": "string",
              "id": "int"
            },
            "approvalFlowId": "int",
            "reason": "string",
            "id": "int"
          }
        ]
    LeavesGetLeaveRequestsWithinDateRange400Response:
      type: string
      example: |-
        {
          "message": "Bad Request."
        }
    LeavesGetLeaveRequestsWithinDateRange401Response:
      type: string
      example: |-
        {
          "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
        }
    LeavesGetLeaveRequestsWithinDateRange409Response:
      type: string
      example: |-
        {
          "message": "Something Went Wrong!"
        }
    LeavesGetLeavesBasedOnRoleResponse:
      type: string
      example: |-
        {
          "data": [
            {
              "cardId": "int",
              "userModel": {
                "cid": "int",
                "empId": "int",
                "userId": "int",
                "position": "string",
                "firstName": "string",
                "shortName": "string",
                "lastName": "string",
                "displayFullName": "string",
                "userStartDate": "Date",
                "userEndDate": "Date",
                "email": "string",
                "cellPhone": "string",
                "userName": "string",
                "userProfileModel": {
                  "cid": "int",
                  "profileId": "int",
                  "profileName": "string",
                  "profileDescription": "string",
                  "orgId": "int",
                  "profileResponsibilities": "string",
                  "profileRequirements": "string",
                  "salaryBandMin": "int",
                  "salaryBandMax": "int",
                  "managerProfileId": "int",
                  "managerProfileName": "string",
                  "numberofUsers": "int",
                  "createuserid": "int",
                  "status": "string",
                  "objectType": "string",
                  "objectName": "string",
                  "objectid": "int"
                },
                "departmentModel": {
                  "departmentId": "int",
                  "name": "string",
                  "description": "string",
                  "deptHead": "int",
                  "cid": "int",
                  "departmentCode": "string",
                  "departmentLabel": "string",
                  "parentDepartmentId": "int",
                  "parentDepartmentName": "string",
                  "deptHeadName": "string",
                  "noOfEmployees":"int",
                  "userModel": {
                    "userId": "int",
                    "firstName": "string",
                    "lastName": "string",
                    "name": "string",
                    "phone": "int",
                    "email": "string",
                    "status": "stringA",
                    "shortName": "string",
                    "gender": "string",
                    "jobTitle": "string",
                    "departmentId": "int",
                    "locationId": "int",
                    "department": "string",
                    "location": "string",
                    "profileId": "int",
                    "timezone": "string",
                    "userStartDate": "Date",
                    "userEndDate": "Date",
                    "cellPhone": "int",
                    "empId": "string",
                    "userDateOfBirth": "Date",
                    "allocation": "int",
                    "notes": "string",
                    "createuserid": "int",
                    "countryId": "int",
                    "cid": "int",
                    "hasAccess": "boolean",
                    "id": "int"
                  }
                },
                "prefixSalutation": "string",
                "secondLastName": "string",
                "middleName": "string",
                "namePronunciation": "string",
                "familySuffix": "string",
                "status": "string",
                "ptoannual": "int",
                "ptobalance": "int",
                "createts": "int",
                "timezone": "string",
                "practiceId": "int",
                "profileId": "int",
                "allocation": "int",
                "lastupdateuserid": "int",
                "lastupdatets": "Date",
                "userDateFormat": "Date",
                "hrPortal": "string",
                "userDisplayName": "string",
                "timecardPeriodPref": "string",
                "languagePreference": "string",
                "userNameFormat": "string",
                "relativeDate": "date",
                "paId": "int",
                "calWeekPref": "boolean",
                "hasAccess": "boolean",
                "notifications": "boolean",
                "locationModel": {
                  "locationId": "int",
                  "locationName": "string",
                  "cid": "int",
                  "locationDescription": "string",
                  "locationType": "string",
                  "address": "string",
                  "locationUID": "int",
                  "status": "string",
                  "workingDays": "int",
                  "locationCode": "string",
                  "locationLabel": "string",
                  "parentLocationId": "int",
                  "createuserid": "int",
                  "addressModelList": [
                    {
                      "addressId": "int",
                      "addressLine1": "string",
                      "addressLine2": "string",
                      "city": "string",
                      "state": "string",
                      "zipCode": "int",
                      "createts": "int",
                      "cid": "int",
                      "userId": "int",
                      "candidateId": "int",
                      "addressType": "string",
                      "locationId": "int",
                      "contactId": "int",
                      "countryId": "int",
                      "countryModel": {
                        "countryId": "int",
                        "countryName": "string",
                        "iso2": "string"
                      },
                      "status": "string",
                      "verificationStatus": 'string",
                      "custId": "int",
                      "createUserId": "int",
                      "countryCode": "string",
                      "countryid": "int"
                    }
                  ]
                },
                "azureObjectIdentifier": "string",
                "isView": "boolean",
                "view": "boolean"
              },
              "description": "string",
              "date": "Date",
              "leaveEndDate": "Date",
              "status": "string",
              "cid": "int",
              "ptoPolicyModel": {
                "ptoPolicyId": "int",
                "cid": "int",
                "effectiveDate": "Date",
                "expirationDate": "Date",
                "policyName": "string",
                "description": "string",
                "leaveType": "string",
                "createUserId": "int",
                "createts": "int",
                "accrualThresholdWeeks": "int",
                "accrualRateAnnual": "int",
                "accrualRateHours": "int",
                "rollOverPercentage": "int",
                "rollOverMax": "int",
                "accrualtype": "string",
                "bonus": "int",
                "bonusMax": "int",
                "accrualTimeSpan": "string",
                "carryoverExpirationUnit": "string",
                "carryoverExpirationQuantity": "int",
                "carryoverDate": "Date",
                "leaveYearStart": "string",
                "leaveYearStartDate": "Date",
                "thresholdUnit": "int",
                "thresholdQuantity": "int",
                "isAccrued": "boolean",
                "allowRequestBeyondBal": "boolean",
                "unit": "string",
                "lastRun": "Date",
                "nextRunDate": "Date",
                "showInCalendar": "boolean",
                "showInTimesheet": "boolean",
                "accrualRateAnnualUnit": "int",
                "accrualRateUnit": "int",
                "daysDefinition": "string",
                "ptoPolicyChainModel": {
                  "chainId": "int",
                  "chainName": "string",
                  "chainDesc": "",
                  "createts": "int",
                  "cid": "int",
                  "hasPtoPolicies": "boolean"
                },
                "ptoPolicyChainSeqId": "int",
                "tenureThreshold": "int",
                "halfDayAllowed": "boolean",
                "decimalDigits": "int",
                "leastCount": "int",
                "leaveMaxDays": "int",
                "maxAccrual": "int",
                "locationId": "int",
                "orgUnitId": "int",
                "lastupdateuserid": "int",
                "hasAssignment": "boolean",
                "applicableToEveryone": "boolean",
                "policyNameUppercase": "string",
                "allowToOverrideAccrualRate": "boolean"
              },
              "totalLeaveHours": "int",
              "totalLeaveDays": "int",
              "currentBalance": "int",
              "balanceDate": "Date",
              "userDisplayName": "string",
              "isAuthorizeToAccess": "boolean",
              "authorizeToAccess": "boolean"
            }
              
          ],
          "message": "string"
        }
    LeavesGetLeavesBasedOnRole400Response:
      type: string
      example: |-
        {
          "message": "Bad Request."
        }
    LeavesGetLeavesBasedOnRole401Response:
      type: string
      example: |-
        {
          "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
        }
    LeavesGetLeavesBasedOnRole409Response:
      type: string
      example: |-
        {
          "message": "Something went wrong."
        }
    LeavesProcessLeaveByIdResponse:
      type: string
      example: |-
        {
          "message": "Successful."
        }
    LeavesProcessLeaveById400Response:
      type: string
      example: |-
        {
          "message": "Bad Request."
        }
    LeavesProcessLeaveById401Response:
      type: string
      example: |-
        {
          "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
        }
    LeavesProcessLeaveById409Response:
      type: string
      example: |-
        {
          "message": "Something Went Wrong!"
        }
    LeavesAddPtoBalanceResponse:
      type: string
      example: |-
        {
          "message": "Userpto balance added successfully."
        }
    LeavesAddPtoBalance400Response:
      type: string
      example: |-
        {
          "message": "Bad Request."
        }
    LeavesAddPtoBalance401Response:
      type: string
      example: |-
        {
          "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
        }
    LeavesAddPtoBalance409Response:
      type: string
      example: |-
        {
          "message": "Something Went Wrong!"
        }
    OrgRelationGetOrgRelationsByUserResponse:
      type: string
      example: |-
        {
            "data": [
                {
                    "orgRelationId": "int",
                    "userId": "int",
                    "managerUserId": "int",
                    "managerEmail": "string",
                    "userEmail": "string",
                    "relationType": "string",
                    "startDate": "Date",
                    "endDate": "Date",
                    "cid": "int",
                    "status": "string",
                    "positionId": "int",
                    "otherPositionId": "int",
                    "positionModel": "string",
                    "otherPositionModel": "string",
                    "reporteeUserModel": {
                        "cid": "int",
                        "empId": "int",
                        "userId": "int",
                        "position": "string",
                        "firstName": "string",
                        "shortName": "string",
                        "lastName": "string",
                        "displayFullName": "string",
                        "userStartDate": "Date",
                        "email": "string",
                        "cellPhone": "int",
                        "userName": "string",
                        "userProfileModel": {
                            "profileId": "int",
                            "profileName": "string",
                            "profileDescription": "string",
                            "orgId": "int",
                            "profileResponsibilities": "string",
                            "profileRequirements": "string",
                            "salaryBandMin": "double",
                            "salaryBandMax": "double",
                            "salaryBandCurrency": "int",
                            "managerProfileId": "int",
                            "customFieldValueModelList": "object"
                        },
                        "departmentModel": {
                            "departmentId": "int",
                            "name": "string",
                            "description": "string",
                            "deptHead": "string",
                            "cid": "int",
                            "departmentCode": "string",
                            "departmentLabel": "string",
                            "parentDepartmentId": "int",
                            "parentDepartmentName": "string",
                            "deptHeadName": "string",
                            "noOfEmployees": "int"
                        },
                        "prefixSalutation": "string",
                        "secondLastName": "string",
                        "middleName": "string",
                        "namePronunciation": "string",
                        "familySuffix": "string",
                        "status": "string",
                        "notes": "string",
                        "gender": "string",
                        "phone": "int",
                        "im": "int",
                        "createts": "int",
                        "allocation": "double",
                        "countryId": "int",
                        "userDisplayName": "string",
                        "star": "int",
                        "languagePreference": "string",
                        "jobGrade": "string",
                        "locationModel": {
                            "locationId": "int",
                            "locationName": "string",
                            "locationDescription": "string",
                            "locationType": "string",
                            "address": "string",
                            "lattitude": "string",
                            "longitude": "string",
                            "locationUID": "int",
                            "status": "string",
                            "workingDays": "string",
                            "locationCode": "string",
                            "locationLabel": "string",
                            "parentLocationId": "int",
                            "parentLocationName": "string",
                            "noOfEmployees": "int"
                        },
                        "isView": "boolean"
                    },
                    "createts": "int"
                },
            ],
            "message": "string"
        }
    OrgRelationGetOrgRelationsByUser401Response:
      type: object
      properties:
        message:
          type: string
          example: >-
            Access denied! Either Authorization or x-api-key & userid parameters
            are not present/valid or you don't have the necessary permissions
    OrgRelationGetOrgRelationsByUser409Response:
      type: object
      properties:
        message:
          type: string
          example: string
    OrgRelationGetAllActiveResponse:
      type: string
      example: |-
        "data": [
                {
                    "orgRelationId": "int",
                    "userId": "int",
                    "managerUserId": "int",
                    "managerEmail": "string",
                    "userEmail": "string",
                    "relationType": "string",
                    "startDate": "date",
                    "endDate": "date",
                    "cid": "int",
                    "status": "string",
                    "positionId": "int",
                    "otherPositionId": "int",
                    "positionModel": "string",
                    "otherPositionModel": "string",
                    "reporteeUserModel": {
                        "cid": "int",
                        "empId": "int",
                        "userId": "int",
                        "position": "string",
                        "firstName": "string",
                        "shortName": "string",
                        "lastName": "string",
                        "displayFullName": "string",
                        "userStartDate": "date",
                        "email": "string",
                        "cellPhone": "int",
                        "userName":"string",
                        "departmentModel": {
                            "departmentId": "int",
                            "name": "string",
                            "description": "string",
                            "deptHead": "int",
                            "cid": "int",
                            "departmentCode": "string",
                            "departmentLabel": "string",
                            "parentDepartmentId": "int",
                            "parentDepartmentName": "string",
                            "deptHeadName": "string",
                            "noOfEmployees": "int"
                        },
                        "prefixSalutation": "string",
                        "middleName": "string",
                        "namePronunciation": "string",
                        "familySuffix": "string",
                        "status": "string",
                        "notes": "string",
                        "gender": "string",
                        "phone": "int",
                        "im": "string",
                        "createts": "int",
                        "imageName": "string",
                        "thumbnail": "string",
                        "allocation": "int",
                        "countryId": "int",
                        "userDisplayName": "string",
                        "star": "int",
                        "languagePreference": "string",
                        "jobGrade": "string",
                        "locationModel": {
                            "locationId": "int",
                            "locationName": "string",
                            "locationDescription": "string",
                            "locationType": "string",
                            "address": "string",
                            "lattitude": "string",
                            "longitude": "string",
                            "locationUID": "string",
                            "status": "string",
                            "workingDays": "string",
                            "locationCode": "string",
                            "locationLabel": "string",
                            "parentLocationId": "int",
                            "parentLocationName": "string",
                            "noOfEmployees": "int"
                        },
                        "isView": "boolean"
                    },
                    "reporterUserModel": "string",
                    "createts": "int"
                }
          ],
          "message": "string"
        }
    OrgRelationGetAllActive401Response:
      type: object
      properties:
        message:
          type: string
          example: >-
            Access denied! Either Authorization or x-api-key & userid parameters
            are not present/valid or you don't have the necessary permissions
    OrgRelationGetAllActive409Response:
      type: object
      properties:
        message:
          type: string
          example: string
    OrgRelationSaveUserResponse:
      type: object
      properties:
        message:
          type: string
          example: Reports To added successfully.
    OrgRelationSaveUser401Response:
      type: object
      properties:
        message:
          type: string
          example: >-
            Access denied! Either Authorization or x-api-key & userid parameters
            are not present/valid or you don't have the necessary permissions
    OrgRelationSaveUser409Response:
      type: object
      properties:
        message:
          type: string
          example: failure
    OrgUnitsGetOrgUnitsResponse:
      type: string
      example: |-
        [
          {
            "departmentId": "int",
            "name": "string",
            "description": "string",
            "deptHead": "string",
            "cid": "int",
            "departmentCode": "string",
            "departmentLabel": "string",
            "parentDepartmentId": "int",
            "parentDepartmentName": "string",
            "deptHeadName": "string",
            "noOfEmployees": "int",
            "userModel": "model"
          }
        ]
    OrgUnitsGetOrgUnits401Response:
      type: object
      properties:
        message:
          type: string
          example: >-
            Access denied! Either Authorization or x-api-key & userid parameters
            are not present/valid.
    OrgUnitsCreateNewOrgUnitResponse:
      type: object
      properties:
        message:
          type: string
          example: successful
    OrgUnitsCreateNewOrgUnit409Response:
      type: object
      properties:
        message:
          type: string
          example: failure
    PayStubsGetDetailsResponse:
      type: object
      properties: {}
    PayStubsGetDetails409Response:
      type: object
      properties:
        message:
          type: string
          example: failure
    PeopleAndPermissionsCreateOrUpdateUserDetailsResponse:
      type: object
      properties: {}
    PeopleAndPermissionsCreateOrUpdateUserDetails201Response:
      type: object
      properties:
        message:
          type: string
          example: User created successfully.
    PeopleAndPermissionsCreateOrUpdateUserDetails400Response:
      type: object
      properties:
        message:
          type: string
          example: Please verify the data parameters' format.
    PeopleAndPermissionsCreateOrUpdateUserDetails401Response:
      type: object
      properties:
        message:
          type: string
          example: Illegal accesss.
    PeopleAndPermissionsCreateOrUpdateUserDetails409Response:
      type: object
      properties:
        message:
          type: string
          example: Conflict occured while creating user.
    PeopleAndPermissionsCreateUserResponse:
      type: object
      properties: {}
    PeopleAndPermissionsCreateUser401Response:
      type: object
      properties: {}
    PeopleAndPermissionsUpdateUserResponse:
      type: object
      properties: {}
    PeopleAndPermissionsUpdateUser401Response:
      type: object
      properties: {}
    PeopleAndPermissionsGetUserBasicInformationResponse:
      type: object
      properties: {}
    PeopleAndPermissionsGetUserBasicInformation401Response:
      type: object
      properties: {}
    PeopleAndPermissionsCreateUserCompensationResponse:
      type: object
      properties: {}
    PeopleAndPermissionsCreateUserCompensation401Response:
      type: object
      properties: {}
    PeopleAndPermissionsUpdateFinancialRecordResponse:
      type: object
      properties: {}
    PeopleAndPermissionsUpdateFinancialRecord401Response:
      type: object
      properties: {}
    PeopleAndPermissionsGetUserListResponse:
      type: object
      properties: {}
    PeopleAndPermissionsGetUserList401Response:
      type: object
      properties: {}
    PeopleAndPermissionsGetUserPermissionsAndMenuConfigurationsResponse:
      type: object
      properties: {}
    PeopleAndPermissionsGetUserPermissionsAndMenuConfigurations401Response:
      type: object
      properties: {}
    PeopleAndPermissionsGetFinancialStatusResponse:
      type: object
      properties: {}
    PeopleAndPermissionsGetFinancialStatus401Response:
      type: object
      properties: {}
    PeopleAndPermissionsUploadUserProfilePictureResponse:
      type: object
      properties:
        imageName:
          type: string
          example: string
        data:
          type: string
          example: You successfully uploaded file.
        message:
          type: string
          example: successful
    PeopleAndPermissionsUploadUserProfilePicture403Response:
      type: object
      properties: {}
    PeopleAndPermissionsGetAllUsersDetailsResponse:
      type: array
      items:
        type: object
        properties:
          cid:
            type: string
            example: int
          userId:
            type: string
            example: int
          firstName:
            type: string
            example: string
          shortName:
            type: string
            example: string
          lastName:
            type: string
            example: string
          displayFullName:
            type: string
            example: string
          userStartDate:
            type: string
            example: date
          email:
            type: string
            example: string
          cellPhone:
            type: string
            example: int
          userName:
            type: string
            example: string
          employmentModelList:
            type: string
            example: string
          educationModelList:
            type: string
            example: string
          licenseModelList:
            type: string
            example: int
          supervisorModelList:
            type: array
            items:
              type: object
              properties:
                userId:
                  type: string
                  example: int
                firstName:
                  type: string
                  example: string
                empId:
                  description: 'The unique identity of the employee. '
                  type: string
                  example: int
                lastName:
                  type: string
                  example: string
                middleName:
                  type: string
                  example: string
                email:
                  type: string
                  example: string
                displayFullName:
                  type: string
                  example: string
                userStartDate:
                  type: string
                  example: date
                locationId:
                  type: string
                  example: int
                departmentID:
                  type: string
                  example: int
          awardModelList:
            type: string
            example: string
          addressModelList:
            type: string
            example: string
          customFieldValueModelList:
            type: string
            example: string
          status:
            type: string
            example: string
          gender:
            type: string
            example: string
          phone:
            type: string
            example: int
          createts:
            type: string
            example: int
          financialModelList:
            type: string
            example: string
          allocation:
            type: string
            example: int
          userDisplayName:
            type: string
            example: string
          star:
            type: string
            example: int
          isView:
            type: string
            example: string
    PeopleAndPermissionsGetAllUsersDetails204Response:
      type: object
      properties: {}
    PeopleAndPermissionsGetBasicUserDetailsResponse:
      type: array
      items:
        type: object
        properties:
          userId:
            type: string
            example: int
          firstName:
            type: string
            example: string
          lastName:
            type: string
            example: string
          name:
            type: string
            example: string
          phone:
            type: string
            example: int
          email:
            type: string
            example: string
          status:
            type: string
            example: string
          shortName:
            type: string
            example: string
          timezone:
            type: string
            example: string
          userStartDate:
            type: string
            example: date
          cellPhone:
            type: string
            example: int
          allocation:
            type: string
            example: int
          userDateFormat:
            type: string
            example: date
          star:
            type: string
            example: int
          createuserid:
            type: string
            example: int
          cid:
            type: string
            example: int
          guid:
            type: string
            example: string
          hasAccess:
            type: string
            example: int
    PeopleAndPermissionsGetBasicUserDetails204Response:
      type: object
      properties: {}
    PeopleAndPermissionsSaveUserAddressResponse:
      type: object
      properties:
        message:
          type: string
          example: Address details saved successfully.
    PeopleAndPermissionsSaveUserAddress401Response:
      type: object
      properties: {}
    PeopleAndPermissionsSaveUserEducationResponse:
      type: object
      properties: {}
    PeopleAndPermissionsSaveUserEducation401Response:
      type: object
      properties: {}
    PeopleAndPermissionsSaveUserEmploymentResponse:
      type: object
      properties: {}
    PeopleAndPermissionsSaveUserEmployment401Response:
      type: object
      properties: {}
    PeopleAndPermissionsAddReportsToResponse:
      type: object
      properties:
        message:
          type: string
          example: Reports To added successfully.
    PeopleAndPermissionsAddReportsTo401Response:
      type: object
      properties: {}
    PeopleAndPermissionsSaveCustomFieldValuesResponse:
      type: object
      properties:
        message:
          type: string
          example: Custom Field details saved successfully.
    PeopleAndPermissionsSaveCustomFieldValues400Response:
      type: object
      properties: {}
    PeopleAndPermissionsDeleteUserAddressResponse:
      type: object
      properties:
        message:
          type: string
          example: User Address deleted successfully.
    PeopleAndPermissionsDeleteUserAddress401Response:
      type: object
      properties: {}
    PeopleAndPermissionsDeleteUserAddress404Response:
      type: object
      properties: {}
    PeopleAndPermissionsDeleteUserEmploymentResponse:
      type: object
      properties:
        message:
          type: string
          example: User Employment deleted successfully.
    PeopleAndPermissionsDeleteUserEmployment401Response:
      type: object
      properties: {}
    PeopleAndPermissionsDeleteUserEmployment404Response:
      type: object
      properties: {}
    PeopleAndPermissionsDeleteUserEducationResponse:
      type: object
      properties: {}
    PeopleAndPermissionsDeleteUserEducation401Response:
      type: object
      properties: {}
    PeopleAndPermissionsDeleteUserEducation404Response:
      type: object
      properties: {}
    PeopleAndPermissionsDeleteUserEducation409Response:
      type: object
      properties: {}
    PerformanceReviewGetPerformanceReviewsResponse:
      type: object
      properties: {}
    PerformanceReviewGetPerformanceReviews404Response:
      type: object
      properties: {}
    PerformanceReviewGetPerformanceReviews409Response:
      type: object
      properties: {}
    PerformanceReviewGetTemplatesResponse:
      type: object
      properties: {}
    PerformanceReviewGetTemplates404Response:
      type: object
      properties: {}
    PerformanceReviewGetTemplates409Response:
      type: object
      properties: {}
    PerformanceReviewCreatePerformanceReviewResponse:
      type: object
      properties:
        appraisalId:
          type: string
          example: int
        message:
          type: string
          example: Performance review created successfully.
    PerformanceReviewCreatePerformanceReview400Response:
      type: object
      properties: {}
    PerformanceReviewCreatePerformanceReview409Response:
      type: object
      properties:
        message:
          type: string
          example: failure
    PerformanceReviewGetCompletedReviewsBasedOnUserIdResponse:
      type: string
      example: |-
        {
            "data": [
                {
                    "appraisalId": "int",
                    "appraisalName": "string",
                    "description": "string",
                    "userModel": {
                        "cid": "int",
                        "empId": "string",
                        "userId": "int",
                        "position": "string",
                        "firstName": "string",
                        "shortName": "string",
                        "lastName": "string",
                        "displayFullName": "string",
                        "userStartDate": "int",
                        "userEndDate": "int",
                        "email": "string",
                        "cellPhone": "int",
                        "userName": "string",
                        "userProfileModel": {
                            "cid": "int",
                            "profileId": "int",
                            "profileName": "string",
                            "profileDescription": "string",
                            "orgId": "int",
                            "profileResponsibilities": "string",
                            "profileRequirements": "string",
                            "salaryBandMin": "int",
                            "salaryBandMax": "int",
                            "salaryBandCurrency": "int",
                            "managerProfileId": "int",
                            "managerProfileName": "string",
                            "customFieldValueModelList": "string",
                            "numberofUsers": "int",
                            "createuserid": "int",
                            "status": "string",
                            "careerPathwayModelList": "string",
                            "objectType": "string",
                            "objectName": "string",
                            "objectid": "int"
                        },
                        "departmentModel": {
                            "departmentId": "int",
                            "name": "string",
                            "description": "string",
                            "deptHead": "int",
                            "cid": "int",
                            "departmentCode": "int",
                            "departmentLabel": "string",
                            "parentDepartmentId": "int",
                            "parentDepartmentName": "string",
                            "deptHeadName": "string",
                            "noOfEmployees": "int",
                            "userModel": {
                                "userId": "int",
                                "firstName": "string",
                                "lastName": "string",
                                "name": "string",
                                "phone": "int",
                                "email": "string",
                                "status": "string",
                                "shortName": "string",
                                "gender": "string",
                                "jobTitle": "string",
                                "locationId": "int",
                                "location": "string",
                                "profileId": "int",
                                "profileName": "string",
                                "timezone": "string",
                                "userStartDate": "int",
                                "userEndDate": "int",
                                "cellPhone": "int",
                                "empId": "string",
                                "userDateOfBirth": "int",
                                "allocation": "int",
                                "userDateFormat": "int",
                                "star": "int",
                                "notes": "string",
                                "im": "string",
                                "createuserid": "int",
                                "countryId": "int",
                                "cid": "int",
                                "guid": "string",
                                "hasAccess": "int",
                                "id": "int"
                            }
                        },
                        "prefixSalutation": "string",
                        "secondLastName": "string",
                        "middleName": "string",
                        "namePronunciation": "string",
                        "familySuffix": "string",
                        "status": "string",
                        "ptoannual": "int",
                        "ptobalance": "int",
                        "gender": "string",
                        "phone": "int",
                        "im": "string",
                        "createts": "int",
                        "timezone": "string",
                        "practiceId": "int",
                        "imageName": "string",
                        "thumbnail": "string",
                        "profileId": "int",
                        "allocation": "int",
                        "countryId": "int",
                        "lastupdateuserid": "int",
                        "lastupdatets": "int",
                        "userDateFormat": "int",
                        "hrPortal": "string",
                        "userDisplayName": "string",
                        "star": "int",
                        "timecardPeriodPref": "string",
                        "languagePreference": "string",
                        "tosVersion": "string",
                        "guid": "string",
                        "jobGrade": "string",
                        "paId": "int",
                        "appMenuId": "int",
                        "workingDays": "int",
                        "hasAccess": "string",
                        "notifications": "string",
                        "locationModel": {
                            "locationId": "int",
                            "locationName": "string",
                            "cid": "int",
                            "locationDescription": "string",
                            "locationType": "string",
                            "address": "string",
                            "lattitude": "int",
                            "longitude": "int",
                            "locationUID": "int",
                            "status": "string",
                            "workingDays": "int",
                            "locationCode": "int",
                            "locationLabel": "string",
                            "parentLocationId": "int",
                            "createuserid": "int",
                            "addressModelList": [
                                {
                                    "addressId": "int",
                                    "addressLine1": "string",
                                    "addressLine2": "string",
                                    "city": "string",
                                    "currentStatus": "string",
                                    "state": "string",
                                    "zipCode": "int",
                                    "createts": "int",
                                    "cid": "int",
                                    "userId": "int",
                                    "candidateId": "int",
                                    "addressType": "string",
                                    "locationId": "int",
                                    "contactId": "int",
                                    "countryId": "int",
                                    "countryModel": {
                                        "countryId": "int",
                                        "countryName": "string",
                                        "iso2": "string"
                                    },
                                    "status": "string",
                                    "verificationStatus": "string",
                                    "custId": "int",
                                    "mapUrl": "",
                                    "createUserId": "int",
                                    "extAppUID": "int",
                                    "countryCode": "int",
                                    "countryid": "int"
                                }
                            ]
                        },
                        "azureObjectIdentifier": "string",
                        "isView": "string",
                        "view": "string"
                    },
                    "startDate": "int",
                    "endDate": "int",
                    "managerId": "int",
                    "managerUserModel": "string",
                    "statusCode": "string",
                    "cid": "int",
                    "appraisalType": "string",
                    "userId": "int",
                    "candidatePositionId": "int",
                    "reviewMode": "string",
                    "workflowId": "int",
                    "finalComment": "string",
                    "createUserId": "int",
                    "createUserModel": {
                        "cid": "int",
                        "empId": "string",
                        "userId": "int",
                        "position": "string",
                        "firstName": "string",
                        "shortName": "string",
                        "lastName": "string",
                        "workerTypeModel": {
                            "wtid": "int",
                            "cid": "int",
                            "code": "string",
                            "description": "string",
                            "createuserid": "int"
                        },
                        "displayFullName": "string",
                        "userStartDate": "int",
                        "email": "string",
                        "cellPhone": "int",
                        "userName": "string",
                        "userProfileModel": {
                            "cid": "int",
                            "profileId": "int",
                            "profileName": "string",
                            "profileDescription": "string",
                            "orgId": "int",
                            "profileResponsibilities": "string",
                            "profileRequirements": "string",
                            "salaryBandMin": "int",
                            "salaryBandMax": "int",
                            "salaryBandCurrency": "int",
                            "managerProfileId": "int",
                            "managerProfileName": "string",
                            "customFieldValueModelList": "string",
                            "numberofUsers": "int",
                            "createuserid": "int",
                            "status": "string",
                            "careerPathwayModelList": "string",
                            "objectType": "string",
                            "objectName": "string",
                            "objectid": "int"
                        },
                        "prefixSalutation": "string",
                        "secondLastName": "string",
                        "middleName": "string",
                        "namePronunciation": "string",
                        "familySuffix": "string",
                        "status": "string",
                        "ptoannual": "int",
                        "ptobalance": "int",
                        "gender": "string",
                        "phone": "int",
                        "im": "string",
                        "createts": "int",
                        "timezone": "string",
                        "practiceId": "int",
                        "imageName": "string",
                        "thumbnail": "string",
                        "profileId": "int",
                        "allocation": "int",
                        "lastupdateuserid": "int",
                        "lastupdatets": "int",
                        "workingDaysSchedule": "string",
                        "userDateFormat": "int",
                        "hrPortal": "string",
                        "userDisplayName": "string",
                        "star": "int",
                        "timecardPeriodPref": "string",
                        "languagePreference": "string",
                        "tosVersion": "string",
                        "guid": "string",
                        "jobGrade": "string",
                        "paId": "int",
                        "careerPathwayId": "int",
                        "calendarId": "int",
                        "workingDays": "int",
                        "hasAccess": "string",
                        "notifications": "string",
                        "calendarModel": {
                            "calendarId": "int",
                            "name": "string",
                            "colorCode": "string",
                            "cid": "int",
                            "createUserId": "int",
                            "createts": "int",
                            "createUserViewModel": {
                                "userId": "int",
                                "firstName": "string",
                                "lastName": "string",
                                "name": "string",
                                "phone": "int",
                                "email": "string",
                                "status": "string",
                                "shortName": "string",
                                "thumbnail": "string",
                                "gender": "string",
                                "jobTitle": "string",
                                "departmentId": "int",
                                "locationId": "int",
                                "department": "string",
                                "location": "string",
                                "profileId": "int",
                                "profileName": "string",
                                "timezone": "string",
                                "userStartDate": "int",
                                "cellPhone": "int",
                                "empId": "int",
                                "allocation": "int",
                                "userDateFormat": "int",
                                "star": "int",
                                "imageName": "string",
                                "notes": "string",
                                "im": "string",
                                "countryId": "int",
                                "cid": "int",
                                "guid": "string",
                                "hasAccess": "int",
                                "calendarId": "int",
                                "id": "int"
                            }
                        },
                        "isView": "string",
                        "view": "string"
                    },
                    "finalValue": "int",
                    "obtype": "string",
                    "createts": "int",
                    "status": "string",
                    "preFinalValue": "int",
                    "preFinalComment": "string",
                    "finalValueStr": "string",
                    "preFinalValueStr": "string",
                    "showFinalValue": "int",
                    "showWeightedTotal": "int",
                    "userViewModel": {
                        "userId": "int",
                        "firstName": "string",
                        "lastName": "string",
                        "name": "string",
                        "phone": "int",
                        "email": "string",
                        "status": "string",
                        "shortName": "string",
                        "thumbnail": "string",
                        "gender": "string",
                        "jobTitle": "string",
                        "departmentId": "int",
                        "locationId": "int",
                        "department": "string",
                        "location": "string",
                        "profileId": "int",
                        "profileName": "string",
                        "timezone": "string",
                        "userStartDate": "int",
                        "userEndDate": "int",
                        "cellPhone": "int",
                        "empId": "string",
                        "allocation": "int",
                        "userDateFormat": "int",
                        "star": "int",
                        "imageName": "string",
                        "notes": "string",
                        "im": "string",
                        "createuserid": "int",
                        "countryId": "int",
                        "cid": "int",
                        "guid": "string",
                        "hasAccess": "int",
                        "id": "int"
                    },
                    "scoreTemplateId": "int",
                    "scoreTemplateModel": {
                        "scoretemplateid": "int",
                        "cid": "int",
                        "scoreMin": "int",
                        "scoreMax": "int",
                        "scoreMaxValidation": "int",
                        "scoringInstructions": "string",
                        "scoreName": "string",
                        "allowFractional": "int",
                        "rangeModelList": [
                            {
                                "strangeid": "int",
                                "scoreTempId": "int",
                                "rangeMin": "int",
                                "rangeMax": "int",
                                "interpretation": "string",
                                "colorCode": "string",
                                "cid": "int",
                                "description": "string"
                            },
                            {
                                "strangeid": "int",
                                "scoreTempId": "int",
                                "rangeMin": "int",
                                "rangeMax": "int",
                                "interpretation": "string",
                                "colorCode": "string",
                                "cid": "int",
                                "description": "string"
                            },
                            {
                                "strangeid": "int",
                                "scoreTempId": "int",
                                "rangeMin": "int",
                                "rangeMax": "int",
                                "interpretation": "string",
                                "colorCode": "string",
                                "cid": "int",
                                "description": "string"
                            }
                        ],
                        "visualizationType": "string",
                        "status": "string"
                    },
                    "saveForLater": "string",
                    "completionDate": "int",
                    "appraisalGroupId": "int",
                    "dynaFormId": "int",
                    "formAssignmentUrl": "string",
                    "signatureFlowLibraryId": "int",
                    "appraisalTemplateId": "int",
                    "isLocked": "int"
                }
            ],
            "message": "success"
        }
    PerformanceReviewGetCompletedReviewsBasedOnUserId409Response:
      type: object
      properties:
        message:
          type: string
          example: failure
    PerformanceReviewLaunchPerformanceReviewsInBulkResponse:
      type: object
      properties: {}
    PerformanceReviewLaunchPerformanceReviewsInBulk400Response:
      type: object
      properties: {}
    PerformanceReviewAssignmentGetAssignmentsResponse:
      type: object
      properties: {}
    PerformanceReviewAssignmentGetAssignments404Response:
      type: object
      properties: {}
    PerformanceReviewAssignmentGetAssignments409Response:
      type: object
      properties: {}
    PositionsCreatePositionResponse:
      type: object
      properties:
        message:
          type: string
          example: successful
    PositionsCreatePosition401Response:
      type: string
      example: |-
        {
          "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
        }
    PositionsCreatePosition404Response:
      type: object
      properties: {}
    PositionsCreatePosition409Response:
      type: object
      properties:
        message:
          type: string
          example: failure
    PositionsGetPositionResponse:
      type: object
      properties: {}
    PositionsGetPosition401Response:
      type: string
      example: |-
        {
          "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
        }
    PositionsGetPosition404Response:
      type: object
      properties: {}
    PositionsGetPosition409Response:
      type: object
      properties:
        message:
          type: string
          example: failure
    PositionsGetPositionsListResponse:
      type: string
      example: |-
        {
          "data": [
            {
              "positionId": "int",
              "positionUID": "string",
              "positionName": "string",
              "applicantsCount": "int",
              "hiringFunnelName": "string",
              "noOfOpenings": "int",
              "positionDescription": "string",
              "positionResponsibilities": "string",
              "positionRequirements": "string",
              "positionStatus": "string",
              "publishStatus": "string",
              "approvalStatus": "string",
              "positionCreatets": "string",
              "positionLastUpdatets": "string",
              "cid": "int"
            },
            {
              "positionId": "int",
              "positionUID": "string",
              "positionName": "string",
              "applicantsCount": "int",
              "hiringFunnelName": "string",
              "noOfOpenings": "int",
              "positionDescription": "string",
              "positionResponsibilities": "string",
              "positionRequirements": "string",
              "positionStatus": "string",
              "publishStatus": "string",
              "approvalStatus": "string",
              "positionCreatets": "string",
              "positionLastUpdatets": "string",
              "cid": "int"
            },
            {
              "positionId": "int",
              "positionUID": "int",
              "positionName": "string",
              "applicantsCount": "int",
              "hiringFunnelName": "string",
              "noOfOpenings": "int",
              "positionDescription": "string",
              "positionResponsibilities": "string",
              "positionRequirements": "string",
              "positionStatus": "string",
              "publishStatus": "string",
              "approvalStatus": "string",
              "positionCreatets": "string",
              "positionLastUpdatets": "string",
              "cid": "int"
            }
          ],
           "positionApprovalLevelList": [
            {
              "approvalId": "int",
              "levelSequence": "int",
              "userGroupModel": "object",
              "relationType": "string",
              "createUserId": "int",
              "flowId": "int",
              "userId": "int",
              "userViewModel": "object",
              "cid": "int"
            },
            {
              "approvalId": "int",
              "levelSequence": "int",
              "userGroupModel": {
                "usergroupid": "int",
                "userViewModel": "object",
                "usergroupname": "string",
                "description": "string",
                "createuserid": "int",
                "cid": "int",
                "updatets": "int",
                "membershipGuidance": "string",
                "functionid": "int"
              },
              "relationType": "string",
              "createUserId": "int",
              "flowId": "int",
              "userId": "int",
              "userViewModel": "int",
              "cid": "int"
            },
            {
              "approvalId": "int",
              "levelSequence": "int",
              "userGroupModel": {
                "usergroupid": "int",
                "userViewModel": {
                  "userId": "int",
                  "firstName": "string",
                  "lastName": "string",
                  "name": "string",
                  "phone": "string",
                  "email": "string",
                  "status": "string",
                  "shortName": "string",
                  "thumbnail": "string",
                  "gender": "string",
                  "jobTitle": "string",
                  "departmentId": "int",
                  "locationId": "int",
                  "department": "string",
                  "location": "string",
                  "profileId": "int",
                  "profileName": "string",
                  "timezone": "string",
                  "userStartDate": "string",
                  "userEndDate": "string",
                  "cellPhone": "string",
                  "empId": "string",
                  "userDateOfBirth": "string",
                  "allocation": "int",
                  "userDateFormat": "string",
                  "star": "int",
                  "imageName": "string",
                  "notes": "string",
                  "im": "int",
                  "createuserid": "int",
                  "countryId": "int",
                  "cid": "int",
                  "guid": "string",
                  "hasAccess": "int",
                  "calendarId": "int",
                  "id": "int"
                },
                "usergroupname": "string",
                "description": "string",
                "createuserid": "int",
                "cid": "int",
                "updatets": "int",
                "membershipGuidance": "string",
                "functionid": "int"
              },
              "relationType": "string",
              "createUserId": "int",
              "flowId": "int",
              "userId": "int",
              "userViewModel": "object",
              "cid": "int"
            }
         }
    PositionsGetPositionsList401Response:
      type: string
      example: |-
        {
          "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid or you don't have the necessary permissions."
        }
    PositionsGetPositionsList404Response:
      type: object
      properties: {}
    PositionsGetPositionsList409Response:
      type: object
      properties: {}
    ProjectListAllocationsResponse:
      type: string
      example: |-
        {
          "allocations": [
            {
              "userProjectId": "int",
              "userReportModel": {
                "cid": "int",
                "userId": "int",
                "firstName": "string",
                "shortName": "string",
                "lastName": "string",
                "displayFullName": "string",
                "userStartDate": "date",
                "email": "email",
                "cellPhone": "string",
                "userName": "string",
                "status": "string",
                "gender": "string",
                "createts": "long",
                "allocation": "int",
                "userDisplayName": "string",
                "star": "int",
                "locationModel": {
                  "locationId": "int",
                  "locationName": "string",
                  "locationDescription": "string",
                  "locationType": "string",
                  "address": "string",
                  "lattitude": "double",
                  "longitude": "double",
                  "locationUID": "int",
                  "status": "string",
                  "workingDays": "string",
                  "locationCode": "string",
                  "locationLabel": "string",
                  "parentLocationId": "int"
                },
                "isView": "boolean"
              },
              "projectModel": {
                "projectId": "int",
                "projectName": "string",
                "projectDesc": "string",
                "startDate": "date",
                "endDate": "date",
                "contactPerson": "int",
                "account": "int",
                "status": "string",
                "createts": "long",
                "shortCode": "string",
                "probability": "int",
                "contactPersonName": "string",
                "statusValue": "string",
                "puid": "int",
                "billingType": "string"
              },
              "roleCode": "int",
              "isAdmin": "int",
              "allocation": "double",
              "billableAllocation": "int",
              "billRate": "int",
              "billPeriod": "string",
              "billCurrencyCode": "string",
              "overtimeCoefficient": "double",
              "cid": "int",
              "startDate": "date",
              "endDate": "date",
              "createuserid": "int",
              "status": "string",
              "approvalFlowModel": {},
              "userModel": {
                "cid": "int",
                "userId": "int",
                "position": "string",
                "firstName": "string",
                "shortName": "string",
                "lastName": "string",
                "displayFullName": "string",
                "userStartDate": "date",
                "email": "string",
                "cellPhone": "string",
                "userName": "string",
                "prefixSalutation": "string",
                "middleName": "string",
                "namePronunciation": "string",
                "familySuffix": "string",
                "status": "string",
                "gender": "string",
                "phone": "string",
                "im": "string",
                "createts": "long",
                "imageName": "string",
                "thumbnail": "string",
                "allocation": "double",
                "userDisplayName": "string",
                "star": "int",
                "languagePreference": "string",
                "jobGrade": "string",
                "isView": "boolean"
              }
            }
          ]
        }
    ProjectListAllocations400Response:
      type: string
      example: ''
    ProjectListAllocations401Response:
      type: object
      properties: {}
    ProjectListAllocations409Response:
      type: object
      properties: {}
    ProjectAssignUserAllocationResponse:
      type: string
      example: |-
        {
            "userProjectId": "int"
        }
    ProjectAssignUserAllocation400Response:
      type: object
      properties: {}
    ProjectAssignUserAllocation401Response:
      type: object
      properties: {}
    ProjectAssignUserAllocation409Response:
      type: object
      properties: {}
    ProjectDetailsByIdResponse:
      type: string
      example: |-
        {
          "data": {
            "projectId": "int",
            "projectName": "string",
            "projectDesc": "string",
            "startDate": "date",
            "endDate": "date",
            "contactPerson": "int",
            "account": "int",
            "status": "string",
            "createts": "int",
            "shortCode": "string",
            "probability": "int",
            "contactPersonName": "string",
            "statusValue": "string",
            "puid": "string",
            "billingType": "string"
          }
        }
    ProjectDetailsById400Response:
      type: object
      properties: {}
    ProjectDetailsById401Response:
      type: object
      properties: {}
    ProjectDetailsById409Response:
      type: object
      properties: {}
    ProjectListProjectsResponse:
      type: string
      example: |-
        {
          "projects": [
            {
              "projectId": "int",
              "projectName": "string",
              "projectDesc": "string",
              "startDate": "date",
              "endDate": "date",
              "contactPerson": "int",
              "account": "int",
              "status": "string",
              "createts":"int",
              "shortCode": "string",
              "probability": "int",
              "contactPersonName": "string",
              "statusValue": "string",
              "puid": "string",
              "billingType": "string"
            },
            {
              "projectId": "int",
              "projectName": "string",
              "projectDesc": "string",
              "startDate": "date",
              "endDate": "date",
              "contactPerson": "int",
              "account": "int",
              "status": "string",
              "createts": "int",
              "shortCode": "string",
              "probability": "int",
              "contactPersonName": "string",
              "statusValue": "string",
              "puid": "string",
              "billingType": "string"
            }
          ]
        }
    ProjectListProjects400Response:
      type: object
      properties: {}
    ProjectListProjects401Response:
      type: object
      properties: {}
    ProjectListProjects409Response:
      type: object
      properties: {}
    ProjectCreateNewResponse:
      type: string
      example: |-
        {
          "projectId": "int"
        }
    ProjectCreateNew400Response:
      type: object
      properties: {}
    ProjectCreateNew401Response:
      type: object
      properties: {}
    ProjectCreateNew409Response:
      type: object
      properties: {}
    ReportsGetContentForReportResponse:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              entityList:
                type: array
                items:
                  type: object
                  properties:
                    Account Name:
                      type: string
                      example: Saksham's Account
                    Account Description:
                      type: string
                      example: Saksham's Account
        message:
          type: string
          example: success
    ReportsGetContentForReport401Response:
      type: object
      properties:
        message:
          type: string
          example: Error while authenticating user.
    ReportsGetContentForReport404Response:
      type: object
      properties:
        message:
          type: string
          example: Error while processing this request.
    ReportsGetContentForReport409Response:
      type: object
      properties:
        message:
          type: string
          example: Failure
    SkillsCreateNewSkillResponse:
      type: object
      properties:
        Status:
          type: string
          example: string
        Description:
          type: string
          example: string
        SkillCode:
          type: string
          example: string
        SkillTypeModel:
          type: object
          properties:
            skillTypeId:
              type: string
              example: int
            skillTypeName:
              type: string
              example: string
            skillTypeDesc:
              type: string
              example: string
            skillViewModelList:
              type: string
              example: model
            createUserId:
              type: string
              example: string
            createts:
              type: string
              example: int
            skillCategoryModel:
              type: string
              example: model
            cid:
              type: string
              example: int
        AssessmentModel:
          type: object
          properties:
            scoretemplateid:
              type: string
              example: int
            cid:
              type: string
              example: int
            scoreMin:
              type: string
              example: int
            scoreMax:
              type: string
              example: int
            scoreMaxValidation:
              type: string
              example: int
            scoringInstructions:
              type: string
              example: string
            scoreName:
              type: string
              example: string
            allowFractional:
              type: string
              example: int
            rangeModelList:
              type: string
              example: model
            visualizationType:
              type: string
              example: string
            status:
              type: string
              example: string
        SkillId:
          type: string
          example: int
        message:
          type: string
          example: Skill created successfully.
    SkillsCreateNewSkill401Response:
      type: object
      properties:
        message:
          type: string
          example: >-
            Access denied! Either Authorization or x-api-key & userid parameters
            are not present/valid.
    SkillsCreateNewSkill409Response:
      type: object
      properties:
        message:
          type: string
          example: Error while creating skill from API.
    SkillsGetSkillsResponse:
      type: array
      items:
        type: object
        properties:
          description:
            type: string
            example: string
          sequence:
            type: string
            example: int
          createUserId:
            type: string
            example: int
          skillCode:
            type: string
            example: string
          createts:
            type: string
            example: int
          id:
            type: string
            example: int
          status:
            type: string
            example: string
    SkillsGetSkills401Response:
      type: object
      properties:
        message:
          type: string
          example: >-
            Access denied! Either Authorization or x-api-key & userid parameters
            are not present/valid.
    SkillsGetSkills409Response:
      type: object
      properties:
        message:
          type: string
          example: Error while getting skills from API.
    SkillsGetUserAssignedSkillsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              description:
                type: string
                example: string
              skillUserId:
                type: string
                example: int
              skillId:
                type: string
                example: int
              userId:
                type: string
                example: int
              level:
                type: string
                example: int
              cid:
                type: string
                example: int
              lastUpdateUserModel:
                type: string
                example: int
              createUserId:
                type: string
                example: int
              status:
                type: string
                example: string
              createts:
                type: string
                example: int
              performancelevel:
                type: string
                example: int
              candidateid:
                type: string
                example: int
              weightage:
                type: string
                example: int
              targetLevel:
                type: string
                example: int
              targetLevelCreatets:
                type: string
                example: int
              targetLevelCreateUserId:
                type: string
                example: int
              skillCounsellor:
                type: string
                example: string
              yearsOfExperience:
                type: string
                example: int
              dateOfLastUse:
                type: string
                example: int
              skillAcquireDate:
                type: string
                example: int
              skillModel:
                type: object
                properties:
                  description:
                    type: string
                    example: string
                  skillId:
                    type: string
                    example: int
                  skillCode:
                    type: string
                    example: string
                  cid:
                    type: string
                    example: int
                  skillTypeModel:
                    type: string
                    example: string
                  assessmentModel:
                    type: object
                    properties:
                      scoretemplateid:
                        type: string
                        example: int
                      cid:
                        type: string
                        example: int
                      scoreMin:
                        type: string
                        example: int
                      scoreMax:
                        type: string
                        example: int
                      scoreMaxValidation:
                        type: string
                        example: int
                      scoringInstructions:
                        type: string
                        example: string
                      scoreName:
                        type: string
                        example: string
                      allowFractional:
                        type: string
                        example: int
                      rangeModelList:
                        type: array
                        items:
                          type: object
                          properties:
                            description:
                              type: string
                              example: string
                            strangeid:
                              type: string
                              example: int
                            scoreTempId:
                              type: string
                              example: int
                            rangeMin:
                              type: string
                              example: int
                            rangeMax:
                              type: string
                              example: int
                            interpretation:
                              type: string
                              example: string
                            colorCode:
                              type: string
                              example: string
                            cid:
                              type: string
                              example: int
                      visualizationType:
                        type: string
                        example: string
                      status:
                        type: string
                        example: string
                  sequence:
                    type: string
                    example: int
                  skillTypeName:
                    type: string
                    example: string
                  userSkillLevel:
                    type: string
                    example: int
                  status:
                    type: string
                    example: string
                  createUserId:
                    type: string
                    example: int
                  createts:
                    type: string
                    example: int
        message:
          type: string
          example: List of skills fetched successfully.
    SkillsGetUserAssignedSkills401Response:
      type: object
      properties:
        message:
          type: string
          example: >-
            Access denied! Either Authorization or x-api-key & userid parameters
            are not present/valid.
    SkillsGetUserAssignedSkills409Response:
      type: object
      properties:
        message:
          type: string
          example: Error while getting skills assigned to a user from API.
    SurveyGetAllSurveyResponsesResponse:
      type: string
      example: |-
        {}{
            "success": 200,
            "Responses": [
                {
                    "responseId": "Integer",
                    "itemId":  "Integer",
                    "response": "String",
                    "createUserId":  "Integer",
                    "createts":  "Timestamp",
                    "assignmentId":  "Integer",
                    "digitalSignatureModel": "Object",
                    "cid":  "Integer",
                    "remoteAddr": "String",
                    "graderResponse": "Boolean",
                    "attachmentModel": "Object",
                    "sentimentCode": "String",
                    "sentimentScore": "JSON",
                    "answerCorrect": "Boolean",
                    "userId": "Integer"
                }
            ]
        }
    SurveyGetAllSurveyResponses401Response:
      type: object
      properties:
        message:
          type: string
          example: Exception while authenticating user.
    SurveyGetAllSurveyResponses403Response:
      type: object
      properties:
        message:
          type: string
          example: User doesn't have permission to view the responses of the survey.
    SurveyCreateItemResponseResponse:
      type: object
      additionalProperties:
        type: object
    SurveyGetListResponse:
      type: object
      additionalProperties:
        type: object
    SurveyCreateResponseByAssignmentIdResponse:
      type: object
      additionalProperties:
        type: object
    SurveyDetailsByFormIdResponse:
      type: object
      additionalProperties:
        type: object
    TimecardsGetByUserIdResponse:
      type: string
      example: |2-
            {
                "cardId": "int",
                "userModel": {
                    "cid": "int",
                    "empId": "string",
                    "userId": "int",
                    "position": "string",
                    "firstName": "string",
                    "shortName": "string",
                    "lastName": "string",
                    "displayFullName": "string",
                    "userStartDate": "date",
                    "email": "string",
                    "cellPhone": "string",
                    "userName": "string",
                    "userProfileModel": {
                        "cid": "int",
                        "profileId": "int",
                        "profileName": "string",
                        "profileDescription": "string",
                        "orgId": "int",
                        "profileResponsibilities": "",
                        "profileRequirements": "string",
                        "salaryBandMin": "double",
                        "salaryBandMax": "double",
                        "salaryBandCurrency": "string",
                        "managerProfileId": "int",
                        "managerProfileName": "string",
                        "customFieldValueModelList": "",
                        "numberofUsers": "int",
                        "createuserid": "int",
                        "status": "string",
                        "careerPathwayModelList": "",
                        "objectType": "string",
                        "objectName": "string",
                        "objectid": "int",
                    },
                    "prefixSalutation": "string",
                    "secondLastName": "string",
                    "middleName": "string",
                    "namePronunciation": "string",
                    "familySuffix": "string",
                    "status": "string",
                    "notes": "string",
                    "ptoannual": "float",
                    "ptobalance": "float",
                    "gender": "string",
                    "phone": "string",
                    "im": "string",
                    "createts": "",
                    "timezone": "string",
                    "practiceId": "int",
                    "profileId": "int",
                    "allocation": "double",
                    "lastupdateuserid":"int",
                    "lastupdatets": "date",
                    "userDateFormat": "date",
                    "hrPortal": "string",
                    "userDisplayName": "string",
                    "star": "int",
                    "timecardPeriodPref": "string",
                    "languagePreference": "string",
                    "tosVersion": "string",
                    "guid": "string",
                    "jobGrade": "string",
                    "paId": "int",
                    "hasAccess": "boolean",
                    "notifications": "boolean",
                    "timesheetReminders": "boolean",
                    "firstSatWorking": "boolean",
                    "secondSatWorking": "boolean",
                    "isView": "boolean",
                    "view": "boolean",
                },
                "description": "string",
                "startDateTime": "time",
                "endDateTime": "time",
                "projectId": "int",
                "caseNum": "string",
                "clockedOutsideGeofence": "int",
                "elapsedTime": "time",
                "chargeType": "string",
                "ptoComputed": "string",
                "caseURL": "string",
                "status": "string",
                "cid": "int",
                "createts": "",
                "date": "date",
                "amount": "double",
                "numberOfDays": "int",
                "customHours": "string",
                "paymentDate": "date",
                "sumOfElapsedTime": "string",
                "createUserID": "int",
                "usedTime": "long",
                "projectModel": {
                    "projectId": "int",
                    "projectName": "string",
                    "projectDesc": "string",
                    "startDate": "date",
                    "endDate": "date",
                    "contactPerson": "int",
                    "account": "int",
                    "accountModel": "",
                    "userModelList": "",
                    "status": "string",
                    "createts": "",
                    "shortCode": "string",
                    "probability": "int",
                    "contactPersonName": "string",
                    "statusValue": "string",
                    "pgroupid": "int",
                    "puid": "string",
                    "billingType": "string",
                    "currencyId": "int",
                    "currencyModel": "",
                    "fixedAmount": "double",
                    "timeSheetOpenToAll": "int",
                    "userModel": "",
                    "projectGroupModel": {
                        "pgroupid": "int",
                        "groupName": "string",
                        "groupDesc": "string",
                        "cid": "int",
                    },
                    "groupName": "string",
                    "accountName": "string",
                    "pmMail": "string",
                    "locationid": "int",
                    "locationModel": "",
                    "reportMethod": "string",
                    "industry": "string",
                    "cid": "int",
                    "isAdmin": "boolean",
                    "customFieldValueModelList": "",
                    "billinCategoryModels": "",
                    "createuserid": "int",
                    "lastupdateuserid": "int",
                    "admin": "boolean",
                    "projProbability": "int",
                    "projStatus": "string",
                },
                "createUserModel": {
                    "userId": "int",
                    "firstName": "string",
                    "lastName": "string",
                    "name": "string",
                    "phone": "long",
                    "email": "string",
                    "status": "string",
                    "shortName": "string",
                    "gender": "string",
                    "jobTitle": "string",
                    "departmentId": "int",
                    "profileId": "int",
                    "profileName": "string",
                    "timezone": "string",
                    "userStartDate": "date",
                    "cellPhone": "string",
                    "empId": "int",
                    "allocation": "double",
                    "userDateFormat": "date",
                    "star": "int",
                    "notes": "string",
                    "im": "string",
                    "createuserid": "int",
                    "cid": "int",
                    "guid": "string",
                    "hasAccess": "boolean",
                    "id": "int"
                },
                "source": "string",
                "projectManager": "string",
                "timezone": "string",
                "categoryCode": "string",
                "notes": "string",
                "billable": "string",
                "activity": "string",
                "invoiceId": "int",
                "approvalRejectionReason": "string",
                "timesheetId": "int",
                "timecardApprovalFlowModel": "",
                "activityTypeModel": "",
                "startDateTimeStr": "string",
                "endDateTimeStr": "string",
                "modValue": "int",
                "minutes": "int",
                "timecardApprovalModel": "",
                "clockInLongitude": "double",
                "clockInLatitude": "double",
                "clockOutLongitude": "double",
                "clockOutLatitude": "double",
                "aerialDistance": "double",
                "projectAreaId": "int",
                "projectAreaModel": "",
                "rawStartDateTime": "time",
                "rawEndDateTime": "time",
                "worklogId": "int",
                "id": "int"
            }
    TimecardsGetByUserId401Response:
      type: string
      example: ''
    TimecardsGetByUserId409Response:
      type: string
      example: ''
    TimecardsGetByUserId200Response:
      type: object
      properties:
        description:
          type: string
          example: string
        createUserID:
          type: string
          example: int
        startDateTime:
          type: string
          example: time
        cardId:
          type: string
          example: int
        createts:
          type: string
          example: ''
        id:
          type: string
          example: int
        endDateTime:
          type: string
          example: time
        projectId:
          type: string
          example: int
        elapsedTime:
          type: string
          example: time
        cid:
          type: string
          example: int
    TimecardsGetByUserId400Response:
      type: string
      example: ''
    TimecardsGetDetailsByTimecardIdResponse:
      type: string
      example: |2-
            {
                "cardId": "int",
                "userModel": {
                    "cid": "int",
                    "empId": "string",
                    "userId": "int",
                    "position": "string",
                    "firstName": "string",
                    "shortName": "string",
                    "lastName": "string",
                    "displayFullName": "string",
                    "userStartDate": "date",
                    "email": "string",
                    "cellPhone": "string",
                    "userName": "string",
                    "userProfileModel": {
                        "cid": "int",
                        "profileId": "int",
                        "profileName": "string",
                        "profileDescription": "string",
                        "orgId": "int",
                        "profileResponsibilities": "",
                        "profileRequirements": "string",
                        "salaryBandMin": "double",
                        "salaryBandMax": "double",
                        "salaryBandCurrency": "string",
                        "managerProfileId": "int",
                        "managerProfileName": "string",
                        "customFieldValueModelList": "",
                        "numberofUsers": "int",
                        "createuserid": "int",
                        "status": "string",
                        "careerPathwayModelList": "",
                        "objectType": "string",
                        "objectName": "string",
                        "objectid": "int",
                    },
                    "prefixSalutation": "string",
                    "secondLastName": "string",
                    "middleName": "string",
                    "namePronunciation": "string",
                    "familySuffix": "string",
                    "status": "string",
                    "notes": "string",
                    "ptoannual": "float",
                    "ptobalance": "float",
                    "gender": "string",
                    "phone": "string",
                    "im": "string",
                    "createts": "",
                    "timezone": "string",
                    "practiceId": "int",
                    "profileId": "int",
                    "allocation": "double",
                    "lastupdateuserid":"int",
                    "lastupdatets": "date",
                    "userDateFormat": "date",
                    "hrPortal": "string",
                    "userDisplayName": "string",
                    "star": "int",
                    "timecardPeriodPref": "string",
                    "languagePreference": "string",
                    "tosVersion": "string",
                    "guid": "string",
                    "jobGrade": "string",
                    "paId": "int",
                    "hasAccess": "boolean",
                    "notifications": "boolean",
                    "timesheetReminders": "boolean",
                    "firstSatWorking": "boolean",
                    "secondSatWorking": "boolean",
                    "isView": "boolean",
                    "view": "boolean",
                },
                "description": "string",
                "startDateTime": "time",
                "endDateTime": "time",
                "projectId": "int",
                "caseNum": "string",
                "clockedOutsideGeofence": "int",
                "elapsedTime": "time",
                "chargeType": "string",
                "ptoComputed": "string",
                "caseURL": "string",
                "status": "string",
                "cid": "int",
                "createts": "",
                "date": "date",
                "amount": "double",
                "numberOfDays": "int",
                "customHours": "string",
                "paymentDate": "date",
                "sumOfElapsedTime": "string",
                "createUserID": "int",
                "usedTime": "long",
                "projectModel": {
                    "projectId": "int",
                    "projectName": "string",
                    "projectDesc": "string",
                    "startDate": "date",
                    "endDate": "date",
                    "contactPerson": "int",
                    "account": "int",
                    "accountModel": "",
                    "userModelList": "",
                    "status": "string",
                    "createts": "",
                    "shortCode": "string",
                    "probability": "int",
                    "contactPersonName": "string",
                    "statusValue": "string",
                    "pgroupid": "int",
                    "puid": "string",
                    "billingType": "string",
                    "currencyId": "int",
                    "currencyModel": "",
                    "fixedAmount": "double",
                    "timeSheetOpenToAll": "int",
                    "userModel": "",
                    "projectGroupModel": {
                        "pgroupid": "int",
                        "groupName": "string",
                        "groupDesc": "string",
                        "cid": "int",
                    },
                    "groupName": "string",
                    "accountName": "string",
                    "pmMail": "string",
                    "locationid": "int",
                    "locationModel": "",
                    "reportMethod": "string",
                    "industry": "string",
                    "cid": "int",
                    "isAdmin": "boolean",
                    "customFieldValueModelList": "",
                    "billinCategoryModels": "",
                    "createuserid": "int",
                    "lastupdateuserid": "int",
                    "admin": "boolean",
                    "projProbability": "int",
                    "projStatus": "string",
                },
                "createUserModel": {
                    "userId": "int",
                    "firstName": "string",
                    "lastName": "string",
                    "name": "string",
                    "phone": "long",
                    "email": "string",
                    "status": "string",
                    "shortName": "string",
                    "gender": "string",
                    "jobTitle": "string",
                    "departmentId": "int",
                    "profileId": "int",
                    "profileName": "string",
                    "timezone": "string",
                    "userStartDate": "date",
                    "cellPhone": "string",
                    "empId": "int",
                    "allocation": "double",
                    "userDateFormat": "date",
                    "star": "int",
                    "notes": "string",
                    "im": "string",
                    "createuserid": "int",
                    "cid": "int",
                    "guid": "string",
                    "hasAccess": "boolean",
                    "id": "int"
                },
                "source": "string",
                "projectManager": "string",
                "timezone": "string",
                "categoryCode": "string",
                "notes": "string",
                "billable": "string",
                "activity": "string",
                "invoiceId": "int",
                "approvalRejectionReason": "string",
                "timesheetId": "int",
                "timecardApprovalFlowModel": "",
                "activityTypeModel": "",
                "startDateTimeStr": "string",
                "endDateTimeStr": "string",
                "modValue": "int",
                "minutes": "int",
                "timecardApprovalModel": "",
                "clockInLongitude": "double",
                "clockInLatitude": "double",
                "clockOutLongitude": "double",
                "clockOutLatitude": "double",
                "aerialDistance": "double",
                "projectAreaId": "int",
                "projectAreaModel": "",
                "rawStartDateTime": "time",
                "rawEndDateTime": "time",
                "worklogId": "int",
                "id": "int"
            }
    TimecardsGetDetailsByTimecardId403Response:
      type: object
      properties:
        message:
          type: string
          example: User doesn't have persmission to fetch timecard details.
    TimecardsGetDetailsByTimecardId404Response:
      type: object
      properties:
        message:
          type: string
          example: Timecard details not found
    TimecardsGetDetailsByTimecardId409Response:
      type: object
      properties:
        message:
          type: string
          example: Error while fetching timecard details
    TimesheetsGetTimecardsByTimesheetIdResponse:
      type: string
      example: |-
        {
            "timesheetId": "int",
            "isClockedIn": "boolean",
            "data": [
                {
                    "cardId": "int",
                    "userModel": {
                        "cid": "int",
                        "empId": "string",
                        "userId": "int",
                        "position": "string",
                        "firstName": "string",
                        "shortName": "string",
                        "lastName": "string",
                        "displayFullName": "string",
                        "userStartDate": "Date",
                        "email": "string",
                        "cellPhone": "long",
                    },
                    "clockInLongitude":"double",
                    "clockInLatitude": "double",
                    "clockOutLongitude": "double",
                    "clockOutLatitude": "double",
                }
            ],
            "message": "successful"
        }
    TimesheetsGetTimecardsByTimesheetId401Response:
      type: object
      properties:
        message:
          type: string
          example: >-
            Access denied! Either Authorization or x-api-key & userid parameters
            are not present/valid or you don't have the necessary permissions.
    TimesheetsGetTimecardsByTimesheetId409Response:
      type: object
      properties:
        message:
          type: string
          example: failure.
    TimesheetsListActivityTypesByCidResponse:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              description:
                type: string
                example: string
              activityId:
                type: string
                example: int
              activityType:
                type: string
                example: string
              status:
                type: string
                example: string
              cid:
                type: string
                example: int
              createts:
                type: string
                example: ''
    TimesheetsListActivityTypesByCid401Response:
      type: object
      properties:
        message:
          type: string
          example: >-
            Access denied! Either Authorization or x-api-key & userid parameters
            are not present/valid or you don't have the necessary permissions.
    TimesheetsListActivityTypesByCid409Response:
      type: object
      properties:
        message:
          type: string
          example: failure.
    TimesheetsGetActiveAllocationsResponse:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              projectId:
                type: string
                example: int
              projectName:
                type: string
                example: string
              projectDesc:
                type: string
                example: string
              startDate:
                type: string
                example: date
              endDate:
                type: string
                example: date
              contactPerson:
                type: string
                example: long
              account:
                type: string
                example: long
              status:
                type: string
                example: string
              createts:
                type: string
                example: ''
              shortCode:
                type: string
                example: string
              probability:
                type: string
                example: int
              contactPersonName:
                type: string
                example: string
              statusValue:
                type: string
                example: string
              puid:
                type: string
                example: string
              billingType:
                type: string
                example: ''
              timeSheetOpenToAll:
                type: string
                example: int
              projectGroupModel:
                type: string
                example: ''
              locationModel:
                type: string
                example: ''
              customFieldValueModelList:
                type: string
                example: ''
              billinCategoryModels:
                type: string
                example: ''
    TimesheetsGetActiveAllocations401Response:
      type: object
      properties:
        message:
          type: string
          example: >-
            Access denied! Either Authorization or x-api-key & userid parameters
            are not present/valid or you don't have the necessary permissions.
    TimesheetsGetActiveAllocations409Response:
      type: object
      properties:
        message:
          type: string
          example: failure
    TimesheetsClockInResponse:
      type: object
      properties:
        timesheetId:
          type: string
          example: int
        timecardId:
          type: string
          example: int
        startTime:
          type: string
          example: time
        message:
          type: string
          example: string
    TimesheetsClockIn401Response:
      type: object
      properties:
        message:
          type: string
          example: >-
            Access denied! Either Authorization or x-api-key & userid parameters
            are not present/valid or you don't have the necessary permissions.
    TimesheetsClockIn403Response:
      type: object
      properties:
        message:
          type: string
          example: Clock in from mobile app is not allowed.
    TimesheetsClockIn409Response:
      type: object
      properties:
        message:
          type: string
          example: failure.
    TimesheetsClockOutResponse:
      type: object
      properties:
        startTime:
          type: string
          example: time
        endTime:
          type: string
          example: time
        message:
          type: string
          example: string
        elapsedTime:
          type: string
          example: time
    TimesheetsClockOut401Response:
      type: object
      properties:
        message:
          type: string
          example: >-
            Access denied! Either Authorization or x-api-key & userid parameters
            are not present/valid or you don't have the necessary permissions.
    TimesheetsClockOut409Response:
      type: object
      properties:
        message:
          type: string
          example: failure.
    TimesheetsDeleteByTimesheetIdResponse:
      type: object
      properties:
        message:
          type: string
          example: successful
    TimesheetsDeleteByTimesheetId401Response:
      type: object
      properties:
        message:
          type: string
          example: >-
            Access denied! Either Authorization or x-api-key & userid parameters
            are not present/valid or you don't have the necessary permissions.
    TimesheetsDeleteByTimesheetId409Response:
      type: object
      properties:
        message:
          type: string
          example: failure.
    TimesheetsGetPreferencesByCidResponse:
      type: object
      properties:
        timesheetStartDay:
          type: string
          example: int
        billablePrefValue:
          type: string
          example: string
        futureTcPrefValue:
          type: string
          example: string
        endDate:
          type: string
          example: date
        projectAreaPrefValue:
          type: string
          example: string
        complianceMsg:
          type: string
          example: string
        activityTypePrefValue:
          type: string
          example: string
        mobileAppClockInPrefValue:
          type: string
          example: string
        allocatedProjectPrefValue:
          type: string
          example: string
        addEditTcPrefValue:
          type: string
          example: string
        backdatedTcReasonPrefValue:
          type: string
          example: string
        timesheetPeriod:
          type: string
          example: string
        categoryPrefValue:
          type: string
          example: string
        startTimeEndTimeRequired:
          type: string
          example: string
        workingHrsPerDay:
          type: string
          example: int
        kioskAppClockInPrefValue:
          type: string
          example: string
        qrCodeClockInPrefValue:
          type: string
          example: string
        tcApprovalReasonPrefValue:
          type: string
          example: string
        clockInOutsideGeofencePreferenceValue:
          type: string
          example: string
        startDate:
          type: string
          example: date
        tcRejectionReasonPrefValue:
          type: string
          example: string
    TimesheetsGetPreferencesByCid401Response:
      type: object
      properties:
        message:
          type: string
          example: >-
            Access denied! Either Authorization or x-api-key & userid parameters
            are not present/valid or you don't have the necessary permissions.
    TimesheetsGetPreferencesByCid409Response:
      type: object
      properties:
        message:
          type: string
          example: failure.
    TimesheetsCreateOrUpdateTimesheetResponse:
      type: object
      properties:
        timesheetId:
          type: string
          example: int
        timecardId:
          type: string
          example: int
        message:
          type: string
          example: successful
    TimesheetsCreateOrUpdateTimesheet401Response:
      type: object
      properties:
        message:
          type: string
          example: >-
            Access denied! Either Authorization or x-api-key & userid parameters
            are not present/valid or you don't have the necessary permissions.
    TimesheetsCreateOrUpdateTimesheet403Response:
      type: object
      properties:
        message:
          type: string
          example: Cannot create timecard when timesheet is submitted/approved.
    TimesheetsCreateOrUpdateTimesheet409Response:
      type: object
      properties:
        message:
          type: string
          example: failure
    TimesheetsUpdateStatusByTimesheetIdResponse:
      type: object
      properties:
        message:
          type: string
          example: successful
    TimesheetsUpdateStatusByTimesheetId401Response:
      type: object
      properties:
        message:
          type: string
          example: >-
            Access denied! Either Authorization or x-api-key & userid parameters
            are not present/valid or you don't have the necessary permissions.
    TimesheetsUpdateStatusByTimesheetId409Response:
      type: object
      properties:
        message:
          type: string
          example: failure
    TimesheetsGetByUserIdResponse:
      type: string
      example: |2-
         {
            "data": [
                {
                    "timesheetId": "int",
                    "startDate": "Date",
                    "endDate": "Date",
                    "status": "string",
                    "userName": "string",
                    "userId": "int",
                    "email": "string",
                    "empId": "string",
                    "gender": "string",
                    "orgUnit": "string",
                    "departmentId": "int",
                    "locationId": "int",
                    "locationName": "string",
                    "userStatus": "string",
                    "approvalFlowId": "int",
                    "cardsCount": "int",
                    "totalTime": "long",
                    "leaveHours": "long",
                    "holidayHours": "long",
                    "cid": "int",
                }
            ],
            "message": "successful"
        }
    TimesheetsGetByUserId401Response:
      type: object
      properties:
        message:
          type: string
          example: >-
            Access denied! Either Authorization or x-api-key & userid parameters
            are not present/valid or you don't have the necessary permissions.
    TimesheetsGetByUserId409Response:
      type: object
      properties:
        message:
          type: string
          example: failure
    TimesheetsGetApprovalListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties:
              timesheetId:
                type: string
                example: int
              startDate:
                type: string
                example: date
              endDate:
                type: string
                example: date
              status:
                type: string
                example: string
              userName:
                type: string
                example: string
              userId:
                type: string
                example: int
              email:
                type: string
                example: string
              empId:
                type: string
                example: long
              gender:
                type: string
                example: string
              orgUnit:
                type: string
                example: string
              departmentId:
                type: string
                example: int
              locationId:
                type: string
                example: int
              locationName:
                type: string
                example: string
              userStatus:
                type: string
                example: string
              approvalFlowId:
                type: string
                example: int
              cardsCount:
                type: string
                example: int
              totalTime:
                type: string
                example: long
              leaveHours:
                type: string
                example: long
              holidayHours:
                type: string
                example: long
              cid:
                type: string
                example: int
        message:
          type: string
          example: successful
    TimesheetsGetApprovalList401Response:
      type: object
      properties:
        message:
          type: string
          example: >-
            Access denied! Either Authorization or x-api-key & userid parameters
            are not present/valid or you don't have the necessary permissions.
    TimesheetsGetApprovalList409Response:
      type: object
      properties:
        message:
          type: string
          example: failure
    TimesheetsGetByTimesheetIdResponse:
      type: string
      example: |-
        {
            "data": {
                "timesheetId": "int",
                "tcStartDate": "date",
                "tcEndDate": "date",
                "userId": "int",
                "createUserId": "int",
                "status": "string",
                "comments": "string",
                "approvalFlowId": "int",
                "cid": "int",
                "createts": "int",
                "totalTime": "time",
                "cardsCount": "int",
                "ptoComputed": "long",
                "leaveHours":  "long",
                "holidayHours": "long",
                "overtimeHours":  "long",
                "userViewModel": {
                    "userId": "int",
                    "firstName": "string",
                    "lastName": "string",
                    "name": "string",
                    "phone": "long",
                    "email": "string",
                    "status": "string",
                    "shortName": "string",
                    "gender": "string",
                    "jobTitle": "string",
                    "departmentId": "int",
                    "locationId": "int",
                    "department": "string",
                    "location": "string",
                    "profileId": "int",
                "timecardApprovalFlowModel": {
                    "flowId": "int",
                    "flowName": "string",
                    "description": "string",
                    "countryId": "string",
                    "locationId": "int",
                    "departmentId": "int",
                    "cid": "int"
                }
            }
        }
    TimesheetsGetByTimesheetId401Response:
      type: object
      properties:
        message:
          type: string
          example: >-
            Access denied! Either Authorization or x-api-key & userid parameters
            are not present/valid or you don't have the necessary permissions.
    TimesheetsGetByTimesheetId409Response:
      type: object
      properties:
        message:
          type: string
          example: Error while getting timesheet.
    TimesheetsGetDetailsByTimesheetIdResponse:
      type: string
      example: |-
        {
          "data": {
            "timesheetId": "int",
            "tcStartDate": "date",
            "tcEndDate": "date",
            "userId": "int",
            "createUserId": "long",
            "status": "string",
            "comments": "string",
            "approvalFlowId": "int",
            "cid": "int",
            "createts": "int",
            "totalTime": "long",
            "cardsCount": "int",
            "leaveHours": "long",
            "holidayHours": "long",
            "overtimeHours": "long",
            "timecardApprovalFlowModel": {},
            "customFieldValueModelList": [],
            "timesheetAuditModelList": [
              {
                "timesheetAuditId": "int",
                "timesheetId": "int",
                "comments": "string",
                "createUserId": "long",
                "status": "string",
                "cid": "int",
                "approvalLevel": "string",
                "relationType": "string",
                "createts": "int"
              },
              {
                "timesheetAuditId": "int",
                "timesheetId": "int",
                "comments": "string",
                "createUserId": "long",
                "status": "string",
                "cid": "int",
                "approvalLevel": "int",
                "relationType": "string",
                "createts": "int"
              }
            ]
        }
    TimesheetsGetDetailsByTimesheetId401Response:
      type: object
      properties:
        message:
          type: string
          example: >-
            Access denied! Either Authorization or x-api-key & userid parameters
            are not present/valid or you don't have the necessary permissions.
    TimesheetsGetDetailsByTimesheetId403Response:
      type: object
      properties:
        message:
          type: string
          example: User doesn't have persmission to fetch timesheet details.
    TimesheetsGetDetailsByTimesheetId404Response:
      type: object
      properties:
        message:
          type: string
          example: Timesheet details not found
    TimesheetsGetDetailsByTimesheetId409Response:
      type: object
      properties:
        message:
          type: string
          example: Error while fetching timesheet details.
    TrainingsUpdateUserStatusResponse:
      type: string
      example: |-
        {
            "data": [
                {
                    "message": "string",
         }
    TrainingsUpdateUserStatus401Response:
      type: string
      example: |-
        {
          "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid."
        }
    TrainingsUpdateUserStatus409Response:
      type: string
      example: |-
        {
          "message": "Error while updating the user training status."
        }
    TrainingsSynchronizeWithTalentLmsResponse:
      type: string
      example: |-
        {
            "data": [
                {
                     "createdTrainingCount": "int",
                    "existingTrainings": "int",
                    "userTrainingCount": "int",
                    "userTrainingUpdateCount": "int",
                    "statusCode": "string,
          }
    TrainingsSynchronizeWithTalentLms401Response:
      type: string
      example: |-
        {
          "message": "Access denied! Either Authorization or x-api-key & userid parameters are not present/valid."
        }
    TrainingsSynchronizeWithTalentLms409Response:
      type: string
      example: |-
        {
          "message": "Failed to sync with TalentLMS."
        }
    UserPtoPoliciesListPtoPoliciesResponse:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties: {}
    UserPtoPoliciesListPtoPolicies409Response:
      type: object
      properties:
        message:
          type: string
          example: failure
    UserPtoPoliciesGetPoliciesResponse:
      type: object
      properties:
        code:
          type: integer
          example: 1
          default: 0
        data:
          type: array
          items:
            type: object
            properties: {}
        message:
          type: string
          example: successful
    UserPtoPoliciesGetPolicies401Response:
      type: object
      properties:
        message:
          type: string
          example: >-
            Access denied! Either Authorization or x-api-key & userid parameters
            are not present/valid or you don't have the necessary permissions.
    UserWorkflowAssignWorkflowToUserResponse:
      type: object
      properties:
        message:
          type: string
          example: Workflow assigned successfully
    UserWorkflowAssignWorkflowToUser401Response:
      type: object
      properties:
        message:
          type: string
          example: Please fill the correct details
    UserWorkflowAssignWorkflowToUser403Response:
      type: object
      properties:
        message:
          type: string
          example: User doesn't have permission to assign workflow.
    UserWorkflowAssignWorkflowToUser404Response:
      type: object
      properties:
        message:
          type: string
          example: Not Found
    UserWorkflowAssignWorkflowToUser409Response:
      type: object
      properties:
        message:
          type: string
          example: Error while assigning workflow
    WorkflowsCreateNewTaskResponse:
      type: object
      properties:
        message:
          type: string
          example: >-
            Access denied! Either Authorization or x-api-key & userid parameters
            are not present/valid.
    WorkflowsCreateNewTask409Response:
      type: object
      properties:
        message:
          type: string
          example: Error while creating task.
    TestGetTestResponse:
      type: string
      example: "{\n            \"dynamicFormId\": \"int\",\n            \"name\": \"string\",\n            \"dynaFormCode\": \"string\",\n            \"description\": \"string\",\n            \"createUserModel\": {\n                \"cid\": \"int\",\n                \"empId\": \"string\",\n                \"userId\": \"int\",\n                \"position\": \"string\",\n                \"firstName\": \"string\",\n                \"shortName\": \"string\",\n                \"lastName\": \"string\",\n                \"workerTypeModel\": {\n                    \"wtid\": \"int\",\n                    \"cid\": \"int\",\n                    \"code\": \"string\",\n                    \"description\": \"string\",\n                    \"createuserid\": \"int\"\n                },\n                \"displayFullName\": \"string\",\n                \"userStartDate\": \"date\",\n                \"email\": \"string\",\n                \"cellPhone\": \"string\",\n                \"userName\": \"string\",\n                \"departmentModel\": {\n                    \"departmentId\": \"int\",\n                    \"name\": \"string\",\n                    \"description\": \"string\",\n                    \"deptHead\": \"int\",\n                    \"cid\": \"int\",\n                    \"departmentCode\": \"string\",\n                    \"departmentLabel\": \"string\",\n                    \"parentDepartmentId\": \"int\",\n                    \"parentDepartmentName\": \"string\",\n                    \"deptHeadName\": \"string\",\n                    \"noOfEmployees\": \"int\",\n                    \"userModel\": \"object\"\n                },\n                \"prefixSalutation\": \"string\",\n                \"secondLastName\": \"string\",\n                \"middleName\": \"string\",\n                \"familySuffix\": \"string\",\n                \"status\": \"string\",\n                \"notes\": \"string\",\n                \"ptoannual\": \"float\",\n                \"ptobalance\": \"float\",\n                \"gender\": \"string\",\n                \"userDateOfBirth\": \"date\",\n                \"phone\": \"string\",\n                \"im\": \"string\",\n                \"createts\": \"timestamp\",\n                \"timezone\": \"string\",\n                \"imageName\": \"string\",\n                \"thumbnail\": \"string\",\n                \"profileId\": \"int\",\n                \"allocation\": \"double\",\n                \"countryId\": \"int\",\n                \"lastupdateuserid\": \"int\",\n                \"lastupdatets\": \"int\",\n                \"userDateFormat\": \"string\",\n                \"hrPortal\": \"string\",\n                \"userDisplayName\": \"string\",\n                \"star\": \"int\",\n                \"timecardPeriodPref\": \"string\",\n                \"languagePreference\": \"string\",\n                \"tosVersion\": \"string\",\n                \"guid\": \"string\",\n                \"jobGrade\": \"string\",\n                \"paId\": \"int\",\n                \"hasAccess\": \"boolean\",\n                \"notifications\": \"boolean\",\n                \"timesheetReminders\": \"boolean\",\n                \"firstSatWorking\": \"boolean\",\n                \"secondSatWorking\": \"boolean\",\n                \"locationModel\": {\n                    \"locationId\": \"int\",\n                    \"locationName\": \"string\",\n                    \"cid\": \"int\",\n                    \"locationDescription\": \"string\",\n                    \"locationType\": \"string\",\n                    \"address\": \"string\",\n                    \"lattitude\": \"string\",\n                    \"longitude\": \"string\",\n                    \"locationUID\": \"string\",\n                    \"status\": \"string\",\n                    \"workingDays\": \"string\",\n                    \"locationCode\": \"string\",\n                    \"locationLabel\": \"string\",\n                    \"parentLocationId\": \"int\",\n                    \"createuserid\": \"int\",\n                    \"parentLocationName\": \"string\",\n                    \"noOfEmployees\": \"int\",\n                    \"addressModelList\": [\n                        {\n                            \"addressId\": \"int\",\n                            \"addressLine1\": \"string\",\n                            \"addressLine2\": \"string\",\n                            \"city\": \"string\",\n                            \"currentStatus\": \"string\",\n                            \"state\": \"string\",\n                            \"zipCode\": \"string\",\n                            \"createts\": \"timestamp\",\n                            \"cid\": \"int\",\n                            \"userId\": \"int\",\n                            \"candidateId\": \"int\",\n                            \"addressType\": \"string\",\n                            \"locationId\": \"int\",\n                            \"contactId\": \"int\",\n                            \"countryId\": \"int\",\n                            \"countryModel\": {\n                                \"countryId\": \"int\",\n                                \"countryName\": \"string\",\n                                \"iso2\": \"string\",\n                            },\n                            \"status\": \"string\",\n                            \"verificationStatus\": \"string\",\n                            \"custId\": \"int\",\n                            \"mapUrl\": \"string\",\n                            \"createUserId\": \"int\",\n                            \"extAppUID\": \"string\",\n                            \"countryCode\": \"string\",\n                            \"countryid\": \"int\"\n                        }\n                    ]\n                },\n                \"isView\": \"boolean\",\n                \"view\": \"boolean\"\n            },\n            \"formVisibility\": \"boolean\",\n            \"createts\": \"int\",\n            \"updatets\": \"int\",\n            \"cid\": \"int\",\n            \"availability\": \"string\",\n            \"status\": \"string\",\n            \"anonymous\": \"int\",\n            \"userGroupId\": \"int\",\n            \"secSequence\": \"string\",\n            \"sectionModelList\": [\n                {\n                    \"sectionId\": \"int\",\n                    \"name\": \"string\",\n                    \"cid\": \"int\",\n                    \"hidden\": \"boolean\",\n                    \"dynamicFormId\": \"int\",\n                    \"sequence\": \"int\",\n                    \"createUserId\": \"int\",\n                    \"description\": \"string\",\n                    \"dynamicFormItemModelList\": [\n                        {\n                            \"dynamicFormItemId\": \"int\",\n                            \"name\": \"string\",\n                            \"sectionId\": \"int\",\n                            \"createUserId\": \"int\",\n                            \"cid\": \"int\",\n                            \"fieldType\": \"string\",\n                            \"optionValues\": \"string\",\n                            \"helpText\": \"string\",\n                            \"createts\": \"int\",\n                            \"dynamicFormId\": \"int\",\n                            \"dynaFormFlow\": \"string\",\n                            \"mappedEntityItem\": \"string\",\n                            \"fieldTypeItem\": \"string\",\n                            \"mandatory\": \"int\",\n                            \"sequence\": \"int\",\n                            \"weightage\": \"double\",\n                            \"expectedValue\": \"string\",\n                            \"correctFeedback\": \"string\",\n                            \"incorrectFeedback\": \"string\",\n                            \"attachmentModel\": \"object\",\n                            \"prefill\": \"string\",\n                            \"dynaFormItemOptionModelList\": [\n                                {\n                                    \"optionId\": \"int\",\n                                    \"dynaFormItemId\": \"int\",\n                                    \"optionValue\": \"string\",\n                                    \"cid\": \"int\",\n                                    \"createts\": \"int\",\n                                    \"isCorrect\": \"boolean\"\n                                }\n                            ],\n                            \"customListModel\": \"object\",\n                            \"optionRandom\": \"boolean\",\n                            \"numberingStyle\": \"string\"\n                        }\n                      ],\n                    \"assignee\": \"string\",\n                    \"userGroupModel\": \"object\",\n                    \"reporting\": \"string\",\n                    \"departmentId\": \"int\",\n                    \"locationId\": \"int\",\n                    \"attachmentModel\": \"object\",\n                    \"assigneeModel\": \"object\",\n                    \"sample\": \"boolean\",\n                    \"totalweightage\": \"double\"\n                }\n            ],\n            \"thresholdScore\": \"double\",\n            \"formType\": \"string\",\n            \"dataFlow\": \"string\",\n            \"embedCode\": \"string\",\n            \"showCorrect\": \"boolean\",\n            \"listed\": \"int\",\n            \"publicSummary\": \"boolean\",\n            \"presentationStyle\": \"string\",\n            \"timeLimit\": \"int\",\n            \"attemptLimit\": \"string\",\n            \"layout\": \"string\",\n            \"helpTextStyle\": \"string\",\n            \"questionRandom\": \"boolean\",\n            \"specificQuestionRandom\": \"int\",\n            \"sectionVisibility\": \"boolean\",\n            \"mappedEntity\": \"string\",\n            \"automation\": \"boolean\"\n      }\n  ],\n  \"message\": \"successful\"\n}\n        \n\t\t"
    TestGetTest401Response:
      type: object
      properties:
        message:
          type: string
          example: >-
            Access denied! Either Authorization or x-api-key & userid parameters
            are not present/valid or you don't have the necessary permissions.
    TestGetTest409Response:
      type: object
      properties:
        message:
          type: string
          example: failure
    ShiftsListShiftsUsingGetResponse:
      type: string
      example: |-
        {
          "message": "You don't have permission to perform this operation."
        }
    ShiftsListShiftsUsingGet409Response:
      type: string
      example: |-
        {
          "message": "Something Went Wrong!"
        }
    CandidatesExtractPdfResumeResponse:
      type: object
      properties:
        message:
          type: string
          example: success
    CandidatesExtractPdfResume401Response:
      type: object
      properties:
        message:
          type: string
          example: unauthorized
    FeedbackListFeedbackResponse:
      type: object
      properties:
        message:
          type: string
          example: Feedback retrieved successfully.
        feedbackList:
          type: array
          items:
            type: object
            properties:
              feedbackid:
                type: string
                example: int
              feedback:
                type: string
                example: string
              feedbackDesc:
                type: string
                example: string
              assignedUserModel:
                type: object
                properties:
                  cid:
                    type: string
                    example: int
                  empId:
                    type: string
                    example: int
                  userId:
                    type: string
                    example: int
                  position:
                    type: string
                    example: string
                  firstName:
                    type: string
                    example: string
                  shortName:
                    type: string
                    example: string
                  lastName:
                    type: string
                    example: string
                  displayFullName:
                    type: string
                    example: string
                  userStartDate:
                    type: string
                    example: date
                  email:
                    type: string
                    example: string
                  cellPhone:
                    type: string
                    example: string
                  userName:
                    type: string
                    example: string
                  departmentModel:
                    type: object
                    properties:
                      description:
                        type: string
                        example: string
                      departmentId:
                        type: string
                        example: int
                      name:
                        type: string
                        example: string
                      deptHead:
                        type: string
                        example: int
                      cid:
                        type: string
                        example: int
                      departmentCode:
                        type: string
                        example: string
                      departmentLabel:
                        type: string
                        example: string
                      parentDepartmentId:
                        type: string
                        example: int
                      parentDepartmentName:
                        type: string
                        example: string
                      deptHeadName:
                        type: string
                        example: string
                      noOfEmployees:
                        type: string
                        example: int
                      userModel:
                        type: object
                        properties:
                          userId:
                            type: string
                            example: int
                          firstName:
                            type: string
                            example: string
                          lastName:
                            type: string
                            example: string
                          name:
                            type: string
                            example: string
                          phone:
                            type: string
                            example: string
                          email:
                            type: string
                            example: string
                          status:
                            type: string
                            example: string
                          shortName:
                            type: string
                            example: string
                          gender:
                            type: string
                            example: string
                          jobTitle:
                            type: string
                            example: string
                          departmentId:
                            type: string
                            example: int
                          locationId:
                            type: string
                            example: int
                          department:
                            type: string
                            example: string
                          location:
                            type: string
                            example: string
                          profileId:
                            type: string
                            example: int
                          timezone:
                            type: string
                            example: string
                          userStartDate:
                            type: string
                            example: date
                          userEndDate:
                            type: string
                            example: date
                          cellPhone:
                            type: string
                            example: string
                          empId:
                            type: string
                            example: string
                          allocation:
                            type: string
                            example: double
                          userDateFormat:
                            type: string
                            example: string
                          star:
                            type: string
                            example: int
                          notes:
                            type: string
                            example: string
                          im:
                            type: string
                            example: string
                          createuserid:
                            type: string
                            example: int
                          countryId:
                            type: string
                            example: int
                          cid:
                            type: string
                            example: int
                          guid:
                            type: string
                            example: string
                          hasAccess:
                            type: string
                            example: int
                          userNameFormat:
                            type: string
                            example: string
                          id:
                            type: string
                            example: int
                  prefixSalutation:
                    type: string
                    example: string
                  secondLastName:
                    type: string
                    example: string
                  middleName:
                    type: string
                    example: string
                  familySuffix:
                    type: string
                    example: string
                  status:
                    type: string
                    example: string
                  ptoannual:
                    type: string
                    example: double
                  ptobalance:
                    type: string
                    example: double
                  workerType:
                    type: string
                    example: string
                  gender:
                    type: string
                    example: string
                  userDateOfBirth:
                    type: string
                    example: date
                  phone:
                    type: string
                    example: string
                  im:
                    type: string
                    example: string
                  createts:
                    type: string
                    example: int
                  timezone:
                    type: string
                    example: string
                  adpAssociateOID:
                    type: string
                    example: string
                  practiceId:
                    type: string
                    example: int
                  imageName:
                    type: string
                    example: string
                  thumbnail:
                    type: string
                    example: string
                  profileId:
                    type: string
                    example: int
                  allocation:
                    type: string
                    example: double
                  countryId:
                    type: string
                    example: int
                  lastupdateuserid:
                    type: string
                    example: int
                  lastupdatets:
                    type: string
                    example: date
                  userDateFormat:
                    type: string
                    example: date
                  hrPortal:
                    type: string
                    example: string
                  userDisplayName:
                    type: string
                    example: string
                  star:
                    type: string
                    example: int
                  timecardPeriodPref:
                    type: string
                    example: string
                  tosVersion:
                    type: string
                    example: string
                  guid:
                    type: string
                    example: string
                  jobGrade:
                    type: string
                    example: string
                  paId:
                    type: string
                    example: int
                  appMenuId:
                    type: string
                    example: int
                  calendarId:
                    type: string
                    example: int
                  workingDays:
                    type: string
                    example: string
                  hasAccess:
                    type: string
                    example: boolean
                  notifications:
                    type: string
                    example: boolean
                  locationModel:
                    type: object
                    properties:
                      locationId:
                        type: string
                        example: int
                      locationName:
                        type: string
                        example: string
                      cid:
                        type: string
                        example: int
                      locationDescription:
                        type: string
                        example: string
                      locationType:
                        type: string
                        example: string
                      address:
                        type: string
                        example: string
                      lattitude:
                        type: string
                        example: string
                      longitude:
                        type: string
                        example: string
                      locationUID:
                        type: string
                        example: string
                      status:
                        type: string
                        example: string
                      workingDays:
                        type: string
                        example: string
                      locationCode:
                        type: string
                        example: string
                      locationLabel:
                        type: string
                        example: string
                      parentLocationId:
                        type: string
                        example: int
                      createuserid:
                        type: string
                        example: int
                      addressModelList:
                        type: array
                        items:
                          type: object
                          properties:
                            addressId:
                              type: string
                              example: int
                            addressLine1:
                              type: string
                              example: string
                            addressLine2:
                              type: string
                              example: string
                            city:
                              type: string
                              example: string
                            currentStatus:
                              type: string
                              example: status
                            state:
                              type: string
                              example: string
                            zipCode:
                              type: string
                              example: string
                            createts:
                              type: string
                              example: int
                            cid:
                              type: string
                              example: int
                            userId:
                              type: string
                              example: int
                            candidateId:
                              type: string
                              example: int
                            addressType:
                              type: string
                              example: string
                            locationId:
                              type: string
                              example: int
                            contactId:
                              type: string
                              example: int
                            countryId:
                              type: string
                              example: int
                            countryModel:
                              type: object
                              properties:
                                countryId:
                                  type: string
                                  example: int
                                countryName:
                                  type: string
                                  example: string
                                iso2:
                                  type: string
                                  example: string
                            status:
                              type: string
                              example: string
                            verificationStatus:
                              type: string
                              example: string
                            custId:
                              type: string
                              example: int
                            mapUrl:
                              type: string
                              example: string
                            createUserId:
                              type: string
                              example: int
                            extAppUID:
                              type: string
                              example: string
                            countryCode:
                              type: string
                              example: string
                            countryid:
                              type: string
                              example: int
                  practiceModel:
                    type: object
                    properties:
                      description:
                        type: string
                        example: string
                      practiceId:
                        type: string
                        example: int
                      name:
                        type: string
                        example: string
                      practiceHead:
                        type: string
                        example: string
                      userModel:
                        type: string
                        example: object
                      createts:
                        type: string
                        example: object
                      cid:
                        type: string
                        example: int
                  azureObjectIdentifier:
                    type: string
                    example: string
                  isView:
                    type: string
                    example: boolean
                  view:
                    type: string
                    example: boolean
              cid:
                type: string
                example: int
              createts:
                type: string
                example: int
              pfSkillList:
                type: string
                example: object
              createUserModel:
                type: string
                example: object
              assessment:
                type: string
                example: int
              status:
                type: string
                example: string
              recipientStatus:
                type: string
                example: string
              objectType:
                type: string
                example: string
              sentimentCode:
                type: string
                example: string
              sentimentScore:
                type: string
                example: string
              pfBadgeList:
                type: string
                example: object
              userName:
                type: string
                example: string
              customFieldModelList:
                type: string
                example: object
              badgeNames:
                type: string
                example: object
              attachmentModelList:
                type: string
                example: object
              wallName:
                type: string
                example: string
              skillString:
                type: string
                example: string
              reactionType:
                type: string
                example: string
              id:
                type: string
                example: int
    FeedbackListFeedback400Response:
      type: object
      properties:
        message:
          type: string
          example: Error while retrieving feedback.
    FeedbackListFeedback401Response:
      type: object
      properties:
        message:
          type: string
          example: >-
            Access denied! Either Authorization or x-api-key & userid parameters
            are not present/valid.
    FeedbackListFeedback409Response:
      type: object
      properties:
        message:
          type: string
          example: Error while retrieving feedback.
    GoalsGetGoalResponse:
      type: object
      properties:
        summary:
          type: string
          example: string
        description:
          type: string
          example: string
        goalId:
          type: string
          example: int
        additive:
          type: string
          example: int
        visibleToDirectReports:
          type: string
          example: int
        freezeGoal:
          type: string
          example: int
        isForward:
          type: string
          example: boolean
        companyGoal:
          type: string
          example: int
        elapsedTimeRatio:
          type: string
          example: float
        completionRatio:
          type: string
          example: float
        progressRatio:
          type: string
          example: float
        typecode:
          type: string
          example: string
        status:
          type: string
          example: string
        state:
          type: string
          example: string
        predictiveIndex:
          type: string
          example: string
        objectiveId:
          type: string
          example: int
        cid:
          type: string
          example: int
        disposition:
          type: string
          example: string
        units:
          type: string
          example: string
        assignedUserModel:
          type: object
          properties:
            cid:
              type: string
              example: int
            empId:
              type: string
              example: string
            userId:
              type: string
              example: int
            position:
              type: string
              example: string
            firstName:
              type: string
              example: string
            shortName:
              type: string
              example: string
            lastName:
              type: string
              example: string
            displayFullName:
              type: string
              example: string
            userStartdate:
              type: string
              example: date
            userEnddate:
              type: string
              example: date
            email:
              type: string
              example: string
            cellPhone:
              type: string
              example: string
            userName:
              type: string
              example: string
            userProfileModel:
              type: object
              properties:
                cid:
                  type: string
                  example: int
                profileId:
                  type: string
                  example: int
                profileName:
                  type: string
                  example: string
                profileDescription:
                  type: string
                  example: string
                orgId:
                  type: string
                  example: int
                profileResponsibilities:
                  type: string
                  example: string
                profileRequirements:
                  type: string
                  example: string
                salaryBandMin:
                  type: string
                  example: double
                salaryBandMax:
                  type: string
                  example: double
                salaryBandCurrency:
                  type: string
                  example: double
                managerProfileId:
                  type: string
                  example: int
                managerProfileName:
                  type: string
                  example: string
                customFieldValueModelList:
                  type: string
                  example: object
                numberofUsers:
                  type: string
                  example: int
                createuserid:
                  type: string
                  example: int
                status:
                  type: string
                  example: string
                careerPathwayModelList:
                  type: string
                  example: object
                objectType:
                  type: string
                  example: string
                objectName:
                  type: string
                  example: string
                objectid:
                  type: string
                  example: int
            departmentModel:
              type: object
              properties:
                description:
                  type: string
                  example: string
                departmentId:
                  type: string
                  example: int
                name:
                  type: string
                  example: string
                deptHead:
                  type: string
                  example: int
                cid:
                  type: string
                  example: int
                departmentCode:
                  type: string
                  example: string
                departmentLabel:
                  type: string
                  example: string
                parentDepartmentId:
                  type: string
                  example: int
                parentDepartmentName:
                  type: string
                  example: string
                deptHeadName:
                  type: string
                  example: string
                noOfEmployees:
                  type: string
                  example: int
                userModel:
                  type: object
                  properties:
                    userId:
                      type: string
                      example: int
                    firstName:
                      type: string
                      example: string
                    lastName:
                      type: string
                      example: string
                    name:
                      type: string
                      example: string
                    phone:
                      type: string
                      example: string
                    email:
                      type: string
                      example: string
                    status:
                      type: string
                      example: string
                    shortName:
                      type: string
                      example: string
                    thumbnail:
                      type: string
                      example: string
                    gender:
                      type: string
                      example: string
                    jobTitle:
                      type: string
                      example: string
                    departmentId:
                      type: string
                      example: int
                    locationId:
                      type: string
                      example: int
                    department:
                      type: string
                      example: string
                    location:
                      type: string
                      example: string
                    profileId:
                      type: string
                      example: int
                    timezone:
                      type: string
                      example: string
                    userStartdate:
                      type: string
                      example: date
                    userEnddate:
                      type: string
                      example: date
                    cellPhone:
                      type: string
                      example: string
                    empId:
                      type: string
                      example: string
                    userdateOfBirth:
                      type: string
                      example: date
                    allocation:
                      type: string
                      example: double
                    userdateFormat:
                      type: string
                      example: string
                    star:
                      type: string
                      example: int
                    imageName:
                      type: string
                      example: string
                    notes:
                      type: string
                      example: string
                    im:
                      type: string
                      example: string
                    createuserid:
                      type: string
                      example: int
                    countryId:
                      type: string
                      example: int
                    cid:
                      type: string
                      example: int
                    guid:
                      type: string
                      example: string
                    hasAccess:
                      type: string
                      example: boolean
                    displayName:
                      type: string
                      example: string
                    id:
                      type: string
                      example: int
            prefixSalutation:
              type: string
              example: string
            secondLastName:
              type: string
              example: string
            middleName:
              type: string
              example: string
            namePronunciation:
              type: string
              example: string
            familySuffix:
              type: string
              example: string
            status:
              type: string
              example: string
            ptoannual:
              type: string
              example: float
            ptobalance:
              type: string
              example: float
            gender:
              type: string
              example: string
            phone:
              type: string
              example: string
            im:
              type: string
              example: string
            createts:
              type: integer
              example: 1610359663000
              default: 0
            timezone:
              type: string
              example: string
            practiceId:
              type: string
              example: int
            imageName:
              type: string
              example: string
            thumbnail:
              type: string
              example: string
            profileId:
              type: string
              example: int
            allocation:
              type: string
              example: double
            countryId:
              type: string
              example: int
            lastupdateuserid:
              type: string
              example: int
            lastupdatets:
              type: string
              example: date
            workingDaysSchedule:
              type: string
              example: string
            userdateFormat:
              type: string
              example: string
            hrPortal:
              type: string
              example: string
            userDisplayName:
              type: string
              example: string
            star:
              type: string
              example: int
            timecardPeriodPref:
              type: string
              example: string
            languagePreference:
              type: string
              example: string
            tosVersion:
              type: string
              example: string
            guid:
              type: string
              example: string
            jobGrade:
              type: string
              example: string
            paId:
              type: string
              example: int
            workingDays:
              type: string
              example: string
            hasAccess:
              type: string
              example: boolean
            notifications:
              type: string
              example: boolean
            locationModel:
              type: object
              properties:
                locationId:
                  type: string
                  example: int
                locationName:
                  type: string
                  example: string
                cid:
                  type: string
                  example: int
                locationDescription:
                  type: string
                  example: string
                locationType:
                  type: string
                  example: string
                address:
                  type: string
                  example: string
                lattitude:
                  type: string
                  example: string
                longitude:
                  type: string
                  example: string
                locationUID:
                  type: string
                  example: string
                status:
                  type: string
                  example: string
                workingDays:
                  type: string
                  example: string
                locationCode:
                  type: string
                  example: string
                locationLabel:
                  type: string
                  example: string
                parentLocationId:
                  type: string
                  example: int
                createuserid:
                  type: string
                  example: int
                addressModelList:
                  type: array
                  items:
                    type: object
                    properties:
                      addressId:
                        type: string
                        example: int
                      addressLine1:
                        type: string
                        example: string
                      addressLine2:
                        type: string
                        example: string
                      city:
                        type: string
                        example: string
                      currentStatus:
                        type: string
                        example: string
                      state:
                        type: string
                        example: string
                      zipCode:
                        type: string
                        example: string
                      createts:
                        type: integer
                        example: 1538742819000
                        default: 0
                      cid:
                        type: string
                        example: int
                      userId:
                        type: string
                        example: int
                      candidateId:
                        type: string
                        example: int
                      addressType:
                        type: string
                        example: string
                      locationId:
                        type: string
                        example: int
                      contactId:
                        type: string
                        example: int
                      countryId:
                        type: string
                        example: int
                      countryModel:
                        type: object
                        properties:
                          countryId:
                            type: string
                            example: int
                          countryName:
                            type: string
                            example: string
                          iso2:
                            type: string
                            example: string
                      status:
                        type: string
                        example: string
                      verificationStatus:
                        type: string
                        example: string
                      custId:
                        type: string
                        example: int
                      mapUrl:
                        type: string
                        example: string
                      createUserId:
                        type: string
                        example: int
                      extAppUID:
                        type: string
                        example: string
                      countryid:
                        type: string
                        example: int
            isView:
              type: string
              example: boolean
            view:
              type: string
              example: boolean
        reviewerUserModel:
          type: object
          properties:
            cid:
              type: string
              example: int
            empId:
              type: string
              example: string
            userId:
              type: string
              example: int
            position:
              type: string
              example: string
            firstName:
              type: string
              example: string
            shortName:
              type: string
              example: string
            lastName:
              type: string
              example: string
            displayFullName:
              type: string
              example: string
            userStartdate:
              type: string
              example: date
            email:
              type: string
              example: string
            cellPhone:
              type: string
              example: string
            userName:
              type: string
              example: string
            departmentModel:
              type: object
              properties:
                description:
                  type: string
                  example: string
                departmentId:
                  type: string
                  example: int
                name:
                  type: string
                  example: string
                deptHead:
                  type: string
                  example: int
                cid:
                  type: string
                  example: int
                departmentCode:
                  type: string
                  example: string
                departmentLabel:
                  type: string
                  example: string
                parentDepartmentId:
                  type: string
                  example: int
                parentDepartmentName:
                  type: string
                  example: string
                deptHeadName:
                  type: string
                  example: string
                noOfEmployees:
                  type: string
                  example: int
                userModel:
                  type: object
                  properties:
                    userId:
                      type: string
                      example: int
                    firstName:
                      type: string
                      example: string
                    lastName:
                      type: string
                      example: string
                    name:
                      type: string
                      example: string
                    phone:
                      type: string
                      example: string
                    email:
                      type: string
                      example: string
                    status:
                      type: string
                      example: string
                    shortName:
                      type: string
                      example: string
                    thumbnail:
                      type: string
                      example: string
                    gender:
                      type: string
                      example: string
                    jobTitle:
                      type: string
                      example: string
                    departmentId:
                      type: string
                      example: int
                    locationId:
                      type: string
                      example: int
                    department:
                      type: string
                      example: string
                    location:
                      type: string
                      example: string
                    profileId:
                      type: string
                      example: int
                    profileName:
                      type: string
                      example: string
                    timezone:
                      type: string
                      example: string
                    userStartdate:
                      type: string
                      example: date
                    userEnddate:
                      type: string
                      example: date
                    cellPhone:
                      type: string
                      example: string
                    empId:
                      type: string
                      example: string
                    userdateOfBirth:
                      type: string
                      example: date
                    allocation:
                      type: string
                      example: double
                    userdateFormat:
                      type: string
                      example: string
                    star:
                      type: string
                      example: int
                    imageName:
                      type: string
                      example: string
                    notes:
                      type: string
                      example: string
                    im:
                      type: string
                      example: string
                    createuserid:
                      type: string
                      example: int
                    countryId:
                      type: string
                      example: int
                    cid:
                      type: string
                      example: int
                    guid:
                      type: string
                      example: string
                    hasAccess:
                      type: string
                      example: boolean
                    displayName:
                      type: string
                      example: string
                    id:
                      type: string
                      example: int
            prefixSalutation:
              type: string
              example: string
            middleName:
              type: string
              example: string
            familySuffix:
              type: string
              example: string
            status:
              type: string
              example: string
            ptoannual:
              type: string
              example: float
            ptobalance:
              type: string
              example: float
            workerType:
              type: string
              example: string
            gender:
              type: string
              example: string
            phone:
              type: string
              example: string
            im:
              type: string
              example: string
            createts:
              type: integer
              example: 1521203555000
              default: 0
            timezone:
              type: string
              example: string
            profileId:
              type: string
              example: int
            allocation:
              type: string
              example: double
            lastupdateuserid:
              type: string
              example: int
            lastupdatets:
              type: string
              example: date
            userdateFormat:
              type: string
              example: string
            hrPortal:
              type: string
              example: string
            userDisplayName:
              type: string
              example: string
            star:
              type: string
              example: int
            timecardPeriodPref:
              type: string
              example: string
            tosVersion:
              type: string
              example: string
            guid:
              type: string
              example: string
            jobGrade:
              type: string
              example: string
            calendarId:
              type: string
              example: int
            workingDays:
              type: string
              example: string
            hasAccess:
              type: string
              example: boolean
            notifications:
              type: string
              example: boolean
            locationModel:
              type: object
              properties:
                locationId:
                  type: string
                  example: int
                locationName:
                  type: string
                  example: string
                cid:
                  type: string
                  example: int
                locationDescription:
                  type: string
                  example: string
                locationType:
                  type: string
                  example: string
                address:
                  type: string
                  example: string
                lattitude:
                  type: string
                  example: string
                longitude:
                  type: string
                  example: string
                locationUID:
                  type: string
                  example: string
                status:
                  type: string
                  example: string
                workingDays:
                  type: string
                  example: string
                locationCode:
                  type: string
                  example: string
                locationLabel:
                  type: string
                  example: string
                parentLocationId:
                  type: string
                  example: int
                createuserid:
                  type: string
                  example: int
                addressModelList:
                  type: array
                  items:
                    type: object
                    properties:
                      addressId:
                        type: string
                        example: int
                      addressLine1:
                        type: string
                        example: string
                      addressLine2:
                        type: string
                        example: string
                      city:
                        type: string
                        example: string
                      currentStatus:
                        type: string
                        example: string
                      state:
                        type: string
                        example: string
                      zipCode:
                        type: string
                        example: string
                      createts:
                        type: integer
                        example: 1538742819000
                        default: 0
                      cid:
                        type: string
                        example: int
                      userId:
                        type: string
                        example: int
                      candidateId:
                        type: string
                        example: int
                      addressType:
                        type: string
                        example: string
                      locationId:
                        type: string
                        example: int
                      contactId:
                        type: string
                        example: int
                      countryId:
                        type: string
                        example: int
                      countryModel:
                        type: object
                        properties:
                          countryId:
                            type: string
                            example: int
                          countryName:
                            type: string
                            example: string
                          iso2:
                            type: string
                            example: string
                      status:
                        type: string
                        example: string
                      verificationStatus:
                        type: string
                        example: string
                      custId:
                        type: string
                        example: int
                      mapUrl:
                        type: string
                        example: string
                      createUserId:
                        type: string
                        example: int
                      extAppUID:
                        type: string
                        example: string
                      countryid:
                        type: string
                        example: int
            isView:
              type: string
              example: boolean
            view:
              type: string
              example: boolean
        goalCollaborationModel:
          type: array
          items:
            type: object
            properties:
              collabid:
                type: string
                example: int
              goalid:
                type: string
                example: int
              userid:
                type: string
                example: int
              extuserid:
                type: string
                example: int
              cid:
                type: string
                example: int
              userModel:
                type: object
                properties:
                  cid:
                    type: string
                    example: int
                  empId:
                    type: string
                    example: string
                  userId:
                    type: string
                    example: int
                  firstName:
                    type: string
                    example: string
                  shortName:
                    type: string
                    example: string
                  lastName:
                    type: string
                    example: string
                  displayFullName:
                    type: string
                    example: string
                  email:
                    type: string
                    example: string
                  userName:
                    type: string
                    example: string
                  userProfileModel:
                    type: object
                    properties:
                      cid:
                        type: string
                        example: int
                      profileId:
                        type: string
                        example: int
                      profileName:
                        type: string
                        example: string
                      profileDescription:
                        type: string
                        example: string
                      orgId:
                        type: string
                        example: int
                      profileResponsibilities:
                        type: string
                        example: string
                      profileRequirements:
                        type: string
                        example: string
                      salaryBandMin:
                        type: string
                        example: double
                      salaryBandMax:
                        type: string
                        example: double
                      salaryBandCurrency:
                        type: string
                        example: string
                      managerProfileId:
                        type: string
                        example: int
                      managerProfileName:
                        type: string
                        example: string
                      customFieldValueModelList:
                        type: string
                        example: object
                      numberofUsers:
                        type: string
                        example: int
                      createuserid:
                        type: string
                        example: int
                      status:
                        type: string
                        example: string
                      careerPathwayModelList:
                        type: string
                        example: object
                      objectType:
                        type: string
                        example: string
                      objectName:
                        type: string
                        example: string
                      objectid:
                        type: string
                        example: int
                  status:
                    type: string
                    example: string
                  ptoannual:
                    type: string
                    example: float
                  ptobalance:
                    type: string
                    example: float
                  gender:
                    type: string
                    example: string
                  phone:
                    type: string
                    example: string
                  createts:
                    type: integer
                    example: 1648276171000
                    default: 0
                  timezone:
                    type: string
                    example: string
                  profileId:
                    type: string
                    example: int
                  allocation:
                    type: string
                    example: double
                  lastupdatets:
                    type: string
                    example: date
                  userdateFormat:
                    type: string
                    example: string
                  hrPortal:
                    type: string
                    example: string
                  star:
                    type: string
                    example: int
                  timecardPeriodPref:
                    type: string
                    example: string
                  languagePreference:
                    type: string
                    example: string
                  guid:
                    type: string
                    example: string
                  hasAccess:
                    type: string
                    example: boolean
                  notifications:
                    type: string
                    example: boolean
                  isView:
                    type: string
                    example: boolean
                  view:
                    type: string
                    example: boolean
              extuserModel:
                type: string
                example: object
        crediteatets:
          type: string
          example: int
        commentCrediteatets:
          type: string
          example: int
        commentDescription:
          type: string
          example: string
        uname:
          type: string
          example: string
        hasGoalApprovalPermission:
          type: string
          example: boolean
        begindate:
          type: string
          example: date
        goalWeightage:
          type: string
          example: float
        createuserid:
          type: string
          example: int
        createts:
          type: integer
          example: 1661358176000
          default: 0
        projectModel:
          type: object
          properties:
            projectId:
              type: string
              example: int
            projectName:
              type: string
              example: string
            projectDesc:
              type: string
              example: string
            startdate:
              type: string
              example: date
            enddate:
              type: string
              example: date
            contactPerson:
              type: string
              example: int
            account:
              type: string
              example: int
            accountModel:
              type: string
              example: object
            userModelList:
              type: string
              example: object
            status:
              type: string
              example: string
            createts:
              type: integer
              example: 1623395718000
              default: 0
            shortCode:
              type: string
              example: string
            probability:
              type: string
              example: int
            contactPersonName:
              type: string
              example: string
            statusValue:
              type: string
              example: string
            pgroupid:
              type: string
              example: int
            puid:
              type: string
              example: string
            billingType:
              type: string
              example: string
            timeSheetOpenToAll:
              type: string
              example: int
            userModel:
              type: object
              properties:
                userId:
                  type: string
                  example: int
                firstName:
                  type: string
                  example: string
                lastName:
                  type: string
                  example: string
                name:
                  type: string
                  example: string
                phone:
                  type: string
                  example: string
                email:
                  type: string
                  example: string
                status:
                  type: string
                  example: string
                shortName:
                  type: string
                  example: string
                thumbnail:
                  type: string
                  example: string
                gender:
                  type: string
                  example: string
                jobTitle:
                  type: string
                  example: string
                departmentId:
                  type: string
                  example: int
                locationId:
                  type: string
                  example: int
                department:
                  type: string
                  example: string
                location:
                  type: string
                  example: string
                profileId:
                  type: string
                  example: int
                profileName:
                  type: string
                  example: string
                timezone:
                  type: string
                  example: string
                userStartdate:
                  type: string
                  example: date
                userEnddate:
                  type: string
                  example: date
                cellPhone:
                  type: string
                  example: string
                empId:
                  type: string
                  example: string
                userdateOfBirth:
                  type: string
                  example: date
                allocation:
                  type: string
                  example: double
                userdateFormat:
                  type: string
                  example: string
                star:
                  type: string
                  example: int
                imageName:
                  type: string
                  example: string
                notes:
                  type: string
                  example: string
                im:
                  type: string
                  example: string
                createuserid:
                  type: string
                  example: int
                countryId:
                  type: string
                  example: int
                cid:
                  type: string
                  example: int
                guid:
                  type: string
                  example: string
                hasAccess:
                  type: string
                  example: boolean
                displayName:
                  type: string
                  example: string
                id:
                  type: string
                  example: int
            projectGroupModel:
              type: string
              example: object
            groupName:
              type: string
              example: string
            accountName:
              type: string
              example: string
            pmMail:
              type: string
              example: string
            locationid:
              type: string
              example: int
            reportMethod:
              type: string
              example: string
            industry:
              type: string
              example: string
            cid:
              type: string
              example: int
            isAdmin:
              type: string
              example: boolean
            createuserid:
              type: string
              example: int
            lastupdateuserid:
              type: string
              example: int
            admin:
              type: string
              example: boolean
            projStatus:
              type: string
              example: string
            projProbability:
              type: string
              example: int
        goalTypeModel:
          type: object
          properties:
            goalTypeId:
              type: string
              example: int
            goalTypeName:
              type: string
              example: string
            goalTypeDescription:
              type: string
              example: string
            assessmentModel:
              type: object
              properties:
                scoretemplateid:
                  type: string
                  example: int
                cid:
                  type: string
                  example: int
                scoreMin:
                  type: string
                  example: float
                scoreMax:
                  type: string
                  example: float
                scoreMaxValidation:
                  type: string
                  example: float
                scoringInstructions:
                  type: string
                  example: string
                scoreName:
                  type: string
                  example: string
                allowFractional:
                  type: string
                  example: int
                rangeModelList:
                  type: array
                  items:
                    type: object
                    properties:
                      description:
                        type: string
                        example: string
                      strangeid:
                        type: string
                        example: int
                      scoreTempId:
                        type: string
                        example: int
                      rangeMin:
                        type: string
                        example: float
                      rangeMax:
                        type: string
                        example: float
                      interpretation:
                        type: string
                        example: string
                      colorCode:
                        type: string
                        example: string
                      cid:
                        type: string
                        example: int
                visualizationType:
                  type: string
                  example: string
                status:
                  type: string
                  example: string
            createts:
              type: integer
              example: 1593877398000
              default: 0
            cid:
              type: string
              example: int
        parentGoalId:
          type: string
          example: int
        id:
          type: string
          example: int
        createUserId:
          type: string
          example: int
        lastUpdateUserId:
          type: string
          example: int
        projectid:
          type: string
          example: int
        targetdate:
          type: string
          example: date
        initialvalue:
          type: string
          example: double
        currentvalue:
          type: string
          example: double
        goalvalue:
          type: string
          example: double
    GoalsGetGoal401Response:
      type: object
      properties:
        message:
          type: string
          example: >-
            Access denied! Either Authorization or x-api-key & userid parameters
            are not present/valid.
    GoalsGetGoal404Response:
      type: object
      properties:
        message:
          type: string
          example: Goal not found.
    GoalsDeleteGoalResponse:
      type: object
      properties:
        message:
          type: string
          example: Success
    GoalsDeleteGoal401Response:
      type: object
      properties:
        message:
          type: string
          example: >-
            Access denied! Either Authorization or x-api-key & userid parameters
            are not present/valid.
    GoalsDeleteGoal403Response:
      type: object
      properties:
        message:
          type: string
          example: You do not have the permission to delete this goal.
    GoalsDeleteGoal404Response:
      type: object
      properties:
        message:
          type: string
          example: Goal not found.
    InvoiceGetByProjectIdResponse:
      type: object
      properties:
        data:
          type: array
          items:
            type: object
            properties: {}
        message:
          type: string
          example: successful
    InvoiceGetByProjectId401Response:
      type: object
      properties: {}
    ObjectiveGetByUserIdOrSpecificObjectiveByIdResponse:
      type: string
      example: |-
        {
          "code": 1,
          "data": [
            {
              "objectiveId": "int",
              "objective": "string",
              "type": "string",
              "objectiveType": "string",
              "description": "string",
              "beginDate": "string",
              "targetDate": "string",
              "leadUserId": "int",
              "weightage": "int",
              "status": "string",
              "objectiveProgress": "int",
              "cid": "int",
              "userViewModel": {
                "userId": "int",
                "firstName": "string",
                "lastName": "string",
                "name": "string",
                "phone": "string",
                "email": "string",
                "status": "string",
                "shortName": "string",
                "thumbnail": "string",
                "gender": "string",
                "jobTitle": "string",
                "departmentId": "int",
                "department": "string",
                "profileId": "int",
                "profileName": "string",
                "timezone": "string",
                "userStartDate": "string",
                "cellPhone": "string",
                "empId": "string",
                "userDateOfBirth": "string",
                "allocation": "int",
                "userDateFormat": "string",
                "star": "int",
                "imageName": "string",
                "notes": "string",
                "im": "string",
                "createuserid": "int",
                "cid": "int",
                "guid": "string",
                "hasAccess":"int",
                "id": "int"
              },
              "keyResultModelList": [
                {
                  "goalId": "int",
                  "summary": "string",
                  "additive": "int",
                  "visibleToDirectReports": "int",
                  "freezeGoal": "int",
                  "isForward": "boolean",
                  "companyGoal": "string",
                  "elapsedTimeRatio": "string",
                  "completionRatio": "string",
                  "progressRatio": "string",
                  "description": "string",
                  "typecode": "string",
                  "goalsLeastStep": "int",
                  "status": "string",
                  "state": "string",
                  "predictiveIndex": "string",
                  "objectiveId": "int",
                  "cid": "int",
                  "disposition": "string",
                  "units": "string",
                  "assignedUserModel": {
                    "cid": "int",
                    "empId": "string",
                    "userId": "int",
                    "position": "string",
                    "firstName": "string",
                    "shortName": "string",
                    "lastName": "string",
                    "displayFullName": "string",
                    "userStartDate": "string",
                    "userEndDate": "string",
                    "email": "string",
                    "cellPhone": "string",
                    "userName": "string",
                    "userProfileModel": {
                      "cid": "int",
                      "profileId": "int",
                      "profileName": "string",
                      "profileDescription": "string",
                      "orgId": "int",
                      "profileResponsibilities": "string",
                      "profileRequirements": "string",
                      "salaryBandMin": "int",
                      "salaryBandMax": "int",
                      "salaryBandCurrency": "",
                      "managerProfileId": "int",
                      "managerProfileName": "string",
                      "customFieldValueModelList": "object",
                      "numberofUsers": "int",
                      "createuserid": "int",
                      "status": "string",
                      "careerPathwayModelList": "string",
                      "objectType": "string",
                      "objectName": "string",
                      "objectid": "int"
                    },
                    "departmentModel": {
                      "departmentId": "int",
                      "name": "string",
                      "description": "string",
                      "deptHead": "int",
                      "cid": "int",
                      "departmentCode": "int",
                      "departmentLabel": "string",
                      "parentDepartmentId": "int",
                      "parentDepartmentName": "string",
                      "deptHeadName": "string",
                      "noOfEmployees": "int",
                      "userModel": {
                        "userId": "int",
                        "firstName": "string",
                        "lastName": "string",
                        "name": "string",
                        "phone": "string",
                        "email": "string",
                        "status": "string",
                        "shortName": "string",
                        "thumbnail": "string",
                        "gender": "string",
                        "jobTitle": "string",
                        "departmentId": "int",
                        "locationId": "int",
                        "department": "string",
                        "location": "string",
                        "profileId": "int",
                        "profileName": "string",
                        "timezone": "string",
                        "userStartDate": "string",
                        "userEndDate": "string",
                        "cellPhone": "string",
                        "empId": "string",
                        "userDateOfBirth": "string",
                        "allocation": "int",
                        "userDateFormat": "string",
                        "star": "int",
                        "imageName": "string",
                        "notes": "string",
                        "im": "string",
                        "createuserid": "int",
                        "countryId": "int",
                        "cid": "int",
                        "guid": "string",
                        "hasAccess": "int",
                        "id": "int"
                      }
                    },
                    "prefixSalutation": "string",
                    "secondLastName": "string",
                    "middleName": "string",
                    "namePronunciation": "string",
                    "familySuffix": "string",
                    "status": "string",
                    "ptoannual": "int",
                    "ptobalance": "int",
                    "gender": "string",
                    "userDateOfBirth": "string",
                    "phone": "string",
                    "im": "string",
                    "createts": "int",
                    "timezone": "string",
                    "practiceId": "int",
                    "imageName": "string",
                    "thumbnail": "string",
                    "profileId": "int",
                    "allocation": "int",
                    "countryId": "int",
                    "lastupdateuserid": "int",
                    "lastupdatets": "string",
                    "userDateFormat": "string",
                    "hrPortal": "string",
                    "userDisplayName": "string",
                    "star": "int",
                    "timecardPeriodPref": "string",
                    "languagePreference": "string",
                    "relativeDate": "string",
                    "tosVersion": "string",
                    "guid": "string",
                    "jobGrade": "string",
                    "hasAccess": "boolean",
                    "primaryColor": "string",
                    "secondaryColor": "string",
                    "notifications": "boolean",
                    "locationModel": {
                      "locationId": "int",
                      "locationName": "string",
                      "cid": "int",
                      "locationDescription": "string",
                      "locationType": "string",
                      "address": "string",
                      "lattitude": "int",
                      "longitude": "int",
                      "locationUID": "string",
                      "status": "string",
                      "workingDays": "int",
                      "locationCode": "int",
                      "locationLabel": "string",
                      "parentLocationId": "int",
                      "createuserid": "int",
                      "addressModelList": [
                        {
                          "addressId": "int",
                          "addressLine1": "string",
                          "addressLine2": "string",
                          "city": "string",
                          "currentStatus": "string",
                          "state": "string",
                          "zipCode": "string",
                          "createts": "int",
                          "cid": "int",
                          "userId": "int",
                          "candidateId": "int",
                          "addressType": "string",
                          "locationId": "int",
                          "contactId": "int",
                          "countryId": "int",
                          "countryModel": {
                            "countryId": "int",
                            "countryName": "string",
                            "iso2": "string"
                          },
                          "status": "int",
                          "verificationStatus": "int",
                          "custId": "int",
                          "mapUrl": "string",
                          "createUserId": "int",
                          "extAppUID": "int",
                          "countryCode": "int",
                          "countryid": "int"
                        }
                      ]
                    },
                    "isView": "int",
                    "view": "int"
                  },
                  "reviewerUserModel": {
                    "cid": "int",
                    "empId": "string",
                    "userId": "int",
                    "position": "string",
                    "firstName": "string",
                    "shortName": "string",
                    "lastName": "string",
                    "displayFullName": "string",
                    "userStartDate": "string",
                    "userEndDate": "string",
                    "email": "string",
                    "cellPhone": "string",
                    "userName": "string",
                    "userProfileModel": {
                      "cid": "int",
                      "profileId": "int",
                      "profileName": "string",
                      "profileDescription": "string",
                      "orgId": "string",
                      "profileResponsibilities": "string",
                      "profileRequirements": "string",
                      "salaryBandMin": "int",
                      "salaryBandMax": "int",
                      "salaryBandCurrency": "",
                      "managerProfileId": "int",
                      "managerProfileName": "string",
                      "customFieldValueModelList": "string",
                      "numberofUsers": "int",
                      "createuserid": "int",
                      "status": "string",
                      "careerPathwayModelList": "string",
                      "objectType": "string",
                      "objectName": "string",
                      "objectid": "int"
                    },
                    "departmentModel": {
                      "departmentId": "int",
                      "name": "string",
                      "description": "string",
                      "deptHead": "int",
                      "cid": "int",
                      "departmentCode": "string",
                      "departmentLabel": "string",
                      "parentDepartmentId": "int",
                      "parentDepartmentName": "string",
                      "deptHeadName": "int",
                      "noOfEmployees": "int",
                      "userModel": {
                        "userId": "int",
                        "firstName": "string",
                        "lastName": "string",
                        "name": "string",
                        "phone": "string",
                        "email": "string",
                        "status": "string",
                        "shortName": "string",
                        "thumbnail": "string",
                        "gender": "string",
                        "jobTitle": "string",
                        "departmentId": "int",
                        "locationId": "int",
                        "department": "string",
                        "location": "string",
                        "profileId": "int",
                        "profileName": "string",
                        "timezone": "string",
                        "userStartDate": "string",
                        "userEndDate": "string",
                        "cellPhone": "string",
                        "empId": "string",
                        "allocation": "int",
                        "userDateFormat": "string",
                        "star": "int",
                        "imageName": "string",
                        "notes": "string",
                        "im": "string",
                        "createuserid": "int",
                        "countryId": "int",
                        "cid": "int",
                        "guid": "string",
                        "hasAccess": "int",
                        "calendarId": "int",
                        "id": "int"
                      }
                    },
                    "prefixSalutation": "string",
                    "secondLastName": "string",
                    "middleName": "pstringal",
                    "namePronunciation": "string",
                    "familySuffix": "string",
                    "status": "string",
                    "ptoannual": "int",
                    "ptobalance": "int",
                    "gender": "string",
                    "userDateOfBirth": "string",
                    "phone": "string",
                    "im": "string",
                    "createts": "int",
                    "timezone": "string",
                    "practiceId": "int",
                    "imageName": "string",
                    "thumbnail": "string",
                    "profileId": "int",
                    "allocation": "int",
                    "countryId": "int",
                    "lastupdateuserid": "int",
                    "lastupdatets": "string",
                    "userDateFormat": "string",
                    "hrPortal": "string",
                    "userDisplayName": "string",
                    "star": "int",
                    "timecardPeriodPref": "string",
                    "languagePreference": "string",
                    "relativeDate": "string",
                    "tosVersion": "string",
                    "guid": "string",
                    "jobGrade": "string",
                    "paId": "int",
                    "careerPathwayId": "int",
                    "calendarId": "int",
                    "hasAccess": "boolean",
                    "notifications": "boolean",
                    "locationModel": {
                      "locationId": "int",
                      "locationName": "string",
                      "cid": "int",
                      "locationDescription": "string",
                      "locationType": "string",
                      "address": "string",
                      "lattitude": "int",
                      "longitude": "int",
                      "locationUID": "int",
                      "status": "string",
                      "workingDays": "string",
                      "locationCode": "int",
                      "locationLabel": "string",
                      "parentLocationId": "int",
                      "createuserid": "int",
                      "addressModelList": [
                        {
                          "addressId": "int",
                          "addressLine1": "string",
                          "addressLine2": "string",
                          "city": "ludhiana",
                          "currentStatus": "string",
                          "state": "string",
                          "zipCode": "int",
                          "createts": "int",
                          "cid": "int",
                          "userId": "int",
                          "candidateId": "int",
                          "addressType": "string",
                          "locationId": "int",
                          "contactId": "int",
                          "countryId": "int",
                          "countryModel": {
                            "countryId": "int",
                            "countryName": "India",
                            "iso2": "string"
                          },
                          "status": "string",
                          "verificationStatus": "string",
                          "custId": "int",
                          "mapUrl": "string",
                          "createUserId": "int",
                          "extAppUID": "int",
                          "countryCode": "int",
                          "countryid": "int"
                        }
                      ]
                    },
                    "practiceModel": {
                      "practiceId": "int",
                      "name": "string",
                      "description": "string",
                      "practiceHead": "string",
                      "userModel": {
                        "userId": "int",
                        "firstName": "string",
                        "lastName": "string",
                        "name": "string",
                        "phone": "string",
                        "email": "string",
                        "status": "string",
                        "shortName": "string",
                        "thumbnail": "string",
                        "gender": "string",
                        "jobTitle": "string",
                        "departmentId": "int",
                        "locationId": "int",
                        "department": "string",
                        "location": "string",
                        "profileId": "int",
                        "profileName": "string",
                        "timezone": "string",
                        "userStartDate": "string",
                        "userEndDate": "string",
                        "cellPhone": "string",
                        "empId": "string",
                        "userDateOfBirth": "string",
                        "allocation": "int",
                        "userDateFormat": "string",
                        "star": "int",
                        "imageName": "string",
                        "notes": "string",
                        "im": "string",
                        "createuserid": "int",
                        "countryId": "int",
                        "cid": "int",
                        "guid": "string",
                        "hasAccess": "int",
                        "id": "int"
                      },
                      "createts": "string",
                      "cid": "int"
                    },
                    "azureObjectIdentifier": "string",
                    "isView": "boolean",
                    "view": "boolean"
                  },
                  "goalCollaborationModel": [],
                  "crediteatets": "string",
                  "commentCrediteatets": "string",
                  "commentDescription": "string",
                  "uname": "string",
                  "hasGoalApprovalPermission": "string",
                  "parentGoalName": "string",
                  "beginDate": "string",
                  "goalWeightage": "int",
                  "createuserid": "int",
                  "createts": "int",
                  "projectModel": {
                    "projectId": "int",
                    "projectName": "string",
                    "projectDesc": "string",
                    "startDate": "string",
                    "endDate": "string",
                    "contactPerson": "int",
                    "account": "string",
                    "accountModel": "string",
                    "userModelList": "string",
                    "status": "string",
                    "createts": "int",
                    "shortCode": "string",
                    "probability": "int",
                    "contactPersonName": "string",
                    "statusValue": "string",
                    "pgroupid": "int",
                    "puid": "int",
                    "billingType": "string",
                    "timeSheetOpenToAll": "int",
                    "userModel": {
                      "userId": "int",
                      "firstName": "string",
                      "lastName": "string",
                      "name": "string",
                      "phone": "string",
                      "email": "string",
                      "status": "string",
                      "shortName": "string",
                      "thumbnail": "string",
                      "gender": "string",
                      "jobTitle": "string",
                      "departmentId": "int",
                      "locationId": "int",
                      "department": "string",
                      "location": "string",
                      "profileId": "int",
                      "profileName": "string",
                      "timezone": "string",
                      "userStartDate": "string",
                      "cellPhone": "string",
                      "empId": "string",
                      "allocation": "int",
                      "userDateFormat": "string",
                      "star": "int",
                      "imageName": "string",
                      "notes": "string",
                      "im": "int",
                      "createuserid": "int",
                      "countryId": "int",
                      "cid": "int",
                      "guid": "string",
                      "careerPathwayId": "int",
                      "hasAccess": "int",
                      "calendarId": "int",
                      "id": "int"
                    },
                    "projectGroupModel": "string",
                    "groupName": "string",
                    "accountName": "string",
                    "pmMail": "string",
                    "locationid": "int",
                    "reportMethod": "string",
                    "industry": "string",
                    "cid": "int",
                    "isAdmin": "boolean",
                    "createuserid": "int",
                    "lastupdateuserid": "int",
                    "admin": "boolean",
                    "projStatus": "string",
                    "projProbability": "int"
                  },
                  "goalTypeModel": "boolean",
                  "parentGoalId": "int",
                  "id": "int",
                  "createUserId": "int",
                  "projectid": "int",
                  "targetdate": "string",
                  "lastUpdateUserId": "int",
                  "begindate": "string",
                  "initialvalue": "int",
                  "currentvalue": "int",
                  "goalvalue": "int"
                }
              ]
            },
          ],
          "message": "Successful"
        }
    ObjectiveGetByUserIdOrSpecificObjectiveById401Response:
      type: object
      properties:
        message:
          type: string
          example: failure
    PeopleAndPermissionsGetUserDetailsResponse:
      type: object
      properties: {}
    PeopleAndPermissionsGetUserDetails401Response:
      type: object
      properties: {}
    PeopleAndPermissionsGetFinancialRecordResponse:
      type: object
      properties: {}
    PeopleAndPermissionsGetFinancialRecord401Response:
      type: object
      properties: {}
    PeopleAndPermissionsGetUsersResponse:
      type: object
      properties:
        code:
          type: string
          example: int
        data:
          type: array
          items:
            type: object
            properties:
              resourceId:
                type: string
                example: int
              name:
                type: string
                example: string
              position:
                type: string
                example: string
              assignments:
                type: string
                example: string
              allocation:
                type: string
                example: int
              startDate:
                type: string
                example: int
              endDate:
                type: string
                example: int
              workerType:
                type: string
                example: string
              location:
                type: string
                example: string
              timeZone:
                type: string
                example: string
              notes:
                type: string
                example: string
              emailAddress:
                type: string
                example: string
              phone:
                type: string
                example: int
              im:
                type: string
                example: string
              dateOfBirth:
                type: string
                example: int
              gender:
                type: string
                example: string
              imageName:
                type: string
                example: string
              customFieldList:
                type: string
                example: string
              department:
                type: string
                example: string
              departmentLabel:
                type: string
                example: string
              profileName:
                type: string
                example: string
              userReporterList:
                type: object
                properties:
                  '149109':
                    type: string
                    example: string
              empId:
                description: 'The unique identity of the employee. '
                type: string
                example: string
        message:
          type: string
          example: Successful
    PeopleAndPermissionsGetUsers409Response:
      type: object
      properties: {}
  links: {}
  callbacks: {}
  securitySchemes:
    sec0:
      type: apiKey
      in: header
      name: x-api-key
    sec1:
      in: header
      name: userid
      type: apiKey
  requestBodies:
    arrayCustomFields:
      description: Custom fields
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/arrayCustomFields'
security:
  - {}
x-readme:
  explorer-enabled: true
  proxy-enabled: true
  samples-enabled: true
  headers: []
_id: 635ba2d0654eb600ab476cbe
