openapi: 3.0.1
info:
  title: ConnexPay Reporting API
  description: >-
    REST API for retrieving reporting data. Currently Daily Accounting data
    only.
  version: v1
  contact:
    name: ConnexPay
    url: https://docs.connexpay.com
  x-konfig-ignore:
    object-with-no-properties: true
    potential-incorrect-type: true
servers:
  - url: https://sandboxreportingapi.connexpay.com
tags:
  - name: PushToCard
  - name: Card
  - name: MerchantPayees
  - name: Sale
  - name: Token
  - name: Transaction
  - name: Addendum
  - name: Accounting
  - name: Void
  - name: Return
  - name: Authentication
  - name: Funding
  - name: Cancellation
  - name: Verification
  - name: StatusGroup
  - name: Validation
  - name: CardIssuance
  - name: CardIssue
  - name: ACH
  - name: Setting
  - name: Settlement
  - name: Funds
  - name: Replay
paths:
  /api/v1/token:
    post:
      tags:
        - Token
      summary: Issuing Token
      operationId: Token_issueAuthenticationToken
      description: >-
        API requests require a combination of assigned user name, password, and
        successfully generated authentication token. The received token is valid
        for 24 hours from issuance and may be used for all requests during its
        lifespan.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenIssueAuthenticationTokenRequest'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Generate Sales Token Response Example:
                  value: |-
                    {
                        "access_token": "eyJhbGciOiJodHRwO33vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctba3yZSNobWFjLXNoYTI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJrdW5hbHNjYW5hbHMiLCJyb2xlIjoidXNlciIsIm5iZiI6MTY3NTI4MzE4MiwiZXhwIjoxNjc1MzY5NTgyLCJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjY0NTgzIiwiYXVkdsiRzVvSU5mblRpS1hkZEtEQ0drcDJRQm9BcThjfgUtEMmYifQ.v5BwSGRB8GKpz_-rTvodQxr_8Cdq7Idx_Aaf3foyp7w",
                        "token_type": "bearer",
                        "expires_in": 86399
                    }
                Generate Purchase Token Response Example:
                  value: |-
                    {
                        "access_token": "eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA1L3htbGRzaWctbW9yZSNobWFjLXNoYTI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhcnJzYW5kYm94dGVzdCIsInJvbGUiOiJ1c2VyIiwiZ2F0ZXdheU1lcmNoYW50R3VpZHMiOiI0MTc0OTc1ZC00ZWI4LTQ1YTEtYTliNS1jZTFiNTk2ZGJjMzUiLCJnYXRld2F5TWVyY2hhbnRHdWlkc0FuZENoaWxkcmVuIjoiNDE3NDk3NWQtNGViOC00NWExLWE5YjUtY2UxYjU5NmRiYzM1IiwiZ2F0ZXdheURldmljZUd1aWRzIjoiNzQ1YmE5YTEtN2YxYi00NzI4LThlM2EtZTRkZmM4NTI2ZGZhIiwibmJmIjoxNjg1OTg2NTkyLCJleHAiOjE2ODYwNzI5OTIsImlzcyI6Imh0dHA6Ly9sb2NhbGhvc3Q6NTMwOTciLCJhdWQiOiJHNW9JTmZuVGlLWGRkS0RDR2twMlFCb0FxOFYxS0QyZiJ9.cnA1aljvC1n6_DLis18pNgF-lzzfyIk30CKqlm1lX3k",
                        "token_type": "bearer",
                        "expires_in": 86399
                    }
              schema:
                $ref: '#/components/schemas/TokenIssueAuthenticationTokenResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/TokenIssueAuthenticationToken400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: curl
            code: >-
              curl --location
              'https://sandboxpurchasesapi.connexpay.com/api/v1/token' 

              --header 'Content-Type: application/x-www-form-urlencoded' 

              --data-urlencode 'grant_type=password' 

              --data-urlencode 'username={{username}}' 

              --data-urlencode 'password={{password}}'
            name: GENERATE PURCHASE TOKEN REQUEST EXAMPLE
        samples-languages:
          - curl
  /api/v1/sales:
    post:
      tags:
        - Sale
      summary: Create Sale
      operationId: Sale_createTransaction
      security:
        - sec0: []
      description: >-
        The Create Sale Endpoint is used by acquiring clients. The Sale
        transaction is used to create a sale for your consumer. You can create a
        credit sale or an ACH sale (ACH sales apply to US Clients only). A
        credit sale will charge a consumer's credit card. The consumer's credit
        card will be authorized immediately when the Sales request is received
        and will automatically settle/batch that same night. In other words,
        this one Sale request is just like running an AuthOnly and a Capture in
        one request.You can postpone charging the consumer's credit card by
        providing a date in the 'ActivationDate' of your request. Doing so will
        delay the authorization and charge to the consumer's credit card until
        that future date.An ACH sale will create an ACH transaction that will
        debit the consumer's bank account. ACH sales received prior to 3:00 PM
        EST will process overnight. ACH Sales received after 3:00 PM EST will
        process the following night.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaleCreateTransactionRequest'
            examples:
              Create Credit Card Sale Request Example:
                value:
                  DeviceGuid: '{{Device}}'
                  Amount: 280
                  TenderType: Credit
                  SequenceNumber: '849741'
                  OrderNumber: '159874'
                  SendReceipt: true
                  RiskProcessingOnly: false
                  StatementDescription: Agent Booking 123
                  CustomerId: xt147
                  ConnexPayTransaction:
                    ExpectedPayments: 9
                  RiskData:
                    Name: John Doe
                    Gender: M
                    DateOfBirth: '1993-03-18'
                    BillingPhoneNumber: '9177563046'
                    BillingAddress1: 151 E 33rd St
                    BillingAddress2: Second Floor
                    BillingCity: New York
                    BillingState: NY
                    BillingPostalCode: '10016'
                    BillingCountryCode: US
                    Email: johnd@gmail.com
                    ProductType: Flight
                    ProductDesc: Flight from London to New York
                    ProductItem: 784GTWJFK856
                    ProductQuantity: 4
                    ProductPrice: '42400'
                    OrderNumber: 857B2
                    SellerId: AG75597
                    FlightData:
                      Airline: American Airlines
                      DepartureAirport: Gatwick
                      DepartureDate: '2020-06-30'
                      DestinationAirport: JFK
                      HoursToDeparture: 5
                      JourneyType: Day
                      Route: Direct
                      RouteByCountry: UK, USA
                    FlightPassengers:
                      - Country: USA
                        DateOfBirth: '1990-12-07'
                        Id: '89456489'
                        Name: Adam Smith
                      - Country: ARG
                        DateOfBirth: '1995-05-05'
                        Id: '74566'
                        Name: John Lock
                    CustomParameters:
                      - Name: ClientSpecific1
                        Value: Traveling
                      - Name: ClientSpecific2
                        Value: wounderful
                  Card:
                    CardNumber: '4716317307520473'
                    CardHolderName: John Doe
                    Cvv2: '999'
                    ExpirationDate: '1912'
                    Customer:
                      FirstName: John
                      LastName: Doe
                      Phone: '9177563007'
                      City: New York
                      State: NY
                      Country: US
                      Email: johnd@gmail.com
                      Address1: 107 7th Av.
                      Address2: ''
                      Zip: '10007'
                      DateOfBirth: '1990-12-07'
                      DriverLicenseNumber: '12345678'
                      DriverLicenseState: TX
                      SSN4: '1210'
                  EnhancedData:
                    cardLevel: '2'
                    SaleTax: 5
                    AdditionalTaxDetailTaxCategory: tex
                    AdditionalTaxDetailTaxType: regional
                    AdditionalTaxDetailTaxAmount: 3
                    AdditionalTaxDetailTaxRate: 2.5
                    PurchaseOrder: PURCHSEORDER1
                    OrderDate: 07/20/2018
                    ShippingCharges: '20'
                    DutyCharges: 17.59
                    CustomerVATNumber: '75010101'
                    VATInvoice: 231465214
                    SummaryCommodityCode: Aa94
                    ShipToZip: '50001'
                    ShipFromZip: '55100'
                    DestinationCountryCode: ARG
                    SupplierReferenceNumber: '123'
                    CustomerRefID: '123'
                    ChargeDescriptor: Sample Charge
                    AdditionalAmount: 2.5
                    AdditionalAmountType: GIFT_SHOP
                    ProductName: Product 01
                    ProductCode: P1
                    Price: 5
              Create ACH Sale Request Example:
                value:
                  DeviceGuid: '{{Device}}'
                  Amount: 3.22
                  TenderType: ACH
                  OrderNumber: '12345'
                  RequestIp: 127.0.0.1
                  IncludeRiskAnalysis: false
                  ConnexPayTransaction:
                    ExpectedPayments: 1
                  BankAccount:
                    AccountType: Checking
                    RoutingNumber: '098098098'
                    AccountNumber: '1234567'
                    AccountAndRoutingNumberToken: '{{Use instead of RoutingNumber and AccountNumber}}'
                    NameOnAccount: John Doe
                    Customer:
                      FirstName: John
                      LastName: Doe
                      Phone: '5556128787'
                      City: Spring Park
                      State: MN
                      Country: US
                      Email: test@connexpay.com
                      Address1: 1234 Channel road
                      Address2: ''
                      Zip: '98765'
              3D Secure Authentication Request Example:
                value:
                  CardDataSource: EMV2
                  Amount: 1
                  OrderNumber: ''
                  CustomerId: ''
                  SendReceipt: false
                  isDelaySaleActivation: false
                  activationDate: ''
                  LabelIds:
                    - 987654638
                  StatementDescription: ''
                  AssociationId: ''
                  ConnexPayTransaction:
                    ExpectedPayments: 0
                  RiskData:
                    ProductType: test
                    ProductItem: test
                    OrderNumber: ''
                    SellerId: ''
                    Email: ''
                    Gender: ''
                    DateOfBirth: ''
                    ProductDesc: ''
                    BillingPhoneNumber: ''
                    BillingAddress1: ''
                    BillingAddress2: ''
                    BillingState: ''
                    BillingCity: ''
                    BillingPostalCode: ''
                    FlightData:
                      Airline: ''
                      DepartureAirport: ''
                      DepartureDate: ''
                      DestinationAirport: ''
                      HoursToDeparture: ''
                      JourneyType: ''
                      Route: ''
                      RouteByCountry: ''
                    FlightPassenger: []
                  Card:
                    CardNumber: '4018810001010010'
                    CardHolderName: Jason Harmon
                    Cvv2: '999'
                    ExpirationDate: '2312'
                    Customer:
                      FirstName: Jason
                      LastName: Harmon
                      Email: ''
                      Address1: ''
                      Address2: ''
                      State: ''
                      City: ''
                      Country: ''
                      Zip: ''
                      Phone: ''
                      SSN4: ''
                  DeviceGuid: e639a1dc-5cc4-43de-ab74-d5bea6c6b107
                  TenderType: Credit
                  BrowserData:
                    AcceptanceHeader: >-
                      text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8
                    ColorDepth: 32
                    JavaEnabled: true
                    ScreenHeight: 1000
                    ScreenWidth: 1000
                    TimeZoneOffset: 0
                    Language: en-GB
                    RedirectUrl: https://salesapi.connexpaydev.com/
                    UserAgentHeader: >-
                      Mozilla/5.0 (Windows NT 10.0; Win64; x64)
                      AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0
                      Safari/537.36
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Create Credit Card Sale Response Example:
                  value: "{\n   \"guid\":\"965a67b0-cd0e-4020-973b-5e0d1b4bd6e2\",\n   \"status\":\"Transaction - Approved\",\n   \"type\":\"Default\",\n   \"batchStatus\":\"Batch - Open\",\n   \"timeStamp\":\"2019-11-20T05:37:13.22-05:00\",\n   \"deviceGuid\":\"f758a448-7780-4b50-93a1-28329e37f94f\",\n   \"amount\":280.0,\n   \"activated\": true,\n   \"tenderType\":\"Credit\",\n   \"effectiveAmount\":280.0,\n   \"riskResponse\":{\n      \"transactionId\":\"73PK0DN43KSZ\",\n      \"response\":\"Approved\",\n      \"reason\":\"\",\n      \"score\":\"38\",\n      \"omniscore\": \"63.5\"\n   },\n   \"orderNumber\":\"159874\",\n   \"cardDataSource\":\"INTERNET\",\n   \"customerID\":\"xt147\",\n   \"batchGuid\":\"c71d0ee6-b595-4792-b1ee-1156d28be132\",\n   \"connexPayTransaction\":{\n      \"guid\":\"d6c7e3c3-1cdd-47a1-89b9-368059b85c2c\",\n      \"expectedPayments\":9,\n      \"filler\":\"ZZZ\",\n      \"incomingTransCode\":\"09ASECYE48S9KHBQL00028000\"\n   },\n   \"riskProcessingOnly\":false,\n   \"processorStatusCode\":\"A0000\",\n   \"processorResponseMessage\":\"Success\",\n   \"wasProcessed\":true,\n   \"authCode\":\"TAS698\",\n   \"refNumber\":\"21313220\",\n   \"customerReceipt\":\"CONNEXPAY\\\\n8320 S HARDY DRIVE...\\\\n\",\n   \"statementDescription\":\"Agent Booking 123\",\n   \"generatedBy\":\"tcformal1\",\n   \"enhancedData\":{\n     \t\"cardLevel\":\"2\"\n      \"saleTax\":5.0,\n      \"purchaseOrder\":\"PURCHSEORDER1\",\n      \"additionalTaxDetailTaxCategory\":\"tex\",\n      \"additionalTaxDetailTaxType\":\"regional\",\n      \"additionalTaxDetailTaxAmount\":3.0,\n      \"additionalTaxDetailTaxRate\":2.5,\n      \"shippingCharges\":20.0,\n      \"dutyCharges\":17.59,\n      \"shipToZip\":\"50001\",\n      \"shipFromZip\":\"55100\",\n      \"destinationCountryCode\":\"ARG\",\n      \"customerVATNumber\":\"75010101\",\n      \"summaryCommodityCode\":\"Aa94\",\n      \"vatInvoice\":\"231465214\",\n      \"orderDate\":\"07/20/2018\",\n      \"supplierReferenceNumber\":\"123\",\n      \"customerRefID\":\"123\",\n      \"chargeDescriptor\":\"Sample Charge\",\n      \"productName\":\"Product 01\",\n      \"productCode\":\"P1\",\n      \"price\":5.0,\n      \"additionalAmount\":2.5,\n      \"additionalAmountType\":\"GIFT_SHOP\"\n   },\n   \"card\":{\n      \"first4\":\"4716\",\n      \"last4\":\"0473\",\n      \"cardNumber\":\"CARD NOT TOKENIZED\",\n      \"cardHolderName\":\"John Doe\",\n      \"cardType\":\"Visa\",\n      \"expirationDate\":\"2019-12\",\n      \"guid\":\"b9b2fcd3-6b35-40a6-a560-6e434ae01068\",\n      \"customer\":{\n         \"guid\":\"3bd93697-005a-4723-a7f8-f892577ee2bf\",\n         \"firstName\":\"John\",\n         \"lastName\":\"Doe\",\n         \"dateOfBirth\":\"1990-12-07T00:00:00\",\n         \"address1\":\"107 7th Av.\",\n         \"address2\":\"\",\n         \"zip\":\"10007\",\n         \"city\":\"New York\",\n         \"state\":\"NY\",\n         \"country\":\"US\",\n         \"phone\":\"9177563007\",\n         \"email\":\"johnd@gmail.com\",\n         \"ssN4\":\"1210\",\n         \"driverLicenseNumber\":\"12345678\",\n         \"driverLicenseState\":\"TX\"\n      }\n   },\n   \"sequenceNumber\":\"849741\",\n   \"addressVerificationCode\":\"N\",\n   \"addressVerificationResult\":\"No match. Acquirer sent postal/ZIP code only, or street address only, or both postal/ZIP and street address.\",\n   \"cvvVerificationCode\":\"M\",\n   \"cvvVerificationResult\":\"CVV2 Match. Indicates that the Funds Transfer API or the issuer was able to verify the CVV2 value provided by the merchant.\",\n}"
                3DS Frictionless Response Example:
                  value: |-
                    {
                        "guid": "2d78c80e-59c3-44ae-a770-c70dfa550768",
                        "status": "Transaction - Approved",
                        "type": "3D Secure",
                        "batchStatus": "Batch - Open",
                        "timeStamp": "2022-11-29T06:47:52.53-05:00",
                        "deviceGuid": "e639a1dc-5cc4-43de-ab74-d5bea6c6b107",
                        "amount": 1.00,
                        "activated": true,
                        "tenderType": "Credit",
                        "effectiveAmount": 1.00,
                        "riskResponse": {
                            "transactionId": null,
                            "response": "Fraud Check Skipped for Finaro Request.",
                            "reason": null,
                            "score": null
                        },
                        "orderNumber": "",
                        "cardDataSource": "INTERNET",
                        "customerID": "",
                        "batchGuid": "c4513dc8-1f49-47c2-b384-6b0897c3734e",
                        "connexPayTransaction": {
                            "guid": "76d224b7-1abc-4fdb-9d0a-9a4b44cebbca",
                            "expectedPayments": 0,
                            "incomingTransCode": "7C9A573638053372540845316"
                        },
                        "associationId": "",
                        "processorStatusCode": "0",
                        "processorResponseMessage": "Transaction has been executed successfully.",
                        "wasProcessed": true,
                        "authCode": "697949",
                        "refNumber": "XZZ01c19f5570e6bDAFUP3DOWVUR5FSB",
                        "customerReceipt": "Not Available",
                        "statementDescription": "",
                        "generatedBy": "jharmonfinaro",
                        "Card": {
                            "ThreeDS": {
                                "SecureCode": "06:3030303030303030303030313130363639393458:none",
                                "Cavv": "MDAwMDAwMDAwMDAxMTA2Njk5NFg=",
                                "Version": "2.1.0",
                                "DirectoryServerTransactionID": "806e85be-8568-4601-a993-654662947afb",
                                "AcsTransactionId": "3afb5c9b-5e06-4e35-9051-e2461d767028",
                                "ECI": "06"
                            },
                            "CardNumber": "4018810000100036",
                            "CardHolderName": "Jason Harmon",
                            "Cvv2": "999",
                            "ExpirationDate": "2312",
                            "Customer": {
                                "FirstName": "Jason",
                                "LastName": "Harmon",
                                "Email": "",
                                "Address1": "",
                                "Address2": "",
                                "State": "",
                                "City": "",
                                "Country": "",
                                "Zip": "",
                                "Phone": "",
                                "SSN4": ""
                            }
                        },
                        "addressVerificationResult": "Unavailable",
                        "cvvVerificationCode": "M",
                        "cvvVerificationResult": "CVV2 Match. Indicates that the Funds Transfer API or the issuer was able to verify the CVV2 value provided by the merchant.",
                        "cavvResponseCode": "2",
                        "walletProvider": 0,
                        "isFromIssueLite": false,
                        "labelIds": [
                            987654638
                        ],
                        "remainingAmount": 1.00
                    }
              schema:
                $ref: '#/components/schemas/SaleCreateTransactionResponse'
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Create Sale - ACH Response Example:
                  value: |-
                    {
                        "guid": "965a67b0-cd0e-4020-973b-5e0d1b4bd6e2",
                        "status": "Transaction - Approved",
                        "type": "Default",
                        "batchStatus": "Batch - Open",
                        "timeStamp": "2023-05-09T15:33:12.25-04:00",
                        "deviceGuid": "f758a448-7780-4b50-93a1-28329e37f94f",
                        "amount": 1.17,
                        "activated": true,
                        "tenderType": "ACH",
                        "effectiveAmount": 1.17,
                        "purchaseActivationDate": "2023-05-09T00:00:00-04:00",
                        "orderNumber": "ACH Sale Example",
                        "cardDataSource": "INTERNET",
                        "customerID": "CustomerID",
                        "batchGuid": "c71d0ee6-b595-4792-b1ee-1156d28be132",
                        "connexPayTransaction": {
                            "guid": "d6c7e3c3-1cdd-47a1-89b9-368059b85c2c",
                            "expectedPayments": 1,
                            "incomingTransCode": "23D5797638192431927631987"
                        },
                        "riskProcessingOnly": false,
                        "processorStatusCode": "A0000",
                        "processorResponseMessage": "NotYetProcessed",
                        "wasProcessed": true,
                        "refNumber": "LC40FTVWZH",
                        "customerReceipt": "Test\\nTest Minnesota 55111\\n5/9/2023 12:00:00 AM\\n\\nACH - Sale\\n\\nACCT NBR last four # : **** **** **** **** 1111\\nEntry Mode : MANUAL\\n\\nTRANSACTION ID : 63819243192747\\nInvoice number : Sales Test \\nSubtotal:                      $1.17\\n--------------------------------------\\nTotal:                         $1.17\\n--------------------------------------\\n\\n\\n\\nCUSTOMER ACKNOWLEDGES RECEIPT OF\\nGOODS AND/OR SERVICES IN THE AMOUNT\\nOF THE TOTAL SHOWN HEREON AND AGREES\\nTO PERFORM THE OBLIGATIONS SET FORTH\\nBY THE CUSTOMER`S AGREEMENT WITH THE\\nISSUER\\nAPPROVED\\n\\n\\n\\n\\nCustomer Copy\\n",
                        "statementDescription": "Test",
                        "generatedBy": "Test",
                        "bankAccount": {
                            "guid": "b9b2fcd3-6b35-40a6-a560-6e434ae01068",
                            "accountType": "Checking",
                            "accountNumberLastFour": "1111",
                            "nameOnAccount": "TestName",
                            "customer": {
                                "guid": "3bd93697-005a-4723-a7f8-f892577ee2bf",
                                "firstName": "First Name",
                                "lastName": "Last Name",
                                "dateOfBirth": "2002-05-30T00:00:00",
                                "address1": "1 Main St",
                                "address2": "Apt 1A",
                                "zip": "12345",
                                "city": "Test",
                                "country": "US",
                                "phone": "9998887777",
                                "email": "test@test.com",
                                "ssN4": "1111"
                            }
                        },
                        "sequenceNumber": "123",
                        "addressVerificationResult": "Unavailable",
                        "cvvVerificationResult": "Unavailable",
                        "walletProvider": 0,
                        "includeRiskAnalysis": false,
                        "isFromIssueLite": false,
                        "remainingAmount": 1.17
                    }
              schema:
                $ref: '#/components/schemas/SaleCreateTransaction201Response'
        '202':
          description: '202'
          content:
            application/json:
              examples:
                3DS Device Fingerprint Response Example:
                  value: |-
                    {
                        "guid": "3a0d533f-588b-4ce4-920f-7bc4641ea8f7",
                        "status": "3DS - Pending Fingerprint",
                        "timeStamp": "2023-08-16T16:44:40.9866697Z",
                        "deviceGuid": "e639a1dc-5cc4-43de-ab74-d5bea6c6b107",
                        "amount": 1.34,
                        "version": "2.1.0",
                        "redirectUrl": "https://x3d-sim.credorax.net/acs/3ds-method",
                        "redirectUrlRequestPayload": "threeDSMethodData=eyJ0aHJlZURTTWV0aG9kTm90aWZpY2F0aW9uVVJMIjoiaHR0cHM6Ly9zYWxlc2FwaS5jb25uZXhwYXlkZXYuY29tL2FwaS92MS8zZHMvY2FsbGJhY2siLCJ0aHJlZURTU2VydmVyVHJhbnNJRCI6ImU2YmNjM2RiLTAwZjQtNDdiZi05OTgwLTljZjE2MTUxOGM5NyJ9",
                        "card": {
                            "first6": "401881",
                            "first4": "4018",
                            "last4": "0010",
                            "cardHolderName": "Jason Harmon",
                            "cardType": "Visa",
                            "expirationDate": "2023-12",
                            "guid": "c6b816a3-f107-40d5-9dc3-bcefc576c8bc"
                        },
                        "exemptThreeDSRequest": false,
                        "exemptThreeDSPayment": false
                    }
                3DS Cardholder Challenge Response Example:
                  value: |-
                    {
                        "guid": "a41dd8ab-8629-42c0-8a6f-8b9162a93ccc",
                        "status": "3DS - Pending User Challenge",
                        "timeStamp": "2023-08-16T16:45:23.9986814Z",
                        "deviceGuid": "e639a1dc-5cc4-43de-ab74-d5bea6c6b107",
                        "amount": 1.34,
                        "threeDSStatus": "C",
                        "directoryServerTransactionID": "72f4afb2-c057-4abc-b054-9fae4b4ceb49",
                        "acsTransactionId": "7c6670d1-d888-4af5-b5f4-db286ba6c20a",
                        "version": "2.1.0",
                        "redirectUrl": "https://x3d-any-int.credorax.net/challenge/request/CONN2978/2534bb4d055f10423709276026df821ff3c8",
                        "card": {
                            "first6": "401881",
                            "first4": "4018",
                            "last4": "0015",
                            "cardHolderName": "Jason Harmon",
                            "cardType": "Visa",
                            "expirationDate": "2023-12",
                            "guid": "2c032f47-f7ab-4849-9715-0b4bacf252a3"
                        },
                        "exemptThreeDSRequest": false,
                        "exemptThreeDSPayment": false
                    }
              schema:
                $ref: '#/components/schemas/SaleCreateTransaction202Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: text
            code: |-
              {
                 "DeviceGuid":"{{Device}}",
                 "Amount":280,
                 "TenderType":"Credit",
                 "SequenceNumber":"8497421",
                 "OrderNumber":"12345",
                 "ActivationDate": "2020-01-01",
                 "SendReceipt":true,
                 "RiskProcessingOnly":false,
                 "StatementDescription":"Agent Booking 123",
                 "CustomerId":"xt147",
                 "ConnexPayTransaction":{
                    "ExpectedPayments":9
                 },
                 "RiskData":{
                    "Name":"John Doe",
                    "Gender":"M",
                    "DateOfBirth":"1993-03-18",
                    "BillingPhoneNumber":"9177563046",
                    "BillingAddress1":"151 E 33rd St",
                    "BillingAddress2":"Second Floor",
                    "BillingCity":"New York",
                    "BillingState":"NY",
                    "BillingPostalCode":"10016",
                    "BillingCountryCode":"US",
                    "Email":"johnd@gmail.com",
                    "ProductType":"Flight",
                    "ProductDesc":"Flight from London to New York",
                    "ProductItem":"784GTWJFK856",
                    "ProductQuantity":4,
                    "ProductPrice":"42400",
                    "OrderNumber":"857B2",
                    "SellerId":"AG75597",
                    "FlightData":{
                       "Airline":"American Airlines",
                       "DepartureAirport":"Gatwick",
                       "DepartureDate":"2020-06-30",
                       "DestinationAirport":"JFK",
                       "HoursToDeparture":5,
                       "JourneyType":"Day",
                       "Route":"Direct",
                       "RouteByCountry":"UK, USA"
                    },
                   "Card":{
                    "CardNumber":"4716317307520473",
                    "CardHolderName":"John Doe",
                    "Cvv2":"999",
                    "ExpirationDate":"1912",
                    "Customer":{
                       "FirstName":"John",
                       "LastName":"Doe",
                       "Phone":"9177563007",
                       "City":"New York",
                       "State":"NY",
                       "Country":"US",
                       "Email":"johnd@gmail.com",
                       "Address1":"107 7th Av.",
                       "Address2":"",
                       "Zip":"10007",
                       "DateOfBirth":"1990-12-07",
                       "DriverLicenseNumber":"12345678",
                       "DriverLicenseState":"TX",
                       "SSN4":"1210"
                    }
                 
              }
            name: Create Delayed Activation Sale Request Example
        samples-languages:
          - text
  /api/v1/void:
    post:
      tags:
        - Void
      summary: Void
      operationId: Void_createVoid
      security:
        - sec0: []
      description: This endpoint creates a void.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoidCreateVoidRequest'
            examples:
              Void Request Example:
                value:
                  DeviceGuid: 4b5013f7-b275-4929-8e83-0167c6edf639
                  SaleGuid: c5ac2017-99cb-4b1f-a90e-142cc82b21e5
                  Amount: 20.5
                  SequenceNumber: Sample-seq-1
                  VoidReason: DEVICE_TIMEOUT
              Auth Only Void Request:
                value:
                  DeviceGuid: 884defd8-4f35-466d-b077-482ca6e8ecab
                  AuthOnlyGuid: 44ba0531-d847-489d-ab32-b27a0356d63c
                  VoidReason: DEVICE_TIMEOUT
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Void Response Example:
                  value: |-
                    {
                        "guid": "7a4ef786-8288-404d-9340-e837d06784af",
                        "amount": 20.50,
                        "batchStatus": "Batch - Open",
                        "timeStamp": "2017-07-11T11:05:46.31",
                        "deviceGuid": "8f65764d-72c1-4dee-ac9f-4cd4c98e8c35",
                        "saleGuid": "bfff1a26-4207-4871-9597-48282e3fcfea",
                        "status": "Transaction - Approved",
                        "voidReason": "DEVICE_TIMEOUT",
                        "processorStatusCode": "A0000",
                        "wasProcessed": true,
                        "batchGuid": "1564cb1b-eddb-4747-9565-61a7d7d225f9",
                        "authCode": "VTLMC1",
                        "refNumber": "13283644",
                        "invoiceNumber": "11518",
                        "customerReceipt": "SUR TECHNOLOGY HOLDINGS\n8320 S HARDY DRIVE\nTEMPE AZ 85284\n07/11/2017 07:05:50\n\nCREDIT - VOID\n\nCARD # : **** **** **** 0213\nCARD TYPE :MASTERCARD\nEntry Mode : MANUAL\n\nREF # : 13283644\nInvoice number : 11518\n\nVoid Amount:                    $19.74\n--------------------------------------\n\n\n\nJohn Doe\n\nCUSTOMER ACKNOWLEDGES RECEIPT OF\nGOODS AND/OR SERVICES IN THE AMOUNT\nOF THE TOTAL SHOWN HEREON AND AGREES\nTO PERFORM THE OBLIGATIONS SET FORTH\nBY THE CUSTOMER`S AGREEMENT WITH THE\nISSUER\nAPPROVED\n\n\n\n\nCustomer Copy\n",
                        "sequenceNumber": "Sample-seq-1",
                        "sale": {
                            "guid": "bfff1a26-4207-4871-9597-48282e3fcfea",
                            "status": "Transaction - Approved",
                            "batchStatus": "Batch - Open",
                            "timeStamp": "2017-07-11T11:05:24.65",
                            "deviceGuid": "8f65764d-72c1-4dee-ac9f-4cd4c98e8c35",
                            "amount": 19.74,
                            "effectiveAmount": 0,
                            "orderNumber": "11518",
                            "orderDate": "2017-02-03T00:00:00",
                            "batchGuid": "1564cb1b-eddb-4747-9565-61a7d7d225f9",
                            "processorStatusCode": "A0000",
                            "processorResponseMessage": "Success",
                            "wasProcessed": true,
                            "authCode": "VTLMC1",
                            "refNumber": "13283644",
                            "invoiceNumber": "11518",
                            "customerReceipt": "SUR TECHNOLOGY HOLDINGS\n8320 S HARDY DRIVE\nTEMPE AZ 85284\n07/11/2017 07:05:27\n\nCREDIT - SALE\n\nCARD # : **** **** **** 0213\nCARD TYPE :MASTERCARD\nEntry Mode : MANUAL\n\nREF # : 13283644\nInvoice number : 11518\nAUTH CODE : VTLMC1\nSubtotal:                       $19.74\n--------------------------------------\nTotal:                          $19.74\n--------------------------------------\n\n\n\nJohn Doe\n\nCUSTOMER ACKNOWLEDGES RECEIPT OF\nGOODS AND/OR SERVICES IN THE AMOUNT\nOF THE TOTAL SHOWN HEREON AND AGREES\nTO PERFORM THE OBLIGATIONS SET FORTH\nBY THE CUSTOMER`S AGREEMENT WITH THE\nISSUER\nAPPROVED\n\n\n\n\nCustomer Copy\n",
                            "customData": "order details",
                            "card": {
                                "first4": "5306",
                                "last4": "0213",
                                "cardNumber": "1zcGT7J4pkGh0213",
                                "cardHolderName": "John Doe",
                                "expirationDate": "2019-07",
                                "customer": {
                                    "guid": "d1cf828d-3050-4e4c-b7cf-f4038d114d39",
                                    "firstName": "John",
                                    "lastName": "Doe",
                                    "phone": "9177563007",
                                    "city": "New York",
                                    "country": "US",
                                    "email": "johnd@gmail.com",
                                    "zip": "10007",
                                    "address1": "107 7th Av.",
                                    "address2": "",
                                    "state": "NY",
                                    "dateOfBirth": "1987-07-07T00:00:00",
                                    "driverLicenseNumber": "12345678",
                                    "driverLicenseState": "TX",
                                    "ssN4": "1210"
                                }
                            }
                        }
                    }
              schema:
                $ref: '#/components/schemas/VoidCreateVoidResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/VoidCreateVoid400Response'
      deprecated: false
  /api/v1/returns:
    post:
      tags:
        - Return
      summary: Return
      operationId: Return_itemRequest
      security:
        - sec0: []
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReturnItemRequestRequest'
            examples:
              Return Request Example:
                value:
                  guid: 4f31b350-edd1-49fd-a1ad-4b065f78d7b9
                  batchStatus: Batch - Open
                  timeStamp: '2017-07-11T11:10:38.11'
                  deviceGuid: 8f65764d-72c1-4dee-ac9f-4cd4c98e8c35
                  saleGuid: ded98ad3-0553-4607-b84c-1bbd85f474d5
                  status: Transaction - Approved
                  amount: 19.74
                  batchGuid: 450463e0-5050-4c33-8c2f-4e39a2dd8614
                  processorStatusCode: A0014
                  wasProcessed: true
                  authCode: VTLMC1
                  refNumber: '13283670'
                  invoiceNumber: '11518'
                  customerReceipt: |
                    SUR TECHNOLOGY HOLDINGS
                    8320 S HARDY DRIVE
                    TEMPE AZ 85284
                    07/11/2017 07:10:42

                    CREDIT - VOID

                    CARD # : **** **** **** 0213
                    CARD TYPE :MASTERCARD
                    Entry Mode : MANUAL

                    REF # : 13283670
                    Invoice number : 11518

                    Void Amount:                    $19.74
                    --------------------------------------



                    John Doe

                    CUSTOMER ACKNOWLEDGES RECEIPT OF
                    GOODS AND/OR SERVICES IN THE AMOUNT
                    OF THE TOTAL SHOWN HEREON AND AGREES
                    TO PERFORM THE OBLIGATIONS SET FORTH
                    BY THE CUSTOMER`S AGREEMENT WITH THE
                    ISSUER
                    APPROVED




                    Customer Copy
                  sequenceNumber: Sample-seq-1
                  sale:
                    guid: ded98ad3-0553-4607-b84c-1bbd85f474d5
                    status: Transaction - Approved
                    batchStatus: Batch - Closed
                    timeStamp: '2017-07-11T11:09:53.5'
                    deviceGuid: 8f65764d-72c1-4dee-ac9f-4cd4c98e8c35
                    amount: 19.74
                    effectiveAmount: 0
                    orderNumber: '11518'
                    orderDate: '2017-02-03T00:00:00'
                    batchGuid: 1564cb1b-eddb-4747-9565-61a7d7d225f9
                    processorStatusCode: A0000
                    processorResponseMessage: Success
                    wasProcessed: true
                    authCode: VTLMC1
                    refNumber: '13283670'
                    invoiceNumber: '11518'
                    customerReceipt: |
                      SUR TECHNOLOGY HOLDINGS
                      8320 S HARDY DRIVE
                      TEMPE AZ 85284
                      07/11/2017 07:09:56

                      CREDIT - SALE

                      CARD # : **** **** **** 0213
                      CARD TYPE :MASTERCARD
                      Entry Mode : MANUAL

                      REF # : 13283670
                      Invoice number : 11518
                      AUTH CODE : VTLMC1
                      Subtotal:                       $19.74
                      --------------------------------------
                      Total:                          $19.74
                      --------------------------------------



                      John Doe

                      CUSTOMER ACKNOWLEDGES RECEIPT OF
                      GOODS AND/OR SERVICES IN THE AMOUNT
                      OF THE TOTAL SHOWN HEREON AND AGREES
                      TO PERFORM THE OBLIGATIONS SET FORTH
                      BY THE CUSTOMER`S AGREEMENT WITH THE
                      ISSUER
                      APPROVED




                      Customer Copy
                    customData: order details
                    card:
                      first4: '5306'
                      last4: '0213'
                      cardNumber: 1zcGT7J4pkGh0213
                      cardHolderName: John Doe
                      expirationDate: 2019-07
                      customer:
                        guid: d1cf828d-3050-4e4c-b7cf-f4038d114d39
                        firstName: John
                        lastName: Doe
                        phone: '9177563007'
                        city: New York
                        country: US
                        email: johnd@gmail.com
                        zip: '10007'
                        address1: 107 7th Av.
                        address2: ''
                        state: NY
                        dateOfBirth: '1987-07-07T00:00:00'
                        driverLicenseNumber: '12345678'
                        driverLicenseState: TX
                        ssN4: '1210'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Return Response Example:
                  value: |-
                    {
                        "guid": "4f31b350-edd1-49fd-a1ad-4b065f78d7b9",
                        "batchStatus": "Batch - Open",
                        "timeStamp": "2017-07-11T11:10:38.11",
                        "deviceGuid": "8f65764d-72c1-4dee-ac9f-4cd4c98e8c35",
                        "saleGuid": "ded98ad3-0553-4607-b84c-1bbd85f474d5",
                        "status": "Transaction - Approved",
                        "amount": 19.74,
                        "batchGuid": "450463e0-5050-4c33-8c2f-4e39a2dd8614",
                        "processorStatusCode": "A0014",
                        "wasProcessed": true,
                        "authCode": "VTLMC1",
                        "refNumber": "13283670",
                        "invoiceNumber": "11518",
                        "customerReceipt": "SUR TECHNOLOGY HOLDINGS\\n8320 S HARDY DRIVE\\nTEMPE AZ 85284\\n07/11/2017 07:10:42\\n\\nCREDIT - VOID\\n\\nCARD # : **** **** **** 0213\\nCARD TYPE :MASTERCARD\\nEntry Mode : MANUAL\\n\\nREF # : 13283670\\nInvoice number : 11518\\n\\nVoid Amount:                    $19.74\\n--------------------------------------\\n\\n\\n\\nJohn Doe\\n\\nCUSTOMER ACKNOWLEDGES RECEIPT OF\\nGOODS AND/OR SERVICES IN THE AMOUNT\\nOF THE TOTAL SHOWN HEREON AND AGREES\\nTO PERFORM THE OBLIGATIONS SET FORTH\\nBY THE CUSTOMER’S AGREEMENT WITH THE\\nISSUER\\nAPPROVED\\n\\n\\n\\n\\nCustomer Copy\\n",
                        "sequenceNumber": "Sample-seq-1",
                        "sale": {
                            "guid": "ded98ad3-0553-4607-b84c-1bbd85f474d5",
                            "status": "Transaction - Approved",
                            "batchStatus": "Batch - Closed",
                            "timeStamp": "2017-07-11T11:09:53.5",
                            "deviceGuid": "8f65764d-72c1-4dee-ac9f-4cd4c98e8c35",
                            "amount": 19.74,
                            "effectiveAmount": 0,
                            "orderNumber": "11518",
                            "orderDate": "2017-02-03T00:00:00",
                            "batchGuid": "1564cb1b-eddb-4747-9565-61a7d7d225f9",
                            "processorStatusCode": "A0000",
                            "processorResponseMessage": "Success",
                            "wasProcessed": true,
                            "authCode": "VTLMC1",
                            "refNumber": "13283670",
                            "invoiceNumber": "11518",
                            "customerReceipt": "SUR TECHNOLOGY HOLDINGS\\n8320 S HARDY DRIVE\\nTEMPE AZ 85284\\n07/11/2017 07:09:56\\n\\nCREDIT - SALE\\n\\nCARD # : **** **** **** 0213\\nCARD TYPE :MASTERCARD\\nEntry Mode : MANUAL\\n\\nREF # : 13283670\\nInvoice number : 11518\\nAUTH CODE : VTLMC1\\nSubtotal:                       $19.74\\n--------------------------------------\\nTotal:                          $19.74\\n--------------------------------------\\n\\n\\n\\nJohn Doe\\n\\nCUSTOMER ACKNOWLEDGES RECEIPT OF\\nGOODS AND/OR SERVICES IN THE AMOUNT\\nOF THE TOTAL SHOWN HEREON AND AGREES\\nTO PERFORM THE OBLIGATIONS SET FORTH\\nBY THE CUSTOMER’S AGREEMENT WITH THE\\nISSUER\\nAPPROVED\\n\\n\\n\\n\\nCustomer Copy\\n",
                            "customData": "order details",
                            "card": {
                                "first4": "5306",
                                "last4": "0213",
                                "cardNumber": "1zcGT7J4pkGh0213",
                                "cardHolderName": "John Doe",
                                "expirationDate": "2019-07",
                                "customer": {
                                    "guid": "d1cf828d-3050-4e4c-b7cf-f4038d114d39",
                                    "firstName": "John",
                                    "lastName": "Doe",
                                    "phone": "9177563007",
                                    "city": "New York",
                                    "country": "US",
                                    "email": "johnd@gmail.com",
                                    "zip": "10007",
                                    "address1": "107 7th Av.",
                                    "address2": "",
                                    "state": "NY",
                                    "dateOfBirth": "1987-07-07T00:00:00",
                                    "driverLicenseNumber": "12345678",
                                    "driverLicenseState": "TX",
                                    "ssN4": "1210"
                                }
                            }
                        }
                    }
              schema:
                $ref: '#/components/schemas/ReturnItemRequestResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/ReturnItemRequest400Response'
      deprecated: false
  /api/v1/cancel:
    post:
      tags:
        - Cancellation
      summary: Cancel
      operationId: Cancellation_entireTripCancellation
      security:
        - sec0: []
      description: >-
        The Cancel route should be used in the event the entire trip/booking
        (sale & purchase) require cancellation. In this case, the
        traveler/cardholder would be due a refund from the sale and the Virtual
        Card would be terminated to prevent the travel supplier from authorizing
        the Virtual Card.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancellationEntireTripCancellationRequest'
            examples:
              Cancel Request Example:
                value:
                  DeviceGuid: 4b5013f7-b275-4929-8e83-0167c6edf639
                  SaleGuid: c5ac2017-99cb-4b1f-a90e-142cc82b21e5
                  SequenceNumber: Sample-seq-1
                  VoidReason: DEVICE_TIMEOUT
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Cancel Response Example:
                  value: |-
                    {
                        "guid": "7a4ef786-8288-404d-9340-e837d06784af",
                        "batchStatus": "Batch - Open",
                        "timeStamp": "2017-07-11T11:05:46.31",
                        "deviceGuid": "8f65764d-72c1-4dee-ac9f-4cd4c98e8c35",
                        "saleGuid": "bfff1a26-4207-4871-9597-48282e3fcfea",
                        "status": "Transaction - Approved",
                        "voidReason": "DEVICE_TIMEOUT",
                        "processorStatusCode": "A0000",
                        "wasProcessed": true,
                        "batchGuid": "1564cb1b-eddb-4747-9565-61a7d7d225f9",
                        "authCode": "VTLMC1",
                        "refNumber": "13283644",
                        "invoiceNumber": "11518",
                        "customerReceipt": "CONNEXPAY\\n8320 S HARDY DRIVE\\nTEMPE AZ 85284\\n07/11/2017 07:05:50\\n\\nCREDIT - VOID\\n\\nCARD # : **** **** **** 0213\\nCARD TYPE :MASTERCARD\\nEntry Mode : MANUAL\\n\\nREF # : 13283644\\nInvoice number : 11518\\n\\nCancel Amount:                    $19.74\\n--------------------------------------\\n\\n\\n\\nJohn Doe\\n\\nCUSTOMER ACKNOWLEDGES RECEIPT OF\\nGOODS AND/OR SERVICES IN THE AMOUNT\\nOF THE TOTAL SHOWN HEREON AND AGREES\\nTO PERFORM THE OBLIGATIONS SET FORTH\\nBY THE CUSTOMER`S AGREEMENT WITH THE\\nISSUER\\nAPPROVED\\n\\n\\n\\n\\nCustomer Copy\\n",
                        "sequenceNumber": "Sample-seq-1",
                        "sale": {
                            "guid": "bfff1a26-4207-4871-9597-48282e3fcfea",
                            "status": "Transaction - Approved",
                            "batchStatus": "Batch - Open",
                            "timeStamp": "2017-07-11T11:05:24.65",
                            "deviceGuid": "8f65764d-72c1-4dee-ac9f-4cd4c98e8c35",
                            "amount": 19.74,
                            "effectiveAmount": 0,
                            "orderNumber": "11518",
                            "orderDate": "2017-02-03T00:00:00",
                            "batchGuid": "1564cb1b-eddb-4747-9565-61a7d7d225f9",
                            "processorStatusCode": "A0000",
                            "processorResponseMessage": "Success",
                            "wasProcessed": true,
                            "authCode": "VTLMC1",
                            "refNumber": "13283644",
                            "customerReceipt": "CONNEXPAY\\n8320 S HARDY DRIVE\\nTEMPE AZ 85284\\n07/11/2017 07:05:27\\n\\nCREDIT - SALE\\n\\nCARD # : **** **** **** 0213\\nCARD TYPE :MASTERCARD\\nEntry Mode : MANUAL\\n\\nREF # : 13283644\\nInvoice number : 11518\\nAUTH CODE : VTLMC1\\nSubtotal:                       $19.74\\n--------------------------------------\\nTotal:                          $19.74\\n--------------------------------------\\n\\n\\n\\nJohn Doe\\n\\nCUSTOMER ACKNOWLEDGES RECEIPT OF\\nGOODS AND/OR SERVICES IN THE AMOUNT\\nOF THE TOTAL SHOWN HEREON AND AGREES\\nTO PERFORM THE OBLIGATIONS SET FORTH\\nBY THE CUSTOMER`S AGREEMENT WITH THE\\nISSUER\\nAPPROVED\\n\\n\\n\\n\\nCustomer Copy\\n",
                            "generatedBy": "ultralux",
                            "card": {
                                "first4": "5306",
                                "last4": "0213",
                                "cardNumber": "1zcGT7J4pkGh0213",
                                "cardHolderName": "John Doe",
                                "expirationDate": "2019-07",
                                "customer": {
                                    "guid": "d1cf828d-3050-4e4c-b7cf-f4038d114d39",
                                    "firstName": "John",
                                    "lastName": "Doe",
                                    "phone": "9177563007",
                                    "city": "New York",
                                    "country": "US",
                                    "email": "johnd@gmail.com",        
                                }
                            }
                            "addressVerificationCode": "N",
                            "addressVerificationResult": "No match. Acquirer sent postal/ZIP code only, or street address only, or both postal/ZIP and street address."
                            "cvvVerificationCode": "M",
                            "cvvVerificationResult": "CVV2 Match. Indicates that the Funds Transfer API or the issuer was able to verify the CVV2 value provided by the merchant."
                        }
                    }
              schema:
                $ref: >-
                  #/components/schemas/CancellationEntireTripCancellationResponse
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: >-
                  #/components/schemas/CancellationEntireTripCancellation400Response
      deprecated: false
  /api/v1/authonlys:
    post:
      tags:
        - Authentication
      summary: Auth Only
      operationId: Authentication_acquireClientAuthorization
      security:
        - sec0: []
      description: >-
        The Auth Only Endpoint is applicable to acquiring clients.  Call Auth
        Only when you want to process an Authorization only, which will not
        settle until it's Captured.  We do not allow you to Capture an
        Authorization after 5 business days have passed.Calling this endpoint
        will authorize the card, however, it will not be settled until the
        [Capture endpoint](https://docs.connexpay.com/reference/capture) is
        called. Authorizations expire after 5 days.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/AuthenticationAcquireClientAuthorizationRequest
            examples:
              Auth Only Request:
                value:
                  DeviceGuid: '{{Device}}'
                  Amount: 280
                  SequenceNumber: '849741'
                  OrderNumber: '1598742342342432342342432432'
                  SendReceipt: true
                  StatementDescription: Agent Booking 123
                  CustomerID: xt147
                  RiskData:
                    Name: John Doe
                    Gender: M
                    DateOfBirth: '1993-03-18'
                    BillingPhoneNumber: '9177563046'
                    BillingAddress1: 151 E 33rd St
                    BillingAddress2: Second Floor
                    BillingCity: New York
                    BillingState: NY
                    BillingPostalCode: '10016'
                    BillingCountryCode: US
                    Email: someone@connexpay.com
                    ProductType: Flight
                    ProductDesc: Flight from London to New York
                    ProductItem: 784GTWJFK856
                    ProductQuantity: 4
                    ProductPrice: '42400'
                    OrderNumber: 857B2
                    SellerId: AG75597
                    FlightData:
                      Airline: American Airlines
                      DepartureAirport: Gatwick
                      DepartureDate: '2020-06-30'
                      DestinationAirport: JFK
                      HoursToDeparture: 5
                      JourneyType: Day
                      Route: Direct
                      RouteByCountry: UK, USA
                    FlightPassengers:
                      - Country: USA
                        DateOfBirth: '1990-12-07'
                        Id: '89456489'
                        Name: Adam Smith
                      - Country: ARG
                        DateOfBirth: '1995-05-05'
                        Id: '74566'
                        Name: John Lock
                    CustomParameters:
                      - Name: ClientSpecific1
                        Value: Traveling
                      - Name: ClientSpecific2
                        Value: wounderful
                  Card:
                    CardNumber: '5413330089604111'
                    CardHolderName: John Doe
                    Cvv2: '998'
                    ExpirationDate: '1912'
                    Customer:
                      FirstName: John
                      LastName: Doe
                      Phone: '9177563007'
                      City: New York
                      State: NY
                      Country: US
                      Email: johnd@gmail.com
                      Address1: 107 7th Av.
                      Address2: ''
                      Zip: '10007'
                      DateOfBirth: '1990-12-07'
                      DriverLicenseNumber: '12345678'
                      DriverLicenseState: TX
                      SSN4: '1210'
                  EnhancedData:
                    SaleTax: '5'
                    AdditionalTaxDetailTaxCategory: tex
                    AdditionalTaxDetailTaxType: regional
                    AdditionalTaxDetailTaxAmount: '3'
                    AdditionalTaxDetailTaxRate: '2.50'
                    PurchaseOrder: PURCHSEORDER1
                    OrderDate: 07/20/2018
                    ShippingCharges: '20'
                    DutyCharges: '17.59'
                    CustomerVATNumber: '75010101'
                    VATInvoice: '231465214'
                    SummaryCommodityCode: Aa94
                    ShipToZip: '50001'
                    ShipFromZip: '55100'
                    DestinationCountryCode: ARG
                    SupplierReferenceNumber: '123'
                    CustomerRefID: '123'
                    ChargeDescriptor: Sample Charge
                    AdditionalAmount: '2.50'
                    AdditionalAmountType: GIFT_SHOP
                    ProductName: Product 01
                    ProductCode: P1
                    Price: '5.00'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Auth Only Response:
                  value: |-
                    {
                        "guid": "6d75f588-711e-4481-92ed-1d078b507832",
                        "status": "Transaction - Approved",
                        "batchStatus": "Batch - Open",
                        "timeStamp": "2020-07-09T23:45:58.12+06:00",
                        "amount": 280.00,
                        "effectiveAmount": 280.00,
                        "orderNumber": "1598742342342432342342432432",
                        "deviceGuid": "0b7a9536-9fcd-4074-a841-d47eef77b81b",
                        "cardDataSource": "INTERNET",
                        "customerID": "xt147",
                        "batchGuid": "89133895-142f-4c70-98c7-5194d91bb500",
                        "sendReceipt": true,
                        "allowCardEmv": false,
                        "processorStatusCode": "A0000",
                        "processorResponseMessage": "Success",
                        "wasProcessed": true,
                        "authCode": "VTLMC1",
                        "refNumber": "23159362",
                        "invoiceNumber": "15987423423424323423424",
                        "customerReceipt": "Agent Booking 123\\n8320 S HARDY DRIVE\\nTEMPE AZ 85284\\n07/09/2020 04:46:01\\n\\nCREDIT - AUTH ONLY\\n\\nCARD # : **** **** **** 4111\\nCARD TYPE :MASTERCARD\\nEntry Mode : MANUAL\\n\\nTRANSACTION ID : 23159362\\nInvoice number : 15987423423424323423424\\nAUTH CODE : VTLMC1\\n--------------------------------------\\nCode         Name\\nQty                Price\\n--------------------------------------\\nP1           Product 01\\n1                  $5.00\\n--------------------------------------\\nSubtotal:                      $234.41\\n--------------------------------------\\nTaxes\\n--------------------------------------\\n[1] Sales Tax                   $05.00\\n[2] regional Tax                $03.00\\n--------------------------------------\\nTotal Taxes:                    $08.00\\n--------------------------------------\\nFees\\n--------------------------------------\\nFee:                            $37.59\\n--------------------------------------\\nTotal Fees:                     $37.59\\n--------------------------------------\\nTotal:                         $280.00\\n--------------------------------------\\n\\n\\n\\nJohn Doe\\n\\nCUSTOMER ACKNOWLEDGES RECEIPT OF\\nGOODS AND/OR SERVICES IN THE AMOUNT\\nOF THE TOTAL SHOWN HEREON AND AGREES\\nTO PERFORM THE OBLIGATIONS SET FORTH\\nBY THE CUSTOMER`S AGREEMENT WITH THE\\nISSUER\\nAPPROVED\\n\\n\\n\\n\\nCustomer Copy\\n",
                        "statementDescription": "Agent Booking 123",
                        "enhancedData": {
                            "saleTax": 5.00,
                            "purchaseOrder": "PURCHSEORDER1",
                            "additionalTaxDetailTaxCategory": "tex",
                            "additionalTaxDetailTaxType": "regional",
                            "additionalTaxDetailTaxAmount": 3.00,
                            "additionalTaxDetailTaxRate": 2.50,
                            "shippingCharges": 20.00,
                            "dutyCharges": 17.59,
                            "shipToZip": "50001",
                            "shipFromZip": "55100",
                            "destinationCountryCode": "ARG",
                            "customerVATNumber": "75010101",
                            "summaryCommodityCode": "Aa94",
                            "vatInvoice": "231465214",
                            "orderDate": "07/20/2018",
                            "supplierReferenceNumber": "123",
                            "customerRefID": "123",
                            "chargeDescriptor": "Sample Charge",
                            "productName": "Product 01",
                            "productCode": "P1",
                            "price": 5.00,
                            "additionalAmount": 2.50,
                            "additionalAmountType": "GIFT_SHOP"
                        },
                        "card": {
                            "first6": "541333",
                            "first4": "5413",
                            "last4": "4111",
                            "cardHolderName": "John Doe",
                            "cardType": "Mastercard",
                            "expirationDate": "2019-12",
                            "customer": {
                                "guid": "5dd6ed47-3e5b-4123-bc0e-81b32663e8ee",
                                "firstName": "John",
                                "lastName": "Doe",
                                "dateOfBirth": "1990-12-07T00:00:00",
                                "address1": "107 7th Av.",
                                "address2": "",
                                "zip": "10007",
                                "city": "New York",
                                "state": "NY",
                                "country": "US",
                                "phone": "9177563007",
                                "email": "johnd@gmail.com",
                                "ssN4": "1210",
                                "driverLicenseNumber": "12345678",
                                "driverLicenseState": "TX"
                            },
                            "guid": "b34bec7f-6ef0-42d8-8811-1bea8d2260fe"
                        },
                        "addressVerificationCode": "N",
                        "addressVerificationResult": "No match. Acquirer sent postal/ZIP code only, or street address only, or both postal/ZIP and street address.",
                        "cvvVerificationCode": "M",
                        "cvvVerificationResult": "CVV2 Match. Indicates that the Funds Transfer API or the issuer was able to verify the CVV2 value provided by the merchant.",
                        "riskResponse": {
                            "transactionId": "DGJK0BBRH2NH",
                            "response": "Approved",
                            "reason": "",
                            "score": "34"
                        },
                        "type": "Default"
                    }
                3DS Frictionless Response Example:
                  value: |-
                    {
                        "guid": "2d78c80e-59c3-44ae-a770-c70dfa550768",
                        "status": "Transaction - Approved",
                        "type": "3D Secure",
                        "batchStatus": "Batch - Open",
                        "timeStamp": "2022-11-29T06:47:52.53-05:00",
                        "deviceGuid": "e639a1dc-5cc4-43de-ab74-d5bea6c6b107",
                        "amount": 1.00,
                        "activated": true,
                        "tenderType": "Credit",
                        "effectiveAmount": 1.00,
                        "riskResponse": {
                            "transactionId": null,
                            "response": "Fraud Check Skipped for Finaro Request.",
                            "reason": null,
                            "score": null
                        },
                        "orderNumber": "",
                        "cardDataSource": "INTERNET",
                        "customerID": "",
                        "batchGuid": "c4513dc8-1f49-47c2-b384-6b0897c3734e",
                        "connexPayTransaction": {
                            "guid": "76d224b7-1abc-4fdb-9d0a-9a4b44cebbca",
                            "expectedPayments": 0,
                            "incomingTransCode": "7C9A573638053372540845316"
                        },
                        "associationId": "",
                        "processorStatusCode": "0",
                        "processorResponseMessage": "Transaction has been executed successfully.",
                        "wasProcessed": true,
                        "authCode": "697949",
                        "refNumber": "XZZ01c19f5570e6bDAFUP3DOWVUR5FSB",
                        "customerReceipt": "Not Available",
                        "statementDescription": "",
                        "generatedBy": "jharmonfinaro",
                        "Card": {
                            "CardNumber": "4018810000100036",
                            "CardHolderName": "Jason Harmon",
                            "Cvv2": "999",
                            "ExpirationDate": "2312",
                            "Customer": {
                                "FirstName": "Jason",
                                "LastName": "Harmon",
                                "Email": "",
                                "Address1": "",
                                "Address2": "",
                                "State": "",
                                "City": "",
                                "Country": "",
                                "Zip": "",
                                "Phone": "",
                                "SSN4": ""
                            }
                        },
                        "addressVerificationResult": "Unavailable",
                        "cvvVerificationCode": "M",
                        "cvvVerificationResult": "CVV2 Match. Indicates that the Funds Transfer API or the issuer was able to verify the CVV2 value provided by the merchant.",
                        "cavvResponseCode": "2",
                        "walletProvider": 0,
                        "isFromIssueLite": false,
                        "labelIds": [
                            987654638
                        ],
                        "remainingAmount": 1.00
              schema:
                $ref: >-
                  #/components/schemas/AuthenticationAcquireClientAuthorizationResponse
        '202':
          description: '202'
          content:
            application/json:
              examples:
                3DS Device Fingerprint Response Example:
                  value: |-
                    {
                        "guid": "92bcd4df-5576-48be-b4a6-8c142669a8b6",
                        "status": "3DS - Pending Fingerprint",
                        "timeStamp": "2022-11-28T19:49:13.7902906Z",
                        "deviceGuid": "e639a1dc-5cc4-43de-ab74-d5bea6c6b107",
                        "amount": 1.0,
                        "redirectUrl": "https://x3d-sim.credorax.net/acs/3ds-method",
                        "redirectUrlRequestPayload": "threeDSMethodData=eyJ0aHJlZURTTWV0aG9kTm90aWZpY2F0aW9uVVJMIjoiaHR0cHM6Ly9zYWxlc2FwaS5jb25uZXhwYXlkZXYuY29tL2FwaS92MS8zZHMvY2FsbGJhY2siLCJ0aHJlZURTU2VydmVyVHJhbnNJRCI6ImI5M2MzODkyLTFiMjItNDFlOS1iZmE3LTdkNTMzNzYzMTExMiJ9",
                        "card": {
                            "first6": "401881",
                            "first4": "4018",
                            "last4": "0010",
                            "cardHolderName": "Jason Harmon",
                            "cardType": "Visa",
                            "expirationDate": "2023-12",
                            "guid": "704f6c0b-1da4-4687-9a43-fdd4c46bb69b"
                        }
                    }
                3DS Cardholder Challenge Response Example:
                  value: |-
                    {
                        "guid": "92bcd4df-5576-48be-b4a6-8c142669a8b6",
                        "status": "3DS - Pending User Challenge",
                        "timeStamp": "2022-11-28T19:49:13.7902906Z",
                        "deviceGuid": "e639a1dc-5cc4-43de-ab74-d5bea6c6b107",
                        "amount": 1.0,
                        "redirectUrl": "https://x3d-sim.credorax.net/acs/3ds-method",
                        "card": {
                            "first6": "401881",
                            "first4": "4018",
                            "last4": "0010",
                            "cardHolderName": "Jason Harmon",
                            "cardType": "Visa",
                            "expirationDate": "2023-12",
                            "guid": "704f6c0b-1da4-4687-9a43-fdd4c46bb69b"
                        }
                    }
              schema:
                $ref: >-
                  #/components/schemas/AuthenticationAcquireClientAuthorization202Response
      deprecated: false
  /api/v1/Captures:
    post:
      tags:
        - Transaction
      summary: Capture
      operationId: Transaction_captureAuthorization
      security:
        - sec0: []
      description: Call this endpoint to Capture an Authorization so that it settles
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionCaptureAuthorizationRequest'
            examples:
              Create Capture Request Example:
                value:
                  DeviceGuid: '{{Device}}'
                  AuthOnlyGuid: '{{AuthOnlyGuid}}'
                  OrderNumber: A1234
                  CustomerID: R2D2-C3PO
                  SequenceNumber: capture5
                  ConnexpayTransaction:
                    ExpectedPayments: 5
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Create Capture Response Example:
                  value: |-
                    {
                        "guid": "5669a85c-d1a4-43ac-b799-8bc7f4ffb509",
                        "sale": {
                            "guid": "52785a8e-9616-4e1c-b01d-365a99b256b0",
                            "status": "Transaction - Approved",
                            "type": "Default",
                            "batchStatus": "Batch - Open",
                            "timeStamp": "2020-07-12T21:58:00.15+06:00",
                            "deviceGuid": "0b7a9536-9fcd-4074-a841-d47eef77b81b",
                            "amount": 10.00,
                            "activated": true,
                            "tenderType": "Credit",
                            "effectiveAmount": 10.00,
                            "riskResponse": {
                                "transactionId": "DGG80N33TZTR",
                                "response": "Approved",
                                "reason": "",
                                "score": "34"
                            },
                            "orderNumber": "159874",
                            "cardDataSource": "INTERNET",
                            "customerID": "xt147",
                            "batchGuid": "5a80016c-d96f-4339-8e84-47aaf7aff2fd",
                            "connexPayTransaction": {
                                "guid": "9eb92a4c-2cd2-4ffa-9959-498aae8a7279",
                                "expectedPayments": 5,
                                "incomingTransCode": "B549C92637301662802350529"
                            },
                            "processorStatusCode": "A0000",
                            "processorResponseMessage": "Success",
                            "wasProcessed": true,
                            "authCode": "VTLMC1",
                            "refNumber": "23181066",
                            "customerReceipt": "Agent Booking 123\\n8320 S HARDY DRIVE\\nTEMPE AZ 85284\\n07/12/2020 02:57:57\\n\\nCREDIT - SALE\\n\\nCARD # : **** **** **** 4111\\nCARD TYPE :MASTERCARD\\nEntry Mode : MANUAL\\n\\nTRANSACTION ID : 23181066\\nInvoice number : 159874\\nAUTH CODE : VTLMC1\\nSubtotal:                       $10.00\\n--------------------------------------\\nTotal:                          $10.00\\n--------------------------------------\\n\\n\\n\\nJohn Doe\\n\\nCUSTOMER ACKNOWLEDGES RECEIPT OF\\nGOODS AND/OR SERVICES IN THE AMOUNT\\nOF THE TOTAL SHOWN HEREON AND AGREES\\nTO PERFORM THE OBLIGATIONS SET FORTH\\nBY THE CUSTOMER'S AGREEMENT WITH THE\\nISSUER\\nAPPROVED\\n\\n\\n\\n\\nCustomer Copy\\n",
                            "statementDescription": "Agent Booking 123",
                            "generatedBy": "rrmerchant",
                            "card": {
                                "first6": "541333",
                                "first4": "5413",
                                "last4": "4111",
                                "cardHolderName": "John Doe",
                                "cardType": "Mastercard",
                                "expirationDate": "2019-12",
                                "customer": {
                                    "guid": "20fbe746-21c5-4325-b307-c46765061efe",
                                    "firstName": "John",
                                    "lastName": "Doe",
                                    "dateOfBirth": "1990-12-07T00:00:00",
                                    "address1": "107 7th Av.",
                                    "address2": "",
                                    "zip": "10007",
                                    "city": "New York",
                                    "state": "NY",
                                    "country": "US",
                                    "phone": "9177563007",
                                    "email": "johnd@gmail.com",
                                    "ssN4": "1210",
                                    "driverLicenseNumber": "12345678",
                                    "driverLicenseState": "TX"
                                },
                                "guid": "fb0377b7-d6d2-4e61-b30a-f590f39b2ea8"
                            },
                            "addressVerificationCode": "N",
                            "addressVerificationResult": "No match. Acquirer sent postal/ZIP code only, or street address only, or both postal/ZIP and street address.",
                            "cvvVerificationCode": "M",
                            "cvvVerificationResult": "CVV2 Match. Indicates that the Funds Transfer API or the issuer was able to verify the CVV2 value provided by the merchant."
                        }
                    }
              schema:
                $ref: '#/components/schemas/TransactionCaptureAuthorizationResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: >-
                  #/components/schemas/TransactionCaptureAuthorization400Response
      deprecated: false
  /api/v1/verify:
    post:
      tags:
        - Verification
      summary: Verify
      operationId: Verification_cardBankAccount
      security:
        - sec0: []
      description: Call to Verify Card or Bank Account
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerificationCardBankAccountRequest'
            examples:
              Verify Card Request Example:
                value:
                  DeviceGuid: '{{Device}}'
                  Card:
                    CardNumber: '4111111111111111'
                    CardHolderName: John Verify
                    Cvv2: '999'
                    ExpirationDate: '2212'
                    Customer:
                      FirstName: John
                      LastName: Verify
                      Phone: '9177563051'
                      City: New York
                      State: NY
                      Country: US
                      Email: JohnVerify@test.com
                      Address1: 111 11th Av.
                      Address2: ''
                      Zip: '10011'
                      DateOfBirth: '1991-11-11'
                      DriverLicenseNumber: '12345678'
                      DriverLicenseState: TX
                      SSN4: '1210'
              Verify Bank Account Request Example:
                value:
                  DeviceGuid: '{{Device}}'
                  BankAccount:
                    AccountType: Checking
                    RoutingNumber: '042000314'
                    AccountNumber: '222333'
                    NameOnAccount: PR
                    Customer:
                      FirstName: Ping
                      LastName: VerifyTest
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Verify Card Response Example:
                  value: |-
                    {
                        "guid": "9a72c29f-cc89-495c-a2b7-e25faeb850ac",
                        "status": "Transaction - Approved",
                        "timeStamp": "2022-10-26T09:56:43.07-05:00",
                        "deviceGuid": "0b7a9536-9fcd-4074-a841-d47eef77b81b",
                        "card": {
                            "first6": "411111",
                            "first4": "4111",
                            "last4": "1111",
                            "cardHolderName": "John Verify",
                            "cardType": "Visa",
                            "expirationDate": "2022-12",
                            "guid": "0ca56348-fa53-4ef0-87b0-3b3a096a629b",
                            "customer": {
                                "guid": "c5bf2c6f-3da9-4199-ba84-44208d61efad",
                                "firstName": "John",
                                "lastName": "Verify",
                                "dateOfBirth": "1991-11-11T00:00:00",
                                "address1": "111 11th Av.",
                                "address2": "",
                                "zip": "10011",
                                "city": "New York",
                                "country": "US",
                                "phone": "9177563051",
                                "email": "JohnVerify@test.com",
                                "ssN4": "1210",
                                "driverLicenseNumber": "12345678"
                            }
                        },
                        "addressVerificationCode": "N",
                        "cvvVerificationCode": "M",
                        "processorStatusCode": "A0000",
                        "wasProcessed": true
                    }
                Verify Bank Account Response Example:
                  value: |-
                    {
                        "guid": "08d690d1-c7db-40db-9057-08877fa2e117",
                        "status": "Transaction - Approved",
                        "timeStamp": "2022-10-26T09:48:59.14-05:00",
                        "deviceGuid": "0b7a9536-9fcd-4074-a841-d47eef77b81b",
                        "bankAccount": {
                            "guid": "df65d7ef-0f21-4df6-bca0-c56cc0416229",
                            "accountType": "Checking",
                            "accountNumberLastFour": "2333",
                            "nameOnAccount": "PR",
                            "customer": {
                                "guid": "50fe7902-d3e4-4da2-a015-e847ffadd297",
                                "firstName": "Ping",
                                "lastName": "VerifyTest"
                            },
                            "accountAndRoutingNumberToken": "c64giUcZ/gscrJI+r4HSHxs5pUZgk51WIHdIUhcN8WGlPncRcfcWFegqw6n/ZOLViIObEye4kAub8cfP3CCNCv4JZw28vKirJj1SI4sa6N89/RRPSCql4oIS8kxZ9dBdfBbld2znQhrGR80ToS9GiTMcxyFKIt3anSWqZue07CYweaAK/TpE1AJdbCL/CFNyEQQLxy3KgaQoEEa4/MFW7qENJmjqc3uqM3D5BvqwhSxQhyL8ozaRxfSd2f5GB6ipAJgxH5snpuLGi0QAFjdJwHWeh4G21EAUhjqdVsiYjpo/5zWmoZ3mq8Y5j3gXZgutxyaqEsb1QvD/McDvs+0GXA=="
                        },
                        "processorStatusCode": "A1",
                        "wasProcessed": true
                    }
              schema:
                $ref: '#/components/schemas/VerificationCardBankAccountResponse'
      deprecated: false
  /api/v1/3ds:
    post:
      tags:
        - Authentication
      summary: 3DS Authentication
      operationId: Authentication_obtain3dSecureAuthentication
      security:
        - sec0: []
      description: >-
        This endpoint can be used for obtaining 3D Secure Authentication
        separate from the Create Sale or Auth-Only calls.  This is recommended
        for our US and CA clients.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/AuthenticationObtain3DSecureAuthenticationRequest
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                3DS Frictionless Response Example:
                  value: |-
                    {
                        "guid": "74fb35e7-3b41-427a-969b-1fc42a35fb11",
                        "status": "3DS - Approved",
                        "timeStamp": "2023-08-16T16:40:29.6401705Z",
                        "deviceGuid": "e639a1dc-5cc4-43de-ab74-d5bea6c6b107",
                        "amount": 0.0,
                        "threeDSStatus": "Y",
                        "SecureData": "06:3030303030303030303030313130363639393458:none",
                        "Cavv": "MDAwMDAwMDAwMDAxMTA2Njk5NFg=",
                        "Version": "2.1.0",
                        "DirectoryServerTransactionID": "5066e271-4752-4445-a025-235c7789c151",
                        "AcsTransactionId": "09a291d3-92b5-4354-b31a-5446409444f3",
                        "ECI": "06",
                        "card": {      
                            "first6": "401881",
                            "first4": "4018",
                            "last4": "0036",
                            "cardHolderName": "Jason Harmon",
                            "cardType": "Visa",
                            "expirationDate": "2023-12",
                            "guid": "c3398555-e4c0-43da-b3ca-6abc475b79b9"
                        },
                        "exemptThreeDSRequest": false,
                        "exemptThreeDSPayment": false
                    }
              schema:
                $ref: >-
                  #/components/schemas/AuthenticationObtain3DSecureAuthenticationResponse
        '202':
          description: '202'
          content:
            application/json:
              examples:
                3DS Device Fingerprint Response Example:
                  value: |-
                    {
                        "guid": "3a0d533f-588b-4ce4-920f-7bc4641ea8f7",
                        "status": "3DS - Pending Fingerprint",
                        "timeStamp": "2023-08-16T16:44:40.9866697Z",
                        "deviceGuid": "e639a1dc-5cc4-43de-ab74-d5bea6c6b107",
                        "amount": 1.34,
                        "version": "2.1.0",
                        "redirectUrl": "https://x3d-sim.credorax.net/acs/3ds-method",
                        "redirectUrlRequestPayload": "threeDSMethodData=eyJ0aHJlZURTTWV0aG9kTm90aWZpY2F0aW9uVVJMIjoiaHR0cHM6Ly9zYWxlc2FwaS5jb25uZXhwYXlkZXYuY29tL2FwaS92MS8zZHMvY2FsbGJhY2siLCJ0aHJlZURTU2VydmVyVHJhbnNJRCI6ImU2YmNjM2RiLTAwZjQtNDdiZi05OTgwLTljZjE2MTUxOGM5NyJ9",
                        "card": {
                            "first6": "401881",
                            "first4": "4018",
                            "last4": "0010",
                            "cardHolderName": "Jason Harmon",
                            "cardType": "Visa",
                            "expirationDate": "2023-12",
                            "guid": "c6b816a3-f107-40d5-9dc3-bcefc576c8bc"
                        },
                        "exemptThreeDSRequest": false,
                        "exemptThreeDSPayment": false
                    }
                3DS Cardholder Challenge Response Example:
                  value: |-
                    {
                        "guid": "a41dd8ab-8629-42c0-8a6f-8b9162a93ccc",
                        "status": "3DS - Pending User Challenge",
                        "timeStamp": "2023-08-16T16:45:23.9986814Z",
                        "deviceGuid": "e639a1dc-5cc4-43de-ab74-d5bea6c6b107",
                        "amount": 1.34,
                        "threeDSStatus": "C",
                        "directoryServerTransactionID": "72f4afb2-c057-4abc-b054-9fae4b4ceb49",
                        "acsTransactionId": "7c6670d1-d888-4af5-b5f4-db286ba6c20a",
                        "version": "2.1.0",
                        "redirectUrl": "https://x3d-any-int.credorax.net/challenge/request/CONN2978/2534bb4d055f10423709276026df821ff3c8",
                        "card": {
                            "first6": "401881",
                            "first4": "4018",
                            "last4": "0015",
                            "cardHolderName": "Jason Harmon",
                            "cardType": "Visa",
                            "expirationDate": "2023-12",
                            "guid": "2c032f47-f7ab-4849-9715-0b4bacf252a3"
                        },
                        "exemptThreeDSRequest": false,
                        "exemptThreeDSPayment": false
                    }
              schema:
                $ref: >-
                  #/components/schemas/AuthenticationObtain3DSecureAuthentication202Response
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: ''
              schema:
                $ref: >-
                  #/components/schemas/AuthenticationObtain3DSecureAuthentication400Response
      deprecated: false
  /api/v1/3ds/{GUID}:
    get:
      tags:
        - StatusGroup
      summary: Get 3DS Status Group
      operationId: StatusGroup_3dsAuthenticationStatus
      security:
        - sec0: []
      description: >-
        This endpoint returns the 3D Secure status of an authentication when a
        device fingerprint and/or cardholder challenge are required for 3D
        Secure Authentication.
      parameters:
        - description: >-
            Replace the original guid value with the guid that was returned with
            the status response indicating a device fingerprint or cardholder
            challenge is required to complete 3DS authentication..
          name: guid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Get 3DS Status Response Example:
                  value: |-
                    {
                        "guid": "34f3ae17-89c4-4bc8-b085-f46eef5af3d6",
                        "status": "3DS - Approved",
                        "timeStamp": "2022-12-07T14:50:18.33",
                        "deviceGuid": "e639a1dc-5cc4-43de-ab74-d5bea6c6b107",
                        "amount": 11.35,
                        "secureData": "05:0099010281111100000000788400707000000000:none",
                        "eci": "05",
                        "cavv": "AJkBAoEREQAAAAB4hABwcAAAAAA=",
                        "directoryServerTransactionID": "a52b6caa-d58e-4d72-8007-bf026acebecc",
                        "acsTransactionId": "7c6670d1-d888-4af5-b5f4-db286ba6c20a",  
                        "version": "2.1.0",
                        "card": {
                            "first6": "401881",
                            "first4": "4018",
                            "last4": "0010",
                            "cardType": "Visa",
                            "expirationDate": "2025-12",
                            "guid": "da25f77e-758a-4729-ade6-37fbbcb4675c"
                        },
                        "processorResponseCode": "0",
                        "processorMessage": "Transaction has been executed successfully."
                    }
              schema:
                $ref: >-
                  #/components/schemas/StatusGroup3DsAuthenticationStatusResponse
      deprecated: false
  /api/v1/sales/UpdateFutureSale:
    post:
      tags:
        - Sale
      summary: Update Delayed Sale
      operationId: Sale_updateDelayedActivation
      security:
        - sec0: []
      description: Updates the sale amount or activation date on a delayed activation sale.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaleUpdateDelayedActivationRequest'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Update Delayed Sale Response Example:
                  value: |-
                    {
                           "guid":"965a67b0-cd0e-4020-973b-5e0d1b4bd6e2",
                           "status":"Transaction - Approved",
                           "type":"Default",
                           "batchStatus":"Batch - Open",
                           "timeStamp":"2019-11-20T05:37:13.22-05:00",
                           "deviceGuid":"f758a448-7780-4b50-93a1-28329e37f94f",
                           "amount":280.0,
                           "activationDate":"2020-10-12T00:00:00",
                           "activated":false,       
                           "tenderType":"Credit",
                           "effectiveAmount":280.0,
                           "orderNumber":"159874",
                           "cardDataSource":"INTERNET",
                           "customerID":"xt147",
                           "batchGuid":"c71d0ee6-b595-4792-b1ee-1156d28be132",
                           "riskProcessingOnly":false,
                           "processorStatusCode":"A0000",
                           "processorResponseMessage":"Success",
                           "wasProcessed":true,
                           "generatedBy":"tcformal1",
                           "card":{
                              "first4":"4716",
                              "last4":"0473",
                              "cardNumber":"CARD NOT TOKENIZED",
                              "cardHolderName":"John Doe",
                              "cardType":"Visa",
                              "expirationDate":"2019-12",
                           },
                           "sequenceNumber":"849741",
                           "addressVerificationResult":"No match. Acquirer sent postal/ZIP code only, or street address only, or both postal/ZIP and street address.",
                           "cvvVerificationCode":"M",
                           "cvvVerificationResult":"CVV2 Match. Indicates that the Funds Transfer API or the issuer was able to verify the CVV2 value provided by the merchant."
                           "incomingTransactionCode":"09ASECYE48S9KHBQL00028000"
                        }
              schema:
                $ref: '#/components/schemas/SaleUpdateDelayedActivationResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/SaleUpdateDelayedActivation400Response'
      deprecated: false
  /api/v1/sales/Activate/{SaleGuid}:
    put:
      tags:
        - Sale
      summary: Activate Delayed Sale
      operationId: Sale_activateDelayed
      security:
        - sec0: []
      description: >-
        Activate a delayed activation sale independent of the activation date
        for which the sale was created.


        A client can "Activate" a delayed activation sale this way at any time
        before ConnexPay will automatically activate it during the early hours
        of the supplied future date.
      parameters:
        - description: >-
            The sale guid returned upon initial creation of the delayed
            activation sale.
          name: SaleGuid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/SaleActivateDelayedResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/SaleActivateDelayed400Response'
      deprecated: false
  /api/v1/Search/Sales/{exportable}/{pageNumber}/{pageSize}:
    post:
      tags:
        - Sale
      summary: Search sales
      operationId: Sale_searchSales
      security:
        - sec0: []
      description: This endpoint searches sales.
      parameters:
        - description: True or False. It means if you want results exportable to CSV.
          name: Exportable
          in: path
          schema:
            type: string
            default: Mandatory
          required: true
        - description: >-
            Int. Number of page of the results. Default is 1 (Page size default
            is 500).
          name: PageNumber
          in: path
          schema:
            type: integer
            format: int32
            default: null
          required: true
        - description: Int. Size of each page of the results. Default is 500.
          name: PageSize
          in: path
          schema:
            type: string
            default: Optional
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaleSearchSalesRequest'
            examples:
              Example Request:
                value:
                  merchantGuid: 19344275-985e-4dff-81ee-cb84b8ad356c
                  status: Transaction - Approved
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |
                    {
                        "pageCurrent": 1,
                        "pageCurrentResults": 1,
                        "pageTotal": 1,
                        "pageSize": 1,
                        "totalResults": 1,
                        "cardSummary": null,
                        "searchResultDTO": [
                            {
                                "status": "Transaction - Approved",
                                "amount": 1,
                                "card": {
                                    "cardHolderName": null,
                                    "cardType": "Visa",
                                    "last4": "0473"
                                },
                                "orderNumber": null,
                                "orderDate": null,
                                "timeStamp": "2018-11-23T14:57:43.78-03:00",
                                "customerID": null,
                                "processorResponseMessage": null,
                                "effectiveAmount": 0,
                                "batchStatus": "Batch - Open",
                                "relatedVoid": null,
                                "relatedReturns": null,
                                "guid": "d38a9133-6643-4a0a-9675-3cd820a8b5ff",
                                "deviceGuid": "8ec1c40b-0c00-4a57-a9c7-7800bd52c308",
                                "captureGuid": null,
                                "customData": null,
                                "generatedByCapture": false,
                                "partiallyApprovedAmount": null,
                                "type": "Credit",
                                "surcharge": null,
                                "surchargeType": null,
                                "serviceFee": null,
                                "tipAmount": null,
                                "cardDataSource": "INTERNET",
                                "allowCardEmv": true,
                                "incomingTransactionCode": "09ZZZTAS37411231800000100",
                                "activationDate": "2021-10-10T00:00:00"
                            }
                        ]
                    }
              schema:
                $ref: '#/components/schemas/SaleSearchSalesResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/SaleSearchSales400Response'
      deprecated: false
  /api/v1/Search/Voids/{exportable}/{pageNumber}/{pageSize}:
    post:
      tags:
        - Void
      summary: Search voids
      operationId: Void_searchVoids
      security:
        - sec0: []
      description: This endpoint searches sales voids.
      parameters:
        - description: True or False. It means if you want results exportable to CSV.
          name: Exportable
          in: path
          schema:
            type: string
            default: Mandatory
          required: true
        - description: >-
            Int. Number of page of the results. Default is 1 (Page size default
            is 500).
          name: PageNumber
          in: path
          schema:
            type: integer
            format: int32
            default: null
          required: true
        - description: Int. Size of each page of the results. Default is 500.
          name: PageSize
          in: path
          schema:
            type: string
            default: Optional
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoidSearchVoidsRequest'
            examples:
              Example Request:
                value:
                  merchantGuid: 19344275-985e-4dff-81ee-cb84b8ad356c
                  status: Transaction - Approved
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "pageCurrent": 1,
                        "pageCurrentResults": 1,
                        "pageTotal": 1,
                        "pageSize": 1,
                        "totalResults": 1,
                        "cardSummary": null,
                        "searchResultDTO": [
                            {
                                "status": "Transaction - Approved",
                                "sale": {
                                    "amount": 10,
                                    "card": {
                                        "cardHolderName": null,
                                        "cardType": "Visa",
                                        "last4": "0445"
                                    }
                                },
                                "authOnly": null,
                                "debitSale": null,
                                "debitReturn": null,
                                "ebtFoodStampPurchase": null,
                                "ebtElectronicVoucher": null,
                                "ebtReturn": null,
                                "ebtCashBenefitPurchase": null,
                                "return": null,
                                "voidReason": null,
                                "timeStamp": "2018-11-22T16:57:41.74",
                                "processorStatusCode": "A0000",
                                "batchStatus": "Batch - Closed",
                                "guid": "211c7e9e-f0ce-45e1-be79-ff0333c81478",
                                "allowCardEmv": true
                            }
                        ]
                    }
              schema:
                $ref: '#/components/schemas/VoidSearchVoidsResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/VoidSearchVoids400Response'
      deprecated: false
  /api/v1/Search/Returns/{exportable}/{pageNumber}/{pageSize}:
    post:
      tags:
        - Return
      summary: Search returns
      operationId: Return_searchSaleReturns
      security:
        - sec0: []
      description: This endpoint searches sale returns.
      parameters:
        - description: True or False. It means if you want results exportable to CSV.
          name: Exportable
          in: path
          schema:
            type: string
            default: Mandatory
          required: true
        - description: >-
            Int. Number of page of the results. Default is 1 (Page size default
            is 500).
          name: PageNumber
          in: path
          schema:
            type: integer
            format: int32
            default: null
          required: true
        - description: Int. Size of each page of the results. Default is 500.
          name: PageSize
          in: path
          schema:
            type: string
            default: Optional
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReturnSearchSaleReturnsRequest'
            examples:
              Example Request:
                value:
                  merchantGuid: 19344275-985e-4dff-81ee-cb84b8ad356c
                  status: Transaction - Approved
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |
                    {
                        "pageCurrent": 1,
                        "pageCurrentResults": 1,
                        "pageTotal": 1,
                        "pageSize": 1,
                        "totalResults": 1,
                        "cardSummary": null,
                        "searchResultDTO": [
                            {
                                "status": "Transaction - Approved",
                                "amount": 150,
                                "card": {
                                    "cardHolderName": null,
                                    "cardType": "Visa",
                                    "last4": "0267"
                                },
                                "timeStamp": "2018-11-14T09:26:58.42",
                                "processorStatusCode": "A0000",
                                "batchStatus": "Batch - Closed",
                                "guid": "451dd720-18e6-48b2-a8fa-b9ae4579c3fc",
                                "relatedVoid": null,
                                "deviceGuid": "8ec1c40b-0c00-4a57-a9c7-7800bd52c308",
                                "type": "CreditReturn",
                                "cardDataSource": "",
                                "allowCardEmv": true
                            }
                        ]
                    }
              schema:
                $ref: '#/components/schemas/ReturnSearchSaleReturnsResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/ReturnSearchSaleReturns400Response'
      deprecated: false
  /api/v1/Search/Verify/{exportable}/{pageNumber}/{pageSize}:
    post:
      tags:
        - Validation
      summary: Search verify
      operationId: Validation_searchVerifyOperation
      security:
        - sec0: []
      description: This endpoint search a verify.
      parameters:
        - description: True or False. It means if you want results exportable to CSV.
          name: Exportable
          in: path
          schema:
            type: string
            default: Mandatory
          required: true
        - description: >-
            Int. Number of page of the results. Default is 1 (Page size default
            is 500).
          name: PageNumber
          in: path
          schema:
            type: integer
            format: int32
            default: null
          required: true
        - description: Int. Size of each page of the results. Default is 500.
          name: PageSize
          in: path
          schema:
            type: string
            default: Optional
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidationSearchVerifyOperationRequest'
            examples:
              Example Request:
                value:
                  merchantGuid: 19344275-985e-4dff-81ee-cb84b8ad356c
                  status: Transaction - Approved
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |
                    {
                        "pageCurrent": 1,
                        "pageCurrentResults": 1,
                        "pageTotal": 1,
                        "pageSize": 1,
                        "totalResults": 1,
                        "cardSummary": null,
                        "searchResultDTO": [
                            {
                                "status": "Transaction - Approved",
                                "card": {
                                    "cardHolderName": null,
                                    "cardType": "Mastercard",
                                    "last4": "0759"
                                },
                                "timeStamp": "2018-11-09T15:34:49.91",
                                "processorStatusCode": "A0000"
                            }
                        ]
                    }
              schema:
                $ref: '#/components/schemas/ValidationSearchVerifyOperationResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: >-
                  #/components/schemas/ValidationSearchVerifyOperation400Response
      deprecated: false
  /api/v1/HostedPaymentPageRequests:
    post:
      tags:
        - Token
      summary: HPP Token Request
      operationId: Token_requestHppToken
      security:
        - sec0: []
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRequestHppTokenRequest'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |
                    {
                        "merchantName": "ACME",
                        "description": "Hundred Dollar Trip",
                        "amount": 100.00,
                        "resultRedirectUrl": "https://sandboxsales.connexpay.com/#!/HostedPaymentResult",
                        "tempToken": "8263d54a-b61b-4601-a4a8-f7231565b87e",
                        "expiration": "2020-11-20T14:35:59.14",
                        "logoUrl": "https://connexpay.com/wp-content/uploads/2018/10/newlogo.png"
                    }
              schema:
                $ref: '#/components/schemas/TokenRequestHppTokenResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/TokenRequestHppToken400Response'
      deprecated: false
  /api/v1/MerchantSelfServiceFunding:
    post:
      tags:
        - Funding
      summary: Client Self-Service Funding
      operationId: Funding_merchantCashBalance
      security:
        - sec0: []
      description: >-
        Use this endpoint to fund or withdraw your merchant cash balance with
        your merchant bank account.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FundingMerchantCashBalanceRequest'
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "merchantGuid": "f758a448-7780-4b50-93a1-28329e37f94f",
                        "requestIp": "127.0.0.1",
                        "amount": 12.2,
                        "isFundCashBalance": false,
                        "bankAccount": {
                            "guid": "965a67b0-cd0e-4020-973b-5e0d1b4bd6e2",
                            "accountType": "Saving",
                            "accountNumberLastFour": "2222",
                            "nameOnAccount": "Merchant DBA Name",
                            "customer": {
                                "guid": "b364a8c9-20e5-462b-bb0b-f504302e3175",
                                "businessName": "Merchant DBA Name"
                            }
                        }
                    }
              schema:
                $ref: '#/components/schemas/FundingMerchantCashBalanceResponse'
        '422':
          description: '422'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {    
                        "message": "Something went wrong on creating merchant self service funding request.",
                        "errorCode": 207000,
                        "errorId": "637832099954665799"
                    }
              schema:
                $ref: '#/components/schemas/FundingMerchantCashBalance422Response'
        '500':
          description: '500'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {    
                        "message": "An error has occurred.",
                        "exceptionMessage": "Object reference not set to an instance of an object.",
                        "exceptionType": "System.NullReferenceException",
                        "stackTrace": "   at SPG.WebApi.Controllers.MerchantSelfServiceFundingController.<>c__DisplayClass3_0.<<Create>b__0>d.MoveNext() in C:\\src\\sales\\sales\\Code\\SPG.WebApi\\Controllers\\Merchant\\MerchantSelfServiceFundingController.cs:line 48\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at SPG.WebApi.Controllers.ConnexPayApiController.<SimpleMethodWrapper>d__0.MoveNext() in C:\\src\\sales\\sales\\Code\\SPG.WebApi\\Controllers\\ConnexPayApiController.cs:line 23"
                    }
              schema:
                $ref: '#/components/schemas/FundingMerchantCashBalance500Response'
      deprecated: false
  /api/v1/MerchantFlexFunding/Funds/Transfer:
    post:
      tags:
        - Funding
      summary: Client Funds Transfer
      operationId: Funding_transferMerchantCashBalance
      security:
        - sec0: []
      description: >-
        Use this endpoint to transfer funds between your merchant cash balances
        within the same Corporate entity.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FundingTransferMerchantCashBalanceRequest'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "TransferredFrom": "10DAD551-5FB8-456B-BC69-F6D903C93D40", 
                        "TransferredTo": "EBFF36A1-E430-4998-A8C1-18840D6C8D90", 
                        "Amount": 100
                    }
              schema:
                $ref: >-
                  #/components/schemas/FundingTransferMerchantCashBalanceResponse
        '422':
          description: '422'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: >-
                  #/components/schemas/FundingTransferMerchantCashBalance422Response
        '500':
          description: '500'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: >-
                  #/components/schemas/FundingTransferMerchantCashBalance500Response
      deprecated: false
  /api/v1/IssueCard:
    post:
      tags:
        - CardIssuance
      summary: Issue Card
      operationId: CardIssuance_createVirtualCard
      security:
        - sec0: []
      description: >-
        Use this endpoint to issue virtual cards associated with a credit or ACH
        sale. Do not use this endpoint if you fund your virtual cards from cash
        and therefor don't have an associated sale. If you aren't sure which
        Issuance API to use, please contact your client support representative.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardIssuanceCreateVirtualCardRequest'
            examples:
              Issue Card Request Example:
                value:
                  MerchantGuid: 2b586234-7f14-432e-b0f4-a2935f783f38
                  Payee: Delta
                  FirstName: Adam
                  LastName: Smith
                  Phone: '7411237489'
                  Address1: 345 Main Road
                  Address2: ''
                  City: Miami Beach
                  State: MI
                  Zipcode: '33109'
                  Country: MX
                  UsageLimit: 10
                  AmountLimit: 180.55
                  ExpirationDate: '2024-12-30'
                  TerminateDate: '2023-12-30'
                  PurchaseType: '01'
                  SequenceNumber: Sample-seq-1
                  IncomingTransactionCode: 035U9MGQ5KF3XQAZQ00050000
                  SupplierID: AA
                  NonDomesticSupplier: true
                  Transmission:
                    TransmissionMethods:
                      - Email
                      - Fax
                    EmailRecipient: emailTo@gmail.com
                    MerchantPhoneNumber: '7411237489'
                    EmailFrom: emailFrom@gmail.com
                    RecipientName: Smith
                    Subject: Card Information
                    Message: here is your card information...
                    DaysToExpire: 1
                    FaxRecipient: '+55555555555'
                    FaxFrom: Merchant Alias
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Issue Card Response Example:
                  value: |-
                    {
                       "cardHolder":{
                          "cardHolderGuid":"a2b25172-c863-4325-b3b9-7e33cff2f8d1",
                          "firstName":"Adam",
                          "lastName":"Smith",
                          "phone":"7411237489",
                          "address1":"345 Main Road",
                          "address2":"",
                          "city":"Miami Beach",
                          "state":"MI",
                          "zipcode":"33109",
                          "country":"MX"
                       },
                       "card":{
                          "cardGuid":"ae17f687-8ba7-4502-b627-24fdf5e6f218",
                          "accountNumber":"1111118971563394",
                          "securityCode":"617",
                          "amountLimit":180.55,
                          "usageLimit":10,
                          "expirationDate":"2024-12-30T18:59:59",
                          "expiration":"1219",
                          "terminateDate": "2024-12-30T23:59:59",
                          "currencyCode":"USD",
                          "firstSix":"111111",
                          "lastFour":"3394",
                          "nameLine1":"Adam",
                          "nameLine2":"Smith",
                          "status":"Card - Active",
                          "sequenceNumber": "Sample-seq-1",
                          "labelIds": [
                                889,
                                992
                            ],  
                       },
                       "cardBrand":"MasterCard",
                       "cardClass":"Commercial",
                       "saleGuid": "d49e4881-34e5-461f-9d43-0efb0d94039d"
                    }
                Issued Card (ReturnCardData = False) Response Example:
                  value: |-
                    {
                       "cardHolder":{
                          "cardHolderGuid":"a2b25172-c863-4325-b3b9-7e33cff2f8d1",
                          "firstName":"Adam",
                          "lastName":"Smith",
                          "phone":"7411237489",
                          "address1":"345 Main Road",
                          "address2":"",
                          "city":"Miami Beach",
                          "state":"MI",
                          "zipcode":"33109",
                          "country":"MX"
                       },
                       "card":{
                          "cardGuid":"ae17f687-8ba7-4502-b627-24fdf5e6f218",
                          "amountLimit":180.55,
                          "usageLimit":10,
                          "expirationDate":"2024-12-30T18:59:59",
                          "expiration":"1219",
                          "terminateDate": "2024-12-30T23:59:59",
                          "currencyCode":"USD",
                          "firstSix":"111111",
                          "lastFour":"3394",
                          "nameLine1":"Adam",
                          "nameLine2":"Smith",
                          "status":"Card - Active",
                          "sequenceNumber": "Sample-seq-1",
                          "labelIds": [
                                889,
                                992
                            ],  
                       },
                       "cardBrand":"MasterCard",
                       "cardClass":"Commercial",
                       "saleGuid": "d49e4881-34e5-461f-9d43-0efb0d94039d"
                    }
              schema:
                $ref: '#/components/schemas/CardIssuanceCreateVirtualCardResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/CardIssuanceCreateVirtualCard400Response'
      deprecated: false
  /api/v1/IssueCard/IssueLite:
    post:
      tags:
        - CardIssue
      summary: Issue Lite
      operationId: CardIssue_createVirtualCardLite
      security:
        - sec0: []
      description: >-
        For our lite clients, we provide the ability to issue a VCC (Virtual
        Credit Card) via API without the requirement to process a sale first. 
        If you aren't sure which Issuance API to use, please contact your client
        support representative.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardIssueCreateVirtualCardLiteRequest'
            examples:
              Issue Lite Request Example:
                value:
                  MerchantGuid: 2b586234-7f14-432e-b0f4-a2935f783f38
                  Payee: Delta
                  FirstName: Adam
                  LastName: Smith
                  Phone: '7411237489'
                  Address1: 345 Main Road
                  Address2: ''
                  City: Miami Beach
                  State: MI
                  Zipcode: '33109'
                  Country: MX
                  UsageLimit: 10
                  AmountLimit: 180
                  ExpirationDate: '2024-12-30'
                  TerminateDate: '2023-12-30'
                  PurchaseType: '01'
                  SequenceNumber: Sample-seq-1
                  NonDomesticSupplier: true
                  OrderNumber: OrderNumber-1
                  CustomerID: CustomerID-1
                  SupplierID: AA
                  Transmission:
                    TransmissionMethods:
                      - Email
                      - Fax
                    EmailRecipient: emailTo@gmail.com
                    MerchantPhoneNumber: '7411237489'
                    EmailFrom: emailFrom@gmail.com
                    RecipientName: Smith
                    Subject: Card Information
                    Message: here is your card information...
                    DaysToExpire: 1
                    FaxRecipient: '+55555555555'
                    FaxFrom: Merchant Alias
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Issue Lite Response Example:
                  value: |-
                    {
                           "cardHolder":{
                              "cardHolderGuid":"a2b25172-c863-4325-b3b9-7e33cff2f8d1",
                              "firstName":"Adam",
                              "lastName":"Smith",
                              "phone":"7411237489",
                              "address1":"345 Main Road",
                              "address2":"",
                              "city":"Miami Beach",
                              "state":"MI",
                              "zipcode":"33109",
                              "country":"MX"
                           },
                           "card":{
                              "cardGuid":"ae17f687-8ba7-4502-b627-24fdf5e6f218",
                              "accountNumber":"1111118971563394",
                              "securityCode":"617",
                              "amountLimit":180.0,
                              "usageLimit":10,
                              "expirationDate":"2024-12-30T18:59:59",
                              "expiration":"1219",
                              "terminateDate": "2023-12-30T23:59:59",
                              "currencyCode":"USD",
                              "firstSix":"111111",
                              "lastFour":"3394",
                              "nameLine1":"Adam",
                              "nameLine2":"Smith",
                              "status":"Card - Active",
                              "sequenceNumber": "Sample-seq-1",
                              "labelIds": [
                                    889,
                                    992
                                ], 
                           },
                           "cardBrand":"MasterCard",
                           "cardClass":"Commercial",
                           "orderNumber":"OrderNumber-1",
                           "customerID":"CustomerID-1",
                           "saleGuid": "d49e4881-34e5-461f-9d43-0efb0d94039d"  
                        }
                'Issue Lite (ReturnCardData = false) Response Example ':
                  value: |-
                    {
                           "cardHolder":{
                              "cardHolderGuid":"a2b25172-c863-4325-b3b9-7e33cff2f8d1",
                              "firstName":"Adam",
                              "lastName":"Smith",
                              "phone":"7411237489",
                              "address1":"345 Main Road",
                              "address2":"",
                              "city":"Miami Beach",
                              "state":"MI",
                              "zipcode":"33109",
                              "country":"MX"
                           },
                           "card":{
                              "cardGuid":"ae17f687-8ba7-4502-b627-24fdf5e6f218",
                              "amountLimit":180.0,
                              "usageLimit":10,
                              "expirationDate":"2024-12-30T18:59:59",
                              "expiration":"1219",
                              "terminateDate": "2023-12-30T23:59:59",
                              "currencyCode":"USD",
                              "firstSix":"111111",
                              "lastFour":"3394",
                              "nameLine1":"Adam",
                              "nameLine2":"Smith",
                              "status":"Card - Active",
                              "sequenceNumber": "Sample-seq-1",
                              "labelIds": [
                                    889,
                                    992
                                ], 
                           },
                           "cardBrand":"MasterCard",
                           "cardClass":"Commercial",
                           "orderNumber":"OrderNumber-1",
                           "customerID":"CustomerID-1",
                           "saleGuid": "d49e4881-34e5-461f-9d43-0efb0d94039d"  
                        }
              schema:
                $ref: '#/components/schemas/CardIssueCreateVirtualCardLiteResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/CardIssueCreateVirtualCardLite400Response'
      deprecated: false
  /api/v1/IssueCard/LodgedCard:
    post:
      tags:
        - Card
      summary: Issue Lodged Card
      operationId: Card_createLodgedCard
      security:
        - sec0: []
      description: Use this endpoint to create a Lodged Card
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardCreateLodgedCardRequest'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Issue Lodged Card Response Example:
                  value: |-
                    {
                        "cardHolder": {
                            "cardHolderGuid": "b6557b9b-d0c5-49fd-a080-2be59a36ddf2",
                            "firstName": "Ping",
                            "lastName": "Test",
                            "phone": "5162532222",
                            "address1": "107 Techlogy Park",
                            "address2": "",
                            "city": "PT Corners",
                            "state": "NY",
                            "zipcode": "30092",
                            "country": "US"
                        },
                        "card": {
                            "cardGuid": "c67514a0-3110-4731-98b0-38858f282ade",
                            "accountNumber": "1111117027148580",
                            "securityCode": "818",
                            "amountLimit": 3.22,
                            "usageLimit": 1,
                            "limitWindow": "DAY", /* Day, Week, Month, Lifetime*/
                            "expirationDate": "2024-12-30T23:59:59",
                            "expiration": "0624",
                            "currencyCode": "USD",
                            "firstSix": "111111",
                            "lastFour": "8580",
                            "nameLine1": "Ping",
                            "nameLine2": "Test",
                            "status": "Card - Active",
                            "midWhitelist": [
                                "111",
                                "222",
                                "333"
                            ],
                            "midBlacklist": [
                                "777"
                            ]
                        },
                        "cardBrand": "Visa",
                        "cardClass": "Commercial",
                        "saleGuid": "d49e4881-34e5-461f-9d43-0efb0d94039d"
                    }
                Issue Lodged Card (ReturnCardData = False) Response Example:
                  value: |-
                    {
                        "cardHolder": {
                            "cardHolderGuid": "b6557b9b-d0c5-49fd-a080-2be59a36ddf2",
                            "firstName": "Ping",
                            "lastName": "Test",
                            "phone": "5162532222",
                            "address1": "107 Techlogy Park",
                            "address2": "",
                            "city": "PT Corners",
                            "state": "NY",
                            "zipcode": "30092",
                            "country": "US"
                        },
                        "card": {
                            "cardGuid": "c67514a0-3110-4731-98b0-38858f282ade",
                            "amountLimit": 3.22,
                            "usageLimit": 1,
                            "limitWindow": "DAY", /* Day, Week, Month, Lifetime*/
                            "expirationDate": "2024-12-30T23:59:59",
                            "expiration": "0624",
                            "currencyCode": "USD",
                            "firstSix": "111111",
                            "lastFour": "8580",
                            "nameLine1": "Ping",
                            "nameLine2": "Test",
                            "status": "Card - Active",
                            "midWhitelist": [
                                "111",
                                "222",
                                "333"
                            ],
                            "midBlacklist": [
                                "777"
                            ]
                        },
                        "cardBrand": "Visa",
                        "cardClass": "Commercial",
                        "saleGuid": "d49e4881-34e5-461f-9d43-0efb0d94039d"
                    }
              schema:
                $ref: '#/components/schemas/CardCreateLodgedCardResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/CardCreateLodgedCard400Response'
      deprecated: false
  /api/v1/IssueCard/{cardGuid}:
    put:
      tags:
        - Card
      summary: Update Card
      operationId: Card_updateCardDetails
      security:
        - sec0: []
      description: ''
      parameters:
        - description: Global Unique Identififer for the Card.
          name: CardGuid
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardUpdateCardDetailsRequest'
            examples:
              Reload / Update PuchaseType Example Request:
                value:
                  PurchaseType: '01'
                  UsageLimit: 10
                  AssociationId: Test 1
                  TerminateDate: '2023-12-30'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Reload / Update PuchaseType Example Response:
                  value: |-
                    {
                        "card": {
                            "cardGuid": "22724a6c-bf3e-409b-9593-c74648506aa7",
                            "amountLimit": 13.00,
                            "usageLimit": 22,
                            "limitWindow": "LIFETIME",
                            "expirationDate": "2022-12-19T00:00:00",
                            "expiration": "1222",
                            "firstSix": "499999",
                            "lastFour": "7354",
                            "nameLine1": "Jim",
                            "nameLine2": "Rayeek",
                            "status": "Card - Active",
                            "cardType": "Visa",
                            "associationId": "Test",
                            "clientProgram": "31"
                        },
                        "mccGroupName": "Hotels and Resorts"
                    }
              schema:
                $ref: '#/components/schemas/CardUpdateCardDetailsResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/CardUpdateCardDetails400Response'
      deprecated: false
  /api/v1/IssueCard/LodgedCard/{CardGuid}:
    put:
      tags:
        - Card
      summary: Update Lodged Card
      operationId: Card_updateLodgedCard
      description: ''
      parameters:
        - description: Global Unique Identifier for the Card.
          name: CardGuid
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardUpdateLodgedCardRequest'
            examples:
              Update Lodged Card Request Example:
                value:
                  UsageLimit: 100
                  AmountLimit: 1004
                  LimitWindow: MONTH
                  PurchaseType: '01'
                  MIDWhiteList:
                    - '1210000163087898'
                    - '1210000163083578'
                  MIDBlackList:
                    - '1210000163083918'
                  Activated: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Update Lodged Card Response Example:
                  value: |-
                    {
                        "card": {
                            "cardGuid": "0de2e407-5509-40c0-8b59-44e1b2b81f23",
                            "amountLimit": 1004.0,
                            "usageLimit": -1,
                            "limitWindow": "MONTH",
                            "expirationDate": "2021-12-30T23:59:59",
                            "expiration": "1221",
                            "firstSix": "111111",
                            "lastFour": "0033",
                            "nameLine1": "Monim",
                            "nameLine2": "Lodged",
                            "status": "Card - Active",
                            "cardType": "Other",
                            "midWhitelist": [
                                "1210000163087898",
                                "1210000163083578"
                            ],
                            "midBlacklist": [
                                "1210000163083918"
                            ]
                        },
                        "mccGroupName": "Airline"
                    }
              schema:
                $ref: '#/components/schemas/CardUpdateLodgedCardResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/CardUpdateLodgedCard400Response'
      deprecated: false
  /api/v1/TerminateCard/<guid>:
    post:
      tags:
        - Card
      summary: Terminate Card
      operationId: Card_terminateByDate
      security:
        - sec0: []
      description: >-
        The TerminateDate (YYYY-MM-DD format) is the date the Virtual Credit
        Card will be terminated by ConnexPay. TerminateDate is different than
        ExpirationDate in that TerminateDate indicates the actual date the card
        will no longer be active.  ExpirationDate is the month and year that
        will be applied to the actual VCC. Note, Returns can still be processed
        on terminated VCCs.
      parameters:
        - description: Card’s guid to terminate
          name: guid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "cardGuid": "d66d7435-fe07-46be-97d4-7699c2bcf841",
                        "amountLimit": 25.00,
                        "usageLimit": 2,
                        "limitWindow": "LIFETIME",
                        "expirationDate": "2023-05-31T00:00:00-04:00",
                        "expiration": "0623",
                        "terminateDate": "2023-06-18T23:59:59",
                        "currencyCode": "USD",
                        "firstSix": "111111",
                        "lastFour": "9999",
                        "nameLine1": "CardName1",
                        "nameLine2": "CardName2",
                        "status": "Card - Deactivated",
                        "customerServicePhoneNumber": "1-612-789-9999",
                        "sequenceNumber": "Termination Sample",
                        "cardType": "Visa",
                        "gatewayMerchantGuid": "9994975d-4eb8-45a1-a9b5-ce1b596dbc99",
                        "availableBalance": 0.0,
                        "isPhysical": false,
                        "isLodged": false,
                        "fingerprint": "994A1895A50182BC080EE761B571E5EE"
                    }
              schema:
                $ref: '#/components/schemas/CardTerminateByDateResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                    "message": "The request is invalid."
                    }
              schema:
                $ref: '#/components/schemas/CardTerminateByDate400Response'
      deprecated: false
  /api/v1/IssueCard/SendPaymentInfo/{cardGuid}:
    put:
      tags:
        - Card
      summary: Resend Transmission
      operationId: Card_resendTransmissionInfo
      security:
        - sec0: []
      description: >-
        This endpoint resends payment information to recipient. Or returns a URL
        you can use within your application to direct a user to a visual
        representation of the virtual card.
      parameters:
        - description: Global Unique Identififer for the Card.
          name: CardGuid
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardResendTransmissionInfoRequest'
            examples:
              Resend Transmission Request Example - email:
                value:
                  TransmissionMethods:
                    - Email
                  EmailRecipient: emailTo@gmail.com
                  MerchantPhoneNumber: '+7411237489'
                  EmailFrom: emailFrom@gmail.com
                  RecipientName: Smith
                  Subject: Card Information
                  Message: here is your card information...
                  DaysToExpire: 1
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Resend Transmission Response Example:
                  value: |-
                    {
                        "linkToCard": "https://sandboxpurchasesapi.connexpay.com//cards?token=eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNobWFjLXNoYTI1NiIsInR5cCI6IkpXVCJ9.eyJDYXJkR3VpZCI6IjBmZTI4M2MwLTc2MjYtNGVhNS1iMWUwLTc1MTNkMjk3MTY1YiIsIk1lcmNoYW50UGhvbmUiOiI1MTYyNTMyMjIyIiwibmJmIjoxNjE5NjA2NzY0LCJleHAiOjE2MTk2OTMxNjQsImlhdCI6MTYxOTYwNjc2NCwiaXNzIjoiaHR0cHM6Ly9QdXJjaGFzZXMuY29ubmV4cGF5LmNvbS8iLCJhdWQiOiJNZXJjaGFudHMifQ.QKoqNWksbvq4VUzArS0dCeG67rFOPZb8k8Yvj11eF2c"
                    }
              schema:
                $ref: '#/components/schemas/CardResendTransmissionInfoResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/CardResendTransmissionInfo400Response'
      deprecated: false
      x-readme:
        code-samples:
          - language: text
            code: |-
              {
                 "TransmissionMethods": ["Link"]
                 
              }
            name: Resend Transmission Request Example - Link
        samples-languages:
          - text
  /api/v1/Cards/{CardGuid}/{ShowFullPan}:
    get:
      tags:
        - Card
      summary: Get Issue Card Detail
      operationId: Card_getDetail
      security:
        - sec0: []
      description: >-
        This Endpoint returns Virtual Credit Card details for a specific card
        guid.
      parameters:
        - description: Global Unique Identifier for the VCC.
          name: CardGuid
          in: path
          schema:
            type: string
          required: true
        - description: >-
            Set to True to indicate whether the response should include the full
            account number.
          name: ShowFullPan
          in: path
          schema:
            type: boolean
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Response example if 'False' (do not display full Pan):
                  value: |-
                    {
                        "cardGuid": "b6c86e82-5621-440c-94ea-6bd5692e0497",
                        "expirationDate": "2022-12-30T23:59:59",
                        "expiration": "1222",
                        "terminateDate": "2022-12-30T23:59:59",
                        "currencyCode": "USD",
                        "firstSix": "111111",
                        "lastFour": "3420",
                        "nameLine1": "Ping",
                        "nameLine2": "VCC",
                        "status": "Card - Active",
                        "bank": 1,
                        "issuedAmount": 80.00,
                        "cardType": "Other",
                        "purchaseType": "01",
                        "availableBalance": 80.00
                    }
              schema:
                $ref: '#/components/schemas/CardGetDetailResponse'
      deprecated: false
  /api/v1/Addendum/VirtualCard:
    post:
      tags:
        - Addendum
      summary: Virtual Card Addendum
      operationId: Addendum_createVirtualCard
      security:
        - sec0: []
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddendumCreateVirtualCardRequest'
            examples:
              Addendum Request:
                value:
                  itemGuid: 2b586234-7f14-432e-b0f4-a2935f783f38
                  value: 5AH6FT
                  category: PNR
                  idExternal: '299'
                  note: Additional Info
                  sequence: TICKET1
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Addendum Response:
                  value: |-
                    {
                        "guid": "3d1d79c8-3b3e-4bba-be77-e74df716c47c",
                        "itemGuid": "2b586234-7f14-432e-b0f4-a2935f783f38",
                        "value": "5AH6FT",
                        "category": "PNR",
                        "idExternal": "299",
                        "note": "Additional Info",
                        "sequence": "TICKET1"
                    }
              schema:
                $ref: '#/components/schemas/AddendumCreateVirtualCardResponse'
      deprecated: false
  /v1/Addendum/Remove/<guid>:
    post:
      tags:
        - Addendum
      summary: Addendum Remove
      operationId: Addendum_deleteItem
      security:
        - sec0: []
      description: This endpoint deletes an Addendum information item from an object.
      parameters:
        - description: The Addendum guid to terminate.
          name: Guid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |
                    {
                    "message": "Addendum Removed"
                    }
              schema:
                $ref: '#/components/schemas/AddendumDeleteItemResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/AddendumDeleteItem400Response'
      deprecated: false
  /api/v1/IssueCard/UpdateDelayedCard/{{CardGuid}}:
    put:
      tags:
        - Card
      summary: Update Virtual Card with Delayed Activation
      operationId: Card_updateDelayedActivation
      security:
        - sec0: []
      description: >-
        Request this endpoint to update the activation date or card limit of a
        virtual card with a future activation date.
      parameters:
        - description: Global Unique Identifier for the Card.
          name: CardGuid
          in: path
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardUpdateDelayedActivationRequest'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "cardHolder": {
                            "cardHolderGuid": "f1bcad52-4507-4333-a74e-dbc5367982ab",
                            "firstName": "Ping",
                            "lastName": "Lite",
                            "phone": "1231231234",
                            "address1": "107 Techlogy Park",
                            "address2": "",
                            "city": "PT Corners",
                            "zipcode": "30092"
                        },
                        "card": {
                            "cardGuid": "1c2a5ec3-67fe-4f2d-984b-fa8acb66a2f3",
                            "amountLimit": 22,
                            "usageLimit": 2,
                            "limitWindow": "LIFETIME",
                            "expirationDate": "2022-12-24T23:59:59",
                            "expiration": "1222",
                            "firstSix": "111111",
                            "lastFour": "0717",
                            "nameLine1": "Ping",
                            "nameLine2": "Lite",
                            "status": "Card - Active, but delayed Activation Auth Limit of $1.0 applied.",
                            "activationDate": "12/3/2021",
                            "cardType": "Other"
                        }
                    }
              schema:
                $ref: '#/components/schemas/CardUpdateDelayedActivationResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/CardUpdateDelayedActivation400Response'
      deprecated: false
  /api/v1/IssueCard/ActivateDelayedCard/{{CardGuid}}:
    put:
      tags:
        - Card
      summary: Activate Virtual Card with Delayed Activation
      operationId: Card_activateDelayed
      description: >-
        Use this API to immediately activate a Virtual Card with a delayed
        activation date
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |+
                    {
                        "cardHolder": {
                            "cardHolderGuid": "f1bcad52-4507-4333-a74e-dbc5367982ab",
                            "firstName": "Ping",
                            "lastName": "Lite",
                            "phone": "1231231234",
                            "address1": "107 Techlogy Park",
                            "address2": "",
                            "city": "PT Corners",
                            "zipcode": "30092"
                        },
                        "card": {
                            "cardGuid": "1c2a5ec3-67fe-4f2d-984b-fa8acb66a2f3",
                            "amountLimit": 22,
                            "usageLimit": 2,
                            "limitWindow": "LIFETIME",
                            "expirationDate": "2022-12-24T23:59:59",
                            "expiration": "1222",
                            "firstSix": "111111",
                            "lastFour": "0717",
                            "nameLine1": "Ping",
                            "nameLine2": "Lite",
                            "status": "Card - Active",
                            "cardType": "Other"
                        }
                    }

              schema:
                $ref: '#/components/schemas/CardActivateDelayedResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/CardActivateDelayed400Response'
      deprecated: false
  /api/v1/Merchants/{merchantGuid}/Payees:
    post:
      tags:
        - MerchantPayees
      summary: Create merchant payee
      operationId: MerchantPayees_CreatePayee
      description: >-
        Create a payee record for a merchant you are paying. Leveraging our
        Payee network gives you control over the payout type being sent to your
        merchant/supplier. For example, if you have a payee that requires a
        specific card brand or card class, you can create a payee record with
        those requirements and ConnexPay will provide a virtual card meeting
        those specifications from our available bins. Beyond the payee ID,
        information tied to the payee record does not need to be passed again
        when requesting a virtual card.
      parameters:
        - description: The merchant guid
          name: merchantGuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: '#/components/requestBodies/MerchantPayeeDto'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantPayeeDto'
            text/json:
              schema:
                $ref: '#/components/schemas/MerchantPayeeDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/MerchantPayeeDto'
            text/xml:
              schema:
                $ref: '#/components/schemas/MerchantPayeeDto'
        '400':
          description: Invalid ModelState
        '403':
          description: User does not have access to merchant.
        '409':
          description: A payee with this payeeID already exists
  /api/v1/Merchants/{merchantGuid}/Payees/Search/{page}/{pagesize}:
    post:
      tags:
        - MerchantPayees
      summary: Get merchant payees
      operationId: MerchantPayees_GetPayees
      description: Get a list of payees for a merchant
      parameters:
        - description: The merchant guid
          name: merchantGuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - description: The page number
          name: page
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - description: The number of records to return per page
          name: pagesize
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        description: A payload of search/filter parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchMerchantPayeeDto'
          text/json:
            schema:
              $ref: '#/components/schemas/SearchMerchantPayeeDto'
          application/xml:
            schema:
              $ref: '#/components/schemas/SearchMerchantPayeeDto'
          text/xml:
            schema:
              $ref: '#/components/schemas/SearchMerchantPayeeDto'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SearchMerchantPayeeDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantPayeePaginatedResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/MerchantPayeePaginatedResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/MerchantPayeePaginatedResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/MerchantPayeePaginatedResponse'
        '400':
          description: Bad request
        '403':
          description: User does not have access to merchant.
  /api/v1/Merchants/{merchantGuid}/Payees/{payeeGuid}:
    get:
      tags:
        - MerchantPayees
      summary: Get a merchant payee by guid
      operationId: MerchantPayees_GetPayee
      description: Get a payee for a merchant by guid
      parameters:
        - description: The merchant guid
          name: merchantGuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - description: The payee guid
          name: payeeGuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantPayeeDto'
            text/json:
              schema:
                $ref: '#/components/schemas/MerchantPayeeDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/MerchantPayeeDto'
            text/xml:
              schema:
                $ref: '#/components/schemas/MerchantPayeeDto'
        '204':
          description: No MerchantPayee found
        '400':
          description: Bad request
        '403':
          description: User does not have access to merchant.
    put:
      tags:
        - MerchantPayees
      summary: Update merchant payee
      operationId: MerchantPayees_UpdatePayee
      description: Update a payee for a merchant by guid
      parameters:
        - description: The merchant guid
          name: merchantGuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - description: The payee guid
          name: payeeGuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        $ref: '#/components/requestBodies/MerchantPayeeDto'
      responses:
        '204':
          description: NoContent
        '400':
          description: Bad request
        '403':
          description: User does not have access to merchant.
        '409':
          description: A payee with this payeeID already exists
    delete:
      tags:
        - MerchantPayees
      summary: Delete merchant payee
      operationId: MerchantPayees_DeletePayee
      description: Delete a payee for a merchant by guid
      parameters:
        - description: The merchant guid
          name: merchantGuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - description: The payee guid
          name: payeeGuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: No Merchant Found
        '400':
          description: Bad request
        '403':
          description: User does not have access to merchant.
  /api/v1/PushToCard/Payees:
    get:
      tags:
        - PushToCard
      summary: Get Payee
      operationId: PushToCard_GetPayee
      description: >-
        Use this endpoint to retrieve a Payee for a specific Payee guid. One or
        both 'payeeGuid' or 'payeeEmailAddress' must be provided.
      parameters:
        - description: Globally Unique Identifier for the Payee being retrieved
          name: payeeGuid
          in: query
          required: false
          schema:
            type: string
        - description: Email address of the Payee being retrieved
          name: payeeEmailAddress
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayeeDto'
            text/json:
              schema:
                $ref: '#/components/schemas/PayeeDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/PayeeDto'
            text/xml:
              schema:
                $ref: '#/components/schemas/PayeeDto'
        '400':
          description: The Payee's guid or email address must be provided
        '401':
          description: User doesn't have access to this merchant
        '404':
          description: Payee doesn't exist or doesn't belong to the user
    post:
      tags:
        - PushToCard
      summary: Create Payee
      operationId: PushToCard_CreatePayee
      description: Use this endpoint to create a new Payee.
      requestBody:
        description: The data for the Payee that will be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayeeDto'
          text/json:
            schema:
              $ref: '#/components/schemas/PayeeDto'
          application/xml:
            schema:
              $ref: '#/components/schemas/PayeeDto'
          text/xml:
            schema:
              $ref: '#/components/schemas/PayeeDto'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PayeeDto'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayeeDto'
            text/json:
              schema:
                $ref: '#/components/schemas/PayeeDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/PayeeDto'
            text/xml:
              schema:
                $ref: '#/components/schemas/PayeeDto'
        '400':
          description: Bad request
        '409':
          description: A Payee with the provided email address already exists
  /api/v1/PushToCard/Payees/{payeeGuid}/{status}:
    put:
      tags:
        - PushToCard
      summary: Manage Payee
      operationId: PushToCard_ManagePayee
      description: Use this endpoint to enable or disable a Payee.
      parameters:
        - description: Globally Unique Identifier for the Payee that will be changed
          name: payeeGuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - description: Must be 'enable' or 'disable'
          name: status
          in: path
          required: true
          schema:
            type: string
            enum:
              - enable
              - disable
      responses:
        '200':
          description: >-
            Payee status changed to the requested state --OR-- Payee is already
            in the requested state
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushToCardManagePayeeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/PushToCardManagePayee200Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/PushToCardManagePayee200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/PushToCardManagePayee200Response'
        '400':
          description: Status must be 'enable' or 'disable'
        '401':
          description: User doesn't have access to this merchant
        '404':
          description: Payee doesn't exist or doesn't belong to the user
  /api/v1/PushToCard/Payees/{payeeGuid}:
    patch:
      tags:
        - PushToCard
      summary: Update Payee
      operationId: PushToCard_UpdatePayee
      description: Use this endpoint to update data for a Payee.
      parameters:
        - description: Globally Unique Identifier for a the Payee that will be updated
          name: payeeGuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: The data for the Payee that will be updated
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePayeeDto'
          text/json:
            schema:
              $ref: '#/components/schemas/UpdatePayeeDto'
          application/xml:
            schema:
              $ref: '#/components/schemas/UpdatePayeeDto'
          text/xml:
            schema:
              $ref: '#/components/schemas/UpdatePayeeDto'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdatePayeeDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushToCardUpdatePayeeResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/PushToCardUpdatePayee200Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/PushToCardUpdatePayee200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/PushToCardUpdatePayee200Response'
        '400':
          description: payeeGuid must be a valid guid value
        '401':
          description: User doesn't have access to this merchant
        '404':
          description: Payee doesn't exist or doesn't belong to the user
  /api/v1/PushToCard/Payouts:
    post:
      tags:
        - PushToCard
      summary: Create Payout
      operationId: PushToCard_CreatePayout
      description: Use this endpoint to create a new Payout.
      requestBody:
        description: The data for the Payout being created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayoutDto'
          text/json:
            schema:
              $ref: '#/components/schemas/PayoutDto'
          application/xml:
            schema:
              $ref: '#/components/schemas/PayoutDto'
          text/xml:
            schema:
              $ref: '#/components/schemas/PayoutDto'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PayoutDto'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayoutDto'
            text/json:
              schema:
                $ref: '#/components/schemas/PayoutDto'
            application/xml:
              schema:
                $ref: '#/components/schemas/PayoutDto'
            text/xml:
              schema:
                $ref: '#/components/schemas/PayoutDto'
        '400':
          description: BadRequest
  /api/v1/PushToCard/Payouts/{payoutGuid}/Cancel:
    post:
      tags:
        - PushToCard
      summary: Cancel Payments
      operationId: PushToCard_CancelPayments
      description: Use this endpoint to cancel payments within a Payout.
      parameters:
        - description: Globally Unique Identifier for a the Payout that will be changed
          name: payoutGuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: Indicator of which payments to cancel
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelPaymentsDto'
          text/json:
            schema:
              $ref: '#/components/schemas/CancelPaymentsDto'
          application/xml:
            schema:
              $ref: '#/components/schemas/CancelPaymentsDto'
          text/xml:
            schema:
              $ref: '#/components/schemas/CancelPaymentsDto'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CancelPaymentsDto'
        required: true
      responses:
        '200':
          description: Payment has been canceled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushToCardCancelPaymentsResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/PushToCardCancelPayments200Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/PushToCardCancelPayments200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/PushToCardCancelPayments200Response'
        '400':
          description: Payment list must not be empty
        '404':
          description: >-
            Payout doesn't exist or doesn't belong to the user --OR-- Payment
            doesn't exist or doesn't belong to payout
        '409':
          description: >-
            Payout is in 'Rejected' State --OR-- All Payments must be in
            'Approved' state
  /api/v1/PushToCard/Payouts/{payoutGuid}:
    get:
      tags:
        - PushToCard
      summary: Get Payout Details
      operationId: PushToCard_GetPayoutDetails
      description: >-
        Use this endpoint to retrieve the details for a Payout for a specific
        Payout guid.
      parameters:
        - description: Globally Unique Identifier for a the Payout that will be retrieved
          name: payoutGuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DtoPayout'
            text/json:
              schema:
                $ref: '#/components/schemas/DtoPayout'
            application/xml:
              schema:
                $ref: '#/components/schemas/DtoPayout'
            text/xml:
              schema:
                $ref: '#/components/schemas/DtoPayout'
        '400':
          description: Bad request
        '401':
          description: User doesn't have access to this merchant
        '404':
          description: Payout doesn't exist or doesn't belong to the user
  /api/v1/PushToCard/AuthenticatePaymentWidget:
    get:
      tags:
        - PushToCard
      summary: Get Authentication Token for DropInUI
      operationId: PushToCard_GetAuthenticationTokenAsync
      parameters:
        - description: Globally Unique Identifier for the Payee being authenticated.
          name: payeeGuid
          in: query
          required: false
          schema:
            type: string
        - description: Email address of the Payee being retrieved
          name: payeeEmailAddress
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayoutAuthResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/PayoutAuthResponse'
            application/xml:
              schema:
                $ref: '#/components/schemas/PayoutAuthResponse'
            text/xml:
              schema:
                $ref: '#/components/schemas/PayoutAuthResponse'
        '400':
          description: A valid Payee guid or email address must be provided
        '401':
          description: User doesn't have access to this merchant
        '404':
          description: Payee doesn't exist or doesn't belong to the user
  /api/v1/PushToCard/Payments/{ridGuid}/{cardId}:
    patch:
      tags:
        - PushToCard
      summary: Push Funds to a Card
      operationId: PushToCard_PushFundsToCardAsync
      parameters:
        - description: >-
            For Payment Widget clients. A ridGuid will will be returned upon
            creation of a Payout. That must be saved and passed here to complete
            the process.
          name: ridGuid
          in: path
          required: true
          schema:
            type: string
        - description: >-
            For Payment Widget clients. The cardId is retrieved by calling the
            Get Payee endpoint.
          name: cardId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully pushed funds to card
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushToCardPushFundsToCardAsyncResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/PushToCardPushFundsToCardAsync200Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/PushToCardPushFundsToCardAsync200Response'
            text/xml:
              schema:
                $ref: '#/components/schemas/PushToCardPushFundsToCardAsync200Response'
        '400':
          description: Valid values for ridGuid and cardId must be provided
  /api/v1/IssueACH:
    post:
      tags:
        - Transaction
      summary: Issue ACH
      operationId: Transaction_createAchCreditPayment
      security:
        - sec0: []
      description: This endpoint creates an ACH Credit payment.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionCreateAchCreditPaymentRequest'
            examples:
              Issue ACH Request Example:
                value:
                  description: ACH Test
                  merchantGuid: '{{Merchant}}'
                  amount: 100
                  payeeName: Ultra Merchant LLC
                  incomingTransactionCode: '{{IncomingTransactionCode}}'
                  accountHolder:
                    firstName: January
                    lastName: Test
                    businessName: Ultra Merchant LLC - Test ACH Payment 0209_02
                    email: test@connexpay.com
                    phone: '3121111111'
                    address:
                      address1: 123 stree1
                      address2: null
                      city: Minneapolis
                      state: MN
                      country: US
                      zipcode: '55123'
                    bankAccount:
                      routingNumber: '042000314'
                      accountNumber: '111222'
                      accountType: checking
                      accountHolderName: Test
              Issue ACH Request Example using tokenized bank accout:
                value:
                  merchantGuid: '{{Merchant}}'
                  amount: 23
                  payeeName: PR
                  _description: ACHTest04Issuing
                  incomingTransactionCode: '{{IncomingTransactionCode}}'
                  _scheduleDate: '2021-04-12'
                  accountHolder:
                    bankAccount:
                      bankAccountGuid: '{{bankAccountGuid}}'
                  _LabelIds:
                    - 102
                    - 103
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Issue ACH Response Example:
                  value: |-
                    {
                        "merchantId": "1818a55e-8541-4bfe-a288-bad870afbe1d",
                        "incomingTransactionCode": "511C171637487375170935405",
                        "paymentId": "6bd251b4-8dfd-4478-9e2e-41390a59687f",
                        "isCredit": true,
                        "amount": 100.0,
                        "payeeName": "Ultra Merchant LLC",
                        "description": "ACH Test",
                        "paymentStatus": "NotYetProcessed",
                        "scheduleDate": "2021-02-12T00:00:00",
                        "receiptDate": "2021-02-12T00:00:00",
                        "processingDate": null
                    }
              schema:
                $ref: '#/components/schemas/TransactionCreateAchCreditPaymentResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: >-
                  #/components/schemas/TransactionCreateAchCreditPayment400Response
      deprecated: false
  /api/v1/IssueACH/IssueLite:
    post:
      tags:
        - ACH
      summary: Issue ACH Lite
      operationId: Ach_createCreditPayment
      security:
        - sec0: []
      description: >-
        This endpoint creates an ACH Credit payment that does not have an
        associated sale. This allows ConnexPay Lite clients to submit the issue
        payment call only.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AchCreateCreditPaymentRequest'
            examples:
              IssueACH Lite Request Example:
                value:
                  description: ACH Test
                  merchantGuid: '{{Merchant}}'
                  amount: 100
                  payeeName: Ultra Merchant LLC
                  accountHolder:
                    firstName: January
                    lastName: Test
                    businessName: Ultra Merchant LLC - Test ACH Payment 0209_02
                    email: test@connexpay.com
                    phone: '3121111111'
                    address:
                      address1: 123 stree1
                      address2: null
                      city: Minneapolis
                      state: MN
                      country: US
                      zipcode: '55123'
                    bankAccount:
                      routingNumber: '042000314'
                      accountNumber: '111222'
                      accountType: checking
                      accountHolderName: Test
              Issue ACH Lite request example using tokenized bank account:
                value:
                  description: ACHTest
                  merchantGuid: '{{Merchant}}'
                  amount: 23
                  payeeName: PR
                  accountHolder:
                    bankAccount:
                      bankAccountGuid: '{{bankAccountGuid}}'
                  _LabelIds:
                    - 102
                    - 103
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                IssueACH Lite Response Example:
                  value: |-
                    {
                        "merchantId": "1818a55e-8541-4bfe-a288-bad870afbe1d",
                        "incomingTransactionCode": "511C171637487375170935405",
                        "paymentId": "6bd251b4-8dfd-4478-9e2e-41390a59687f",
                        "isCredit": true,
                        "amount": 100.0,
                        "payeeName": "Ultra Merchant LLC",
                        "description": "ACH Test",
                        "paymentStatus": "NotYetProcessed",
                        "scheduleDate": "2021-02-12T00:00:00",
                        "receiptDate": "2021-02-12T00:00:00",
                        "processingDate": null
                    }
              schema:
                $ref: '#/components/schemas/AchCreateCreditPaymentResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/AchCreateCreditPayment400Response'
      deprecated: false
  /api/v1/Addendum/ACH:
    post:
      tags:
        - Addendum
      summary: ACH Purchase Addendum
      operationId: Addendum_createAchPurchase
      security:
        - sec0: []
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddendumCreateAchPurchaseRequest'
            examples:
              Addendum Request:
                value:
                  itemGuid: 2b586234-7f14-432e-b0f4-a2935f783f38
                  value: Hilton
                  category: Payee
                  idExternal: InvcNbr1234
                  note: Invoice
                  sequence: 62321-1
      responses:
        '201':
          description: '201'
          content:
            application/json:
              examples:
                Addendum Response:
                  value: |-
                    {
                        "guid": "3d1d79c8-3b3e-4bba-be77-e74df716c47c",
                        "itemGuid": "2b586234-7f14-432e-b0f4-a2935f783f38",
                        "value": "Hilton",
                        "category": "Payee",
                        "idExternal": "InvcNbr1234",
                        "note": "Additional Info",
                        "sequence": "62321-1"
                    }
              schema:
                $ref: '#/components/schemas/AddendumCreateAchPurchaseResponse'
      deprecated: false
  /api/v1/merchantsupplier/settings:
    post:
      tags:
        - Setting
      summary: Merchant Supplier Setting
      operationId: Setting_tokenizeBankAccountInfo
      description: >-
        This endpoint allows you to create and tokenize a suppliers bank account
        information without actually making the Issue ACH call. That tokenized
        bank account can then be used in future Issue ACH or Issue ACH Lite API
        requests so you don't have to store the actual bank account information.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SettingTokenizeBankAccountInfoRequest'
            examples:
              Request Example:
                value:
                  MerchantGuid: '{{Merchant}}'
                  SupplierName: Joe Supplier
                  accountHolder:
                    firstName: Test
                    lastName: Supplier3
                    middleName: M
                    businessName: ''
                    email: test@connexpay.com
                    phone: '3121111111'
                    address:
                      address1: 123 stree1
                      address2: null
                      city: Minneapolis
                      state: MN
                      country: US
                      zipcode: '55123'
                    bankAccount:
                      routingNumber: '042000314'
                      accountNumber: '222333'
                      accountType: checking
                      accountHolderName: PR123
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "merchantGuid": "1818a55e-8541-4bfe-a288-bad870afbe1d",
                        "supplierName": "Joe Supplier",
                        "timeStamp": "2021-10-15T20:13:42.3444476Z",
                        "idUser": 114,
                        "idMerchantSupplierSettings": 13,
                        "accountHolder": {
                            "accountHolderGuid": "8b1f13fb-6085-4e6f-b4fb-eb8fb7f1ea1e",
                            "firstName": "Test",
                            "lastName": "Supplier3",
                            "_businessName": "",
                            "email": "test@connexpay.com",
                            "phone": "3121111111",
                            "address": {
                                "address1": "123 stree1",
                                "city": "Minneapolis",
                                "state": "MN",
                                "country": "US",
                                "zipcode": "55123"
                            },
                            "bankAccount": {
                                "bankAccountGuid": "9da122a8-7e13-490c-b10d-fa3309178354",
                                "accountType": "Checking",
                                "accountHolderName": "PR123",
                                "last4Digits": "2333"
                            }
                        },
                        "userName": "test-user"
                    }
              schema:
                $ref: '#/components/schemas/SettingTokenizeBankAccountInfoResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/SettingTokenizeBankAccountInfo400Response'
      deprecated: false
  /api/v1/Cards/Transactions/{cardGuid}:
    get:
      tags:
        - Transaction
      summary: Search Virtual Card History
      operationId: Transaction_searchVirtualCardHistory
      security:
        - sec0: []
      description: >-
        This API allows you to pull back history of the Virtual Card. This is
        the same API (and data) that is used when clicking the “Transactions”
        button on the Virtual Card in the Portal to display the transaction
        history. The API will return the merchant name where the Virtual Card
        was used, the date and time, transaction type (auth, settlement, refund,
        void, etc.), the response/memo which correlates to the transaction type
        and the amount.
      parameters:
        - description: Global Unique Identifier for the Card. Required parameter.
          name: CardGuid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Search Virtual Card History Response Example:
                  value: "   {\n    \t\"transactions\": [\n    \t{\n    \t\t\"error\": \"Failed to retrieve transaction 3a1ab440-6b29-4bcb-aa21-546a6913f8fe\"\n    \t},\n    \t{\n    \t\t\"type\": \"authorization\",\n    \t\t\"amount\": 115.5,\n    \t\t\"status\": \"DECLINED\",\n    \t\t\"description\": \"Auth restriction found for given mid or mcc\",\n    \t\t\"merchantName\": \"Marqeta Storefront\",\n    \t\t\"timestamp\": \"2019-12-12T17:38:56Z\",\n    \t\t\"transactionGuid\": \"7bc38c88-c3b8-4ec9-97fc-354fa689c50a\",\n    \t\t\"cardGuid\": \"c3ac11ef-062f-4fd3-a309-0079d2d4b2fd\"\n    \t},\n    \t{\n    \t\t\"type\": \"authorization\",\n    \t\t\"amount\": 115.5,\n    \t\t\"status\": \"DECLINED\",\n    \t\t\"description\": \"Auth restriction found for given mid or mcc\",\n    \t\t\"merchantName\": \"Marqeta Storefront\",\n    \t\t\"timestamp\": \"2019-12-12T17:44:43Z\",\n    \t\t\"transactionGuid\": \"7ea1ee78-2f7c-4482-bb1f-8d0db4b54762\",\n    \t\t\"cardGuid\": \"c3ac11ef-062f-4fd3-a309-0079d2d4b2fd\"\n    \t}\n    \t]\n    }"
              schema:
                $ref: >-
                  #/components/schemas/TransactionSearchVirtualCardHistoryResponse
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: >-
                  #/components/schemas/TransactionSearchVirtualCardHistory400Response
      deprecated: false
  /api/v1/Search/AvailableFunds/{merchantGuid}:
    get:
      tags:
        - Funds
      summary: Available Funds
      operationId: Funds_getAvailableDetails
      description: >-
        Use this endpoint to pull details regarding your Available Funds like
        cash balance, Available to Authorize (ATA) or Available to Issue (ATI),
        and the details that make up the final number.
      parameters:
        - description: Merchant's Guid assigned by ConnexPay
          name: MerchantGuid
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Available to Authorize:
                  value: "{\n\_\_\_\_\"cashBalance\":\_305405.45,\n\_\_\_\_\"minimumCashBalance\":\_10.00,\n\_\_\_\_\"reserveDeposit\":\_25.50,\n\_\_\_\_\"salesAllowance\":\_38100231.43,\n\_\_\_\_\"overage\":\_0.00,\n\_\_\_\_\"outstandingAuthorization\":\_29.00,\n\_\_\_\_\"outstandingLiability\":\_0.00,\n\_\_\_\_\"totalAvailable\":\_38405607.88\n}"
                Available to Issue:
                  value: "{\n\_\_\_\_\"cashBalance\":\_305405.45,\n\_\_\_\_\"minimumCashBalance\":\_10.00,\n\_\_\_\_\"reserveDeposit\":\_25.50,\n\_\_\_\_\"salesAllowance\":\_38100231.43,\n\_\_\_\_\"overage\":\_0.00,\n\_\_\_\_\"outstandingAuthorization\":\_0.00,\n\_\_\_\_\"outstandingLiability\":\_8809244.33,\n\_\_\_\_\"totalAvailable\":\_29596392.55\n}"
              schema:
                $ref: '#/components/schemas/FundsGetAvailableDetailsResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/FundsGetAvailableDetails400Response'
      deprecated: false
  /api/v1/PurchaseEventHistory/Resend:
    post:
      tags:
        - Replay
      summary: Purchase Event History (Replay Webhooks)
      operationId: Replay_purchaseEventHistoryResend
      description: >-
        Call this endpoint to receive VCC, Lodged Card, Physical Card or ACH
        purchase events either by unique Guid or for a specified date range. If
        you subscribe to webhooks and are concerned you may be missing events,
        this endpoint can retrieve past events.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplayPurchaseEventHistoryResendRequest'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Request by SourceGuid:
                  value: ''
              schema:
                $ref: '#/components/schemas/ReplayPurchaseEventHistoryResendResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: >-
                  #/components/schemas/ReplayPurchaseEventHistoryResend400Response
      deprecated: false
  /api/chargeback/GetByUser:
    get:
      tags:
        - Sale
      summary: Sales Chargebacks
      operationId: Sale_getChargebacksByUser
      description: ''
      parameters:
        - description: Return all chargebacks for the authenticated user with a start date
          name: /GetByUser?startDate=2016-12-01
          in: path
          schema:
            type: string
          required: true
        - description: >-
            Return all chargebacks for the authenticated user with a start and
            end date
          name: /GetByUser?startDate=2016-12-01&endDate=2016-12-01
          in: path
          schema:
            type: string
          required: true
        - description: >-
            Return all chargebacks for the authenticated user with a start and
            end date based on resolved date
          name: /GetByResolvedDate?startDate=2019-09-20&endDate=2019-10-21
          in: path
          schema:
            type: string
          required: true
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    [
                        {
                            "ID": 00001,
                            "UUID": "abc123 ",
                            "FileId": 00001,
                            "MerchantId": 001,
                            "Arn": "12312312312312312312312",
                            "CaseNumber": "0000000000001",
                            "Amount": 298.00,
                            "RecordType": " ",
                            "CaseType": "25",
                            "ReasonCode": "4837",
                            "ReasonDescription": "No Cardholder Authorization                       ",
                            "CardBrand": 2,
                            "TransactionCode": "05",
                            "ResolutionTo": "M",
                            "TransactionDate": "2020-12-08T00:00:00",
                            "LoadDate": "2021-02-12T00:00:00",
                            "PostDate": "2020-12-08T00:00:00",
                            "ResolvedDate": "2021-03-02T00:00:00",
                            "FamilyId": 00000001,
                            "HasImage": false,
                            "HasResponse": false,
                            "ImageFileUrl": "",
                            "Created": "2021-03-02T23:01:00",
                            "OrderNumber": "23447161",
                            "DueDate": "2021-02-24T00:00:00",
                            "IsSurrendered": false,
                            "IdSale": 0000001,
                            "IncomingTransactionCode": "1231231231231231231231231",
                            "SaleGuid": "1238aff0-18b3-46ce-b123-1ede8ff09123",
                            "SaleFirstFour": "1234",
                            "SaleLastFour": "1234",
                            "AuthCode": "12312Z",
                            "NetPosition": -298.0000,
                            "WinLoss": "Loss (Pending)"
                        },
                        {
                            "ID": 00002,
                            "UUID": "abc456 ",
                            "FileId": 00001,
                            "MerchantId": 115,
                            "Arn": "45645645645645645645645",
                            "CaseNumber": "0000000000002",
                            "Amount": 61.39,
                            "RecordType": " ",
                            "CaseType": "21",
                            "ReasonCode": "13.1",
                            "ReasonDescription": "Merchandise/Services Not Received                 ",
                            "CardBrand": 1,
                            "TransactionCode": "05",
                            "ResolutionTo": "M",
                            "TransactionDate": "2021-02-04T00:00:00",
                            "LoadDate": "2021-02-16T00:00:00",
                            "PostDate": "2021-02-04T00:00:00",
                            "ResolvedDate": "2021-02-16T00:00:00",
                            "FamilyId": 00000002,
                            "HasImage": false,
                            "HasResponse": false,
                            "ImageFileUrl": "",
                            "Created": "2021-02-16T23:02:00",
                            "OrderNumber": "45121742",
                            "DueDate": "2021-02-28T00:00:00",
                            "IsSurrendered": false,
                            "IdSale": 0000002,
                            "IncomingTransactionCode": "456DF6263745611632034566",
                            "SaleGuid": "456f41ef-4564-456e-85dc-d1a0545684d8",
                            "SaleFirstFour": "4567",
                            "SaleLastFour": "4567",
                            "AuthCode": "45645A",
                            "NetPosition": 0.0000,
                            "WinLoss": "Win"
                        }
                    ]
              schema:
                $ref: '#/components/schemas/SaleGetChargebacksByUserResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/SaleGetChargebacksByUser400Response'
      deprecated: false
  /api/v1/authenticate:
    post:
      tags:
        - Token
      summary: Reporting Token
      operationId: Token_generateReportingToken
      description: >-
        Reporting API requests require a combination of assigned Bridge user
        name, Bridge password, and a successfully generated authentication
        token. The Bridge credentials used are assigned separately from the
        Purchase and Sales API credentials. The received token for Reporting is
        valid for 60 minutes from issuance and may be used for all requests
        during its lifespan.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenGenerateReportingTokenRequest'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Result:
                  value: |-
                    {
                        "access_token": "Test Bridge Access Token",
                        "expires_in": "3600"
                    }
              schema:
                $ref: '#/components/schemas/TokenGenerateReportingTokenResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/TokenGenerateReportingToken400Response'
      deprecated: false
  /api/v1/Accounting/DailyDetail:
    get:
      tags:
        - Accounting
      summary: Get Daily Accounting Detail
      operationId: Accounting_getDailyDetail
      description: >-
        This endpoint returns the paginated daily accounting detail items of a
        client for a given release date.
      parameters:
        - description: The client identifier for the requested transactions.
          name: merchantGuid
          in: query
          required: true
          schema:
            type: string
            format: uuid
          example: ab0123f5-7648-4e27-8709-ad0f4e162c20
        - description: >-
            Date on which the requested transactions were released to the
            client.
          name: releasedDate
          in: query
          required: true
          schema:
            type: string
            format: date
          example: '2022-12-31'
        - description: ''
          name: pageNumber
          in: query
          schema:
            maximum: 2147483647
            minimum: 1
            type: integer
            format: int32
            default: 1
        - description: ''
          name: pageSize
          in: query
          schema:
            maximum: 25000
            minimum: 1
            type: integer
            format: int32
            default: 10
      responses:
        '200':
          description: Successfully retrieved daily accounting detail data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DailyAccountingDetailPaginatedItems'
        '400':
          description: The request was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: The request was not authorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: No data was found for the provided parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/v1/Accounting/DailySummary:
    get:
      tags:
        - Accounting
      summary: Get Daily Accounting Summary
      operationId: Accounting_getDailySummary
      description: >-
        This endpoint returns the daily accounting summary of a merchant for a
        given release date.
      parameters:
        - description: The client identifier for the requested transactions.
          name: merchantGuid
          in: query
          required: true
          schema:
            type: string
            format: uuid
          example: ab0123f5-7648-4e27-8709-ad0f4e162c20
        - description: >-
            Date on which the requested transactions were released to the
            client.
          name: releasedDate
          in: query
          required: true
          schema:
            type: string
            format: date
          example: '2022-12-31'
      responses:
        '200':
          description: Successfully retrieved daily accounting summary data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DailyAccountingSummary'
        '400':
          description: The request was invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: The request was not authorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: No data was found for the provided parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
  /api/v1/Search/IssuedCards:
    post:
      tags:
        - Card
      summary: Search Issued Cards
      operationId: Card_searchIssuedVirtualCards
      security:
        - sec0: []
      description: This endpoint searches for Issued Virtual Cards.
      parameters:
        - description: Number of page of the results. Default is 1.
          name: PageNumber
          in: path
          schema:
            type: integer
            format: int32
          required: true
        - description: Size of each page of the results. Default is 1000.
          name: PageSize
          in: path
          schema:
            type: integer
            format: int32
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardSearchIssuedVirtualCardsRequest'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Search Issued Cards Response Example:
                  value: |-
                    {
                       "pageCurrent":1,
                       "pageCurrentResults":2,
                       "pageTotal":1,
                       "pageSize":5,
                       "totalResults":2,
                       "cardSummary":null,
                       "searchResultDTO":[
                          {
                             "customerName":"John Smith",
                             "merchantId":"b19d3b78-627b-4b7e-b60f-3b842a64a213",
                             "incomingTransactionCodeCreationDate":"2020-02-18T17:40:43.66",
                             "outgoingTransactionCodeCreationDate":"2020-02-18T17:40:54.63",
                             "issuedAmount":150.00,
                             "currencyCode":"USD",
                             "cardType":"Other",
                             "lastFour":"9766",
                             "bin":"5ed416a2-a2da-41fc-957a-a9ee366f86b3",
                             "incomingTransactionCode":"03AGCW7D9ZW8KHC3300030000",
                             "outgoingTransactionCode":"03AGCW7D9ZW8KHC3300030000USD01ZZZ00015000",
                             "outgoingTransactionCodeDetail":{
                                "incomingTransactionCode":"03AGCW7D9ZW8KHC3300030000",
                                "incomingTransactionCodeDetail":{
                                   "expectedOutgoingTransactionCount":3,
                                   "filler":"AGC",
                                   "authorizationResponseCode":"W7D9ZW",
                                   "authorizationDate":"2020-02-18T17:40:43.66",
                                   "authorizedAmount":300.0
                                },
                                "currencyCode":"USD",
                                "purchaseType":"01",
                                "filler":"ZZZ",
                                "paymentAmount":150.0
                             },
                             "timeStamp":"2020-02-18T17:40:54.63",
                             "guid":"179c7243-6b43-4d47-b77c-3f5bb0fc37f5",
                             "cardStatus":"Card - Active",
                             "toleranceAmount":30.00,
                             "terminateDate": "2020-11-26T18:59:59"
                            },
                          },
                          {
                             "customerName":"John Smith",
                             "merchantId":"b19d3b78-627b-4b7e-b60f-3b842a64a213",
                             "incomingTransactionCodeCreationDate":"2020-02-18T17:40:43.66",
                             "outgoingTransactionCodeCreationDate":"2020-02-18T17:41:03.81",
                             "issuedAmount":100.00,
                             "currencyCode":"USD",
                             "cardType":"Other",
                             "lastFour":"8493",
                             "bin":"5ed416a2-a2da-41fc-957a-a9ee366f86b3",
                             "incomingTransactionCode":"03AGCW7D9ZW8KHC3300030000",
                             "outgoingTransactionCode":"03AGCW7D9ZW8KHC3300030000USD01ZZZ00005000",
                             "outgoingTransactionCodeDetail":{
                                "incomingTransactionCode":"03AGCW7D9ZW8KHC3300030000",
                                "incomingTransactionCodeDetail":{
                                   "expectedOutgoingTransactionCount":3,
                                   "filler":"AGC",
                                   "authorizationResponseCode":"W7D9ZW",
                                   "authorizationDate":"2020-02-18T17:40:43.66",
                                   "authorizedAmount":300.0
                                },
                                "currencyCode":"USD",
                                "purchaseType":"01",
                                "filler":"ZZZ",
                                "paymentAmount":50.0
                             },
                             "timeStamp":"2020-02-18T17:41:03.81",
                             "guid":"7638a84e-40cb-4db7-b9b8-a401a906b310",
                             "cardStatus":"Card - Active",
                             "orderNumber": "Test-Search",
                             "customerID": "Test Search"
                          }
                       ],
                       "allowedToCreateVC":false
                    }
              schema:
                $ref: '#/components/schemas/CardSearchIssuedVirtualCardsResponse'
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: '#/components/schemas/CardSearchIssuedVirtualCards400Response'
      deprecated: false
  /api/v1/Search/Settlements:
    post:
      tags:
        - Settlement
      summary: Search Settlements
      operationId: Settlement_searchVirtualCardSettlements
      security:
        - sec0: []
      description: This endpoint searches for Virtual Card Settlements.
      parameters:
        - description: Number of pages of results to return. Default is 1.
          name: PageNumber
          in: path
          schema:
            type: integer
            format: int32
          required: true
        - description: Size of each page of results. Default is 1000.
          name: PageSize
          in: path
          schema:
            type: integer
            format: int32
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/SettlementSearchVirtualCardSettlementsRequest
            examples:
              By card issued date range:
                value:
                  merchantGuid: 568f7853-6e3d-4b3b-80f5-058763318fcb
                  dateFrom: '2019-11-01T00:00:00.0000000'
                  dateTo: '2019-11-30T00:00:00.0000000'
                  orderNumber: Dan-TV9J6VJ
              By card settled date range:
                value:
                  MerchantGuid: '{{Merchant}}'
                  postedDateFrom: '2020-08-05T00:00:00.0000000'
                  postedDateTo: '2020-08-10T00:00:00.0000000'
      responses:
        '200':
          description: '200'
          content:
            application/json:
              examples:
                Search Settlements Response Example:
                  value: '{}'
              schema:
                $ref: >-
                  #/components/schemas/SettlementSearchVirtualCardSettlementsResponse
        '400':
          description: '400'
          content:
            application/json:
              examples:
                Result:
                  value: '{}'
              schema:
                $ref: >-
                  #/components/schemas/SettlementSearchVirtualCardSettlements400Response
      deprecated: false
components:
  securitySchemes:
    sec0:
      type: http
      flows: {}
      scheme: basic
  requestBodies:
    MerchantPayeeDto:
      description: The merchant payee dto
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MerchantPayeeDto'
        text/json:
          schema:
            $ref: '#/components/schemas/MerchantPayeeDto'
        application/xml:
          schema:
            $ref: '#/components/schemas/MerchantPayeeDto'
        text/xml:
          schema:
            $ref: '#/components/schemas/MerchantPayeeDto'
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/MerchantPayeeDto'
      required: true
  schemas:
    MerchantPayeeDto:
      required:
        - isBusiness
        - payeeId
        - preferredPayoutMethod
      type: object
      properties:
        idMerchant:
          format: int32
          type: integer
        isBusiness:
          type: boolean
        firstName:
          maxLength: 100
          minLength: 0
          pattern: '^[A-Za-z0-9]+(?: +[A-Za-z0-9]+)*$'
          type: string
        lastName:
          maxLength: 100
          minLength: 0
          pattern: '^[A-Za-z0-9]+(?: +[A-Za-z0-9]+)*$'
          type: string
        dbaName:
          description: If applicable, the payee's DBA name can be entered.
          maxLength: 200
          minLength: 0
          type: string
        payeeId:
          description: Identifier for the payee.
          maxLength: 200
          minLength: 0
          pattern: '^[A-Za-z0-9]+(?: +[A-Za-z0-9]+)*$'
          type: string
        taxId:
          description: >-
            In the US this field is also known as Employee Identification Number
            and Corporate Business Number in Canada.
          maxLength: 50
          minLength: 0
          pattern: '^[A-Za-z0-9-]+(?: +[A-Za-z0-9-]+)*$'
          type: string
        customerId:
          maxLength: 100
          minLength: 0
          type: string
        email:
          pattern: >-
            ^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$
          type: string
        address1:
          maxLength: 150
          minLength: 0
          type: string
        address2:
          type: string
        city:
          maxLength: 50
          minLength: 0
          type: string
        state:
          maxLength: 3
          minLength: 0
          type: string
        zip:
          maxLength: 10
          minLength: 0
          type: string
        country:
          pattern: ^[0-9a-zA-Z ]{2,40}$
          type: string
        preferredPayoutMethod:
          description: The method to be used when sending a payout to this payee.
          type: string
        preferredCardBrand:
          description: Visa or Mastercard
          type: string
        preferredCardClass:
          description: >-
            This will vary based on your settings. Check with your Customer Care
            team for applicable options.
          type: string
        purchaseType:
          description: >-
            The industry where the virtual card will be utilized, meaning the
            purchase type passed in inclusive. For example, if value set to
            airline and the card is used at hotel, it will be declined. Check
            with your Customer Care team for applicable options.
          type: string
        guid:
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        timestamp:
          format: date-time
          type: string
      example:
        idMerchant: 0
        isBusiness: false
        firstName: John
        lastName: Doe
        dbaName: ''
        payeeId: payeeID01
        taxId: 12-3456789
        customerId: customerID01
        email: test@test.com
        address1: 123 Main St
        address2: ''
        city: Anytown
        zip: '12345'
        country: US
        preferredPayoutMethod: VCC
        preferredCardBrand: Visa
        preferredCardClass: CreditCommercial
        purchaseType: '01'
        guid: 00000000-0000-0000-0000-000000000000
        timestamp: '0001-01-01T00:00:00'
    SearchMerchantPayeeDto:
      type: object
      properties:
        searchTerm:
          type: string
      example:
        searchTerm: payeeID01
    MerchantPayeePaginatedResponse:
      type: object
      properties:
        totalCount:
          format: int32
          type: integer
        totalPageCount:
          format: int32
          type: integer
        pageSize:
          format: int32
          type: integer
        currentPage:
          format: int32
          type: integer
        searchResults:
          type: array
          items:
            $ref: '#/components/schemas/MerchantPayeeDto'
    PayeeDto:
      required:
        - merchantGuid
        - firstName
        - lastName
        - email
        - phone
      type: object
      properties:
        payeeGuid:
          description: >-
            Guid for the created Payee that is returned by ConnexPay upon
            creation of a Payee. Ignored if provided in a Payee creation
            request.
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        merchantGuid:
          description: Merchant guid for the Payee to be created.
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        firstName:
          description: First name for the Payee to be created.
          maxLength: 50
          minLength: 0
          type: string
        lastName:
          description: Last name for the Payee to be created.
          maxLength: 50
          minLength: 0
          type: string
        email:
          description: Email address for the Payee.
          pattern: >-
            ^([a-zA-Z0-9_\-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$
          type: string
        address1:
          description: >-
            Postal address line 1 for the Payee. Alphanumerics and [,.-'] are
            allowed.
          maxLength: 100
          minLength: 0
          type: string
        address2:
          description: >-
            Postal address line 2 for the Payee. Alphanumerics and [,.-'] are
            allowed.
          maxLength: 100
          minLength: 0
          type: string
        city:
          description: Postal address city for the Payee.
          maxLength: 30
          minLength: 0
          type: string
        state:
          description: Postal address state for the Payee.
          maxLength: 30
          minLength: 0
          type: string
        zipCode:
          description: Postal code for the Payee.
          maxLength: 30
          minLength: 0
          type: string
        phone:
          description: Phone number for the Payee, up to 10-character string.
          pattern: ^\+1\d{10}$
          type: string
        status:
          description: Status for the Payee.
          type: string
        cardId:
          description: >-
            Unique identifier that refers to the card saved for a Payee when
            using the Payment Widget. It will be null when a Payee is created
            but will have a value once stored for the Payee using the Payment
            Widget.
          type: string
    UpdatePayeeDto:
      type: object
      properties:
        firstName:
          description: First name for the Payee to be updated.
          maxLength: 50
          minLength: 0
          type: string
        lastName:
          description: Last name for the Payee to be updated.
          maxLength: 50
          minLength: 0
          type: string
        email:
          description: Email address for the Payee to be updated.
          pattern: >-
            ^([a-zA-Z0-9_\-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$
          type: string
        address1:
          description: >-
            Postal address line 1 for the Payee to be updated. Alphanumerics and
            [,.-'] are allowed.
          maxLength: 100
          minLength: 0
          type: string
        address2:
          description: >-
            Postal address line 2 for the Payee to be updated. Alphanumerics and
            [,.-'] are allowed.
          maxLength: 100
          minLength: 0
          type: string
        city:
          description: Postal address city for the Payee to be updated.
          maxLength: 30
          minLength: 0
          type: string
        state:
          description: Postal address state for the Payee to be updated.
          maxLength: 30
          minLength: 0
          type: string
        zipCode:
          description: Postal code for the Payee to be updated.
          maxLength: 30
          minLength: 0
          type: string
        phone:
          description: Phone number for the Payee to be updated, up to 10-character string.
          pattern: ^\+1\d{10}$
          type: string
        status:
          description: Status for the Payee to be updated.
          type: string
    PayoutDto:
      required:
        - merchantGuid
        - memo
        - payments
      type: object
      properties:
        payoutGuid:
          description: Guid assigned to the Payout by ConnexPay upon creation of a Payout.
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        merchantGuid:
          description: >-
            Application-level value that indicates a Payout is being requested
            for client's account. Value provided by ConnexPay.
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        payoutReferenceToken:
          description: >-
            The Payout identifier that will be needed by ConnexPay support teams
            to research issues.
          type: string
        memo:
          description: A brief description highlighting the reason for this Payout.
          maxLength: 100
          minLength: 0
          type: string
        status:
          description: Status of the Payout.
          type: string
        payments:
          type: array
          items:
            $ref: '#/components/schemas/PaymentsDto'
        orderNumber:
          description: >-
            The most common number used throughout the ConnexPay Portal.
            Transaction ID within client environment associated with the order.
            The value is searchable and reportable in the ConnexPay portal. This
            value may be sent in multiple instances of the integration for
            multiple purposes. The maximum length is 50 alpha-numeric characters
            and allows dashes ( - ).
          maxLength: 50
          minLength: 0
          type: string
        customerId:
          description: >-
            Transaction ID within the client environment associated with the
            customer. This value acts as a secondary identifier in conjunction
            with OrderNumber. The value is searchable and reportable in the
            ConnexPay portal. This value may be sent in multiple times within
            the integration for multiple purposes. The maximum length is 100
            characters and is alpha-numeric.
          type: string
        associationId:
          description: >-
            Association ID is used to tie a Payout to a sale or sales. For
            example, if you have several sales and one Payout to a Payee,
            association ID can be added to the sales and the Payout for
            downstream reporting.
          type: string
        labelIds:
          description: >-
            Label IDs are used to associate a Payout to specific labels within
            ConnexPay Bridge UI for an organization. If a Payout is tied to an
            incorrect Label, it will not filter or display correctly in Bridge's
            Search Grid. Please contact your Customer Care Consultant for a list
            of valid Label IDs before use.
          type: array
          items:
            format: int32
            type: integer
    PaymentsDto:
      required:
        - payeeGuid
        - value
      type: object
      properties:
        payeeReferenceToken:
          description: >-
            The Payee identifier used by ConnexPay support teams to research
            issues related to the Payee.
          type: string
        ridReferenceToken:
          description: >-
            For Payment Widget customers only. This is the identifier that used
            by ConnexPay support teams to research issues related to the Payment
            Widget.
          type: string
        payeeGuid:
          description: Unique identifier assigned to the Payee.
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        paymentGuid:
          description: Unique identifier assigned to the Payment.
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        ridGuid:
          description: Unique identifier assigned when using the Payment Widget.
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        value:
          description: Amount of the Payment.
          format: double
          maximum: 50000
          type: number
        memo:
          description: Payment-level description highlighting the reason for this Payment.
          maxLength: 100
          minLength: 0
          type: string
        field2:
          description: >-
            Additional data field that can be used to provide additional data to
            the Payee and for your reporting purposes.
          maxLength: 50
          minLength: 0
          type: string
        field3:
          description: >-
            Additional data field that can be used to provide additional data to
            the Payee and for your reporting purposes.
          maxLength: 50
          minLength: 0
          type: string
        field4:
          description: >-
            Additional data field that can be used to provide additional data to
            the Payee and for your reporting purposes.
          maxLength: 50
          minLength: 0
          type: string
        field5:
          description: >-
            Additional data field that can be used to provide additional data to
            the Payee and for your reporting purposes.
          maxLength: 50
          minLength: 0
          type: string
    CancelPaymentsDto:
      required:
        - merchantGuid
        - payments
      type: object
      properties:
        merchantGuid:
          description: >-
            Application-level value that indicates a Payout is being requested
            for client's account. Value provided by ConnexPay.
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        payments:
          description: The Payment Guid returned in the Create Payout response.
          type: array
          items:
            format: uuid
            type: string
            example: 00000000-0000-0000-0000-000000000000
    DtoPayout:
      type: object
      properties:
        payoutGuid:
          description: Unique identifier assigned to the Payout.
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        payoutReferenceToken:
          description: >-
            The Payout identifier that will be needed by our support teams to
            research issues.
          type: string
        memo:
          description: A brief description highlighting the reason for this Payout.
          type: string
        orderNumber:
          description: >-
            The most common number used throughout the ConnexPay Portal.
            Transaction ID within client environment associated with the order.
            The value is searchable and reportable in the ConnexPay portal. This
            value may be sent in multiple instances of the integration for
            multiple purposes. The maximum length is 50 alpha-numeric characters
            and allows dashes ( - ).
          type: string
        associationId:
          description: >-
            Association ID is used to tie a Payout to a sale or sales. For
            example, if you have several sales and one Payout to a Payee,
            association ID can be added to the sales and the Payout for
            downstream reporting.
          type: string
        customerId:
          description: >-
            Transaction ID within the client environment associated with the
            customer. This value acts as a secondary identifier in conjunction
            with OrderNumber. The value is searchable and reportable in the
            ConnexPay portal. This value may be sent in multiple times within
            the integration for multiple purposes. The maximum length is 100
            characters and is alpha-numeric.
          type: string
        createdDate:
          format: date-time
          type: string
        createdBy:
          type: string
        labelIds:
          description: >-
            Label IDs are used to associate a Payout to specific labels within
            ConnexPay Bridge UI for an organization. If a Payout is tied to an
            incorrect Label, it will not filter or display correctly in Bridge's
            Search Grid. Please contact your Customer Care Consultant for a list
            of valid Label IDs before use.
          type: array
          items:
            format: int32
            type: integer
        payments:
          type: array
          items:
            $ref: '#/components/schemas/DtoPayments'
    DtoPayments:
      type: object
      properties:
        paymentGuid:
          format: uuid
          type: string
          example: 00000000-0000-0000-0000-000000000000
        paymentReferenceToken:
          description: >-
            Identifier needed by ConnexPay support teams to research Payment
            issues.
          type: string
        payeeReferenceToken:
          description: >-
            Payee identifier needed by ConnexPay support teams to research Payee
            issues.
          type: string
        ridReferenceToken:
          description: >-
            For Payment Widget customers only. Identifier needed by ConnexPay
            support teams to research issues related to the Payment Widget.
          type: string
        memo:
          description: Payment-level description highlighting the reason for this Payment.
          type: string
        value:
          description: Amount of the Payment.
          format: double
          type: number
        status:
          description: Status of the Payment.
          type: string
        field2:
          description: >-
            Additional data field that can be used to provide additional data to
            the Payee and for your reporting purposes.
          type: string
        field3:
          description: >-
            Additional data field that can be used to provide additional data to
            the Payee and for your reporting purposes.
          type: string
        field4:
          description: >-
            Additional data field that can be used to provide additional data to
            the Payee and for your reporting purposes.
          type: string
        field5:
          description: >-
            Additional data field that can be used to provide additional data to
            the Payee and for your reporting purposes.
          type: string
        terminationDate:
          type: string
        payeeName:
          description: The Payee's name.
          type: string
        email:
          description: Email address the Payment was sent to for the Payee.
          type: string
        lastFour:
          description: Last four digits of the Payee's card number.
          type: string
        address1:
          description: >-
            Postal address line 1 of the Payee. Alphanumerics and [,.-'] are
            allowed.
          type: string
        address2:
          description: >-
            Postal address line 2 of the Payee. Alphanumerics and [,.-'] are
            allowed.
          type: string
        city:
          description: Postal address city of the Payee.
          type: string
        state:
          description: Postal address state for the Payee.
          type: string
        zipCode:
          description: Postal code for the Payee.
          type: string
        country:
          description: Postal address country for the Payee.
          type: string
        createdBy:
          type: string
    PayoutAuthResponse:
      type: object
      properties:
        AuthenticationResult:
          $ref: '#/components/schemas/AuthenticationResult'
    AuthenticationResult:
      type: object
      properties:
        AccessToken:
          type: string
        ExpiresIn:
          format: int32
          type: integer
        TokenType:
          type: string
        RefreshToken:
          type: string
        IdToken:
          type: string
    DailyAccountingDetail:
      type: object
      properties:
        description:
          description: "Description\r\n\r\nThe type of transaction being released in this detail record.\r\n\r\nPossible Values:\r\n  ACH Debit Reject\r\n  Bank A ACH Credit Reject\r\n  Credit to Client (Withdrawal from Cash Account)\r\n  Daily Flex Funding\r\n  Debit from Client (Deposit to Cash Account)\r\n  Empty\r\n  Prior Day Cash Balance\r\n  Purchase - ACH Purchase\r\n  Purchase - ACH Return\r\n  Purchase - Push To Card Payout\r\n  Purchase - Virtual Card Chargeback\r\n  Purchase - Virtual Card Purchase\r\n  Purchase - Virtual Card Return\r\n  Reserve Balance\r\n  Sale - ACH Return\r\n  Sale - ACH Sale\r\n  Sale - ACH Void\r\n  Sale - Credit Card Adjustment\r\n  Sale - Credit Card Chargeback\r\n  Sale - Credit Card Return\r\n  Sale - Credit Card Sale\r\n  Sale - Credit Card Void\r\n  Unspecified"
          type: string
          nullable: true
        merchantGuid:
          description: "Merchant Guid\r\n\r\nUnique identifier assigned to the merchant by ConnexPay."
          type: string
          format: uuid
        clientName:
          description: "Client Name\r\n\r\nUnique name assigned to the client by ConnexPay."
          type: string
          nullable: true
        releasedDate:
          description: "Released Date\r\n\r\nDate on which the Accounting File for this detail record was released to the client."
          type: string
          format: date
        orderNumber:
          description: "Order Number\r\n\r\nIdentifier that may be provided by the client during the Create Sale or IssueLite process to identify the order.\r\nCan be comprised of multiple sales and purchases."
          type: string
          nullable: true
        name:
          description: "Name\r\n\r\nThe name line 1 and 2 of the virtual credit card."
          type: string
          nullable: true
        cardLastFour:
          description: "Card Last Four\r\n\r\nThe last four digits of the card number associated with the detail record."
          type: string
          nullable: true
        incomingTransactionCode:
          description: "Incoming Transaction Code (ITC)\r\n\r\nA unique ConnexPay generated token that connects an incoming sale transaction to an outbound\r\npurchase (virtual card or ACH) transaction. An ITC is generated and returned for each successful\r\nauthorization associated with a Sale request and is required for each purchase request."
          type: string
          nullable: true
        customerId:
          description: "Customer ID\r\n\r\nIdentifier that may be provided by the client during the Create Sale or IssueLite process. Can be comprised \r\nof multiple sales and purchases. Acts as a secondary identifier in conjunction with OrderNumber."
          type: string
          nullable: true
        amount:
          description: "Amount\r\n\r\nAmount of the sale or purchase transaction."
          type: number
          format: double
        merchantName:
          description: "Merchant Name\r\n\r\nName of the supplier processing the virtual credit card transaction."
          type: string
          nullable: true
        ticketNumber:
          description: "Ticket Number\r\n\r\nAddendum data associated with the transaction that is returned if provided during the virtual credit card or ACH creation"
          type: string
          nullable: true
        entityGuid:
          description: "Entity Guid\r\n\r\nEntity Guid of the detail record to link them back to the original entity."
          type: string
          format: uuid
          nullable: true
        purchaseType:
          description: "Purchase Type\r\n\r\nDescription of the client's category group. Essentially, the industry where the virtual card will be utilized.\r\n\r\nSee the Issue Card method in the Purchases API documentation for more details."
          type: string
          nullable: true
        entityId:
          description: "Entity Id\r\n\r\nEntity Guid of the detail record to link them back to the original entity."
          type: string
          nullable: true
        issuedAmount:
          description: "Issued Amount\r\n\r\nAmount of the virtual credit card issued to the client."
          type: number
          format: double
        labelName:
          description: "Label Name\r\n\r\nComma-separated list of labels associated with the sale."
          type: string
          nullable: true
        associationId:
          description: "Association ID\r\n\r\nUsed to associate a virtual card to one or more sales."
          type: string
          nullable: true
        saleGuid:
          description: "Sale Guid\r\n\r\nGuid value returned from the Create Sale method in the Sales API. Associated with \r\nsale transaction detail records."
          type: string
          format: uuid
          nullable: true
        cardGuid:
          description: "Card Guid\r\n\r\nGuid value return from the Issue Card method in the Purchases API. Associated with \r\npurchase and return detail records."
          type: string
          format: uuid
          nullable: true
        dateTime:
          description: "Date Time\r\n\r\nFor Sale detail records, the date of the sale transaction.\r\n\r\nFor Purchase and Return detail records, the date of the purchase or return settlement.\r\n\r\nNote: This date may not be the same as ReleasedDate because release does not occur on weekends and bank holidays."
          type: string
          format: date-time
          nullable: true
    DailyAccountingDetailPaginatedItems:
      type: object
      properties:
        totalItemCount:
          description: Count of all items available in the day's accounting detail.
          type: integer
          format: int32
        pageCount:
          description: Count of pages available in the day's accounting detail.
          type: integer
          format: int32
        pageItemCount:
          description: Count of items in the current page.
          type: integer
          format: int32
        pageNumber:
          description: Sequence number of the current page.
          type: integer
          format: int32
        items:
          description: Collection of accounting detail items for the current page.
          type: array
          items:
            $ref: '#/components/schemas/DailyAccountingDetail'
          nullable: true
    DailyAccountingSummary:
      type: object
      properties:
        merchantGuid:
          description: "Merchant Guid\r\n\r\nUnique identifier assigned to the merchant by ConnexPay."
          type: string
          format: uuid
        clientName:
          description: "Client Name\r\n\r\nUnique name assigned to the client by ConnexPay."
          type: string
          nullable: true
        releasedDate:
          description: "Released Date\r\n\r\nDate on which the requested transactions were released to the client."
          type: string
          format: date
        priorDayCashBalance:
          description: "Prior Day Cash Balance\r\n\r\nThe starting cash balance from the previous day."
          type: number
          format: double
        wireAchToFundCashAmount:
          description: "Wire/ACH to Fund Cash Account Amount (Credit) or Withdraw from Cash Account Amount (Debit)\r\n\r\nFunds transferred between the client's bank account and ConnexPay to fund transactions or to return funds to the client."
          type: number
          format: double
        beginningCashBalance:
          description: "Beginning Cash Balance\r\n\r\nThe funds the client begins the day with."
          type: number
          format: double
        creditSaleAmount:
          description: "Credit Card Sale Amount (Credit)\r\n\r\nTotal amount of incoming credit card sales added to the client's cash balance."
          type: number
          format: double
        achSaleAmount:
          description: "ACH Sale Amount (Credit)\r\n\r\nTotal amount of incoming ACH sales added to the client's cash balance."
          type: number
          format: double
        purchaseAchAmount:
          description: "ACH Purchase Amount (Debit)\r\n\r\nTotal amount of ACH purchases decreasing the client's cash balance."
          type: number
          format: double
        purchaseCardAmount:
          description: "Virtual Card Purchase Amount (Debit)\r\n\r\nTotal amount of issued virtual credit card purchases subtracting from the client's cash balance."
          type: number
          format: double
        purchasePushToCardAmount:
          description: "Purchase Push to Card Amount\r\n\r\nTotal amount of funds paid out through PushToCard subtracting from the client's cash balance."
          type: number
          format: double
        creditVoidAmount:
          description: "Credit Card Void Amount (Debit)\r\n\r\nTotal amount of credit card sales voided subtracting from the client's cash balance."
          type: number
          format: double
        creditReturnAmount:
          description: "Credit Card Return Amount (Debit)\r\n\r\nTotal amount of credit card sales returned subtracting from the client's cash balance."
          type: number
          format: double
        creditChargebackAmount:
          description: "Credit Chargeback Amount\r\n\r\nTotal amount of Chargebacks received on the credit card sales subtracting from the client's cash balance."
          type: number
          format: double
        creditAdjustmentAmount:
          description: "Credit Adjustment Amount\r\n\r\nTotal amount of manual credit adjustments created for the client."
          type: number
          format: double
        achVoidAmount:
          description: "ACH Void Amount (Debit)\r\n\r\nTotal amount of ACH sales voided subtracting from the client's cash balance."
          type: number
          format: double
        achReturnAmount:
          description: "ACH Return (Debit)\r\n\r\nTotal amount of ACH sales returned subtracting from the client's cash balance."
          type: number
          format: double
        purchaseCardReturnAmount:
          description: "Virtual Card Return Amount (Credit)\r\n\r\nTotal amount returned to issued virtual credit cards adding to the client's cash balance."
          type: number
          format: double
        purchaseCardChargebackAmount:
          description: "Purchase Card Chargeback Amount\r\n\r\nTotal amount of Chargebacks received on issued virtual credit cards as part of the dispute process."
          type: number
          format: double
        purchaseAchReturnAmount:
          description: "Purchase - ACH Return Amount (Credit)\r\n\r\nTotal amount returned to issued ACHs adding to the client's cash balance."
          type: number
          format: double
        totalActivity:
          description: "Total Activity\r\n\r\nThe sum of all debits and credits processed on the client's behalf for the previous day."
          type: number
          format: double
        newCashBalance:
          description: "New Cash Balance\r\n\r\nReflects the day's beginning cash balance plus or minus the client's total activity."
          type: number
          format: double
        netDebitCreditToClient:
          description: "Credit/Debit\r\n\r\nThe amount to be credited to or debited from the client's bank account. ConnexPay will collaborate with\r\nthe client to determine the percentage that will be returned to the client's bank account each day."
          type: number
          format: double
        endingCashBalance:
          description: "Ending Cash Balance\r\n\r\nThe client's New Cash Balance plus or minus the Credit/Debit amount."
          type: number
          format: double
        minimumCashBalance:
          description: "Minimum Cash Balance (MCB)\r\n\r\nMinimum funding balance that should be maintained by the client with ConnexPay."
          type: number
          format: double
        achDebitRejectAmount:
          description: "ACH Debit Reject Amount (Credit)\r\n\r\nTotal amount of payments that did not clear the supplier's account. Payments can be rejected for a variety of reasons, including closed accounts, incorrect account numbers, etc."
          type: number
          format: double
    ProblemDetails:
      type: object
      properties:
        title:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        status:
          type: integer
          format: int32
          nullable: true
        detail:
          type: string
          nullable: true
        instance:
          type: string
          nullable: true
      additionalProperties: {}
    TokenIssueAuthenticationTokenRequest:
      type: object
      required:
        - grant_type
        - username
        - password
      properties:
        grant_type:
          type: string
          default: password
        username:
          description: CXP provided username
          type: string
        password:
          description: CXP provided password
          type: string
    SaleCreateTransactionRequest:
      type: object
      required:
        - DeviceGuid
        - Amount
        - ConnexPayTransaction
        - RiskData
      properties:
        DeviceGuid:
          description: Device's Guid provided by ConnexPay
          type: string
          default: '{{Device}}'
        Amount:
          description: >-
            Amount of the transaction that will be processed. Note: this value
            is submitted multiple times (in different formats) within the
            integration to support different purposes i.e. risk analysis,
            merchant processing, etc.  The minimum amount is: $0.50.
          type: number
          default: null
          format: float
        TenderType:
          description: >-
            Allowed values:  "credit" (default if TenderType not provided) and
            "ach"
          type: string
          default: credit
        SequenceNumber:
          description: >-
            Transaction sequence number within client environment. Provide a
            unique SequenceNumber for each new request. If a sale request with
            the same parameter data and the same sequence number is sent within
            30 minutes it will be considered a duplicate request and the sale
            will not process. Note: value is not searchable or reportable in
            Bridge.  Alphanumeric.
          type: string
          default: '{{SequenceNumber}}'
        OrderNumber:
          description: >-
            A value that is commonly used for reporting on and reconciling your
            PayIns and PayOuts.  The Order Number is searchable in the ConnexPay
            Bridge and referenced in Analytics and reporting, and can be any
            identifier within your environment to associate with the sale or
            payment, such as a Record Locator, PNR, or transaction ID.  The
            maximum length is 50 alpha-numeric characters and allows the
            following special characters: [._ /- ].
          type: string
          default: '{{OrderNumber}}'
        SendReceipt:
          description: >-
            Value determines whether or not a customer shall be emailed a
            receipt from the ConnexPay platform if the email address is provided
            in the API customer block. The default value is TRUE. Set to FALSE
            so that an email receipt is not sent to the customer. Set to TRUE or
            leave empty if you want e-mail to be sent. If TRUE, customer's email
            must be included in the "Card.Customer.email" parameter.
          type: boolean
        RiskProcessingOnly:
          description: >-
            Indicator that determines if client would like to evaluate the
            transactions as risk only rather than process as merchant of record
            and create a virtual card. The allowed values:  1. Set to TRUE will
            only run risk validations. If TenderType is not set to Credit,
            setting TRUE will throw a validation error.  2. Set to FALSE will
            run risk validations and an authorization on the card. For this
            option a Processing Merchant account is required, contact ConnexPay
            support if any questions.  3. Set to NULL and your Merchant Level
            settings would apply.
          type: boolean
        StatementDescription:
          description: >-
            US Clients only: The statement description allows a client to
            customize the Merchant name that appears on the cardholder statement
            such that the cardholder recognizes the transaction on their
            statement. ConnexPay recommends sending a recognizable DBA along
            with the PNR i.e. ABC Travel ABC123.  The maximum length is 25
            alpha-numeric characters.  Note: functionality not available for EU
            Merchants and American Express program.
          type: string
          default: '{{StatementDescription}}'
        CustomerID:
          description: >-
            Transaction ID within client environment associated with the
            customer. This value acts as a secondary identifier in conjunction
            with OrderNumber. The value is searchable and reportable in the
            ConnexPay portal. This value may be sent in multiple times within
            the integration for multiple purposes.  The maximum length is 100
            characters and is alpha-numeric.
          type: string
        ActivationDate:
          description: >-
            Set a future date on which to run this sale, at least one day from
            creation date and within 600 days. If this parameter is supplied a
            record for this sale is created, supplied consumer card information
            is internally tokenized, but fraud check and authorization do not
            occur until ConnexPay processes it on the supplied ActivationDate.
            Alternatively, a client can force activation via the Activate API
            (see below). If this date is not supplied a sale is authorized and
            the consumer's credit card is charged immediately.
          type: string
          format: date
        RequestIp:
          description: >-
            Mandatory if TenderType is ACH. Customer's IP Address is a required
            parameter for all ACH Sales transactions to adhere to NACHA
            regulations.
          type: string
        ConnexPayTransaction:
          description: ConnexPay Transaction
          type: object
          required:
            - ExpectedPayments
          properties:
            ExpectedPayments:
              description: >-
                This is the number of outbound payments that will be made to
                suppliers. If paying a single supplier the value is 1, if paying
                two suppliers the value is 2, etc.
              type: integer
              format: int32
        RiskData:
          description: >-
            Mandatory if TenderType is Credit or not set. This will be ignored
            if TenderType is Cash or ACH
          type: object
          properties:
            SessionId:
              description: >-
                If you are using Kount's Device Data Collector, this would be
                the SessionId from that particular session. Do not include this
                property if not using Kount's Device Data Collector.
              type: string
            Name:
              description: >-
                This is the name of the individual making the purchase i.e.
                cardholder who may or may not also be the customer. This value
                is submitted in multiple integration points for different
                purposes. This value/object is specific to fraud mitigation.
                Note: for airline ticket purchases this value may or may not be
                the same as the passenger. Max Length = 64
              type: string
            Gender:
              description: Cardholder gender. "M" or "F".
              type: string
            DateOfBirth:
              description: Cardholder date of birth
              type: string
            BillingPhoneNumber:
              description: >-
                Phone number associated with cardholder making purchase.
                Cardholder billing phone number. More specifically, can be used
                for rule creation or additional identity validation using the
                White Pages Pro add on option.  Phone number up to 15
                characters. Numbers and plus sign (+) allowed only.
              type: string
            BillingAddress1:
              description: >-
                Cardholder billing address 1. This value is used in risk
                analysis and decisioning. More specifically, can be used for
                rule creation or additional identity validation using the White
                Pages Pro add on option.
              type: string
            BillingAddress2:
              description: >-
                Cardholder billing address 2. This value is used in risk
                analysis and decisioning. More specifically, can be used for
                rule creation or additional identity validation using the White
                Pages Pro add on option.
              type: string
            BillingCity:
              description: >-
                Cardholder billing city. This value is used in risk analysis and
                decisioning. More specifically, can be used for rule creation or
                additional identity validation using the White Pages Pro add on
                option.
              type: string
            BillingState:
              description: >-
                Cardholder billing state. This value is used in risk analysis
                and decisioning. More specifically, can be used for rule
                creation or additional identity validation using the White Pages
                Pro add on option.
              type: string
            BillingPostalCode:
              description: >-
                Cardholder billing postal code. This value is used in risk
                analysis and decisioning. More specifically, can be used for
                rule creation or additional identity validation using the White
                Pages Pro add on option. Max Length = 15. Alphanumerics and "-"
                allowed.
              type: string
            BillingCountryCode:
              description: >-
                Cardholder billing country code. This value is used in risk
                analysis and decisioning. More specifically, can be used for
                rule creation or additional identity validation using the White
                Pages Pro add on option.  Length = 2.
              type: string
            Email:
              description: >-
                Cardholder's valid email address. This value is used in risk
                analysis and decisioning. More specifically, can be used for
                rule creation or additional identity validation using the White
                Pages Pro add on option.
              type: string
            ProductType:
              description: >-
                Generalized description of the item added passed as plain text.
                This could be flight, tour, hotel, etc. (This is part of
                shopping cart information in Kount Console). Each transaction
                submitted for risk analysis and decisioning must be submitted
                with one shopping cart item.
              type: string
            ProductDescription:
              description: >-
                Attribute for a specific description of the item being purchased
                i.e. airline ticket. This information is general shopping cart
                information that describes the type of item being purchased.
                ConnexPay suggests clients submitted a high level description
                such as Flight, Hotel, Car Rental, etc... and leverage custom
                parameters to submit more detailed information that can be used
                for rule creation and transaction decisioning.
              type: string
            ProductItem:
              description: >-
                Typically the SKU for an item passed as plain text. This
                information is general shopping cart information to provide
                secondary detail to the ProductDesc above. ConnexPay suggests
                clients submit a high level description such as One Way, Round
                Trip, Seven Nights, etc...and several customer parameters to
                submit more detailed information that can be used for rule
                creation and transaction decisioning.  Field is required by
                Kount therefore some value must be submitted. Alphanumeric.
              type: string
            ProductQuantity:
              description: >-
                Quantity of the item being purchased in the shopping cart. This
                is just a general quantity field.
              type: integer
              format: int32
            ProductPrice:
              description: >-
                Price per unit item, displayed in lowest currency factor -
                expressed in cents. Example: 42400 (which is $424.00).
              type: integer
              format: int32
            OrderNumber:
              description: >-
                Transaction ID within client environment associated with the
                order. The value is searchable and reportable in the Kount
                portal. This value may be sent in multiple instances of the
                integration for multiple purposes. Customers in the travel space
                often send the Record Locator/PNR in this field.  The maximum
                length is 32 alpha-numeric characters and allows dashes ( - ).
              type: string
            SellerId:
              description: >-
                Transaction ID within client environment associated with the
                customer. This value acts as a secondary identifier in
                conjunction with OrderNumber. The value is searchable and
                reportable in the Kount portal. This value may be sent in
                multiple times within the integration for multiple purposes. 
                The maximum length is 32 characters.
              type: string
            FlightData:
              description: Flight Data
              type: object
              properties:
                Airline:
                  description: Name of airline; likely carrier code
                  type: string
                  default: AA
                DepartureAirport:
                  description: Departure airport code
                  type: string
                  default: NY
                DepartureDate:
                  description: 'Departure date of flight. Format: mm/dd/yyyy'
                  type: string
                  default: 06/20/1993
                DestinationAirport:
                  description: Destination airport code
                  type: string
                  default: CA
                HoursToDeparture:
                  description: Time in hours to flight departure
                  type: string
                  default: '5'
                JourneyType:
                  description: Type of journey i.e. Day/Night journey
                  type: string
                  default: Day
                Route:
                  description: The route type i.e. Direct/Indirect
                  type: string
                  default: Direct
                RouteByCountry:
                  description: Complete flight route by country
                  type: string
                  default: NY, CA
            FlightPassengers:
              type: array
              items:
                properties:
                  Country:
                    description: Country of origin of passenger
                    type: string
                    default: USA
                  DateOfBirth:
                    description: DOB of first passenger
                    type: string
                    default: '2020-06-20'
                    format: date
                  Id:
                    description: Passport, drivers license or id# associated with passenger
                    type: string
                    default: JXY123
                  Name:
                    description: >-
                      Passenger information. Each passenger should be sent in
                      it's own object.
                    type: string
                    default: John Doe
                type: object
            CustomParameters:
              description: Custom Parameters. Array.
              type: object
              properties: {}
        Card:
          description: >-
            Customer's card data. Mandatory if TenderType is Credit or not set.
            This will be ignored if TenderType is Cash or ACH.
          type: object
          properties:
            CardNumber:
              description: >-
                Mandatory if Guid field is not provided. Card number.  Must be
                16 characters. (example: 4532538795426624) or token (example:
                FfL7exC7Xe2y6624)
              type: string
            CardHolderName:
              description: >-
                Cardholder's name. Providing information in this field allows a
                user of the ConnexPay portal to search for a transaction using
                the cardholder name
              type: string
            Cvv2:
              description: >-
                The three or four digit CVV code at the back side of the credit
                and debit card. This value is required for all card-not-present
                processing environments
              type: string
            ExpirationDate:
              description: Optional with Token. Card's expiry date in the YYMM format
              type: string
              format: date
            Guid:
              description: >-
                Guid is the unique identifier for a card info generated by
                Connexpay upon previous Sale creation. Create Sale API will
                accept either card info or Guid, but not both
              type: string
            IsRecurring:
              description: >-
                Flagging a transaction as "IsRecurring": true allows a recurring
                sale to be submitted without a valid CVV code, which is only
                intended for scenarios where you might be storing card data to
                perform repeated payments on the same card, such as a monthly
                subscriptions. Typically IsRecurring can be defaulted to False.
              type: boolean
              default: false
            Customer:
              description: Customer data
              type: object
              properties:
                FirstName:
                  description: Mandatory for ACH Sales.  Min Length = 2 Max Length = 30
                  type: string
                LastName:
                  description: Mandatory for ACH Sales. Min Length = 2 Max Length = 30
                  type: string
                Phone:
                  description: >-
                    Customer's phone number. Phone number up to 15 characters.
                    Numbers and plus sign (+) allowed only.
                  type: string
                City:
                  description: Customer's City
                  type: string
                State:
                  description: >-
                    Customer's short name state.  The ISO 3166-2 CA and US state
                    or province code of a customer. Length = 2.
                  type: string
                Country:
                  description: >-
                    Customer's country. The ISO country code of a customer’s
                    country.  Length = 2
                  type: string
                Email:
                  description: >-
                    Customer's valid email address which is available in various
                    reports. It is critical that SendReceipt is set to FALSE so
                    that ConnexPay does not send a receipt to the cardholder
                    when the transaction is processed
                  type: string
                Address1:
                  description: >-
                    Customer billing address 1. It is strongly recommended to
                    send this value in a card-not-present environment such that
                    enhanced Address Validation (AVS) can be performed on
                    transaction and the lowest possible interchange is received
                    on transaction. Note: only the street number value portion
                    of address is used for enhanced AVS check
                  type: string
                Address2:
                  description: >-
                    Customer billing address 2. It is strongly recommended to
                    send this value in a card-not-present environment such that
                    Address Validation (AVS) can be performed on transaction and
                    the lowest possible interchange is received on transaction
                  type: string
                Zip:
                  description: >-
                    Customer billing postal code. It is strongly recommended to
                    send this value in a card-not-present environment such that
                    basic Address Validation (AVS) can be performed on
                    transaction and the lowest possible interchange is received
                    on transaction.  Only the a standard U.S. 5 digit zip code
                    is eligible for basic AVS check. Min Length = 2 Max Length =
                    15. Alphanumerics and "-" allowed.
                  type: string
                DateOfBirth:
                  description: >-
                    Customer's date of birth. Allowed format: YYYY-MM-DD. For
                    example: 2002-05-30
                  type: string
                  format: date
                DriversLicenseNumber:
                  description: >-
                    Customer's driver license number.  Only letters, numbers and
                    a hyphen is allowed
                  type: integer
                  format: int32
                DriversLicenseState:
                  description: >-
                    Mandatory when DriverLicenseNumber is provided. Customer's
                    driver license short name state. The ISO 3166-2 CA and US
                    state or province code of a customer.  Length = 2
                  type: string
                SSN4:
                  description: Last 4 of Customer's Social Security Number
                  type: integer
                  format: int32
            ThreeDS:
              description: >-
                ThreeDS object is required when 3DS authentication parameters
                are being passed in the Sale or Auth.  For US clients: the
                parameters are identified using the 3DS Authentication
                endpoint.  For EU clients: the parameters are identified when a
                cardholder challenge and/or fingerprint authentication is
                required after calling the Create Sale or Auth Only endpoint
                with the BrowserData object details.
              type: object
              properties:
                SecureCode:
                  type: string
                Cavv:
                  description: Cardholder authentication verification value
                  type: string
                Version:
                  description: Version of 3DS being used
                  type: string
                DirectoryServerTransactionID:
                  description: >-
                    Unique identifier provided by the card scheme as part of 3D
                    Secure authentication.
                  type: string
                AcsTransactionId:
                  description: >-
                    Unique Identifier provided by the Access Control Server of
                    the Card Issuer.
                  type: string
                ECI:
                  description: >-
                    Displays the Electronic Commerce Indicator (ECI). The ECI
                    indicates the security level of the payment information
                    provided to the merchant. A value of 0, 1 or 2 is a
                    Mastercard transaction. A value of 5, 6 or 7 is a Visa,
                    American Express, Diners or Discover card.
                  type: string
        BankAccount:
          description: >-
            Customer's Bank Account information. Mandatory if TenderType is ACH.
            This will be ignored if TenderType is Cash or Credit
          type: object
          required:
            - AccountType
            - RoutingNumber
            - AccountNumber
            - NameOnAccount
          properties:
            AccountType:
              description: 'Accepted account types are: Saving or Checking'
              type: string
            RoutingNumber:
              description: 9 Digit routing number
              type: string
            AccountNumber:
              description: Account number up to 20 characters
              type: string
            NameOnAccount:
              description: Name on the account for ACH transfer (upto 50 characters)
              type: string
            AccountAndRoutingNumberToken:
              description: >-
                Encrypted Token previously assigned to Bank Account. Either
                AccountAndRoutingNumberToken or both AccountNumber  and
                RoutingNumber  should be provided.
              type: string
            Customer:
              type: object
              properties:
                FirstName:
                  description: Mandatory for ACH Sales.  Min Length = 2 Max Length = 30
                  type: string
                LastName:
                  description: Mandatory for ACH Sales. Min Length = 2 Max Length = 30
                  type: string
                Phone:
                  description: >-
                    Customer's phone number. Phone number up to 15 characters.
                    Numbers and plus sign (+) allowed only.
                  type: string
                City:
                  description: Customer's City
                  type: string
                State:
                  description: >-
                    Customer's short name state.  The ISO 3166-2 CA and US state
                    or province code of a customer. Length = 2.
                  type: string
                Country:
                  description: >-
                    Customer's country. The ISO country code of a customer’s
                    country.  Length = 2
                  type: string
                Email:
                  description: >-
                    Customer's valid email address which is available in various
                    reports. It is critical that SendReceipt is set to FALSE so
                    that ConnexPay does not send a receipt to the cardholder
                    when the transaction is processed
                  type: string
                Address1:
                  description: >-
                    Customer billing address 1. It is strongly recommended to
                    send this value in a card-not-present environment such that
                    enhanced Address Validation (AVS) can be performed on
                    transaction and the lowest possible interchange is received
                    on transaction. Note: only the street number value portion
                    of address is used for enhanced AVS check
                  type: string
                Address2:
                  description: >-
                    Customer billing address 2. It is strongly recommended to
                    send this value in a card-not-present environment such that
                    Address Validation (AVS) can be performed on transaction and
                    the lowest possible interchange is received on transaction
                  type: string
                Zip:
                  description: >-
                    Customer billing postal code. It is strongly recommended to
                    send this value in a card-not-present environment such that
                    basic Address Validation (AVS) can be performed on
                    transaction and the lowest possible interchange is received
                    on transaction.  Only the a standard U.S. 5 digit zip code
                    is eligible for basic AVS check. Min Length = 2 Max Length =
                    15. Alphanumerics and "-" allowed.
                  type: string
                DateOfBirth:
                  description: >-
                    Customer's date of birth. Allowed format: YYYY-MM-DD. For
                    example: 2002-05-30
                  type: string
                  format: date
                DriversLicenseNumber:
                  description: >-
                    Customer's driver license number.  Only letters, numbers and
                    a hyphen is allowed
                  type: integer
                  format: int32
                DriversLicenseState:
                  description: >-
                    Mandatory when DriverLicenseNumber is provided. Customer's
                    driver license short name state. The ISO 3166-2 CA and US
                    state or province code of a customer.  Length = 2
                  type: string
                SSN4:
                  description: Last 4 of Customer's Social Security Number
                  type: integer
                  format: int32
        Customer:
          description: Customer Data. This will only be used if TenderType is not Credit
          type: object
          properties:
            FirstName:
              description: Mandatory for ACH Sales.  Min Length = 2 Max Length = 30
              type: string
            LastName:
              description: Mandatory for ACH Sales. Min Length = 2 Max Length = 30
              type: string
            Phone:
              description: >-
                Customer's phone number. Phone number up to 15 characters.
                Numbers and plus sign (+) allowed only.
              type: string
            City:
              description: Customer's City
              type: string
            State:
              description: >-
                Customer's short name state.  The ISO 3166-2 CA and US state or
                province code of a customer. Length = 2.
              type: string
            Country:
              description: >-
                Customer's country. The ISO country code of a customer’s
                country.  Length = 2
              type: string
            Email:
              description: >-
                Customer's valid email address which is available in various
                reports. It is critical that SendReceipt is set to FALSE so that
                ConnexPay does not send a receipt to the cardholder when the
                transaction is processed
              type: string
            Address1:
              description: >-
                Customer billing address 1. It is strongly recommended to send
                this value in a card-not-present environment such that enhanced
                Address Validation (AVS) can be performed on transaction and the
                lowest possible interchange is received on transaction. Note:
                only the street number value portion of address is used for
                enhanced AVS check
              type: string
            Address2:
              description: >-
                Customer billing address 2. It is strongly recommended to send
                this value in a card-not-present environment such that Address
                Validation (AVS) can be performed on transaction and the lowest
                possible interchange is received on transaction
              type: string
            Zip:
              description: >-
                Customer billing postal code. It is strongly recommended to send
                this value in a card-not-present environment such that basic
                Address Validation (AVS) can be performed on transaction and the
                lowest possible interchange is received on transaction.  Only
                the a standard U.S. 5 digit zip code is eligible for basic AVS
                check. Min Length = 2 Max Length = 15. Alphanumerics and "-"
                allowed.
              type: string
            DateOfBirth:
              description: >-
                Customer's date of birth. Allowed format: YYYY-MM-DD. For
                example: 2002-05-30
              type: string
              format: date
            DriversLicenseNumber:
              description: >-
                Customer's driver license number.  Only letters, numbers and a
                hyphen is allowed
              type: integer
              format: int32
            DriversLicenseState:
              description: >-
                Mandatory when DriverLicenseNumber is provided. Customer's
                driver license short name state. The ISO 3166-2 CA and US state
                or province code of a customer.  Length = 2
              type: string
            SSN4:
              description: Last 4 of Customer's Social Security Number
              type: integer
              format: int32
        EnhancedData:
          description: >-
            Enhanced Level 2 and Level 3 card data is a set of additional
            information for business, commercial, corporate, purchasing, and
            government cardholders.
          type: object
          properties:
            SaleTax:
              description: Sales Tax amount
              type: string
        AssociationId:
          description: >-
            Utilize the Association ID field to tie a virtual card to a sale or
            sales. For example, if you have several sales and one virtual card
            payment to a supplier, you can add association ID to the sales and
            the virtual card for downstream reporting. The maximum length is 100
            alpha-numeric characters.
          type: string
        LabelIDs:
          description: >-
            Utilize Label IDs to associate a sale to a specific label(s) within
            ConnexPay Bridge UI for your organization. If a sale is tied to an
            incorrect Label, it will not filter or display correctly in Bridge's
            Search Grid. Please contact your Customer Care Consultant for a list
            of valid Label IDs before use.
          type: array
          items:
            type: string
        BrowserData:
          description: >-
            EU Clients: 3D secure parameters required to be submitted with
            Create Sale to initiate 3D secure authentication via ConnexPay's
            interface.   A signed contract for 3D Secure is required in order to
            use this feature.
          type: object
          required:
            - AcceptanceHeader
            - ColorDepth
            - JavaEnabled
            - ScreenHeight
            - ScreenWidth
            - TimeZoneOffset
            - Language
            - RedirectURL
            - UserAgentHeader
          properties:
            AcceptanceHeader:
              description: Required.  Exact content of the http accept header.
              type: string
            ColorDepth:
              description: >-
                Required. Value representing the bit depth of the color palette
                for displaying images, in bits per pixel.
              type: integer
              format: int32
            JavaEnabled:
              description: >-
                True or False response that represents ability of cardholder
                browser to execute Java
              type: boolean
            ScreenHeight:
              description: Total height of the Cardholder's screen in pixels
              type: integer
              format: int32
            ScreenWidth:
              description: Total width of the Cardholder's screen in pixels
              type: integer
              format: int32
            TimeZoneOffset:
              description: >-
                Time Zone difference between browser time zone and UTC time, in
                hours.  Can be positive or negative.
              type: integer
              format: int32
            Language:
              description: Value representing the browser language as defined in IETF BCP47
              type: string
            RedirectURL:
              description: >-
                The merchant URL to which the browser should be redirected after
                the challenge session.
              type: string
            UserAgentHeader:
              description: Exact content of the HTTP user-agent header.
              type: string
    VoidCreateVoidRequest:
      type: object
      required:
        - DeviceGuid
      properties:
        DeviceGuid:
          description: Device’s Guid provided by ConnexPay.
          type: string
        SaleGuid:
          description: Sale Transaction Guid
          type: string
          default: >-
            Conditional Mandatory when SaleReferenceNumber, AuthOnlyGuid and
            ReturnGuid parameters are not present
        ReturnGuid:
          description: Return's Guid
          type: string
          default: >-
            Conditional Mandatory when SaleGuid, AuthOnlyGuid and
            SaleReferenceNumber parameters are not present
        SaleReferenceNumber:
          description: Sale Reference Number
          type: integer
          default: null
          format: int32
        AuthOnlyGuid:
          description: Guid to include in request when voiding an Auth Only request.
          type: string
          default: >-
            Conditional Mandatory when SaleGuid, SaleReferenceNumber and
            ReturnGuid parameters are not present
        VoidReason:
          description: >-
            Indicates the reason the transaction was voided.  Allowed values: 
            1. POST_AUTH_USER_DECLINE 2. DEVICE_TIMEOUT 3. DEVICE_UNAVAILABLE 4.
            PARTIAL_REVERSAL 5. TORN_TRANSACTIONS 6. POST_AUTH_CHIP_DECLINE
          type: string
          default: Optional
        Amount:
          description: >-
            Amount to be voided.  Note: Amount is be used once only for credit
            card Sales and should not exceed corresponding Sale’s Amount.
          type: number
          format: float
        SequenceNumber:
          description: >-
            Transaction sequence number within client environment. Provide a
            unique SequenceNumber for each new request. If the same value is
            sent within 30 minutes it will be considered a duplicate request.
            Note: value is not searchable or reportable in ConnexPay portal. 
            Alphanumeric.
          type: string
          default: Optional
    ReturnItemRequestRequest:
      type: object
      required:
        - DeviceGuid
        - Amount
      properties:
        DeviceGuid:
          description: Device's Guid
          type: string
        SaleGuid:
          description: Mandatory when SaleReferenceNumber field is not sent. Sale's Guid.
          type: string
        SaleReferenceNumber:
          description: Mandatory when SaleGuid field is not sent. Sale's Reference Number
          type: integer
          format: int32
        Amount:
          description: 'Transaction’s amount. Min. amt.: $0.50'
          type: number
          format: float
        SequenceNumber:
          description: >-
            Transaction sequence number within client environment. Provide a
            unique SequenceNumber for each new request. If the same value is
            sent within 30 minutes it will be considered a duplicate request.
            Note: value is not searchable or reportable in ConnexPay portal. 
            Alphanumeric.
          type: string
        ReturnRetryCard:
          description: >-
            Card data to be used in the event a sale return to the original card
            is declined and a retry to a new card should be attempted. This
            attempt needs to be made within 7 days of the failed return
            authorization
          type: object
          properties:
            CardNumber:
              description: Card number. Must be 16 characters.
              type: string
            CardHolderName:
              description: Cardholder's name
              type: string
            Cvv2:
              description: >-
                The three or four digit CVV code at the back side of the credit
                and debit card
              type: integer
              format: int32
            ExpirationDate:
              description: Card's expiry date in the YYMM format
              type: string
              format: date
    CancellationEntireTripCancellationRequest:
      type: object
      required:
        - DeviceGuid
        - SaleGuid
      properties:
        DeviceGuid:
          description: Device's Guid provided by ConnexPay
          type: string
        SaleGuid:
          description: Sale transaction Guid
          type: string
        SequenceNumber:
          description: >-
            Transaction sequence number within client environment. Provide a
            unique SequenceNumber for each new request. If the same value is
            sent within 30 minutes it will be considered a duplicate request.
            Note: value is not searchable or reportable in ConnexPay portal. 
            Alphanumeric.
          type: string
        VoidReason:
          description: Indicates the reason the transaction was voided
          type: string
    AuthenticationAcquireClientAuthorizationRequest:
      type: object
      required:
        - DeviceGuid
        - Amount
        - RiskData
      properties:
        DeviceGuid:
          description: Device's Guid provided by ConnexPay.
          type: string
        Amount:
          description: >-
            Amount of the transaction that will be processed. Note: this value
            is submitted multiple times (in different formats) within the
            integration to support different purposes i.e. risk analysis,
            merchant processing, etc.  The minimum amount is: $0.50.
          type: number
          format: float
        SequenceNumber:
          description: >-
            Transaction sequence number within client environment. Provide a
            unique SequenceNumber for each new request. If the same value is
            sent within 30 minutes it will be considered a duplicate request.
            Note: value is not searchable or reportable in ConnexPay portal. 
            Alphanumeric.
          type: string
        OrderNumber:
          description: >-
            A value that is commonly used for reporting on and reconciling your
            PayIns and PayOuts.  The Order Number is searchable in the ConnexPay
            Bridge and referenced in Analytics and reporting, and can be any
            identifier within your environment to associate with the sale or
            payment, such as a Record Locator, PNR, or transaction ID.  The
            maximum length is 50 alpha-numeric characters and allows the
            following special characters: [._ /- ].
          type: string
        SendReceipt:
          description: >-
            Value determines whether or not a customer shall be emailed a
            receipt from the ConnexPay platform if the email address is provided
            in the API customer block. The default value is TRUE. Set to FALSE
            so that an email receipt is not sent to the customer. Set to TRUE or
            leave empty if you want e-mail to be sent. If TRUE, customer's email
            must be included in the "Card.Customer.email" parameter.
          type: boolean
        StatementDescription:
          description: >-
            US Clients only: The statement description allows a client to
            customize the Merchant name that appears on the cardholder statement
            such that the cardholder recognizes the transaction on their
            statement. ConnexPay recommends sending a recognizable DBA along
            with the PNR i.e. ABC Travel ABC123. Note: functionality not
            applicable for American Express OptBlue program.  The maximun length
            is 25 alpha-numeric characters.
          type: string
        CustomerID:
          description: >-
            Transaction ID within client environment associated with the
            customer. This value acts as a secondary identifier in conjunction
            with OrderNumber. The value is searchable and reportable in the
            ConnexPay portal. This value may be sent in multiple times within
            the integration for multiple purposes.  The maximum length is 100
            characters and is alpha-numeric.
          type: string
        RiskData:
          description: >-
            Mandatory if TenderType is Credit or not set. This will be ignored
            if TenderType is Cash or ACH.
          type: object
          properties:
            SessionId:
              description: >-
                If you are using Kount's Device Data Collector, this would be
                the SessionId from that particular session. Do not include this
                property if not using Kount's Device Data Collector.
              type: string
            Name:
              description: >-
                This is the name of the individual making the purchase i.e.
                cardholder who may or may not also be the customer. This value
                is submitted in multiple integration points for different
                purposes. This value/object is specific to fraud mitigation.
                Note: for airline ticket purchases this value may or may not be
                the same as the passenger. Max Length = 64
              type: string
            Gender:
              description: Cardholder gender. "M" or "F".
              type: string
            DateOfBirth:
              description: Cardholder date of birth
              type: string
            BillingPhoneNumber:
              description: >-
                Phone number associated with cardholder making purchase.
                Cardholder billing phone number. More specifically, can be used
                for rule creation or additional identity validation using the
                White Pages Pro add on option.  Phone number up to 15
                characters. Numbers and plus sign (+) allowed only.
              type: string
            BillingAddress1:
              description: >-
                Cardholder billing address 1. This value is used in risk
                analysis and decisioning. More specifically, can be used for
                rule creation or additional identity validation using the White
                Pages Pro add on option.
              type: string
            BillingAddress2:
              description: >-
                Cardholder billing address 2. This value is used in risk
                analysis and decisioning. More specifically, can be used for
                rule creation or additional identity validation using the White
                Pages Pro add on option.
              type: string
            BillingCity:
              description: >-
                Cardholder billing city. This value is used in risk analysis and
                decisioning. More specifically, can be used for rule creation or
                additional identity validation using the White Pages Pro add on
                option.
              type: string
            BillingState:
              description: >-
                Cardholder billing state. This value is used in risk analysis
                and decisioning. More specifically, can be used for rule
                creation or additional identity validation using the White Pages
                Pro add on option.
              type: string
            BillingPostalCode:
              description: >-
                Cardholder billing postal code. This value is used in risk
                analysis and decisioning. More specifically, can be used for
                rule creation or additional identity validation using the White
                Pages Pro add on option. Max Length = 15. Alphanumerics and "-"
                allowed.
              type: string
            BillingCountryCode:
              description: >-
                Cardholder billing country code. This value is used in risk
                analysis and decisioning. More specifically, can be used for
                rule creation or additional identity validation using the White
                Pages Pro add on option.  Length = 2.
              type: string
            Email:
              description: >-
                Cardholder's valid email address. This value is used in risk
                analysis and decisioning. More specifically, can be used for
                rule creation or additional identity validation using the White
                Pages Pro add on option.
              type: string
            ProductType:
              description: >-
                Generalized description of the item added passed as plain text.
                This could be flight, tour, hotel, etc. (This is part of
                shopping cart information in Kount Console). Each transaction
                submitted for risk analysis and decisioning must be submitted
                with one shopping cart item.
              type: string
            ProductDescription:
              description: >-
                Attribute for a specific description of the item being purchased
                i.e. airline ticket. This information is general shopping cart
                information that describes the type of item being purchased.
                ConnexPay suggests clients submitted a high level description
                such as Flight, Hotel, Car Rental, etc... and leverage custom
                parameters to submit more detailed information that can be used
                for rule creation and transaction decisioning.
              type: string
            ProductItem:
              description: >-
                Typically the SKU for an item passed as plain text. This
                information is general shopping cart information to provide
                secondary detail to the ProductDesc above. ConnexPay suggests
                clients submit a high level description such as One Way, Round
                Trip, Seven Nights, etc...and several customer parameters to
                submit more detailed information that can be used for rule
                creation and transaction decisioning.  Field is required by
                Kount therefore some value must be submitted. Alphanumeric.
              type: string
            ProductQuantity:
              description: >-
                Quantity of the item being purchased in the shopping cart. This
                is just a general quantity field.
              type: integer
              format: int32
            ProductPrice:
              description: >-
                Price per unit item, displayed in lowest currency factor -
                expressed in cents. Example: 42400 (which is $424.00).
              type: integer
              format: int32
            OrderNumber:
              description: >-
                Transaction ID within client environment associated with the
                order. The value is searchable and reportable in the Kount
                portal. This value may be sent in multiple instances of the
                integration for multiple purposes. Customers in the travel space
                often send the Record Locator/PNR in this field.  The maximum
                length is 32 alpha-numeric characters and allows dashes ( - ).
              type: string
            SellerId:
              description: >-
                Transaction ID within client environment associated with the
                customer. This value acts as a secondary identifier in
                conjunction with OrderNumber. The value is searchable and
                reportable in the Kount portal. This value may be sent in
                multiple times within the integration for multiple purposes. 
                The maximum length is 32 characters.
              type: string
            FlightData:
              description: Flight Data
              type: object
              properties:
                Airline:
                  description: Name of airline; likely carrier code
                  type: string
                  default: AA
                DepartureAirport:
                  description: Departure airport code
                  type: string
                  default: NY
                DepartureDate:
                  description: 'Departure date of flight. Format: mm/dd/yyyy'
                  type: string
                  default: 06/20/1993
                DestinationAirport:
                  description: Destination airport code
                  type: string
                  default: CA
                HoursToDeparture:
                  description: Time in hours to flight departure
                  type: string
                  default: '5'
                JourneyType:
                  description: Type of journey i.e. Day/Night journey
                  type: string
                  default: Day
                Route:
                  description: The route type i.e. Direct/Indirect
                  type: string
                  default: Direct
                RouteByCountry:
                  description: Complete flight route by country
                  type: string
                  default: NY, CA
            FlightPassengers:
              type: array
              items:
                properties:
                  Country:
                    description: Country of origin of passenger
                    type: string
                    default: USA
                  DateOfBirth:
                    description: DOB of first passenger
                    type: string
                    default: '2020-06-20'
                    format: date
                  Id:
                    description: Passport, drivers license or id# associated with passenger
                    type: string
                    default: JXY123
                  Name:
                    description: >-
                      Passenger information. Each passenger should be sent in
                      it's own object.
                    type: string
                    default: John Doe
                type: object
            CustomParameters:
              description: Custom Parameters. Array.
              type: object
              properties: {}
        Card:
          description: >-
            Mandatory if TenderType is Credit or not set. Card Data. This will
            be ignored if TenderType is Cash and should be set to NULL or not
            supplied when TenderType is ACH
          type: object
          properties:
            CardNumber:
              description: >-
                Mandatory if Guid field is not provided. Card number.  Must be
                16 characters. (example: 4532538795426624) or token (example:
                FfL7exC7Xe2y6624)
              type: string
            CardHolderName:
              description: >-
                Cardholder's name. Providing information in this field allows a
                user of the ConnexPay portal to search for a transaction using
                the cardholder name
              type: string
            Cvv2:
              description: >-
                The three or four digit CVV code at the back side of the credit
                and debit card. This value is required for all card-not-present
                processing environments
              type: string
            ExpirationDate:
              description: Optional with Token. Card's expiry date in the YYMM format
              type: string
              format: date
            Guid:
              description: >-
                Guid is the unique identifier for a card info generated by
                Connexpay upon previous Sale creation. Create Sale API will
                accept either card info or Guid, but not both
              type: string
            IsRecurring:
              description: >-
                Flagging a transaction as "IsRecurring": true allows a recurring
                sale to be submitted without a valid CVV code, which is only
                intended for scenarios where you might be storing card data to
                perform repeated payments on the same card, such as a monthly
                subscriptions. Typically IsRecurring can be defaulted to False.
              type: boolean
              default: false
            Customer:
              description: Customer data
              type: object
              properties:
                FirstName:
                  description: Mandatory for ACH Sales.  Min Length = 2 Max Length = 30
                  type: string
                LastName:
                  description: Mandatory for ACH Sales. Min Length = 2 Max Length = 30
                  type: string
                Phone:
                  description: >-
                    Customer's phone number. Phone number up to 15 characters.
                    Numbers and plus sign (+) allowed only.
                  type: string
                City:
                  description: Customer's City
                  type: string
                State:
                  description: >-
                    Customer's short name state.  The ISO 3166-2 CA and US state
                    or province code of a customer. Length = 2.
                  type: string
                Country:
                  description: >-
                    Customer's country. The ISO country code of a customer’s
                    country.  Length = 2
                  type: string
                Email:
                  description: >-
                    Customer's valid email address which is available in various
                    reports. It is critical that SendReceipt is set to FALSE so
                    that ConnexPay does not send a receipt to the cardholder
                    when the transaction is processed
                  type: string
                Address1:
                  description: >-
                    Customer billing address 1. It is strongly recommended to
                    send this value in a card-not-present environment such that
                    enhanced Address Validation (AVS) can be performed on
                    transaction and the lowest possible interchange is received
                    on transaction. Note: only the street number value portion
                    of address is used for enhanced AVS check
                  type: string
                Address2:
                  description: >-
                    Customer billing address 2. It is strongly recommended to
                    send this value in a card-not-present environment such that
                    Address Validation (AVS) can be performed on transaction and
                    the lowest possible interchange is received on transaction
                  type: string
                Zip:
                  description: >-
                    Customer billing postal code. It is strongly recommended to
                    send this value in a card-not-present environment such that
                    basic Address Validation (AVS) can be performed on
                    transaction and the lowest possible interchange is received
                    on transaction.  Only the a standard U.S. 5 digit zip code
                    is eligible for basic AVS check. Min Length = 2 Max Length =
                    15. Alphanumerics and "-" allowed.
                  type: string
                DateOfBirth:
                  description: >-
                    Customer's date of birth. Allowed format: YYYY-MM-DD. For
                    example: 2002-05-30
                  type: string
                  format: date
                DriversLicenseNumber:
                  description: >-
                    Customer's driver license number.  Only letters, numbers and
                    a hyphen is allowed
                  type: integer
                  format: int32
                DriversLicenseState:
                  description: >-
                    Mandatory when DriverLicenseNumber is provided. Customer's
                    driver license short name state. The ISO 3166-2 CA and US
                    state or province code of a customer.  Length = 2
                  type: string
                SSN4:
                  description: Last 4 of Customer's Social Security Number
                  type: integer
                  format: int32
            ThreeDS:
              description: >-
                ThreeDS object is required when 3DS authentication parameters
                are being passed in the Sale or Auth.  For US clients: the
                parameters are identified using the 3DS Authentication
                endpoint.  For EU clients: the parameters are identified when a
                cardholder challenge and/or fingerprint authentication is
                required after calling the Create Sale or Auth Only endpoint
                with the BrowserData object details.
              type: object
              properties:
                SecureCode:
                  type: string
                Cavv:
                  description: Cardholder authentication verification value
                  type: string
                Version:
                  description: Version of 3DS being used
                  type: string
                DirectoryServerTransactionID:
                  description: >-
                    Unique identifier provided by the card scheme as part of 3D
                    Secure authentication.
                  type: string
                AcsTransactionId:
                  description: >-
                    Unique Identifier provided by the Access Control Server of
                    the Card Issuer.
                  type: string
                ECI:
                  description: >-
                    Displays the Electronic Commerce Indicator (ECI). The ECI
                    indicates the security level of the payment information
                    provided to the merchant. A value of 0, 1 or 2 is a
                    Mastercard transaction. A value of 5, 6 or 7 is a Visa,
                    American Express, Diners or Discover card.
                  type: string
        BankAccount:
          description: >-
            Mandatory if TenderType is ACH. Bank Account. This will be ignored
            if TenderType is Cash or Credit
          type: object
          required:
            - AccountType
            - RoutingNumber
            - AccountNumber
            - NameOnAccount
          properties:
            AccountType:
              description: 'Accepted account types are: Saving or Checking'
              type: string
            RoutingNumber:
              description: 9 Digit routing number
              type: string
            AccountNumber:
              description: Account number up to 20 characters
              type: string
            NameOnAccount:
              description: Name on the account for ACH transfer (upto 50 characters)
              type: string
            AccountAndRoutingNumberToken:
              description: >-
                Encrypted Token previously assigned to Bank Account. Either
                AccountAndRoutingNumberToken or both AccountNumber  and
                RoutingNumber  should be provided.
              type: string
            Customer:
              type: object
              properties:
                FirstName:
                  description: Mandatory for ACH Sales.  Min Length = 2 Max Length = 30
                  type: string
                LastName:
                  description: Mandatory for ACH Sales. Min Length = 2 Max Length = 30
                  type: string
                Phone:
                  description: >-
                    Customer's phone number. Phone number up to 15 characters.
                    Numbers and plus sign (+) allowed only.
                  type: string
                City:
                  description: Customer's City
                  type: string
                State:
                  description: >-
                    Customer's short name state.  The ISO 3166-2 CA and US state
                    or province code of a customer. Length = 2.
                  type: string
                Country:
                  description: >-
                    Customer's country. The ISO country code of a customer’s
                    country.  Length = 2
                  type: string
                Email:
                  description: >-
                    Customer's valid email address which is available in various
                    reports. It is critical that SendReceipt is set to FALSE so
                    that ConnexPay does not send a receipt to the cardholder
                    when the transaction is processed
                  type: string
                Address1:
                  description: >-
                    Customer billing address 1. It is strongly recommended to
                    send this value in a card-not-present environment such that
                    enhanced Address Validation (AVS) can be performed on
                    transaction and the lowest possible interchange is received
                    on transaction. Note: only the street number value portion
                    of address is used for enhanced AVS check
                  type: string
                Address2:
                  description: >-
                    Customer billing address 2. It is strongly recommended to
                    send this value in a card-not-present environment such that
                    Address Validation (AVS) can be performed on transaction and
                    the lowest possible interchange is received on transaction
                  type: string
                Zip:
                  description: >-
                    Customer billing postal code. It is strongly recommended to
                    send this value in a card-not-present environment such that
                    basic Address Validation (AVS) can be performed on
                    transaction and the lowest possible interchange is received
                    on transaction.  Only the a standard U.S. 5 digit zip code
                    is eligible for basic AVS check. Min Length = 2 Max Length =
                    15. Alphanumerics and "-" allowed.
                  type: string
                DateOfBirth:
                  description: >-
                    Customer's date of birth. Allowed format: YYYY-MM-DD. For
                    example: 2002-05-30
                  type: string
                  format: date
                DriversLicenseNumber:
                  description: >-
                    Customer's driver license number.  Only letters, numbers and
                    a hyphen is allowed
                  type: integer
                  format: int32
                DriversLicenseState:
                  description: >-
                    Mandatory when DriverLicenseNumber is provided. Customer's
                    driver license short name state. The ISO 3166-2 CA and US
                    state or province code of a customer.  Length = 2
                  type: string
                SSN4:
                  description: Last 4 of Customer's Social Security Number
                  type: integer
                  format: int32
        Customer:
          description: Customer Data. This will only be used if TenderType is not Credit
          type: object
          properties:
            FirstName:
              description: Mandatory for ACH Sales.  Min Length = 2 Max Length = 30
              type: string
            LastName:
              description: Mandatory for ACH Sales. Min Length = 2 Max Length = 30
              type: string
            Phone:
              description: >-
                Customer's phone number. Phone number up to 15 characters.
                Numbers and plus sign (+) allowed only.
              type: string
            City:
              description: Customer's City
              type: string
            State:
              description: >-
                Customer's short name state.  The ISO 3166-2 CA and US state or
                province code of a customer. Length = 2.
              type: string
            Country:
              description: >-
                Customer's country. The ISO country code of a customer’s
                country.  Length = 2
              type: string
            Email:
              description: >-
                Customer's valid email address which is available in various
                reports. It is critical that SendReceipt is set to FALSE so that
                ConnexPay does not send a receipt to the cardholder when the
                transaction is processed
              type: string
            Address1:
              description: >-
                Customer billing address 1. It is strongly recommended to send
                this value in a card-not-present environment such that enhanced
                Address Validation (AVS) can be performed on transaction and the
                lowest possible interchange is received on transaction. Note:
                only the street number value portion of address is used for
                enhanced AVS check
              type: string
            Address2:
              description: >-
                Customer billing address 2. It is strongly recommended to send
                this value in a card-not-present environment such that Address
                Validation (AVS) can be performed on transaction and the lowest
                possible interchange is received on transaction
              type: string
            Zip:
              description: >-
                Customer billing postal code. It is strongly recommended to send
                this value in a card-not-present environment such that basic
                Address Validation (AVS) can be performed on transaction and the
                lowest possible interchange is received on transaction.  Only
                the a standard U.S. 5 digit zip code is eligible for basic AVS
                check. Min Length = 2 Max Length = 15. Alphanumerics and "-"
                allowed.
              type: string
            DateOfBirth:
              description: >-
                Customer's date of birth. Allowed format: YYYY-MM-DD. For
                example: 2002-05-30
              type: string
              format: date
            DriversLicenseNumber:
              description: >-
                Customer's driver license number.  Only letters, numbers and a
                hyphen is allowed
              type: integer
              format: int32
            DriversLicenseState:
              description: >-
                Mandatory when DriverLicenseNumber is provided. Customer's
                driver license short name state. The ISO 3166-2 CA and US state
                or province code of a customer.  Length = 2
              type: string
            SSN4:
              description: Last 4 of Customer's Social Security Number
              type: integer
              format: int32
        EnhancedData:
          description: >-
            Enhanced Level 2 and Level 3 card data is a set of additional
            information for business, commercial, corporate, purchasing, and
            government cardholders.
          type: object
          properties:
            SaleTax:
              description: Sales Tax amount
              type: string
        AssociationID:
          description: >-
            Utilize the Association ID field to tie a virtual card to a sale or
            sales. For example, if you have several sales and one virtual card
            payment to a supplier, you can add association ID to the sales and
            the virtual card for downstream reporting. The maximum length is 100
            alpha-numeric characters.
          type: string
        BrowserData:
          description: >-
            3D secure parameters required to be submitted with Auth Only request
            to initiate 3D secure authentication via ConnexPay's interface.  A
            signed contract for 3D Secure is required in order to use this
            feature.
          type: object
          required:
            - AcceptanceHeader
            - ColorDepth
            - JavaEnabled
            - ScreenHeight
            - ScreenWidth
            - TimeZoneOffset
            - Language
            - RedirectURL
            - UserAgentHeader
          properties:
            AcceptanceHeader:
              description: Required.  Exact content of the http accept header.
              type: string
            ColorDepth:
              description: >-
                Required. Value representing the bit depth of the color palette
                for displaying images, in bits per pixel.
              type: integer
              format: int32
            JavaEnabled:
              description: >-
                True or False response that represents ability of cardholder
                browser to execute Java
              type: boolean
            ScreenHeight:
              description: Total height of the Cardholder's screen in pixels
              type: integer
              format: int32
            ScreenWidth:
              description: Total width of the Cardholder's screen in pixels
              type: integer
              format: int32
            TimeZoneOffset:
              description: >-
                Time Zone difference between browser time zone and UTC time, in
                hours.  Can be positive or negative.
              type: integer
              format: int32
            Language:
              description: Value representing the browser language as defined in IETF BCP47
              type: string
            RedirectURL:
              description: >-
                The merchant URL to which the browser should be redirected after
                the challenge session.
              type: string
            UserAgentHeader:
              description: Exact content of the HTTP user-agent header.
              type: string
    TransactionCaptureAuthorizationRequest:
      type: object
      required:
        - DeviceGuid
        - AuthOnlyGuid
      properties:
        DeviceGuid:
          description: Device's Guid provided by ConnexPay.
          type: string
        AuthOnlyGuid:
          description: Guid received from the AuthOnly operation.
          type: string
        SequenceNumber:
          description: >-
            Transaction sequence number within client environment. Provide a
            unique SequenceNumber for each new request. If the same value is
            sent within 30 minutes it will be considered a duplicate request.
            Note: value is not searchable or reportable in ConnexPay portal. 
            Alphanumeric.
          type: string
        ConnexPayTransaction:
          description: ConnexPay Transaction.
          type: object
          required:
            - ExpectedPayments
          properties:
            ExpectedPayments:
              description: >-
                This is the number of outbound payments that will be made to
                suppliers. If paying a single supplier the value is 1, if paying
                two suppliers the value is 2, etc.
              type: integer
              format: int32
        OrderNumber:
          description: >-
            A value that is commonly used for reporting on and reconciling your
            PayIns and PayOuts.  The Order Number is searchable in the ConnexPay
            Bridge and referenced in Analytics and reporting, and can be any
            identifier within your environment to associate with the sale or
            payment, such as a Record Locator, PNR, or transaction ID.  The
            maximum length is 50 alpha-numeric characters and allows the
            following special characters: [._ /- ]. If you provide an Order
            Number in the AUTH request, it will be overwritten with the Order
            Number input in the CAPTURE request.
          type: string
        CustomerID:
          description: >-
            Transaction ID within client environment associated with the
            customer. This value acts as a secondary identifier in conjunction
            with OrderNumber. The value is searchable and reportable in the
            ConnexPay portal. This value may be sent in multiple times within
            the integration for multiple purposes. The maximum length is 100
            characters and is alpha-numeric.
          type: string
        AssociationID:
          description: >-
            Utilize the Association ID field to tie a virtual card to a sale or
            sales. For example, if you have several sales and one virtual card
            payment to a supplier, you can add association ID to the sales and
            the virtual card for downstream reporting. The maximum length is 100
            alpha-numeric characters.
          type: string
    VerificationCardBankAccountRequest:
      type: object
      required:
        - DeviceGuid
      properties:
        DeviceGuid:
          description: Device's Guid provided by ConnexPay.
          type: string
          default: '{{Device}}'
        Card:
          description: Conditional - Mandatory if Verify Card is parameter requested.
          type: object
          properties:
            CardNumber:
              description: >-
                Mandatory if Guid field is not provided. Card number.  Must be
                16 characters. (example: 4532538795426624) or token (example:
                FfL7exC7Xe2y6624)
              type: string
            CardHolderName:
              description: >-
                Cardholder's name. Providing information in this field allows a
                user of the ConnexPay portal to search for a transaction using
                the cardholder name
              type: string
            Cvv2:
              description: >-
                The three or four digit CVV code at the back side of the credit
                and debit card. This value is required for all card-not-present
                processing environments
              type: string
            ExpirationDate:
              description: Optional with Token. Card's expiry date in the YYMM format
              type: string
              format: date
            Guid:
              description: >-
                Guid is the unique identifier for a card info generated by
                Connexpay upon previous Sale creation. Create Sale API will
                accept either card info or Guid, but not both
              type: string
            IsRecurring:
              description: >-
                Flagging a transaction as "IsRecurring": true allows a recurring
                sale to be submitted without a valid CVV code, which is only
                intended for scenarios where you might be storing card data to
                perform repeated payments on the same card, such as a monthly
                subscriptions. Typically IsRecurring can be defaulted to False.
              type: boolean
              default: false
            Customer:
              description: Customer data
              type: object
              properties:
                FirstName:
                  description: Mandatory for ACH Sales.  Min Length = 2 Max Length = 30
                  type: string
                LastName:
                  description: Mandatory for ACH Sales. Min Length = 2 Max Length = 30
                  type: string
                Phone:
                  description: >-
                    Customer's phone number. Phone number up to 15 characters.
                    Numbers and plus sign (+) allowed only.
                  type: string
                City:
                  description: Customer's City
                  type: string
                State:
                  description: >-
                    Customer's short name state.  The ISO 3166-2 CA and US state
                    or province code of a customer. Length = 2.
                  type: string
                Country:
                  description: >-
                    Customer's country. The ISO country code of a customer’s
                    country.  Length = 2
                  type: string
                Email:
                  description: >-
                    Customer's valid email address which is available in various
                    reports. It is critical that SendReceipt is set to FALSE so
                    that ConnexPay does not send a receipt to the cardholder
                    when the transaction is processed
                  type: string
                Address1:
                  description: >-
                    Customer billing address 1. It is strongly recommended to
                    send this value in a card-not-present environment such that
                    enhanced Address Validation (AVS) can be performed on
                    transaction and the lowest possible interchange is received
                    on transaction. Note: only the street number value portion
                    of address is used for enhanced AVS check
                  type: string
                Address2:
                  description: >-
                    Customer billing address 2. It is strongly recommended to
                    send this value in a card-not-present environment such that
                    Address Validation (AVS) can be performed on transaction and
                    the lowest possible interchange is received on transaction
                  type: string
                Zip:
                  description: >-
                    Customer billing postal code. It is strongly recommended to
                    send this value in a card-not-present environment such that
                    basic Address Validation (AVS) can be performed on
                    transaction and the lowest possible interchange is received
                    on transaction.  Only the a standard U.S. 5 digit zip code
                    is eligible for basic AVS check. Min Length = 2 Max Length =
                    15. Alphanumerics and "-" allowed.
                  type: string
                DateOfBirth:
                  description: >-
                    Customer's date of birth. Allowed format: YYYY-MM-DD. For
                    example: 2002-05-30
                  type: string
                  format: date
                DriversLicenseNumber:
                  description: >-
                    Customer's driver license number.  Only letters, numbers and
                    a hyphen is allowed
                  type: integer
                  format: int32
                DriversLicenseState:
                  description: >-
                    Mandatory when DriverLicenseNumber is provided. Customer's
                    driver license short name state. The ISO 3166-2 CA and US
                    state or province code of a customer.  Length = 2
                  type: string
                SSN4:
                  description: Last 4 of Customer's Social Security Number
                  type: integer
                  format: int32
            ThreeDS:
              description: >-
                ThreeDS object is required when 3DS authentication parameters
                are being passed in the Sale or Auth.  For US clients: the
                parameters are identified using the 3DS Authentication
                endpoint.  For EU clients: the parameters are identified when a
                cardholder challenge and/or fingerprint authentication is
                required after calling the Create Sale or Auth Only endpoint
                with the BrowserData object details.
              type: object
              properties:
                SecureCode:
                  type: string
                Cavv:
                  description: Cardholder authentication verification value
                  type: string
                Version:
                  description: Version of 3DS being used
                  type: string
                DirectoryServerTransactionID:
                  description: >-
                    Unique identifier provided by the card scheme as part of 3D
                    Secure authentication.
                  type: string
                AcsTransactionId:
                  description: >-
                    Unique Identifier provided by the Access Control Server of
                    the Card Issuer.
                  type: string
                ECI:
                  description: >-
                    Displays the Electronic Commerce Indicator (ECI). The ECI
                    indicates the security level of the payment information
                    provided to the merchant. A value of 0, 1 or 2 is a
                    Mastercard transaction. A value of 5, 6 or 7 is a Visa,
                    American Express, Diners or Discover card.
                  type: string
        BankAccount:
          description: >-
            Conditional - Mandatory if Verify Bank Account is the parameter
            requested.
          type: object
          required:
            - AccountType
            - RoutingNumber
            - AccountNumber
            - NameOnAccount
          properties:
            AccountType:
              description: 'Accepted account types are: Saving or Checking'
              type: string
            RoutingNumber:
              description: 9 Digit routing number
              type: string
            AccountNumber:
              description: Account number up to 20 characters
              type: string
            NameOnAccount:
              description: Name on the account for ACH transfer (upto 50 characters)
              type: string
            AccountAndRoutingNumberToken:
              description: >-
                Encrypted Token previously assigned to Bank Account. Either
                AccountAndRoutingNumberToken or both AccountNumber  and
                RoutingNumber  should be provided.
              type: string
            Customer:
              type: object
              properties:
                FirstName:
                  description: Mandatory for ACH Sales.  Min Length = 2 Max Length = 30
                  type: string
                LastName:
                  description: Mandatory for ACH Sales. Min Length = 2 Max Length = 30
                  type: string
                Phone:
                  description: >-
                    Customer's phone number. Phone number up to 15 characters.
                    Numbers and plus sign (+) allowed only.
                  type: string
                City:
                  description: Customer's City
                  type: string
                State:
                  description: >-
                    Customer's short name state.  The ISO 3166-2 CA and US state
                    or province code of a customer. Length = 2.
                  type: string
                Country:
                  description: >-
                    Customer's country. The ISO country code of a customer’s
                    country.  Length = 2
                  type: string
                Email:
                  description: >-
                    Customer's valid email address which is available in various
                    reports. It is critical that SendReceipt is set to FALSE so
                    that ConnexPay does not send a receipt to the cardholder
                    when the transaction is processed
                  type: string
                Address1:
                  description: >-
                    Customer billing address 1. It is strongly recommended to
                    send this value in a card-not-present environment such that
                    enhanced Address Validation (AVS) can be performed on
                    transaction and the lowest possible interchange is received
                    on transaction. Note: only the street number value portion
                    of address is used for enhanced AVS check
                  type: string
                Address2:
                  description: >-
                    Customer billing address 2. It is strongly recommended to
                    send this value in a card-not-present environment such that
                    Address Validation (AVS) can be performed on transaction and
                    the lowest possible interchange is received on transaction
                  type: string
                Zip:
                  description: >-
                    Customer billing postal code. It is strongly recommended to
                    send this value in a card-not-present environment such that
                    basic Address Validation (AVS) can be performed on
                    transaction and the lowest possible interchange is received
                    on transaction.  Only the a standard U.S. 5 digit zip code
                    is eligible for basic AVS check. Min Length = 2 Max Length =
                    15. Alphanumerics and "-" allowed.
                  type: string
                DateOfBirth:
                  description: >-
                    Customer's date of birth. Allowed format: YYYY-MM-DD. For
                    example: 2002-05-30
                  type: string
                  format: date
                DriversLicenseNumber:
                  description: >-
                    Customer's driver license number.  Only letters, numbers and
                    a hyphen is allowed
                  type: integer
                  format: int32
                DriversLicenseState:
                  description: >-
                    Mandatory when DriverLicenseNumber is provided. Customer's
                    driver license short name state. The ISO 3166-2 CA and US
                    state or province code of a customer.  Length = 2
                  type: string
                SSN4:
                  description: Last 4 of Customer's Social Security Number
                  type: integer
                  format: int32
    AuthenticationObtain3DSecureAuthenticationRequest:
      type: object
      required:
        - Card
        - DeviceGuid
        - BrowserData
        - Amount
      properties:
        Card:
          description: Customer's card data. CardNumber and CardHolderName are required.
          type: object
          properties:
            CardNumber:
              description: >-
                Mandatory if Guid field is not provided. Card number.  Must be
                16 characters. (example: 4532538795426624) or token (example:
                FfL7exC7Xe2y6624)
              type: string
            CardHolderName:
              description: >-
                Cardholder's name. Providing information in this field allows a
                user of the ConnexPay portal to search for a transaction using
                the cardholder name
              type: string
            Cvv2:
              description: >-
                The three or four digit CVV code at the back side of the credit
                and debit card. This value is required for all card-not-present
                processing environments
              type: string
            ExpirationDate:
              description: Optional with Token. Card's expiry date in the YYMM format
              type: string
              format: date
            Guid:
              description: >-
                Guid is the unique identifier for a card info generated by
                Connexpay upon previous Sale creation. Create Sale API will
                accept either card info or Guid, but not both
              type: string
            IsRecurring:
              description: >-
                Flagging a transaction as "IsRecurring": true allows a recurring
                sale to be submitted without a valid CVV code, which is only
                intended for scenarios where you might be storing card data to
                perform repeated payments on the same card, such as a monthly
                subscriptions. Typically IsRecurring can be defaulted to False.
              type: boolean
              default: false
            Customer:
              description: Customer data
              type: object
              properties:
                FirstName:
                  description: Mandatory for ACH Sales.  Min Length = 2 Max Length = 30
                  type: string
                LastName:
                  description: Mandatory for ACH Sales. Min Length = 2 Max Length = 30
                  type: string
                Phone:
                  description: >-
                    Customer's phone number. Phone number up to 15 characters.
                    Numbers and plus sign (+) allowed only.
                  type: string
                City:
                  description: Customer's City
                  type: string
                State:
                  description: >-
                    Customer's short name state.  The ISO 3166-2 CA and US state
                    or province code of a customer. Length = 2.
                  type: string
                Country:
                  description: >-
                    Customer's country. The ISO country code of a customer’s
                    country.  Length = 2
                  type: string
                Email:
                  description: >-
                    Customer's valid email address which is available in various
                    reports. It is critical that SendReceipt is set to FALSE so
                    that ConnexPay does not send a receipt to the cardholder
                    when the transaction is processed
                  type: string
                Address1:
                  description: >-
                    Customer billing address 1. It is strongly recommended to
                    send this value in a card-not-present environment such that
                    enhanced Address Validation (AVS) can be performed on
                    transaction and the lowest possible interchange is received
                    on transaction. Note: only the street number value portion
                    of address is used for enhanced AVS check
                  type: string
                Address2:
                  description: >-
                    Customer billing address 2. It is strongly recommended to
                    send this value in a card-not-present environment such that
                    Address Validation (AVS) can be performed on transaction and
                    the lowest possible interchange is received on transaction
                  type: string
                Zip:
                  description: >-
                    Customer billing postal code. It is strongly recommended to
                    send this value in a card-not-present environment such that
                    basic Address Validation (AVS) can be performed on
                    transaction and the lowest possible interchange is received
                    on transaction.  Only the a standard U.S. 5 digit zip code
                    is eligible for basic AVS check. Min Length = 2 Max Length =
                    15. Alphanumerics and "-" allowed.
                  type: string
                DateOfBirth:
                  description: >-
                    Customer's date of birth. Allowed format: YYYY-MM-DD. For
                    example: 2002-05-30
                  type: string
                  format: date
                DriversLicenseNumber:
                  description: >-
                    Customer's driver license number.  Only letters, numbers and
                    a hyphen is allowed
                  type: integer
                  format: int32
                DriversLicenseState:
                  description: >-
                    Mandatory when DriverLicenseNumber is provided. Customer's
                    driver license short name state. The ISO 3166-2 CA and US
                    state or province code of a customer.  Length = 2
                  type: string
                SSN4:
                  description: Last 4 of Customer's Social Security Number
                  type: integer
                  format: int32
            ThreeDS:
              description: >-
                ThreeDS object is required when 3DS authentication parameters
                are being passed in the Sale or Auth.  For US clients: the
                parameters are identified using the 3DS Authentication
                endpoint.  For EU clients: the parameters are identified when a
                cardholder challenge and/or fingerprint authentication is
                required after calling the Create Sale or Auth Only endpoint
                with the BrowserData object details.
              type: object
              properties:
                SecureCode:
                  type: string
                Cavv:
                  description: Cardholder authentication verification value
                  type: string
                Version:
                  description: Version of 3DS being used
                  type: string
                DirectoryServerTransactionID:
                  description: >-
                    Unique identifier provided by the card scheme as part of 3D
                    Secure authentication.
                  type: string
                AcsTransactionId:
                  description: >-
                    Unique Identifier provided by the Access Control Server of
                    the Card Issuer.
                  type: string
                ECI:
                  description: >-
                    Displays the Electronic Commerce Indicator (ECI). The ECI
                    indicates the security level of the payment information
                    provided to the merchant. A value of 0, 1 or 2 is a
                    Mastercard transaction. A value of 5, 6 or 7 is a Visa,
                    American Express, Diners or Discover card.
                  type: string
        DeviceGuid:
          description: Device's Guid as assigned by ConnexPay.
          type: string
          default: '{{deviceGuid}}'
        BrowserData:
          description: >-
            BrowserData is required in order to successfully respond to a
            cardholder challenge of the authentication.
          type: object
          required:
            - AcceptanceHeader
            - ColorDepth
            - JavaEnabled
            - ScreenHeight
            - ScreenWidth
            - TimeZoneOffset
            - Language
            - RedirectURL
            - UserAgentHeader
          properties:
            AcceptanceHeader:
              description: Required.  Exact content of the http accept header.
              type: string
            ColorDepth:
              description: >-
                Required. Value representing the bit depth of the color palette
                for displaying images, in bits per pixel.
              type: integer
              format: int32
            JavaEnabled:
              description: >-
                True or False response that represents ability of cardholder
                browser to execute Java
              type: boolean
            ScreenHeight:
              description: Total height of the Cardholder's screen in pixels
              type: integer
              format: int32
            ScreenWidth:
              description: Total width of the Cardholder's screen in pixels
              type: integer
              format: int32
            TimeZoneOffset:
              description: >-
                Time Zone difference between browser time zone and UTC time, in
                hours.  Can be positive or negative.
              type: integer
              format: int32
            Language:
              description: Value representing the browser language as defined in IETF BCP47
              type: string
            RedirectURL:
              description: >-
                The merchant URL to which the browser should be redirected after
                the challenge session.
              type: string
            UserAgentHeader:
              description: Exact content of the HTTP user-agent header.
              type: string
        Amount:
          description: Amount of the transaction being 3DS authenticated
          type: number
          default: null
          format: float
    SaleUpdateDelayedActivationRequest:
      type: object
      required:
        - DeviceGuid
        - SaleGuid
        - Amount
      properties:
        DeviceGuid:
          description: Device's Guid provided by ConnexPay.
          type: string
        SaleGuid:
          description: >-
            Sales's Guid that was provided by ConnexPay upon initial creation of
            the delayed activation sale.
          type: string
        Amount:
          description: >-
            Amount of the transaction that will be processed. Note: this value
            is submitted multiple times (in different formats) within the
            integration to support different purposes i.e. risk analysis,
            merchant processing, etc.  The minimun amount is: $0.50.
          type: number
          format: float
        ActivationDate:
          description: >-
            Set a future date on which to run this sale, at least one day from
            creation date and within 600 days.
          type: string
          format: date
    SaleSearchSalesRequest:
      type: object
      properties:
        MerchantGuid:
          description: Merchant’s Guid.
          type: string
          default: Mandatory
        AmountFrom:
          description: 'Amount of the transaction. Min. amt.: $0.50'
          type: number
          default: null
          format: float
        AmountTo:
          description: 'Amount of the transaction. Min. amt.: $0.50'
          type: number
          default: null
          format: float
        CardHolderName:
          description: Cardholder’s name.
          type: string
          default: Optional
        CardLastFour:
          description: Card last four number.
          type: string
          default: Optional
        CardType:
          description: Card type.
          type: string
          default: Optional
        InvoiceNumber:
          description: Sale’s InvoiceNumber.
          type: integer
          default: null
          format: int32
        OrderNumber:
          description: Sale’s order number. Length = 17.
          type: string
          default: Optional
        OrderDateFrom:
          description: Sale’s order Date.
          type: string
          default: Optional
          format: date
        OrderDateTo:
          description: Sale’s order Date.
          type: string
          default: Optional
          format: date
        TimeStampFrom:
          description: Sale’s TimeStamp.
          type: string
          default: Optional
          format: date
        TimeStampTo:
          description: Sale’s TimeStamp.
          type: string
          default: Optional
          format: date
        Status:
          description: >-
            Sale’s status. Allowed values:  1. Transaction - Approved 2.
            Transaction - Declined 3. Transaction - Created - Local 4.
            Transaction - Created - Error: Processor not reached 5. Transaction
            - Processor Error 6. Transaction - Approved - Warning
          type: string
          default: Optional
        MerchantCustomerId:
          description: Merchant Customer Id.
          type: string
          default: Optional
        Activated:
          description: Delayed Activation Sales to be included or not
          type: boolean
          default: false
        ActivationDateFrom:
          description: >-
            Activation Start Date. This field is applicable only when Activated
            flag is set to true.
          type: string
          default: Optional
          format: date
        ActivationDateTo:
          description: >-
            Activation End Date. This field is applicable only when Activated
            flag is set to true.
          type: string
          default: Optional
          format: date
    VoidSearchVoidsRequest:
      type: object
      properties:
        MerchantGuid:
          description: Merchant’s Guid.
          type: string
          default: Mandatory
        VoidReason:
          description: >-
            Indicates the reason the transaction was voided.  Allowed values: 
            1. POST_AUTH_USER_DECLINE 2. DEVICE_TIMEOUT 3. DEVICE_UNAVAILABLE 4.
            PARTIAL_REVERSAL 5. TORN_TRANSACTIONS 6. POST_AUTH_CHIP_DECLINE
          type: string
          default: Optional
        Status:
          description: >-
            Void’s status.  Allowed values:  1. Transaction - Approved 2.
            Transaction - Declined 3. Transaction - Created - Local 4.
            Transaction - Created - Error: Processor not reached 5. Transaction
            - Processor Error 6. Transaction - Approved - Warning
          type: string
          default: Optional
        TimeStampFrom:
          description: Void’s TimeStamp.
          type: string
          default: Optional
          format: date
        TimeStampTo:
          description: Void’s TimeStamp.
          type: string
          default: Optional
          format: date
    ReturnSearchSaleReturnsRequest:
      type: object
      properties:
        MerchantGuid:
          description: Merchant’s Guid.
          type: string
          default: Mandatory
        AmountFrom:
          description: 'Amount of the transaction. Min. amt.: $0.50'
          type: number
          default: null
          format: float
        AmountTo:
          description: 'Amount of the transaction. Min. amt.: $0.50'
          type: number
          default: null
          format: float
        CardHolderName:
          description: >-
            Cardholder’s name. Providing information in this field allows a user
            of the ConnexPay portal to search for a transaction using the
            cardholder name.
          type: string
          default: Optional
        Status:
          description: >-
            Return’s status.  Allowed values:  1. Transaction - Approved 2.
            Transaction - Declined 3. Transaction - Created - Local 4.
            Transaction - Created - Error: Processor not reached 5. Transaction
            - Processor Error 6. Transaction - Approved - Warning
          type: string
          default: Optional
        TimeStampFrom:
          description: Return’s TimeStamp.
          type: string
          default: Optional
          format: date
        TimeStampTo:
          description: Return’s TimeStamp.
          type: string
          default: Optional
          format: date
    ValidationSearchVerifyOperationRequest:
      type: object
      properties:
        MerchantGuid:
          description: Merchant’s Guid.
          type: string
          default: Mandatory
        CardLastFour:
          description: Card last four number.
          type: string
          default: Optional
        CardHolderName:
          description: >-
            Cardholder’s name. Providing information in this field allows a user
            of the ConnexPay portal to search for a transaction using the
            cardholder name.
          type: string
          default: Optional
        CardType:
          description: Card Type.
          type: string
          default: Optional
        TimeStampFrom:
          description: Verify’s TimeStamp From.
          type: string
          default: Optional
          format: date
        TimeStampTo:
          description: Verify’s TimeStamp To.
          type: string
          default: Optional
          format: date
        Status:
          description: >-
            Verify’s status.  Allowed values:  1. Transaction - Approved 2.
            Transaction - Declined 3. Transaction - Created - Local 4.
            Transaction - Created - Error: Processor not reached 5. Transaction
            - Processor Error 6. Transaction - Approved - Warning
          type: string
          default: Optional
    TokenRequestHppTokenRequest:
      type: object
      required:
        - MerchantName
        - Sale
      properties:
        MerchantName:
          description: >-
            Merchant Name. ConnexPay displays this on the Hosted Payment Page.
            The max length is 100 characters.
          type: string
        Description:
          description: >-
            Additional information ConnexPay can display in the Hosted Payment
            Page. The max length is 2048 characters.
          type: string
        ResultRedirectUrl:
          description: >-
            This is a ConnexPay CLIENT server route ConnexPay uses to (re)direct
            the consumer payment result back to our client upon payment success,
            failure or cancel. If this data is not set, then it will use the
            default one from ConnexPay.
          type: string
        LogoUrl:
          description: >-
            ConnexPay can display this instead of “MerchantName” in the payment
            dialog.
          type: string
        TenderTypeOptions:
          description: >-
            Payment types you wish to make available to your consumer when they
            enter payment information into the Hosted Payment Page. Options are
            "ACH", "Credit", "GooglePay", and "ApplePay".
          type: array
          default:
            - Credit
          items:
            type: string
        Expiration:
          description: >-
            Client can request a specific expiration date to identify when the
            HPP Link will expire. Timestamps will be converted to UTC for
            consistency within the ConnexPay environment.
          type: string
          default: Current DateTime UTC
          format: date-time
        Sale:
          type: object
          required:
            - DeviceGuid
            - Amount
          properties:
            DeviceGuid:
              description: Device's Guid provided by ConnexPay
              type: string
            Amount:
              description: >-
                Amount of the transaction that will be processed. Note: this
                value is submitted multiple times (in different formats) within
                the integration to support different purposes i.e. risk
                analysis, merchant processinging, etc.  The minimun amount is:
                $0.50.
              type: integer
              format: int64
            SequenceNumber:
              description: >-
                Transaction sequence number within client environment. Note:
                value is not searchable or reportable in ConnexPay portal. 
                Alphanumeric.
              type: string
            OrderNumber:
              description: >-
                This is the most common number you'll see throughout the
                ConnexPay Portal.  Transaction ID within client environment
                associated with the order. The value is searchable and
                reportable in the ConnexPay portal. This value may be sent in
                multiple instances of the integration for multiple purposes.
                Customers in the travel space often send the Record Locator/PNR
                in this field.  The maximum length is 50 alpha-numeric
                characters and allows dashes ( - ).
              type: string
            SendReceipt:
              description: >-
                Value determines whether or not a customer shall be emailed a
                receipt from the ConnexPay platform if the email address is
                provided in the API customer block. The default value is TRUE.
                Set to FALSE so that an email receipt is not sent to the
                customer. Set to TRUE or leave empty if you want e-mail to be
                sent. If TRUE, customer's email must be included in the
                "Card.Customer.email" parameter.
              type: boolean
            RiskProcessingOnly:
              description: >-
                Indicator that determines if client would like to evaluate the
                transactions as risk only rather than process as merchant of
                record and create a virtual card. The allowed values:  1. Set to
                TRUE will only run risk validations. If TenderType is set to
                Cash, setting TRUE will throw a validation error.  2. Set to
                FALSE will run risk validations and an authorization on the
                card. For this option a Processing Merchant account is required,
                contact ConnexPay support if any questions.  3. Set to NULL and
                your Merchant Level settings would apply.
              type: boolean
            StatementDescription:
              description: >-
                The statement description allows a client to customize the
                Merchant name that appears on the cardholder statement such that
                the cardholder recognizes the transaction on their statement.
                ConnexPay recommends sending a recognizable DBA along with the
                PNR i.e. ABC Travel ABC123. Note: functionality not applicable
                for American Express OptBlue program.  The maximun length is 25
                alpha-numeric characters.
              type: string
            CustomerID:
              description: >-
                Transaction ID within client environment associated with the
                customer. This value acts as a secondary identifier in
                conjunction with OrderNumber. The value is searchable and
                reportable in the ConnexPay portal. This value may be sent in
                multiple times within the integration for multiple purposes. 
                The maximum length is 50 characters and is alpha-numeric.
              type: string
            ActivationDate:
              description: >-
                Set a future date on which to run this sale, at least one day
                from creation date and within one year. If this parameter is
                supplied a record for this sale is created, supplied consumer
                card information is internally tokenized, but fraud check and
                authorization do not occur until ConnexPay processes it on the
                supplied ActivationDate. Alternatively, a client can force
                activation via the Activate API (see below). If this date is not
                supplied a sale is authorized immediately.
              type: string
            GroupId:
              description: >-
                When needing to issue a Virtual Card that ties to more than one
                Sale transaction, you can send in a GroupId (with the same
                GroupId) on the Sales that you need to group together. By
                including a common GroupId for two or more Sales transaction, a
                Virtual Card may then be created for the sum of the Sales within
                that GroupId.  A common use case for this is when multiple
                families are going on a cruise - each family may want to pay
                separately on their credit card. However, the Travel Agent may
                want to pay for the cruise with one virtual card.  The maximum
                length is 25 alpha-numeric characters.  This is for limited use
                - please contact your Customer Success Manager if you would like
                to enable this functionality.
              type: string
    FundingMerchantCashBalanceRequest:
      type: object
      required:
        - merchantGUID
        - amount
        - isFundCashBalance
      properties:
        merchantGUID:
          description: The merchant's GUID. Value provided by ConnexPay.
          type: string
        amount:
          description: >-
            Self-service funding amount that will be processed. Maximum
            transaction and daily funding limits are set by ConnexPay.
          type: number
          format: float
        isFundCashBalance:
          description: >-
            true: Fund your merchant cash balance from your merchant bank
            account. false: Withdraw your merchant cash balance and ConnexPay
            will credit your merchant bank account.
          type: boolean
        customerID:
          description: >-
            The Customer ID value can be used to reconcile this entry to a Sale
            or Purchase in the future by using the same Customer ID.
          type: string
    FundingTransferMerchantCashBalanceRequest:
      type: object
      required:
        - TransferredFrom
        - TransferredTo
        - Amount
      properties:
        TransferredFrom:
          description: >-
            The merchant's GUID of the withdrawn account. Value provided by
            ConnexPay.
          type: string
        TransferredTo:
          description: >-
            The merchant's GUID of the deposited account. Value provided by
            ConnexPay.
          type: string
        Amount:
          description: >-
            Transferred funding amount that will be processed. Maximum
            transaction and daily funding limits are set by ConnexPay.
          type: number
          format: float
    CardIssuanceCreateVirtualCardRequest:
      type: object
      required:
        - MerchantGuid
        - FirstName
        - LastName
        - AmountLimit
        - PurchaseType
      properties:
        MerchantGuid:
          description: >-
            Merchant's Guid. Application-level value that indicates a virtual
            card is being requested for client's account. Value provided by
            ConnexPay.
          type: string
        FirstName:
          description: >-
            Cardholder's first name. This is the first name placed on the
            virtual card provided to the supplier. The value is also searchable
            in the ConnexPay portal.
          type: string
        LastName:
          description: >-
            Cardholder's last name. This is the last name placed on the virtual
            card provided to the supplier. The value is also searchable in the
            ConnexPay portal.
          type: string
        Phone:
          description: >-
            Cardholder's phone number. Phone number up to 20 character string,
            numbers and plus sign (+) allowed only. Telephone number of the user
            (including area code), prepended by the + symbol and the 1- to
            3-digit country calling code. Do not include hyphens, spaces, or
            parentheses.
          type: string
        Address1:
          description: >-
            Cardholder's address line 1. The street number is used by the
            supplier when submitting the transaction to perform an AVS check.
            Alphanumerics and [,.-'] are allowed.
          type: string
        Address2:
          description: Cardholder's address line 2. Alphanumerics and [,.-'] are allowed.
          type: string
        City:
          description: Cardholder's city.
          type: string
        State:
          description: >-
            Cardholder's short name state.  The ISO 3166-2 CA and US state or
            province code of a user. Length = 2. If a non U.S. or Canadian value
            is submitted the virtual card request will not be processed and an
            error response returned.
          type: string
        ZipCode:
          description: >-
            Cardholder's zipcode. The zip code is used by the supplier when
            submitting the transaction to perform an AVS check.  The Zipcode
            must be between 1 and 10 characters long, only numbers and letters
            are allowed.
          type: string
        Country:
          description: >-
            Cardholder's country.  Only alpha-2 digit country code allowed and
            numbers are not allowed.  See ISO-3166 country list of Alpha-2
            country codes (https://www.iso.org/obp/ui/) .
          type: string
        UsageLimit:
          description: >-
            Security Control: Maximum number of times the card may be
            authorized. The maximum allowed field value is 99, and if you do not
            provide a value the card will be considered unlimited. Authorization
            attempts exceeding the provided value will be declined. Even though
            a virtual card is often considered a “one-time-use” card, some
            suppliers may need to authorize a card multiple times
            (pre-authorizations, a purchase comprised of multiple tickets, etc.)
            and you may consider a value that is not overly restrictive to avoid
            unwanted declines.
          type: integer
          format: int64
        AmountLimit:
          description: >-
            Security Control: Maximum dollar amount the card can be authorized
            and settled, which must be less than or equal to $5,000,000.00. The
            value must incorporate any anticipated overages such as currency
            conversion or taxes that a supplier may associate with the
            transaction. If a supplier attempts to authorize a card for more
            than the amount limit it will be declined.
          type: number
          format: float
        ExpirationDate:
          description: >-
            The ExpirationDate (YYYY-MM-DD) is the date to be provided to the
            supplier as the actual expiration date for the virtual card. The
            recommendation is to set the ExpirationDate one or two years in the
            future and set the TerminateDate just a day or two after the VCC is
            expected to be processed to avoid acceptance issues.  The expiration
            date cannot be more than 36 months in the future. If an expiration
            date is not provided, the expiration will default to issue date plus
            three years. For cards issued outside of the US/Canada, the
            expiration date will default to issue date plus three years and can
            not be overwritten - even if this parameter is included in the
            request. Note, Returns can still be processed on expired or
            terminated VCCs.
          type: string
          format: date
        TerminateDate:
          description: >-
            The TerminateDate (YYYY-MM-DD format) is the date the Virtual Credit
            Card will be terminated by ConnexPay. TerminateDate is different
            than ExpirationDate in that TerminateDate indicates the actual date
            the card will no longer be active.  The recommendation is to set the
            ExpirationDate one or two years in the future and set the
            TerminateDate just a day or two after the VCC is expected to be
            processed. If a terminate date is not indicated, the card will be
            inactivated as of the expiration date. Note, Returns can still be
            processed on terminated VCCs.
          type: string
          format: date
        PurchaseType:
          description: >-
            Security Control: The industry where the virtual card will be
            utilized. For example, if value set to airline and the card is used
            at hotel, it will be declined. Available purchase type values are:
            '01' (Airline), '02' (Hotels and Resorts), '03' (Car Rental), '04'
            (Cable, Satellite, Television, and Radio Services), '05' (Cruise
            Lines), '6' (Travel), '11' (Medical Services and Health
            Practitioners), '21' (Advertising Services), '22' (Misc Advertising
            and Business Services), '23' (Ticketing), '31' (Insurance Sales,
            Underwriting, and Premiums), '32' (Insurance and Real Estate Codes),
            '91' (Restaurants and Food Services), and '93' (Tax Payments)..
          type: string
        SequenceNumber:
          description: >-
            Transaction sequence number within client environment. Note: value
            is not searchable or reportable in ConnexPay portal.  Alphanumeric.
          type: string
        OrderNumber:
          description: >-
            A value that is commonly used for reporting on and reconciling your
            PayIns and PayOuts.  The Order Number is searchable in the ConnexPay
            Bridge and referenced in Analytics and reporting, and can be any
            identifier within your environment to associate with the sale or
            payment, such as a Record Locator, PNR, or transaction ID.  The
            maximum length is 50 alpha-numeric characters and allows the
            following special characters: [._ /- ].
          type: string
          default: '{{OrderNumber}}'
        IncomingTransactionCode:
          description: >-
            ITC for short Application level setting to associate the virtual
            card request with an original sale or sale group. The value is
            provided in the sale response of the original sale transaction, or
            in the Group Sale response of the group sale. All virtual card
            requests must be associated with an original sale or group
            transaction.
          type: string
        PayeeId:
          description: >-
            The PayeeId is used to assist with Intelligent Routing
            functionality. This field was previously labeled as the Supplier ID
            and serves the same purpose for Intelligent Routing; however, it
            also supports additional functionality if a Payee has been created.
            Creating a Payee allows you complete control over the type of
            virtual card used to pay your payee and minimizes the data that must
            be passed in each card request.  The field accepts up to 100
            alpha-numeric characters. Reference our MerchantPayees APIs for
            additional details.
          type: string
        NonDomesticSupplier:
          description: >-
            We can issue the “Global VCC” if the Supplier accepting that VCC has
            an overseas merchant account. This is an optional field. Indicating
            true will result in issuing this Global VCC. Indicating false (or
            not including this property in your request) will result in
            receiving a VCC created for domestic use.
          type: boolean
        Transmission:
          description: >-
            URL Links (email) or a text document (fax) to virtual cards can be
            emailed/faxed by including the VCC Transmission object in the
            IssueCard API call. Including the transmission object for email also
            allows you to pull back a URL you can use within your application to
            direct a user to a visual representation of the virtual card.
          type: object
          properties:
            TransmissionMethods:
              description: >-
                Methods of Transmission. Supported methods: Email, Link, Fax.
                Populate this parameter as 'Email' if you want to email the
                virtual card to a customer or supplier. Use the 'Link' option to
                have a URL included in the response.  Use the "Fax" option to
                fax the virtual card to a customer or supplier.
              type: array
              items:
                type: string
            EmailRecipient:
              description: >-
                Mandatory for email transmission. The email address of the
                intended recipient. 255 char max.
              type: string
            MerchantPhoneNumber:
              description: >-
                This is the phone number that should display on the virtual card
                and is the number that should be used if the link has expired.
                Up to 15 characters. Numbers and plus sign (+) allowed only.
              type: string
            EmailFrom:
              description: >-
                Mandatory for email transmission. This will be the email address
                that populates the ‘reply to’ section of the email message. 255
                char max.
              type: string
            RecipientName:
              description: >-
                Mandatory for email or fax transmission. A descriptive name of
                the email or fax recipient. 255 char max
              type: string
            Subject:
              description: >-
                Mandatory for email or fax transmission. High-level subject line
                description of the transmission contents. 255 char max.
              type: string
            Message:
              description: >-
                Mandatory for email or fax transmission. The message body of the
                email or fax. 2048 char max.
              type: string
            DaysToExpire:
              description: >-
                Mandatory for email transmission. The number of days after card
                issuance until link to VC expires. Range: 1-999 days.
              type: string
            FaxFrom:
              description: >-
                Mandatory for fax transmission. This can be the client name or
                fax number the fax is coming from that populates the ‘FaxFrom’
                section of the fax. 255 char max.
              type: string
            FaxRecipient:
              description: >-
                Mandatory for fax transmissions.  The fax number of the intended
                recipient.
              type: string
        ReturnCardData:
          description: >-
            Optional field that may be set to true or false. When set to a value
            of true or if the field is not provided at all, card data is
            returned in the response. When set to a value of false, the Card
            Account Number and Security Code (CVV) will be excluded from the
            response.
          type: boolean
        CustomerID:
          description: >-
            Transaction ID within client environment associated with the
            customer. This value acts as a secondary identifier in conjunction
            with OrderNumber. The value is searchable and reportable in the
            ConnexPay portal. This value may be sent in multiple times within
            the integration for multiple purposes.  The maximum length is 100
            characters and is alpha-numeric.
          type: string
        AssociationId:
          description: >-
            Utilize the Association ID field to tie a virtual card to a sale or
            sales. For example, if you have several sales and one virtual card
            payment to a supplier, you can add association ID to the sales and
            the virtual card for downstream reporting. The maximum length is 100
            alpha-numeric characters.
          type: string
        LabelIDs:
          description: >-
            Utilize Label IDs to associate a virtual card to a specific label(s)
            within ConnexPay Bridge UI for your organization. If a virtual card
            is tied to an incorrect Label, it will not filter or display
            correctly in Bridge's Search Grid. Please contact your Customer Care
            Consultant for a list of valid Label IDs before use.
          type: array
          items:
            type: string
    CardIssueCreateVirtualCardLiteRequest:
      type: object
      required:
        - MerchantGuid
        - FirstName
        - LastName
        - AmountLimit
        - PurchaseType
      properties:
        MerchantGuid:
          description: >-
            Merchant's guid. Application level value that indicates a virtual
            card is being requested for clients account. Value provided by
            ConnexPay.
          type: string
          default: MerchantGuid
        FirstName:
          description: >-
            Cardholder's first name. This is the first name placed on the
            virtual card provided to the supplier. The value is also searchable
            in the ConnexPay portal.
          type: string
          default: Jane
        LastName:
          description: >-
            Cardholder's last name. This is the last name placed on the virtual
            card provided to the supplier. The value is also searchable in the
            ConnexPay portal.
          type: string
          default: Doe
        Phone:
          description: >-
            Cardholder's phone number.  Phone number up to 20 character string,
            numbers and plus sign (+) allowed only. Telephone number of the user
            (including area code), prepended by the + symbol and the 1- to
            3-digit country calling code. Do not include hyphens, spaces, or
            parentheses.
          type: string
          default: '1234567890'
        Address1:
          description: >-
            Cardholder's address line 1. The street number is used by the
            supplier when submitting the transaction to perform an AVS check.
            Alphanumerics and [,.-'] are allowed.
          type: string
          default: 123 Test Street
        Address2:
          description: Cardholder's address line 2. Alphanumerics and [,.-'] are allowed.
          type: string
          default: Suite 185
        City:
          description: Cardholder's city.
          type: string
          default: Alpharetta
        State:
          description: >-
            Cardholder's short name state.  The ISO 3166-2 CA and US state or
            province code of a user. Length = 2. If a non U.S. or Canadian value
            is submitted the virtual card request will not be processed and an
            error response returned.
          type: string
          default: GA
        ZipCode:
          description: >-
            Cardholder's zipcode. The zip code is used by the supplier when
            submitting the transaction to perform an AVS check.  The Zipcode
            must be between 1 and 10 characters long, only numbers and letters
            are allowed.
          type: string
          default: '30004'
        Country:
          description: >-
            Cardholder's country.  Only alpha-2 digit country code allowed and
            numbers are not allowed.  See ISO-3166 country list of Alpha-2
            country codes (https://www.iso.org/obp/ui/) .
          type: string
          default: US
        UsageLimit:
          description: >-
            Security Control: Maximum number of times the card may be
            authorized. The maximum allowed field value is 99, and if you do not
            provide a value the card will be considered unlimited. Authorization
            attempts exceeding the provided value will be declined. Even though
            a virtual card is often considered a “one-time-use” card, some
            suppliers may need to authorize a card multiple times
            (pre-authorizations, a purchase comprised of multiple tickets, etc.)
            and you may consider a value that is not overly restrictive to avoid
            unwanted declines.
          type: integer
          format: int64
        AmountLimit:
          description: >-
            Security Control: Maximum dollar amount the card can be authorized
            and settled, which must be less than or equal to $5,000,000.00. The
            value must incorporate any anticipated overages such as currency
            conversion or taxes that a supplier may associate with the
            transaction. If a supplier attempts to authorize a card for more
            than the amount limit it will be declined.
          type: number
          default: 100
          format: float
        ExpirationDate:
          description: >-
            The ExpirationDate (YYYY-MM-DD) is the date to be provided to the
            supplier as the actual expiration date for the virtual card. The
            recommendation is to set the ExpirationDate one or two years in the
            future and set the TerminateDate just a day or two after the VCC is
            expected to be processed to avoid acceptance issues.  The expiration
            date cannot be more than 36 months in the future. If an expiration
            date is not provided, the expiration will default to issue date plus
            three years. For cards issued outside of the US/Canada, the
            expiration date will default to issue date plus three years and can
            not be overwritten - even if this parameter is included in the
            request. Note, Returns can still be processed on expired or
            terminated VCCs.
          type: string
          format: date
        TerminateDate:
          description: >-
            The TerminateDate (YYYY-MM-DD format) is the date the Virtual Credit
            Card will be terminated by ConnexPay. TerminateDate is different
            than ExpirationDate in that TerminateDate indicates the actual date
            the card will no longer be active.  The recommendation is to set the
            ExpirationDate one or two years in the future and set the
            TerminateDate just a day or two after the VCC is expected to be
            processed. If a terminate date is not indicated, the card will be
            inactivated as of the expiration date. Note, Returns can still be
            processed on terminated VCCs.
          type: string
          format: date
        PurchaseType:
          description: >-
            Security Control: The industry where the virtual card will be
            utilized. For example, if value set to airline and the card is used
            at hotel, it will be declined. Available purchase type values are:
            '01' (Airline), '02' (Hotels and Resorts), '03' (Car Rental), '04'
            (Cable, Satellite, Television, and Radio Services), '05' (Cruise
            Lines), '6' (Travel), '11' (Medical Services and Health
            Practitioners), '21' (Advertising Services), '22' (Misc Advertising
            and Business Services), '23' (Ticketing), '31' (Insurance Sales,
            Underwriting, and Premiums), '32' (Insurance and Real Estate Codes),
            '91' (Restaurants and Food Services), and '93' (Tax Payments)..
          type: string
          default: '01'
        SequenceNumber:
          description: >-
            Transaction sequence number within client environment. Provide a
            unique SequenceNumber for each new request. If a card request is
            made with all the same parameter information and the same sequence
            number, within 30 minutes, the request will be considered a
            duplicate and a new card will not be issued.  Note: value is not
            searchable or reportable in Bridge.  Alphanumeric.
          type: string
          default: '987654321'
        PayeeId:
          description: >-
            The PayeeId is used to assist with Intelligent Routing
            functionality. This field was previously labeled as the Supplier ID
            and serves the same purpose for Intelligent Routing; however, it
            also supports additional functionality if a Payee has been created.
            Creating a Payee allows you complete control over the type of
            virtual card used to pay your payee and minimizes the data that must
            be passed in each card request. The field accepts up to 100
            alpha-numeric characters. Reference our MerchantPayees APIs for
            additional details.
          type: string
          default: DL
        NonDomesticSupplier:
          description: >-
            We can issue the “Global VCC” if the Supplier accepting that VCC has
            an overseas merchant account. This is an optional field. Indicating
            true will result in issuing this Global VCC. Indicating false (or
            not including this property in your request) will result in
            receiving a VCC created for domestic use.
          type: boolean
        OrderNumber:
          description: >-
            A value that is commonly used for reporting on and reconciling your
            PayIns and PayOuts.  The Order Number is searchable in the ConnexPay
            Bridge and referenced in Analytics and reporting, and can be any
            identifier within your environment to associate with the sale or
            payment, such as a Record Locator, PNR, or transaction ID.  The
            maximum length is 50 alpha-numeric characters and allows the
            following special characters: [._ /- ].
          type: string
          default: 1234A
        CustomerID:
          description: >-
            Transaction ID within client environment associated with the
            customer. This value acts as a secondary identifier in conjunction
            with OrderNumber. The value is searchable and reportable in the
            ConnexPay portal. This value may be sent in multiple times within
            the integration for multiple purposes.  The maximum length is 100
            characters and is alpha-numeric.
          type: string
        Transmission:
          description: >-
            URL Links (email) or a text document (fax) to virtual cards can be
            emailed/faxed by including the VCC Transmission object in the
            IssueLite API call. Including the transmission object for email also
            allows you to pull back a URL you can use within your application to
            direct a user to a visual representation of the virtual card.
          type: object
          properties:
            TransmissionMethods:
              description: >-
                Methods of Transmission. Supported methods: Email, Link, Fax.
                Populate this parameter as 'Email' if you want to email the
                virtual card to a customer or supplier. Use the 'Link' option to
                have a URL included in the response.  Use the "Fax" option to
                fax the virtual card to a customer or supplier.
              type: array
              items:
                type: string
            EmailRecipient:
              description: >-
                Mandatory for email transmission. The email address of the
                intended recipient. 255 char max.
              type: string
            MerchantPhoneNumber:
              description: >-
                This is the phone number that should display on the virtual card
                and is the number that should be used if the link has expired.
                Up to 15 characters. Numbers and plus sign (+) allowed only.
              type: string
            EmailFrom:
              description: >-
                Mandatory for email transmission. This will be the email address
                that populates the ‘reply to’ section of the email message. 255
                char max.
              type: string
            RecipientName:
              description: >-
                Mandatory for email or fax transmission. A descriptive name of
                the email or fax recipient. 255 char max
              type: string
            Subject:
              description: >-
                Mandatory for email or fax transmission. High-level subject line
                description of the transmission contents. 255 char max.
              type: string
            Message:
              description: >-
                Mandatory for email or fax transmission. The message body of the
                email or fax. 2048 char max.
              type: string
            DaysToExpire:
              description: >-
                Mandatory for email transmission. The number of days after card
                issuance until link to VC expires. Range: 1-999 days.
              type: string
            FaxFrom:
              description: >-
                Mandatory for fax transmission. This can be the client name or
                fax number the fax is coming from that populates the ‘FaxFrom’
                section of the fax. 255 char max.
              type: string
            FaxRecipient:
              description: >-
                Mandatory for fax transmissions.  The fax number of the intended
                recipient.
              type: string
        ReturnCardData:
          description: >-
            Optional field that may be set to true or false. When set to a value
            of true or if the field is not provided at all, card data is
            returned in the response. When set to a value of false, the Card
            Account Number and Security Code (CVV) will be excluded from the
            response.
          type: boolean
        ActivationDate:
          description: >-
            Future date that the card should be fully funded, at least one day
            from creation date and within 600 days. If no activation date is
            supplied the card will be funded immediately.
          type: string
          format: date
        AssociationId:
          description: >-
            Utilize the Association ID field to tie a virtual card to a sale or
            sales. For example, if you have several sales and one virtual card
            payment to a supplier, you can add association ID to the sales and
            the virtual card for downstream reporting. The maximum length is 100
            alpha-numeric characters.
          type: string
          default: '1234'
        LabelIDs:
          description: >-
            Utilize Label IDs to associate a virtual card to a specific label(s)
            within ConnexPay Bridge UI for your organization. If a virtual card
            is tied to an incorrect Label, it will not filter or display
            correctly in Bridge's Search Grid. Please contact your Customer Care
            Consultant for a list of valid Label IDs before use.
          type: array
          items:
            type: string
    CardCreateLodgedCardRequest:
      type: object
      required:
        - MerchantGuid
        - FirstName
        - LastName
        - AmountLimit
        - LimitWindow
        - PurchaseType
      properties:
        MerchantGuid:
          description: >-
            Merchant's guid. Application level value that indicates a virtual
            card is being requested for clients account. Value provided by
            ConnexPay.
          type: string
        FirstName:
          description: >-
            Cardholder's first name. This is the first name placed on the
            virtual card provided to the supplier. The value is also searchable
            in the ConnexPay portal.
          type: string
        LastName:
          description: >-
            Cardholder's last name. This is the last name placed on the virtual
            card provided to the supplier. The value is also searchable in the
            ConnexPay portal.
          type: string
        Phone:
          description: >-
            Cardholder's phone number. Phone number up to 20 character string,
            numbers and plus sign (+) allowed only. Telephone number of the user
            (including area code), prepended by the + symbol and the 1- to
            3-digit country calling code. Do not include hyphens, spaces, or
            parentheses.
          type: string
        Address1:
          description: >-
            Cardholder's address line 1. The street number is used by the
            supplier when submitting the transaction to perform an AVS check.
            Alphanumerics and [,.-'] are allowed.
          type: string
        Address2:
          description: Cardholder's address line 2. Alphanumerics and [,.-'] are allowed.
          type: string
        City:
          description: Cardholder's city.
          type: string
        State:
          description: >-
            Cardholder's short name state.  The ISO 3166-2 CA and US state or
            province code of a user. Length = 2. If a non U.S. or Canadian value
            is submitted the virtual card request will not be processed and an
            error response returned.
          type: string
        ZipCode:
          description: >-
            Cardholder's zipcode. The zip code is used by the supplier when
            submitting the transaction to perform an AVS check.  The Zipcode
            must be between 1 and 10 characters long, only numbers and letters
            are allowed.
          type: string
        Country:
          description: >-
            Cardholder's country.  Only alpha-2 digit country code allowed and
            numbers are not allowed.  See ISO-3166 country list of Alpha-2
            country codes (https://www.iso.org/obp/ui/) .
          type: string
        UsageLimit:
          description: >-
            Security Control: Maximum number of times the card may be
            authorized. This is used in conjunction with the Limit Window: for
            example, if you specify a Usage Limit of 4 and a Limit Window of
            Monthly, the card can be authorized up to 4 times per month. The
            maximum allowed field value is 99, and if you do not provide a value
            the card will be considered unlimited. Authorization attempts
            exceeding the provided value will be declined.
          type: integer
          format: int64
        AmountLimit:
          description: >-
            Security Control: Maximum dollar amount the card can be authorized
            and settled, which must be less than or equal to $5,000,000.00. The
            value must incorporate any anticipated overages such as currency
            conversion or taxes that a supplier may associate with the
            transaction. If a supplier attempts to authorize a card for more
            than the amount limit it will be declined.
          type: number
          format: float
        LimitWindow:
          description: >-
            This is the time period that both the UsageLimit and the AmountLimit
            applies. Options are: Day, Week, Month, Lifetime. For example
            AmountLimit is $500 and LimitWindow is "Week" then the card can be
            approved for $500 per week.
          type: string
        ExpirationDate:
          description: >-
            The ExpirationDate (YYYY-MM-DD) is the date to be provided to the
            supplier as the actual expiration date for the virtual card. The
            recommendation is to set the ExpirationDate one or two years in the
            future and set the TerminateDate just a day or two after the VCC is
            expected to be processed to avoid acceptance issues.  The expiration
            date cannot be more than 36 months in the future. If an expiration
            date is not provided, the expiration will default to issue date plus
            three years. For cards issued outside of the US/Canada, the
            expiration date will default to issue date plus three years and can
            not be overwritten - even if this parameter is included in the
            request. Note, Returns can still be processed on expired or
            terminated VCCs.
          type: string
          format: date
        TerminateDate:
          description: >-
            The TerminateDate (YYYY-MM-DD format) is the date the Virtual Credit
            Card will be terminated by ConnexPay. TerminateDate is different
            than ExpirationDate in that TerminateDate indicates the actual date
            the card will no longer be active.  The recommendation is to set the
            ExpirationDate one or two years in the future and set the
            TerminateDate just a day or two after the VCC is expected to be
            processed. If a terminate date is not indicated, the card will be
            inactivated as of the expiration date. Note, Returns can still be
            processed on terminated VCCs.
          type: string
          format: date
        PurchaseType:
          description: >-
            Security Control: The industry where the virtual card will be
            utilized. For example, if value set to airline and the card is used
            at hotel, it will be declined. Available purchase type values are:
            '01' (Airline), '02' (Hotels and Resorts), '03' (Car Rental), '04'
            (Cable, Satellite, Television, and Radio Services), '05' (Cruise
            Lines), '6' (Travel), '11' (Medical Services and Health
            Practitioners), '21' (Advertising Services), '22' (Misc Advertising
            and Business Services), '23' (Ticketing), '31' (Insurance Sales,
            Underwriting, and Premiums), '32' (Insurance and Real Estate Codes),
            '91' (Restaurants and Food Services), and '93' (Tax Payments)..
          type: string
        SequenceNumber:
          description: >-
            Transaction sequence number within client environment. Provide a
            unique SequenceNumber for each new request. If the same value is
            sent within 30 minutes it will be considered a duplicate request.
            Note: value is not searchable or reportable in ConnexPay portal. 
            Alphanumeric.
          type: string
        OrderNumber:
          description: >-
            A value that is commonly used for reporting on and reconciling your
            PayIns and PayOuts.  The Order Number is searchable in the ConnexPay
            Bridge and referenced in Analytics and reporting, and can be any
            identifier within your environment to associate with the sale or
            payment, such as a Record Locator, PNR, or transaction ID.  The
            maximum length is 50 alpha-numeric characters and allows the
            following special characters: [._ /- ].
          type: string
        PayeeId:
          description: >-
            The PayeeId is used to assist with Intelligent Routing
            functionality. This field was previously labeled as the Supplier ID
            and serves the same purpose for Intelligent Routing; however, it
            also supports additional functionality if a Payee has been created.
            Creating a Payee allows you complete control over the type of
            virtual card used to pay your payee and minimizes the data that must
            be passed in each card request. The field accepts up to 100
            alpha-numeric characters. Reference our MerchantPayees APIs for
            additional details.
          type: string
        NonDomesticSupplier:
          description: >-
            We can issue the “Global VCC” if the Supplier accepting that VCC has
            an overseas merchant account. This is an optional field. Indicating
            true will result in issuing this Global VCC. Indicating false (or
            not including this property in your request) will result in
            receiving a VCC created for domestic use.
          type: boolean
        Transmission:
          description: >-
            URL Links (email) or a text document (fax) to virtual cards can be
            emailed/faxed by including the VCC Transmission object in the
            IssueLodgedCard API call. Including the transmission object for
            email also allows you to pull back a URL you can use within your
            application to direct a user to a visual representation of the
            virtual card.
          type: object
          properties:
            TransmissionMethods:
              description: >-
                Methods of Transmission. Supported methods: Email, Link, Fax.
                Populate this parameter as 'Email' if you want to email the
                virtual card to a customer or supplier. Use the 'Link' option to
                have a URL included in the response.  Use the "Fax" option to
                fax the virtual card to a customer or supplier.
              type: array
              items:
                type: string
            EmailRecipient:
              description: >-
                Mandatory for email transmission. The email address of the
                intended recipient. 255 char max.
              type: string
            MerchantPhoneNumber:
              description: >-
                This is the phone number that should display on the virtual card
                and is the number that should be used if the link has expired.
                Up to 15 characters. Numbers and plus sign (+) allowed only.
              type: string
            EmailFrom:
              description: >-
                Mandatory for email transmission. This will be the email address
                that populates the ‘reply to’ section of the email message. 255
                char max.
              type: string
            RecipientName:
              description: >-
                Mandatory for email or fax transmission. A descriptive name of
                the email or fax recipient. 255 char max
              type: string
            Subject:
              description: >-
                Mandatory for email or fax transmission. High-level subject line
                description of the transmission contents. 255 char max.
              type: string
            Message:
              description: >-
                Mandatory for email or fax transmission. The message body of the
                email or fax. 2048 char max.
              type: string
            DaysToExpire:
              description: >-
                Mandatory for email transmission. The number of days after card
                issuance until link to VC expires. Range: 1-999 days.
              type: string
            FaxFrom:
              description: >-
                Mandatory for fax transmission. This can be the client name or
                fax number the fax is coming from that populates the ‘FaxFrom’
                section of the fax. 255 char max.
              type: string
            FaxRecipient:
              description: >-
                Mandatory for fax transmissions.  The fax number of the intended
                recipient.
              type: string
        ReturnCardData:
          description: >-
            Optional field that may be set to true or false. When set to a value
            of true or if the field is not provided at all, card data is
            returned in the response. When set to a value of false, the Card
            Account Number and Security Code (CVV) will be excluded from the
            response.
          type: boolean
        CustomerID:
          description: >-
            Transaction ID within client environment associated with the
            customer. This value acts as a secondary identifier in conjunction
            with OrderNumber. The value is searchable and reportable in the
            ConnexPay portal. This value may be sent in multiple times within
            the integration for multiple purposes.  The maximum length is 50
            characters and is alpha-numeric.
          type: string
        AssociationId:
          description: >-
            Utilize the Association ID field to tie a virtual card to a sale or
            sales. For example, if you have several sales and one virtual card
            payment to a supplier, you can add association ID to the sales and
            the virtual card for downstream reporting. The maximum length is 100
            alpha-numeric characters.
          type: string
        LabelIDs:
          description: >-
            Utilize Label IDs to associate a lodged card to a specific label(s)
            within ConnexPay Bridge UI for your organization. If a lodged card
            is tied to an incorrect Label, it will not filter or display
            correctly in Bridge's Search Grid. Please contact your Customer Care
            Consultant for a list of valid Label IDs before use.
          type: array
          items:
            type: string
    CardUpdateCardDetailsRequest:
      type: object
      properties:
        PurchaseType:
          description: >-
            Security Control: The industry where the virtual card will be
            utilized. For example, if value set to airline and the card is used
            at hotel, it will be declined. Available purchase type values are:
            '01' (Airline), '02' (Hotels and Resorts), '03' (Car Rental), '04'
            (Cable, Satellite, Television, and Radio Services), '05' (Cruise
            Lines), '6' (Travel), '11' (Medical Services and Health
            Practitioners), '21' (Advertising Services), '22' (Misc Advertising
            and Business Services), '23' (Ticketing), '31' (Insurance Sales,
            Underwriting, and Premiums), '32' (Insurance and Real Estate Codes),
            '91' (Restaurants and Food Services), and '93' (Tax Payments)..
          type: string
        UsageLimit:
          description: >-
            Security Control: Maximum number of times the card may be
            authorized. The maximum allowed field value is 99, and if you do not
            provide a value the card will be considered unlimited. Authorization
            attempts exceeding the provided value will be declined. Even though
            a virtual card is often considered a “one-time-use” card, some
            suppliers may need to authorize a card multiple times
            (pre-authorizations, a purchase comprised of multiple tickets, etc.)
            and you may consider a value that is not overly restrictive to avoid
            unwanted declines.
          type: integer
          format: int32
        AssociationId:
          description: >-
            Utilize the Association ID field to tie a virtual card to a sale or
            sales. For example, if you have several sales and one virtual card
            payment to a supplier, you can add association ID to the sales and
            the virtual card for downstream reporting. The maximum length is 100
            alpha-numeric characters.
          type: string
        TerminateDate:
          description: >-
            The TerminateDate (YYYY-MM-DD format) is the date the Virtual Credit
            Card will be terminated by ConnexPay. TerminateDate is different
            than ExpirationDate in that TerminateDate indicates the actual date
            the card will no longer be active.  The recommendation is to set the
            ExpirationDate one or two years in the future and set the
            TerminateDate just a day or two after the VCC is expected to be
            processed. If a terminate date is not indicated, the card will be
            inactivated as of the expiration date. Note, Returns can still be
            processed on terminated VCCs.
          type: string
          format: date
        AmountLimit:
          description: >-
            Security Control: Maximum dollar amount the card can be authorized
            and settled, which must be less than or equal to $5,000,000.00. The
            value must incorporate any anticipated overages such as currency
            conversion or taxes that a supplier may associate with the
            transaction. If a supplier attempts to authorize a card for more
            than the amount limit it will be declined.
          type: number
          format: float
    CardUpdateLodgedCardRequest:
      type: object
      properties:
        UsageLimit:
          description: >-
            Security Control: Maximum number of times the card may be
            authorized. This is used in conjunction with the Limit Window; for
            example, if you specify a Usage Limit of 4 and a Limit Window of
            Monthly, the card can be authorized up to 4 times per month. The
            maximum allowed field value is 99, and if you do not provide a value
            the card will be considered unlimited. Authorization attempts
            exceeding the provided value will be declined.
          type: integer
          format: int64
        AmountLimit:
          description: >-
            Security Control: Maximum dollar amount the card can be authorized
            and settled, which must be less than or equal to $5,000,000.00. The
            value must incorporate any anticipated overages such as currency
            conversion or taxes that a supplier may associate with the
            transaction. If a supplier attempts to authorize a card for more
            than the amount limit it will be declined.
          type: number
          format: float
        LimitWindow:
          description: >-
            This is the time period that both the UsageLimit and the AmountLimit
            applies. Options are: Day, Week, Month, Lifetime. For example
            AmountLimit is $500 and LimitWindow is "Week" then the card can be
            approved for $500 per week.
          type: string
        PurchaseType:
          description: >-
            Security Control: The industry where the virtual card will be
            utilized. For example, if value set to airline and the card is used
            at hotel, it will be declined. Available purchase type values are:
            '01' (Airline), '02' (Hotels and Resorts), '03' (Car Rental), '04'
            (Cable, Satellite, Television, and Radio Services), '05' (Cruise
            Lines), '6' (Travel), '11' (Medical Services and Health
            Practitioners), '21' (Advertising Services), '22' (Misc Advertising
            and Business Services), '23' (Ticketing), '31' (Insurance Sales,
            Underwriting, and Premiums), '32' (Insurance and Real Estate Codes),
            '91' (Restaurants and Food Services), and '93' (Tax Payments)..
          type: string
        Activated:
          description: True activates a lodged card. False suspends a lodged card.
          type: boolean
        AssociationId:
          description: >-
            Utilize the Association ID field to tie a lodged card to a sale or
            sales. For example, if you have several sales and one lodged card
            payment to a supplier, you can add association ID to the sales and
            the lodged card for downstream reporting. The maximum length is 100
            alpha-numeric characters.
          type: string
        TerminateDate:
          description: >-
            The TerminateDate (YYYY-MM-DD format) is the date the Lodged Card
            will be terminated by ConnexPay. TerminateDate is different than
            ExpirationDate in that TerminateDate indicates the actual date the
            card will no longer be active.  The recommendation is to set the
            ExpirationDate one or two years in the future and set the
            TerminateDate just a day or two after the Lodged Card is expected to
            be processed. If a terminate date is not indicated, the card will be
            inactivated as of the expiration date. Note, Returns can still be
            processed on terminated Lodged Cards.
          type: string
          format: date
    CardResendTransmissionInfoRequest:
      type: object
      required:
        - TransmissionMethods
      properties:
        TransmissionMethods:
          description: >-
            Methods of Transmission. Supported methods: Email, Link, Fax.
            Populate this parameter as 'Email' if you want to email the virtual
            card to a customer or supplier. Use the 'Link' option to have a URL
            included in the response.  Use the "Fax" option to fax the virtual
            card to a customer or supplier.
          type: array
          items:
            type: string
        EmailRecipient:
          description: >-
            Mandatory when transmission is Email. Otherwise don't include. This
            is the email address of the intended recipient. 255 char max.
          type: string
        MerchantPhoneNumber:
          description: >-
            This is the phone number that should display on the virtual card and
            is the number that should be used if the link has expired. Up to 15
            characters. Numbers and plus sign (+) allowed only.
          type: string
        EmailFrom:
          description: >-
            For email transmissions, this will be the email address that
            populates the ‘reply to’ section of the email message. Do not
            include this parameter on other transmission method types. 255 char
            max.
          type: string
        RecipientName:
          description: >-
            A descriptive name of the email or fax recipient. Does not apply to
            the Link transmission method type. 255 char max
          type: string
        Subject:
          description: >-
            High-level subject line description of the transmission contents.
            Does not apply to the Link transmission method type. 255 char max.
          type: string
        Message:
          description: >-
            The message body of the email or fax. Does not apply to the Link
            transmission method type. 1024 char max.
          type: string
        DaysToExpire:
          description: >-
            The number of days after card issuance until the link to the VC
            expires. Range: 1-999 days.
          type: integer
          format: int32
        FaxFrom:
          description: >-
            Mandatory for fax transmission. This can be the client name or fax
            number the fax is coming from that populates the ‘FaxFrom’ section
            of the fax. 255 char max.
          type: string
        FaxRecipient:
          description: >-
            Mandatory for fax transmissions.  The fax number of the intended
            recipient.
          type: string
    AddendumCreateVirtualCardRequest:
      type: object
      properties:
        ItemGuid:
          description: >-
            Guid for the Virtual Card you are attaching information to with this
            addendum request. This Guid was returned to client when the Virtual
            Card was initially created.
          type: string
          default: Mandatory
        Value:
          description: Character data to associate with the Virtual card.
          type: string
          default: Mandatory
        Category:
          description: >-
            Can be used by client to specify a desired category for an Addenda
            item.
          type: string
          default: Optional
        IdExternal:
          description: >-
            Can be supplied by client to associate this addendum with an ID in
            client's data.
          type: string
          default: Optional
        Note:
          description: Additional information to associate with this addendum, as desired.
          type: string
          default: Optional
        Sequence:
          description: >-
            If client creates multiple addenda for a single Virtual Card this
            sequence can be specified if a client desires.
          type: string
          default: Optional
    CardUpdateDelayedActivationRequest:
      type: object
      required:
        - MerchantGuid
      properties:
        MerchantGuid:
          description: >-
            Merchant's guid. Application level value that indicates a virtual
            card is being requested for clients account. Value provided by
            ConnexPay.
          type: string
        ActivationDate:
          description: >-
            Provide a future date, up to 600 days, if you wish to update the
            virtual card's activation date. Otherwise leave blank.
          type: string
          format: date
        AmountLimit:
          description: >-
            Provide a card amount if you wish to update the amount limit for the
            virtual card, otherwise leave blank.
          type: number
          format: float
        TerminateDate:
          description: >-
            The TerminateDate (YYYY-MM-DD format) is the date the Virtual Credit
            Card will be terminated by ConnexPay. TerminateDate is different
            than ExpirationDate in that TerminateDate indicates the actual date
            the card will no longer be active.  ExpirationDate is the month and
            year that will be applied to the actual VCC. The recommendation is
            to set the ExpirationDate one or two years in the future and set the
            TerminateDate just a day or two after the VCC is expected to be
            processed. Note, Returns can still be processed on terminated VCCs.
          type: string
          format: date
    TransactionCreateAchCreditPaymentRequest:
      type: object
      required:
        - MerchantGuid
        - Amount
        - PayeeName
        - IncomingTransactionCode
        - AccountHolder
      properties:
        MerchantGuid:
          description: >-
            Merchant's guid. Application level value that indicates the ACH
            payment is being requested for clients account. Value provided by
            ConnexPay.
          type: string
        Amount:
          description: Payment amount. Minimum amount 0.01.
          type: number
          format: float
        PayeeName:
          description: Payee name up to 100 characters.
          type: string
        StatementCompanyName:
          description: >-
            Company Name to display Bank Statement. The first 16 characters will
            display on the bank account holders statement.
          type: string
          default: Merchant Alias
        Description:
          description: >-
            For banks who accept statement descriptors, the first 10 characters
            will display on the bank account holders statement.
          type: string
        IncomingTransactionCode:
          description: >-
            ITC for short Application level setting to associate the ACH payment
            request with an original sale or sale group. The value is provided
            in the sale response of the original sale transaction, or in the
            Group Sale response of the group sale. All ACH payment requests must
            be associated with an original sale or group transaction.
          type: string
        AccountHolder:
          description: Payee's account information
          type: object
          properties:
            FirstName:
              description: >-
                Conditional -  Payee's First name between 2 to 40 characters.
                Can be left blank if BusinessName is provided
              type: string
            LastName:
              description: >-
                Conditional - Payee's Last name between 2 to 40 characters. Can
                be left blank if BusinessName is provided
              type: string
            MiddleName:
              description: Payee's Middle name
              type: string
            BusinessName:
              description: >-
                Conditional - Can be left blank if FirstName and LastName are
                provided
              type: string
              default: Default
            Email:
              description: Email up to 100 characters
              type: string
            Phone:
              description: Phone number up to 10 characters
              type: string
            Address:
              description: Account Holder Address
              type: object
              properties:
                Address1:
                  description: Address 1 up to 50 characters
                  type: string
                Address2:
                  description: Address 2 up to 50 characters
                  type: string
                City:
                  description: City up to 50 characters
                  type: string
                State:
                  description: US State up to 2 characters
                  type: string
                Country:
                  description: Country. 'US' only as of now
                  type: string
                ZipCode:
                  description: ZipCode up to 10 characters
                  type: string
            BankAccount:
              description: Payee's Bank Account info
              type: object
              required:
                - RoutingNumber
                - AccountNumber
                - AccountType
                - AccountHolderName
              properties:
                RoutingNumber:
                  description: Routing number up to 9 characters
                  type: string
                AccountNumber:
                  description: Account number up to 17 characters
                  type: string
                AccountType:
                  description: '''Checking'' or ''Saving'''
                  type: string
                AccountHolderName:
                  description: Account holder name up to 150 characters
                  type: string
    AchCreateCreditPaymentRequest:
      type: object
      required:
        - MerchantGuid
        - Amount
        - PayeeName
        - AccountHolder
      properties:
        MerchantGuid:
          description: >-
            Merchant's guid. Application level value that indicates the ACH
            payment is being requested for clients account. Value provided by
            ConnexPay.
          type: string
        Amount:
          description: Payment amount with the minimum amount 0.01.
          type: number
          format: float
        PayeeName:
          description: Payee name up to 100 characters.
          type: string
        StatementCompanyName:
          description: >-
            Company Name to display Bank Statement. The first 16 characters will
            display on the bank account holders statement.
          type: string
          default: Merchant Alias
        Description:
          description: >-
            For banks who accept statement descriptors, the first 10 characters
            will display on the bank account holders statement.
          type: string
        AccountHolder:
          description: Payee's account information.
          type: object
          properties:
            FirstName:
              description: >-
                Conditional -  Payee's First name between 2 to 40 characters.
                Can be left blank if BusinessName is provided
              type: string
            LastName:
              description: >-
                Conditional - Payee's Last name between 2 to 40 characters. Can
                be left blank if BusinessName is provided
              type: string
            MiddleName:
              description: Payee's Middle name
              type: string
            BusinessName:
              description: >-
                Conditional - Can be left blank if FirstName and LastName are
                provided
              type: string
              default: Default
            Email:
              description: Email up to 100 characters
              type: string
            Phone:
              description: Phone number up to 10 characters
              type: string
            Address:
              description: Account Holder Address
              type: object
              properties:
                Address1:
                  description: Address 1 up to 50 characters
                  type: string
                Address2:
                  description: Address 2 up to 50 characters
                  type: string
                City:
                  description: City up to 50 characters
                  type: string
                State:
                  description: US State up to 2 characters
                  type: string
                Country:
                  description: Country. 'US' only as of now
                  type: string
                ZipCode:
                  description: ZipCode up to 10 characters
                  type: string
            BankAccount:
              description: Payee's Bank Account info
              type: object
              required:
                - RoutingNumber
                - AccountNumber
                - AccountType
                - AccountHolderName
              properties:
                RoutingNumber:
                  description: Routing number up to 9 characters
                  type: string
                AccountNumber:
                  description: Account number up to 17 characters
                  type: string
                AccountType:
                  description: '''Checking'' or ''Saving'''
                  type: string
                AccountHolderName:
                  description: Account holder name up to 150 characters
                  type: string
        OrderNumber:
          description: >-
            This is the most common number you'll see throughout the ConnexPay
            Portal.  Transaction ID within client environment associated with
            the order. The value is searchable and reportable in the ConnexPay
            portal. This value may be sent in multiple instances of the
            integration for multiple purposes. Customers in the travel space
            often send the Record Locator/PNR in this field.  The maximum length
            is 50 alpha-numeric characters.
          type: string
          default: 7H2345
        SequenceNumber:
          description: >-
            Transaction sequence number within client environment. Note: value
            is not searchable or reportable in ConnexPay portal.  Alphanumeric.
          type: string
        AssociationId:
          description: >-
            This parameter allows you to input an up to 100 character
            association ID that can be used to tie this ACH Purchase to a sale
            (Association ID also needs to be included on the sale request). This
            is useful if you issue the ACH purchase prior to creating the sale
            that associates to it. The maximum length is 100 alpha-numeric
            characters.
          type: string
    AddendumCreateAchPurchaseRequest:
      type: object
      properties:
        ItemGuid:
          description: >-
            Guid for the ACH Purchase you are attaching information to with this
            addendum request. This Guid was returned to client when the ACH
            Purchase was initially created.
          type: string
          default: Mandatory
        Value:
          description: Character data to associate with the Virtual card.
          type: string
          default: Mandatory
        Category:
          description: >-
            Can be used by client to specify a desired category for an Addenda
            item. Consistent category parameters will aid in reporting
            consistently. See note below regarding the "MultipleSales" category
            and how to use the category specifically to associate an ACH
            Purchase to an existing sale(s).
          type: string
          default: Optional
        IdExternal:
          description: >-
            Can be supplied by client to associate this addendum with an ID in
            client's data.
          type: string
          default: Optional
        Note:
          description: Additional information to associate with this addendum, as desired.
          type: string
          default: Optional
        Sequence:
          description: >-
            If client creates multiple addenda for a single ACH Purchase this
            sequence can be specified if a client desires.
          type: string
          default: Optional
    SettingTokenizeBankAccountInfoRequest:
      type: object
      required:
        - MerchantGuid
        - SupplierName
        - AccountHolder
      properties:
        MerchantGuid:
          description: >-
            Merchant's guid. Application level value that indicates the ACH
            payment is being requested for clients account. Value provided by
            ConnexPay.
          type: string
        SupplierName:
          description: Name of supplier to whom payment will be made
          type: string
        AccountHolder:
          description: Payee's Account information
          type: object
          properties:
            FirstName:
              description: >-
                Conditional -  Payee's First name between 2 to 40 characters.
                Can be left blank if BusinessName is provided
              type: string
            LastName:
              description: >-
                Conditional - Payee's Last name between 2 to 40 characters. Can
                be left blank if BusinessName is provided
              type: string
            MiddleName:
              description: Payee's Middle name
              type: string
            BusinessName:
              description: >-
                Conditional - Can be left blank if FirstName and LastName are
                provided
              type: string
              default: Default
            Email:
              description: Email up to 100 characters
              type: string
            Phone:
              description: Phone number up to 10 characters
              type: string
            Address:
              description: Account Holder Address
              type: object
              properties:
                Address1:
                  description: Address 1 up to 50 characters
                  type: string
                Address2:
                  description: Address 2 up to 50 characters
                  type: string
                City:
                  description: City up to 50 characters
                  type: string
                State:
                  description: US State up to 2 characters
                  type: string
                Country:
                  description: Country. 'US' only as of now
                  type: string
                ZipCode:
                  description: ZipCode up to 10 characters
                  type: string
            BankAccount:
              description: Payee's Bank Account info
              type: object
              required:
                - RoutingNumber
                - AccountNumber
                - AccountType
                - AccountHolderName
              properties:
                RoutingNumber:
                  description: Routing number up to 9 characters
                  type: string
                AccountNumber:
                  description: Account number up to 17 characters
                  type: string
                AccountType:
                  description: '''Checking'' or ''Saving'''
                  type: string
                AccountHolderName:
                  description: Account holder name up to 150 characters
                  type: string
    ReplayPurchaseEventHistoryResendRequest:
      type: object
      properties:
        SourceGuid:
          description: >-
            The unique GUID for a particular purchase.  This would be the Guid
            returned on your virtual card, lodged card, physical card or ACH
            issue call.
          type: string
        MerchantGuid:
          description: >-
            Include your Merchant Guid instead of the Source Guid if you want to
            see all events for a given date range (you must also include the
            date range parameters)
          type: string
        EventGuid:
          description: Transaction ID as displayed in Bridge
          type: string
        FromDateTime:
          description: From date
          type: string
          format: date
        ToDateTime:
          description: To date
          type: string
          format: date
    TokenGenerateReportingTokenRequest:
      type: object
      required:
        - UserName
        - Password
      properties:
        UserName:
          description: Assigned username for CXP Bridge
          type: string
        Password:
          description: Assigned password for CXP Bridge
          type: string
    CardSearchIssuedVirtualCardsRequest:
      type: object
      required:
        - MerchantGuid
      properties:
        MerchantGuid:
          description: Your assigned Merchant GUID.
          type: string
        SaleGuid:
          description: Sale GUID linked to the card you are searching.
          type: string
        IncomingTransactionCode:
          description: Incoming Transaction Code linked to the card you are searching.
          type: string
        OrderNumber:
          description: Order Number linked to the card you are searching.
          type: string
        CustomerID:
          description: Order Number linked to the card you are searching.
          type: string
        TimeStampFrom:
          description: Starting Issued Date linked to the card(s) you are searching.
          type: string
          format: date
        TimeStampTo:
          description: Ending Issued Date linked to the card(s) you are searching.
          type: string
          format: date
        IssuedAmountFrom:
          description: >-
            Start of Issued Amount range linked to the card(s) you are
            searching.
          type: number
          format: float
        IssuedAmountTo:
          description: End of Issued Amount range linked to the card(s) you are searching.
          type: number
          format: float
        OutgoingTransactionCode:
          description: Outgoing Transaction Code linked to the card(s) you are searching.
          type: string
        SettledAmountFrom:
          description: >-
            Start of Settled Amount range linked to the card(s) you are
            searching.
          type: integer
          format: int64
        SettledAmountTo:
          description: End of Settled Amount range linked to the card(s) you are searching.
          type: integer
          format: int64
        ReturnedAmountFrom:
          description: >-
            Start of Settled Returned Amount range linked to the card(s) you are
            searching.
          type: integer
          format: int64
        ReturnedAmountTo:
          description: >-
            End of Settled Returned Amount range linked to the card(s) you are
            searching.
          type: integer
          format: int64
    SettlementSearchVirtualCardSettlementsRequest:
      type: object
      required:
        - MerchantGuid
      properties:
        MerchantGuid:
          description: Merchant's Guid.
          type: string
        DateFrom:
          description: Card's Issued Date.
          type: string
          format: date
        DateTo:
          description: Card's Issued Date.
          type: string
          format: date
        PostedDateFrom:
          description: Card settlement post date.
          type: string
          format: date
        PostedDateTo:
          description: Card settlement post date.
          type: string
          format: date
        OrderNumber:
          description: Order Number. Max. Length = 50.
          type: string
        IssuedAmountFrom:
          description: Issued Amount of the Card.
          type: integer
          format: int64
        IssuedAmountTo:
          description: Issued Amount of the Card.
          type: integer
          format: int64
        IssuedCardLastFour:
          description: Card last four number.
          type: string
        PostedAmountFrom:
          description: Posted Amount of the Card.
          type: number
          format: float
        PostedAmountTo:
          description: Posted Amount of the Card.
          type: number
          format: float
        ExpirationDateFrom:
          description: Card's expiration date.
          type: string
          format: date
        ExpirationDateTo:
          description: Card's expiration date.
          type: string
          format: date
    TokenIssueAuthenticationTokenResponse:
      type: object
      properties:
        access_token:
          type: string
          example: >-
            eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA1L3htbGRzaWctbW9yZSNobWFjLXNoYTI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJhcnJzYW5kYm94dGVzdCIsInJvbGUiOiJ1c2VyIiwiZ2F0ZXdheU1lcmNoYW50R3VpZHMiOiI0MTc0OTc1ZC00ZWI4LTQ1YTEtYTliNS1jZTFiNTk2ZGJjMzUiLCJnYXRld2F5TWVyY2hhbnRHdWlkc0FuZENoaWxkcmVuIjoiNDE3NDk3NWQtNGViOC00NWExLWE5YjUtY2UxYjU5NmRiYzM1IiwiZ2F0ZXdheURldmljZUd1aWRzIjoiNzQ1YmE5YTEtN2YxYi00NzI4LThlM2EtZTRkZmM4NTI2ZGZhIiwibmJmIjoxNjg1OTg2NTkyLCJleHAiOjE2ODYwNzI5OTIsImlzcyI6Imh0dHA6Ly9sb2NhbGhvc3Q6NTMwOTciLCJhdWQiOiJHNW9JTmZuVGlLWGRkS0RDR2twMlFCb0FxOFYxS0QyZiJ9.cnA1aljvC1n6_DLis18pNgF-lzzfyIk30CKqlm1lX3k
        token_type:
          type: string
          example: bearer
        expires_in:
          type: integer
          example: 86399
          default: 0
    TokenIssueAuthenticationToken400Response:
      type: object
      properties: {}
    SaleCreateTransactionResponse:
      type: object
      properties:
        guid:
          type: string
          example: 2d78c80e-59c3-44ae-a770-c70dfa550768
        status:
          type: string
          example: Transaction - Approved
        type:
          type: string
          example: 3D Secure
        batchStatus:
          type: string
          example: Batch - Open
        timeStamp:
          type: string
          example: '2022-11-29T06:47:52.53-05:00'
        deviceGuid:
          type: string
          example: e639a1dc-5cc4-43de-ab74-d5bea6c6b107
        amount:
          type: integer
          example: 1
          default: 0
        activated:
          type: boolean
          example: true
          default: true
        tenderType:
          type: string
          example: Credit
        effectiveAmount:
          type: integer
          example: 1
          default: 0
        riskResponse:
          type: object
          properties:
            transactionId: {}
            response:
              type: string
              example: Fraud Check Skipped for Finaro Request.
            reason: {}
            score: {}
        orderNumber:
          type: string
          example: ''
        cardDataSource:
          type: string
          example: INTERNET
        customerID:
          type: string
          example: ''
        batchGuid:
          type: string
          example: c4513dc8-1f49-47c2-b384-6b0897c3734e
        connexPayTransaction:
          type: object
          properties:
            guid:
              type: string
              example: 76d224b7-1abc-4fdb-9d0a-9a4b44cebbca
            expectedPayments:
              type: integer
              example: 0
              default: 0
            incomingTransCode:
              type: string
              example: 7C9A573638053372540845316
        associationId:
          type: string
          example: ''
        processorStatusCode:
          type: string
          example: '0'
        processorResponseMessage:
          type: string
          example: Transaction has been executed successfully.
        wasProcessed:
          type: boolean
          example: true
          default: true
        authCode:
          type: string
          example: '697949'
        refNumber:
          type: string
          example: XZZ01c19f5570e6bDAFUP3DOWVUR5FSB
        customerReceipt:
          type: string
          example: Not Available
        statementDescription:
          type: string
          example: ''
        generatedBy:
          type: string
          example: jharmonfinaro
        Card:
          type: object
          properties:
            ThreeDS:
              type: object
              properties:
                SecureCode:
                  type: string
                  example: 06:3030303030303030303030313130363639393458:none
                Cavv:
                  type: string
                  example: MDAwMDAwMDAwMDAxMTA2Njk5NFg=
                Version:
                  type: string
                  example: 2.1.0
                DirectoryServerTransactionID:
                  type: string
                  example: 806e85be-8568-4601-a993-654662947afb
                AcsTransactionId:
                  type: string
                  example: 3afb5c9b-5e06-4e35-9051-e2461d767028
                ECI:
                  type: string
                  example: '06'
            CardNumber:
              type: string
              example: '4018810000100036'
            CardHolderName:
              type: string
              example: Jason Harmon
            Cvv2:
              type: string
              example: '999'
            ExpirationDate:
              type: string
              example: '2312'
            Customer:
              type: object
              properties:
                FirstName:
                  type: string
                  example: Jason
                LastName:
                  type: string
                  example: Harmon
                Email:
                  type: string
                  example: ''
                Address1:
                  type: string
                  example: ''
                Address2:
                  type: string
                  example: ''
                State:
                  type: string
                  example: ''
                City:
                  type: string
                  example: ''
                Country:
                  type: string
                  example: ''
                Zip:
                  type: string
                  example: ''
                Phone:
                  type: string
                  example: ''
                SSN4:
                  type: string
                  example: ''
        addressVerificationResult:
          type: string
          example: Unavailable
        cvvVerificationCode:
          type: string
          example: M
        cvvVerificationResult:
          type: string
          example: >-
            CVV2 Match. Indicates that the Funds Transfer API or the issuer was
            able to verify the CVV2 value provided by the merchant.
        cavvResponseCode:
          type: string
          example: '2'
        walletProvider:
          type: integer
          example: 0
          default: 0
        isFromIssueLite:
          type: boolean
          example: false
          default: true
        labelIds:
          type: array
          items:
            type: integer
            example: 987654638
            default: 0
        remainingAmount:
          type: integer
          example: 1
          default: 0
    SaleCreateTransaction201Response:
      type: object
      properties:
        guid:
          type: string
          example: 965a67b0-cd0e-4020-973b-5e0d1b4bd6e2
        status:
          type: string
          example: Transaction - Approved
        type:
          type: string
          example: Default
        batchStatus:
          type: string
          example: Batch - Open
        timeStamp:
          type: string
          example: '2023-05-09T15:33:12.25-04:00'
        deviceGuid:
          type: string
          example: f758a448-7780-4b50-93a1-28329e37f94f
        amount:
          type: number
          example: 1.17
          default: 0
        activated:
          type: boolean
          example: true
          default: true
        tenderType:
          type: string
          example: ACH
        effectiveAmount:
          type: number
          example: 1.17
          default: 0
        purchaseActivationDate:
          type: string
          example: '2023-05-09T00:00:00-04:00'
        orderNumber:
          type: string
          example: ACH Sale Example
        cardDataSource:
          type: string
          example: INTERNET
        customerID:
          type: string
          example: CustomerID
        batchGuid:
          type: string
          example: c71d0ee6-b595-4792-b1ee-1156d28be132
        connexPayTransaction:
          type: object
          properties:
            guid:
              type: string
              example: d6c7e3c3-1cdd-47a1-89b9-368059b85c2c
            expectedPayments:
              type: integer
              example: 1
              default: 0
            incomingTransCode:
              type: string
              example: 23D5797638192431927631987
        riskProcessingOnly:
          type: boolean
          example: false
          default: true
        processorStatusCode:
          type: string
          example: A0000
        processorResponseMessage:
          type: string
          example: NotYetProcessed
        wasProcessed:
          type: boolean
          example: true
          default: true
        refNumber:
          type: string
          example: LC40FTVWZH
        customerReceipt:
          type: string
          example: >-
            Test\nTest Minnesota 55111\n5/9/2023 12:00:00 AM\n\nACH -
            Sale\n\nACCT NBR last four # : **** **** **** **** 1111\nEntry Mode
            : MANUAL\n\nTRANSACTION ID : 63819243192747\nInvoice number : Sales
            Test \nSubtotal:                     
            $1.17\n--------------------------------------\nTotal:                        
            $1.17\n--------------------------------------\n\n\n\nCUSTOMER
            ACKNOWLEDGES RECEIPT OF\nGOODS AND/OR SERVICES IN THE AMOUNT\nOF THE
            TOTAL SHOWN HEREON AND AGREES\nTO PERFORM THE OBLIGATIONS SET
            FORTH\nBY THE CUSTOMER`S AGREEMENT WITH
            THE\nISSUER\nAPPROVED\n\n\n\n\nCustomer Copy\n
        statementDescription:
          type: string
          example: Test
        generatedBy:
          type: string
          example: Test
        bankAccount:
          type: object
          properties:
            guid:
              type: string
              example: b9b2fcd3-6b35-40a6-a560-6e434ae01068
            accountType:
              type: string
              example: Checking
            accountNumberLastFour:
              type: string
              example: '1111'
            nameOnAccount:
              type: string
              example: TestName
            customer:
              type: object
              properties:
                guid:
                  type: string
                  example: 3bd93697-005a-4723-a7f8-f892577ee2bf
                firstName:
                  type: string
                  example: First Name
                lastName:
                  type: string
                  example: Last Name
                dateOfBirth:
                  type: string
                  example: '2002-05-30T00:00:00'
                address1:
                  type: string
                  example: 1 Main St
                address2:
                  type: string
                  example: Apt 1A
                zip:
                  type: string
                  example: '12345'
                city:
                  type: string
                  example: Test
                country:
                  type: string
                  example: US
                phone:
                  type: string
                  example: '9998887777'
                email:
                  type: string
                  example: test@test.com
                ssN4:
                  type: string
                  example: '1111'
        sequenceNumber:
          type: string
          example: '123'
        addressVerificationResult:
          type: string
          example: Unavailable
        cvvVerificationResult:
          type: string
          example: Unavailable
        walletProvider:
          type: integer
          example: 0
          default: 0
        includeRiskAnalysis:
          type: boolean
          example: false
          default: true
        isFromIssueLite:
          type: boolean
          example: false
          default: true
        remainingAmount:
          type: number
          example: 1.17
          default: 0
    SaleCreateTransaction202Response:
      oneOf:
        - title: 3DS Device Fingerprint Response Example
          type: object
          properties:
            version:
              type: string
              example: 2.1.0
            guid:
              type: string
              example: 3a0d533f-588b-4ce4-920f-7bc4641ea8f7
            status:
              type: string
              example: 3DS - Pending Fingerprint
            timeStamp:
              type: string
              example: '2023-08-16T16:44:40.9866697Z'
            deviceGuid:
              type: string
              example: e639a1dc-5cc4-43de-ab74-d5bea6c6b107
            amount:
              type: number
              example: 1.34
              default: 0
            redirectUrl:
              type: string
              example: https://x3d-sim.credorax.net/acs/3ds-method
            redirectUrlRequestPayload:
              type: string
              example: >-
                threeDSMethodData=eyJ0aHJlZURTTWV0aG9kTm90aWZpY2F0aW9uVVJMIjoiaHR0cHM6Ly9zYWxlc2FwaS5jb25uZXhwYXlkZXYuY29tL2FwaS92MS8zZHMvY2FsbGJhY2siLCJ0aHJlZURTU2VydmVyVHJhbnNJRCI6ImU2YmNjM2RiLTAwZjQtNDdiZi05OTgwLTljZjE2MTUxOGM5NyJ9
            card:
              type: object
              properties:
                first6:
                  type: string
                  example: '401881'
                first4:
                  type: string
                  example: '4018'
                last4:
                  type: string
                  example: '0010'
                cardHolderName:
                  type: string
                  example: Jason Harmon
                cardType:
                  type: string
                  example: Visa
                expirationDate:
                  type: string
                  example: 2023-12
                guid:
                  type: string
                  example: c6b816a3-f107-40d5-9dc3-bcefc576c8bc
            exemptThreeDSRequest:
              type: boolean
              example: false
              default: true
            exemptThreeDSPayment:
              type: boolean
              example: false
              default: true
        - title: 3DS Cardholder Challenge Response Example
          type: object
          properties:
            version:
              type: string
              example: 2.1.0
            guid:
              type: string
              example: a41dd8ab-8629-42c0-8a6f-8b9162a93ccc
            status:
              type: string
              example: 3DS - Pending User Challenge
            timeStamp:
              type: string
              example: '2023-08-16T16:45:23.9986814Z'
            deviceGuid:
              type: string
              example: e639a1dc-5cc4-43de-ab74-d5bea6c6b107
            amount:
              type: number
              example: 1.34
              default: 0
            threeDSStatus:
              type: string
              example: C
            directoryServerTransactionID:
              type: string
              example: 72f4afb2-c057-4abc-b054-9fae4b4ceb49
            acsTransactionId:
              type: string
              example: 7c6670d1-d888-4af5-b5f4-db286ba6c20a
            redirectUrl:
              type: string
              example: >-
                https://x3d-any-int.credorax.net/challenge/request/CONN2978/2534bb4d055f10423709276026df821ff3c8
            card:
              type: object
              properties:
                first6:
                  type: string
                  example: '401881'
                first4:
                  type: string
                  example: '4018'
                last4:
                  type: string
                  example: '0015'
                cardHolderName:
                  type: string
                  example: Jason Harmon
                cardType:
                  type: string
                  example: Visa
                expirationDate:
                  type: string
                  example: 2023-12
                guid:
                  type: string
                  example: 2c032f47-f7ab-4849-9715-0b4bacf252a3
            exemptThreeDSRequest:
              type: boolean
              example: false
              default: true
            exemptThreeDSPayment:
              type: boolean
              example: false
              default: true
    VoidCreateVoidResponse:
      type: object
      properties:
        guid:
          type: string
          example: 7a4ef786-8288-404d-9340-e837d06784af
        amount:
          type: number
          example: 20.5
          default: 0
        batchStatus:
          type: string
          example: Batch - Open
        timeStamp:
          type: string
          example: '2017-07-11T11:05:46.31'
        deviceGuid:
          type: string
          example: 8f65764d-72c1-4dee-ac9f-4cd4c98e8c35
        saleGuid:
          type: string
          example: bfff1a26-4207-4871-9597-48282e3fcfea
        status:
          type: string
          example: Transaction - Approved
        voidReason:
          type: string
          example: DEVICE_TIMEOUT
        processorStatusCode:
          type: string
          example: A0000
        wasProcessed:
          type: boolean
          example: true
          default: true
        batchGuid:
          type: string
          example: 1564cb1b-eddb-4747-9565-61a7d7d225f9
        authCode:
          type: string
          example: VTLMC1
        refNumber:
          type: string
          example: '13283644'
        invoiceNumber:
          type: string
          example: '11518'
        customerReceipt:
          type: string
          example: |
            SUR TECHNOLOGY HOLDINGS
            8320 S HARDY DRIVE
            TEMPE AZ 85284
            07/11/2017 07:05:50

            CREDIT - VOID

            CARD # : **** **** **** 0213
            CARD TYPE :MASTERCARD
            Entry Mode : MANUAL

            REF # : 13283644
            Invoice number : 11518

            Void Amount:                    $19.74
            --------------------------------------



            John Doe

            CUSTOMER ACKNOWLEDGES RECEIPT OF
            GOODS AND/OR SERVICES IN THE AMOUNT
            OF THE TOTAL SHOWN HEREON AND AGREES
            TO PERFORM THE OBLIGATIONS SET FORTH
            BY THE CUSTOMER`S AGREEMENT WITH THE
            ISSUER
            APPROVED




            Customer Copy
        sequenceNumber:
          type: string
          example: Sample-seq-1
        sale:
          type: object
          properties:
            guid:
              type: string
              example: bfff1a26-4207-4871-9597-48282e3fcfea
            status:
              type: string
              example: Transaction - Approved
            batchStatus:
              type: string
              example: Batch - Open
            timeStamp:
              type: string
              example: '2017-07-11T11:05:24.65'
            deviceGuid:
              type: string
              example: 8f65764d-72c1-4dee-ac9f-4cd4c98e8c35
            amount:
              type: number
              example: 19.74
              default: 0
            effectiveAmount:
              type: integer
              example: 0
              default: 0
            orderNumber:
              type: string
              example: '11518'
            orderDate:
              type: string
              example: '2017-02-03T00:00:00'
            batchGuid:
              type: string
              example: 1564cb1b-eddb-4747-9565-61a7d7d225f9
            processorStatusCode:
              type: string
              example: A0000
            processorResponseMessage:
              type: string
              example: Success
            wasProcessed:
              type: boolean
              example: true
              default: true
            authCode:
              type: string
              example: VTLMC1
            refNumber:
              type: string
              example: '13283644'
            invoiceNumber:
              type: string
              example: '11518'
            customerReceipt:
              type: string
              example: |
                SUR TECHNOLOGY HOLDINGS
                8320 S HARDY DRIVE
                TEMPE AZ 85284
                07/11/2017 07:05:27

                CREDIT - SALE

                CARD # : **** **** **** 0213
                CARD TYPE :MASTERCARD
                Entry Mode : MANUAL

                REF # : 13283644
                Invoice number : 11518
                AUTH CODE : VTLMC1
                Subtotal:                       $19.74
                --------------------------------------
                Total:                          $19.74
                --------------------------------------



                John Doe

                CUSTOMER ACKNOWLEDGES RECEIPT OF
                GOODS AND/OR SERVICES IN THE AMOUNT
                OF THE TOTAL SHOWN HEREON AND AGREES
                TO PERFORM THE OBLIGATIONS SET FORTH
                BY THE CUSTOMER`S AGREEMENT WITH THE
                ISSUER
                APPROVED




                Customer Copy
            customData:
              type: string
              example: order details
            card:
              type: object
              properties:
                first4:
                  type: string
                  example: '5306'
                last4:
                  type: string
                  example: '0213'
                cardNumber:
                  type: string
                  example: 1zcGT7J4pkGh0213
                cardHolderName:
                  type: string
                  example: John Doe
                expirationDate:
                  type: string
                  example: 2019-07
                customer:
                  type: object
                  properties:
                    guid:
                      type: string
                      example: d1cf828d-3050-4e4c-b7cf-f4038d114d39
                    firstName:
                      type: string
                      example: John
                    lastName:
                      type: string
                      example: Doe
                    phone:
                      type: string
                      example: '9177563007'
                    city:
                      type: string
                      example: New York
                    country:
                      type: string
                      example: US
                    email:
                      type: string
                      example: johnd@gmail.com
                    zip:
                      type: string
                      example: '10007'
                    address1:
                      type: string
                      example: 107 7th Av.
                    address2:
                      type: string
                      example: ''
                    state:
                      type: string
                      example: NY
                    dateOfBirth:
                      type: string
                      example: '1987-07-07T00:00:00'
                    driverLicenseNumber:
                      type: string
                      example: '12345678'
                    driverLicenseState:
                      type: string
                      example: TX
                    ssN4:
                      type: string
                      example: '1210'
    VoidCreateVoid400Response:
      type: object
      properties: {}
    ReturnItemRequestResponse:
      type: object
      properties:
        guid:
          type: string
          example: 4f31b350-edd1-49fd-a1ad-4b065f78d7b9
        batchStatus:
          type: string
          example: Batch - Open
        timeStamp:
          type: string
          example: '2017-07-11T11:10:38.11'
        deviceGuid:
          type: string
          example: 8f65764d-72c1-4dee-ac9f-4cd4c98e8c35
        saleGuid:
          type: string
          example: ded98ad3-0553-4607-b84c-1bbd85f474d5
        status:
          type: string
          example: Transaction - Approved
        amount:
          type: number
          example: 19.74
          default: 0
        batchGuid:
          type: string
          example: 450463e0-5050-4c33-8c2f-4e39a2dd8614
        processorStatusCode:
          type: string
          example: A0014
        wasProcessed:
          type: boolean
          example: true
          default: true
        authCode:
          type: string
          example: VTLMC1
        refNumber:
          type: string
          example: '13283670'
        invoiceNumber:
          type: string
          example: '11518'
        customerReceipt:
          type: string
          example: >-
            SUR TECHNOLOGY HOLDINGS\n8320 S HARDY DRIVE\nTEMPE AZ
            85284\n07/11/2017 07:10:42\n\nCREDIT - VOID\n\nCARD # : **** ****
            **** 0213\nCARD TYPE :MASTERCARD\nEntry Mode : MANUAL\n\nREF # :
            13283670\nInvoice number : 11518\n\nVoid Amount:                   
            $19.74\n--------------------------------------\n\n\n\nJohn
            Doe\n\nCUSTOMER ACKNOWLEDGES RECEIPT OF\nGOODS AND/OR SERVICES IN
            THE AMOUNT\nOF THE TOTAL SHOWN HEREON AND AGREES\nTO PERFORM THE
            OBLIGATIONS SET FORTH\nBY THE CUSTOMER’S AGREEMENT WITH
            THE\nISSUER\nAPPROVED\n\n\n\n\nCustomer Copy\n
        sequenceNumber:
          type: string
          example: Sample-seq-1
        sale:
          type: object
          properties:
            guid:
              type: string
              example: ded98ad3-0553-4607-b84c-1bbd85f474d5
            status:
              type: string
              example: Transaction - Approved
            batchStatus:
              type: string
              example: Batch - Closed
            timeStamp:
              type: string
              example: '2017-07-11T11:09:53.5'
            deviceGuid:
              type: string
              example: 8f65764d-72c1-4dee-ac9f-4cd4c98e8c35
            amount:
              type: number
              example: 19.74
              default: 0
            effectiveAmount:
              type: integer
              example: 0
              default: 0
            orderNumber:
              type: string
              example: '11518'
            orderDate:
              type: string
              example: '2017-02-03T00:00:00'
            batchGuid:
              type: string
              example: 1564cb1b-eddb-4747-9565-61a7d7d225f9
            processorStatusCode:
              type: string
              example: A0000
            processorResponseMessage:
              type: string
              example: Success
            wasProcessed:
              type: boolean
              example: true
              default: true
            authCode:
              type: string
              example: VTLMC1
            refNumber:
              type: string
              example: '13283670'
            invoiceNumber:
              type: string
              example: '11518'
            customerReceipt:
              type: string
              example: >-
                SUR TECHNOLOGY HOLDINGS\n8320 S HARDY DRIVE\nTEMPE AZ
                85284\n07/11/2017 07:09:56\n\nCREDIT - SALE\n\nCARD # : ****
                **** **** 0213\nCARD TYPE :MASTERCARD\nEntry Mode :
                MANUAL\n\nREF # : 13283670\nInvoice number : 11518\nAUTH CODE :
                VTLMC1\nSubtotal:                      
                $19.74\n--------------------------------------\nTotal:                         
                $19.74\n--------------------------------------\n\n\n\nJohn
                Doe\n\nCUSTOMER ACKNOWLEDGES RECEIPT OF\nGOODS AND/OR SERVICES
                IN THE AMOUNT\nOF THE TOTAL SHOWN HEREON AND AGREES\nTO PERFORM
                THE OBLIGATIONS SET FORTH\nBY THE CUSTOMER’S AGREEMENT WITH
                THE\nISSUER\nAPPROVED\n\n\n\n\nCustomer Copy\n
            customData:
              type: string
              example: order details
            card:
              type: object
              properties:
                first4:
                  type: string
                  example: '5306'
                last4:
                  type: string
                  example: '0213'
                cardNumber:
                  type: string
                  example: 1zcGT7J4pkGh0213
                cardHolderName:
                  type: string
                  example: John Doe
                expirationDate:
                  type: string
                  example: 2019-07
                customer:
                  type: object
                  properties:
                    guid:
                      type: string
                      example: d1cf828d-3050-4e4c-b7cf-f4038d114d39
                    firstName:
                      type: string
                      example: John
                    lastName:
                      type: string
                      example: Doe
                    phone:
                      type: string
                      example: '9177563007'
                    city:
                      type: string
                      example: New York
                    country:
                      type: string
                      example: US
                    email:
                      type: string
                      example: johnd@gmail.com
                    zip:
                      type: string
                      example: '10007'
                    address1:
                      type: string
                      example: 107 7th Av.
                    address2:
                      type: string
                      example: ''
                    state:
                      type: string
                      example: NY
                    dateOfBirth:
                      type: string
                      example: '1987-07-07T00:00:00'
                    driverLicenseNumber:
                      type: string
                      example: '12345678'
                    driverLicenseState:
                      type: string
                      example: TX
                    ssN4:
                      type: string
                      example: '1210'
    ReturnItemRequest400Response:
      type: object
      properties: {}
    CancellationEntireTripCancellationResponse:
      type: string
      example: |-
        {
            "guid": "7a4ef786-8288-404d-9340-e837d06784af",
            "batchStatus": "Batch - Open",
            "timeStamp": "2017-07-11T11:05:46.31",
            "deviceGuid": "8f65764d-72c1-4dee-ac9f-4cd4c98e8c35",
            "saleGuid": "bfff1a26-4207-4871-9597-48282e3fcfea",
            "status": "Transaction - Approved",
            "voidReason": "DEVICE_TIMEOUT",
            "processorStatusCode": "A0000",
            "wasProcessed": true,
            "batchGuid": "1564cb1b-eddb-4747-9565-61a7d7d225f9",
            "authCode": "VTLMC1",
            "refNumber": "13283644",
            "invoiceNumber": "11518",
            "customerReceipt": "CONNEXPAY\\n8320 S HARDY DRIVE\\nTEMPE AZ 85284\\n07/11/2017 07:05:50\\n\\nCREDIT - VOID\\n\\nCARD # : **** **** **** 0213\\nCARD TYPE :MASTERCARD\\nEntry Mode : MANUAL\\n\\nREF # : 13283644\\nInvoice number : 11518\\n\\nCancel Amount:                    $19.74\\n--------------------------------------\\n\\n\\n\\nJohn Doe\\n\\nCUSTOMER ACKNOWLEDGES RECEIPT OF\\nGOODS AND/OR SERVICES IN THE AMOUNT\\nOF THE TOTAL SHOWN HEREON AND AGREES\\nTO PERFORM THE OBLIGATIONS SET FORTH\\nBY THE CUSTOMER`S AGREEMENT WITH THE\\nISSUER\\nAPPROVED\\n\\n\\n\\n\\nCustomer Copy\\n",
            "sequenceNumber": "Sample-seq-1",
            "sale": {
                "guid": "bfff1a26-4207-4871-9597-48282e3fcfea",
                "status": "Transaction - Approved",
                "batchStatus": "Batch - Open",
                "timeStamp": "2017-07-11T11:05:24.65",
                "deviceGuid": "8f65764d-72c1-4dee-ac9f-4cd4c98e8c35",
                "amount": 19.74,
                "effectiveAmount": 0,
                "orderNumber": "11518",
                "orderDate": "2017-02-03T00:00:00",
                "batchGuid": "1564cb1b-eddb-4747-9565-61a7d7d225f9",
                "processorStatusCode": "A0000",
                "processorResponseMessage": "Success",
                "wasProcessed": true,
                "authCode": "VTLMC1",
                "refNumber": "13283644",
                "customerReceipt": "CONNEXPAY\\n8320 S HARDY DRIVE\\nTEMPE AZ 85284\\n07/11/2017 07:05:27\\n\\nCREDIT - SALE\\n\\nCARD # : **** **** **** 0213\\nCARD TYPE :MASTERCARD\\nEntry Mode : MANUAL\\n\\nREF # : 13283644\\nInvoice number : 11518\\nAUTH CODE : VTLMC1\\nSubtotal:                       $19.74\\n--------------------------------------\\nTotal:                          $19.74\\n--------------------------------------\\n\\n\\n\\nJohn Doe\\n\\nCUSTOMER ACKNOWLEDGES RECEIPT OF\\nGOODS AND/OR SERVICES IN THE AMOUNT\\nOF THE TOTAL SHOWN HEREON AND AGREES\\nTO PERFORM THE OBLIGATIONS SET FORTH\\nBY THE CUSTOMER`S AGREEMENT WITH THE\\nISSUER\\nAPPROVED\\n\\n\\n\\n\\nCustomer Copy\\n",
                "generatedBy": "ultralux",
                "card": {
                    "first4": "5306",
                    "last4": "0213",
                    "cardNumber": "1zcGT7J4pkGh0213",
                    "cardHolderName": "John Doe",
                    "expirationDate": "2019-07",
                    "customer": {
                        "guid": "d1cf828d-3050-4e4c-b7cf-f4038d114d39",
                        "firstName": "John",
                        "lastName": "Doe",
                        "phone": "9177563007",
                        "city": "New York",
                        "country": "US",
                        "email": "johnd@gmail.com",        
                    }
                }
                "addressVerificationCode": "N",
                "addressVerificationResult": "No match. Acquirer sent postal/ZIP code only, or street address only, or both postal/ZIP and street address."
                "cvvVerificationCode": "M",
                "cvvVerificationResult": "CVV2 Match. Indicates that the Funds Transfer API or the issuer was able to verify the CVV2 value provided by the merchant."
            }
        }
    CancellationEntireTripCancellation400Response:
      type: object
      properties: {}
    AuthenticationAcquireClientAuthorizationResponse:
      type: object
      properties:
        guid:
          type: string
          example: 6d75f588-711e-4481-92ed-1d078b507832
        status:
          type: string
          example: Transaction - Approved
        batchStatus:
          type: string
          example: Batch - Open
        timeStamp:
          type: string
          example: '2020-07-09T23:45:58.12+06:00'
        amount:
          type: integer
          example: 280
          default: 0
        effectiveAmount:
          type: integer
          example: 280
          default: 0
        orderNumber:
          type: string
          example: '1598742342342432342342432432'
        deviceGuid:
          type: string
          example: 0b7a9536-9fcd-4074-a841-d47eef77b81b
        cardDataSource:
          type: string
          example: INTERNET
        customerID:
          type: string
          example: xt147
        batchGuid:
          type: string
          example: 89133895-142f-4c70-98c7-5194d91bb500
        sendReceipt:
          type: boolean
          example: true
          default: true
        allowCardEmv:
          type: boolean
          example: false
          default: true
        processorStatusCode:
          type: string
          example: A0000
        processorResponseMessage:
          type: string
          example: Success
        wasProcessed:
          type: boolean
          example: true
          default: true
        authCode:
          type: string
          example: VTLMC1
        refNumber:
          type: string
          example: '23159362'
        invoiceNumber:
          type: string
          example: '15987423423424323423424'
        customerReceipt:
          type: string
          example: >-
            Agent Booking 123\n8320 S HARDY DRIVE\nTEMPE AZ 85284\n07/09/2020
            04:46:01\n\nCREDIT - AUTH ONLY\n\nCARD # : **** **** **** 4111\nCARD
            TYPE :MASTERCARD\nEntry Mode : MANUAL\n\nTRANSACTION ID :
            23159362\nInvoice number : 15987423423424323423424\nAUTH CODE :
            VTLMC1\n--------------------------------------\nCode        
            Name\nQty               
            Price\n--------------------------------------\nP1           Product
            01\n1                 
            $5.00\n--------------------------------------\nSubtotal:                     
            $234.41\n--------------------------------------\nTaxes\n--------------------------------------\n[1]
            Sales Tax                   $05.00\n[2] regional Tax               
            $03.00\n--------------------------------------\nTotal
            Taxes:                   
            $08.00\n--------------------------------------\nFees\n--------------------------------------\nFee:                           
            $37.59\n--------------------------------------\nTotal
            Fees:                    
            $37.59\n--------------------------------------\nTotal:                        
            $280.00\n--------------------------------------\n\n\n\nJohn
            Doe\n\nCUSTOMER ACKNOWLEDGES RECEIPT OF\nGOODS AND/OR SERVICES IN
            THE AMOUNT\nOF THE TOTAL SHOWN HEREON AND AGREES\nTO PERFORM THE
            OBLIGATIONS SET FORTH\nBY THE CUSTOMER`S AGREEMENT WITH
            THE\nISSUER\nAPPROVED\n\n\n\n\nCustomer Copy\n
        statementDescription:
          type: string
          example: Agent Booking 123
        enhancedData:
          type: object
          properties:
            saleTax:
              type: integer
              example: 5
              default: 0
            purchaseOrder:
              type: string
              example: PURCHSEORDER1
            additionalTaxDetailTaxCategory:
              type: string
              example: tex
            additionalTaxDetailTaxType:
              type: string
              example: regional
            additionalTaxDetailTaxAmount:
              type: integer
              example: 3
              default: 0
            additionalTaxDetailTaxRate:
              type: number
              example: 2.5
              default: 0
            shippingCharges:
              type: integer
              example: 20
              default: 0
            dutyCharges:
              type: number
              example: 17.59
              default: 0
            shipToZip:
              type: string
              example: '50001'
            shipFromZip:
              type: string
              example: '55100'
            destinationCountryCode:
              type: string
              example: ARG
            customerVATNumber:
              type: string
              example: '75010101'
            summaryCommodityCode:
              type: string
              example: Aa94
            vatInvoice:
              type: string
              example: '231465214'
            orderDate:
              type: string
              example: 07/20/2018
            supplierReferenceNumber:
              type: string
              example: '123'
            customerRefID:
              type: string
              example: '123'
            chargeDescriptor:
              type: string
              example: Sample Charge
            productName:
              type: string
              example: Product 01
            productCode:
              type: string
              example: P1
            price:
              type: integer
              example: 5
              default: 0
            additionalAmount:
              type: number
              example: 2.5
              default: 0
            additionalAmountType:
              type: string
              example: GIFT_SHOP
        card:
          type: object
          properties:
            first6:
              type: string
              example: '541333'
            first4:
              type: string
              example: '5413'
            last4:
              type: string
              example: '4111'
            cardHolderName:
              type: string
              example: John Doe
            cardType:
              type: string
              example: Mastercard
            expirationDate:
              type: string
              example: 2019-12
            customer:
              type: object
              properties:
                guid:
                  type: string
                  example: 5dd6ed47-3e5b-4123-bc0e-81b32663e8ee
                firstName:
                  type: string
                  example: John
                lastName:
                  type: string
                  example: Doe
                dateOfBirth:
                  type: string
                  example: '1990-12-07T00:00:00'
                address1:
                  type: string
                  example: 107 7th Av.
                address2:
                  type: string
                  example: ''
                zip:
                  type: string
                  example: '10007'
                city:
                  type: string
                  example: New York
                state:
                  type: string
                  example: NY
                country:
                  type: string
                  example: US
                phone:
                  type: string
                  example: '9177563007'
                email:
                  type: string
                  example: johnd@gmail.com
                ssN4:
                  type: string
                  example: '1210'
                driverLicenseNumber:
                  type: string
                  example: '12345678'
                driverLicenseState:
                  type: string
                  example: TX
            guid:
              type: string
              example: b34bec7f-6ef0-42d8-8811-1bea8d2260fe
        addressVerificationCode:
          type: string
          example: 'N'
        addressVerificationResult:
          type: string
          example: >-
            No match. Acquirer sent postal/ZIP code only, or street address
            only, or both postal/ZIP and street address.
        cvvVerificationCode:
          type: string
          example: M
        cvvVerificationResult:
          type: string
          example: >-
            CVV2 Match. Indicates that the Funds Transfer API or the issuer was
            able to verify the CVV2 value provided by the merchant.
        riskResponse:
          type: object
          properties:
            transactionId:
              type: string
              example: DGJK0BBRH2NH
            response:
              type: string
              example: Approved
            reason:
              type: string
              example: ''
            score:
              type: string
              example: '34'
        type:
          type: string
          example: Default
    AuthenticationAcquireClientAuthorization202Response:
      oneOf:
        - title: 3DS Device Fingerprint Response Example
          type: object
          properties:
            guid:
              type: string
              example: 92bcd4df-5576-48be-b4a6-8c142669a8b6
            status:
              type: string
              example: 3DS - Pending Fingerprint
            timeStamp:
              type: string
              example: '2022-11-28T19:49:13.7902906Z'
            deviceGuid:
              type: string
              example: e639a1dc-5cc4-43de-ab74-d5bea6c6b107
            amount:
              type: integer
              example: 1
              default: 0
            redirectUrl:
              type: string
              example: https://x3d-sim.credorax.net/acs/3ds-method
            redirectUrlRequestPayload:
              type: string
              example: >-
                threeDSMethodData=eyJ0aHJlZURTTWV0aG9kTm90aWZpY2F0aW9uVVJMIjoiaHR0cHM6Ly9zYWxlc2FwaS5jb25uZXhwYXlkZXYuY29tL2FwaS92MS8zZHMvY2FsbGJhY2siLCJ0aHJlZURTU2VydmVyVHJhbnNJRCI6ImI5M2MzODkyLTFiMjItNDFlOS1iZmE3LTdkNTMzNzYzMTExMiJ9
            card:
              type: object
              properties:
                first6:
                  type: string
                  example: '401881'
                first4:
                  type: string
                  example: '4018'
                last4:
                  type: string
                  example: '0010'
                cardHolderName:
                  type: string
                  example: Jason Harmon
                cardType:
                  type: string
                  example: Visa
                expirationDate:
                  type: string
                  example: 2023-12
                guid:
                  type: string
                  example: 704f6c0b-1da4-4687-9a43-fdd4c46bb69b
        - title: 3DS Cardholder Challenge Response Example
          type: object
          properties:
            guid:
              type: string
              example: 92bcd4df-5576-48be-b4a6-8c142669a8b6
            status:
              type: string
              example: 3DS - Pending User Challenge
            timeStamp:
              type: string
              example: '2022-11-28T19:49:13.7902906Z'
            deviceGuid:
              type: string
              example: e639a1dc-5cc4-43de-ab74-d5bea6c6b107
            amount:
              type: integer
              example: 1
              default: 0
            redirectUrl:
              type: string
              example: https://x3d-sim.credorax.net/acs/3ds-method
            card:
              type: object
              properties:
                first6:
                  type: string
                  example: '401881'
                first4:
                  type: string
                  example: '4018'
                last4:
                  type: string
                  example: '0010'
                cardHolderName:
                  type: string
                  example: Jason Harmon
                cardType:
                  type: string
                  example: Visa
                expirationDate:
                  type: string
                  example: 2023-12
                guid:
                  type: string
                  example: 704f6c0b-1da4-4687-9a43-fdd4c46bb69b
    TransactionCaptureAuthorizationResponse:
      type: object
      properties:
        guid:
          type: string
          example: 5669a85c-d1a4-43ac-b799-8bc7f4ffb509
        sale:
          type: object
          properties:
            guid:
              type: string
              example: 52785a8e-9616-4e1c-b01d-365a99b256b0
            status:
              type: string
              example: Transaction - Approved
            type:
              type: string
              example: Default
            batchStatus:
              type: string
              example: Batch - Open
            timeStamp:
              type: string
              example: '2020-07-12T21:58:00.15+06:00'
            deviceGuid:
              type: string
              example: 0b7a9536-9fcd-4074-a841-d47eef77b81b
            amount:
              type: integer
              example: 10
              default: 0
            activated:
              type: boolean
              example: true
              default: true
            tenderType:
              type: string
              example: Credit
            effectiveAmount:
              type: integer
              example: 10
              default: 0
            riskResponse:
              type: object
              properties:
                transactionId:
                  type: string
                  example: DGG80N33TZTR
                response:
                  type: string
                  example: Approved
                reason:
                  type: string
                  example: ''
                score:
                  type: string
                  example: '34'
            orderNumber:
              type: string
              example: '159874'
            cardDataSource:
              type: string
              example: INTERNET
            customerID:
              type: string
              example: xt147
            batchGuid:
              type: string
              example: 5a80016c-d96f-4339-8e84-47aaf7aff2fd
            connexPayTransaction:
              type: object
              properties:
                guid:
                  type: string
                  example: 9eb92a4c-2cd2-4ffa-9959-498aae8a7279
                expectedPayments:
                  type: integer
                  example: 5
                  default: 0
                incomingTransCode:
                  type: string
                  example: B549C92637301662802350529
            processorStatusCode:
              type: string
              example: A0000
            processorResponseMessage:
              type: string
              example: Success
            wasProcessed:
              type: boolean
              example: true
              default: true
            authCode:
              type: string
              example: VTLMC1
            refNumber:
              type: string
              example: '23181066'
            customerReceipt:
              type: string
              example: >-
                Agent Booking 123\n8320 S HARDY DRIVE\nTEMPE AZ
                85284\n07/12/2020 02:57:57\n\nCREDIT - SALE\n\nCARD # : ****
                **** **** 4111\nCARD TYPE :MASTERCARD\nEntry Mode :
                MANUAL\n\nTRANSACTION ID : 23181066\nInvoice number :
                159874\nAUTH CODE : VTLMC1\nSubtotal:                      
                $10.00\n--------------------------------------\nTotal:                         
                $10.00\n--------------------------------------\n\n\n\nJohn
                Doe\n\nCUSTOMER ACKNOWLEDGES RECEIPT OF\nGOODS AND/OR SERVICES
                IN THE AMOUNT\nOF THE TOTAL SHOWN HEREON AND AGREES\nTO PERFORM
                THE OBLIGATIONS SET FORTH\nBY THE CUSTOMER'S AGREEMENT WITH
                THE\nISSUER\nAPPROVED\n\n\n\n\nCustomer Copy\n
            statementDescription:
              type: string
              example: Agent Booking 123
            generatedBy:
              type: string
              example: rrmerchant
            card:
              type: object
              properties:
                first6:
                  type: string
                  example: '541333'
                first4:
                  type: string
                  example: '5413'
                last4:
                  type: string
                  example: '4111'
                cardHolderName:
                  type: string
                  example: John Doe
                cardType:
                  type: string
                  example: Mastercard
                expirationDate:
                  type: string
                  example: 2019-12
                customer:
                  type: object
                  properties:
                    guid:
                      type: string
                      example: 20fbe746-21c5-4325-b307-c46765061efe
                    firstName:
                      type: string
                      example: John
                    lastName:
                      type: string
                      example: Doe
                    dateOfBirth:
                      type: string
                      example: '1990-12-07T00:00:00'
                    address1:
                      type: string
                      example: 107 7th Av.
                    address2:
                      type: string
                      example: ''
                    zip:
                      type: string
                      example: '10007'
                    city:
                      type: string
                      example: New York
                    state:
                      type: string
                      example: NY
                    country:
                      type: string
                      example: US
                    phone:
                      type: string
                      example: '9177563007'
                    email:
                      type: string
                      example: johnd@gmail.com
                    ssN4:
                      type: string
                      example: '1210'
                    driverLicenseNumber:
                      type: string
                      example: '12345678'
                    driverLicenseState:
                      type: string
                      example: TX
                guid:
                  type: string
                  example: fb0377b7-d6d2-4e61-b30a-f590f39b2ea8
            addressVerificationCode:
              type: string
              example: 'N'
            addressVerificationResult:
              type: string
              example: >-
                No match. Acquirer sent postal/ZIP code only, or street address
                only, or both postal/ZIP and street address.
            cvvVerificationCode:
              type: string
              example: M
            cvvVerificationResult:
              type: string
              example: >-
                CVV2 Match. Indicates that the Funds Transfer API or the issuer
                was able to verify the CVV2 value provided by the merchant.
    TransactionCaptureAuthorization400Response:
      type: object
      properties: {}
    VerificationCardBankAccountResponse:
      oneOf:
        - title: Verify Card Response Example
          type: object
          properties:
            guid:
              type: string
              example: 9a72c29f-cc89-495c-a2b7-e25faeb850ac
            status:
              type: string
              example: Transaction - Approved
            timeStamp:
              type: string
              example: '2022-10-26T09:56:43.07-05:00'
            deviceGuid:
              type: string
              example: 0b7a9536-9fcd-4074-a841-d47eef77b81b
            card:
              type: object
              properties:
                first6:
                  type: string
                  example: '411111'
                first4:
                  type: string
                  example: '4111'
                last4:
                  type: string
                  example: '1111'
                cardHolderName:
                  type: string
                  example: John Verify
                cardType:
                  type: string
                  example: Visa
                expirationDate:
                  type: string
                  example: 2022-12
                guid:
                  type: string
                  example: 0ca56348-fa53-4ef0-87b0-3b3a096a629b
                customer:
                  type: object
                  properties:
                    guid:
                      type: string
                      example: c5bf2c6f-3da9-4199-ba84-44208d61efad
                    firstName:
                      type: string
                      example: John
                    lastName:
                      type: string
                      example: Verify
                    dateOfBirth:
                      type: string
                      example: '1991-11-11T00:00:00'
                    address1:
                      type: string
                      example: 111 11th Av.
                    address2:
                      type: string
                      example: ''
                    zip:
                      type: string
                      example: '10011'
                    city:
                      type: string
                      example: New York
                    country:
                      type: string
                      example: US
                    phone:
                      type: string
                      example: '9177563051'
                    email:
                      type: string
                      example: JohnVerify@test.com
                    ssN4:
                      type: string
                      example: '1210'
                    driverLicenseNumber:
                      type: string
                      example: '12345678'
            addressVerificationCode:
              type: string
              example: 'N'
            cvvVerificationCode:
              type: string
              example: M
            processorStatusCode:
              type: string
              example: A0000
            wasProcessed:
              type: boolean
              example: true
              default: true
        - title: Verify Bank Account Response Example
          type: object
          properties:
            guid:
              type: string
              example: 08d690d1-c7db-40db-9057-08877fa2e117
            status:
              type: string
              example: Transaction - Approved
            timeStamp:
              type: string
              example: '2022-10-26T09:48:59.14-05:00'
            deviceGuid:
              type: string
              example: 0b7a9536-9fcd-4074-a841-d47eef77b81b
            bankAccount:
              type: object
              properties:
                guid:
                  type: string
                  example: df65d7ef-0f21-4df6-bca0-c56cc0416229
                accountType:
                  type: string
                  example: Checking
                accountNumberLastFour:
                  type: string
                  example: '2333'
                nameOnAccount:
                  type: string
                  example: PR
                customer:
                  type: object
                  properties:
                    guid:
                      type: string
                      example: 50fe7902-d3e4-4da2-a015-e847ffadd297
                    firstName:
                      type: string
                      example: Ping
                    lastName:
                      type: string
                      example: VerifyTest
                accountAndRoutingNumberToken:
                  type: string
                  example: >-
                    c64giUcZ/gscrJI+r4HSHxs5pUZgk51WIHdIUhcN8WGlPncRcfcWFegqw6n/ZOLViIObEye4kAub8cfP3CCNCv4JZw28vKirJj1SI4sa6N89/RRPSCql4oIS8kxZ9dBdfBbld2znQhrGR80ToS9GiTMcxyFKIt3anSWqZue07CYweaAK/TpE1AJdbCL/CFNyEQQLxy3KgaQoEEa4/MFW7qENJmjqc3uqM3D5BvqwhSxQhyL8ozaRxfSd2f5GB6ipAJgxH5snpuLGi0QAFjdJwHWeh4G21EAUhjqdVsiYjpo/5zWmoZ3mq8Y5j3gXZgutxyaqEsb1QvD/McDvs+0GXA==
            processorStatusCode:
              type: string
              example: A1
            wasProcessed:
              type: boolean
              example: true
              default: true
    AuthenticationObtain3DSecureAuthenticationResponse:
      type: object
      properties:
        guid:
          type: string
          example: 74fb35e7-3b41-427a-969b-1fc42a35fb11
        status:
          type: string
          example: 3DS - Approved
        timeStamp:
          type: string
          example: '2023-08-16T16:40:29.6401705Z'
        deviceGuid:
          type: string
          example: e639a1dc-5cc4-43de-ab74-d5bea6c6b107
        amount:
          type: integer
          example: 0
          default: 0
        threeDSStatus:
          type: string
          example: 'Y'
        SecureData:
          type: string
          example: 06:3030303030303030303030313130363639393458:none
        Cavv:
          type: string
          example: MDAwMDAwMDAwMDAxMTA2Njk5NFg=
        Version:
          type: string
          example: 2.1.0
        DirectoryServerTransactionID:
          type: string
          example: 5066e271-4752-4445-a025-235c7789c151
        AcsTransactionId:
          type: string
          example: 09a291d3-92b5-4354-b31a-5446409444f3
        ECI:
          type: string
          example: '06'
        card:
          type: object
          properties:
            first6:
              type: string
              example: '401881'
            first4:
              type: string
              example: '4018'
            last4:
              type: string
              example: '0036'
            cardHolderName:
              type: string
              example: Jason Harmon
            cardType:
              type: string
              example: Visa
            expirationDate:
              type: string
              example: 2023-12
            guid:
              type: string
              example: c3398555-e4c0-43da-b3ca-6abc475b79b9
        exemptThreeDSRequest:
          type: boolean
          example: false
          default: true
        exemptThreeDSPayment:
          type: boolean
          example: false
          default: true
    AuthenticationObtain3DSecureAuthentication202Response:
      oneOf:
        - title: 3DS Device Fingerprint Response Example
          type: object
          properties:
            version:
              type: string
              example: 2.1.0
            guid:
              type: string
              example: 3a0d533f-588b-4ce4-920f-7bc4641ea8f7
            status:
              type: string
              example: 3DS - Pending Fingerprint
            timeStamp:
              type: string
              example: '2023-08-16T16:44:40.9866697Z'
            deviceGuid:
              type: string
              example: e639a1dc-5cc4-43de-ab74-d5bea6c6b107
            amount:
              type: number
              example: 1.34
              default: 0
            redirectUrl:
              type: string
              example: https://x3d-sim.credorax.net/acs/3ds-method
            redirectUrlRequestPayload:
              type: string
              example: >-
                threeDSMethodData=eyJ0aHJlZURTTWV0aG9kTm90aWZpY2F0aW9uVVJMIjoiaHR0cHM6Ly9zYWxlc2FwaS5jb25uZXhwYXlkZXYuY29tL2FwaS92MS8zZHMvY2FsbGJhY2siLCJ0aHJlZURTU2VydmVyVHJhbnNJRCI6ImU2YmNjM2RiLTAwZjQtNDdiZi05OTgwLTljZjE2MTUxOGM5NyJ9
            card:
              type: object
              properties:
                first6:
                  type: string
                  example: '401881'
                first4:
                  type: string
                  example: '4018'
                last4:
                  type: string
                  example: '0010'
                cardHolderName:
                  type: string
                  example: Jason Harmon
                cardType:
                  type: string
                  example: Visa
                expirationDate:
                  type: string
                  example: 2023-12
                guid:
                  type: string
                  example: c6b816a3-f107-40d5-9dc3-bcefc576c8bc
            exemptThreeDSRequest:
              type: boolean
              example: false
              default: true
            exemptThreeDSPayment:
              type: boolean
              example: false
              default: true
        - title: 3DS Cardholder Challenge Response Example
          type: object
          properties:
            version:
              type: string
              example: 2.1.0
            guid:
              type: string
              example: a41dd8ab-8629-42c0-8a6f-8b9162a93ccc
            status:
              type: string
              example: 3DS - Pending User Challenge
            timeStamp:
              type: string
              example: '2023-08-16T16:45:23.9986814Z'
            deviceGuid:
              type: string
              example: e639a1dc-5cc4-43de-ab74-d5bea6c6b107
            amount:
              type: number
              example: 1.34
              default: 0
            threeDSStatus:
              type: string
              example: C
            directoryServerTransactionID:
              type: string
              example: 72f4afb2-c057-4abc-b054-9fae4b4ceb49
            acsTransactionId:
              type: string
              example: 7c6670d1-d888-4af5-b5f4-db286ba6c20a
            redirectUrl:
              type: string
              example: >-
                https://x3d-any-int.credorax.net/challenge/request/CONN2978/2534bb4d055f10423709276026df821ff3c8
            card:
              type: object
              properties:
                first6:
                  type: string
                  example: '401881'
                first4:
                  type: string
                  example: '4018'
                last4:
                  type: string
                  example: '0015'
                cardHolderName:
                  type: string
                  example: Jason Harmon
                cardType:
                  type: string
                  example: Visa
                expirationDate:
                  type: string
                  example: 2023-12
                guid:
                  type: string
                  example: 2c032f47-f7ab-4849-9715-0b4bacf252a3
            exemptThreeDSRequest:
              type: boolean
              example: false
              default: true
            exemptThreeDSPayment:
              type: boolean
              example: false
              default: true
    AuthenticationObtain3DSecureAuthentication400Response:
      type: string
      example: ''
    StatusGroup3DsAuthenticationStatusResponse:
      type: object
      properties:
        version:
          type: string
          example: 2.1.0
        guid:
          type: string
          example: 34f3ae17-89c4-4bc8-b085-f46eef5af3d6
        status:
          type: string
          example: 3DS - Approved
        timeStamp:
          type: string
          example: '2022-12-07T14:50:18.33'
        deviceGuid:
          type: string
          example: e639a1dc-5cc4-43de-ab74-d5bea6c6b107
        amount:
          type: number
          example: 11.35
          default: 0
        secureData:
          type: string
          example: 05:0099010281111100000000788400707000000000:none
        eci:
          type: string
          example: '05'
        cavv:
          type: string
          example: AJkBAoEREQAAAAB4hABwcAAAAAA=
        directoryServerTransactionID:
          type: string
          example: a52b6caa-d58e-4d72-8007-bf026acebecc
        acsTransactionId:
          type: string
          example: 7c6670d1-d888-4af5-b5f4-db286ba6c20a
        card:
          type: object
          properties:
            first6:
              type: string
              example: '401881'
            first4:
              type: string
              example: '4018'
            last4:
              type: string
              example: '0010'
            cardType:
              type: string
              example: Visa
            expirationDate:
              type: string
              example: 2025-12
            guid:
              type: string
              example: da25f77e-758a-4729-ade6-37fbbcb4675c
        processorResponseCode:
          type: string
          example: '0'
        processorMessage:
          type: string
          example: Transaction has been executed successfully.
    SaleUpdateDelayedActivationResponse:
      type: string
      example: |-
        {
               "guid":"965a67b0-cd0e-4020-973b-5e0d1b4bd6e2",
               "status":"Transaction - Approved",
               "type":"Default",
               "batchStatus":"Batch - Open",
               "timeStamp":"2019-11-20T05:37:13.22-05:00",
               "deviceGuid":"f758a448-7780-4b50-93a1-28329e37f94f",
               "amount":280.0,
               "activationDate":"2020-10-12T00:00:00",
               "activated":false,       
               "tenderType":"Credit",
               "effectiveAmount":280.0,
               "orderNumber":"159874",
               "cardDataSource":"INTERNET",
               "customerID":"xt147",
               "batchGuid":"c71d0ee6-b595-4792-b1ee-1156d28be132",
               "riskProcessingOnly":false,
               "processorStatusCode":"A0000",
               "processorResponseMessage":"Success",
               "wasProcessed":true,
               "generatedBy":"tcformal1",
               "card":{
                  "first4":"4716",
                  "last4":"0473",
                  "cardNumber":"CARD NOT TOKENIZED",
                  "cardHolderName":"John Doe",
                  "cardType":"Visa",
                  "expirationDate":"2019-12",
               },
               "sequenceNumber":"849741",
               "addressVerificationResult":"No match. Acquirer sent postal/ZIP code only, or street address only, or both postal/ZIP and street address.",
               "cvvVerificationCode":"M",
               "cvvVerificationResult":"CVV2 Match. Indicates that the Funds Transfer API or the issuer was able to verify the CVV2 value provided by the merchant."
               "incomingTransactionCode":"09ASECYE48S9KHBQL00028000"
            }
    SaleUpdateDelayedActivation400Response:
      type: object
      properties: {}
    SaleActivateDelayedResponse:
      type: object
      properties: {}
    SaleActivateDelayed400Response:
      type: object
      properties: {}
    SaleSearchSalesResponse:
      type: object
      properties:
        pageCurrent:
          type: integer
          example: 1
          default: 0
        pageCurrentResults:
          type: integer
          example: 1
          default: 0
        pageTotal:
          type: integer
          example: 1
          default: 0
        pageSize:
          type: integer
          example: 1
          default: 0
        totalResults:
          type: integer
          example: 1
          default: 0
        cardSummary: {}
        searchResultDTO:
          type: array
          items:
            type: object
            properties:
              status:
                type: string
                example: Transaction - Approved
              amount:
                type: integer
                example: 1
                default: 0
              card:
                type: object
                properties:
                  cardHolderName: {}
                  cardType:
                    type: string
                    example: Visa
                  last4:
                    type: string
                    example: '0473'
              orderNumber: {}
              orderDate: {}
              timeStamp:
                type: string
                example: '2018-11-23T14:57:43.78-03:00'
              customerID: {}
              processorResponseMessage: {}
              effectiveAmount:
                type: integer
                example: 0
                default: 0
              batchStatus:
                type: string
                example: Batch - Open
              relatedVoid: {}
              relatedReturns: {}
              guid:
                type: string
                example: d38a9133-6643-4a0a-9675-3cd820a8b5ff
              deviceGuid:
                type: string
                example: 8ec1c40b-0c00-4a57-a9c7-7800bd52c308
              captureGuid: {}
              customData: {}
              generatedByCapture:
                type: boolean
                example: false
                default: true
              partiallyApprovedAmount: {}
              type:
                type: string
                example: Credit
              surcharge: {}
              surchargeType: {}
              serviceFee: {}
              tipAmount: {}
              cardDataSource:
                type: string
                example: INTERNET
              allowCardEmv:
                type: boolean
                example: true
                default: true
              incomingTransactionCode:
                type: string
                example: 09ZZZTAS37411231800000100
              activationDate:
                type: string
                example: '2021-10-10T00:00:00'
    SaleSearchSales400Response:
      type: object
      properties: {}
    VoidSearchVoidsResponse:
      type: object
      properties:
        pageCurrent:
          type: integer
          example: 1
          default: 0
        pageCurrentResults:
          type: integer
          example: 1
          default: 0
        pageTotal:
          type: integer
          example: 1
          default: 0
        pageSize:
          type: integer
          example: 1
          default: 0
        totalResults:
          type: integer
          example: 1
          default: 0
        cardSummary: {}
        searchResultDTO:
          type: array
          items:
            type: object
            properties:
              status:
                type: string
                example: Transaction - Approved
              sale:
                type: object
                properties:
                  amount:
                    type: integer
                    example: 10
                    default: 0
                  card:
                    type: object
                    properties:
                      cardHolderName: {}
                      cardType:
                        type: string
                        example: Visa
                      last4:
                        type: string
                        example: '0445'
              authOnly: {}
              debitSale: {}
              debitReturn: {}
              ebtFoodStampPurchase: {}
              ebtElectronicVoucher: {}
              ebtReturn: {}
              ebtCashBenefitPurchase: {}
              return: {}
              voidReason: {}
              timeStamp:
                type: string
                example: '2018-11-22T16:57:41.74'
              processorStatusCode:
                type: string
                example: A0000
              batchStatus:
                type: string
                example: Batch - Closed
              guid:
                type: string
                example: 211c7e9e-f0ce-45e1-be79-ff0333c81478
              allowCardEmv:
                type: boolean
                example: true
                default: true
    VoidSearchVoids400Response:
      type: object
      properties: {}
    ReturnSearchSaleReturnsResponse:
      type: object
      properties:
        pageCurrent:
          type: integer
          example: 1
          default: 0
        pageCurrentResults:
          type: integer
          example: 1
          default: 0
        pageTotal:
          type: integer
          example: 1
          default: 0
        pageSize:
          type: integer
          example: 1
          default: 0
        totalResults:
          type: integer
          example: 1
          default: 0
        cardSummary: {}
        searchResultDTO:
          type: array
          items:
            type: object
            properties:
              status:
                type: string
                example: Transaction - Approved
              amount:
                type: integer
                example: 150
                default: 0
              card:
                type: object
                properties:
                  cardHolderName: {}
                  cardType:
                    type: string
                    example: Visa
                  last4:
                    type: string
                    example: '0267'
              timeStamp:
                type: string
                example: '2018-11-14T09:26:58.42'
              processorStatusCode:
                type: string
                example: A0000
              batchStatus:
                type: string
                example: Batch - Closed
              guid:
                type: string
                example: 451dd720-18e6-48b2-a8fa-b9ae4579c3fc
              relatedVoid: {}
              deviceGuid:
                type: string
                example: 8ec1c40b-0c00-4a57-a9c7-7800bd52c308
              type:
                type: string
                example: CreditReturn
              cardDataSource:
                type: string
                example: ''
              allowCardEmv:
                type: boolean
                example: true
                default: true
    ReturnSearchSaleReturns400Response:
      type: object
      properties: {}
    ValidationSearchVerifyOperationResponse:
      type: object
      properties:
        pageCurrent:
          type: integer
          example: 1
          default: 0
        pageCurrentResults:
          type: integer
          example: 1
          default: 0
        pageTotal:
          type: integer
          example: 1
          default: 0
        pageSize:
          type: integer
          example: 1
          default: 0
        totalResults:
          type: integer
          example: 1
          default: 0
        cardSummary: {}
        searchResultDTO:
          type: array
          items:
            type: object
            properties:
              status:
                type: string
                example: Transaction - Approved
              card:
                type: object
                properties:
                  cardHolderName: {}
                  cardType:
                    type: string
                    example: Mastercard
                  last4:
                    type: string
                    example: '0759'
              timeStamp:
                type: string
                example: '2018-11-09T15:34:49.91'
              processorStatusCode:
                type: string
                example: A0000
    ValidationSearchVerifyOperation400Response:
      type: object
      properties: {}
    TokenRequestHppTokenResponse:
      type: object
      properties:
        description:
          type: string
          example: Hundred Dollar Trip
        merchantName:
          type: string
          example: ACME
        amount:
          type: integer
          example: 100
          default: 0
        resultRedirectUrl:
          type: string
          example: https://sandboxsales.connexpay.com/#!/HostedPaymentResult
        tempToken:
          type: string
          example: 8263d54a-b61b-4601-a4a8-f7231565b87e
        expiration:
          type: string
          example: '2020-11-20T14:35:59.14'
        logoUrl:
          type: string
          example: https://connexpay.com/wp-content/uploads/2018/10/newlogo.png
    TokenRequestHppToken400Response:
      type: object
      properties: {}
    FundingMerchantCashBalanceResponse:
      type: object
      properties:
        merchantGuid:
          type: string
          example: f758a448-7780-4b50-93a1-28329e37f94f
        requestIp:
          type: string
          example: 127.0.0.1
        amount:
          type: number
          example: 12.2
          default: 0
        isFundCashBalance:
          type: boolean
          example: false
          default: true
        bankAccount:
          type: object
          properties:
            guid:
              type: string
              example: 965a67b0-cd0e-4020-973b-5e0d1b4bd6e2
            accountType:
              type: string
              example: Saving
            accountNumberLastFour:
              type: string
              example: '2222'
            nameOnAccount:
              type: string
              example: Merchant DBA Name
            customer:
              type: object
              properties:
                guid:
                  type: string
                  example: b364a8c9-20e5-462b-bb0b-f504302e3175
                businessName:
                  type: string
                  example: Merchant DBA Name
    FundingMerchantCashBalance422Response:
      type: object
      properties:
        message:
          type: string
          example: >-
            Something went wrong on creating merchant self service funding
            request.
        errorCode:
          type: integer
          example: 207000
          default: 0
        errorId:
          type: string
          example: '637832099954665799'
    FundingMerchantCashBalance500Response:
      type: object
      properties:
        message:
          type: string
          example: An error has occurred.
        exceptionMessage:
          type: string
          example: Object reference not set to an instance of an object.
        exceptionType:
          type: string
          example: System.NullReferenceException
        stackTrace:
          type: string
          example: "   at SPG.WebApi.Controllers.MerchantSelfServiceFundingController.<>c__DisplayClass3_0.<<Create>b__0>d.MoveNext() in C:\\src\\sales\\sales\\Code\\SPG.WebApi\\Controllers\\Merchant\\MerchantSelfServiceFundingController.cs:line 48\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at System.Runtime.CompilerServices.TaskAwaiter`1.GetResult()\r\n   at SPG.WebApi.Controllers.ConnexPayApiController.<SimpleMethodWrapper>d__0.MoveNext() in C:\\src\\sales\\sales\\Code\\SPG.WebApi\\Controllers\\ConnexPayApiController.cs:line 23"
    FundingTransferMerchantCashBalanceResponse:
      type: object
      properties:
        TransferredFrom:
          type: string
          example: 10DAD551-5FB8-456B-BC69-F6D903C93D40
        TransferredTo:
          type: string
          example: EBFF36A1-E430-4998-A8C1-18840D6C8D90
        Amount:
          type: integer
          example: 100
          default: 0
    FundingTransferMerchantCashBalance422Response:
      type: object
      properties: {}
    FundingTransferMerchantCashBalance500Response:
      type: object
      properties: {}
    CardIssuanceCreateVirtualCardResponse:
      type: string
      example: |-
        {
           "cardHolder":{
              "cardHolderGuid":"a2b25172-c863-4325-b3b9-7e33cff2f8d1",
              "firstName":"Adam",
              "lastName":"Smith",
              "phone":"7411237489",
              "address1":"345 Main Road",
              "address2":"",
              "city":"Miami Beach",
              "state":"MI",
              "zipcode":"33109",
              "country":"MX"
           },
           "card":{
              "cardGuid":"ae17f687-8ba7-4502-b627-24fdf5e6f218",
              "accountNumber":"1111118971563394",
              "securityCode":"617",
              "amountLimit":180.55,
              "usageLimit":10,
              "expirationDate":"2024-12-30T18:59:59",
              "expiration":"1219",
              "terminateDate": "2024-12-30T23:59:59",
              "currencyCode":"USD",
              "firstSix":"111111",
              "lastFour":"3394",
              "nameLine1":"Adam",
              "nameLine2":"Smith",
              "status":"Card - Active",
              "sequenceNumber": "Sample-seq-1",
              "labelIds": [
                    889,
                    992
                ],  
           },
           "cardBrand":"MasterCard",
           "cardClass":"Commercial",
           "saleGuid": "d49e4881-34e5-461f-9d43-0efb0d94039d"
        }
    CardIssuanceCreateVirtualCard400Response:
      type: object
      properties: {}
    CardIssueCreateVirtualCardLiteResponse:
      type: string
      example: |-
        {
               "cardHolder":{
                  "cardHolderGuid":"a2b25172-c863-4325-b3b9-7e33cff2f8d1",
                  "firstName":"Adam",
                  "lastName":"Smith",
                  "phone":"7411237489",
                  "address1":"345 Main Road",
                  "address2":"",
                  "city":"Miami Beach",
                  "state":"MI",
                  "zipcode":"33109",
                  "country":"MX"
               },
               "card":{
                  "cardGuid":"ae17f687-8ba7-4502-b627-24fdf5e6f218",
                  "accountNumber":"1111118971563394",
                  "securityCode":"617",
                  "amountLimit":180.0,
                  "usageLimit":10,
                  "expirationDate":"2024-12-30T18:59:59",
                  "expiration":"1219",
                  "terminateDate": "2023-12-30T23:59:59",
                  "currencyCode":"USD",
                  "firstSix":"111111",
                  "lastFour":"3394",
                  "nameLine1":"Adam",
                  "nameLine2":"Smith",
                  "status":"Card - Active",
                  "sequenceNumber": "Sample-seq-1",
                  "labelIds": [
                        889,
                        992
                    ], 
               },
               "cardBrand":"MasterCard",
               "cardClass":"Commercial",
               "orderNumber":"OrderNumber-1",
               "customerID":"CustomerID-1",
               "saleGuid": "d49e4881-34e5-461f-9d43-0efb0d94039d"  
            }
    CardIssueCreateVirtualCardLite400Response:
      type: object
      properties: {}
    CardCreateLodgedCardResponse:
      oneOf:
        - title: Issue Lodged Card Response Example
          type: object
          properties:
            cardHolder:
              type: object
              properties:
                cardHolderGuid:
                  type: string
                  example: b6557b9b-d0c5-49fd-a080-2be59a36ddf2
                firstName:
                  type: string
                  example: Ping
                lastName:
                  type: string
                  example: Test
                phone:
                  type: string
                  example: '5162532222'
                address1:
                  type: string
                  example: 107 Techlogy Park
                address2:
                  type: string
                  example: ''
                city:
                  type: string
                  example: PT Corners
                state:
                  type: string
                  example: NY
                zipcode:
                  type: string
                  example: '30092'
                country:
                  type: string
                  example: US
            card:
              type: object
              properties:
                cardGuid:
                  type: string
                  example: c67514a0-3110-4731-98b0-38858f282ade
                accountNumber:
                  type: string
                  example: '1111117027148580'
                securityCode:
                  type: string
                  example: '818'
                amountLimit:
                  type: number
                  example: 3.22
                  default: 0
                usageLimit:
                  type: integer
                  example: 1
                  default: 0
                limitWindow:
                  type: string
                  example: DAY
                expirationDate:
                  type: string
                  example: '2024-12-30T23:59:59'
                expiration:
                  type: string
                  example: '0624'
                currencyCode:
                  type: string
                  example: USD
                firstSix:
                  type: string
                  example: '111111'
                lastFour:
                  type: string
                  example: '8580'
                nameLine1:
                  type: string
                  example: Ping
                nameLine2:
                  type: string
                  example: Test
                status:
                  type: string
                  example: Card - Active
                midWhitelist:
                  type: array
                  items:
                    type: string
                    example: '111'
                midBlacklist:
                  type: array
                  items:
                    type: string
                    example: '777'
            cardBrand:
              type: string
              example: Visa
            cardClass:
              type: string
              example: Commercial
            saleGuid:
              type: string
              example: d49e4881-34e5-461f-9d43-0efb0d94039d
        - title: Issue Lodged Card (ReturnCardData = False) Response Example
          type: object
          properties:
            cardHolder:
              type: object
              properties:
                cardHolderGuid:
                  type: string
                  example: b6557b9b-d0c5-49fd-a080-2be59a36ddf2
                firstName:
                  type: string
                  example: Ping
                lastName:
                  type: string
                  example: Test
                phone:
                  type: string
                  example: '5162532222'
                address1:
                  type: string
                  example: 107 Techlogy Park
                address2:
                  type: string
                  example: ''
                city:
                  type: string
                  example: PT Corners
                state:
                  type: string
                  example: NY
                zipcode:
                  type: string
                  example: '30092'
                country:
                  type: string
                  example: US
            card:
              type: object
              properties:
                cardGuid:
                  type: string
                  example: c67514a0-3110-4731-98b0-38858f282ade
                amountLimit:
                  type: number
                  example: 3.22
                  default: 0
                usageLimit:
                  type: integer
                  example: 1
                  default: 0
                limitWindow:
                  type: string
                  example: DAY
                expirationDate:
                  type: string
                  example: '2024-12-30T23:59:59'
                expiration:
                  type: string
                  example: '0624'
                currencyCode:
                  type: string
                  example: USD
                firstSix:
                  type: string
                  example: '111111'
                lastFour:
                  type: string
                  example: '8580'
                nameLine1:
                  type: string
                  example: Ping
                nameLine2:
                  type: string
                  example: Test
                status:
                  type: string
                  example: Card - Active
                midWhitelist:
                  type: array
                  items:
                    type: string
                    example: '111'
                midBlacklist:
                  type: array
                  items:
                    type: string
                    example: '777'
            cardBrand:
              type: string
              example: Visa
            cardClass:
              type: string
              example: Commercial
            saleGuid:
              type: string
              example: d49e4881-34e5-461f-9d43-0efb0d94039d
    CardCreateLodgedCard400Response:
      type: object
      properties: {}
    CardUpdateCardDetailsResponse:
      type: object
      properties:
        card:
          type: object
          properties:
            cardGuid:
              type: string
              example: 22724a6c-bf3e-409b-9593-c74648506aa7
            amountLimit:
              type: integer
              example: 13
              default: 0
            usageLimit:
              type: integer
              example: 22
              default: 0
            limitWindow:
              type: string
              example: LIFETIME
            expirationDate:
              type: string
              example: '2022-12-19T00:00:00'
            expiration:
              type: string
              example: '1222'
            firstSix:
              type: string
              example: '499999'
            lastFour:
              type: string
              example: '7354'
            nameLine1:
              type: string
              example: Jim
            nameLine2:
              type: string
              example: Rayeek
            status:
              type: string
              example: Card - Active
            cardType:
              type: string
              example: Visa
            associationId:
              type: string
              example: Test
            clientProgram:
              type: string
              example: '31'
        mccGroupName:
          type: string
          example: Hotels and Resorts
    CardUpdateCardDetails400Response:
      type: object
      properties: {}
    CardUpdateLodgedCardResponse:
      type: object
      properties:
        card:
          type: object
          properties:
            cardGuid:
              type: string
              example: 0de2e407-5509-40c0-8b59-44e1b2b81f23
            amountLimit:
              type: integer
              example: 1004
              default: 0
            usageLimit:
              type: integer
              example: -1
              default: 0
            limitWindow:
              type: string
              example: MONTH
            expirationDate:
              type: string
              example: '2021-12-30T23:59:59'
            expiration:
              type: string
              example: '1221'
            firstSix:
              type: string
              example: '111111'
            lastFour:
              type: string
              example: '0033'
            nameLine1:
              type: string
              example: Monim
            nameLine2:
              type: string
              example: Lodged
            status:
              type: string
              example: Card - Active
            cardType:
              type: string
              example: Other
            midWhitelist:
              type: array
              items:
                type: string
                example: '1210000163087898'
            midBlacklist:
              type: array
              items:
                type: string
                example: '1210000163083918'
        mccGroupName:
          type: string
          example: Airline
    CardUpdateLodgedCard400Response:
      type: object
      properties: {}
    CardTerminateByDateResponse:
      type: object
      properties:
        cardGuid:
          type: string
          example: d66d7435-fe07-46be-97d4-7699c2bcf841
        amountLimit:
          type: integer
          example: 25
          default: 0
        usageLimit:
          type: integer
          example: 2
          default: 0
        limitWindow:
          type: string
          example: LIFETIME
        expirationDate:
          type: string
          example: '2023-05-31T00:00:00-04:00'
        expiration:
          type: string
          example: '0623'
        terminateDate:
          type: string
          example: '2023-06-18T23:59:59'
        currencyCode:
          type: string
          example: USD
        firstSix:
          type: string
          example: '111111'
        lastFour:
          type: string
          example: '9999'
        nameLine1:
          type: string
          example: CardName1
        nameLine2:
          type: string
          example: CardName2
        status:
          type: string
          example: Card - Deactivated
        customerServicePhoneNumber:
          type: string
          example: 1-612-789-9999
        sequenceNumber:
          type: string
          example: Termination Sample
        cardType:
          type: string
          example: Visa
        gatewayMerchantGuid:
          type: string
          example: 9994975d-4eb8-45a1-a9b5-ce1b596dbc99
        availableBalance:
          type: integer
          example: 0
          default: 0
        isPhysical:
          type: boolean
          example: false
          default: true
        isLodged:
          type: boolean
          example: false
          default: true
        fingerprint:
          type: string
          example: 994A1895A50182BC080EE761B571E5EE
    CardTerminateByDate400Response:
      type: object
      properties:
        message:
          type: string
          example: The request is invalid.
    CardResendTransmissionInfoResponse:
      type: object
      properties:
        linkToCard:
          type: string
          example: >-
            https://sandboxpurchasesapi.connexpay.com//cards?token=eyJhbGciOiJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzA0L3htbGRzaWctbW9yZSNobWFjLXNoYTI1NiIsInR5cCI6IkpXVCJ9.eyJDYXJkR3VpZCI6IjBmZTI4M2MwLTc2MjYtNGVhNS1iMWUwLTc1MTNkMjk3MTY1YiIsIk1lcmNoYW50UGhvbmUiOiI1MTYyNTMyMjIyIiwibmJmIjoxNjE5NjA2NzY0LCJleHAiOjE2MTk2OTMxNjQsImlhdCI6MTYxOTYwNjc2NCwiaXNzIjoiaHR0cHM6Ly9QdXJjaGFzZXMuY29ubmV4cGF5LmNvbS8iLCJhdWQiOiJNZXJjaGFudHMifQ.QKoqNWksbvq4VUzArS0dCeG67rFOPZb8k8Yvj11eF2c
    CardResendTransmissionInfo400Response:
      type: object
      properties: {}
    CardGetDetailResponse:
      type: object
      properties:
        cardGuid:
          type: string
          example: b6c86e82-5621-440c-94ea-6bd5692e0497
        expirationDate:
          type: string
          example: '2022-12-30T23:59:59'
        expiration:
          type: string
          example: '1222'
        terminateDate:
          type: string
          example: '2022-12-30T23:59:59'
        currencyCode:
          type: string
          example: USD
        firstSix:
          type: string
          example: '111111'
        lastFour:
          type: string
          example: '3420'
        nameLine1:
          type: string
          example: Ping
        nameLine2:
          type: string
          example: VCC
        status:
          type: string
          example: Card - Active
        bank:
          type: integer
          example: 1
          default: 0
        issuedAmount:
          type: integer
          example: 80
          default: 0
        cardType:
          type: string
          example: Other
        purchaseType:
          type: string
          example: '01'
        availableBalance:
          type: integer
          example: 80
          default: 0
    AddendumCreateVirtualCardResponse:
      type: object
      properties:
        guid:
          type: string
          example: 3d1d79c8-3b3e-4bba-be77-e74df716c47c
        itemGuid:
          type: string
          example: 2b586234-7f14-432e-b0f4-a2935f783f38
        value:
          type: string
          example: 5AH6FT
        category:
          type: string
          example: PNR
        idExternal:
          type: string
          example: '299'
        note:
          type: string
          example: Additional Info
        sequence:
          type: string
          example: TICKET1
    AddendumDeleteItemResponse:
      type: object
      properties:
        message:
          type: string
          example: Addendum Removed
    AddendumDeleteItem400Response:
      type: object
      properties: {}
    CardUpdateDelayedActivationResponse:
      type: object
      properties:
        cardHolder:
          type: object
          properties:
            cardHolderGuid:
              type: string
              example: f1bcad52-4507-4333-a74e-dbc5367982ab
            firstName:
              type: string
              example: Ping
            lastName:
              type: string
              example: Lite
            phone:
              type: string
              example: '1231231234'
            address1:
              type: string
              example: 107 Techlogy Park
            address2:
              type: string
              example: ''
            city:
              type: string
              example: PT Corners
            zipcode:
              type: string
              example: '30092'
        card:
          type: object
          properties:
            cardGuid:
              type: string
              example: 1c2a5ec3-67fe-4f2d-984b-fa8acb66a2f3
            amountLimit:
              type: integer
              example: 22
              default: 0
            usageLimit:
              type: integer
              example: 2
              default: 0
            limitWindow:
              type: string
              example: LIFETIME
            expirationDate:
              type: string
              example: '2022-12-24T23:59:59'
            expiration:
              type: string
              example: '1222'
            firstSix:
              type: string
              example: '111111'
            lastFour:
              type: string
              example: '0717'
            nameLine1:
              type: string
              example: Ping
            nameLine2:
              type: string
              example: Lite
            status:
              type: string
              example: >-
                Card - Active, but delayed Activation Auth Limit of $1.0
                applied.
            activationDate:
              type: string
              example: 12/3/2021
            cardType:
              type: string
              example: Other
    CardUpdateDelayedActivation400Response:
      type: object
      properties: {}
    CardActivateDelayedResponse:
      type: object
      properties:
        cardHolder:
          type: object
          properties:
            cardHolderGuid:
              type: string
              example: f1bcad52-4507-4333-a74e-dbc5367982ab
            firstName:
              type: string
              example: Ping
            lastName:
              type: string
              example: Lite
            phone:
              type: string
              example: '1231231234'
            address1:
              type: string
              example: 107 Techlogy Park
            address2:
              type: string
              example: ''
            city:
              type: string
              example: PT Corners
            zipcode:
              type: string
              example: '30092'
        card:
          type: object
          properties:
            cardGuid:
              type: string
              example: 1c2a5ec3-67fe-4f2d-984b-fa8acb66a2f3
            amountLimit:
              type: integer
              example: 22
              default: 0
            usageLimit:
              type: integer
              example: 2
              default: 0
            limitWindow:
              type: string
              example: LIFETIME
            expirationDate:
              type: string
              example: '2022-12-24T23:59:59'
            expiration:
              type: string
              example: '1222'
            firstSix:
              type: string
              example: '111111'
            lastFour:
              type: string
              example: '0717'
            nameLine1:
              type: string
              example: Ping
            nameLine2:
              type: string
              example: Lite
            status:
              type: string
              example: Card - Active
            cardType:
              type: string
              example: Other
    CardActivateDelayed400Response:
      type: object
      properties: {}
    PushToCardManagePayeeResponse:
      type: string
    PushToCardManagePayee200Response:
      type: string
    PushToCardUpdatePayeeResponse:
      type: string
    PushToCardUpdatePayee200Response:
      type: string
    PushToCardCancelPaymentsResponse:
      type: string
    PushToCardCancelPayments200Response:
      type: string
    PushToCardPushFundsToCardAsyncResponse:
      type: string
    PushToCardPushFundsToCardAsync200Response:
      type: string
    TransactionCreateAchCreditPaymentResponse:
      type: object
      properties:
        description:
          type: string
          example: ACH Test
        merchantId:
          type: string
          example: 1818a55e-8541-4bfe-a288-bad870afbe1d
        incomingTransactionCode:
          type: string
          example: 511C171637487375170935405
        paymentId:
          type: string
          example: 6bd251b4-8dfd-4478-9e2e-41390a59687f
        isCredit:
          type: boolean
          example: true
          default: true
        amount:
          type: integer
          example: 100
          default: 0
        payeeName:
          type: string
          example: Ultra Merchant LLC
        paymentStatus:
          type: string
          example: NotYetProcessed
        scheduleDate:
          type: string
          example: '2021-02-12T00:00:00'
        receiptDate:
          type: string
          example: '2021-02-12T00:00:00'
        processingDate: {}
    TransactionCreateAchCreditPayment400Response:
      type: object
      properties: {}
    AchCreateCreditPaymentResponse:
      type: object
      properties:
        description:
          type: string
          example: ACH Test
        merchantId:
          type: string
          example: 1818a55e-8541-4bfe-a288-bad870afbe1d
        incomingTransactionCode:
          type: string
          example: 511C171637487375170935405
        paymentId:
          type: string
          example: 6bd251b4-8dfd-4478-9e2e-41390a59687f
        isCredit:
          type: boolean
          example: true
          default: true
        amount:
          type: integer
          example: 100
          default: 0
        payeeName:
          type: string
          example: Ultra Merchant LLC
        paymentStatus:
          type: string
          example: NotYetProcessed
        scheduleDate:
          type: string
          example: '2021-02-12T00:00:00'
        receiptDate:
          type: string
          example: '2021-02-12T00:00:00'
        processingDate: {}
    AchCreateCreditPayment400Response:
      type: object
      properties: {}
    AddendumCreateAchPurchaseResponse:
      type: object
      properties:
        guid:
          type: string
          example: 3d1d79c8-3b3e-4bba-be77-e74df716c47c
        itemGuid:
          type: string
          example: 2b586234-7f14-432e-b0f4-a2935f783f38
        value:
          type: string
          example: Hilton
        category:
          type: string
          example: Payee
        idExternal:
          type: string
          example: InvcNbr1234
        note:
          type: string
          example: Additional Info
        sequence:
          type: string
          example: 62321-1
    SettingTokenizeBankAccountInfoResponse:
      type: object
      properties:
        merchantGuid:
          type: string
          example: 1818a55e-8541-4bfe-a288-bad870afbe1d
        supplierName:
          type: string
          example: Joe Supplier
        timeStamp:
          type: string
          example: '2021-10-15T20:13:42.3444476Z'
        idUser:
          type: integer
          example: 114
          default: 0
        idMerchantSupplierSettings:
          type: integer
          example: 13
          default: 0
        accountHolder:
          type: object
          properties:
            accountHolderGuid:
              type: string
              example: 8b1f13fb-6085-4e6f-b4fb-eb8fb7f1ea1e
            firstName:
              type: string
              example: Test
            lastName:
              type: string
              example: Supplier3
            _businessName:
              type: string
              example: ''
            email:
              type: string
              example: test@connexpay.com
            phone:
              type: string
              example: '3121111111'
            address:
              type: object
              properties:
                address1:
                  type: string
                  example: 123 stree1
                city:
                  type: string
                  example: Minneapolis
                state:
                  type: string
                  example: MN
                country:
                  type: string
                  example: US
                zipcode:
                  type: string
                  example: '55123'
            bankAccount:
              type: object
              properties:
                bankAccountGuid:
                  type: string
                  example: 9da122a8-7e13-490c-b10d-fa3309178354
                accountType:
                  type: string
                  example: Checking
                accountHolderName:
                  type: string
                  example: PR123
                last4Digits:
                  type: string
                  example: '2333'
        userName:
          type: string
          example: test-user
    SettingTokenizeBankAccountInfo400Response:
      type: object
      properties: {}
    TransactionSearchVirtualCardHistoryResponse:
      type: object
      properties:
        transactions:
          type: array
          items:
            type: object
            properties:
              error:
                type: string
                example: >-
                  Failed to retrieve transaction
                  3a1ab440-6b29-4bcb-aa21-546a6913f8fe
    TransactionSearchVirtualCardHistory400Response:
      type: object
      properties: {}
    FundsGetAvailableDetailsResponse:
      type: string
      example: "{\n\_\_\_\_\"cashBalance\":\_305405.45,\n\_\_\_\_\"minimumCashBalance\":\_10.00,\n\_\_\_\_\"reserveDeposit\":\_25.50,\n\_\_\_\_\"salesAllowance\":\_38100231.43,\n\_\_\_\_\"overage\":\_0.00,\n\_\_\_\_\"outstandingAuthorization\":\_29.00,\n\_\_\_\_\"outstandingLiability\":\_0.00,\n\_\_\_\_\"totalAvailable\":\_38405607.88\n}"
    FundsGetAvailableDetails400Response:
      type: object
      properties: {}
    ReplayPurchaseEventHistoryResendResponse:
      type: string
      example: ''
    ReplayPurchaseEventHistoryResend400Response:
      type: object
      properties: {}
    SaleGetChargebacksByUserResponse:
      type: string
      example: |-
        [
            {
                "ID": 00001,
                "UUID": "abc123 ",
                "FileId": 00001,
                "MerchantId": 001,
                "Arn": "12312312312312312312312",
                "CaseNumber": "0000000000001",
                "Amount": 298.00,
                "RecordType": " ",
                "CaseType": "25",
                "ReasonCode": "4837",
                "ReasonDescription": "No Cardholder Authorization                       ",
                "CardBrand": 2,
                "TransactionCode": "05",
                "ResolutionTo": "M",
                "TransactionDate": "2020-12-08T00:00:00",
                "LoadDate": "2021-02-12T00:00:00",
                "PostDate": "2020-12-08T00:00:00",
                "ResolvedDate": "2021-03-02T00:00:00",
                "FamilyId": 00000001,
                "HasImage": false,
                "HasResponse": false,
                "ImageFileUrl": "",
                "Created": "2021-03-02T23:01:00",
                "OrderNumber": "23447161",
                "DueDate": "2021-02-24T00:00:00",
                "IsSurrendered": false,
                "IdSale": 0000001,
                "IncomingTransactionCode": "1231231231231231231231231",
                "SaleGuid": "1238aff0-18b3-46ce-b123-1ede8ff09123",
                "SaleFirstFour": "1234",
                "SaleLastFour": "1234",
                "AuthCode": "12312Z",
                "NetPosition": -298.0000,
                "WinLoss": "Loss (Pending)"
            },
            {
                "ID": 00002,
                "UUID": "abc456 ",
                "FileId": 00001,
                "MerchantId": 115,
                "Arn": "45645645645645645645645",
                "CaseNumber": "0000000000002",
                "Amount": 61.39,
                "RecordType": " ",
                "CaseType": "21",
                "ReasonCode": "13.1",
                "ReasonDescription": "Merchandise/Services Not Received                 ",
                "CardBrand": 1,
                "TransactionCode": "05",
                "ResolutionTo": "M",
                "TransactionDate": "2021-02-04T00:00:00",
                "LoadDate": "2021-02-16T00:00:00",
                "PostDate": "2021-02-04T00:00:00",
                "ResolvedDate": "2021-02-16T00:00:00",
                "FamilyId": 00000002,
                "HasImage": false,
                "HasResponse": false,
                "ImageFileUrl": "",
                "Created": "2021-02-16T23:02:00",
                "OrderNumber": "45121742",
                "DueDate": "2021-02-28T00:00:00",
                "IsSurrendered": false,
                "IdSale": 0000002,
                "IncomingTransactionCode": "456DF6263745611632034566",
                "SaleGuid": "456f41ef-4564-456e-85dc-d1a0545684d8",
                "SaleFirstFour": "4567",
                "SaleLastFour": "4567",
                "AuthCode": "45645A",
                "NetPosition": 0.0000,
                "WinLoss": "Win"
            }
        ]
    SaleGetChargebacksByUser400Response:
      type: object
      properties: {}
    TokenGenerateReportingTokenResponse:
      type: object
      properties:
        access_token:
          type: string
          example: Test Bridge Access Token
        expires_in:
          type: string
          example: '3600'
    TokenGenerateReportingToken400Response:
      type: object
      properties: {}
    CardSearchIssuedVirtualCardsResponse:
      type: string
      example: |-
        {
           "pageCurrent":1,
           "pageCurrentResults":2,
           "pageTotal":1,
           "pageSize":5,
           "totalResults":2,
           "cardSummary":null,
           "searchResultDTO":[
              {
                 "customerName":"John Smith",
                 "merchantId":"b19d3b78-627b-4b7e-b60f-3b842a64a213",
                 "incomingTransactionCodeCreationDate":"2020-02-18T17:40:43.66",
                 "outgoingTransactionCodeCreationDate":"2020-02-18T17:40:54.63",
                 "issuedAmount":150.00,
                 "currencyCode":"USD",
                 "cardType":"Other",
                 "lastFour":"9766",
                 "bin":"5ed416a2-a2da-41fc-957a-a9ee366f86b3",
                 "incomingTransactionCode":"03AGCW7D9ZW8KHC3300030000",
                 "outgoingTransactionCode":"03AGCW7D9ZW8KHC3300030000USD01ZZZ00015000",
                 "outgoingTransactionCodeDetail":{
                    "incomingTransactionCode":"03AGCW7D9ZW8KHC3300030000",
                    "incomingTransactionCodeDetail":{
                       "expectedOutgoingTransactionCount":3,
                       "filler":"AGC",
                       "authorizationResponseCode":"W7D9ZW",
                       "authorizationDate":"2020-02-18T17:40:43.66",
                       "authorizedAmount":300.0
                    },
                    "currencyCode":"USD",
                    "purchaseType":"01",
                    "filler":"ZZZ",
                    "paymentAmount":150.0
                 },
                 "timeStamp":"2020-02-18T17:40:54.63",
                 "guid":"179c7243-6b43-4d47-b77c-3f5bb0fc37f5",
                 "cardStatus":"Card - Active",
                 "toleranceAmount":30.00,
                 "terminateDate": "2020-11-26T18:59:59"
                },
              },
              {
                 "customerName":"John Smith",
                 "merchantId":"b19d3b78-627b-4b7e-b60f-3b842a64a213",
                 "incomingTransactionCodeCreationDate":"2020-02-18T17:40:43.66",
                 "outgoingTransactionCodeCreationDate":"2020-02-18T17:41:03.81",
                 "issuedAmount":100.00,
                 "currencyCode":"USD",
                 "cardType":"Other",
                 "lastFour":"8493",
                 "bin":"5ed416a2-a2da-41fc-957a-a9ee366f86b3",
                 "incomingTransactionCode":"03AGCW7D9ZW8KHC3300030000",
                 "outgoingTransactionCode":"03AGCW7D9ZW8KHC3300030000USD01ZZZ00005000",
                 "outgoingTransactionCodeDetail":{
                    "incomingTransactionCode":"03AGCW7D9ZW8KHC3300030000",
                    "incomingTransactionCodeDetail":{
                       "expectedOutgoingTransactionCount":3,
                       "filler":"AGC",
                       "authorizationResponseCode":"W7D9ZW",
                       "authorizationDate":"2020-02-18T17:40:43.66",
                       "authorizedAmount":300.0
                    },
                    "currencyCode":"USD",
                    "purchaseType":"01",
                    "filler":"ZZZ",
                    "paymentAmount":50.0
                 },
                 "timeStamp":"2020-02-18T17:41:03.81",
                 "guid":"7638a84e-40cb-4db7-b9b8-a401a906b310",
                 "cardStatus":"Card - Active",
                 "orderNumber": "Test-Search",
                 "customerID": "Test Search"
              }
           ],
           "allowedToCreateVC":false
        }
    CardSearchIssuedVirtualCards400Response:
      type: object
      properties: {}
    SettlementSearchVirtualCardSettlementsResponse:
      type: object
      properties: {}
    SettlementSearchVirtualCardSettlements400Response:
      type: object
      properties: {}
security:
  - sec0: []
x-readme:
  headers: []
  explorer-enabled: true
  proxy-enabled: true
x-readme-fauxas: true
_id: 64934188f74cfe00256baea7
