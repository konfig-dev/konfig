openapi: 3.0.0
info:
  title: WhatsApp Business API
  description: See https://developers.facebook.com/docs/whatsapp
  version: '1.0'
  contact:
    x-twitter: WhatsApp
  x-apisguru-categories:
    - messaging
  x-logo:
    url: https://twitter.com/WhatsApp/profile_image?size=original
  x-origin:
    - version: '3.0'
      format: openapi
      url: >-
        https://raw.githubusercontent.com/unblu/WhatsApp-Business-API-OpenAPI/master/openapi.yaml
  x-providerName: whatsapp.local
  x-unofficialSpec: true
  x-konfig-ignore:
    object-with-no-properties: true
servers:
  - url: http://whatsapp.local
  - url: http://example.com/v1
tags:
  - name: Groups
  - name: Application
  - name: Users
  - name: Profile
  - name: Health
  - name: Certificates
  - name: Media
  - name: Backup/Restore
  - name: Business Profile
  - name: Two-Step Verification
  - name: Registration
  - name: Messages
  - name: Contacts
paths:
  /account:
    post:
      tags:
        - Registration
      summary: Request-Code
      operationId: Registration_accountCreation
      requestBody:
        description: ''
        content:
          application/json:
            example:
              cc: <Country Code>
              cert: <Valid Cert from Business Manager>
              method: sms
              phone_number: <Phone Number>
              pin: <Two-Step Verification PIN
            schema:
              $ref: '#/components/schemas/Request-Code-Request-Body'
        required: true
      responses:
        '201':
          description: >-
            Created: the account already exists. You are already registered, so
            you do not need to do anything else.
        '202':
          description: >-
            Created: the account does not exist. Depending on the method
            selected in the request, check your SMS or voice number for the
            registration code.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Request-Code-Response'
      deprecated: false
  /account/shards:
    post:
      tags:
        - Application
      summary: Set-Shards
      operationId: Application_setShards
      requestBody:
        description: ''
        content:
          application/json:
            example:
              cc: <Country Code>
              phone_number: <Phone Number>
              pin: <Two-Step PIN>
              shards: 32
            schema:
              $ref: '#/components/schemas/Set-Shards-Request-Body'
        required: true
      responses:
        '200':
          description: ''
      deprecated: false
  /account/verify:
    post:
      tags:
        - Registration
      summary: Register-Account
      operationId: Registration_verifyAccount
      requestBody:
        description: ''
        content:
          application/json:
            example:
              code: <Registration Code Received via SMS/Voice>
            schema:
              $ref: '#/components/schemas/Register-Account-Request-Body'
        required: true
      responses:
        '200':
          description: ''
      deprecated: false
  /certificates/external:
    post:
      tags:
        - Certificates
      summary: Upload-Certificate
      operationId: Certificates_uploadExternal
      requestBody:
        content:
          text/plain:
            schema:
              $ref: '#/components/schemas/CertificatesUploadExternalRequest'
      responses:
        '200':
          description: ''
      deprecated: false
  /certificates/external/ca:
    get:
      tags:
        - Certificates
      summary: Download-CA-Certificate
      operationId: Certificates_downloadCaCertificate
      responses:
        '200':
          description: ''
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/CertificatesDownloadCaCertificateResponse'
      deprecated: false
  /certificates/webhooks/ca:
    delete:
      tags:
        - Certificates
      summary: Delete Webhook CA Certificate
      operationId: Certificates_deleteWebhookCa
      responses:
        '200':
          description: ''
      deprecated: false
    get:
      tags:
        - Certificates
      summary: Download Webhook CA Certificate
      operationId: Certificates_downloadWebhookCaCertificate
      responses:
        '200':
          description: ''
          content:
            text/plain:
              schema:
                $ref: >-
                  #/components/schemas/CertificatesDownloadWebhookCaCertificateResponse
      deprecated: false
    post:
      tags:
        - Certificates
      summary: Upload Webhook CA Certificate
      operationId: Certificates_uploadWebhookCa
      requestBody:
        content:
          text/plain:
            schema:
              $ref: '#/components/schemas/CertificatesUploadWebhookCaRequest'
        required: false
      responses:
        '200':
          description: ''
      deprecated: false
  /contacts:
    post:
      tags:
        - Contacts
      summary: Check-Contact
      operationId: Contacts_createContact
      requestBody:
        description: ''
        content:
          application/json:
            example:
              blocking: wait
              contacts:
                - '{{Recipient-WA-ID}}'
            schema:
              $ref: '#/components/schemas/Check-Contact-Request-Body'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Check-Contact-Response'
      deprecated: false
  /groups:
    get:
      tags:
        - Groups
      summary: Get-All-Groups
      operationId: Groups_getAll
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Groups-Response'
      deprecated: false
    post:
      tags:
        - Groups
      summary: Create-Group
      operationId: Groups_createGroup
      requestBody:
        description: ''
        content:
          application/json:
            example:
              subject: <Group Subject>
            schema:
              $ref: '#/components/schemas/Create-Group-Request-Body'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Groups-Response'
      deprecated: false
  /groups/{GroupId}:
    get:
      tags:
        - Groups
      summary: Get-Group-Info
      operationId: Groups_getInfo
      parameters:
        - description: ''
          explode: false
          in: path
          name: GroupId
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group-Response'
      deprecated: false
    put:
      tags:
        - Groups
      summary: Update-Group-Info
      operationId: Groups_updateGroupInfo
      parameters:
        - description: ''
          explode: false
          in: path
          name: GroupId
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        description: ''
        content:
          application/json:
            example:
              subject: <New Group Subject>
            schema:
              $ref: '#/components/schemas/Update-Group-Info-Request-Body'
        required: true
      responses:
        '200':
          description: ''
      deprecated: false
  /groups/{GroupId}/admins:
    delete:
      tags:
        - Groups
      summary: Demote-Group-Admin
      operationId: Groups_demoteAdmin
      parameters:
        - description: ''
          explode: false
          in: path
          name: GroupId
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        description: ''
        content:
          application/json:
            example:
              wa_ids:
                - <Recipient WA-ID, from Contacts API>
            schema:
              $ref: '#/components/schemas/Group-Admin-Request-Body'
        required: true
      responses:
        '200':
          description: ''
      deprecated: false
    patch:
      tags:
        - Groups
      summary: Promote-To-Group-Admin
      operationId: Groups_promoteToAdmin
      parameters:
        - description: ''
          explode: false
          in: path
          name: GroupId
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        description: ''
        content:
          application/json:
            example:
              wa_ids:
                - <Recipient WA-ID, from Contacts API>
            schema:
              $ref: '#/components/schemas/Group-Admin-Request-Body'
        required: true
      responses:
        '200':
          description: ''
      deprecated: false
  /groups/{GroupId}/icon:
    delete:
      tags:
        - Groups
      summary: Delete-Group-Icon
      operationId: Groups_deleteIcon
      parameters:
        - description: ''
          explode: false
          in: path
          name: GroupId
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GroupsDeleteIconRequest'
        required: false
      responses:
        '200':
          description: ''
      deprecated: false
    get:
      tags:
        - Groups
      summary: Get-Group-Icon-Binary
      operationId: Groups_getGroupIcon
      parameters:
        - description: ''
          explode: false
          in: path
          name: GroupId
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          description: ''
      deprecated: false
    post:
      tags:
        - Groups
      summary: Set-Group-Icon
      operationId: Groups_setIcon
      parameters:
        - description: ''
          explode: false
          in: path
          name: GroupId
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GroupsSetIconRequest'
        required: false
      responses:
        '200':
          description: ''
      deprecated: false
  /groups/{GroupId}/invite:
    delete:
      tags:
        - Groups
      summary: Delete-Group-Invite
      operationId: Groups_deleteGroupInvite
      parameters:
        - description: ''
          explode: false
          in: path
          name: GroupId
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          description: ''
      deprecated: false
    get:
      tags:
        - Groups
      summary: Get-Group-Invite
      operationId: Groups_getInvite
      parameters:
        - description: ''
          explode: false
          in: path
          name: GroupId
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group-Invite-Response'
      deprecated: false
  /groups/{GroupId}/leave:
    post:
      tags:
        - Groups
      summary: Leave-Group
      operationId: Groups_leaveGroup
      parameters:
        - description: ''
          explode: false
          in: path
          name: GroupId
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          description: ''
      deprecated: false
  /groups/{GroupId}/participants:
    delete:
      tags:
        - Groups
      summary: Remove-Group-Participant
      operationId: Groups_removeParticipant
      parameters:
        - description: ''
          explode: false
          in: path
          name: GroupId
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        description: ''
        content:
          application/json:
            example:
              wa_ids:
                - '{{Recipient-WA-ID}}'
            schema:
              $ref: '#/components/schemas/Remove-Group-Participant-Request-Body'
        required: true
      responses:
        '200':
          description: ''
      deprecated: false
  /health:
    get:
      tags:
        - Health
      summary: Check-Health
      operationId: Health_checkStatus
      responses:
        '200':
          description: ''
      deprecated: false
  /media:
    post:
      tags:
        - Media
      summary: Upload-Media
      operationId: Media_upload
      requestBody:
        content:
          application/msword:
            schema:
              $ref: '#/components/schemas/MediaUploadRequest'
          application/pdf:
            schema:
              $ref: '#/components/schemas/MediaUploadRequest1'
          application/vnd.ms-excel:
            schema:
              $ref: '#/components/schemas/MediaUploadRequest2'
          application/vnd.ms-powerpoint:
            schema:
              $ref: '#/components/schemas/MediaUploadRequest3'
          audio/acc:
            schema:
              $ref: '#/components/schemas/MediaUploadRequest4'
          audio/amr:
            schema:
              $ref: '#/components/schemas/MediaUploadRequest5'
          audio/mp4:
            schema:
              $ref: '#/components/schemas/MediaUploadRequest6'
          audio/mpeg:
            schema:
              $ref: '#/components/schemas/MediaUploadRequest7'
          audio/ogg:
            schema:
              $ref: '#/components/schemas/MediaUploadRequest8'
          codecs=opus:
            schema:
              $ref: '#/components/schemas/MediaUploadRequest9'
          image/jpeg:
            schema:
              $ref: '#/components/schemas/MediaUploadRequest10'
          image/png:
            schema:
              $ref: '#/components/schemas/MediaUploadRequest11'
          text/plain:
            schema:
              $ref: '#/components/schemas/MediaUploadRequest12'
          video/mp4:
            schema:
              $ref: '#/components/schemas/MediaUploadRequest13'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Upload-Media-Response'
      deprecated: false
  /media/{MediaId}:
    delete:
      tags:
        - Media
      summary: Delete-Media
      operationId: Media_remove
      parameters:
        - description: ''
          explode: false
          in: path
          name: MediaId
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          description: ''
      deprecated: false
    get:
      tags:
        - Media
      summary: Download-Media
      operationId: Media_downloadMedia
      parameters:
        - description: ''
          explode: false
          in: path
          name: MediaId
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaDownloadMediaResponse'
      deprecated: false
  /messages:
    post:
      tags:
        - Messages
      summary: Send-Message
      operationId: Messages_sendMessage
      requestBody:
        description: ''
        content:
          application/json:
            example:
              recipient_type: individual
              text:
                body: <Message Text>
              to: '{{Recipient-WA-ID}}'
              type: text
            schema:
              $ref: '#/components/schemas/Send-Message-Request-Body'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message-Response'
      deprecated: false
  /messages/{MessageID}:
    put:
      tags:
        - Messages
      summary: Mark-Message-As-Read
      operationId: Messages_markAsRead
      parameters:
        - description: Message ID from Webhook
          in: path
          name: MessageID
          required: true
          schema:
            type: string
      requestBody:
        description: ''
        content:
          application/json:
            example:
              status: read
            schema:
              $ref: '#/components/schemas/Mark-Message-As-Read-Request-Body'
        required: true
      responses:
        '200':
          description: ''
      deprecated: false
  /metrics:
    get:
      tags:
        - Health
      summary: Get-Metrics (since v2.21.3)
      operationId: Health_getMetrics
      parameters:
        - description: ''
          example: prometheus
          in: query
          name: format
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthGetMetricsResponse'
            text/plain:
              schema:
                $ref: '#/components/schemas/HealthGetMetrics200Response'
      deprecated: false
  /settings/account/two-step:
    delete:
      tags:
        - Two-Step Verification
      summary: Disable-Two-Step
      operationId: TwoStepVerification_disable
      responses:
        '200':
          description: ''
      deprecated: false
    post:
      tags:
        - Two-Step Verification
      summary: Enable-Two-Step
      operationId: TwoStepVerification_enableAccountSecurity
      requestBody:
        description: ''
        content:
          application/json:
            example:
              pin: <Two-Step Verification PIN>
            schema:
              $ref: '#/components/schemas/Enable-Two-Step-Request-Body'
        required: true
      responses:
        '200':
          description: ''
      deprecated: false
  /settings/application:
    delete:
      tags:
        - Application
      summary: Reset-Application-Settings
      operationId: Application_resetSettings
      responses:
        '200':
          description: ''
      deprecated: false
    get:
      tags:
        - Application
      summary: Get-Application-Settings
      operationId: Application_getSettings
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application-Settings'
      deprecated: false
    patch:
      tags:
        - Application
      summary: Update-Application-Settings
      operationId: Application_updateSettings
      description: >-
        If a field is not present in the request, no change is made to that
        setting. For example, if on_call_pager is not sent with the request, the
        existing configuration for on_call_pager is unchanged.
      requestBody:
        description: ''
        content:
          application/json:
            example:
              webhooks:
                url: <Webhook URL, https>
            schema:
              $ref: '#/components/schemas/Application-Settings'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
      callbacks:
        incomingWebhook:
          '{$request.body#/webhooks.url}':
            post:
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/Webhook-Event'
              responses:
                '200':
                  description: OK
      deprecated: false
  /settings/application/media/providers:
    get:
      tags:
        - Application
      summary: Get-Media-Providers
      operationId: Application_getMediaProviders
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get-Media-Providers-Response'
      deprecated: false
    post:
      tags:
        - Application
      summary: Update-Media-Providers
      operationId: Application_updateMediaProviders
      requestBody:
        description: ''
        content:
          application/json:
            example:
              - config:
                  bearer: <Bearer Auth Token>
                name: <Provider Name>
                type: www
            schema:
              $ref: '#/components/schemas/ApplicationUpdateMediaProvidersRequest'
        required: true
      responses:
        '200':
          description: ''
      deprecated: false
  /settings/application/media/providers/{ProviderName}:
    delete:
      tags:
        - Application
      summary: Delete-Media-Providers
      operationId: Application_deleteMediaProvider
      parameters:
        - description: Provider Name
          in: path
          name: ProviderName
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
      deprecated: false
  /settings/backup:
    post:
      tags:
        - Backup/Restore
      summary: Backup-Settings
      operationId: BackupRestore_settingsPost
      requestBody:
        description: ''
        content:
          application/json:
            example:
              password: <Password for Backup>
            schema:
              $ref: '#/components/schemas/Backup-Settings-Request-Body'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Backup-Settings-Response'
      deprecated: false
  /settings/business/profile:
    get:
      tags:
        - Business Profile
      summary: Get-Business-Profile
      operationId: BusinessProfile_getProfile
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get-Business-Profile-Response'
      deprecated: false
    post:
      tags:
        - Business Profile
      summary: Update-Business-Profile
      operationId: BusinessProfile_updateProfile
      requestBody:
        description: ''
        content:
          application/json:
            example:
              description: <Business Profile Description>
              address: <Business Profile Address>
              email: <Business Profile Email>
              vertical: <Business Profile Vertical>
              websites:
                - https://www.whatsapp.com
                - https://www.facebook.com
            schema:
              $ref: '#/components/schemas/Business-Profile'
        required: true
      responses:
        '200':
          description: ''
      deprecated: false
  /settings/profile/about:
    get:
      tags:
        - Profile
      summary: Get-Profile-About
      operationId: Profile_getAbout
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get-Profile-About-Response'
      deprecated: false
    patch:
      tags:
        - Profile
      summary: Update-Profile-About
      operationId: Profile_updateAbout
      requestBody:
        description: ''
        content:
          application/json:
            example:
              text: <About Profile>
            schema:
              $ref: '#/components/schemas/Profile-About'
        required: true
      responses:
        '200':
          description: ''
      deprecated: false
  /settings/profile/photo:
    delete:
      tags:
        - Profile
      summary: Delete-Profile-Photo
      operationId: Profile_removePhoto
      responses:
        '200':
          description: ''
    get:
      tags:
        - Profile
      summary: Get-Profile-Photo
      operationId: Profile_getPhoto
      parameters:
        - description: ''
          example: link
          in: query
          name: format
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Get-Profile-Photo-Response'
            image/jpeg:
              schema:
                $ref: '#/components/schemas/ProfileGetPhotoResponse'
      deprecated: false
    post:
      tags:
        - Profile
      summary: Update-Profile-Photo
      operationId: Profile_uploadPhoto
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProfileUploadPhotoRequest'
        required: false
      responses:
        '200':
          description: ''
      deprecated: false
  /settings/restore:
    post:
      tags:
        - Backup/Restore
      summary: Restore-Settings
      operationId: BackupRestore_settingsPost
      requestBody:
        description: ''
        content:
          application/json:
            example:
              data: <Data to Restore, from Backup API>
              password: <Password for Backup>
            schema:
              $ref: '#/components/schemas/Restore-Settings-Request-Body'
        required: true
      responses:
        '200':
          description: ''
      deprecated: false
  /stats/app:
    get:
      tags:
        - Health
      summary: Get-App-Stats
      operationId: Health_getAppStats
      parameters:
        - description: ''
          example: prometheus
          in: query
          name: format
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthGetAppStatsResponse'
            text/plain:
              schema:
                $ref: '#/components/schemas/HealthGetAppStats200Response'
      deprecated: false
  /stats/db:
    get:
      tags:
        - Health
      summary: Get-DB-Stats
      operationId: Health_dbStatsGet
      parameters:
        - description: ''
          example: prometheus
          in: query
          name: format
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthDbStatsGetResponse'
            text/plain:
              schema:
                $ref: '#/components/schemas/HealthDbStatsGet200Response'
      deprecated: false
  /support:
    get:
      tags:
        - Health
      summary: Get-Support-Info
      operationId: Health_getSupportInfo
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthGetSupportInfoResponse'
      deprecated: false
  /users:
    post:
      tags:
        - Users
      summary: Create-User
      operationId: Users_createUser
      requestBody:
        description: ''
        content:
          application/json:
            example:
              password: '{{UserPassword}}'
              username: '{{UserUsername}}'
            schema:
              $ref: '#/components/schemas/Create-User-Request-Body'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User-Response'
      deprecated: false
  /users/login:
    post:
      tags:
        - Users
      summary: Login-User
      operationId: Users_performLogin
      security:
        - httpBasic: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login-Admin-Request-Body'
        required: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User-Login-Response'
      deprecated: false
  /users/logout:
    post:
      tags:
        - Users
      summary: Logout-User
      operationId: Users_performLogout
      responses:
        '200':
          description: ''
      deprecated: false
  /users/{UserUsername}:
    delete:
      tags:
        - Users
      summary: Delete-User
      operationId: Users_removeUser
      parameters:
        - description: ''
          explode: false
          in: path
          name: UserUsername
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User-Response'
      deprecated: false
    get:
      tags:
        - Users
      summary: Get-User
      operationId: Users_getByUsername
      parameters:
        - description: ''
          explode: false
          in: path
          name: UserUsername
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Detailed-User-Response'
      deprecated: false
    put:
      tags:
        - Users
      summary: Update-User
      operationId: Users_updateUserByUsername
      parameters:
        - description: ''
          explode: false
          in: path
          name: UserUsername
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        description: ''
        content:
          application/json:
            example:
              password: <New Password>
            schema:
              $ref: '#/components/schemas/Update-User-Request-Body'
        required: true
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User-Response'
      deprecated: false
components:
  schemas:
    Address:
      title: Address
      example:
        city: Menlo Park
        country: United States
        country_code: us
        state: CA
        street: 1 Hacker Way
        type: HOME
        zip: '94025'
      properties:
        city:
          description: City name
          type: string
        country:
          description: Full country name
          type: string
        country_code:
          description: Two-letter country abbreviation
          type: string
        state:
          description: State abbreviation
          type: string
        street:
          description: Street number and name
          type: string
        type:
          description: 'Standard Values: HOME, WORK'
          type: string
        zip:
          description: ZIP code
          type: string
      required:
        - city
        - country
        - country_code
        - state
        - street
        - type
        - zip
      type: object
    Application-Settings:
      title: Update-Application-Settings-Request-Body
      example:
        callback_backoff_delay_ms: 3000
        callback_persist: true
        max_callback_backoff_delay_ms: 900000
        media:
          auto_download:
            - image
            - document
            - audio
        on_call_pager: <WA_ID of valid WhatsApp contact>
        pass_through: false
        sent_status: false
        webhooks:
          max_concurrent_requests: 12
          url: <Webhook URL, https>
      properties:
        callback_backoff_delay_ms:
          description: >-
            Backoff delay for a failed callback in milliseconds

            This setting is used to configure the amount of time the backoff
            delays before retrying a failed callback. The backoff delay
            increases linearly by this value each time a callback fails to get a
            HTTPS 200 OK response. The backoff delay is capped by the
            max_callback_backoff_delay_ms setting.
          default: '3000'
          type: string
        callback_persist:
          description: >-
            Stores callbacks on disk until they are successfully acknowledged by
            the Webhook or not. Restart required.
          default: true
          type: boolean
        heartbeat_interval:
          description: >-
            Multiconnect: Interval of the Master node monitoring of Coreapp
            nodes in seconds
          default: 5
          type: integer
        max_callback_backoff_delay_ms:
          description: Maximum delay for a failed callback in milliseconds
          default: '900000'
          type: string
        media:
          $ref: '#/components/schemas/Media'
        on_call_pager:
          description: >-
            Set to valid WhatsApp Group with users who wish to see alerts for
            critical errors and messages.
          type: string
        pass_through:
          description: >-
            When true, removes messages from the local database after they are
            delivered to or read by the recipient. When false, saves all
            messages on local storage until they are explicitly deleted.

            When messages are sent, they are stored in a local database. This
            database is used as the application's history. Since the business
            keeps its own history, you can specify whether you want message
            pass_through or not. Restart required.
          default: true
          type: boolean
        sent_status:
          description: >-
            Receive a notification that a message is sent to server. When true,
            you will receive a message indicating that a message has been sent.
            If false (default), you will not receive notification.
          default: false
          type: boolean
        unhealthy_interval:
          description: >-
            Multiconnect: Maximum amount of seconds a Master node waits for a
            Coreapp node to respond to a heartbeat before considering it
            unhealthy and starting the failover process.
          default: 30
          type: integer
        webhooks:
          $ref: '#/components/schemas/Webhooks'
      type: object
    Audio:
      title: Audio
      description: The media object containing audio
      oneOf:
        - $ref: '#/components/schemas/AudioById'
        - $ref: '#/components/schemas/AudioByProvider'
      type: object
    AudioById:
      title: AudioById
      example:
        id: <Media Id, from Media API>
      properties:
        id:
          type: string
      required:
        - id
      type: object
    AudioByProvider:
      title: AudioByProvider
      example:
        link: <Link to Audio, https>
        provider:
          name: <Provider Name from Media Provider API, optional
      properties:
        link:
          type: string
        provider:
          $ref: '#/components/schemas/Provider'
      required:
        - provider
        - link
      type: object
    Backup-Settings:
      title: Root Type for Backup-Settings
      description: ''
      example:
        data: encrypted-backup-data
      properties:
        data:
          description: The data that has been backed up, encrypted for security.
          type: string
      type: object
    Backup-Settings-Request-Body:
      title: Backup-Settings-Request
      example:
        password: <Password for Backup>
      properties:
        password:
          description: Used to encrypt backup data for security
          type: string
      required:
        - password
      type: object
    Backup-Settings-Response:
      title: Root Type for Backup-Settings-Response
      description: >-
        Save the data value as that will be used along with your password to
        restore the information.
      example:
        settings:
          data: encrypted-backup-data
      properties:
        settings:
          $ref: '#/components/schemas/Backup-Settings'
      type: object
    Basic:
      title: Root Type for Basic
      description: ''
      example:
        password: your-password
        username: your-username
      properties:
        password:
          type: string
        username:
          type: string
      type: object
    Business-Profile:
      title: Set-Business-Profile-Request
      example:
        description: <Business Profile Description>
        address: <Business Profile Address>
        email: <Business Profile Email>
        vertical: <Business Profile Vertical>
        websites:
          - https://www.whatsapp.com
          - https://www.facebook.com
      properties:
        description:
          description: |-
            Description of the business
            Maximum of 256 characters
          type: string
        address:
          description: |-
            Address of the business
            Maximum of 256 characters
          type: string
        email:
          description: |-
            Email address to contact the business
            Maximum of 128 characters
          type: string
        vertical:
          description: |-
            Industry of the business
            Maximum of 128 characters
          type: string
        websites:
          description: >-
            URLs associated with business (e.g., website, Facebook page,
            Instagram)

            Maximum of 2 websites with a maximum of 256 characters each
          items:
            type: string
          type: array
      required:
        - address
        - description
        - email
        - vertical
        - websites
      type: object
    Business-Settings:
      title: Root Type for Business-Settings
      description: ''
      example:
        business:
          profile:
            description: business-description
            address: new-business-address
            email: new-business-email
            vertical: business-industry
            websites:
              - website-1
              - website-2
      properties:
        business:
          $ref: '#/components/schemas/Business-Settings-Business'
      type: object
    Business-Settings-Business:
      title: Root Type for Business-Settings-Business
      description: ''
      example:
        profile:
          description: business-description
          address: new-business-address
          email: new-business-email
          vertical: business-industry
          websites:
            - website-1
            - website-2
      properties:
        profile:
          $ref: '#/components/schemas/Business-Profile'
      type: object
    Check-Contact:
      title: Check-Contact
      description: ''
      example:
        input: +1 (516) 283-7151
        status: valid
        wa_id: '15162837151'
      properties:
        input:
          description: The value you sent in the contacts field of the JSON request.
          type: string
        status:
          description: Status of the user.
          enum:
            - processing
            - valid
            - invalid
          type: string
          x-enum-descriptions:
            - 'processing: Input is still being processed.'
            - 'valid: Input determined to be a valid WhatsApp user.'
            - >-
              invalid: Input determined to not be a valid WhatsApp user or the
              phone number is in a bad format.
        wa_id:
          description: >-
            WhatsApp user identifier that can be used in other API calls. Only
            returned if the status is valid.
          type: string
      type: object
    Check-Contact-Request-Body:
      title: Check-Contact-Request
      example:
        blocking: wait
        contacts:
          - '{{Recipient-WA-ID}}'
      properties:
        blocking:
          description: >-
            Blocking determines whether the request should wait for the
            processing to complete (synchronous) or not (asynchronous).
          default: no_wait
          enum:
            - no_wait
            - wait
          type: string
        contacts:
          description: >-
            Array of contact phone numbers. The numbers can be in any standard
            telephone number format.
          items:
            type: string
          type: array
      required:
        - contacts
      type: object
    Check-Contact-Response:
      title: Check-Contact-Response
      description: ''
      allOf:
        - $ref: '#/components/schemas/Response'
        - properties:
            contacts:
              items:
                $ref: '#/components/schemas/Check-Contact'
              type: array
          type: object
      example:
        contacts:
          - input: 1-631-555-1002
            status: processing
          - input: '6315551003'
            status: processing
          - input: +54 9 11 5612-1008
            status: processing
          - input: +1 (516) 283-7151
            status: valid
            wa_id: '15162837151'
      type: object
    Check-Health-Response:
      title: Root Type for Check-Health-Response
      description: ''
      example:
        health:
          your-hostname1:your-container-id1:
            gateway_status: connected
            role: primary_master
          your-hostname2:your-container-id2:
            gateway_status: disconnected
            role: secondary_master
      properties:
        health:
          oneOf:
            - $ref: '#/components/schemas/Gateway-Status'
            - additionalProperties:
                $ref: '#/components/schemas/Gateway-Node-Status'
              type: object
      type: object
    Config:
      title: Config
      oneOf:
        - $ref: '#/components/schemas/Config-Bearer'
        - $ref: '#/components/schemas/Config-Basic'
    Config-Basic:
      title: Config
      example:
        basic:
          password: your-password
          username: your-username
      properties:
        basic:
          $ref: '#/components/schemas/Basic'
      type: object
    Config-Bearer:
      title: Config
      example:
        bearer: <Bearer Auth Token>
      properties:
        bearer:
          type: string
      required:
        - bearer
      type: object
    Contact:
      title: Contact
      example:
        addresses:
          - city: Menlo Park
            country: United States
            country_code: us
            state: CA
            street: 1 Hacker Way
            type: HOME
            zip: '94025'
          - city: Menlo Park
            country: United States
            country_code: us
            state: CA
            street: 200 Jefferson Dr
            type: WORK
            zip: '94025'
        birthday: '2012-08-18T00:00:00.000Z'
        emails:
          - email: test@fb.com
            type: WORK
          - email: test@whatsapp.com
            type: WORK
        name:
          first_name: John
          formatted_name: John Smith
          last_name: Smith
        org:
          title: Manager
          company: WhatsApp
          department: Design
        phones:
          - phone: +1 (940) 555-1234
            type: HOME
          - phone: +1 (650) 555-1234
            type: WORK
            wa_id: '16505551234'
        urls:
          - type: WORK
            url: https://www.facebook.com
      properties:
        addresses:
          description: Full contact address(es)
          items:
            $ref: '#/components/schemas/Address'
          type: array
        birthday:
          description: YYYY-MM-DD formatted string
          type: string
        emails:
          description: Contact email address(es)
          items:
            $ref: '#/components/schemas/Email'
          type: array
        ims:
          description: ''
          items:
            type: string
          type: array
        name:
          $ref: '#/components/schemas/Name'
        org:
          $ref: '#/components/schemas/Org'
        phones:
          description: Contact phone number(s)
          items:
            $ref: '#/components/schemas/Phone'
          type: array
        urls:
          description: Contact URL(s)
          items:
            $ref: '#/components/schemas/Url'
          type: array
      type: object
    Create-Group-Request-Body:
      title: Create-Group-Request
      example:
        subject: <Group Subject>
      properties:
        subject:
          type: string
      required:
        - subject
      type: object
    Create-User-Request-Body:
      title: Create-User-Request
      example:
        password: password
        username: username
      properties:
        password:
          description: username
          type: string
        username:
          description: password
          type: string
      required:
        - username
        - password
      type: object
    Currency:
      title: Currency
      description: ''
      example:
        amount_1000: 100990
        currency_code: USD
      properties:
        amount_1000:
          format: int32
          type: integer
        currency_code:
          type: string
      required:
        - amount_1000
        - currency_code
      type: object
    Date-Time-Component:
      title: Date-Time-Component
      description: Date/time by component
      example:
        day_of_month: 25
        day_of_week: 5
        hour: 15
        minute: 33
        month: 2
        year: 1977
      properties:
        day_of_month:
          description: The day of month
          format: int32
          type: integer
        day_of_week:
          description: >-
            Both strings and numbers are accepted. If different from the value
            derived from the date (if specified), use the derived value.
          enum:
            - '1'
            - '2'
            - '3'
            - '4'
            - '5'
            - '6'
            - '7'
          format: int32
          type: integer
          x-enum-descriptions:
            - Monday
            - Tuesday
            - Wednesday
            - Thursday
            - Friday
            - Saturday
            - Sunday
          x-enum-varnames:
            - MONDAY
            - TUESDAY
            - WEDNESDAY
            - THURSDAY
            - FRIDAY
            - SATURDAY
            - SUNDAY
        hour:
          description: The hour
          format: int32
          type: integer
        minute:
          description: The minute
          format: int32
          type: integer
        month:
          description: The month
          format: int32
          type: integer
        year:
          description: The year
          format: int32
          type: integer
      type: object
    Date-Time-Object:
      title: Date-Time
      description: >-
        The Whatsapp Business API Client will attempt to format the date/time
        based on a specified localization.
      example:
        component:
          day_of_month: 25
          day_of_week: 5
          hour: 15
          minute: 33
          month: 2
          year: 1977
      properties:
        component:
          $ref: '#/components/schemas/Date-Time-Component'
        unix_epoch:
          $ref: '#/components/schemas/Date-Time-Unix-Epoch'
      type: object
    Date-Time-Unix-Epoch:
      title: Date-Time-Unix-Epoch
      description: Date/time by Unix epoch
      example:
        timestamp: 123456789
      properties:
        timestamp:
          description: Epoch timestamp in seconds
          format: int32
          type: integer
      type: object
    Detailed-User-Response:
      title: Root Type for Detailed-User-Response
      description: ''
      allOf:
        - $ref: '#/components/schemas/Response'
        - properties:
            users:
              items:
                $ref: '#/components/schemas/Detailed-User-Response-Item'
              type: array
          type: object
      example:
        users:
          - ROLES: ROLE_USER
            username: username
      type: object
    Detailed-User-Response-Item:
      title: Root Type for Detailed-Response-Item
      description: ''
      example:
        ROLES: ROLE_USER
        username: username
      properties:
        ROLES:
          $ref: '#/components/schemas/User-Role'
        username:
          type: string
      type: object
    Document:
      title: Document
      description: The media object containing a document
      oneOf:
        - $ref: '#/components/schemas/DocumentById'
        - $ref: '#/components/schemas/DocumentByProvider'
      type: object
    DocumentById:
      title: Document
      example:
        caption: <Message Caption>
        filename: <Filename>
        id: <Media Id, from Media API>X
      properties:
        caption:
          type: string
        filename:
          type: string
        id:
          type: string
      required:
        - caption
        - id
        - filename
      type: object
    DocumentByProvider:
      title: Document1
      example:
        caption: <Message Caption>
        filename: <Filename>
        link: <Link to PDF, https>
        provider:
          name: <Provider Name from Media Provider API, optional
      properties:
        caption:
          type: string
        filename:
          type: string
        link:
          type: string
        provider:
          $ref: '#/components/schemas/Provider'
      required:
        - provider
        - caption
        - link
        - filename
      type: object
    Email:
      title: Email
      example:
        email: <Contact's Email>
        type: <Contact's Email Type>
      properties:
        email:
          type: string
        type:
          type: string
      required:
        - email
        - type
      type: object
    Enable-Two-Step-Request-Body:
      title: Enable-Two-Step-Request
      example:
        pin: your-6-digit-pin
      properties:
        pin:
          type: string
      required:
        - pin
      type: object
    Error:
      title: Error
      description: ''
      example:
        title: error-code-title
        code: 1234
        details: optional-detailed-error-message
      properties:
        title:
          description: error title
          type: string
        code:
          description: >-
            See the https://developers.facebook.com/docs/whatsapp/api/errors for
            more information.
          format: int32
          type: integer
        details:
          description: error detail
          type: string
        href:
          description: location for error detail
          type: string
      type: object
    Gateway-Node-Status:
      title: Root Type for Gateway-Node-Status
      description: ''
      example:
        gateway_status: connected
        role: coreapp
      properties:
        gateway_status:
          type: string
        role:
          enum:
            - primary_master
            - secondary_master
            - coreapp
          type: string
      type: object
    Gateway-Status:
      description: ''
      enum:
        - connected
        - connecting
        - disconnected
        - uninitialized
        - unregistered
      type: string
    Get-Business-Profile-Response:
      title: Root Type for Get-Business-Profile-Response
      description: ''
      allOf:
        - $ref: '#/components/schemas/Response'
        - properties:
            settings:
              $ref: '#/components/schemas/Business-Settings'
          type: object
      example:
        settings:
          business:
            profile:
              description: business-description
              address: new-business-address
              email: new-business-email
              vertical: business-industry
              websites:
                - website-1
                - website-2
      type: object
    Get-Media-Providers-Response:
      title: Root Type for Get-Media-Providers-Response
      description: ''
      allOf:
        - $ref: '#/components/schemas/Response'
        - properties:
            settings:
              $ref: '#/components/schemas/Media-Provider-Settings'
          type: object
      example:
        settings:
          application:
            media:
              providers:
                - config:
                    basic:
                      password: your-password
                      username: your-username
                  name: your-first-provider
                  type: www
                - config:
                    bearer: your-bearer-token
                  name: your-second-provider
                  type: www
      type: object
    Get-Profile-About-Response:
      title: Root Type for Get-Profile-About-Response
      description: ''
      example:
        settings:
          profile:
            about:
              text: your-profile-about-text
      properties:
        settings:
          $ref: '#/components/schemas/Profile-About-Settings'
      type: object
    Get-Profile-Photo-Response:
      title: Root Type for Get-Profile-Photo-Response
      description: ''
      example:
        settings:
          profile:
            photo:
              link: profile-photo-url
      properties:
        settings:
          $ref: '#/components/schemas/Profile-Photo-Settings'
      type: object
    Group:
      title: Groups-Response-Item
      description: ''
      example:
        creation_time: 123456789
        id: your-group-id
      properties:
        creation_time:
          description: timestamp
          format: int32
          type: integer
        id:
          type: string
      type: object
    Group-Admin-Request-Body:
      title: Group-Admin-Request
      example:
        wa_ids:
          - <Recipient WA-ID, from Contacts API>
      properties:
        wa_ids:
          description: >-
            The WhatsApp IDs of the people to be added or removed as group
            admins
          items:
            type: string
          type: array
      required:
        - wa_ids
      type: object
    Group-Info:
      title: Group-Response-Item
      description: ''
      example:
        admins:
          - whatsapp-id-1
          - whatsapp-id-2
        creation_time: 123456789
        creator: whatsapp-id-1
        participants:
          - whatsapp-id-3
          - whatsapp-id-4
          - whatsapp-id-5
        subject: your-group-subject
      properties:
        admins:
          description: |-
            Group administrators
            Lists IDs of the creator of the group and any administrators added
          items:
            type: string
          type: array
        creation_time:
          description: Group creation time
          format: int32
          type: integer
        creator:
          description: ID of the creator of this group
          type: string
        participants:
          description: >-
            Participants of the group

            This is an array of all the IDs of the participants in the group.
            Initially, this will be the creator of the group.
          items:
            type: string
          type: array
        subject:
          description: Subject of the group
          type: string
      type: object
    Group-Invite:
      title: Group-Invite
      description: ''
      example:
        link: group-invite-link
      properties:
        link:
          type: string
      type: object
    Group-Invite-Response:
      title: Group-Invite-Response
      description: ''
      allOf:
        - $ref: '#/components/schemas/Response'
        - properties:
            groups:
              items:
                $ref: '#/components/schemas/Group-Invite'
              type: array
          type: object
      example:
        groups:
          - link: group-invite-link
      type: object
    Group-Response:
      title: Group-Response
      description: ''
      allOf:
        - $ref: '#/components/schemas/Response'
        - properties:
            groups:
              items:
                $ref: '#/components/schemas/Group-Info'
              type: array
          type: object
      example:
        groups:
          - admins:
              - whatsapp-id-1
              - whatsapp-id-2
            creation_time: 123456789
            creator: whatsapp-id-1
            participants:
              - whatsapp-id-3
              - whatsapp-id-4
              - whatsapp-id-5
            subject: your-group-subject
      type: object
    Groups-Response:
      title: GroupsResponse
      description: ''
      allOf:
        - $ref: '#/components/schemas/Response'
        - properties:
            groups:
              items:
                $ref: '#/components/schemas/Group'
              type: array
          type: object
      example:
        groups:
          - creation_time: 123456789
            id: your-group-idX
      type: object
    Hsm:
      title: Hsm
      description: >-
        The containing element for the message content — Indicates that the
        message is highly structured. Parameters contained within provide the
        structure.
      example:
        element_name: hello_world
        language:
          code: en
          policy: deterministic
        localizable_params:
          - default: '1234'
        namespace: business_a_namespace
      properties:
        element_name:
          description: >-
            The element name that indicates which template to use within the
            namespace
          type: string
        language:
          $ref: '#/components/schemas/Language'
        localizable_params:
          description: >-
            This field is an array of values to apply to variables in the
            template
          items:
            $ref: '#/components/schemas/LocalizableParam'
          type: array
        namespace:
          description: The namespace that will be used
          type: string
      required:
        - namespace
        - element_name
        - language
        - localizable_params
      type: object
    Image:
      title: Image
      description: The media object containing an image
      oneOf:
        - $ref: '#/components/schemas/ImageById'
        - $ref: '#/components/schemas/ImageByProvider'
      type: object
    ImageById:
      title: ImageById
      example:
        caption: <Message Caption>
        id: <Media Id, from Media API>X
      properties:
        caption:
          type: string
        id:
          type: string
      required:
        - caption
        - id
      type: object
    ImageByProvider:
      title: ImageByProvider
      example:
        caption: <Media Caption>
        link: <Link to Image, https>
        provider:
          name: <Provider Name from Media Provider API, optional
      properties:
        caption:
          type: string
        link:
          type: string
        provider:
          $ref: '#/components/schemas/Provider'
      required:
        - provider
        - link
        - caption
      type: object
    Language:
      title: Language
      example:
        code: en
        policy: deterministic
      properties:
        code:
          description: >-
            The code of the language or locale to use — Accepts both language
            and language_locale formats (e.g., en and en_US).
          type: string
        policy:
          description: The language policy the message should follow
          enum:
            - fallback
            - deterministic
          type: string
      required:
        - policy
        - code
      type: object
    LocalizableParam:
      title: LocalizableParam
      example:
        default: <param value>
      properties:
        currency:
          $ref: '#/components/schemas/Currency'
        date_time:
          $ref: '#/components/schemas/Date-Time-Object'
        default:
          description: Default text if localization fails
          type: string
      required:
        - default
      type: object
    Location:
      title: Location
      example:
        address: <Location's Address>
        latitude: <Latitude>
        longitude: <Longitude>
        name: <Location Name>
      properties:
        address:
          description: Address of the location. Only displayed if name is present.
          type: string
        latitude:
          description: Latitude of the location
          type: string
        longitude:
          description: Longitude of the location
          type: string
        name:
          description: Name of the location
          type: string
      required:
        - longitude
        - latitude
        - name
        - address
      type: object
    Login-Admin-Request-Body:
      title: Login-Admin-Request
      example:
        new_password: <New Admin Password>
      properties:
        new_password:
          type: string
      required:
        - new_password
      type: object
    Mark-Message-As-Read-Request-Body:
      title: Mark-Message-As-Read-Request
      example:
        status: read
      properties:
        status:
          default: read
          type: string
      required:
        - status
      type: object
    Media:
      title: Media
      example:
        auto_download:
          - image
          - document
          - audio
      properties:
        auto_download:
          description: An array specifying which types of media to automatically download.
          items:
            enum:
              - audio
              - document
              - voice
              - video
              - image.
            type: string
          type: array
      required:
        - auto_download
      type: object
    Media-Provider:
      title: Update-Media-Providers-Request
      example:
        config:
          bearer: <Bearer Auth Token>
        name: <Provider Name>
        type: www
      properties:
        config:
          $ref: '#/components/schemas/Config'
        name:
          description: The name for the provider
          type: string
        type:
          description: The type of provider
          type: string
      type: object
    Media-Provider-Settings:
      title: Root Type for Settings
      description: ''
      example:
        application:
          media:
            providers:
              - config:
                  basic:
                    password: your-password
                    username: your-username
                name: your-first-provider
                type: www
              - config:
                  bearer: your-bearer-token
                name: your-second-provider
                type: www
      properties:
        application:
          $ref: '#/components/schemas/Media-Provider-Settings-Application'
      type: object
    Media-Provider-Settings-Application:
      title: Root Type for Settings-Application
      description: ''
      example:
        media:
          providers:
            - config:
                basic:
                  password: your-password
                  username: your-username
              name: your-first-provider
              type: www
            - config:
                bearer: your-bearer-token
              name: your-second-provider
              type: www
      properties:
        media:
          $ref: '#/components/schemas/Media-Provider-Settings-Application-Media'
      type: object
    Media-Provider-Settings-Application-Media:
      title: Root Type for Settings-Application-Media
      description: ''
      example:
        providers:
          - config:
              basic:
                password: your-password
                username: your-username
            name: your-first-provider
            type: www
          - config:
              bearer: your-bearer-token
            name: your-second-provider
            type: www
      properties:
        providers:
          items:
            $ref: '#/components/schemas/Media-Provider'
          type: array
      type: object
    Message:
      title: Message
      description: ''
      example:
        id: gBEGkYiEB1VXAglK1ZEqA1YKPrU
      properties:
        id:
          type: string
      type: object
    Message-Context:
      title: Root Type for Message-Context
      description: ''
      example:
        from: sender-wa-id-of-context-message
        group_id: group-id-of-context-message
        id: message-id-of-context-message
        mentions:
          - wa-id1
          - wa-id2
      properties:
        from:
          description: Sender Whatsapp id of context-message
          type: string
        group_id:
          description: GroupId of context message
          type: string
        id:
          description: message id
          type: string
        mentions:
          description: Whats app ids
          items:
            type: string
          type: array
      type: object
    Message-Response:
      title: Message-Response
      description: ''
      allOf:
        - $ref: '#/components/schemas/Response'
        - properties:
            messages:
              items:
                $ref: '#/components/schemas/Message'
              type: array
          type: object
      example:
        messages:
          - id: gBEGkYiEB1VXAglK1ZEqA1YKPrUX
      type: object
    Message-Type:
      description: type of the message
      default: text
      enum:
        - audio
        - contacts
        - document
        - hsm
        - image
        - location
        - text
        - video
        - voice
        - unknown
      type: string
    Meta:
      title: Meta
      description: >-
        Contains generic information such as WhatsApp Business API Client
        version.
      example:
        version: whatsapp-business-api-client-version
        api_status: stable
      properties:
        version:
          type: string
        api_status:
          enum:
            - deprecated
            - experimental
            - stable
          type: string
      type: object
    Name:
      title: Name
      description: Full contact name
      example:
        first_name: John
        formatted_name: John Smith
        last_name: Smith
      properties:
        first_name:
          description: First name
          type: string
        formatted_name:
          description: Full name as it normally appears
          type: string
        last_name:
          description: Last name
          type: string
        prefix:
          description: Name preffix
          type: string
        suffix:
          description: Name suffix
          type: string
      required:
        - formatted_name
      type: object
    Org:
      title: Org
      description: Contact organization information
      example:
        title: Manager
        company: WhatsApp
        department: Design
      properties:
        title:
          description: Contact's business title
          type: string
        company:
          description: Name of the contact's company
          type: string
        department:
          description: Name of the contact's department
          type: string
      required:
        - company
      type: object
    Phone:
      title: Phone
      example:
        phone: +1 (650) 555-1234
        type: WORK
        wa_id: '16505551234'
      properties:
        phone:
          type: string
        type:
          description: 'Standard Values: CELL, MAIN, IPHONE, HOME, WORK'
          type: string
        wa_id:
          description: WhatsApp ID
          type: string
      type: object
    Profile-About:
      title: Set-Profile-About-Request
      example:
        text: <About Profile>
      properties:
        text:
          description: |-
            Text to display in your profile's About section
            The max length for the string is 139 characters.
          type: string
      required:
        - text
      type: object
    Profile-About-Settings:
      title: Root Type for Profile-About-Settings
      description: ''
      example:
        profile:
          about:
            text: your-profile-about-text
      properties:
        profile:
          $ref: '#/components/schemas/Profile-About-Settings-Profile'
      type: object
    Profile-About-Settings-Profile:
      title: Root Type for About-XXX
      description: ''
      example:
        about:
          text: your-profile-about-text
      properties:
        about:
          $ref: '#/components/schemas/Profile-About'
      type: object
    Profile-Photo-Settings:
      title: Root Type for Profile-Photo-Settings
      description: ''
      example:
        profile:
          photo:
            link: profile-photo-url
      properties:
        profile:
          properties:
            photo:
              properties:
                link:
                  type: string
              type: object
          type: object
      type: object
    Profile-Photo-Settings-Profile:
      title: Root Type for Profile-Photo-Settings-Profile
      description: ''
      example:
        photo:
          link: profile-photo-url
      properties:
        photo:
          $ref: '#/components/schemas/Profile-Photo-Settings-Profile-Photo'
      type: object
    Profile-Photo-Settings-Profile-Photo:
      title: Root Type for Profile-Photo-Settings-Profile-Photo
      description: ''
      example:
        link: profile-photo-url
      properties:
        link:
          type: string
      type: object
    Provider:
      title: Provider
      example:
        name: <Provider Name from Media Provider API, optional
      properties:
        name:
          type: string
      required:
        - name
      type: object
    Register-Account-Request-Body:
      title: Register-Account-Request
      example:
        code: your-registration-code-received-by-sms-or-voice-call
      properties:
        code:
          type: string
      required:
        - code
      type: object
    Remove-Group-Participant-Request-Body:
      title: Remove-Group-Participant-Request
      example:
        wa_ids:
          - '{{Recipient-WA-ID}}'
      properties:
        wa_ids:
          description: ''
          items:
            type: string
          type: array
      required:
        - wa_ids
      type: object
    Request-Code-Account:
      title: Root Type for Request-Code-Account
      description: ''
      example:
        vname: decoded-vname-from-cert
      properties:
        vname:
          type: string
      type: object
    Request-Code-Request-Body:
      title: Request-Code-Request
      example:
        cc: <Country Code>
        cert: <Valid Cert from Business Manager>
        method: < sms | voice >
        phone_number: <Phone Number>
        pin: <Two-Step Verification PIN
      properties:
        cc:
          description: Numerical country code for the phone number you are registering
          type: string
        cert:
          description: Base64-encoded Verified Name certificate
          type: string
        method:
          description: Method of receiving your registration code
          enum:
            - sms
            - voice
          type: string
        phone_number:
          description: >-
            Phone number you are registering, without the country code or plus
            symbol (+)
          type: string
        pin:
          description: >-
            Existing 6-digit PIN — This is only required when two-factor
            verification is enabled on this account.
          type: string
      required:
        - cc
        - phone_number
        - method
        - cert
      type: object
    Request-Code-Response:
      title: Root Type for Request-Code-Response
      description: ''
      example:
        account:
          - vname: decoded-vname-from-cert
      properties:
        account:
          items:
            $ref: '#/components/schemas/Request-Code-Account'
          type: array
      type: object
    Response:
      title: Response
      description: ''
      example:
        errors:
          - title: error-code-title
            code: 1234
            details: optional-detailed-error-message
        meta:
          version: whatsapp-business-api-client-version
          api_status: deprecated
      properties:
        errors:
          description: >-
            Only returned with a failed request. Contains an array of error
            objects that are present when there is an error. 
          items:
            $ref: '#/components/schemas/Error'
          type: array
        meta:
          $ref: '#/components/schemas/Meta'
      type: object
    Restore-Settings-Request-Body:
      title: Restore-Settings-Request
      example:
        data: <Data to Restore, from Backup API>
        password: <Password for Backup>
      properties:
        data:
          description: The data that was returned by the /v1/settings/backup API call
          type: string
        password:
          description: >-
            The password you used in the /v1/settings/backup API call to encrypt
            the backup data
          type: string
      required:
        - password
        - data
      type: object
    Send-Message-Request-Body:
      title: Send-Text-Message-Request
      example:
        preview_url: true
        recipient_type: individual
        text:
          body: your-text-message-content
        to: '{whatsapp-id}'
        type: text
      properties:
        audio:
          $ref: '#/components/schemas/Audio'
        contacts:
          description: ''
          items:
            $ref: '#/components/schemas/Contact'
          type: array
        document:
          $ref: '#/components/schemas/Document'
        hsm:
          $ref: '#/components/schemas/Hsm'
        image:
          $ref: '#/components/schemas/Image'
        location:
          $ref: '#/components/schemas/Location'
        preview_url:
          description: >-
            Specifying preview_url in the request is optional when not including
            a URL in your message.

            To include a URL preview, set preview_url to true in the message
            body and make sure the URL begins with http:// or https://. For more
            information, see the Sending URLs in Text Messages section.
          type: boolean
        recipient_type:
          description: >-
            Determines whether the recipient is an individual or a group

            Specifying recipient_type in the request is optional when the value
            is individual.

            However, recipient_type is required when using group. If sending a
            text message to a group, see the Sending Group Messages
            documentation.
          default: individual
          enum:
            - individual
            - group
          type: string
        text:
          $ref: '#/components/schemas/Text'
        to:
          description: >-
            When recipient_type is individual, this field is the WhatsApp ID
            (phone number) returned from contacts endpoint. When recipient_type
            is group, this field is the WhatsApp group ID.
          type: string
        ttl:
          type: object
        type:
          $ref: '#/components/schemas/Message-Type'
        video:
          $ref: '#/components/schemas/Video'
      required:
        - to
      type: object
    Set-Shards-Request-Body:
      title: Set-Shards-Request
      example:
        cc: <Country Code>
        phone_number: <Phone Number>
        pin: <Two-Step PIN>
        shards: 32
      properties:
        cc:
          type: string
        phone_number:
          type: string
        pin:
          type: string
        shards:
          enum:
            - '1'
            - '2'
            - '4'
            - '8'
            - '16'
            - '32'
          format: int32
          type: integer
      required:
        - cc
        - phone_number
        - shards
        - pin
      type: object
    Text:
      title: Text
      example:
        body: <Message Text>
      properties:
        body:
          type: string
      required:
        - body
      type: object
    Update-Group-Info-Request-Body:
      title: Update-Group-Info-Request
      example:
        subject: <New Group Subject>
      properties:
        subject:
          type: string
      required:
        - subject
      type: object
    Update-User-Request-Body:
      title: Update-User-Request
      example:
        password: New Password
      properties:
        password:
          description: password
          type: string
      required:
        - password
      type: object
    Upload-Media:
      title: Root Type for Upload-Media
      description: ''
      example:
        id: f043afd0-f0ae-4b9c-ab3d-696fb4c8cd68
      properties:
        id:
          type: string
      type: object
    Upload-Media-Response:
      title: Root Type for Upload-Media-Response
      description: ''
      allOf:
        - $ref: '#/components/schemas/Response'
        - properties:
            media:
              items:
                $ref: '#/components/schemas/Upload-Media'
              type: array
          type: object
      example:
        media:
          - id: f043afd0-f0ae-4b9c-ab3d-696fb4c8cd68X
      type: object
    Url:
      title: Root Type for Url
      description: 'Standard Values: HOME, WORK'
      example:
        type: WORK
        url: https://www.facebook.com
      properties:
        type:
          description: 'Standard Values: HOME, WORK'
          type: string
        url:
          description: URL
          type: string
      type: object
    User-Login-Response:
      title: UserLoginResponse
      description: ''
      allOf:
        - $ref: '#/components/schemas/Response'
        - properties:
            users:
              items:
                $ref: '#/components/schemas/User-Login-Response-Item'
              type: array
          type: object
      example:
        users:
          - expires_after: '2018-03-01T15:29:26.000Z'
            token: eyJhbGciOHlXVCJ9.eyJ1c2VyIjoNTIzMDE2Nn0.mEoF0COaO00Z1cANo
      type: object
    User-Login-Response-Item:
      title: UserLoginResponseItem
      description: ''
      example:
        expires_after: '2018-03-01T15:29:26.000Z'
        token: eyJhbGciOHlXVCJ9.eyJ1c2VyIjoNTIzMDE2Nn0.mEoF0COaO00Z1cANo
      properties:
        expires_after:
          description: Token expiration timestamp. By default, this is 7 days.
          format: date-time
          type: string
        token:
          description: >-
            Authentication token to be used for all other WhatsApp Business API
            calls. The token must be sent in the authorization header in the
            format:

            Authorization: Bearer <authentication-token>
          type: string
      type: object
    User-Response:
      title: Root Type for User-Create-Response
      description: ''
      allOf:
        - $ref: '#/components/schemas/Response'
        - properties:
            users:
              items:
                $ref: '#/components/schemas/User-Response-Item'
              type: array
          type: object
      example:
        users:
          - username: username
      type: object
    User-Response-Item:
      title: Root Type for User-Create-Response-Item
      description: ''
      example:
        username: username
      properties:
        username:
          type: string
      type: object
    User-Role:
      description: ''
      enum:
        - ROLE_ADMIN
        - ROLE_USER
      type: string
    Video:
      title: Video
      description: The media object containing a video
      oneOf:
        - $ref: '#/components/schemas/VideoById'
        - $ref: '#/components/schemas/VideoByProvider'
      type: object
    VideoById:
      title: VideoById
      example:
        caption: <Message Caption>
        id: <Media Id, from Media API>X
      properties:
        caption:
          type: string
        id:
          type: string
      required:
        - caption
        - id
      type: object
    VideoByProvider:
      title: ByProvider
      example:
        caption: <Message Caption>
        link: <Link to Video, https>
        provider:
          name: <Provider Name from Media Provider API, optional
      properties:
        caption:
          type: string
        link:
          type: string
        provider:
          $ref: '#/components/schemas/Provider'
      required:
        - provider
        - caption
        - link
      type: object
    Webhook-Audio:
      title: Root Type for Webhook-Audio
      description: ''
      example:
        file: absolute-filepath-on-coreapp
        id: media-id
        link: link-to-audio-file
        mime_type: media-mime-type
        sha256: checksum
      properties:
        caption:
          description: Optional. Only present if specified.
          type: string
        file:
          description: >-
            Absolute filename and location on media volume. This parameter is
            deprecated.
          deprecated: true
          type: string
        filename:
          description: >-
            Filename on the sender's device. This will only be present in audio
            and document media messages.
          type: string
        id:
          description: >-
            ID of the media. Can be used to delete the media if stored locally
            on the client.
          type: string
        link:
          type: string
        mime_type:
          description: Mime type of media
          type: string
        sha256:
          description: Checksum
          type: string
      type: object
    Webhook-Contact:
      title: Root Type for Webhook-Contact
      description: ''
      example:
        profile:
          name: Kerry Fisher
        wa_id: '16315551234'
      properties:
        profile:
          $ref: '#/components/schemas/Webhook-Contact-Profile'
        wa_id:
          description: The WhatsApp ID of the contact
          type: string
      type: object
    Webhook-Contact-Profile:
      title: Root Type for Webhook-Contact-Profile
      description: ''
      example:
        name: sender-profile-name
      properties:
        name:
          description: Optional. As of v2.21.4, contains the sender's profile name.
          type: string
      type: object
    Webhook-Document:
      title: Root Type for Webhook-Document
      description: ''
      example:
        caption: 80skaraokesonglistartist
        file: /usr/local/wamedia/shared/fc233119-733f-49c-bcbd-b2f68f798e33
        id: fc233119-733f-49c-bcbd-b2f68f798e33
        mime_type: application/pdf
        sha256: 3b11fa6ef2bde1dd14726e09d3edaf782120919d06f6484f32d5d5caa4b8e
      properties:
        caption:
          description: Optional. Only present if specified.
          type: string
        file:
          description: >-
            Absolute filename and location on media volume. This parameter is
            deprecated.
          deprecated: true
          type: string
        filename:
          description: >-
            Filename on the sender's device. This will only be present in audio
            and document media messages.
          type: string
        id:
          description: >-
            ID of the media. Can be used to delete the media if stored locally
            on the client.
          type: string
        link:
          type: string
        mime_type:
          description: Mime type of media
          type: string
        sha256:
          description: Checksum
          type: string
      type: object
    Webhook-Event:
      title: Root Type for Webhook-Event
      description: ''
      example:
        contacts:
          - profile:
              name: Kerry Fisher
            wa_id: '16315551234'
        messages:
          - from: '16315551234'
            id: ABGGFlA5FpafAgo6tHcNmNjXmuSf
            text:
              body: Hello this is an answer
            timestamp: '1518694235'
            type: text
      properties:
        contacts:
          items:
            $ref: '#/components/schemas/Webhook-Contact'
          type: array
        errors:
          items:
            $ref: '#/components/schemas/Error'
          type: array
        messages:
          items:
            $ref: '#/components/schemas/Webhook-Message'
          type: array
        statuses:
          items:
            $ref: '#/components/schemas/Webhook-Status'
          type: array
      type: object
    Webhook-Image:
      title: Root Type for Webhook-Image
      description: ''
      example:
        caption: Check out my new phone!
        file: /usr/local/wamedia/shared/b1cf38-8734-4ad3-b4a1-ef0c10d0d683
        id: b1c68f38-8734-4ad3-b4a1-ef0c10d683
        mime_type: image/jpeg
        sha256: 29ed500fa64eb55fc19dc4124acb300e5dcc54a0f822a301ae99944db
      properties:
        caption:
          description: Optional. Only present if specified.
          type: string
        file:
          description: >-
            Absolute filename and location on media volume. This parameter is
            deprecated.
          deprecated: true
          type: string
        id:
          description: >-
            ID of the media. Can be used to delete the media if stored locally
            on the client.
          type: string
        link:
          type: string
        mime_type:
          description: Mime type of media
          type: string
        sha256:
          description: Checksum
          type: string
      type: object
    Webhook-Location:
      title: Root Type for Webhook-Location
      description: ''
      example:
        address: Main Street Beach, Santa Cruz, CA
        latitude: 38.9806263495
        longitude: -131.9428612257
        name: Main Street Beach
        url: https://foursquare.com/v/4d7031d35b5df7744
      properties:
        address:
          description: Address of the location
          type: string
        latitude:
          description: Latitude of location being sent
          format: double
          type: number
        longitude:
          description: Longitude of location being sent
          format: double
          type: number
        name:
          description: Name of the location
          type: string
        url:
          description: >-
            URL for the website where the user downloaded the location
            information
          type: string
      type: object
    Webhook-Message:
      title: Root Type for Webhook-Message
      description: ''
      example:
        from: '16315551234'
        id: ABGGFlA5FpafAgo6tHcNmNjXmuSfX
        text:
          body: Hello this is an answer
        timestamp: '1518694235'
        type: text
      properties:
        audio:
          $ref: '#/components/schemas/Webhook-Audio'
        contacts:
          items:
            $ref: '#/components/schemas/Contact'
          type: array
        context:
          $ref: '#/components/schemas/Message-Context'
        document:
          $ref: '#/components/schemas/Webhook-Document'
        errors:
          items:
            $ref: '#/components/schemas/Error'
          type: array
        from:
          description: WhatsApp ID of the sender
          type: string
        group_id:
          description: Optional. WhatsApp group ID
          type: string
        id:
          description: Message ID
          type: string
        image:
          $ref: '#/components/schemas/Webhook-Image'
        location:
          $ref: '#/components/schemas/Webhook-Location'
        system:
          $ref: '#/components/schemas/Webhook-System'
        text:
          $ref: '#/components/schemas/Webhook-Text'
        timestamp:
          description: Message received timestamp
          type: string
        type:
          $ref: '#/components/schemas/Message-Type'
        video:
          $ref: '#/components/schemas/Webhook-Video'
        voice:
          $ref: '#/components/schemas/Webhook-Voice'
      type: object
    Webhook-Status:
      title: Root Type for Webhook-Status
      description: ''
      example:
        errors:
          - title: >-
              Failed to send message because you are outside the support window
              for freeform messages to this user. Please use a valid HSM
              notification or reconsider.
            code: 470
        id: gBGGEgZHMlEfAgkM1RBkhDRr7t8
        recipient_id: '12064001000'
        status: failed
        timestamp: '1533332775'
      properties:
        errors:
          items:
            $ref: '#/components/schemas/Error'
          type: array
        id:
          description: Message ID
          type: string
        recipient_id:
          description: WhatsApp ID of recipient
          type: string
        status:
          description: Status of message
          enum:
            - sent
            - delivered
            - read
            - failed
            - deleted
          type: string
          x-enum-descriptions:
            - >-
              Message received by WhatsApp server (One checkmark in WhatsApp
              Mobile)
            - Message delivered to recipient (Two checkmarks in WhatsApp Mobile)
            - Message read by recipient (Two blue checkmarks in WhatsApp Mobile)
            - Message failed to send (Red error triangle in WhatsApp Mobile)
            - Message deleted by the user
        timestamp:
          description: Timestamp of the status message
          type: string
      type: object
    Webhook-System:
      title: Root Type for Webhook-System
      description: ''
      example:
        body: +1 (650) 387-5246 added +1 (650) 644-8470
        group_id: 16315558032-1530825318
        operator: '16503875246'
        type: group_user_joined
        users:
          - '16506448470'
      properties:
        body:
          type: string
        type:
          description: ''
          enum:
            - group_created
            - group_user_promoted
            - group_user_demoted
            - group_user_joined
            - group_user_left
            - group_subject_changed
            - group_description_changed
            - group_icon_changed
            - group_icon_deleted
            - group_invite_link_revoked
            - user_identity_changed
            - group_user_changed_number
            - group_error_fetching_photo
            - group_error_adding_users
            - group_error_adding_user
            - group_error_full_adding_users
            - group_error_removing_user
            - broadcast_list_created
            - group_ended
            - group_error_blocked_adding_user
          type: string
          x-enum-descriptions:
            - Group created
            - Group user promoted to admin
            - Group user removed as admin
            - User joined the group
            - User left the group
            - Group subject changed
            - Group description changed
            - Group icon changed
            - Group icon deleted
            - Group's invite link disabled
            - User's end-to-end keys changed
            - User's phone number changed
            - Error retrieving the group photo
            - Error adding users to the group
            - Error adding a user to the group
            - Group is at capacity and no more users can be added
            - Error removing user from group
            - Broadcast list created
            - Group ended
            - Error attempting to add a user that blocked the adder
      type: object
    Webhook-Text:
      title: Root Type for Webhook-Text
      description: ''
      example:
        body: text-message-content
      properties:
        body:
          description: Message text
          type: string
      type: object
    Webhook-Video:
      title: Root Type for Webhook-Video
      description: ''
      example:
        file: absolute-filepath-on-coreapp
        id: media-idX
        link: link-to-video-file
        mime_type: media-mime-type
        sha256: checksum
      properties:
        caption:
          description: Optional. Only present if specified.
          type: string
        file:
          description: >-
            Absolute filename and location on media volume. This parameter is
            deprecated.
          deprecated: true
          type: string
        id:
          description: >-
            ID of the media. Can be used to delete the media if stored locally
            on the client.
          type: string
        link:
          type: string
        mime_type:
          description: Mime type of media
          type: string
        sha256:
          description: Checksum
          type: string
      type: object
    Webhook-Voice:
      title: Root Type for Webhook-Voice
      description: ''
      example:
        file: /usr/local/wamedia/shared/463e/b7ec/ff4e4d9bb1101879cbd411b2
        id: 463eb7ec-ff4e-4d9b-b110-1879cbd411b2
        mime_type: audio/ogg; codecs=opus
        sha256: fa9e1807d936b7cebe63654ea3a7912b1fa9479220258d823590521ef53b0710
      properties:
        caption:
          description: Optional. Only present if specified.
          type: string
        file:
          description: >-
            Absolute filename and location on media volume. This parameter is
            deprecated.
          deprecated: true
          type: string
        id:
          description: >-
            ID of the media. Can be used to delete the media if stored locally
            on the client.
          type: string
        link:
          type: string
        mime_type:
          description: Mime type of media
          type: string
        sha256:
          description: Checksum
          type: string
      type: object
    Webhooks:
      title: Webhooks
      example:
        max_concurrent_requests: 12
        url: <Webhook URL, https>
      properties:
        max_concurrent_requests:
          description: >-
            Configures the maximum number of inflight callback requests that are
            sent out. Can be set to 6 (default), 12, 18, or 24.
          default: 6
          enum:
            - '6'
            - '12'
            - '18'
            - '24'
          format: int32
          type: integer
        url:
          description: >-
            Inbound and outbound notifications are routed to this URL. A
            HTTPS-based endpoint is required; HTTP will not work.
          type: string
      type: object
    CertificatesUploadExternalRequest:
      format: binary
      type: string
    CertificatesUploadWebhookCaRequest:
      format: binary
      type: string
    GroupsDeleteIconRequest:
      properties:
        File:
          format: binary
          type: string
      required:
        - File
      type: object
    GroupsSetIconRequest:
      properties:
        File:
          format: binary
          type: string
      required:
        - File
      type: object
    MediaUploadRequest:
      format: binary
      type: string
    MediaUploadRequest1:
      format: binary
      type: string
    MediaUploadRequest2:
      format: binary
      type: string
    MediaUploadRequest3:
      format: binary
      type: string
    MediaUploadRequest4:
      format: binary
      type: string
    MediaUploadRequest5:
      format: binary
      type: string
    MediaUploadRequest6:
      format: binary
      type: string
    MediaUploadRequest7:
      format: binary
      type: string
    MediaUploadRequest8:
      format: binary
      type: string
    MediaUploadRequest9:
      format: binary
      type: string
    MediaUploadRequest10:
      format: binary
      type: string
    MediaUploadRequest11:
      format: binary
      type: string
    MediaUploadRequest12:
      format: binary
      type: string
    MediaUploadRequest13:
      format: binary
      type: string
    ApplicationUpdateMediaProvidersRequest:
      description: ''
      items:
        $ref: '#/components/schemas/Media-Provider'
      type: array
    ProfileUploadPhotoRequest:
      properties:
        File:
          format: binary
          type: string
      required:
        - File
      type: object
    CertificatesDownloadCaCertificateResponse:
      format: binary
      type: string
    CertificatesDownloadWebhookCaCertificateResponse:
      format: binary
      type: string
    MediaDownloadMediaResponse:
      type: object
      properties: {}
      example: {}
    HealthGetMetricsResponse:
      type: object
      properties: {}
      example: {}
    HealthGetMetrics200Response:
      type: string
    ProfileGetPhotoResponse:
      format: binary
      type: string
    HealthGetAppStatsResponse:
      type: object
      properties: {}
      example: {}
    HealthGetAppStats200Response:
      type: string
    HealthDbStatsGetResponse:
      type: object
      properties: {}
      example: {}
    HealthDbStatsGet200Response:
      type: string
    HealthGetSupportInfoResponse:
      type: object
      properties: {}
      example: {}
  securitySchemes:
    bearerAuth:
      bearerFormat: token
      scheme: bearer
      type: http
    httpBasic:
      scheme: basic
      type: http
security:
  - bearerAuth: []
