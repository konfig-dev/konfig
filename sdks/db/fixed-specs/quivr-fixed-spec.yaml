openapi: 3.0.3
info:
  title: FastAPI
  description: Open-source RAG Framework
  version: 0.1.0
  x-konfig-ignore:
    object-with-no-properties: true
servers:
  - url: https://api.quivr.app
tags:
  - name: Brain
  - name: Chat
  - name: Health
  - name: Prompt
  - name: User
  - name: API Key
  - name: Knowledge
  - name: Assistant
  - name: Onboarding
  - name: BrainSubscription
  - name: Subscription
  - name: Crawl
  - name: Analytics
  - name: Upload
  - name: Notification
  - name: Root
  - name: Contact
paths:
  /brains/public:
    get:
      tags:
        - Brain
      summary: Retrieve Public Brains
      operationId: Brain_getAllPublic
      security:
        - AuthBearer: []
      description: Retrieve all Quivr public brains.
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrainGetAllPublicResponse'
  /brains/{brain_id}/secrets-values:
    put:
      tags:
        - Brain
      summary: Update Existing Brain Secrets
      operationId: Brain_updateSecretsValues
      security:
        - AuthBearer: []
        - AuthBearer: []
      description: Update an existing brain's secrets.
      parameters:
        - name: brain_id
          in: path
          required: true
          schema:
            title: Brain Id
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrainUpdateSecretsValuesRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrainUpdateSecretsValuesResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /brains/{brain_id}/documents:
    post:
      tags:
        - Brain
      summary: Get Question Context For Brain
      operationId: Brain_getQuestionContext
      security:
        - AuthBearer: []
        - AuthBearer: []
      description: Retrieve the question context from a specific brain.
      parameters:
        - name: brain_id
          in: path
          required: true
          schema:
            title: Brain Id
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrainQuestionRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrainGetQuestionContextResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /chat/healthz:
    get:
      tags:
        - Health
      summary: Healthz
      operationId: Health_checkStatus
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckStatusResponse'
  /chat:
    get:
      tags:
        - Chat
      summary: Get Chats
      operationId: Chat_getAllChats
      security:
        - AuthBearer: []
        - AuthBearer: []
      description: >-
        Retrieve all chats for the current user.


        - `current_user`: The current authenticated user.

        - Returns a list of all chats for the user.


        This endpoint retrieves all the chats associated with the current
        authenticated user. It returns a list of chat objects

        containing the chat ID and chat name for each chat.
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatGetAllChatsResponse'
    post:
      tags:
        - Chat
      summary: Create Chat Handler
      operationId: Chat_createHandler
      security:
        - AuthBearer: []
        - AuthBearer: []
      description: Create a new chat with initial chat messages.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateChatProperties'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatCreateHandlerResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /chat/{chat_id}:
    delete:
      tags:
        - Chat
      summary: Delete Chat
      operationId: Chat_deleteChatById
      security:
        - AuthBearer: []
      description: Delete a specific chat by chat ID.
      parameters:
        - name: chat_id
          in: path
          required: true
          schema:
            title: Chat Id
            type: string
            format: uuid
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatDeleteChatByIdResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /chat/{chat_id}/metadata:
    put:
      tags:
        - Chat
      summary: Update Chat Metadata Handler
      operationId: Chat_updateMetadataHandler
      security:
        - AuthBearer: []
        - AuthBearer: []
      description: Update chat attributes
      parameters:
        - name: chat_id
          in: path
          required: true
          schema:
            title: Chat Id
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatUpdatableProperties'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatUpdateMetadataHandlerResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /chat/{chat_id}/{message_id}:
    put:
      tags:
        - Chat
      summary: Update Chat Message
      operationId: Chat_updateMessage
      security:
        - AuthBearer: []
        - AuthBearer: []
      parameters:
        - name: chat_id
          in: path
          required: true
          schema:
            title: Chat Id
            type: string
            format: uuid
        - name: message_id
          in: path
          required: true
          schema:
            title: Message Id
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatMessageProperties'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatUpdateMessageResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /chat/{chat_id}/question:
    post:
      tags:
        - Chat
      summary: Create Question Handler
      operationId: Chat_handleQuestion
      security:
        - AuthBearer: []
        - AuthBearer: []
      parameters:
        - name: chat_id
          in: path
          required: true
          schema:
            title: Chat Id
            type: string
            format: uuid
        - name: brain_id
          in: query
          required: false
          schema:
            title: Brain Id
            type: string
            format: uuid
            nullable: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatQuestion'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatHandleQuestionResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /chat/{chat_id}/question/stream:
    post:
      tags:
        - Chat
      summary: Create Stream Question Handler
      operationId: Chat_createStreamQuestionHandler
      security:
        - AuthBearer: []
        - AuthBearer: []
      parameters:
        - name: chat_id
          in: path
          required: true
          schema:
            title: Chat Id
            type: string
            format: uuid
        - name: brain_id
          in: query
          required: false
          schema:
            title: Brain Id
            type: string
            format: uuid
            nullable: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatQuestion'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatCreateStreamQuestionHandlerResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /chat/{chat_id}/history:
    get:
      tags:
        - Chat
      summary: Get Chat History Handler
      operationId: Chat_getHistory
      security:
        - AuthBearer: []
      parameters:
        - name: chat_id
          in: path
          required: true
          schema:
            title: Chat Id
            type: string
            format: uuid
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatGetHistoryResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /chat/{chat_id}/question/answer:
    post:
      tags:
        - Chat
      summary: Add Question And Answer Handler
      operationId: Chat_addQuestionAndAnswer
      security:
        - AuthBearer: []
      description: Add a new question and anwser to the chat.
      parameters:
        - name: chat_id
          in: path
          required: true
          schema:
            title: Chat Id
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionAndAnswer'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatNullable'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /crawl/healthz:
    get:
      tags:
        - Health
      summary: Healthz
      operationId: Health_checkStatus
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckStatus200Response'
  /crawl:
    post:
      tags:
        - Crawl
      summary: Crawl Endpoint
      operationId: Crawl_websiteDataProcessor
      security:
        - AuthBearer: []
        - AuthBearer: []
      description: Crawl a website and process the crawled data.
      parameters:
        - description: The ID of the brain
          name: brain_id
          in: query
          required: true
          schema:
            title: Brain Id
            description: The ID of the brain
            type: string
            format: uuid
        - description: The ID of the chat
          name: chat_id
          in: query
          required: false
          schema:
            title: Chat Id
            description: The ID of the chat
            type: string
            format: uuid
            nullable: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CrawlWebsite'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CrawlWebsiteDataProcessorResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /assistants:
    get:
      tags:
        - Assistant
      summary: List Assistants
      operationId: Assistant_getAllKnowledge
      security:
        - AuthBearer: []
        - AuthBearer: []
      description: Retrieve and list all the knowledge in a brain.
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssistantGetAllKnowledgeResponse'
  /assistant/process:
    post:
      tags:
        - Assistant
      summary: Process Assistant
      operationId: Assistant_processData
      security:
        - AuthBearer: []
        - AuthBearer: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: >-
                #/components/schemas/Body_process_assistant_assistant_process_post
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssistantProcessDataResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /onboarding:
    get:
      tags:
        - Onboarding
      summary: Get User Onboarding Handler
      operationId: Onboarding_getUserInfo
      security:
        - AuthBearer: []
        - AuthBearer: []
      description: Get user onboarding information for the current user
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnboardingStatesNullable'
    put:
      tags:
        - Onboarding
      summary: Update User Onboarding Handler
      operationId: Onboarding_updateUserOnboarding
      security:
        - AuthBearer: []
        - AuthBearer: []
      description: Update user onboarding information for the current user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OnboardingUpdatableProperties'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnboardingStates'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /:
    get:
      tags:
        - Root
      summary: Root
      operationId: Root_statusCheck
      description: Root endpoint to check the status of the API.
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RootStatusCheckResponse'
  /healthz:
    get:
      tags:
        - Health
      summary: Healthz
      operationId: Health_checkStatus
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckStatus200Response'
  /analytics/brains-usages:
    get:
      tags:
        - Analytics
      summary: Get Brains Usages
      operationId: Analytics_getUserBrainUsages
      security:
        - AuthBearer: []
        - AuthBearer: []
      description: Get all user brains usages
      parameters:
        - name: brain_id
          in: query
          required: false
          schema:
            title: Brain Id
            type: string
            format: uuid
        - name: graph_range
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/Range'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalyticsGetUserBrainUsagesResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /upload/healthz:
    get:
      tags:
        - Health
      summary: Healthz
      operationId: Health_checkStatus
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckStatus200Response'
  /upload:
    post:
      tags:
        - Upload
      summary: Upload File
      operationId: Upload_filePost
      security:
        - AuthBearer: []
        - AuthBearer: []
      parameters:
        - description: The ID of the brain
          name: brain_id
          in: query
          required: true
          schema:
            title: Brain Id
            description: The ID of the brain
            type: string
            format: uuid
        - description: The ID of the chat
          name: chat_id
          in: query
          required: false
          schema:
            title: Chat Id
            description: The ID of the chat
            type: string
            format: uuid
            nullable: true
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Body_upload_file_upload_post'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadFilePostResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /user:
    get:
      tags:
        - User
      summary: Get User Endpoint
      operationId: User_getUserInformation
      security:
        - AuthBearer: []
        - AuthBearer: []
      description: >-
        Get user information and statistics.


        - `current_user`: The current authenticated user.

        - Returns the user's email, maximum brain size, current brain size,
        maximum requests number, requests statistics, and the current date.


        This endpoint retrieves information and statistics about the
        authenticated user. It includes the user's email, maximum brain size,

        current brain size, maximum requests number, requests statistics, and
        the current date. The brain size is calculated based on the

        user's uploaded vectors, and the maximum brain size is obtained from the
        environment variables. The requests statistics provide

        information about the user's API usage.
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetUserInformationResponse'
  /user/identity:
    get:
      tags:
        - User
      summary: Get User Identity Route
      operationId: User_getIdentityRoute
      security:
        - AuthBearer: []
        - AuthBearer: []
      description: Get user identity.
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserIdentity'
    put:
      tags:
        - User
      summary: Update User Identity Route
      operationId: User_updateIdentityRoute
      security:
        - AuthBearer: []
        - AuthBearer: []
      description: Update user identity.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdatableProperties'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserIdentity'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api-key:
    post:
      tags:
        - API Key
      summary: Create Api Key
      operationId: ApiKey_createNewKey
      security:
        - AuthBearer: []
        - AuthBearer: []
      description: >-
        Create new API key for the current user.


        - `current_user`: The current authenticated user.

        - Returns the newly created API key.


        This endpoint generates a new API key for the current user. The API key
        is stored in the database and associated with

        the user. It returns the newly created API key.
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKey'
  /api-key/{key_id}:
    delete:
      tags:
        - API Key
      summary: Delete Api Key
      operationId: ApiKey_deleteKey
      security:
        - AuthBearer: []
        - AuthBearer: []
      description: >-
        Delete (deactivate) an API key for the current user.


        - `key_id`: The ID of the API key to delete.


        This endpoint deactivates and deletes the specified API key associated
        with the current user. The API key is marked

        as inactive in the database.
      parameters:
        - name: key_id
          in: path
          required: true
          schema:
            title: Key Id
            type: string
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyDeleteKeyResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /api-keys:
    get:
      tags:
        - API Key
      summary: Get Api Keys
      operationId: ApiKey_getList
      security:
        - AuthBearer: []
        - AuthBearer: []
      description: >-
        Get all active API keys for the current user.


        - `current_user`: The current authenticated user.

        - Returns a list of active API keys with their IDs and creation times.


        This endpoint retrieves all the active API keys associated with the
        current user. It returns a list of API key objects

        containing the key ID and creation time for each API key.
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeyGetListResponse'
  /brains/{brain_id}/subscription:
    post:
      tags:
        - BrainSubscription
      summary: Invite Users To Brain
      operationId: BrainSubscription_inviteUsersToBrain
      security:
        - AuthBearer: []
        - AuthBearer: []
      description: |-
        Invite multiple users to a brain by their emails. This function creates
        or updates a brain subscription invitation for each user and sends an
        invitation email to each user.
      parameters:
        - name: brain_id
          in: path
          required: true
          schema:
            title: Brain Id
            type: string
            format: uuid
        - name: origin
          in: header
          required: false
          schema:
            title: Origin
            type: string
            nullable: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrainSubscriptionInviteUsersToBrainRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BrainSubscriptionInviteUsersToBrainResponse
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - Brain
      summary: Remove User Subscription
      operationId: Brain_removeUserSubscription
      security:
        - AuthBearer: []
      description: Remove a user's subscription to a brain
      parameters:
        - name: brain_id
          in: path
          required: true
          schema:
            title: Brain Id
            type: string
            format: uuid
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrainRemoveUserSubscriptionResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    get:
      tags:
        - BrainSubscription
      summary: Get User Invitation
      operationId: BrainSubscription_getUserInvitation
      security:
        - AuthBearer: []
        - AuthBearer: []
      description: >-
        Get an invitation to a brain for a user. This function checks if the
        user

        has been invited to the brain and returns the invitation status.
      parameters:
        - name: brain_id
          in: path
          required: true
          schema:
            title: Brain Id
            type: string
            format: uuid
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/BrainSubscriptionGetUserInvitationResponse
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - Brain
      summary: Update Brain Subscription
      operationId: Brain_updateSubscription
      security:
        - AuthBearer: []
        - AuthBearer: []
      parameters:
        - name: brain_id
          in: path
          required: true
          schema:
            title: Brain Id
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrainSubscriptionUpdatableProperties'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrainUpdateSubscriptionResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /brains/{brain_id}/users:
    get:
      tags:
        - Brain
      summary: Get Users With Brain Access
      operationId: Brain_getUsers
      security:
        - AuthBearer: []
        - AuthBearer: []
      description: Get all users for a brain
      parameters:
        - name: brain_id
          in: path
          required: true
          schema:
            title: Brain Id
            type: string
            format: uuid
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrainGetUsersResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /brains/{brain_id}/subscription/accept:
    post:
      tags:
        - Brain
      summary: Accept Invitation
      operationId: Brain_acceptInvitation
      security:
        - AuthBearer: []
      description: |-
        Accept an invitation to a brain for a user. This function removes the
        invitation from the subscription invitations and adds the user to the
        brain users.
      parameters:
        - name: brain_id
          in: path
          required: true
          schema:
            title: Brain Id
            type: string
            format: uuid
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrainAcceptInvitationResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /brains/{brain_id}/subscription/decline:
    post:
      tags:
        - Brain
      summary: Decline Invitation
      operationId: Brain_declineInvitation
      security:
        - AuthBearer: []
      description: |-
        Decline an invitation to a brain for a user. This function removes the
        invitation from the subscription invitations.
      parameters:
        - name: brain_id
          in: path
          required: true
          schema:
            title: Brain Id
            type: string
            format: uuid
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrainDeclineInvitationResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /brains/{brain_id}/subscribe:
    post:
      tags:
        - Subscription
      summary: Subscribe To Brain Handler
      operationId: Subscription_brainHandler
      security:
        - AuthBearer: []
      description: Subscribe to a public brain
      parameters:
        - name: brain_id
          in: path
          required: true
          schema:
            title: Brain Id
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionBrainHandlerRequest'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionBrainHandlerResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /brains/{brain_id}/unsubscribe:
    post:
      tags:
        - Subscription
      summary: Unsubscribe From Brain Handler
      operationId: Subscription_unregisterHandler
      security:
        - AuthBearer: []
      description: Unsubscribe from a brain
      parameters:
        - name: brain_id
          in: path
          required: true
          schema:
            title: Brain Id
            type: string
            format: uuid
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionUnregisterHandlerResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /prompts:
    get:
      tags:
        - Prompt
      summary: Get Prompts
      operationId: Prompt_getAllPublicPrompts
      security:
        - AuthBearer: []
      description: Retrieve all public prompt
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromptGetAllPublicPromptsResponse'
    post:
      tags:
        - Prompt
      summary: Create Prompt Route
      operationId: Prompt_createPromptById
      security:
        - AuthBearer: []
      description: Create a prompt by its id
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePromptProperties'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromptNullable'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /prompts/{prompt_id}:
    get:
      tags:
        - Prompt
      summary: Get Prompt
      operationId: Prompt_getById
      security:
        - AuthBearer: []
      description: Retrieve a prompt by its id
      parameters:
        - name: prompt_id
          in: path
          required: true
          schema:
            title: Prompt Id
            type: string
            format: uuid
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromptNullable'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - Prompt
      summary: Update Prompt
      operationId: Prompt_updateById
      security:
        - AuthBearer: []
      description: Update a prompt by its id
      parameters:
        - name: prompt_id
          in: path
          required: true
          schema:
            title: Prompt Id
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PromptUpdatableProperties'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PromptNullable'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /notifications/{chat_id}:
    get:
      tags:
        - Notification
      summary: Get Notifications
      operationId: Notification_getByChatId
      security:
        - AuthBearer: []
      description: Get notifications by chat_id
      parameters:
        - name: chat_id
          in: path
          required: true
          schema:
            title: Chat Id
            type: string
            format: uuid
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationGetByChatIdResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /knowledge:
    get:
      tags:
        - Knowledge
      summary: List Knowledge In Brain Endpoint
      operationId: Knowledge_getAllKnowledge
      security:
        - AuthBearer: []
        - AuthBearer: []
      description: Retrieve and list all the knowledge in a brain.
      parameters:
        - description: The ID of the brain
          name: brain_id
          in: query
          required: true
          schema:
            title: Brain Id
            description: The ID of the brain
            type: string
            format: uuid
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeGetAllKnowledgeResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /knowledge/{knowledge_id}:
    delete:
      tags:
        - Knowledge
      summary: Delete Endpoint
      operationId: Knowledge_deleteSpecificBrainKnowledge
      security:
        - AuthBearer: []
        - AuthBearer: []
      description: Delete a specific knowledge from a brain.
      parameters:
        - name: knowledge_id
          in: path
          required: true
          schema:
            title: Knowledge Id
            type: string
            format: uuid
        - name: brain_id
          in: query
          required: true
          schema:
            title: Brain Id
            type: string
            format: uuid
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/KnowledgeDeleteSpecificBrainKnowledgeResponse
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /knowledge/{knowledge_id}/signed_download_url:
    get:
      tags:
        - Knowledge
      summary: Generate Signed Url Endpoint
      operationId: Knowledge_generateSignedUrl
      security:
        - AuthBearer: []
        - AuthBearer: []
      description: Generate a signed url to download the file from storage.
      parameters:
        - name: knowledge_id
          in: path
          required: true
          schema:
            title: Knowledge Id
            type: string
            format: uuid
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KnowledgeGenerateSignedUrlResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /contact:
    post:
      tags:
        - Contact
      summary: Post Contact
      operationId: Contact_createNewContact
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactMessage'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactCreateNewContactResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /brains/integrations:
    get:
      tags:
        - Brain
      summary: Get Integration Brain Description
      operationId: Brain_getDescription
      security:
        - AuthBearer: []
      description: Retrieve the integration brain description.
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrainGetDescriptionResponse'
  /brains:
    get:
      tags:
        - Brain
      summary: Retrieve All Brains For User
      operationId: Brain_getAllForUser
      security:
        - AuthBearer: []
        - AuthBearer: []
      description: Retrieve all brains for the current user.
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrainGetAllForUserResponse'
    post:
      tags:
        - Brain
      summary: Create New Brain
      operationId: Brain_createNewBrain
      security:
        - AuthBearer: []
        - AuthBearer: []
      description: Create a new brain for the user.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBrainProperties'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrainCreateNewBrainResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /brains/{brain_id}:
    get:
      tags:
        - Brain
      summary: Retrieve Brain By Id
      operationId: Brain_getById
      security:
        - AuthBearer: []
        - AuthBearer: []
      description: Retrieve details of a specific brain by its ID.
      parameters:
        - name: brain_id
          in: path
          required: true
          schema:
            title: Brain Id
            type: string
            format: uuid
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrainGetByIdResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - Brain
      summary: Update Existing Brain
      operationId: Brain_updateConfiguration
      security:
        - AuthBearer: []
        - AuthBearer: []
      description: Update an existing brain's configuration.
      parameters:
        - name: brain_id
          in: path
          required: true
          schema:
            title: Brain Id
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrainUpdatableProperties'
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrainUpdateConfigurationResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    ApiBrainAllowedMethods:
      title: ApiBrainAllowedMethods
      type: string
      enum:
        - GET
        - POST
        - PUT
        - DELETE
    ApiBrainDefinitionEntity-Input:
      title: ApiBrainDefinitionEntity
      properties: &ref_7
        brain_id:
          title: Brain Id
          type: string
          format: uuid
        method:
          $ref: '#/components/schemas/ApiBrainAllowedMethods'
        url:
          title: Url
          type: string
        params:
          $ref: '#/components/schemas/ApiBrainDefinitionSchema'
        search_params:
          $ref: '#/components/schemas/ApiBrainDefinitionSchema'
        secrets:
          title: Secrets
          items:
            $ref: '#/components/schemas/ApiBrainDefinitionSecret'
          type: array
        raw:
          title: Raw
          type: boolean
          default: false
        jq_instructions:
          title: Jq Instructions
          type: string
          nullable: true
      type: object
      required: &ref_8
        - brain_id
        - method
        - url
        - params
        - search_params
        - secrets
    ApiBrainDefinitionEntity-Output:
      title: ApiBrainDefinitionEntity
      properties: &ref_25
        brain_id:
          title: Brain Id
          type: string
          format: uuid
        method:
          $ref: '#/components/schemas/ApiBrainAllowedMethods'
        url:
          title: Url
          type: string
        params:
          $ref: '#/components/schemas/ApiBrainDefinitionSchema'
        search_params:
          $ref: '#/components/schemas/ApiBrainDefinitionSchema'
        secrets:
          title: Secrets
          items:
            $ref: '#/components/schemas/ApiBrainDefinitionSecret'
          type: array
        raw:
          title: Raw
          type: boolean
          default: false
        jq_instructions:
          title: Jq Instructions
          type: string
          nullable: true
      type: object
      required: &ref_26
        - brain_id
        - method
        - url
        - params
        - search_params
        - secrets
    ApiBrainDefinitionSchema:
      title: ApiBrainDefinitionSchema
      properties: &ref_11
        properties:
          title: Properties
          items:
            $ref: '#/components/schemas/ApiBrainDefinitionSchemaProperty'
          type: array
          default: []
        required:
          title: Required
          items:
            type: string
          type: array
          default: []
      type: object
    ApiBrainDefinitionSchemaProperty:
      title: ApiBrainDefinitionSchemaProperty
      properties:
        description:
          title: Description
          type: string
        type:
          title: Type
          type: string
        enum:
          title: Enum
          items: {}
          type: array
          nullable: true
        name:
          title: Name
          type: string
      type: object
      required:
        - type
        - description
        - name
    ApiBrainDefinitionSecret:
      title: ApiBrainDefinitionSecret
      properties:
        description:
          title: Description
          type: string
          nullable: true
        name:
          title: Name
          type: string
        type:
          title: Type
          type: string
      type: object
      required:
        - name
        - type
    ApiKey:
      title: ApiKey
      properties:
        api_key:
          title: Api Key
          type: string
        key_id:
          title: Key Id
          type: string
        days:
          title: Days
          type: integer
        only_chat:
          title: Only Chat
          type: boolean
        name:
          title: Name
          type: string
        creation_time:
          title: Creation Time
          type: string
        is_active:
          title: Is Active
          type: boolean
      type: object
      required:
        - api_key
        - key_id
        - days
        - only_chat
        - name
        - creation_time
        - is_active
    ApiKeyInfo:
      title: ApiKeyInfo
      properties:
        key_id:
          title: Key Id
          type: string
        creation_time:
          title: Creation Time
          type: string
      type: object
      required:
        - key_id
        - creation_time
    AssistantOutput:
      title: AssistantOutput
      properties:
        tags:
          title: Tags
          default: []
          items:
            type: string
          type: array
          nullable: true
        description:
          title: Description
          type: string
        name:
          title: Name
          type: string
        input_description:
          title: Input Description
          type: string
        output_description:
          title: Output Description
          type: string
        inputs:
          $ref: '#/components/schemas/Inputs-Output'
        outputs:
          $ref: '#/components/schemas/Outputs-Output'
        icon_url:
          title: Icon Url
          type: string
          nullable: true
      type: object
      required:
        - name
        - description
        - input_description
        - output_description
        - inputs
        - outputs
    Body_process_assistant_assistant_process_post:
      title: Body_process_assistant_assistant_process_post
      properties:
        input:
          $ref: '#/components/schemas/InputAssistant'
        files:
          title: Files
          items:
            type: string
            format: binary
          type: array
      type: object
      required:
        - input
    Body_upload_file_upload_post:
      title: Body_upload_file_upload_post
      properties:
        uploadFile:
          title: Uploadfile
          type: string
          format: binary
      type: object
      required:
        - uploadFile
    BrainInput:
      title: BrainInput
      properties: &ref_19
        activated:
          title: Activated
          type: boolean
        value:
          title: Value
          type: string
          format: uuid
      type: object
      required: &ref_20
        - activated
        - value
    BrainIntegrationSettings:
      title: BrainIntegrationSettings
      properties: &ref_15
        integration_id:
          title: Integration Id
          type: string
        settings:
          title: Settings
          type: object
      type: object
      required: &ref_16
        - integration_id
        - settings
    BrainIntegrationUpdateSettings:
      title: BrainIntegrationUpdateSettings
      properties: &ref_9
        settings:
          title: Settings
          type: object
      type: object
      required: &ref_10
        - settings
    BrainQuestionRequest:
      title: BrainQuestionRequest
      properties:
        question:
          title: Question
          type: string
      type: object
      required:
        - question
    BrainSubscriptionUpdatableProperties:
      title: BrainSubscriptionUpdatableProperties
      properties:
        rights:
          title: Rights
          type: string
          nullable: true
        email:
          title: Email
          type: string
      type: object
      required:
        - email
    BrainType:
      title: BrainType
      type: string
      enum:
        - doc
        - api
        - composite
        - integration
    BrainUpdatableProperties:
      title: BrainUpdatableProperties
      properties:
        description:
          title: Description
          type: string
          nullable: true
        name:
          title: Name
          type: string
          nullable: true
        temperature:
          title: Temperature
          type: number
          nullable: true
        model:
          title: Model
          type: string
          nullable: true
        max_tokens:
          title: Max Tokens
          type: integer
          nullable: true
        status:
          title: Status
          type: string
          nullable: true
        prompt_id:
          title: Prompt Id
          type: string
          format: uuid
          nullable: true
        brain_definition:
          $ref: '#/components/schemas/ApiBrainDefinitionEntity-InputNullable'
        connected_brains_ids:
          title: Connected Brains Ids
          default: []
          items:
            type: string
            format: uuid
          type: array
          nullable: true
        integration:
          $ref: '#/components/schemas/BrainIntegrationUpdateSettingsNullable'
      type: object
    Chat:
      title: Chat
      properties: &ref_0
        chat_id:
          title: Chat Id
          type: string
        user_id:
          title: User Id
          type: string
        creation_time:
          title: Creation Time
          type: string
        chat_name:
          title: Chat Name
          type: string
      type: object
      required: &ref_1
        - chat_id
        - user_id
        - creation_time
        - chat_name
    ChatItem:
      title: ChatItem
      properties:
        item_type:
          $ref: '#/components/schemas/ChatItemType'
        body:
          title: Body
          anyOf:
            - $ref: '#/components/schemas/GetChatHistoryOutput'
            - $ref: '#/components/schemas/Notification'
      type: object
      required:
        - item_type
        - body
    ChatItemType:
      title: ChatItemType
      type: string
      enum:
        - MESSAGE
        - NOTIFICATION
    ChatMessageProperties:
      title: ChatMessageProperties
      properties:
        thumbs:
          title: Thumbs
          type: boolean
          nullable: true
      type: object
      required:
        - thumbs
    ChatQuestion:
      title: ChatQuestion
      properties:
        question:
          title: Question
          type: string
        model:
          title: Model
          type: string
          nullable: true
        temperature:
          title: Temperature
          type: number
          nullable: true
        max_tokens:
          title: Max Tokens
          type: integer
          nullable: true
        brain_id:
          title: Brain Id
          type: string
          format: uuid
          nullable: true
        prompt_id:
          title: Prompt Id
          type: string
          format: uuid
          nullable: true
      type: object
      required:
        - question
    ChatUpdatableProperties:
      title: ChatUpdatableProperties
      properties:
        chat_name:
          title: Chat Name
          type: string
          nullable: true
      type: object
    ContactMessage:
      title: ContactMessage
      properties:
        customer_email:
          title: Customer Email
          type: string
        content:
          title: Content
          type: string
      type: object
      required:
        - customer_email
        - content
    CrawlWebsite:
      title: CrawlWebsite
      properties:
        url:
          title: Url
          type: string
        js:
          title: Js
          type: boolean
          default: false
        depth:
          title: Depth
          type: integer
          default: 1
        max_pages:
          title: Max Pages
          type: integer
          default: 100
        max_time:
          title: Max Time
          type: integer
          default: 60
      type: object
      required:
        - url
    CreateApiBrainDefinition:
      title: CreateApiBrainDefinition
      properties: &ref_12
        method:
          $ref: '#/components/schemas/ApiBrainAllowedMethods'
        url:
          title: Url
          type: string
        params:
          $ref: '#/components/schemas/ApiBrainDefinitionSchemaNullable'
        search_params:
          $ref: '#/components/schemas/ApiBrainDefinitionSchema'
        secrets:
          title: Secrets
          default: []
          items:
            $ref: '#/components/schemas/ApiBrainDefinitionSecret'
          type: array
          nullable: true
        raw:
          title: Raw
          default: false
          type: boolean
          nullable: true
        jq_instructions:
          title: Jq Instructions
          type: string
          nullable: true
      type: object
      required: &ref_13
        - method
        - url
      x-konfig-properties: &ref_14
        search_params:
          default:
            properties: []
            required: []
    CreateBrainProperties:
      title: CreateBrainProperties
      properties:
        description:
          title: Description
          type: string
          default: This is a description
        name:
          title: Name
          default: Default brain
          type: string
          nullable: true
        status:
          title: Status
          default: private
          type: string
          nullable: true
        model:
          title: Model
          type: string
          nullable: true
        temperature:
          title: Temperature
          default: 0
          type: number
          nullable: true
        max_tokens:
          title: Max Tokens
          default: 2000
          type: integer
          nullable: true
        prompt_id:
          title: Prompt Id
          type: string
          format: uuid
          nullable: true
        brain_type:
          $ref: '#/components/schemas/BrainTypeNullable'
        brain_definition:
          $ref: '#/components/schemas/CreateApiBrainDefinitionNullable'
        brain_secrets_values:
          title: Brain Secrets Values
          default: {}
          type: object
          nullable: true
        connected_brains_ids:
          title: Connected Brains Ids
          default: []
          items:
            type: string
            format: uuid
          type: array
          nullable: true
        integration:
          $ref: '#/components/schemas/BrainIntegrationSettingsNullable'
      type: object
    CreateChatProperties:
      title: CreateChatProperties
      properties:
        name:
          title: Name
          type: string
      type: object
      required:
        - name
    CreatePromptProperties:
      title: CreatePromptProperties
      description: Properties that can be received on prompt creation
      properties:
        title:
          title: Title
          type: string
        content:
          title: Content
          type: string
        status:
          $ref: '#/components/schemas/PromptStatusEnum'
      type: object
      required:
        - title
        - content
      x-konfig-properties:
        status:
          default: private
    EmailInput:
      title: EmailInput
      properties: &ref_17
        activated:
          title: Activated
          type: boolean
      type: object
      required: &ref_18
        - activated
    FileInput:
      title: FileInput
      properties:
        key:
          title: Key
          type: string
        value:
          title: Value
          type: string
      type: object
      required:
        - key
        - value
    GetChatHistoryOutput:
      title: GetChatHistoryOutput
      properties:
        chat_id:
          title: Chat Id
          type: string
          format: uuid
        message_id:
          title: Message Id
          anyOf:
            - type: string
              format: uuid
            - type: string
          nullable: true
        user_message:
          title: User Message
          type: string
        assistant:
          title: Assistant
          type: string
        message_time:
          title: Message Time
          type: string
          nullable: true
        prompt_title:
          title: Prompt Title
          type: string
          nullable: true
        brain_name:
          title: Brain Name
          type: string
          nullable: true
        brain_id:
          title: Brain Id
          type: string
          nullable: true
        metadata:
          title: Metadata
          type: object
          nullable: true
        thumbs:
          title: Thumbs
          type: boolean
          nullable: true
      type: object
      required:
        - chat_id
        - message_id
        - user_message
        - assistant
    HTTPValidationError:
      title: HTTPValidationError
      properties:
        detail:
          title: Detail
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
      type: object
    InputAssistant:
      title: InputAssistant
      properties:
        name:
          title: Name
          type: string
        inputs:
          $ref: '#/components/schemas/Inputs-Input'
        outputs:
          $ref: '#/components/schemas/Outputs-Input'
      type: object
      required:
        - name
        - inputs
        - outputs
    InputFile:
      title: InputFile
      properties:
        description:
          title: Description
          type: string
        key:
          title: Key
          type: string
        allowed_extensions:
          title: Allowed Extensions
          default:
            - pdf
          items:
            type: string
          type: array
          nullable: true
        required:
          title: Required
          default: true
          type: boolean
          nullable: true
      type: object
      required:
        - key
        - description
    InputText:
      title: InputText
      properties:
        description:
          title: Description
          type: string
        key:
          title: Key
          type: string
        required:
          title: Required
          default: true
          type: boolean
          nullable: true
      type: object
      required:
        - key
        - description
    InputUrl:
      title: InputUrl
      properties:
        description:
          title: Description
          type: string
        key:
          title: Key
          type: string
        required:
          title: Required
          default: true
          type: boolean
          nullable: true
      type: object
      required:
        - key
        - description
    Inputs-Input:
      title: Inputs
      properties:
        files:
          title: Files
          items:
            $ref: '#/components/schemas/FileInput'
          type: array
          nullable: true
        urls:
          title: Urls
          items:
            $ref: '#/components/schemas/UrlInput'
          type: array
          nullable: true
        texts:
          title: Texts
          items:
            $ref: '#/components/schemas/TextInput'
          type: array
          nullable: true
      type: object
    Inputs-Output:
      title: Inputs
      properties:
        files:
          title: Files
          items:
            $ref: '#/components/schemas/InputFile'
          type: array
          nullable: true
        urls:
          title: Urls
          items:
            $ref: '#/components/schemas/InputUrl'
          type: array
          nullable: true
        texts:
          title: Texts
          items:
            $ref: '#/components/schemas/InputText'
          type: array
          nullable: true
      type: object
    IntegrationBrainTag:
      title: IntegrationBrainTag
      type: string
      enum:
        - new
        - recommended
        - most_popular
        - premium
        - coming_soon
        - community
        - deprecated
    IntegrationDescriptionEntity:
      title: IntegrationDescriptionEntity
      properties:
        tags:
          title: Tags
          default: []
          items:
            $ref: '#/components/schemas/IntegrationBrainTag'
          type: array
          nullable: true
        description:
          title: Description
          type: string
        id:
          title: Id
          type: string
          format: uuid
        integration_name:
          title: Integration Name
          type: string
        integration_logo_url:
          title: Integration Logo Url
          type: string
          nullable: true
        connection_settings:
          title: Connection Settings
          type: object
          nullable: true
        integration_type:
          $ref: '#/components/schemas/IntegrationType'
        information:
          title: Information
          type: string
          nullable: true
        max_files:
          title: Max Files
          type: integer
        allow_model_change:
          title: Allow Model Change
          type: boolean
        integration_display_name:
          title: Integration Display Name
          type: string
        onboarding_brain:
          title: Onboarding Brain
          type: boolean
      type: object
      required:
        - id
        - integration_name
        - integration_type
        - description
        - max_files
        - allow_model_change
        - integration_display_name
        - onboarding_brain
    IntegrationType:
      title: IntegrationType
      type: string
      enum:
        - custom
        - sync
        - doc
    Notification:
      title: Notification
      properties:
        id:
          title: Id
          type: string
          format: uuid
        datetime:
          title: Datetime
          type: string
        chat_id:
          title: Chat Id
          type: string
          format: uuid
          nullable: true
        message:
          title: Message
          type: string
          nullable: true
        action:
          title: Action
          type: string
        status:
          $ref: '#/components/schemas/NotificationsStatusEnum'
      type: object
      required:
        - id
        - datetime
        - action
        - status
    NotificationsStatusEnum:
      title: NotificationsStatusEnum
      type: string
      enum:
        - Pending
        - Done
    OnboardingStates:
      title: OnboardingStates
      description: Response when getting onboarding
      properties: &ref_2
        onboarding_a:
          title: Onboarding A
          type: boolean
        onboarding_b1:
          title: Onboarding B1
          type: boolean
        onboarding_b2:
          title: Onboarding B2
          type: boolean
        onboarding_b3:
          title: Onboarding B3
          type: boolean
      type: object
      required: &ref_3
        - onboarding_a
        - onboarding_b1
        - onboarding_b2
        - onboarding_b3
    OnboardingUpdatableProperties:
      title: OnboardingUpdatableProperties
      description: Properties that can be received on onboarding update
      properties:
        onboarding_a:
          title: Onboarding A
          type: boolean
          nullable: true
        onboarding_b1:
          title: Onboarding B1
          type: boolean
          nullable: true
        onboarding_b2:
          title: Onboarding B2
          type: boolean
          nullable: true
        onboarding_b3:
          title: Onboarding B3
          type: boolean
          nullable: true
      type: object
    OutputBrain:
      title: OutputBrain
      properties: &ref_23
        description:
          title: Description
          type: string
        required:
          title: Required
          default: true
          type: boolean
          nullable: true
        type:
          title: Type
          type: string
      type: object
      required: &ref_24
        - description
        - type
    OutputEmail:
      title: OutputEmail
      properties: &ref_21
        description:
          title: Description
          type: string
        required:
          title: Required
          default: true
          type: boolean
          nullable: true
        type:
          title: Type
          type: string
      type: object
      required: &ref_22
        - description
        - type
    Outputs-Input:
      title: Outputs
      properties:
        email:
          $ref: '#/components/schemas/EmailInputNullable'
        brain:
          $ref: '#/components/schemas/BrainInputNullable'
      type: object
    Outputs-Output:
      title: Outputs
      properties:
        email:
          $ref: '#/components/schemas/OutputEmailNullable'
        brain:
          $ref: '#/components/schemas/OutputBrainNullable'
      type: object
    Prompt:
      title: Prompt
      properties: &ref_4
        title:
          title: Title
          type: string
        content:
          title: Content
          type: string
        status:
          $ref: '#/components/schemas/PromptStatusEnum'
        id:
          title: Id
          type: string
          format: uuid
      type: object
      required: &ref_5
        - title
        - content
        - id
      x-konfig-properties: &ref_6
        status:
          default: private
    PromptStatusEnum:
      title: PromptStatusEnum
      type: string
      enum:
        - private
        - public
    PromptUpdatableProperties:
      title: PromptUpdatableProperties
      description: Properties that can be received on prompt update
      properties:
        title:
          title: Title
          type: string
          nullable: true
        content:
          title: Content
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/PromptStatusEnumNullable'
      type: object
    PublicBrain:
      title: PublicBrain
      properties:
        description:
          title: Description
          type: string
          nullable: true
        id:
          title: Id
          type: string
          format: uuid
        name:
          title: Name
          type: string
        number_of_subscribers:
          title: Number Of Subscribers
          type: integer
          default: 0
        last_update:
          title: Last Update
          type: string
        brain_type:
          $ref: '#/components/schemas/BrainType'
        brain_definition:
          $ref: '#/components/schemas/ApiBrainDefinitionEntity-OutputNullable'
      type: object
      required:
        - id
        - name
        - last_update
        - brain_type
    QuestionAndAnswer:
      title: QuestionAndAnswer
      properties:
        question:
          title: Question
          type: string
        answer:
          title: Answer
          type: string
      type: object
      required:
        - question
        - answer
    Range:
      title: Range
      type: integer
      enum:
        - 7
        - 30
        - 90
    TextInput:
      title: TextInput
      properties:
        key:
          title: Key
          type: string
        value:
          title: Value
          type: string
      type: object
      required:
        - key
        - value
    UrlInput:
      title: UrlInput
      properties:
        key:
          title: Key
          type: string
        value:
          title: Value
          type: string
      type: object
      required:
        - key
        - value
    UserIdentity:
      title: UserIdentity
      properties:
        id:
          title: Id
          type: string
          format: uuid
        email:
          title: Email
          type: string
          nullable: true
        username:
          title: Username
          type: string
          nullable: true
        company:
          title: Company
          type: string
          nullable: true
        onboarded:
          title: Onboarded
          type: boolean
          nullable: true
        company_size:
          title: Company Size
          type: string
          nullable: true
        usage_purpose:
          title: Usage Purpose
          type: string
          nullable: true
      type: object
      required:
        - id
    UserUpdatableProperties:
      title: UserUpdatableProperties
      properties:
        username:
          title: Username
          type: string
          nullable: true
        company:
          title: Company
          type: string
          nullable: true
        onboarded:
          title: Onboarded
          type: boolean
          nullable: true
        company_size:
          title: Company Size
          type: string
          nullable: true
        usage_purpose:
          title: Usage Purpose
          type: string
          nullable: true
      type: object
    ValidationError:
      title: ValidationError
      properties:
        loc:
          title: Location
          items:
            anyOf:
              - type: string
              - type: integer
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      type: object
      required:
        - loc
        - msg
        - type
    ChatNullable:
      title: >-
        Response Add Question And Answer Handler Chat  Chat Id  Question Answer
        Post
      properties: *ref_0
      type: object
      required: *ref_1
      nullable: true
    OnboardingStatesNullable:
      title: Response Get User Onboarding Handler Onboarding Get
      description: Response when getting onboarding
      properties: *ref_2
      type: object
      required: *ref_3
      nullable: true
    PromptNullable:
      title: Response Update Prompt Prompts  Prompt Id  Put
      properties: *ref_4
      type: object
      required: *ref_5
      x-konfig-properties: *ref_6
      nullable: true
    ApiBrainDefinitionEntity-InputNullable:
      title: ApiBrainDefinitionEntity
      properties: *ref_7
      type: object
      required: *ref_8
      nullable: true
    BrainIntegrationUpdateSettingsNullable:
      title: BrainIntegrationUpdateSettings
      properties: *ref_9
      type: object
      required: *ref_10
      nullable: true
    ApiBrainDefinitionSchemaNullable:
      title: ApiBrainDefinitionSchema
      properties: *ref_11
      type: object
      default:
        properties: []
        required: []
      nullable: true
    BrainTypeNullable:
      title: BrainType
      type: string
      enum:
        - doc
        - api
        - composite
        - integration
      default: doc
      nullable: true
    CreateApiBrainDefinitionNullable:
      title: CreateApiBrainDefinition
      properties: *ref_12
      type: object
      required: *ref_13
      x-konfig-properties: *ref_14
      nullable: true
    BrainIntegrationSettingsNullable:
      title: BrainIntegrationSettings
      properties: *ref_15
      type: object
      required: *ref_16
      nullable: true
    EmailInputNullable:
      title: EmailInput
      properties: *ref_17
      type: object
      required: *ref_18
      nullable: true
    BrainInputNullable:
      title: BrainInput
      properties: *ref_19
      type: object
      required: *ref_20
      nullable: true
    OutputEmailNullable:
      title: OutputEmail
      properties: *ref_21
      type: object
      required: *ref_22
      nullable: true
    OutputBrainNullable:
      title: OutputBrain
      properties: *ref_23
      type: object
      required: *ref_24
      nullable: true
    PromptStatusEnumNullable:
      title: PromptStatusEnum
      type: string
      enum:
        - private
        - public
      nullable: true
    ApiBrainDefinitionEntity-OutputNullable:
      title: ApiBrainDefinitionEntity
      properties: *ref_25
      type: object
      required: *ref_26
      nullable: true
    BrainUpdateSecretsValuesRequest:
      title: Secrets
      type: object
      additionalProperties:
        type: string
    BrainSubscriptionInviteUsersToBrainRequest:
      title: Users
      type: array
      items:
        type: object
    SubscriptionBrainHandlerRequest:
      title: Secrets
      type: object
      default: {}
    BrainGetAllPublicResponse:
      title: Response Retrieve Public Brains Brains Public Get
      items:
        $ref: '#/components/schemas/PublicBrain'
      type: array
    BrainUpdateSecretsValuesResponse:
      type: object
      properties: {}
      example: {}
    BrainGetQuestionContextResponse:
      type: object
      properties: {}
      example: {}
    HealthCheckStatusResponse:
      type: object
      properties: {}
      example: {}
    ChatGetAllChatsResponse:
      type: object
      properties: {}
      example: {}
    ChatCreateHandlerResponse:
      type: object
      properties: {}
      example: {}
    ChatDeleteChatByIdResponse:
      type: object
      properties: {}
      example: {}
    ChatUpdateMetadataHandlerResponse:
      type: object
      properties: {}
      example: {}
    ChatUpdateMessageResponse:
      type: object
      properties: {}
      example: {}
    ChatHandleQuestionResponse:
      type: object
      properties: {}
      example: {}
    ChatCreateStreamQuestionHandlerResponse:
      type: object
      properties: {}
      example: {}
    ChatGetHistoryResponse:
      title: Response Get Chat History Handler Chat  Chat Id  History Get
      type: array
      items:
        $ref: '#/components/schemas/ChatItem'
    HealthCheckStatus200Response:
      type: object
      properties: {}
      example: {}
    CrawlWebsiteDataProcessorResponse:
      type: object
      properties: {}
      example: {}
    AssistantGetAllKnowledgeResponse:
      title: Response List Assistants Assistants Get
      items:
        $ref: '#/components/schemas/AssistantOutput'
      type: array
    AssistantProcessDataResponse:
      type: object
      properties: {}
      example: {}
    RootStatusCheckResponse:
      type: object
      properties: {}
      example: {}
    AnalyticsGetUserBrainUsagesResponse:
      type: object
      properties: {}
      example: {}
    UploadFilePostResponse:
      type: object
      properties: {}
      example: {}
    UserGetUserInformationResponse:
      type: object
      properties: {}
      example: {}
    ApiKeyDeleteKeyResponse:
      type: object
      properties: {}
      example: {}
    ApiKeyGetListResponse:
      title: Response Get Api Keys Api Keys Get
      items:
        $ref: '#/components/schemas/ApiKeyInfo'
      type: array
    BrainRemoveUserSubscriptionResponse:
      type: object
      properties: {}
      example: {}
    BrainSubscriptionGetUserInvitationResponse:
      type: object
      properties: {}
      example: {}
    BrainSubscriptionInviteUsersToBrainResponse:
      type: object
      properties: {}
      example: {}
    BrainUpdateSubscriptionResponse:
      type: object
      properties: {}
      example: {}
    BrainGetUsersResponse:
      type: object
      properties: {}
      example: {}
    BrainAcceptInvitationResponse:
      type: object
      properties: {}
      example: {}
    BrainDeclineInvitationResponse:
      type: object
      properties: {}
      example: {}
    SubscriptionBrainHandlerResponse:
      type: object
      properties: {}
      example: {}
    SubscriptionUnregisterHandlerResponse:
      type: object
      properties: {}
      example: {}
    PromptGetAllPublicPromptsResponse:
      title: Response Get Prompts Prompts Get
      items:
        $ref: '#/components/schemas/Prompt'
      type: array
    NotificationGetByChatIdResponse:
      type: object
      properties: {}
      example: {}
    KnowledgeGetAllKnowledgeResponse:
      type: object
      properties: {}
      example: {}
    KnowledgeDeleteSpecificBrainKnowledgeResponse:
      type: object
      properties: {}
      example: {}
    KnowledgeGenerateSignedUrlResponse:
      type: object
      properties: {}
      example: {}
    ContactCreateNewContactResponse:
      type: object
      properties: {}
      example: {}
    BrainGetDescriptionResponse:
      title: Response Get Integration Brain Description Brains Integrations  Get
      items:
        $ref: '#/components/schemas/IntegrationDescriptionEntity'
      type: array
    BrainGetAllForUserResponse:
      type: object
      properties: {}
      example: {}
    BrainCreateNewBrainResponse:
      type: object
      properties: {}
      example: {}
    BrainGetByIdResponse:
      type: object
      properties: {}
      example: {}
    BrainUpdateConfigurationResponse:
      type: object
      properties: {}
      example: {}
  securitySchemes:
    AuthBearer:
      type: http
      scheme: bearer
