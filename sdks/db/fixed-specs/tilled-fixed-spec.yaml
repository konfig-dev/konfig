openapi: 3.0.0
info:
  title: Tilled API
  description: >
    The Tilled API is organized around
    [REST](http://en.wikipedia.org/wiki/Representational_State_Transfer).

    Our API has predictable resource-oriented URLs, accepts form-encoded request
    bodies, returns JSON-encoded responses, and uses standard HTTP response
    codes, authentication, and verbs.


    You can use the Tilled API in test mode, which does not affect your live
    data or interact with the banking networks.

    The API key you use to authenticate the request determines whether the
    request is live mode or test mode.

    Before your account is activated you will only be able to interact with test
    mode.


    Authentication uses a standard web token schema.


    **Notice**: The Tilled API treats HTTP status `401` to mean
    `Unauthenticated`

    and not the HTTP standard name of `Unauthorized`.

    Requests made for materials the requester does not have permission to
    access, the API will respond with `403: Forbidden`.


    # Authentication


    The tilled API uses API keys to authenticate requests. You can view and
    manage your API keys in the

    Tilled Dashboard.


    Test mode secret keys have the prefix sk*test* and live mode secret keys
    have the prefix sk*live*.

    Alternatively, you can use restricted API keys for granular permissions.


    Your API keys carry many privileges, so be sure to keep them secure! Do not
    share your secret API keys

    in publicly accessible areas such as GitHub, client-side code, and so forth.


    Authentication to the API is performed via custom HTTP Header
    `tilled-api-key`. Provide your API key as the value.


    All API requests must be made over HTTPS. Calls made over plain HTTP will
    fail. API requests

    without authentication will also fail.


    <!-- ReDoc-Inject: <security-definitions> -->


    # Errors


    Tilled uses conventional HTTP response codes to indicate the success or
    failure of an API request.

    In general: Codes in the `2xx` range indicate success. Codes in the `4xx`
    range indicate an error

    that failed given the information provided (e.g., a required parameter was
    omitted, a charge failed,

    etc.). Codes in the `5xx` range indicate an error with Tilled's servers
    (these are rare).


    Some `4xx` errors that could be handled programmatically (e.g., a card is
    declined)

    include an error code that briefly explains the error reported.


    # Request IDs


    Each API request has an associated request identifier. You can find this
    value in the response headers, under `request-id`. If you need to contact us
    about a specific request, providing the request identifier will ensure the
    fastest possible resolution.


    # Metadata


    Updatable Tilled objects—including [Account](https://api.tilled.com),
    [Customer](https://api.tilled.com), [PaymentIntent](https://api.tilled.com),
    [Refund](https://api.tilled.com), and
    [Subscription](https://api.tilled.com)—have a `metadata` parameter. You can
    use this parameter to attach key-value data to these Tilled objects.


    You can specify up to 50 keys, with key names up to 40 characters long and
    values up to 500 characters long.


    Metadata is useful for storing additional, structured information on an
    object. As an example, you could store your user's full name and
    corresponding unique identifier from your system on a Tilled
    [Customer](https://api.tilled.com) object. Metadata is not used by
    Tilled—for example, not used to authorize or decline a charge—and won't be
    seen by your users unless you choose to show it to them. Do not store any
    sensitive information (bank account numbers, card details, etc.) as
    metadata.


    # Apple Pay


    Tilled supports Apple Pay through the Tilled.js
    [`PaymentRequest`](https://docs.tilled.com/tilledjs/#paymentrequest-ie-apple-pay)
    object.


    In order to start accepting payments with Apple Pay, you will first need to
    validate the domains you plan to host the Apple Pay Button on by:


    - Hosting Tilled's Apple Domain Verification File on the domain

    - Use the Tilled API to register the domain


    ## Domain Verification File


    Domains hosting an Apple Pay Button must be secured with HTTPS (TLS 1.2 or
    later) and have a valid SSL certificate.


    Before [registering your domain](https://api.tilled.com) with the Tilled
    API, you need to host Tilled's [Apple Domain Verification
    File](https://api.tilled.com/apple-developer-merchantid-domain-association)
    on the domain at the path:
    `/.well-known/apple-developer-merchantid-domain-association`


    # Tilled.js


    Tilled.js is the easiest way to get started collecting payments. It allows
    you to embed a payments form in your application and stores credit card
    information securely on remote servers instead of passing through your
    network. View the documentation [here](https://docs.tilled.com/tilledjs/).


    # Webhooks


    ## Receive event notifications with webhooks


    Listen for events on your Tilled account so your integration can
    automatically trigger reactions.


    Tilled uses webhooks to notify your application when an event happens in
    your account. Webhooks are particularly useful for asynchronous events like
    when a customer’s bank confirms a payment, a customer disputes a charge, or
    a recurring payment succeeds.


    Begin using webhooks with your Tilled integration in just a couple steps:


    - Create a webhook endpoint on your server.

    - Register the endpoint with Tilled to go live.


    Not all Tilled integrations require webhooks. Keep reading to learn more
    about what webhooks are and when you should use them.


    ### What are webhooks


    _Webhooks_ refers to a combination of elements that collectively create a
    notification and reaction system within a larger integration.


    Metaphorically, webhooks are like a phone number that Tilled calls to notify
    you of activity in your Tilled account. The activity could be the creation
    of a new customer or the payout of funds to your bank account. The webhook
    endpoint is the person answering that call who takes actions based upon the
    specific information it receives.


    Non-metaphorically, the webhook endpoint is just more code on your server,
    which could be written in Ruby, PHP, Node.js, or whatever. The webhook
    endpoint has an associated URL (e.g., https://example.com/webhooks). The
    Tilled notifications are Event objects. This Event object contains all the
    relevant information about what just happened, including the type of event
    and the data associated with that event. The webhook endpoint uses the event
    details to take any required actions, such as indicating that an order
    should be fulfilled.


    ### When to use webhooks


    Many events that occur within a Tilled account have synchronous
    results–immediate and direct–to an executed request. For example, a
    successful request to create a customer immediately returns a Customer
    object. Such requests don’t require webhooks, as the key information is
    already available.


    Other events that occur within a Tilled account are asynchronous: happening
    at a later time and not directly in response to your code’s execution. Most
    commonly these involve:


    - The [Payment Intents API](https://api.tilled.com)


    With these and similar APIs, Tilled needs to notify your integration about
    changes to the status of an object so your integration can take subsequent
    steps.


    The specific actions your webhook endpoint may take differs based upon the
    event. Some examples include:


    - Updating a customer’s membership record in your database when a
    subscription payment succeeds

    - Logging an accounting entry when a transfer is paid

    - Indicating that an order can be fulfilled (i.e., boxed and shipped)


    ## Verifying signatures manually


    The `tilled-signature` header included in each signed event contains a
    timestamp and one or more signatures. The timestamp is prefixed by `t=`, and
    each signature is prefixed by a `scheme`. Schemes start with `v`, followed
    by an integer. Currently, the only valid live signature scheme is `v1`.


    ```

    tilled-signature:t=1614049713663,v1=8981f5902896f479fa9079eec71fca01e9a065c5b59a96b221544023ce994b02

    ```


    Tilled generates signatures using a hash-based message authentication code
    ([HMAC](https://en.wikipedia.org/wiki/Hash-based_message_authentication_code))
    with [SHA-256](https://en.wikipedia.org/wiki/SHA-2). You should ignore all
    schemes that are not `v1`.


    You can verify the webhook event signature by following these steps.


    ### Step 1: Extract the timestamp and signatures from the header


    Split the header, using the `,` character as the separator, to get a list of
    elements. Then split each element, using the `=` character as the separator,
    to get a prefix and value pair.


    The value for the prefix `t` corresponds to the timestamp, and `v1`
    corresponds to the signature (or signatures). You can discard all other
    elements.


    ### Step 2: Prepare the signed_payload string


    The `signed_payload` string is created by concatenating:


    - The timestamp (as a string)

    - The character `.`

    - The actual JSON payload (i.e., the request body)


    ### Step 3: Determine the expected signature


    Compute an HMAC with the SHA256 hash function. Use the endpoint’s signing
    secret as the key, and use the `signed_payload` string as the message.


    ### Step 4: Compare the signatures


    Compare the signature (or signatures) in the header to the expected
    signature. For an equality match, compute the difference between the current
    timestamp and the received timestamp, then decide if the difference is
    within your tolerance.


    To protect against timing attacks, use a constant-time string comparison to
    compare the expected signature to each of the received signatures.
  version: '1.0'
  contact:
    name: Tilled API Support
    url: https://www.tilled.com/contact-us/
    email: integrations@tilled.com
  x-logo:
    url: https://docs.tilled.com/images/api_logo.png
    backgroundColor: '#FFFFFF'
    altText: Tilled logo
  x-konfig-ignore:
    object-with-no-properties: true
servers:
  - description: Production
    url: https://api.tilled.com
  - description: Sandbox
    url: https://sandbox-api.tilled.com
tags:
  - description: >-
      Users can log into the Tilled Dashboard and authenticate for various
      requests.
    name: Users
  - description: >-
      An Account can represent a merchant or partner. You can retrieve and
      manage Account properties such as email address.
    name: Accounts
  - description: Subscriptions allow you to charge a customer on a recurring basis.
    name: Subscriptions
  - description: >-
      A Payment Intent is initiated server side to begin the transaction
      process. The Payment Intent should be created as early as possible in the
      transaction process. It can be updated as needed, for example when a
      Customer adds a new item to their basket. Payment Intents can be
      associated with multiple Payment Methods or Charges
    name: PaymentIntents
  - description: >-
      Payment Methods are associated with a Customer and used to satisfy Payment
      Intents.
    name: PaymentMethods
  - description: >-
      A Customer belongs to an Account and represents the person being charged.
      You can add, retrieve or update Customer data such as Payment Methods.
    name: Customers
  - description: >-
      Files can be uploaded to for managing Logos and Icons for branding
      purposes.
    name: Files
  - description: >-
      You can configure webhook endpoints via the API to be notified about
      events that happen in your Tilled account or connected accounts. Most
      users configure webhooks from the dashboard, which provides a user
      interface for registering and testing your webhook endpoints.
    name: WebhookEndpoints
  - description: >-
      You access the Tilled API using *API Keys* that represent the required
      credentials necessary to authenticate. API Keys can be provisioned and
      revoked through the API or the dashboard.
    name: API Keys
  - description: >-
      A Checkout Session represents your customer's session as they pay for
      one-time purchases. We recommend creating a new Session each time your
      customer attempts to pay. Once a payment is successful, the Checkout
      Session will contain a reference to the Customer and the successful
      Payment Intent.
    name: Checkout Sessions
  - description: >-
      Whenever a new document is needed for an account, it will be generated
      with a status of `requested`. This action triggers the creation of an
      `account.updated` event, which you can receive via
      [Webhook](https://api.tilled.com). The [Account](https://api.tilled.com)
      object includes an array of `document_requests`, with a status of either
      `requested` (requires action from the account) or `submitted` (requires
      action from Tilled).


      After a document is submitted, it undergoes review and is updated with a
      status of `verified` or `rejected`. This action removes the document from
      the `document_requests` array on the account, generating a new
      `account.updated` event. A rejected document will always have a rejection
      reason associated with it.
    name: Documents
  - description: >-
      Outbound Transfers allow a merchant to send an amount of funds directly to
      an external (customer) bank account.
    name: Outbound Transfers
  - description: >-
      A Terminal reader refers to a physical device used to process credit and
      debit cards. You can retrieve a list of terminals to reference a
      particular terminal when creating a `Payment Method`
    name: TerminalReaders
  - name: ApplePayDomains
  - description: >-
      Balance transactions represent funds moving through your Tilled Account.
      They are created for every type of transaction that comes into or flows
      out of your Tilled account balance.
    name: Balance Transactions
  - description: >-
      Disputes allow you view retrievals and chargebacks issued against your
      account.
    name: Disputes
  - description: >-
      Onboarding allows you to add new Merchant accounts under your Partner
      account.
    name: Onboarding
  - description: >-
      Refund objects allow you to refund a charge that has previously been
      created but not yet refunded. Funds will be refunded to the payment method
      that was originally charged.
    name: Refunds
  - name: ReportRuns
  - description: >-
      Events are our way of letting you know when something interesting happens
      in your account. When an interesting event occurs, we create a new *Event*
      object. For example, when a charge succeeds, we create a
      *charge.succeeded* event. Note that many API requests may cause multiple
      events to be created. As with other API resources, you can use endpoints
      to retrieve an individual event or a list of events from the API. We also
      have a separate webhooks system for sending the *Event* directly to an
      endpoint on your server. Webhooks are managed in your account settings.
    name: Events
  - description: >-
      A Payout object is created when you receive funds from Tilled. You can
      retrieve individual payouts and list all payouts. To retrieve the  Balance
      Transactions associated with a given payout for reconciliation purposes,
      pass the `payout_id` to `/balance_transactions`.
    name: Payouts
  - description: >-
      When you collect a transaction fee on top of a charge made for your user,
      a `Platform Fee` object is created in your account. You can list,
      retrieve, and refund platform fees.
    name: Platform Fees
  - name: Pricing Templates
  - description: >-
      Auth links provide access to a partner or merchant account via a link with
      authentication encoded in the url.
    name: Auth Links
  - description: >-
      A Charge is an action taken on a debit or credit card. You can place
      Charges, review them or refund them.
    name: Charges
  - description: Health allows you to verify the availability of the Tilled API.
    name: Health
  - description: >-
      `Platform Fee Refund` objects allow you to refund a platform fee that has
      previously been created by not yet refunded. Funds will be refunded to the
      Tilled account from which the fee was originally collected.
    name: Platform Fee Refunds
  - description: >-
      Product Codes represent the processing fee structure by which each
      transaction will be subject to. Example: *2.90% | $0.30 TXN | $10
      CHBK/Reversals/Retrievals | $0 Monthly*. `partner` accounts will assign
      product codes to `merchant` accounts during the merchant onboarding
      process.
    name: ProductCodes
  - description: >-
      Bank Accounts are currently used as transfer destinations (e.g. Payouts)
      on `Account` objects.
    name: Bank Accounts
paths:
  /v1/accounts:
    get:
      tags:
        - Accounts
      summary: Get an Account
      operationId: Accounts_getDetails
      security:
        - TilledApiKey: []
        - JWT: []
      description: Retrieves the details of an account.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
    patch:
      tags:
        - Accounts
      summary: Update an Account
      operationId: Accounts_updateAccount
      security:
        - TilledApiKey: []
        - JWT: []
      description: >-
        Updates an account by setting the values of the parameters passed. Any
        parameters not provided are left unchanged.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUpdateParams'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
  /v1/accounts/capabilities:
    post:
      tags:
        - Accounts
      summary: Add an Account Capability
      operationId: Accounts_addCapability
      security:
        - TilledApiKey: []
        - JWT: []
      description: >-
        Adds an account capability, account capabilities can only be managed
        prior to onboarding application submission.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCapabilityCreateParams'
      responses:
        '201':
          description: ''
  /v1/accounts/capabilities/{id}:
    delete:
      tags:
        - Accounts
      summary: Delete an Account Capability
      operationId: Accounts_removeCapability
      security:
        - TilledApiKey: []
        - JWT: []
      description: >-
        Removes an account capability, account capabilities can only be managed
        prior to onboarding application submission.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
    post:
      tags:
        - Accounts
      summary: Update an Account Capability
      operationId: Accounts_updateCapability
      security:
        - TilledApiKey: []
        - JWT: []
      description: >-
        Updates an account capability, account capabilities can only be managed
        prior to onboarding application submission.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCapabilityUpdateParams'
      responses:
        '201':
          description: ''
  /v1/accounts/connected:
    get:
      tags:
        - Accounts
      summary: List all Connected Accounts
      operationId: Accounts_listConnected
      security:
        - TilledApiKey: []
        - JWT: []
      description: >-
        Returns a list of accounts connected to your account. For merchant
        accounts, the list is empty.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - description: >-
            `metadata` key-value pairs to filter by. Only exact matches on the
            key-value pair(s) will be returned. Example:
            `?metadata[internal_customer_id]=7cb1159d-875e-47ae-a309-319fa7ff395b`.
          name: metadata
          required: false
          in: query
          style: deepObject
          explode: true
          schema:
            additionalProperties:
              type: string
            type: object
        - description: >-
            The partial search of text fields. Supports searching by
            `account.name`, `account.business_profile.legal_name`,

            `account.id`, `account.email`, `user.name`, `user.email`
          name: q
          required: false
          in: query
          schema:
            type: string
        - description: >-
            The sort parameters, value:direction. Possible values: `name`,
            `created_at`. Possible directions:  `asc`, `desc`


            For example `name:asc`.


            Default: `created_at:desc`
          name: sort
          required: false
          in: query
          schema:
            type: string
        - description: >-
            The (zero-based) offset of the first item in the collection to
            return.
          name: offset
          required: false
          in: query
          schema:
            minimum: 0
            default: 0
            type: number
        - description: >-
            The maximum number of entries to return. If the value exceeds the
            maximum, then the maximum value will be used.
          name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 100
            default: 30
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsListConnectedResponse'
    post:
      tags:
        - Accounts
      summary: Create a Connected Account
      operationId: Accounts_createConnectedAccount
      security:
        - TilledApiKey: []
        - JWT: []
      description: Creates a merchant account associated to your partner account.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountCreateParams'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
    delete:
      tags:
        - Accounts
      summary: Delete a Connected Account
      operationId: Accounts_deleteMerchantAccount
      security:
        - TilledApiKey: []
        - JWT: []
      description: Deletes a merchant account.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
        '400':
          description: ''
  /v1/api-keys:
    post:
      tags:
        - API Keys
      summary: Create an API key
      operationId: ApiKeys_createNewKey
      security:
        - TilledApiKey: []
        - JWT: []
      description: >-
        Creates a new API key. For security reasons, keys of type `secret` will
        only be returned fully *here*, when the key is first created. Your
        application should store the key in a secure location to authenticate to
        the API.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiKeyCreateParams'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKey'
    get:
      tags:
        - API Keys
      summary: List all API Keys
      operationId: ApiKeys_listAll
      security:
        - TilledApiKey: []
        - JWT: []
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - description: >-
            The (zero-based) offset of the first item in the collection to
            return.
          name: offset
          required: false
          in: query
          schema:
            minimum: 0
            default: 0
            type: number
        - description: >-
            The maximum number of entries to return. If the value exceeds the
            maximum, then the maximum value will be used.
          name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 100
            default: 30
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeysListAllResponse'
  /v1/api-keys/{id}:
    patch:
      tags:
        - API Keys
      summary: Update an API key
      operationId: ApiKeys_updateKey
      security:
        - TilledApiKey: []
        - JWT: []
      description: Updates the API key. Any parameters not provided will be left unchanged.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiKeyUpdateParams'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKey'
    delete:
      tags:
        - API Keys
      summary: Delete an API Key
      operationId: ApiKeys_permanentlyDeleteById
      security:
        - TilledApiKey: []
        - JWT: []
      description: Permanently deletes an API key. It cannot be undone.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiKeysPermanentlyDeleteByIdResponse'
  /v1/apple-pay-domains:
    post:
      tags:
        - ApplePayDomains
      summary: Create an Apple Pay Domain
      operationId: ApplePayDomains_createDomain
      security:
        - TilledApiKey: []
        - JWT: []
      description: Creates an Apple Pay Domain for verification
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplePayDomainCreateParams'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplePayDomain'
    get:
      tags:
        - ApplePayDomains
      summary: List all Apple Pay Domains
      operationId: ApplePayDomains_listAll
      security:
        - TilledApiKey: []
        - JWT: []
      description: Returns a list of your registered Apple Pay Domains
      parameters:
        - description: >-
            The (zero-based) offset of the first item in the collection to
            return.
          name: offset
          required: false
          in: query
          schema:
            minimum: 0
            default: 0
            type: number
        - description: >-
            The maximum number of entries to return. If the value exceeds the
            maximum, then the maximum value will be used.
          name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 100
            default: 30
            type: number
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplePayDomainsListAllResponse'
  /v1/apple-pay-domains/{id}:
    get:
      tags:
        - ApplePayDomains
      summary: Get an Apple Pay Domain
      operationId: ApplePayDomains_getById
      security:
        - TilledApiKey: []
        - JWT: []
      description: Retrieves the apple pay domain with the given ID.
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplePayDomain'
    delete:
      tags:
        - ApplePayDomains
      summary: Delete an Apple Pay Domain
      operationId: ApplePayDomains_deleteDomain
      security:
        - TilledApiKey: []
        - JWT: []
      description: Permanently deletes an Apple Pay Domain
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplePayDomainsDeleteDomainResponse'
  /v1/applications/{account_id}:
    get:
      tags:
        - Onboarding
      summary: Get a Merchant Application
      operationId: Onboarding_getMerchantApplication
      description: >-
        Retrieves a merchant application as long as its `status` is `created` or
        `started`. Once the application is `submitted` or `active` it is not
        accessible.
      parameters:
        - description: The id of the associated connected (i.e. merchant) account.
          name: account_id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantApplication'
        '403':
          description: ''
        '404':
          description: ''
    put:
      tags:
        - Onboarding
      summary: Update a Merchant Application
      operationId: Onboarding_updateMerchantApplication
      description: Updates a merchant application by overwriting all properties.
      parameters:
        - description: The id of the associated connected (i.e. merchant) account.
          name: account_id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantApplicationCreateParams'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantApplication'
        '403':
          description: ''
        '404':
          description: ''
  /v1/applications/{account_id}/submit:
    post:
      tags:
        - Onboarding
      summary: Submit a Merchant Application
      operationId: Onboarding_submitMerchantApplication
      description: >-
        Submits a merchant application to be processed. If any validation errors
        exist, you must correct them before re-submitting. Once successful
        submission, you cannot access the application again.
      parameters:
        - description: The id of the associated connected (i.e. merchant) account.
          name: account_id
          required: true
          in: path
          schema:
            type: string
      responses:
        '202':
          description: ''
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/OnboardingSubmitMerchantApplicationResponse
        '400':
          description: ''
        '403':
          description: ''
        '404':
          description: ''
  /v1/auth-links:
    post:
      tags:
        - Auth Links
      summary: Create an Auth Link
      operationId: AuthLinks_createLink
      security:
        - TilledApiKey: []
        - JWT: []
      description: Create an auth link for a user.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthLinkCreateParams'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthLinkDto'
  /v1/auth/forgot:
    post:
      tags:
        - Users
      summary: Forgot Password
      operationId: Users_requestPasswordReset
      description: >-
        Request a temporary link be sent to the supplied email address that will
        allow the user to reset their password.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordParams'
      responses:
        '200':
          description: ''
  /v1/auth/login:
    post:
      tags:
        - Users
      summary: Login
      operationId: Users_createJwtToken
      description: Creates a JSON Web Token with email and password.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginParams'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginDto'
        '401':
          description: ''
  /v1/auth/logout:
    post:
      tags:
        - Users
      summary: Logout
      operationId: Users_invalidateRefreshToken
      security:
        - JWT: []
      description: Invalidates the refresh token for a user.
      parameters: []
      responses:
        '200':
          description: ''
        '401':
          description: ''
  /v1/auth/refresh:
    post:
      tags:
        - Users
      summary: Refresh an Access Token
      operationId: Users_refreshAccessToken
      description: Generate a new access token with a user's refresh token.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccessTokenRefreshParams'
      responses:
        '200':
          description: ''
        '400':
          description: ''
  /v1/auth/register:
    post:
      tags:
        - Users
      summary: Register
      operationId: Users_registerUserAndPartnerAccount
      description: >-
        Creates a Tilled user and simultaneously creates a `partner` account.
        *Note: This resource should almost never be used by an existing Tilled
        customer.*
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterParams'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterDto'
        '403':
          description: ''
  /v1/auth/reset:
    post:
      tags:
        - Users
      summary: Reset Password
      operationId: Users_resetPassword
      description: >-
        Reset a user's password with the supplied `password_reset_token`. This
        will also invalidate a user's refresh token.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserResetPasswordParams'
      responses:
        '200':
          description: ''
        '400':
          description: ''
  /v1/balance-transactions:
    get:
      tags:
        - Balance Transactions
      summary: List all Balance Transactions
      operationId: BalanceTransactions_listAll
      security:
        - TilledApiKey: []
        - JWT: []
      description: >-
        Returns a list of transactions that have contributed to the Tilled
        account balance (e.g. charges, refunds, and so forth). The transactions
        are returned in sorted order, with the most recent transactions
        appearing first.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - description: Minimum `created_at` value to filter by (inclusive).
          name: created_at_gte
          required: false
          in: query
          schema:
            format: date-time
            type: string
        - description: Maximum `created_at` value to filter by (inclusive).
          name: created_at_lte
          required: false
          in: query
          schema:
            format: date-time
            type: string
        - description: Only return transaction of the given type.
          name: type
          required: false
          in: query
          schema:
            enum:
              - charge
              - charge_failure_refund
              - dispute
              - dispute_won
              - refund
              - refund_failure
              - adjustment
              - commission
              - payout
              - payout_cancel
              - payout_failure
              - fee
              - platform_fee
              - platform_fee_refund
              - outbound_transfer
              - outbound_transfer_cancel
              - outbound_transfer_failure
              - charge_fee
              - refund_fee
              - account_fee
              - payment_method_fee
              - tilled_fee
            type: string
        - description: Only returns the original transaction.
          name: source_id
          required: false
          in: query
          schema:
            type: string
        - description: >-
            Only returns transactions that were paid out on the specified payout
            ID.
          name: payout_id
          required: false
          in: query
          schema:
            type: string
        - description: >-
            The (zero-based) offset of the first item in the collection to
            return.
          name: offset
          required: false
          in: query
          schema:
            minimum: 0
            default: 0
            type: number
        - description: >-
            The maximum number of entries to return. If the value exceeds the
            maximum, then the maximum value will be used.
          name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 100
            default: 30
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BalanceTransactionsListAllResponse'
  /v1/balance-transactions/summary:
    get:
      tags:
        - Balance Transactions
      summary: Get a Balance Transactions Summary
      operationId: BalanceTransactions_getSummary
      security:
        - TilledApiKey: []
        - JWT: []
      description: >-
        Returns a summary of transactions grouped by `time_unit`, `type`, and
        `currency`.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - description: String indicating the unit of time to aggregate the summary of data.
          name: time_unit
          required: false
          in: query
          schema:
            default: month
            enum:
              - day
              - month
            type: string
        - description: Time Zone by which to aggregate the results.
          name: time_zone
          required: false
          in: query
          schema:
            default: America/Chicago
            enum:
              - Africa/Abidjan
              - Africa/Accra
              - Africa/Addis_Ababa
              - Africa/Algiers
              - Africa/Asmara
              - Africa/Asmera
              - Africa/Bamako
              - Africa/Bangui
              - Africa/Banjul
              - Africa/Bissau
              - Africa/Blantyre
              - Africa/Brazzaville
              - Africa/Bujumbura
              - Africa/Cairo
              - Africa/Casablanca
              - Africa/Ceuta
              - Africa/Conakry
              - Africa/Dakar
              - Africa/Dar_es_Salaam
              - Africa/Djibouti
              - Africa/Douala
              - Africa/El_Aaiun
              - Africa/Freetown
              - Africa/Gaborone
              - Africa/Harare
              - Africa/Johannesburg
              - Africa/Juba
              - Africa/Kampala
              - Africa/Khartoum
              - Africa/Kigali
              - Africa/Kinshasa
              - Africa/Lagos
              - Africa/Libreville
              - Africa/Lome
              - Africa/Luanda
              - Africa/Lubumbashi
              - Africa/Lusaka
              - Africa/Malabo
              - Africa/Maputo
              - Africa/Maseru
              - Africa/Mbabane
              - Africa/Mogadishu
              - Africa/Monrovia
              - Africa/Nairobi
              - Africa/Ndjamena
              - Africa/Niamey
              - Africa/Nouakchott
              - Africa/Ouagadougou
              - Africa/Porto-Novo
              - Africa/Sao_Tome
              - Africa/Timbuktu
              - Africa/Tripoli
              - Africa/Tunis
              - Africa/Windhoek
              - America/Adak
              - America/Anchorage
              - America/Anguilla
              - America/Antigua
              - America/Araguaina
              - America/Argentina/Buenos_Aires
              - America/Argentina/Catamarca
              - America/Argentina/ComodRivadavia
              - America/Argentina/Cordoba
              - America/Argentina/Jujuy
              - America/Argentina/La_Rioja
              - America/Argentina/Mendoza
              - America/Argentina/Rio_Gallegos
              - America/Argentina/Salta
              - America/Argentina/San_Juan
              - America/Argentina/San_Luis
              - America/Argentina/Tucuman
              - America/Argentina/Ushuaia
              - America/Aruba
              - America/Asuncion
              - America/Atikokan
              - America/Atka
              - America/Bahia
              - America/Bahia_Banderas
              - America/Barbados
              - America/Belem
              - America/Belize
              - America/Blanc-Sablon
              - America/Boa_Vista
              - America/Bogota
              - America/Boise
              - America/Buenos_Aires
              - America/Cambridge_Bay
              - America/Campo_Grande
              - America/Cancun
              - America/Caracas
              - America/Catamarca
              - America/Cayenne
              - America/Cayman
              - America/Chicago
              - America/Chihuahua
              - America/Coral_Harbour
              - America/Cordoba
              - America/Costa_Rica
              - America/Creston
              - America/Cuiaba
              - America/Curacao
              - America/Danmarkshavn
              - America/Dawson
              - America/Dawson_Creek
              - America/Denver
              - America/Detroit
              - America/Dominica
              - America/Edmonton
              - America/Eirunepe
              - America/El_Salvador
              - America/Ensenada
              - America/Fort_Wayne
              - America/Fortaleza
              - America/Glace_Bay
              - America/Godthab
              - America/Goose_Bay
              - America/Grand_Turk
              - America/Grenada
              - America/Guadeloupe
              - America/Guatemala
              - America/Guayaquil
              - America/Guyana
              - America/Halifax
              - America/Havana
              - America/Hermosillo
              - America/Indiana/Indianapolis
              - America/Indiana/Knox
              - America/Indiana/Marengo
              - America/Indiana/Petersburg
              - America/Indiana/Tell_City
              - America/Indiana/Vevay
              - America/Indiana/Vincennes
              - America/Indiana/Winamac
              - America/Indianapolis
              - America/Inuvik
              - America/Iqaluit
              - America/Jamaica
              - America/Jujuy
              - America/Juneau
              - America/Kentucky/Louisville
              - America/Kentucky/Monticello
              - America/Knox_IN
              - America/Kralendijk
              - America/La_Paz
              - America/Lima
              - America/Los_Angeles
              - America/Louisville
              - America/Lower_Princes
              - America/Maceio
              - America/Managua
              - America/Manaus
              - America/Marigot
              - America/Martinique
              - America/Matamoros
              - America/Mazatlan
              - America/Mendoza
              - America/Menominee
              - America/Merida
              - America/Metlakatla
              - America/Mexico_City
              - America/Miquelon
              - America/Moncton
              - America/Monterrey
              - America/Montevideo
              - America/Montreal
              - America/Montserrat
              - America/Nassau
              - America/New_York
              - America/Nipigon
              - America/Nome
              - America/Noronha
              - America/North_Dakota/Beulah
              - America/North_Dakota/Center
              - America/North_Dakota/New_Salem
              - America/Ojinaga
              - America/Panama
              - America/Pangnirtung
              - America/Paramaribo
              - America/Phoenix
              - America/Port-au-Prince
              - America/Port_of_Spain
              - America/Porto_Acre
              - America/Porto_Velho
              - America/Puerto_Rico
              - America/Rainy_River
              - America/Rankin_Inlet
              - America/Recife
              - America/Regina
              - America/Resolute
              - America/Rio_Branco
              - America/Rosario
              - America/Santa_Isabel
              - America/Santarem
              - America/Santiago
              - America/Santo_Domingo
              - America/Sao_Paulo
              - America/Scoresbysund
              - America/Shiprock
              - America/Sitka
              - America/St_Barthelemy
              - America/St_Johns
              - America/St_Kitts
              - America/St_Lucia
              - America/St_Thomas
              - America/St_Vincent
              - America/Swift_Current
              - America/Tegucigalpa
              - America/Thule
              - America/Thunder_Bay
              - America/Tijuana
              - America/Toronto
              - America/Tortola
              - America/Vancouver
              - America/Virgin
              - America/Whitehorse
              - America/Winnipeg
              - America/Yakutat
              - America/Yellowknife
              - Antarctica/Casey
              - Antarctica/Davis
              - Antarctica/DumontDUrville
              - Antarctica/Macquarie
              - Antarctica/Mawson
              - Antarctica/McMurdo
              - Antarctica/Palmer
              - Antarctica/Rothera
              - Antarctica/South_Pole
              - Antarctica/Syowa
              - Antarctica/Troll
              - Antarctica/Vostok
              - Arctic/Longyearbyen
              - Asia/Aden
              - Asia/Almaty
              - Asia/Amman
              - Asia/Anadyr
              - Asia/Aqtau
              - Asia/Aqtobe
              - Asia/Ashgabat
              - Asia/Ashkhabad
              - Asia/Baghdad
              - Asia/Bahrain
              - Asia/Baku
              - Asia/Bangkok
              - Asia/Beirut
              - Asia/Bishkek
              - Asia/Brunei
              - Asia/Calcutta
              - Asia/Chita
              - Asia/Choibalsan
              - Asia/Chongqing
              - Asia/Chungking
              - Asia/Colombo
              - Asia/Dacca
              - Asia/Damascus
              - Asia/Dhaka
              - Asia/Dili
              - Asia/Dubai
              - Asia/Dushanbe
              - Asia/Gaza
              - Asia/Harbin
              - Asia/Hebron
              - Asia/Ho_Chi_Minh
              - Asia/Hong_Kong
              - Asia/Hovd
              - Asia/Irkutsk
              - Asia/Istanbul
              - Asia/Jakarta
              - Asia/Jayapura
              - Asia/Jerusalem
              - Asia/Kabul
              - Asia/Kamchatka
              - Asia/Karachi
              - Asia/Kashgar
              - Asia/Kathmandu
              - Asia/Katmandu
              - Asia/Khandyga
              - Asia/Kolkata
              - Asia/Krasnoyarsk
              - Asia/Kuala_Lumpur
              - Asia/Kuching
              - Asia/Kuwait
              - Asia/Macao
              - Asia/Macau
              - Asia/Magadan
              - Asia/Makassar
              - Asia/Manila
              - Asia/Muscat
              - Asia/Nicosia
              - Asia/Novokuznetsk
              - Asia/Novosibirsk
              - Asia/Omsk
              - Asia/Oral
              - Asia/Phnom_Penh
              - Asia/Pontianak
              - Asia/Pyongyang
              - Asia/Qatar
              - Asia/Qyzylorda
              - Asia/Rangoon
              - Asia/Riyadh
              - Asia/Saigon
              - Asia/Sakhalin
              - Asia/Samarkand
              - Asia/Seoul
              - Asia/Shanghai
              - Asia/Singapore
              - Asia/Srednekolymsk
              - Asia/Taipei
              - Asia/Tashkent
              - Asia/Tbilisi
              - Asia/Tehran
              - Asia/Tel_Aviv
              - Asia/Thimbu
              - Asia/Thimphu
              - Asia/Tokyo
              - Asia/Ujung_Pandang
              - Asia/Ulaanbaatar
              - Asia/Ulan_Bator
              - Asia/Urumqi
              - Asia/Ust-Nera
              - Asia/Vientiane
              - Asia/Vladivostok
              - Asia/Yakutsk
              - Asia/Yekaterinburg
              - Asia/Yerevan
              - Atlantic/Azores
              - Atlantic/Bermuda
              - Atlantic/Canary
              - Atlantic/Cape_Verde
              - Atlantic/Faeroe
              - Atlantic/Faroe
              - Atlantic/Jan_Mayen
              - Atlantic/Madeira
              - Atlantic/Reykjavik
              - Atlantic/South_Georgia
              - Atlantic/St_Helena
              - Atlantic/Stanley
              - Australia/ACT
              - Australia/Adelaide
              - Australia/Brisbane
              - Australia/Broken_Hill
              - Australia/Canberra
              - Australia/Currie
              - Australia/Darwin
              - Australia/Eucla
              - Australia/Hobart
              - Australia/LHI
              - Australia/Lindeman
              - Australia/Lord_Howe
              - Australia/Melbourne
              - Australia/NSW
              - Australia/North
              - Australia/Perth
              - Australia/Queensland
              - Australia/South
              - Australia/Sydney
              - Australia/Tasmania
              - Australia/Victoria
              - Australia/West
              - Australia/Yancowinna
              - Brazil/Acre
              - Brazil/DeNoronha
              - Brazil/East
              - Brazil/West
              - Canada/Atlantic
              - Canada/Central
              - Canada/East-Saskatchewan
              - Canada/Eastern
              - Canada/Mountain
              - Canada/Newfoundland
              - Canada/Pacific
              - Canada/Saskatchewan
              - Canada/Yukon
              - Chile/Continental
              - Chile/EasterIsland
              - Etc/GMT
              - Etc/GMT+0
              - Etc/GMT+1
              - Etc/GMT+10
              - Etc/GMT+11
              - Etc/GMT+12
              - Etc/GMT+2
              - Etc/GMT+3
              - Etc/GMT+4
              - Etc/GMT+5
              - Etc/GMT+6
              - Etc/GMT+7
              - Etc/GMT+8
              - Etc/GMT+9
              - Etc/GMT-0
              - Etc/GMT-1
              - Etc/GMT-10
              - Etc/GMT-11
              - Etc/GMT-12
              - Etc/GMT-13
              - Etc/GMT-14
              - Etc/GMT-2
              - Etc/GMT-3
              - Etc/GMT-4
              - Etc/GMT-5
              - Etc/GMT-6
              - Etc/GMT-7
              - Etc/GMT-8
              - Etc/GMT-9
              - Etc/Greenwich
              - Etc/UCT
              - Etc/UTC
              - Etc/Universal
              - Etc/Zulu
              - Europe/Amsterdam
              - Europe/Andorra
              - Europe/Athens
              - Europe/Belfast
              - Europe/Belgrade
              - Europe/Berlin
              - Europe/Bratislava
              - Europe/Brussels
              - Europe/Bucharest
              - Europe/Budapest
              - Europe/Busingen
              - Europe/Chisinau
              - Europe/Copenhagen
              - Europe/Dublin
              - Europe/Gibraltar
              - Europe/Guernsey
              - Europe/Helsinki
              - Europe/Isle_of_Man
              - Europe/Istanbul
              - Europe/Jersey
              - Europe/Kaliningrad
              - Europe/Kiev
              - Europe/Lisbon
              - Europe/Ljubljana
              - Europe/London
              - Europe/Luxembourg
              - Europe/Madrid
              - Europe/Malta
              - Europe/Mariehamn
              - Europe/Minsk
              - Europe/Monaco
              - Europe/Moscow
              - Europe/Nicosia
              - Europe/Oslo
              - Europe/Paris
              - Europe/Podgorica
              - Europe/Prague
              - Europe/Riga
              - Europe/Rome
              - Europe/Samara
              - Europe/San_Marino
              - Europe/Sarajevo
              - Europe/Simferopol
              - Europe/Skopje
              - Europe/Sofia
              - Europe/Stockholm
              - Europe/Tallinn
              - Europe/Tirane
              - Europe/Tiraspol
              - Europe/Uzhgorod
              - Europe/Vaduz
              - Europe/Vatican
              - Europe/Vienna
              - Europe/Vilnius
              - Europe/Volgograd
              - Europe/Warsaw
              - Europe/Zagreb
              - Europe/Zaporozhye
              - Europe/Zurich
              - Indian/Antananarivo
              - Indian/Chagos
              - Indian/Christmas
              - Indian/Cocos
              - Indian/Comoro
              - Indian/Kerguelen
              - Indian/Mahe
              - Indian/Maldives
              - Indian/Mauritius
              - Indian/Mayotte
              - Indian/Reunion
              - Mexico/BajaNorte
              - Mexico/BajaSur
              - Mexico/General
              - Pacific/Apia
              - Pacific/Auckland
              - Pacific/Chatham
              - Pacific/Chuuk
              - Pacific/Easter
              - Pacific/Efate
              - Pacific/Enderbury
              - Pacific/Fakaofo
              - Pacific/Fiji
              - Pacific/Funafuti
              - Pacific/Galapagos
              - Pacific/Gambier
              - Pacific/Guadalcanal
              - Pacific/Guam
              - Pacific/Honolulu
              - Pacific/Johnston
              - Pacific/Kiritimati
              - Pacific/Kosrae
              - Pacific/Kwajalein
              - Pacific/Majuro
              - Pacific/Marquesas
              - Pacific/Midway
              - Pacific/Nauru
              - Pacific/Niue
              - Pacific/Norfolk
              - Pacific/Noumea
              - Pacific/Pago_Pago
              - Pacific/Palau
              - Pacific/Pitcairn
              - Pacific/Pohnpei
              - Pacific/Ponape
              - Pacific/Port_Moresby
              - Pacific/Rarotonga
              - Pacific/Saipan
              - Pacific/Samoa
              - Pacific/Tahiti
              - Pacific/Tarawa
              - Pacific/Tongatapu
              - Pacific/Truk
              - Pacific/Wake
              - Pacific/Wallis
              - Pacific/Yap
            type: string
        - description: >-
            Minimum `created_at` value to filter by (inclusive). Defaults to the
            beginning of the current month.
          name: created_at_gte
          required: false
          in: query
          schema:
            format: date-time
            type: string
        - description: >-
            Maximum `created_at` value to filter by (inclusive). Defaults to
            midnight tonight.
          name: created_at_lte
          required: false
          in: query
          schema:
            format: date-time
            type: string
        - description: >-
            An array containing specific balance transaction types. The data
            will be filtered to include only transactions with a matching type
            property.
          name: types
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - charge
                - charge_failure_refund
                - dispute
                - dispute_won
                - refund
                - refund_failure
                - adjustment
                - commission
                - payout
                - payout_cancel
                - payout_failure
                - fee
                - platform_fee
                - platform_fee_refund
                - outbound_transfer
                - outbound_transfer_cancel
                - outbound_transfer_failure
                - charge_fee
                - refund_fee
                - account_fee
                - payment_method_fee
                - tilled_fee
        - description: Whether or not to include the results from any connected accounts.
          name: include_connected_accounts
          required: false
          in: query
          schema:
            default: false
            type: boolean
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BalanceTransactionsSummary'
  /v1/balance-transactions/{id}:
    get:
      tags:
        - Balance Transactions
      summary: Get a Balance Transaction
      operationId: BalanceTransactions_getById
      security:
        - TilledApiKey: []
        - JWT: []
      description: Retrieves the balance transaction with the given ID.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BalanceTransaction'
  /v1/charges/{id}:
    get:
      tags:
        - Charges
      summary: Get a Charge
      operationId: Charges_getById
      security:
        - TilledApiKey: []
        - JWT: []
      description: Retrieves a Charge object.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Charge'
  /v1/checkout-sessions:
    post:
      tags:
        - Checkout Sessions
      summary: Create a Checkout Session
      operationId: CheckoutSessions_createSession
      security:
        - TilledApiKey: []
        - JWT: []
      description: Creates a checkout session.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckoutSessionCreateParams'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckoutSession'
    get:
      tags:
        - Checkout Sessions
      summary: List all Checkout Sessions
      operationId: CheckoutSessions_listAll
      security:
        - TilledApiKey: []
        - JWT: []
      description: Returns a list of checkout sessions.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - description: >-
            `metadata` key-value pairs to filter by. Only exact matches on the
            key-value pair(s) will be returned. Example:
            `?metadata[internal_customer_id]=7cb1159d-875e-47ae-a309-319fa7ff395b`.
          name: metadata
          required: false
          in: query
          style: deepObject
          explode: true
          schema:
            additionalProperties:
              type: string
            type: object
        - description: Only return the checkout session for the payment intent specified.
          name: payment_intent_id
          required: false
          in: query
          schema:
            type: string
        - description: Only return the checkout session for the customer specified.
          name: customer_id
          required: false
          in: query
          schema:
            type: string
        - description: >-
            The (zero-based) offset of the first item in the collection to
            return.
          name: offset
          required: false
          in: query
          schema:
            minimum: 0
            default: 0
            type: number
        - description: >-
            The maximum number of entries to return. If the value exceeds the
            maximum, then the maximum value will be used.
          name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 100
            default: 30
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckoutSessionsListAllResponse'
  /v1/checkout-sessions/{id}:
    get:
      tags:
        - Checkout Sessions
      summary: Get a Checkout Session
      operationId: CheckoutSessions_getDetails
      security:
        - TilledApiKey: []
        - JWT: []
      description: Retrieves the details of a checkout session
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckoutSession'
  /v1/checkout-sessions/{id}/expire:
    post:
      tags:
        - Checkout Sessions
      summary: Expire a Checkout Session
      operationId: CheckoutSessions_expireSession
      security:
        - TilledApiKey: []
        - JWT: []
      description: >-
        A checkout session can be expired when it is in one of these statuses:
        `open`


        After it expires, a customer can't complete the checkout session and
        will see a message about the expiration.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckoutSession'
  /v1/customers:
    post:
      tags:
        - Customers
      summary: Create a Customer
      operationId: Customers_createCustomerObject
      security:
        - TilledApiKey: []
        - JWT: []
      description: >-
        Customer objects allow you to track multiple charges that are associated
        with the same customer.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerCreateParams'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
    get:
      tags:
        - Customers
      summary: List all Customers
      operationId: Customers_listAll
      security:
        - TilledApiKey: []
        - JWT: []
      description: >-
        Returns a list of your customers. The customers are returned sorted by
        creation date, with the most recent customers appearing first.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - description: >-
            `metadata` key-value pairs to filter by. Only exact matches on the
            key-value pair(s) will be returned. Example:
            `?metadata[internal_customer_id]=7cb1159d-875e-47ae-a309-319fa7ff395b`.
          name: metadata
          required: false
          in: query
          style: deepObject
          explode: true
          schema:
            additionalProperties:
              type: string
            type: object
        - description: >-
            The partial search of text fields. Supports searching by
            `customer.first_name`, `customer.last_name`,

            `customer.email`, `customer.phone`
          name: q
          required: false
          in: query
          schema:
            type: string
        - description: >-
            The (zero-based) offset of the first item in the collection to
            return.
          name: offset
          required: false
          in: query
          schema:
            minimum: 0
            default: 0
            type: number
        - description: >-
            The maximum number of entries to return. If the value exceeds the
            maximum, then the maximum value will be used.
          name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 100
            default: 30
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomersListAllResponse'
  /v1/customers/{id}:
    get:
      tags:
        - Customers
      summary: Get a Customer
      operationId: Customers_getDetails
      security:
        - TilledApiKey: []
        - JWT: []
      description: Retrieves the details of an existing customer.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
    patch:
      tags:
        - Customers
      summary: Update a Customer
      operationId: Customers_updateCustomerById
      security:
        - TilledApiKey: []
        - JWT: []
      description: >-
        Updates the specified customer by setting the values of the parameters
        passed. Any parameters not provided will be left unchanged.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerUpdateParams'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
    delete:
      tags:
        - Customers
      summary: Delete a Customer
      operationId: Customers_deleteCustomer
      security:
        - TilledApiKey: []
        - JWT: []
      description: Permanently deletes a customer. It cannot be undone.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomersDeleteCustomerResponse'
  /v1/disputes:
    get:
      tags:
        - Disputes
      summary: List all Disputes
      operationId: Disputes_listAll
      security:
        - TilledApiKey: []
        - JWT: []
      description: >-
        Returns a list of existing disputes. The disputes are returned in sorted
        order, with the most recent disputes appearing first.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - description: Only returns disputes for the charge specified by this charge ID.
          name: charge_id
          required: false
          in: query
          schema:
            type: string
        - description: Whether or not to include the results from any connected accounts.
          name: include_connected_accounts
          required: false
          in: query
          schema:
            default: false
            type: boolean
        - description: Minimum `created_at` value to filter by (inclusive).
          name: created_at_gte
          required: false
          in: query
          schema:
            format: date-time
            type: string
        - description: Maximum `created_at` value to filter by (inclusive).
          name: created_at_lte
          required: false
          in: query
          schema:
            format: date-time
            type: string
        - description: String indicating the status to filter the result by.
          name: status
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - warning_needs_response
                - warning_under_review
                - warning_closed
                - needs_response
                - under_review
                - closed
                - won
                - lost
        - description: >-
            The (zero-based) offset of the first item in the collection to
            return.
          name: offset
          required: false
          in: query
          schema:
            minimum: 0
            default: 0
            type: number
        - description: >-
            The maximum number of entries to return. If the value exceeds the
            maximum, then the maximum value will be used.
          name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 100
            default: 30
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisputesListAllResponse'
  /v1/disputes/{id}:
    get:
      tags:
        - Disputes
      summary: Get a Dispute
      operationId: Disputes_getDetails
      security:
        - TilledApiKey: []
        - JWT: []
      description: Retrieves the details of an existing dispute with the given ID.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dispute'
    post:
      tags:
        - Disputes
      summary: Create Dispute Evidence
      operationId: Disputes_submitEvidence
      security:
        - TilledApiKey: []
        - JWT: []
      description: Provide evidence to challenge a dispute.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DisputeEvidenceCreateParams'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dispute'
  /v1/documents:
    get:
      tags:
        - Documents
      summary: List all Documents
      operationId: Documents_listAll
      security:
        - JWT: []
        - TilledApiKey: []
      description: >-
        Returns a list of existing documents. The documents are returned sorted
        by creation date, with the most recent documents appearing first.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - name: status
          required: false
          in: query
          schema:
            enum:
              - requested
              - submitted
              - rejected
              - verified
            type: string
        - description: >-
            The (zero-based) offset of the first item in the collection to
            return.
          name: offset
          required: false
          in: query
          schema:
            minimum: 0
            default: 0
            type: number
        - description: >-
            The maximum number of entries to return. If the value exceeds the
            maximum, then the maximum value will be used.
          name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 100
            default: 30
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentsListAllResponse'
  /v1/documents/bulk-submit:
    post:
      tags:
        - Documents
      summary: Bulk Submit Documents
      operationId: Documents_bulkSubmit
      security:
        - JWT: []
        - TilledApiKey: []
      description: >-
        Bulk submit documents to fulfill requested documents, providing a list
        of corresponding document IDs with either a file ID or a written
        response.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkDocumentSubmitRequestParams'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkDocumentSubmitResponse'
  /v1/documents/{id}:
    get:
      tags:
        - Documents
      summary: Get a Document
      operationId: Documents_getDetailsById
      security:
        - JWT: []
        - TilledApiKey: []
      description: Retrieves the details of an existing document with the given ID.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - description: The id of the document to be retrieved.
          name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentDto'
  /v1/documents/{id}/submit:
    post:
      tags:
        - Documents
      summary: Submit a Document
      operationId: Documents_submitDocument
      security:
        - JWT: []
        - TilledApiKey: []
      description: >-
        To submit a document, update the corresponding document with either a
        file ID or a written response. A document of type `file` requires a file
        ID, and that [File](https://api.tilled.com)'s type must be of
        `onboarding_documentation`. A document of type `written` requires a
        written response. Note that only document's with status `requested` can
        be submitted.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - description: The id of the document to be updated.
          name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentSubmitRequestParams'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentDto'
  /v1/events:
    get:
      tags:
        - Events
      summary: List all Events
      operationId: Events_listAll
      security:
        - TilledApiKey: []
        - JWT: []
      description: List events, going back up to at least 30 days.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - description: Minimum `created_at` value to filter by (inclusive).
          name: created_at_gte
          required: false
          in: query
          schema:
            format: date-time
            type: string
        - description: Maximum `created_at` value to filter by (inclusive).
          name: created_at_lte
          required: false
          in: query
          schema:
            format: date-time
            type: string
        - description: >-
            An array of up to 20 strings containing specific event names. The
            list will be filtered to include only events with a matching event
            property.
          name: types
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - account.updated
                - charge.captured
                - charge.expired
                - charge.failed
                - charge.succeeded
                - charge.pending
                - charge.refunded
                - charge.refund.updated
                - charge.updated
                - customer.created
                - customer.deleted
                - customer.updated
                - dispute.created
                - dispute.updated
                - payment_intent.canceled
                - payment_intent.created
                - payment_intent.payment_failed
                - payment_intent.processing
                - payment_intent.requires_action
                - payment_intent.succeeded
                - payment_intent.amount_capturable_updated
                - payment_method.attached
                - payment_method.detached
                - payout.created
                - payout.failed
                - payout.paid
                - payout.updated
                - platform_fee.created
                - platform_fee.refunded
                - subscription.created
                - subscription.canceled
                - subscription.updated
                - report_run.succeeded
                - report_run.failed
                - outbound_transfer.pending
                - outbound_transfer.failed
                - outbound_transfer.canceled
                - outbound_transfer.succeeded
        - description: >-
            Id of related resource. The list will be filtered to include events
            that are related to the resource with this id.
          name: object_id
          required: false
          in: query
          schema:
            type: string
        - description: >-
            The (zero-based) offset of the first item in the collection to
            return.
          name: offset
          required: false
          in: query
          schema:
            minimum: 0
            default: 0
            type: number
        - description: >-
            The maximum number of entries to return. If the value exceeds the
            maximum, then the maximum value will be used.
          name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 100
            default: 30
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventsListAllResponse'
  /v1/events/{id}:
    get:
      tags:
        - Events
      summary: Get an Event
      operationId: Events_getDetails
      security:
        - TilledApiKey: []
        - JWT: []
      description: >-
        Retrieves the details of an event. Supply the unique identifier of the
        event, which you might have received in a webhook.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
        '404':
          description: ''
  /v1/files:
    post:
      tags:
        - Files
      summary: Create a File
      operationId: Files_uploadFile
      security:
        - TilledApiKey: []
        - JWT: []
      description: Creates a File
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileCreateParams'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
    get:
      tags:
        - Files
      summary: List all Files
      operationId: Files_getAll
      security:
        - TilledApiKey: []
        - JWT: []
      description: Returns a list of uploaded files
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - description: A list of file purposes to filter on.
          name: purposes
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - logo
                - icon
                - dispute_evidence
                - onboarding_documentation
        - description: >-
            The (zero-based) offset of the first item in the collection to
            return.
          name: offset
          required: false
          in: query
          schema:
            minimum: 0
            default: 0
            type: number
        - description: >-
            The maximum number of entries to return. If the value exceeds the
            maximum, then the maximum value will be used.
          name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 100
            default: 30
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilesGetAllResponse'
  /v1/files/{id}:
    get:
      tags:
        - Files
      summary: Get a File
      operationId: Files_getById
      security:
        - TilledApiKey: []
        - JWT: []
      description: Retrieves the file with the given ID.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
    delete:
      tags:
        - Files
      summary: Delete a File
      operationId: Files_permanentlyDeleteById
      security:
        - TilledApiKey: []
        - JWT: []
      description: Permanently delete a file
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilesPermanentlyDeleteByIdResponse'
  /v1/files/{id}/contents:
    get:
      tags:
        - Files
      summary: Get the Contents of a File
      operationId: Files_getContentsById
      security:
        - TilledApiKey: []
        - JWT: []
      description: Gets the contents of a file with the given ID.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          x-is-file: true
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/FilesGetContentsByIdResponse'
  /v1/health:
    get:
      tags:
        - Health
      summary: Get the Overall Health of the API
      operationId: Health_overallStatus
      description: >-
        A status of `pass` is healthy, `warn` is healthy with concerns, and
        `fail` is unhealthy.


        *Note: a `503` HTTP response code will be returned for the `fail`
        status.*
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthOutput'
  /v1/outbound-transfers:
    post:
      tags:
        - Outbound Transfers
      summary: Create an Outbound Transfer
      operationId: OutboundTransfers_createTransfer
      security:
        - JWT: []
        - TilledApiKey: []
      description: >-
        If the creation request is successful, an OutboundTransfer object of
        status `pending` will be returned.


        If there is an error, an OutboundTransfer object with the status
        `failed` or an error is returned.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OutboundTransferCreateParams'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboundTransfer'
    get:
      tags:
        - Outbound Transfers
      summary: List all Outbound Transfers
      operationId: OutboundTransfers_listAll
      security:
        - JWT: []
        - TilledApiKey: []
      description: Returns a list of outbound transfers.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - description: >-
            `metadata` key-value pairs to filter by. Only exact matches on the
            key-value pair(s) will be returned. Example:
            `?metadata[internal_customer_id]=7cb1159d-875e-47ae-a309-319fa7ff395b`.
          name: metadata
          required: false
          in: query
          style: deepObject
          explode: true
          schema:
            additionalProperties:
              type: string
            type: object
        - description: >-
            Only return OutboundTransfers whose status is included by this
            array. Example: `/v1/outbound-transfers?status=succeeded`
          name: status
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - canceled
                - failed
                - pending
                - succeeded
        - description: Whether or not to include the results from any connected accounts.
          name: include_connected_accounts
          required: false
          in: query
          schema:
            default: false
            type: boolean
        - description: Minimum `created_at` value to filter by (inclusive).
          name: created_at_gte
          required: false
          in: query
          schema:
            format: date-time
            type: string
        - description: Maximum `created_at` value to filter by (inclusive).
          name: created_at_lte
          required: false
          in: query
          schema:
            format: date-time
            type: string
        - description: >-
            The (zero-based) offset of the first item in the collection to
            return.
          name: offset
          required: false
          in: query
          schema:
            minimum: 0
            default: 0
            type: number
        - description: >-
            The maximum number of entries to return. If the value exceeds the
            maximum, then the maximum value will be used.
          name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 100
            default: 30
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboundTransfersListAllResponse'
  /v1/outbound-transfers/{id}:
    get:
      tags:
        - Outbound Transfers
      summary: Get an Outbound Transfer
      operationId: OutboundTransfers_getDetails
      security:
        - JWT: []
        - TilledApiKey: []
      description: Retrieves the details of an outbound transfer.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboundTransfer'
  /v1/outbound-transfers/{id}/cancel:
    post:
      tags:
        - Outbound Transfers
      summary: Cancel an Outbound Transfer
      operationId: OutboundTransfers_cancelTransfer
      security:
        - JWT: []
        - TilledApiKey: []
      description: >-
        An outbound transfer can be canceled only if its status is `pending` and
        funds have not yet been batched or paid out.


        If the cancellation is successful, the OutboundTransfer object is
        returned.


        If the outbound transfer cannot be canceled, an error is returned.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutboundTransfer'
  /v1/payment-intents:
    post:
      tags:
        - PaymentIntents
      summary: Create a Payment Intent
      operationId: PaymentIntents_createPaymentIntent
      security:
        - TilledApiKey: []
        - JWT: []
      description: >-
        After the PaymentIntent is created, attach a payment method and confirm
        to continue the payment. You can read more about the different payment
        flows available via the Payment Intents API here<TBD>.


        When `confirm=true` is used during creation, it is equivalent to
        creating and confirming the PaymentIntent in the same call. You may use
        any parameters available in the confirm API when `confirm=true` is
        supplied.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentIntentCreateParams'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentIntent'
    get:
      tags:
        - PaymentIntents
      summary: List all Payment Intents
      operationId: PaymentIntents_listAll
      security:
        - TilledApiKey: []
        - JWT: []
      description: Returns a list of PaymentIntents.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - description: >-
            `metadata` key-value pairs to filter by. Only exact matches on the
            key-value pair(s) will be returned. Example:
            `?metadata[internal_customer_id]=7cb1159d-875e-47ae-a309-319fa7ff395b`.
          name: metadata
          required: false
          in: query
          style: deepObject
          explode: true
          schema:
            additionalProperties:
              type: string
            type: object
        - description: Minimum `created_at` value to filter by (inclusive).
          name: created_at_gte
          required: false
          in: query
          schema:
            format: date-time
            type: string
        - description: Maximum `created_at` value to filter by (inclusive).
          name: created_at_lte
          required: false
          in: query
          schema:
            format: date-time
            type: string
        - description: >-
            Only return PaymentIntents whose status is included by this array.
            Examples:
            `/v1/payment-intents?status=succeeded,requires_payment_method` and
            `/v1/payment-intents?status=succeeded&status=requires_payment_method`.
          name: status
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - canceled
                - processing
                - requires_action
                - requires_capture
                - requires_confirmation
                - requires_payment_method
                - succeeded
        - description: Whether or not to include the results from any connected accounts.
          name: include_connected_accounts
          required: false
          in: query
          schema:
            default: false
            type: boolean
        - description: The ID of the subscription whose payment intents will be retrieved.
          name: subscription_id
          required: false
          in: query
          schema:
            type: string
        - description: >-
            Supports searching by `payment_intent.id`, `payment_intent.amount`,
            `payment_method.billing_details.name`,

            `payment_method.details.last4`, `payment_method.details.last2`,
            `customer.first_name`, `customer.last_name`
          name: q
          required: false
          in: query
          schema:
            type: string
        - description: The ID of the customer whose payment intents will be retrieved.
          name: customer_id
          required: false
          in: query
          schema:
            type: string
        - description: >-
            The ID of the terminal reader for which payment intents will be
            retrieved.
          name: terminal_reader_id
          required: false
          in: query
          schema:
            type: string
        - description: >-
            The (zero-based) offset of the first item in the collection to
            return.
          name: offset
          required: false
          in: query
          schema:
            minimum: 0
            default: 0
            type: number
        - description: >-
            The maximum number of entries to return. If the value exceeds the
            maximum, then the maximum value will be used.
          name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 100
            default: 30
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentIntentsListAllResponse'
  /v1/payment-intents/{id}:
    get:
      tags:
        - PaymentIntents
      summary: Get a Payment Intent
      operationId: PaymentIntents_getDetails
      security:
        - TilledApiKey: []
        - JWT: []
      description: >-
        Retrieves the details of a PaymentIntent that has previously been
        created.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentIntent'
    patch:
      tags:
        - PaymentIntents
      summary: Update a Payment Intent
      operationId: PaymentIntents_updateWithoutConfirmation
      security:
        - TilledApiKey: []
        - JWT: []
      description: >-
        Updates properties on a PaymentIntent object without confirming.


        Depending on which properties you update, you may need to confirm the
        PaymentIntent again.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentIntentUpdateParams'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentIntent'
  /v1/payment-intents/{id}/cancel:
    post:
      tags:
        - PaymentIntents
      summary: Cancel a Payment Intent
      operationId: PaymentIntents_cancelIntent
      security:
        - TilledApiKey: []
        - JWT: []
      description: >-
        A PaymentIntent object can be canceled when it is in one of these
        statuses: `requires_payment_method`, `requires_capture`,
        `requires_confirmation`, or `requires_action`.


        Once canceled, no additional charges will be made by the PaymentIntent
        and any operations on the PaymentIntent will fail with an error.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentIntentCancelParams'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentIntent'
  /v1/payment-intents/{id}/capture:
    post:
      tags:
        - PaymentIntents
      summary: Capture a Payment Intent
      operationId: PaymentIntents_captureFunds
      security:
        - TilledApiKey: []
        - JWT: []
      description: >-
        Capture the funds of an existing uncaptured PaymentIntent when its
        status is `requires_capture`.

        Uncaptured PaymentIntents will be canceled exactly 7 days after they are
        created.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentIntentCaptureParams'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentIntent'
  /v1/payment-intents/{id}/confirm:
    post:
      tags:
        - PaymentIntents
      summary: Confirm a Payment Intent
      operationId: PaymentIntents_confirmIntent
      security:
        - TilledApiKey: []
        - JWT: []
      description: >-
        Confirm that your customer intends to pay with current or provided
        payment method. Upon confirmation, the PaymentIntent will attempt to
        initiate a payment.


        If the selected payment method requires additional steps, the
        PaymentIntent will transition to the `requires_action` status. If
        payment fails, the PaymentIntent will transition to the
        `requires_payment_method` status. If payment succeeds, the PaymentIntent
        will transition to the `succeeded` status (or `requires_capture`, if
        `capture_method` is set to `manual`).


        Payment may be attempted using our `tilled.js` and the PaymentIntent’s
        `client_secret`.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentIntentConfirmParams'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentIntent'
  /v1/payment-methods:
    post:
      tags:
        - PaymentMethods
      summary: Create a Payment Method
      operationId: PaymentMethods_createNewMethod
      security:
        - TilledApiKey: []
        - JWT: []
      description: >-
        Creates a PaymentMethod object. Read the [Tilled.js
        reference](#section/Tilled.js) to learn how to create PaymentMethods via
        Tilled.js. One of the following is required to create a payment method:
        `card`, `payment_token`, `ach_debit`, or `eft_debit`.


        Note: If you would like to use this endpoint to submit raw cardholder
        data directly to Tilled's API (and not use Tilled.js), you must first
        submit your PCI Attestation of Compliance (AOC) to Tilled that shows you
        are currently compliant with the applicable PCI/DSS requirements. Please
        contact integrations@tilled.com for information on how to submit your
        documentation.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentMethodCreateParams'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'
    get:
      tags:
        - PaymentMethods
      summary: List a Customer's Payment Methods
      operationId: PaymentMethods_listForCustomer
      security:
        - TilledApiKey: []
        - JWT: []
      description: Returns a list of PaymentMethods for a given Customer.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - description: >-
            `metadata` key-value pairs to filter by. Only exact matches on the
            key-value pair(s) will be returned. Example:
            `?metadata[internal_customer_id]=7cb1159d-875e-47ae-a309-319fa7ff395b`.
          name: metadata
          required: false
          in: query
          schema:
            additionalProperties:
              type: string
            type: object
        - description: Only return payment methods of the given type.
          name: type
          required: true
          in: query
          schema:
            enum:
              - card
              - ach_debit
              - eft_debit
              - card_present
            type: string
        - description: Customer identifier
          name: customer_id
          required: true
          in: query
          schema:
            type: string
        - description: >-
            The (zero-based) offset of the first item in the collection to
            return.
          name: offset
          required: false
          in: query
          schema:
            minimum: 0
            default: 0
            type: number
        - description: >-
            The maximum number of entries to return. If the value exceeds the
            maximum, then the maximum value will be used.
          name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 100
            default: 30
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodsListForCustomerResponse'
  /v1/payment-methods/ach-debit-token:
    post:
      tags:
        - PaymentMethods
      summary: Create an ACH Debit Single-Use Token
      operationId: PaymentMethods_createAchDebitSingleUseToken
      security:
        - TilledApiKey: []
        - JWT: []
      description: >-
        Creates an ACH Debit Single-Use Token, for use in creating a
        PaymentMethod.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: >-
                #/components/schemas/PaymentMethodCreateAchDebitSingleUseTokenParams
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AchDebitSingleUseToken'
      deprecated: true
  /v1/payment-methods/{id}:
    get:
      tags:
        - PaymentMethods
      summary: Get a Payment Method
      operationId: PaymentMethods_getById
      security:
        - TilledApiKey: []
        - JWT: []
      description: Retrieves a PaymentMethod object.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'
    patch:
      tags:
        - PaymentMethods
      summary: Update a Payment Method
      operationId: PaymentMethods_updateMethod
      security:
        - TilledApiKey: []
        - JWT: []
      description: >-
        Updates a PaymentMethod object. A PaymentMethod must be attached to a
        customer to be updated.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentMethodUpdateParams'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'
  /v1/payment-methods/{id}/attach:
    put:
      tags:
        - PaymentMethods
      summary: Attach a Payment Method to a Customer
      operationId: PaymentMethods_attachCustomer
      security:
        - TilledApiKey: []
        - JWT: []
      description: >-
        Attaches a PaymentMethod to a Customer. This effectively changes the
        payment method from single-use to reusable.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentMethodAttachParams'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'
  /v1/payment-methods/{id}/detach:
    put:
      tags:
        - PaymentMethods
      summary: Detach a Payment Method from a Customer
      operationId: PaymentMethods_detachMethodFromCustomer
      security:
        - TilledApiKey: []
        - JWT: []
      description: >-
        Detaches a PaymentMethod from a Customer. Once a payment method is
        detached it can no longer be used to make a charge.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'
  /v1/payouts:
    get:
      tags:
        - Payouts
      summary: List all Payouts
      operationId: Payouts_getAll
      security:
        - TilledApiKey: []
        - JWT: []
      description: >-
        Returns a list of existing payouts. The payouts are returned in sorted
        order, with the most recent

        payouts appearing first.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - description: >-
            Minimum `created_at` value to filter by (inclusive). Cannot be
            paired with paid_at_gte or paid_at_lte.
          name: created_at_gte
          required: false
          in: query
          schema:
            format: date-time
            type: string
        - description: >-
            Maximum `created_at` value to filter by (inclusive). Cannot be
            paired with paid_at_gte or paid_at_lte.
          name: created_at_lte
          required: false
          in: query
          schema:
            format: date-time
            type: string
        - description: >-
            Minimum `paid_at` value to filter by (inclusive). Cannot be paired
            with created_at_gte or created_at_lte.
          name: paid_at_gte
          required: false
          in: query
          schema:
            format: date-time
            type: string
        - description: >-
            Maximum `paid_at` value to filter by (inclusive). Cannot be paired
            with created_at_gte or created_at_lte.
          name: paid_at_lte
          required: false
          in: query
          schema:
            format: date-time
            type: string
        - description: Only return payouts that have the given status.
          name: status
          required: false
          in: query
          schema:
            enum:
              - canceled
              - failed
              - in_transit
              - paid
              - pending
            type: string
        - description: >-
            An array of optional include parameters, specifying extra properties
            to return. Currently for this endpoint only accepts
            'transaction_count'. In the query parameters, this is specified as
            include=value1,value2,value3,etc.
          name: include
          required: false
          in: query
          schema:
            enum:
              - transaction_count
            type: string
        - description: Whether or not to include the results from any connected accounts.
          name: include_connected_accounts
          required: false
          in: query
          schema:
            default: false
            type: boolean
        - description: Supports searching by `payouts.id`, `payouts.amount`
          name: q
          required: false
          in: query
          schema:
            type: string
        - description: >-
            The (zero-based) offset of the first item in the collection to
            return.
          name: offset
          required: false
          in: query
          schema:
            minimum: 0
            default: 0
            type: number
        - description: >-
            The maximum number of entries to return. If the value exceeds the
            maximum, then the maximum value will be used.
          name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 100
            default: 30
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayoutsGetAllResponse'
  /v1/payouts/{id}:
    get:
      tags:
        - Payouts
      summary: Get a Payout
      operationId: Payouts_getDetailsById
      security:
        - TilledApiKey: []
        - JWT: []
      description: Retrieves the details of an existing payout with the given ID.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
        - description: >-
            An array of optional include parameters, specifying extra properties
            to return. Currently for this endpoint only accepts
            'transaction_count'. In the query parameters, this is specified as
            include=value1,value2,value3,etc.
          name: include
          required: false
          in: query
          deprecated: true
          schema:
            type: array
            items:
              enum:
                - transaction_count
              type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payout'
  /v1/platform-fees:
    get:
      tags:
        - Platform Fees
      summary: List all Platform Fees
      operationId: PlatformFees_listAll
      security:
        - TilledApiKey: []
        - JWT: []
      description: >-
        Returns a list of platform fees you've previously collected. The
        platform fees are returned in a sorted order, with the most recent fees
        appearing first.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - description: Minimum `created_at` value to filter by (inclusive).
          name: created_at_gte
          required: false
          in: query
          schema:
            format: date-time
            type: string
        - description: Maximum `created_at` value to filter by (inclusive).
          name: created_at_lte
          required: false
          in: query
          schema:
            format: date-time
            type: string
        - description: >-
            Only return application fees for the charge specified by this charge
            id.
          name: charge_id
          required: false
          in: query
          schema:
            type: string
        - description: >-
            The (zero-based) offset of the first item in the collection to
            return.
          name: offset
          required: false
          in: query
          schema:
            minimum: 0
            default: 0
            type: number
        - description: >-
            The maximum number of entries to return. If the value exceeds the
            maximum, then the maximum value will be used.
          name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 100
            default: 30
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatformFeesListAllResponse'
  /v1/platform-fees/{id}:
    get:
      tags:
        - Platform Fees
      summary: Get a Platform Fee
      operationId: PlatformFees_getDetails
      security:
        - TilledApiKey: []
        - JWT: []
      description: >-
        Retrieves the details of a platform fee that your account has collected.
        The same information is returned when when refunding the application
        fee.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatformFee'
  /v1/platform-fees/{id}/refunds/{refund_id}:
    get:
      tags:
        - Platform Fee Refunds
      summary: Get a Platform Fee Refund
      operationId: PlatformFeeRefunds_getDetailsById
      security:
        - TilledApiKey: []
        - JWT: []
      description: Retrieves the details of a specific refund stored on the platform fee.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
        - name: refund_id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlatformFeeRefund'
  /v1/pricing-templates:
    get:
      tags:
        - Pricing Templates
      summary: List all Pricing Templates
      operationId: PricingTemplates_listAll
      security:
        - TilledApiKey: []
        - JWT: []
      description: >-
        Returns a list of pricing templates. These are the pricing templates
        that are available to be assigned to `merchant` accounts during
        onboarding.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - description: String indicating the type to filter the result by.
          name: type
          required: false
          in: query
          schema:
            enum:
              - card
              - ach_debit
              - card_present
              - eft_debit
            type: string
        - description: >-
            The (zero-based) offset of the first item in the collection to
            return.
          name: offset
          required: false
          in: query
          schema:
            minimum: 0
            default: 0
            type: number
        - description: >-
            The maximum number of entries to return. If the value exceeds the
            maximum, then the maximum value will be used.
          name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 100
            default: 30
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PricingTemplatesListAllResponse'
  /v1/pricing-templates/{id}:
    get:
      tags:
        - Pricing Templates
      summary: Get a Pricing Template
      operationId: PricingTemplates_getDetailsById
      security:
        - TilledApiKey: []
        - JWT: []
      description: Retrieves the details of the pricing template with the given ID.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PricingTemplate'
  /v1/product-codes:
    get:
      tags:
        - ProductCodes
      summary: List an Account's Product Codes
      operationId: ProductCodes_listForAccount
      security:
        - TilledApiKey: []
        - JWT: []
      description: >-
        *Deprecated: Use Pricing Templates to configure merchant accounts during
        onboarding.*


        Returns a list of ProductCodes available to a given `partner` account.
        These are the product codes that are available to be assigned to
        `merchant` accounts during merchant onboarding.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - description: >-
            The (zero-based) offset of the first item in the collection to
            return.
          name: offset
          required: false
          in: query
          schema:
            minimum: 0
            default: 0
            type: number
        - description: >-
            The maximum number of entries to return. If the value exceeds the
            maximum, then the maximum value will be used.
          name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 100
            default: 30
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductCodesListForAccountResponse'
      deprecated: true
  /v1/refunds:
    post:
      tags:
        - Refunds
      summary: Create a Refund
      operationId: Refunds_createNewRefund
      security:
        - TilledApiKey: []
        - JWT: []
      description: >-
        When you create a new refund, you must specify a PaymentIntent object on
        which to create it.


        Creating a new refund will refund a charge that has previously been
        created but not yet refunded. Funds will be refunded to the original
        payment method.


        You can optionally refund only part of a charge. You can do so multiple
        times, until the entire charge has been refunded.


        Once entirely refunded, a charge can't be refunded again. This method
        will throw an error when called on an already-refunded charge, or when
        trying to refund more money than is left on a charge.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefundCreateParams'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Refund'
    get:
      tags:
        - Refunds
      summary: List all Refunds
      operationId: Refunds_listAll
      security:
        - TilledApiKey: []
        - JWT: []
      description: >-
        Returns a list of Refunds. The refunds are returned in a sorted order,
        with the most recent refunds appearing first.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - description: >-
            `metadata` key-value pairs to filter by. Only exact matches on the
            key-value pair(s) will be returned. Example:
            `?metadata[internal_customer_id]=7cb1159d-875e-47ae-a309-319fa7ff395b`.
          name: metadata
          required: false
          in: query
          style: deepObject
          explode: true
          schema:
            additionalProperties:
              type: string
            type: object
        - description: >-
            The (zero-based) offset of the first item in the collection to
            return.
          name: offset
          required: false
          in: query
          schema:
            minimum: 0
            default: 0
            type: number
        - description: >-
            The maximum number of entries to return. If the value exceeds the
            maximum, then the maximum value will be used.
          name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 100
            default: 30
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefundsListAllResponse'
  /v1/refunds/{id}:
    get:
      tags:
        - Refunds
      summary: Get a Refund
      operationId: Refunds_getDetailsById
      security:
        - TilledApiKey: []
        - JWT: []
      description: Retrieves the details of an existing refund.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Refund'
  /v1/report-runs:
    post:
      tags:
        - ReportRuns
      summary: Create a Report Run
      operationId: ReportRuns_createRun
      security:
        - TilledApiKey: []
        - JWT: []
      description: Creates a Report Run
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportRunCreateParams'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportRun'
    get:
      tags:
        - ReportRuns
      summary: List all Report Runs
      operationId: ReportRuns_listAll
      security:
        - TilledApiKey: []
        - JWT: []
      description: Returns a list of report runs
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - description: >-
            Only return ReportRuns whose type is included by this array.
            Examples: `?type=payments_summary_1,payouts_summary_2` and
            `?type=payouts_summary_2`.
          name: type
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - payments_summary_1
                - payouts_summary_1
                - payouts_summary_2
                - fees_summary_1
                - processing_summary_1
                - disputes_summary_1
                - interchange_detail_1
        - description: >-
            Only return ReportRuns whose status is included by this array.
            Examples: `?status=finished` and `?status=finished,queued`.
          name: status
          required: false
          in: query
          schema:
            type: array
            items:
              type: string
              enum:
                - queued
                - finished
                - failed
        - description: >-
            The (zero-based) offset of the first item in the collection to
            return.
          name: offset
          required: false
          in: query
          schema:
            minimum: 0
            default: 0
            type: number
        - description: >-
            The maximum number of entries to return. If the value exceeds the
            maximum, then the maximum value will be used.
          name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 100
            default: 30
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportRunRetrieveParams'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportRunsListAllResponse'
  /v1/report-runs/{id}:
    get:
      tags:
        - ReportRuns
      summary: Get a Report Run
      operationId: ReportRuns_getById
      security:
        - TilledApiKey: []
        - JWT: []
      description: Retrieves the report run with the given ID.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportRun'
  /v1/subscriptions:
    post:
      tags:
        - Subscriptions
      summary: Create a Subscription
      operationId: Subscriptions_createNewSubscription
      security:
        - TilledApiKey: []
        - JWT: []
      description: Creates a new subscription on an existing customer.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionCreateParams'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
    get:
      tags:
        - Subscriptions
      summary: List all Subscriptions
      operationId: Subscriptions_listAll
      security:
        - TilledApiKey: []
        - JWT: []
      description: Returns a list of your subscriptions.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - description: >-
            `metadata` key-value pairs to filter by. Only exact matches on the
            key-value pair(s) will be returned. Example:
            `?metadata[internal_customer_id]=7cb1159d-875e-47ae-a309-319fa7ff395b`.
          name: metadata
          required: false
          in: query
          style: deepObject
          explode: true
          schema:
            additionalProperties:
              type: string
            type: object
        - description: The ID of the customer whose subscriptions will be retrieved.
          name: customer_id
          required: false
          in: query
          schema:
            type: string
        - description: The status of the subscriptions to retrieve.
          name: status
          required: false
          in: query
          schema:
            enum:
              - active
              - canceled
              - past_due
              - paused
              - pending
            type: string
        - description: Maximum `next_payment_at` value to filter by (inclusive).
          name: next_payment_at_lte
          required: false
          in: query
          schema:
            format: date-time
            type: string
        - description: Minimum `next_payment_at` value to filter by (inclusive).
          name: next_payment_at_gte
          required: false
          in: query
          schema:
            format: date-time
            type: string
        - description: >-
            The (zero-based) offset of the first item in the collection to
            return.
          name: offset
          required: false
          in: query
          schema:
            minimum: 0
            default: 0
            type: number
        - description: >-
            The maximum number of entries to return. If the value exceeds the
            maximum, then the maximum value will be used.
          name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 100
            default: 30
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionsListAllResponse'
  /v1/subscriptions/{id}:
    patch:
      tags:
        - Subscriptions
      summary: Update a Subscription
      operationId: Subscriptions_updateSubscription
      security:
        - TilledApiKey: []
        - JWT: []
      description: Update an existing subscription to match the specified parameters.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionUpdateParams'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
    get:
      tags:
        - Subscriptions
      summary: Get a Subscription
      operationId: Subscriptions_getById
      security:
        - TilledApiKey: []
        - JWT: []
      description: Retrieves the subscription with the given ID.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
  /v1/subscriptions/{id}/cancel:
    post:
      tags:
        - Subscriptions
      summary: Cancel a Subscription
      operationId: Subscriptions_cancelSubscription
      security:
        - TilledApiKey: []
        - JWT: []
      description: >-
        Cancels a customer's subscription immediately. The customer will not be
        charged again for the subscription.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
  /v1/subscriptions/{id}/pause:
    post:
      tags:
        - Subscriptions
      summary: Pause a Subscription
      operationId: Subscriptions_pauseSubscription
      security:
        - TilledApiKey: []
        - JWT: []
      description: >-
        Pauses a subscription from generating payments until the (optionally)
        specified `resumes_at` date.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionPauseParams'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
  /v1/subscriptions/{id}/resume:
    post:
      tags:
        - Subscriptions
      summary: Resume a Subscription
      operationId: Subscriptions_resumeSubscription
      security:
        - TilledApiKey: []
        - JWT: []
      description: >-
        Resumes a paused subscription immediately. The next charge will occur on
        the normally scheduled billing cycle.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
  /v1/subscriptions/{id}/retry:
    post:
      tags:
        - Subscriptions
      summary: Retry a Subscription
      operationId: Subscriptions_retryPaymentAt
      security:
        - TilledApiKey: []
        - JWT: []
      description: >-
        Retry a subscription payment at the (optionally) specified
        `next_payment_at` date.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionRetryParams'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Subscription'
  /v1/terminal-readers:
    get:
      tags:
        - TerminalReaders
      summary: List all Terminal Readers
      operationId: TerminalReaders_listAll
      security:
        - TilledApiKey: []
        - JWT: []
      description: Returns a list of an account's terminal readers.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - description: >-
            `metadata` key-value pairs to filter by. Only exact matches on the
            key-value pair(s) will be returned. Example:
            `?metadata[internal_customer_id]=7cb1159d-875e-47ae-a309-319fa7ff395b`.
          name: metadata
          required: false
          in: query
          style: deepObject
          explode: true
          schema:
            additionalProperties:
              type: string
            type: object
        - description: >-
            The partial search of text fields. Supports searching by
            `terminal_reader.description`, `terminal_reader.serial_number`,

            `terminal_reader.type`
          name: q
          required: false
          in: query
          schema:
            type: string
        - description: Whether or not to include the results from any connected accounts.
          name: include_connected_accounts
          required: false
          in: query
          schema:
            default: false
            type: boolean
        - description: Minimum `created_at` value to filter by (inclusive).
          name: created_at_gte
          required: false
          in: query
          schema:
            format: date-time
            type: string
        - description: Maximum `created_at` value to filter by (inclusive).
          name: created_at_lte
          required: false
          in: query
          schema:
            format: date-time
            type: string
        - description: >-
            The (zero-based) offset of the first item in the collection to
            return.
          name: offset
          required: false
          in: query
          schema:
            minimum: 0
            default: 0
            type: number
        - description: >-
            The maximum number of entries to return. If the value exceeds the
            maximum, then the maximum value will be used.
          name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 100
            default: 30
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminalReadersListAllResponse'
  /v1/terminal-readers/{id}:
    get:
      tags:
        - TerminalReaders
      summary: Get a Terminal Reader
      operationId: TerminalReaders_getById
      security:
        - TilledApiKey: []
        - JWT: []
      description: Retrieves the terminal reader with the given ID.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminalReader'
    post:
      tags:
        - TerminalReaders
      summary: Update a Terminal Reader
      operationId: TerminalReaders_updateReader
      security:
        - TilledApiKey: []
        - JWT: []
      description: >-
        Updates the terminal reader. Any parameters not provided will be left
        unchanged.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TerminalReaderUpdateParams'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminalReader'
  /v1/terminal-readers/{id}/status:
    get:
      tags:
        - TerminalReaders
      summary: Get a Terminal Reader status
      operationId: TerminalReaders_getStatus
      security:
        - TilledApiKey: []
        - JWT: []
      description: Retrieves the network connection status of a terminal reader.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminalReaderConnectionStatus'
  /v1/user-invitations:
    post:
      tags:
        - Users
      summary: Create a User Invitation
      operationId: Users_sendInvitation
      security:
        - TilledApiKey: []
        - JWT: []
      description: >-
        Creates a user invitation that is subsequently sent to the specified

        `email`. Once the user registers for an account, the invitation is
        deleted.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInvitationCreateParams'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInvitation'
    get:
      tags:
        - Users
      summary: List all User Invitations
      operationId: Users_listAllUserInvitations
      security:
        - TilledApiKey: []
        - JWT: []
      description: Returns a list of your account's user invitations.
      parameters:
        - description: >-
            The (zero-based) offset of the first item in the collection to
            return.
          name: offset
          required: false
          in: query
          schema:
            minimum: 0
            default: 0
            type: number
        - description: >-
            The maximum number of entries to return. If the value exceeds the
            maximum, then the maximum value will be used.
          name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 100
            default: 30
            type: number
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersListAllUserInvitationsResponse'
  /v1/user-invitations/check/{id}:
    get:
      tags:
        - Users
      summary: Check a User Invitation
      operationId: Users_checkUserInvitation
      description: Checks the existence of the user invitation with the given ID.
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInvitationCheck'
  /v1/user-invitations/{id}:
    get:
      tags:
        - Users
      summary: Get a User Invitation
      operationId: Users_getInvitationById
      security:
        - TilledApiKey: []
        - JWT: []
      description: Retrieves the user invitation with the given ID.
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInvitation'
    delete:
      tags:
        - Users
      summary: Delete a User Invitation
      operationId: Users_deleteUserInvitation
      security:
        - TilledApiKey: []
        - JWT: []
      description: Permanently deletes a user invitation.
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
      responses:
        '204':
          description: ''
  /v1/user-invitations/{id}/resend:
    post:
      tags:
        - Users
      summary: Resend a User Invitation
      operationId: Users_resendInvitation
      security:
        - TilledApiKey: []
        - JWT: []
      description: Resends the user invitation with the given ID.
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInvitation'
  /v1/users:
    post:
      tags:
        - Users
      summary: Create a User
      operationId: Users_createNewUser
      security:
        - TilledApiKey: []
        - JWT: []
      description: Creates a user.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateParams'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      deprecated: true
    get:
      tags:
        - Users
      summary: List all Users
      operationId: Users_getAll
      security:
        - TilledApiKey: []
        - JWT: []
      description: Returns a list of your account's users.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - description: Whether or not to include the results from any connected accounts.
          name: include_connected_accounts
          required: false
          in: query
          schema:
            default: false
            type: boolean
        - description: >-
            The (zero-based) offset of the first item in the collection to
            return.
          name: offset
          required: false
          in: query
          schema:
            minimum: 0
            default: 0
            type: number
        - description: >-
            The maximum number of entries to return. If the value exceeds the
            maximum, then the maximum value will be used.
          name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 100
            default: 30
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersGetAllResponse'
  /v1/users/{id}:
    get:
      tags:
        - Users
      summary: Get a User
      operationId: Users_getUserById
      security:
        - TilledApiKey: []
        - JWT: []
      description: Retrieves the user with the given ID.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    patch:
      tags:
        - Users
      summary: Update a User
      operationId: Users_updateUser
      security:
        - TilledApiKey: []
        - JWT: []
      description: Updates the user. Any parameters not provided will be left unchanged.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateParams'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      tags:
        - Users
      summary: Delete a User
      operationId: Users_removeUser
      security:
        - TilledApiKey: []
        - JWT: []
      description: >-
        Removes user access to the specified account. If this is the user's only
        account, the user is permanently deleted. This cannot be undone.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersRemoveUserResponse'
  /v1/webhook-endpoints:
    post:
      tags:
        - WebhookEndpoints
      summary: Create a Webhook Endpoint
      operationId: WebhookEndpoints_createEndpoint
      security:
        - TilledApiKey: []
        - JWT: []
      description: >-
        A webhook endpoint must have a url and a list of enabled_events. The
        specified url will be notified about events from all connected accounts
        along with your account.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookEndpointCreateParams'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookEndpoint'
    get:
      tags:
        - WebhookEndpoints
      summary: List all Webhook Endpoints
      operationId: WebhookEndpoints_getAll
      security:
        - TilledApiKey: []
        - JWT: []
      description: Returns a list of your webhook endpoints.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - description: >-
            The (zero-based) offset of the first item in the collection to
            return.
          name: offset
          required: false
          in: query
          schema:
            minimum: 0
            default: 0
            type: number
        - description: >-
            The maximum number of entries to return. If the value exceeds the
            maximum, then the maximum value will be used.
          name: limit
          required: false
          in: query
          schema:
            minimum: 1
            maximum: 100
            default: 30
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookEndpointsGetAllResponse'
  /v1/webhook-endpoints/{id}:
    get:
      tags:
        - WebhookEndpoints
      summary: Get a Webhook Endpoint
      operationId: WebhookEndpoints_getById
      security:
        - TilledApiKey: []
        - JWT: []
      description: Retrieves the webhook endpoint with the given ID.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookEndpoint'
    patch:
      tags:
        - WebhookEndpoints
      summary: Update a Webhook Endpoint
      operationId: WebhookEndpoints_updateEndpoint
      security:
        - TilledApiKey: []
        - JWT: []
      description: >-
        Updates the webhook endpoint. Any parameters not provided will be left
        unchanged.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookEndpointUpdateParams'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookEndpoint'
    delete:
      tags:
        - WebhookEndpoints
      summary: Delete a Webhook Endpoint
      operationId: WebhookEndpoints_deleteEndpoint
      security:
        - TilledApiKey: []
        - JWT: []
      description: Delete a webhook endpoint.
      parameters:
        - description: >-
            The id of the Tilled Account (usually starting with the prefix
            `acct_`) that the request is performed on behalf of.
          name: tilled-account
          in: header
          required: true
          schema:
            type: string
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookEndpointsDeleteEndpointResponse'
components:
  securitySchemes:
    TilledApiKey:
      description: >-
        Tilled uses API keys to authenticate requests. You can view and manage
        your API keys in the Tilled Dashboard.
      type: apiKey
      in: header
      name: tilled-api-key
    JWT:
      description: >-
        You can create a JSON Web Token (JWT) via our LOGIN resource. Usage
        format: `Bearer <JWT>`
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    AccessTokenRefreshParams:
      type: object
      properties:
        refresh_token:
          description: The bcrypted refresh token data.
          type: string
      required:
        - refresh_token
    Account:
      type: object
      properties:
        bank_accounts:
          description: Bank accounts attached to this account. Primarily used for payouts.
          items:
            $ref: '#/components/schemas/BankAccount'
          type: array
        business_profile:
          $ref: '#/components/schemas/BusinessProfile'
        capabilities:
          description: >-
            Capabilities represent the assigned product codes to a given
            merchant account and their status.
          items:
            $ref: '#/components/schemas/AccountCapability'
          type: array
        created_at:
          description: Time at which the object was created.
          format: date-time
          type: string
        document_requests:
          description: >-
            Documents that have been requested for an account, which are either
            in the `requested` or `submitted` status
          items:
            $ref: '#/components/schemas/AccountDocument'
          type: array
        email:
          description: The primary user's email address.
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        merchant_support:
          description: Whether Tilled is providing support for this account.
          deprecated: true
          type: boolean
        metadata:
          description: >-
            Set of [key-value pairs](https://api.tilled.com) that you can attach
            to an object. This can be useful for storing additional information
            about the object in a structured format.
          additionalProperties:
            type: string
          example:
            order_id: '100123'
            internal_customer_id: 7cb1159d-875e-47ae-a309-319fa7ff395b
          type: object
        name:
          description: The business name or individual name.
          type: string
        settings:
          $ref: '#/components/schemas/AccountSettings'
        terminal_readers:
          description: Terminal Readers attached to this account.
          items:
            $ref: '#/components/schemas/TerminalReader'
          type: array
        type:
          description: The Tilled account type. Can be `partner` or `merchant`.
          enum:
            - partner
            - merchant
          type: string
        updated_at:
          description: Time at which the object was last updated.
          format: date-time
          type: string
        white_label_domain:
          description: The `partner` white label domain.
          type: string
      required:
        - bank_accounts
        - created_at
        - document_requests
        - id
        - terminal_readers
        - type
        - updated_at
      x-konfig-properties:
        business_profile:
          description: The Business Profile for this account.
        settings:
          description: The account settings object.
    AccountCapability:
      type: object
      properties:
        id:
          description: Unique identifier for the object.
          type: string
        onboarding_application_progress:
          description: >-
            The percentage of required fields completed in the onboarding
            application.
          type: number
        onboarding_application_url:
          description: The URL for the merchant's onboarding application.
          type: string
        pricing_template:
          $ref: '#/components/schemas/PricingTemplate'
        product_code:
          $ref: '#/components/schemas/ProductCode'
        requirements_errors:
          description: >-
            The fields that need to be collected again because validation failed
            for some reason.
          items:
            $ref: '#/components/schemas/AccountRequirementsError'
          type: array
        status:
          description: >-
            Status of the associated product code as part of the onboarding
            process. Only the `active` status represents that payments can be
            handled by this account for this given product code.


            `created` The capability has been created but no further action
            taken. Generally, this is the state of all capabilities when a
            merchant has been created but the onboarding process has not yet
            started.


            `started` The onboarding process has been started but not yet
            submitted.


            `submitted` The onboarding process for this product code has been
            submitted.


            `active` This associated product code is active for payments on this
            account.


            `disabled` This associated product code is not valid for payments on
            this account.
          enum:
            - created
            - started
            - submitted
            - active
            - disabled
            - in_review
            - rejected
            - withdrawn
          type: string
      required:
        - id
        - onboarding_application_progress
        - pricing_template
        - product_code
        - requirements_errors
        - status
      x-konfig-properties:
        pricing_template:
          description: The pricing applied to/associated with this account.
        product_code:
          description: |-
            *Deprecated: See `pricing_template` for account details.*

            The product code applied to/associated with this account.
          deprecated: true
    AccountCapabilityCreateParams:
      type: object
      properties:
        pricing_template_id:
          description: >-
            The PricingTemplate id defining the capability to add to the
            account. Merchant accounts may only have 1 capability per
            `payment_method_type`.
          type: string
      required:
        - pricing_template_id
    AccountCapabilityUpdateParams:
      type: object
      properties:
        pricing_template_id:
          description: >-
            The PricingTemplate id defining the capability to add to the
            account. Merchant accounts may only have 1 capability per
            `payment_method_type`.
          type: string
      required:
        - pricing_template_id
    AccountCreateParams:
      type: object
      properties:
        bank_account:
          $ref: '#/components/schemas/BankAccountCreateParams'
        email:
          description: The primary user's email address.
          type: string
        metadata:
          description: >-
            Set of [key-value pairs](https://api.tilled.com) that you can attach
            to an object. This can be useful for storing additional information
            about the object in a structured format. Individual keys can be
            unset by posting an empty value (i.e. `''` or `null`) to them. All
            keys can be unset by posting an empty value (i.e. `{}` or `null`) to
            `metadata`.
          additionalProperties:
            type: string
          example:
            order_id: '100123'
            internal_customer_id: 7cb1159d-875e-47ae-a309-319fa7ff395b
          type: object
        name:
          description: The business name or individual name.
          pattern: /^[^<>;]*$/
          type: string
        pricing_template_ids:
          description: >-
            An array of Pricing Template ids to associate with the `merchant`
            account. This is ignored for `partner` accounts. Only 1 pricing
            template per `payment_method_type` is allowed. For example, only 1
            `card` and 1 `ach_debit`  template may be submitted for a given
            merchant. You cannot specify 2 templates of type `card` for a single
            merchant. You should create a separate merchant account in that
            case.


            *Note: Pass an empty array to configure without pricing for now,
            pricing must be specified before an onboarding application is made
            available*
          items:
            type: string
          type: array
        product_code_ids:
          description: >-
            *Deprecated: Use `pricing_template_ids` to specify merchant
            pricing.*


            An array of ProductCode ids to associate with the `merchant`
            account. This is ignored for `partner` accounts. Only 1 product code
            per `payment_method_type` is allowed. For example, only 1 `card` and
            1 `ach_debit` may be submitted for a given merchant. You cannot
            specify 2 product codes of type `card` for a single merchant. You
            should create a separate merchant account in that case.


            *Note: If your account contains multiple product codes for a given
            payment method type, then you must explicitly specify the one you
            want to use. If your account only contains a single product code per
            payment method type then those values will be the default. If your
            account is enabled to process in both the United States and Canada,
            new merchant accounts will be configured with US product codes if no
            value is specified for `product_code_ids`.*
          deprecated: true
          items:
            type: string
          type: array
        settings:
          $ref: '#/components/schemas/AccountSettingsCreateParams'
      required:
        - email
      x-konfig-properties:
        bank_account:
          description: >-
            A bank account to attach to this account for receiving payouts.
            (Note: currently this is only used for `partner` account payouts)


            By default, providing a bank account sets it as the new default bank
            account for its currency.
        settings:
          description: Account Settings
    AccountDocument:
      type: object
      properties:
        id:
          type: string
        requestNotes:
          type: string
        status:
          enum:
            - requested
            - submitted
            - rejected
            - verified
          type: string
        subtype:
          enum:
            - bank_letter_voided_check
            - ein_letter
            - articles_of_incorp
            - business_license
            - utility_bill
            - processing_statement
            - financial_statement
            - 501c3
            - tax_return
            - invoice
            - dl_passport
            - dl_back
            - business_model
            - pricing_model
            - website
            - shopping_cart
            - other
          type: string
        type:
          enum:
            - file
            - written
          type: string
      required:
        - id
        - status
        - subtype
        - type
    AccountRequirementsError:
      type: object
      properties:
        reason:
          description: >-
            The informative message that indicates the error type and additional
            details about the error.
          type: string
        requirement:
          description: >-
            The specific account onboarding requirement field that needs to be
            resolved.
          type: string
      required:
        - reason
        - requirement
    AccountRole:
      type: object
      properties:
        account_id:
          description: The ID of the account associated with this role.
          type: string
        role:
          description: >-
            The user's role in this account. The roles have varied restrictions
            on the actions they can take.
          enum:
            - owner
            - admin
            - developer
            - analyst
            - view_only
            - merchant_owner
            - merchant_admin
          type: string
      required:
        - account_id
        - role
    AccountSettings:
      type: object
      properties:
        branding:
          $ref: '#/components/schemas/AccountSettingsBranding'
      x-konfig-properties:
        branding:
          description: The account branding settings.
    AccountSettingsBranding:
      type: object
      properties:
        created_at:
          description: Time at which the object was created.
          format: date-time
          type: string
        global_email_notifications:
          description: >-
            Turn on or off email notifications for all merchants by default.
            Individual merchants can override these settings later. Defaults to
            true.
          deprecated: true
          type: boolean
        global_email_settings:
          $ref: '#/components/schemas/GlobalEmailSettings'
        logo:
          $ref: '#/components/schemas/File'
        merchant_support_center_name:
          description: Optional customized Support Center title
          type: string
        merchant_support_center_url:
          description: Optional customized Support Center URL
          type: string
        primary_color:
          description: The primary hexadecimal color value.
          type: string
        secondary_color:
          description: The secondary hexadecimal color value.
          type: string
        support_email:
          description: Partner's support email address
          type: string
        support_phone:
          description: Partner's support phone number
          type: string
        updated_at:
          description: Time at which the object was last updated.
          format: date-time
          type: string
      required:
        - created_at
        - global_email_notifications
        - global_email_settings
        - logo
        - updated_at
      x-konfig-properties:
        global_email_settings:
          description: >-
            Turn on or off email notifications for different email types, for
            all merchants, by default. Individual merchants can override these
            settings later. Defaults to true for all types.
    AccountSettingsBrandingCreateParams:
      type: object
      properties:
        global_email_notifications:
          description: >-
            *Will set every `global_email_settings` email type to the specified
            boolean value if `global_email_settings` not provided.*


            Turn on or off email notifications for all merchants by default.
            Individual merchants can override these settings later. Defaults to
            true.
          deprecated: true
          type: boolean
        global_email_settings:
          $ref: '#/components/schemas/GlobalEmailSettings'
        logo_file_id:
          description: >-
            The File ID of an uploaded [File](https://api.tilled.com) of type
            `logo`
          type: string
        merchant_support_center_name:
          description: Optional customized Support Center title
          type: string
        merchant_support_center_url:
          description: Optional customized Support Center URL
          type: string
        primary_color:
          description: A string indicating a hexadecimal color.
          type: string
        secondary_color:
          description: A string indicating a hexadecimal color.
          type: string
        support_email:
          description: Partner's support email address
          type: string
        support_phone:
          description: Partner's support phone number
          type: string
      x-konfig-properties:
        global_email_settings:
          description: >-
            Turn on or off email notifications for different email types, for
            all merchants, by default. Individual merchants can override these
            settings later. Defaults to true for all types.
    AccountSettingsCreateParams:
      type: object
      properties:
        branding:
          $ref: '#/components/schemas/AccountSettingsBrandingCreateParams'
      x-konfig-properties:
        branding:
          description: The account branding settings.
    AccountUpdateParams:
      type: object
      properties:
        bank_account:
          $ref: '#/components/schemas/BankAccountCreateParams'
        email:
          description: The primary user's email address.
          type: string
        metadata:
          description: >-
            Set of [key-value pairs](https://api.tilled.com) that you can attach
            to an object. This can be useful for storing additional information
            about the object in a structured format. Individual keys can be
            unset by posting an empty value (i.e. `''` or `null`) to them. All
            keys can be unset by posting an empty value (i.e. `{}` or `null`) to
            `metadata`.
          additionalProperties:
            type: string
          example:
            order_id: '100123'
            internal_customer_id: 7cb1159d-875e-47ae-a309-319fa7ff395b
          type: object
        name:
          description: The business name or individual name.
          pattern: /^[^<>;]*$/
          type: string
        settings:
          $ref: '#/components/schemas/AccountSettingsCreateParams'
        white_label_domain:
          description: >-
            The custom domain the `partner` chooses to reflect on all of its
            `merchant` accounts as part of the white label settings. It requires
            `paymentsonline.io` to be appended to the string to be accepted as a
            valid URL (i.e. `https://customdomain.paymentsonline.io`).


            *Note: This feature is only available to `Partner` accounts.*
          type: string
      x-konfig-properties:
        bank_account:
          description: >-
            A bank account to attach to this account for receiving payouts.
            (Note: currently this is only used for `partner` account payouts)


            By default, providing a bank account sets it as the new default bank
            account for its currency.
        settings:
          description: Account Settings
    AchDebitDetails:
      type: object
      properties:
        account_type:
          description: Account type
          enum:
            - checking
            - savings
            - unknown
          type: string
        bank_name:
          description: Name of the bank associated to this Ach Debit.
          type: string
        last2:
          description: The last 2 digits of the bank account number.
          type: string
        routing_number:
          description: >-
            Nine-digit code that identifies specific financial institution in
            the US.
          type: string
    AchDebitSingleUseToken:
      type: object
      properties:
        created_at:
          description: Time at which the object was created.
          format: date-time
          type: string
        details:
          $ref: '#/components/schemas/AchDebitDetails'
        expires_at:
          description: The time at which the token expires and is no longer available.
          format: date-time
          type: string
        payment_token:
          description: >-
            The single-use token that is capable of being used to generate an
            `ach_debit` Payment Method. It represents bank account details.
          type: string
        updated_at:
          description: Time at which the object was last updated.
          format: date-time
          type: string
      required:
        - created_at
        - expires_at
        - payment_token
        - updated_at
      x-konfig-properties:
        details:
          description: This hash contains details about the ACH Debit bank account.
    Address:
      type: object
      properties:
        city:
          description: City, district, suburb, town, or village.
          type: string
        country:
          description: >-
            2-digit Country code (e.g. 'US', 'CA') [See ISO 3166-1
            alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
          type: string
        created_at:
          description: Time at which the object was created.
          format: date-time
          type: string
        id:
          type: string
        postal_code:
          description: Zip code or postal code of the address. No special characters.
          type: string
        state:
          description: >-
            State/province/region of the address. For US and CA use 2-digit
            state/province codes (e.g. 'AL', 'AK', 'BC', 'ON', 'etc'.)
          type: string
        street:
          description: Address line 1 (e.g., street, PO Box, or company name).
          type: string
        street2:
          description: Address line 2 (e.g., apartment, suite, unit, or building).
          type: string
        updated_at:
          description: Time at which the object was last updated.
          format: date-time
          type: string
      required:
        - created_at
        - id
        - updated_at
    ApiKey:
      type: object
      properties:
        account_id:
          description: The id of the associated account.
          type: string
        created_at:
          description: Time at which the object was created.
          format: date-time
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        last_used:
          description: Time at which the key was last used to authenticate with the API.
          format: date-time
          type: string
        name:
          description: >-
            The string that you assign to describe the resource. It defaults to
            '`type` Key' (e.g. 'Secret Key' and 'Publishable Key')
          type: string
        scopes:
          description: >-
            The list of scopes to define the access for this key. You may
            specify `['*']` to enable all scopes, except those that require
            explicit selection.
          items:
            type: string
            enum:
              - '*'
              - accounts:delete
              - accounts:read
              - accounts:write
              - api_keys:read
              - api_keys:write
              - apple_pay_domains:read
              - apple_pay_domains:write
              - auth_links:read
              - auth_links:write
              - balance_transactions:read
              - bank_accounts:read
              - bank_accounts:write
              - charges:read
              - checkout_sessions:read
              - checkout_sessions:write
              - customers:read
              - customers:write
              - disputes:read
              - disputes:write
              - events:read
              - files:read
              - files:write
              - onboarding:read
              - onboarding:write
              - outbound_transfers:read
              - outbound_transfers:write
              - payment_intents:read
              - payment_intents:write
              - payment_methods:read
              - payment_methods:write
              - payouts:read
              - payouts:write
              - platform_fees:read
              - pricing_templates:read
              - pricing_templates:write
              - product_codes:read
              - refunds:read
              - refunds:write
              - report_runs:read
              - report_runs:write
              - subscriptions:read
              - subscriptions:write
              - terminal_readers:read
              - terminal_readers:write
              - user_invitations:read
              - user_invitations:write
              - users:read
              - users:write
              - webhook_endpoints:read
              - webhook_endpoints:write
          type: array
        type:
          description: >-
            The type of API key.


            `secret` can be used to authenticate all endpoints.

            `publishable` is used in your frontend application and can only
            access a handful of endpoints (e.g. confirm a Payment Intent).
          enum:
            - publishable
            - secret
          type: string
        updated_at:
          description: Time at which the object was last updated.
          format: date-time
          type: string
        value:
          description: >-
            The actual value of the API key to be included in the
            `tilled-api-key` header for authentication. `secret` keys will have
            a redacted value except when initially created.
          type: string
      required:
        - account_id
        - created_at
        - id
        - name
        - scopes
        - type
        - updated_at
        - value
    ApiKeyCreateParams:
      type: object
      properties:
        name:
          description: >-
            A brief name or description of the API that will help you remember
            what it is used for.
          pattern: /^[^<>]*$/
          type: string
        scopes:
          description: >-
            The list of scopes to define the access for this key. You may
            specify `['*']` (default) to enable all scopes, except those that
            require explicit selection. Scopes are ignored for keys of type
            `publishable`.
          items:
            type: string
            enum:
              - '*'
              - accounts:delete
              - accounts:read
              - accounts:write
              - api_keys:read
              - api_keys:write
              - apple_pay_domains:read
              - apple_pay_domains:write
              - auth_links:read
              - auth_links:write
              - balance_transactions:read
              - bank_accounts:read
              - bank_accounts:write
              - charges:read
              - checkout_sessions:read
              - checkout_sessions:write
              - customers:read
              - customers:write
              - disputes:read
              - disputes:write
              - events:read
              - files:read
              - files:write
              - onboarding:read
              - onboarding:write
              - outbound_transfers:read
              - outbound_transfers:write
              - payment_intents:read
              - payment_intents:write
              - payment_methods:read
              - payment_methods:write
              - payouts:read
              - payouts:write
              - platform_fees:read
              - pricing_templates:read
              - pricing_templates:write
              - product_codes:read
              - refunds:read
              - refunds:write
              - report_runs:read
              - report_runs:write
              - subscriptions:read
              - subscriptions:write
              - terminal_readers:read
              - terminal_readers:write
              - user_invitations:read
              - user_invitations:write
              - users:read
              - users:write
              - webhook_endpoints:read
              - webhook_endpoints:write
          type: array
        type:
          description: >-
            `secret` Must be kept secret at all times.


            `publishable` A publishable key is only used for creating payment
            tokens on your public facing website or integration.
          enum:
            - publishable
            - secret
          type: string
      required:
        - type
    ApiKeyUpdateParams:
      type: object
      properties:
        name:
          description: >-
            A brief name or description of the API that will help you remember
            what it is used for.
          pattern: /^[^<>]*$/
          type: string
        scopes:
          description: >-
            The list of scopes to define the access for this key. You may
            specify `['*']` (default) to enable all scopes, except those that
            require explicit selection. Scopes are ignored for keys of type
            `publishable`.
          items:
            type: string
            enum:
              - '*'
              - accounts:delete
              - accounts:read
              - accounts:write
              - api_keys:read
              - api_keys:write
              - apple_pay_domains:read
              - apple_pay_domains:write
              - auth_links:read
              - auth_links:write
              - balance_transactions:read
              - bank_accounts:read
              - bank_accounts:write
              - charges:read
              - checkout_sessions:read
              - checkout_sessions:write
              - customers:read
              - customers:write
              - disputes:read
              - disputes:write
              - events:read
              - files:read
              - files:write
              - onboarding:read
              - onboarding:write
              - outbound_transfers:read
              - outbound_transfers:write
              - payment_intents:read
              - payment_intents:write
              - payment_methods:read
              - payment_methods:write
              - payouts:read
              - payouts:write
              - platform_fees:read
              - pricing_templates:read
              - pricing_templates:write
              - product_codes:read
              - refunds:read
              - refunds:write
              - report_runs:read
              - report_runs:write
              - subscriptions:read
              - subscriptions:write
              - terminal_readers:read
              - terminal_readers:write
              - user_invitations:read
              - user_invitations:write
              - users:read
              - users:write
              - webhook_endpoints:read
              - webhook_endpoints:write
          type: array
    ApplePayDomain:
      type: object
      properties:
        account_id:
          description: The ID of the Account associated with the domain.
          type: string
        created_at:
          description: Time at which the object was created.
          format: date-time
          type: string
        hostname:
          description: The apple pay domain hostname.
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        updated_at:
          description: Time at which the object was last updated.
          format: date-time
          type: string
      required:
        - account_id
        - created_at
        - hostname
        - id
        - updated_at
    ApplePayDomainCreateParams:
      type: object
      properties:
        hostname:
          description: >-
            The domain hostname. Requires 'https' protocol (e.g.
            'https://example.com')
          type: string
      required:
        - hostname
    AuthLinkCreateParams:
      type: object
      properties:
        expiration:
          description: Expiration of the Auth Link (i.e.. 1d, 7d, 30d)
          type: string
        metadata:
          description: >-
            Set of [key-value pairs](https://api.tilled.com) that you can attach
            to an object. This can be useful for storing additional information
            about the object in a structured format. Individual keys can be
            unset by posting an empty value (i.e. `''` or `null`) to them. All
            keys can be unset by posting an empty value (i.e. `{}` or `null`) to
            `metadata`.
          additionalProperties:
            type: string
          example:
            order_id: '100123'
            internal_customer_id: 7cb1159d-875e-47ae-a309-319fa7ff395b
          type: object
        redirect_url:
          description: >-
            The console url to redirect the user to after authenticating.
            Defaults to /dashboard if not provided.
          type: string
        user_id:
          description: The id of the user.
          type: string
      required:
        - expiration
        - user_id
    AuthLinkDto:
      type: object
      properties:
        account_id:
          description: >-
            The account id of the user that can authenticate with this auth
            link.
          type: string
        created_at:
          description: Time at which the auth link was created.
          format: date-time
          type: string
        expires_at:
          description: The expiration date of this auth link.
          format: date-time
          type: string
        id:
          description: The id of the auth link.
          type: string
        metadata:
          description: >-
            Set of key-value pairs that you can attach to an object. This can be
            useful for storing additional information about the object in a
            structured format. Individual keys can be unset by posting an empty
            value (i.e. `''` or `null`) to them. All keys can be unset by
            posting an empty value (i.e. `{}` or `null`) to `metadata`."
          additionalProperties:
            type: string
          example:
            order_id: '100123'
            internal_customer_id: 7cb1159d-875e-47ae-a309-319fa7ff395b
          type: object
        redeemed:
          description: Indicates whether this auth link has been redeemed.
          type: boolean
        redirect_url:
          description: >-
            The console url to redirect the user to after authenticating.
            Defaults to /dashboard if not provided.
          type: string
        updated_at:
          description: Time at which the auth link was last updated.
          format: date-time
          type: string
        url:
          description: The url to use for authenticating via auth link.
          type: string
        user_id:
          description: The id of the user that can authenticate with this auth link.
          type: string
      required:
        - account_id
        - created_at
        - id
        - redeemed
        - updated_at
        - url
        - user_id
    BLEBankAccount:
      type: object
      properties:
        account_holder_name:
          description: The name of the person or business that owns the bank account.
          pattern: /^[^<>]*$/
          type: string
        account_number:
          description: This is the bank account number
          maxLength: 20
          minLength: 1
          pattern: ^d+$
          type: string
        bank_name:
          description: Name of the financial institution.
          pattern: /^[^<>]*$/
          type: string
        routing_number:
          description: >-
            The routing number, sort code, or other country-appropriate
            institution number for the bank account. For US bank accounts, this
            is required and should be the 9-digit ACH routing number, not the
            wire routing number. For CA bank accounts, combine the transit and
            institution numbers to create a full routing number (for example, 
            if `transit = 12345` and `institution = 678`, then `routing_number =
            12345678`).
          type: string
        type:
          description: The bank account type
          enum:
            - checking
            - savings
          type: string
      required:
        - account_number
        - routing_number
    BalanceTransaction:
      type: object
      properties:
        description:
          description: >-
            An arbitrary string attached to the object. Often useful for
            displaying to users.
          type: string
        account_id:
          type: string
        amount:
          description: >-
            Gross amount of the transaction, in the smallest currency unit
            (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a
            zero-decimal currency). Can be negative for certain transaction
            types (e.g. `payout`, `refund`).
          type: number
        available_on:
          description: >-
            The date the transaction's net funds will become available in the
            Tilled balance.
          format: date-time
          type: string
        created_at:
          description: Time at which the object was created.
          format: date-time
          type: string
        currency:
          description: >-
            Three-letter [ISO currency
            code](https://www.iso.org/iso-4217-currency-codes.html), in
            lowercase.
          enum:
            - aud
            - cad
            - dkk
            - eur
            - hkd
            - jpy
            - nzd
            - nok
            - gbp
            - zar
            - sek
            - chf
            - usd
          type: string
        fee:
          description: >-
            Fees (in smallest currency unit) paid for this transaction.

            Note: Fees are now portrayed as individual balance transactions of
            `type = fee`.
          deprecated: true
          type: number
        fee_details:
          description: >-
            Detailed breakdown of the fees paid for this transaction.

            Note: Fees are now portrayed as individual balance transactions of
            `type = fee`. Refer to `fee_type` and `fee_subtype` for details.
          deprecated: true
          items:
            $ref: '#/components/schemas/BalanceTransactionFeeDetail'
          type: array
        fee_subtype:
          description: Fee subtype, if this transaction represents a fee (i.e. type = fee).
          enum:
            - approved_verification
            - declined_verification
            - approved_authorization
            - declined_authorization
            - reversed_authorization
            - completed_credit
            - declined_credit
            - completed_settlement
            - declined_settlement
            - approved_purchase_return_authorization
            - declined_purchase_return_authorization
            - acquirer_processing
            - amex_card_not_present
            - amex_dues_and_assessments
            - amex_international_assessment
            - discover_assessment
            - discover_data_usage
            - dues_and_assessments
            - fixed_acquirer_network
            - mastercard_annual_location
            - mastercard_assessment
            - mastercard_assessment_1000_plus
            - mastercard_digital_commerce_development
            - mastercard_digital_enablement
            - mastercard_international_assessment
            - mastercard_processing_integrity
            - nabu
            - transaction_integrity
            - visa_assessment
            - visa_debit_assessment
            - visa_international_assessment
            - visa_misuse_of_authorization
            - reversal
            - discount
            - transaction
            - account_setup
            - ach_return
            - monthly_account
            - monthly_minimum_processing
            - card_account_update
            - monthly_terminal
            - retrieval
            - apple_pay_balance_transfer
            - goods_and_services
            - harmonized_sales
          type: string
        fee_type:
          description: Fee type, if this transaction represents a fee (i.e. type = fee).
          enum:
            - discount
            - transaction
            - interchange
            - pass_through
            - platform
            - chargeback
            - administrative
            - tax
            - negative_rounding_adjustment
            - positive_rounding_adjustment
            - unknown
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        net:
          description: >-
            Net amount of the transaction, in smallest currency unit.

            Note: Fees are now portrayed as individual balance transactions of
            `type = fee`. `net` will no longer differ from `amount`.
          deprecated: true
          type: number
        payout_id:
          description: >-
            The id of the Payout, if any, associated with this balance
            transaction.
          type: string
        source_id:
          description: Tilled id to which this transaction is related
          type: string
        source_type:
          description: Tilled resource type of `source_id`.
          enum:
            - charge
            - refund
            - payout
            - payment_method
            - platform_fee
            - platform_fee_refund
            - dispute
            - account
            - outbound_transfer
          type: string
        status:
          description: >-
            If the transaction’s net funds are available in the Tilled balance
            yet. Either `available` or `pending`.
          enum:
            - available
            - pending
          type: string
        type:
          description: Transaction type.
          enum:
            - charge
            - charge_failure_refund
            - dispute
            - dispute_won
            - refund
            - refund_failure
            - adjustment
            - commission
            - payout
            - payout_cancel
            - payout_failure
            - fee
            - platform_fee
            - platform_fee_refund
            - outbound_transfer
            - outbound_transfer_cancel
            - outbound_transfer_failure
            - charge_fee
            - refund_fee
            - account_fee
            - payment_method_fee
            - tilled_fee
          type: string
        updated_at:
          description: Time at which the object was last updated.
          format: date-time
          type: string
      required:
        - account_id
        - amount
        - available_on
        - created_at
        - currency
        - fee
        - fee_details
        - id
        - net
        - source_id
        - source_type
        - status
        - type
        - updated_at
    BalanceTransactionFeeDetail:
      type: object
      properties:
        description:
          description: >-
            An arbitrary string attached to the object. Often useful for
            displaying to users.
          type: string
        account_id:
          description: ID of the `partner` account that earned the fee, if any.
          type: string
        amount:
          description: Amount of the fee, in currency minor units.
          type: number
        currency:
          description: >-
            Three-letter [ISO currency
            code](https://www.iso.org/iso-4217-currency-codes.html), in
            lowercase.
          enum:
            - aud
            - cad
            - dkk
            - eur
            - hkd
            - jpy
            - nzd
            - nok
            - gbp
            - zar
            - sek
            - chf
            - usd
          type: string
        type:
          description: 'Type of the fee, one of: `platform_fee`, `tilled_fee` or `tax`.'
          enum:
            - platform_fee
            - tilled_fee
            - tax
            - chargeback_fee
          type: string
      required:
        - amount
        - currency
        - type
    BalanceTransactionTypeSummaries:
      type: object
      properties:
        summary:
          items:
            $ref: '#/components/schemas/BalanceTransactionTypeSummary'
          type: array
        end_time:
          description: >-
            All `balance_transaction.created_at` values included in this summary
            are less than this value.
          format: date-time
          type: string
        start_time:
          description: >-
            All `balance_transaction.created_at` values included in this summary
            are greater than or equal to this value.
          format: date-time
          type: string
        time_unit:
          description: String indicating the unit of time to aggregate the summary of data.
          enum:
            - day
            - month
          type: string
      required:
        - end_time
        - start_time
        - summary
        - time_unit
    BalanceTransactionTypeSummary:
      type: object
      properties:
        amount:
          description: >-
            The sum of the `amount` value on the balance transactions grouped in
            this summary.
          type: number
        count:
          description: Total number of balance transactions grouped in this summary.
          type: number
        currency:
          description: >-
            The currency of each of the balance transactions grouped in this
            summary.
          enum:
            - aud
            - cad
            - dkk
            - eur
            - hkd
            - jpy
            - nzd
            - nok
            - gbp
            - zar
            - sek
            - chf
            - usd
          type: string
        fee:
          description: >-
            The sum of the `fee` value on the balance transactions grouped in
            this summary.
          type: number
        net:
          description: >-
            The sum of the `net` value on the balance transactions grouped in
            this summary.
          type: number
        type:
          description: >-
            The transaction type of each of the balance transactions grouped in
            this summary.
          enum:
            - charge
            - charge_failure_refund
            - dispute
            - dispute_won
            - refund
            - refund_failure
            - adjustment
            - commission
            - payout
            - payout_cancel
            - payout_failure
            - fee
            - platform_fee
            - platform_fee_refund
            - outbound_transfer
            - outbound_transfer_cancel
            - outbound_transfer_failure
            - charge_fee
            - refund_fee
            - account_fee
            - payment_method_fee
            - tilled_fee
          type: string
      required:
        - amount
        - count
        - currency
        - fee
        - net
        - type
    BalanceTransactionsSummary:
      type: object
      properties:
        parameters:
          $ref: '#/components/schemas/BalanceTransactionsSummaryQueryParams'
        data:
          description: >-
            The list of aggregate balance transaction data, grouped by unit of
            time, type, and currency.
          items:
            $ref: '#/components/schemas/BalanceTransactionTypeSummaries'
          type: array
      required:
        - data
        - parameters
      x-konfig-properties:
        parameters:
          description: >-
            The query parameters used to fetch these results, including default
            parameters.
    BalanceTransactionsSummaryQueryParams:
      type: object
      properties:
        created_at_gte:
          description: >-
            Minimum `created_at` value to filter by (inclusive). Defaults to the
            beginning of the current month.
          format: date-time
          type: string
        created_at_lte:
          description: >-
            Maximum `created_at` value to filter by (inclusive). Defaults to
            midnight tonight.
          format: date-time
          type: string
        include_connected_accounts:
          description: Whether or not to include the results from any connected accounts.
          default: false
          type: boolean
        time_unit:
          description: String indicating the unit of time to aggregate the summary of data.
          default: month
          enum:
            - day
            - month
          type: string
        time_zone:
          description: Time Zone by which to aggregate the results.
          default: America/Chicago
          enum:
            - Africa/Abidjan
            - Africa/Accra
            - Africa/Addis_Ababa
            - Africa/Algiers
            - Africa/Asmara
            - Africa/Asmera
            - Africa/Bamako
            - Africa/Bangui
            - Africa/Banjul
            - Africa/Bissau
            - Africa/Blantyre
            - Africa/Brazzaville
            - Africa/Bujumbura
            - Africa/Cairo
            - Africa/Casablanca
            - Africa/Ceuta
            - Africa/Conakry
            - Africa/Dakar
            - Africa/Dar_es_Salaam
            - Africa/Djibouti
            - Africa/Douala
            - Africa/El_Aaiun
            - Africa/Freetown
            - Africa/Gaborone
            - Africa/Harare
            - Africa/Johannesburg
            - Africa/Juba
            - Africa/Kampala
            - Africa/Khartoum
            - Africa/Kigali
            - Africa/Kinshasa
            - Africa/Lagos
            - Africa/Libreville
            - Africa/Lome
            - Africa/Luanda
            - Africa/Lubumbashi
            - Africa/Lusaka
            - Africa/Malabo
            - Africa/Maputo
            - Africa/Maseru
            - Africa/Mbabane
            - Africa/Mogadishu
            - Africa/Monrovia
            - Africa/Nairobi
            - Africa/Ndjamena
            - Africa/Niamey
            - Africa/Nouakchott
            - Africa/Ouagadougou
            - Africa/Porto-Novo
            - Africa/Sao_Tome
            - Africa/Timbuktu
            - Africa/Tripoli
            - Africa/Tunis
            - Africa/Windhoek
            - America/Adak
            - America/Anchorage
            - America/Anguilla
            - America/Antigua
            - America/Araguaina
            - America/Argentina/Buenos_Aires
            - America/Argentina/Catamarca
            - America/Argentina/ComodRivadavia
            - America/Argentina/Cordoba
            - America/Argentina/Jujuy
            - America/Argentina/La_Rioja
            - America/Argentina/Mendoza
            - America/Argentina/Rio_Gallegos
            - America/Argentina/Salta
            - America/Argentina/San_Juan
            - America/Argentina/San_Luis
            - America/Argentina/Tucuman
            - America/Argentina/Ushuaia
            - America/Aruba
            - America/Asuncion
            - America/Atikokan
            - America/Atka
            - America/Bahia
            - America/Bahia_Banderas
            - America/Barbados
            - America/Belem
            - America/Belize
            - America/Blanc-Sablon
            - America/Boa_Vista
            - America/Bogota
            - America/Boise
            - America/Buenos_Aires
            - America/Cambridge_Bay
            - America/Campo_Grande
            - America/Cancun
            - America/Caracas
            - America/Catamarca
            - America/Cayenne
            - America/Cayman
            - America/Chicago
            - America/Chihuahua
            - America/Coral_Harbour
            - America/Cordoba
            - America/Costa_Rica
            - America/Creston
            - America/Cuiaba
            - America/Curacao
            - America/Danmarkshavn
            - America/Dawson
            - America/Dawson_Creek
            - America/Denver
            - America/Detroit
            - America/Dominica
            - America/Edmonton
            - America/Eirunepe
            - America/El_Salvador
            - America/Ensenada
            - America/Fort_Wayne
            - America/Fortaleza
            - America/Glace_Bay
            - America/Godthab
            - America/Goose_Bay
            - America/Grand_Turk
            - America/Grenada
            - America/Guadeloupe
            - America/Guatemala
            - America/Guayaquil
            - America/Guyana
            - America/Halifax
            - America/Havana
            - America/Hermosillo
            - America/Indiana/Indianapolis
            - America/Indiana/Knox
            - America/Indiana/Marengo
            - America/Indiana/Petersburg
            - America/Indiana/Tell_City
            - America/Indiana/Vevay
            - America/Indiana/Vincennes
            - America/Indiana/Winamac
            - America/Indianapolis
            - America/Inuvik
            - America/Iqaluit
            - America/Jamaica
            - America/Jujuy
            - America/Juneau
            - America/Kentucky/Louisville
            - America/Kentucky/Monticello
            - America/Knox_IN
            - America/Kralendijk
            - America/La_Paz
            - America/Lima
            - America/Los_Angeles
            - America/Louisville
            - America/Lower_Princes
            - America/Maceio
            - America/Managua
            - America/Manaus
            - America/Marigot
            - America/Martinique
            - America/Matamoros
            - America/Mazatlan
            - America/Mendoza
            - America/Menominee
            - America/Merida
            - America/Metlakatla
            - America/Mexico_City
            - America/Miquelon
            - America/Moncton
            - America/Monterrey
            - America/Montevideo
            - America/Montreal
            - America/Montserrat
            - America/Nassau
            - America/New_York
            - America/Nipigon
            - America/Nome
            - America/Noronha
            - America/North_Dakota/Beulah
            - America/North_Dakota/Center
            - America/North_Dakota/New_Salem
            - America/Ojinaga
            - America/Panama
            - America/Pangnirtung
            - America/Paramaribo
            - America/Phoenix
            - America/Port-au-Prince
            - America/Port_of_Spain
            - America/Porto_Acre
            - America/Porto_Velho
            - America/Puerto_Rico
            - America/Rainy_River
            - America/Rankin_Inlet
            - America/Recife
            - America/Regina
            - America/Resolute
            - America/Rio_Branco
            - America/Rosario
            - America/Santa_Isabel
            - America/Santarem
            - America/Santiago
            - America/Santo_Domingo
            - America/Sao_Paulo
            - America/Scoresbysund
            - America/Shiprock
            - America/Sitka
            - America/St_Barthelemy
            - America/St_Johns
            - America/St_Kitts
            - America/St_Lucia
            - America/St_Thomas
            - America/St_Vincent
            - America/Swift_Current
            - America/Tegucigalpa
            - America/Thule
            - America/Thunder_Bay
            - America/Tijuana
            - America/Toronto
            - America/Tortola
            - America/Vancouver
            - America/Virgin
            - America/Whitehorse
            - America/Winnipeg
            - America/Yakutat
            - America/Yellowknife
            - Antarctica/Casey
            - Antarctica/Davis
            - Antarctica/DumontDUrville
            - Antarctica/Macquarie
            - Antarctica/Mawson
            - Antarctica/McMurdo
            - Antarctica/Palmer
            - Antarctica/Rothera
            - Antarctica/South_Pole
            - Antarctica/Syowa
            - Antarctica/Troll
            - Antarctica/Vostok
            - Arctic/Longyearbyen
            - Asia/Aden
            - Asia/Almaty
            - Asia/Amman
            - Asia/Anadyr
            - Asia/Aqtau
            - Asia/Aqtobe
            - Asia/Ashgabat
            - Asia/Ashkhabad
            - Asia/Baghdad
            - Asia/Bahrain
            - Asia/Baku
            - Asia/Bangkok
            - Asia/Beirut
            - Asia/Bishkek
            - Asia/Brunei
            - Asia/Calcutta
            - Asia/Chita
            - Asia/Choibalsan
            - Asia/Chongqing
            - Asia/Chungking
            - Asia/Colombo
            - Asia/Dacca
            - Asia/Damascus
            - Asia/Dhaka
            - Asia/Dili
            - Asia/Dubai
            - Asia/Dushanbe
            - Asia/Gaza
            - Asia/Harbin
            - Asia/Hebron
            - Asia/Ho_Chi_Minh
            - Asia/Hong_Kong
            - Asia/Hovd
            - Asia/Irkutsk
            - Asia/Istanbul
            - Asia/Jakarta
            - Asia/Jayapura
            - Asia/Jerusalem
            - Asia/Kabul
            - Asia/Kamchatka
            - Asia/Karachi
            - Asia/Kashgar
            - Asia/Kathmandu
            - Asia/Katmandu
            - Asia/Khandyga
            - Asia/Kolkata
            - Asia/Krasnoyarsk
            - Asia/Kuala_Lumpur
            - Asia/Kuching
            - Asia/Kuwait
            - Asia/Macao
            - Asia/Macau
            - Asia/Magadan
            - Asia/Makassar
            - Asia/Manila
            - Asia/Muscat
            - Asia/Nicosia
            - Asia/Novokuznetsk
            - Asia/Novosibirsk
            - Asia/Omsk
            - Asia/Oral
            - Asia/Phnom_Penh
            - Asia/Pontianak
            - Asia/Pyongyang
            - Asia/Qatar
            - Asia/Qyzylorda
            - Asia/Rangoon
            - Asia/Riyadh
            - Asia/Saigon
            - Asia/Sakhalin
            - Asia/Samarkand
            - Asia/Seoul
            - Asia/Shanghai
            - Asia/Singapore
            - Asia/Srednekolymsk
            - Asia/Taipei
            - Asia/Tashkent
            - Asia/Tbilisi
            - Asia/Tehran
            - Asia/Tel_Aviv
            - Asia/Thimbu
            - Asia/Thimphu
            - Asia/Tokyo
            - Asia/Ujung_Pandang
            - Asia/Ulaanbaatar
            - Asia/Ulan_Bator
            - Asia/Urumqi
            - Asia/Ust-Nera
            - Asia/Vientiane
            - Asia/Vladivostok
            - Asia/Yakutsk
            - Asia/Yekaterinburg
            - Asia/Yerevan
            - Atlantic/Azores
            - Atlantic/Bermuda
            - Atlantic/Canary
            - Atlantic/Cape_Verde
            - Atlantic/Faeroe
            - Atlantic/Faroe
            - Atlantic/Jan_Mayen
            - Atlantic/Madeira
            - Atlantic/Reykjavik
            - Atlantic/South_Georgia
            - Atlantic/St_Helena
            - Atlantic/Stanley
            - Australia/ACT
            - Australia/Adelaide
            - Australia/Brisbane
            - Australia/Broken_Hill
            - Australia/Canberra
            - Australia/Currie
            - Australia/Darwin
            - Australia/Eucla
            - Australia/Hobart
            - Australia/LHI
            - Australia/Lindeman
            - Australia/Lord_Howe
            - Australia/Melbourne
            - Australia/NSW
            - Australia/North
            - Australia/Perth
            - Australia/Queensland
            - Australia/South
            - Australia/Sydney
            - Australia/Tasmania
            - Australia/Victoria
            - Australia/West
            - Australia/Yancowinna
            - Brazil/Acre
            - Brazil/DeNoronha
            - Brazil/East
            - Brazil/West
            - Canada/Atlantic
            - Canada/Central
            - Canada/East-Saskatchewan
            - Canada/Eastern
            - Canada/Mountain
            - Canada/Newfoundland
            - Canada/Pacific
            - Canada/Saskatchewan
            - Canada/Yukon
            - Chile/Continental
            - Chile/EasterIsland
            - Etc/GMT
            - Etc/GMT+0
            - Etc/GMT+1
            - Etc/GMT+10
            - Etc/GMT+11
            - Etc/GMT+12
            - Etc/GMT+2
            - Etc/GMT+3
            - Etc/GMT+4
            - Etc/GMT+5
            - Etc/GMT+6
            - Etc/GMT+7
            - Etc/GMT+8
            - Etc/GMT+9
            - Etc/GMT-0
            - Etc/GMT-1
            - Etc/GMT-10
            - Etc/GMT-11
            - Etc/GMT-12
            - Etc/GMT-13
            - Etc/GMT-14
            - Etc/GMT-2
            - Etc/GMT-3
            - Etc/GMT-4
            - Etc/GMT-5
            - Etc/GMT-6
            - Etc/GMT-7
            - Etc/GMT-8
            - Etc/GMT-9
            - Etc/Greenwich
            - Etc/UCT
            - Etc/UTC
            - Etc/Universal
            - Etc/Zulu
            - Europe/Amsterdam
            - Europe/Andorra
            - Europe/Athens
            - Europe/Belfast
            - Europe/Belgrade
            - Europe/Berlin
            - Europe/Bratislava
            - Europe/Brussels
            - Europe/Bucharest
            - Europe/Budapest
            - Europe/Busingen
            - Europe/Chisinau
            - Europe/Copenhagen
            - Europe/Dublin
            - Europe/Gibraltar
            - Europe/Guernsey
            - Europe/Helsinki
            - Europe/Isle_of_Man
            - Europe/Istanbul
            - Europe/Jersey
            - Europe/Kaliningrad
            - Europe/Kiev
            - Europe/Lisbon
            - Europe/Ljubljana
            - Europe/London
            - Europe/Luxembourg
            - Europe/Madrid
            - Europe/Malta
            - Europe/Mariehamn
            - Europe/Minsk
            - Europe/Monaco
            - Europe/Moscow
            - Europe/Nicosia
            - Europe/Oslo
            - Europe/Paris
            - Europe/Podgorica
            - Europe/Prague
            - Europe/Riga
            - Europe/Rome
            - Europe/Samara
            - Europe/San_Marino
            - Europe/Sarajevo
            - Europe/Simferopol
            - Europe/Skopje
            - Europe/Sofia
            - Europe/Stockholm
            - Europe/Tallinn
            - Europe/Tirane
            - Europe/Tiraspol
            - Europe/Uzhgorod
            - Europe/Vaduz
            - Europe/Vatican
            - Europe/Vienna
            - Europe/Vilnius
            - Europe/Volgograd
            - Europe/Warsaw
            - Europe/Zagreb
            - Europe/Zaporozhye
            - Europe/Zurich
            - Indian/Antananarivo
            - Indian/Chagos
            - Indian/Christmas
            - Indian/Cocos
            - Indian/Comoro
            - Indian/Kerguelen
            - Indian/Mahe
            - Indian/Maldives
            - Indian/Mauritius
            - Indian/Mayotte
            - Indian/Reunion
            - Mexico/BajaNorte
            - Mexico/BajaSur
            - Mexico/General
            - Pacific/Apia
            - Pacific/Auckland
            - Pacific/Chatham
            - Pacific/Chuuk
            - Pacific/Easter
            - Pacific/Efate
            - Pacific/Enderbury
            - Pacific/Fakaofo
            - Pacific/Fiji
            - Pacific/Funafuti
            - Pacific/Galapagos
            - Pacific/Gambier
            - Pacific/Guadalcanal
            - Pacific/Guam
            - Pacific/Honolulu
            - Pacific/Johnston
            - Pacific/Kiritimati
            - Pacific/Kosrae
            - Pacific/Kwajalein
            - Pacific/Majuro
            - Pacific/Marquesas
            - Pacific/Midway
            - Pacific/Nauru
            - Pacific/Niue
            - Pacific/Norfolk
            - Pacific/Noumea
            - Pacific/Pago_Pago
            - Pacific/Palau
            - Pacific/Pitcairn
            - Pacific/Pohnpei
            - Pacific/Ponape
            - Pacific/Port_Moresby
            - Pacific/Rarotonga
            - Pacific/Saipan
            - Pacific/Samoa
            - Pacific/Tahiti
            - Pacific/Tarawa
            - Pacific/Tongatapu
            - Pacific/Truk
            - Pacific/Wake
            - Pacific/Wallis
            - Pacific/Yap
          type: string
        types:
          description: >-
            An array containing specific balance transaction types. The data
            will be filtered to include only transactions with a matching type
            property.
          items:
            type: string
            enum:
              - charge
              - charge_failure_refund
              - dispute
              - dispute_won
              - refund
              - refund_failure
              - adjustment
              - commission
              - payout
              - payout_cancel
              - payout_failure
              - fee
              - platform_fee
              - platform_fee_refund
              - outbound_transfer
              - outbound_transfer_cancel
              - outbound_transfer_failure
              - charge_fee
              - refund_fee
              - account_fee
              - payment_method_fee
              - tilled_fee
          type: array
    BankAccount:
      type: object
      properties:
        account_holder_name:
          description: The name of the person or business that owns the bank account.
          type: string
        account_id:
          description: The ID of the Account associated with the bank account.
          type: string
        bank_name:
          description: >-
            Name of the bank associated with the routing number (e.g. `WELLS
            FARGO`).
          type: string
        created_at:
          description: Time at which the object was created.
          format: date-time
          type: string
        currency:
          description: >-
            The currency the bank account is in. Three-letter [ISO currency
            code](https://www.iso.org/iso-4217-currency-codes.html), in
            lowercase.
          enum:
            - aud
            - cad
            - dkk
            - eur
            - hkd
            - jpy
            - nzd
            - nok
            - gbp
            - zar
            - sek
            - chf
            - usd
          type: string
        default_for_currency:
          description: Whether this bank account is the default account for its currency.
          type: boolean
        id:
          description: Unique identifier for the object.
          type: string
        last4:
          description: The last 4 digits of the bank account number.
          type: string
        routing_number:
          description: The US bank account routing number.
          type: string
        status:
          description: Bank account status
          enum:
            - new
            - validated
            - verified
            - verification_failed
            - errored
          type: string
        type:
          description: The bank account type
          enum:
            - checking
            - savings
          type: string
        updated_at:
          description: Time at which the object was last updated.
          format: date-time
          type: string
      required:
        - account_holder_name
        - account_id
        - created_at
        - currency
        - default_for_currency
        - id
        - last4
        - routing_number
        - status
        - type
        - updated_at
    BankAccountCreateParams:
      type: object
      properties:
        account_holder_name:
          description: The name of the person or business that owns the bank account.
          pattern: /^[^<>]*$/
          type: string
        account_number:
          description: The account number for the bank account, in string form.
          pattern: /^[^<>]*$/
          type: string
        bank_name:
          description: Name of the financial institution.
          pattern: /^[^<>]*$/
          type: string
        currency:
          description: >-
            The currency the bank account is in. Three-letter ISO currency code,
            in lowercase.
          enum:
            - aud
            - cad
            - dkk
            - eur
            - hkd
            - jpy
            - nzd
            - nok
            - gbp
            - zar
            - sek
            - chf
            - usd
          type: string
        phone:
          description: Phone number for the financial institution
          type: string
        routing_number:
          description: The US bank account routing number.
          type: string
        type:
          description: The bank account type
          enum:
            - checking
            - savings
          type: string
      required:
        - account_holder_name
        - account_number
        - currency
        - routing_number
        - type
    BaseAddress:
      type: object
      properties:
        city:
          description: City where address is located.
          type: string
        country:
          description: >-
            2-digit Country code (e.g. 'US', 'CA') [See ISO 3166-1
            alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
          type: string
        state:
          description: >-
            State/province/region of the address. For US and CA use 2-digit
            state/province codes (e.g. 'AL', 'AK', 'BC', 'ON', 'etc'.)
          type: string
        street:
          description: First line of the street address
          type: string
        street2:
          description: Second line of the street address, if required.
          type: string
        zip:
          description: Zip code or postal code of the address. No special characters.
          maxLength: 10
          type: string
      required:
        - city
        - country
        - state
        - street
        - zip
    BulkDocumentSubmission:
      type: object
      properties:
        document_id:
          description: The ID of a document to submit
          type: string
        submission_data:
          $ref: '#/components/schemas/DocumentSubmitRequestParams'
      required:
        - document_id
        - submission_data
    BulkDocumentSubmissionResponse:
      type: object
      properties:
        document_id:
          description: The ID of a document submitted
          type: string
        failure_message:
          description: Message detailing the failure reason of a document submission
          type: string
        status:
          description: The status response of a submission of a document
          enum:
            - succeeded
            - failed
          type: string
      required:
        - document_id
        - status
    BulkDocumentSubmitRequestParams:
      type: object
      properties:
        submissions:
          items:
            $ref: '#/components/schemas/BulkDocumentSubmission'
          type: array
      required:
        - submissions
    BulkDocumentSubmitResponse:
      type: object
      properties:
        submissions:
          items:
            $ref: '#/components/schemas/BulkDocumentSubmissionResponse'
          type: array
      required:
        - submissions
    BusinessLegalEntity:
      type: object
      properties:
        description:
          description: Company's business description
          maxLength: 240
          pattern: /^[^<>]*$/
          type: string
        ach_bank_account:
          $ref: '#/components/schemas/BLEBankAccount'
        address:
          $ref: '#/components/schemas/BaseAddress'
        annual_revenue:
          description: |-
            Estimated annual revenue of the business.
            * `LOW` = $0 - 100,000
            * `MEDIUM` = $100,001 - 250,000
            * `HIGH` = $250,001 - 400,000
            * `VERY_HIGH` = $400,001 - 550,000
            * `EXTREMELY_HIGH` = $550,000+
          enum:
            - LOW
            - MEDIUM
            - HIGH
            - VERY_HIGH
            - EXTREMELY_HIGH
          type: string
        average_transaction_amount:
          description: >-
            Average transaction amount, in minor units. (e.g. $100.00 = 10000
            minor units)
          minimum: 1
          type: number
        average_transaction_amount_card:
          description: >-
            Average transaction amount, in minor units for Card payments. (e.g.
            $100.00 = 10000 minor units)
          minimum: 1
          type: number
        average_transaction_amount_debit:
          description: >-
            Average transaction amount, in minor units for Direct Debit
            payments. (e.g. $100.00 = 10000 minor units)
          minimum: 1
          type: number
        average_transactions_per_month:
          description: Average number of transactions per month
          minimum: 0
          type: number
        bank_account:
          $ref: '#/components/schemas/BLEBankAccount'
        category:
          description: |-
            Category code of the business.
            * `ACCT` = Accounting
            * `ART` = Artist Supply and Craft Stores
            * `BEAUTY` = Barber & Beauty Shop
            * `CATERING` = Catering
            * `CHARITY` = Charity
            * `CLEANING` = Cleaning Services
            * `CONSULTANT` = Consultant
            * `CONTRACTOR` = Trade Contractor
            * `DENTIST` = Dentistry
            * `EDU` = Schools & Education
            * `FOOD` = Food/Grocery
            * `LANDSCAPING` = Landscaping
            * `LEGAL` = Legal Services
            * `MEDICAL_PRACT` = Medical Practitioner
            * `MEDICAL_SERV` = Health Services
            * `MEMBERSHIP` = Membership Org.
            * `MISC_FOOD_STORES` = Misc. Food Stores
            * `MISC_MERCH` = Misc General Merchandise
            * `MISC_SERV` = Services
            * `MUSIC` = Music/Entertainment
            * `PC` = Computer Services
            * `PHOTO_FILM` = Photo/FILM
            * `PROF_SERV` = Professional Services
            * `REAL_ESTATE` = Real Estate
            * `RECREATION` = Recreation Services
            * `REPAIR` = Repair Services
            * `RESTO` = Restaurant/Bar
            * `RETAIL` = Direct Marketing Retail (MOTO)
            * `TAXI` = Taxi/Limo
            * `VET` = Veterinary
            * `WEB_DEV` = Web Design
            * `WEB_HOSTING` = Web Hosting
          enum:
            - ACCT
            - ART
            - BEAUTY
            - CATERING
            - CHARITY
            - CLEANING
            - CONSULTANT
            - CONTRACTOR
            - DENTIST
            - EDU
            - FOOD
            - LANDSCAPING
            - LEGAL
            - MEDICAL_PRACT
            - MEDICAL_SERV
            - MEMBERSHIP
            - MISC_FOOD_STORES
            - MISC_MERCH
            - MISC_SERV
            - MUSIC
            - PC
            - PHOTO_FILM
            - PROF_SERV
            - REAL_ESTATE
            - RECREATION
            - REPAIR
            - RESTO
            - RETAIL
            - TAXI
            - UTILITY
            - VET
            - WEB_DEV
            - WEB_HOSTING
            - OTHER
          type: string
        company_email:
          description: Email of the business.
          type: string
        country_of_incorporation:
          description: >-
            2-digit Country code (e.g. 'US', 'CA') [See ISO 3166-1
            alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
          type: string
        currency:
          description: >-
            Single currency used for processing and settlement for this merchant
            account.
          enum:
            - aud
            - cad
            - dkk
            - eur
            - hkd
            - jpy
            - nzd
            - nok
            - gbp
            - zar
            - sek
            - chf
            - usd
          type: string
        incorporation_year:
          description: Year the business was incorporated. A number in 'YYYY' format.
          maximum: 2024
          minimum: 1600
          type: number
        legal_name:
          description: Registered business legal/trading name (e.g. "ACME CA")
          pattern: /^[^<>]*$/
          type: string
        locale:
          description: >-
            The locale value used for the merchant account. Values depend on the
            region.
          enum:
            - en_US
            - en_CA
            - fr_CA
            - en_GB
          type: string
        monthly_volume_amount:
          description: >-
            Estimated monthly volume amount of the business, in minor units.
            (e.g. $100.00 = 10000 minor units)
          minimum: 1
          type: number
        name:
          description: The merchant name
          pattern: /^[^<>;]*$/
          type: string
        phone:
          description: >-
            Customer support phone number of the business. Cannot contain
            special characters.
          type: string
        principals:
          description: Array of Principals (ie Business Owners).
          items:
            $ref: '#/components/schemas/Principal'
          type: array
        region:
          description: Region for the merchant account
          enum:
            - US
            - CA
          type: string
        statement_descriptor:
          description: >-
            Provides information about a payment that customers see on their
            statements. Concatenated with the prefix (shortened descriptor) or
            statement descriptor that’s set on the account to form the complete
            statement descriptor. Maximum 20 characters for the concatenated
            descriptor.
          maxLength: 20
          pattern: /^[^<>]*$/
          type: string
        tax_identification_number:
          description: Company's Tax Identification Number
          maxLength: 9
          minLength: 9
          type: string
        type:
          description: |-
            Type of business.
            * `CHARITY` = Charity
            * `CIC` = Community Interest Company
            * `CORP` = Corporation
            * `LTD` = Limited
            * `LLC` = Limited Liability Company
            * `LLP` = Limited Liability Partnership
            * `NPCORP` = Non-Profit
            * `PARTNERSHIP` = Partnership
            * `PLC` = Public Limited Company
            * `GOV` = Public Sector/Governmental
            * `SOLEPROP` = Sole Proprietorship/Sole Trader
            * `TRUST` = Trust
          enum:
            - CHARITY
            - CIC
            - CORP
            - LTD
            - LLC
            - LLP
            - NPCORP
            - PARTNERSHIP
            - PLC
            - GOV
            - SOLEPROP
            - TRUST
          type: string
        website:
          description: Website of the business.
          maxLength: 255
          type: string
        yearly_volume_range:
          description: |-
            Estimated yearly processing volume of transactions of the business.
            * `LOW` = 0-50k
            * `MEDIUM` = 50-100k
            * `HIGH` = 100-250k
            * `VERY_HIGH` = 250k+
          enum:
            - LOW
            - MEDIUM
            - HIGH
            - VERY_HIGH
          type: string
      required:
        - address
        - average_transaction_amount
        - category
        - currency
        - legal_name
        - locale
        - name
        - phone
        - principals
        - region
        - statement_descriptor
        - tax_identification_number
        - type
        - yearly_volume_range
      x-konfig-properties:
        ach_bank_account:
          description: >-
            Required for US merchant accounts (`region = US`). This field is
            deprecated. Please use `bank_account`.
          deprecated: true
        address:
          description: Registered legal address of the business.
        bank_account:
          description: Bank Account Information
    BusinessProfile:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/Address'
        category:
          description: MCC category.
          enum:
            - ACCT
            - ART
            - BEAUTY
            - CATERING
            - CHARITY
            - CLEANING
            - CONSULTANT
            - CONTRACTOR
            - DENTIST
            - EDU
            - FOOD
            - LANDSCAPING
            - LEGAL
            - MEDICAL_PRACT
            - MEDICAL_SERV
            - MEMBERSHIP
            - MISC_FOOD_STORES
            - MISC_MERCH
            - MISC_SERV
            - MUSIC
            - PC
            - PHOTO_FILM
            - PROF_SERV
            - REAL_ESTATE
            - RECREATION
            - REPAIR
            - RESTO
            - RETAIL
            - TAXI
            - UTILITY
            - VET
            - WEB_DEV
            - WEB_HOSTING
            - OTHER
          type: string
        created_at:
          description: Time at which the object was created.
          format: date-time
          type: string
        id:
          type: string
        legal_name:
          description: The legal name for the business.
          type: string
        locale:
          description: The locale for the business.
          enum:
            - en_US
            - en_CA
            - fr_CA
            - en_GB
          type: string
        phone:
          description: The business's phone number.
          type: string
        region:
          description: The region where the business is located.
          enum:
            - US
            - CA
          type: string
        representatives:
          description: A list of Representatives included in the onboarding application.
          items:
            $ref: '#/components/schemas/BusinessRepresentative'
          type: array
        structure:
          description: The structure of the business (LLC, Corp, etc.).
          enum:
            - CHARITY
            - CIC
            - CORP
            - LTD
            - LLC
            - LLP
            - NPCORP
            - PARTNERSHIP
            - PLC
            - GOV
            - SOLEPROP
            - TRUST
          type: string
        tax_identification_number:
          description: Tax identification number.
          type: string
        updated_at:
          description: Time at which the object was last updated.
          format: date-time
          type: string
        website:
          description: The website of the business.
          type: string
      required:
        - address
        - category
        - created_at
        - legal_name
        - locale
        - phone
        - region
        - representatives
        - structure
        - tax_identification_number
        - updated_at
      x-konfig-properties:
        address:
          description: The address for this business.
    BusinessRepresentative:
      type: object
      properties:
        addresses:
          description: Registered *residential* address for this principal
          items:
            $ref: '#/components/schemas/Address'
          type: array
        created_at:
          description: Time at which the object was created.
          format: date-time
          type: string
        email:
          description: The email address of the representative.
          type: string
        first_name:
          description: The representative's first name.
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        is_applicant:
          description: If this associate is the one completing the application.
          type: boolean
        is_control_prong:
          description: If this associate has a controlling interest.
          type: boolean
        job_title:
          description: The representative's title at the company.
          type: string
        last_name:
          description: The representative's last name.
          type: string
        middle_name:
          description: The representative's middle name.
          type: string
        phone:
          description: The phone number for the representative.
          type: string
        type:
          description: >-
            Type of representative. Ex. shareholder, director, merchant rep,
            contact
          enum:
            - director
            - shareholder
            - merchant_rep
            - contact
          type: string
        updated_at:
          description: Time at which the object was last updated.
          format: date-time
          type: string
      required:
        - addresses
        - created_at
        - id
        - is_applicant
        - is_control_prong
        - job_title
        - phone
        - type
        - updated_at
    CardChargeFeeTemplate:
      type: object
      properties:
        bank_account_change_fee:
          description: >-
            The amount of the fee applied when the merchant bank account
            information is updated, in currency minor units.
          type: number
        card_update_fee:
          description: >-
            The amount of the fee applied per card updated, in currency minor
            units.
          type: number
        chargeback_fee:
          description: >-
            The amount of the fee applied per chargeback, in currency minor
            units.
          type: number
        markups:
          description: The list of additional markups applied to a given card type.
          items:
            $ref: '#/components/schemas/Markup'
          type: array
        retrieval_fee:
          description: >-
            The amount of the fee applied per retrieval, in currency minor
            units.
          type: number
        reversal_fee:
          description: The amount of the fee applied per reversal, in currency minor units.
          type: number
        transaction_fee:
          description: >-
            The amount of the transaction fee applied to each transaction, in
            currency minor units.
          type: number
        transaction_fee_type:
          description: The type of transaction fee this pricing template applies.
          enum:
            - flat_rate
            - interchange
          type: string
      required:
        - chargeback_fee
        - markups
        - retrieval_fee
        - reversal_fee
        - transaction_fee
        - transaction_fee_type
    CardChecks:
      type: object
      properties:
        address_line1_check:
          description: >-
            If an address line1 was provided, results of the check, one of
            `pass`, `fail`, `unavailable`, or `unchecked`.
          enum:
            - pass
            - fail
            - unavailable
            - unchecked
          type: string
        address_postal_code_check:
          description: >-
            If an address postal code was provided, results of the check, one of
            `pass`, `fail`, `unavailable`, or `unchecked`.
          enum:
            - pass
            - fail
            - unavailable
            - unchecked
          type: string
        cvc_check:
          description: >-
            If a CVC was provided, results of the check, one of `pass`, `fail`,
            `unavailable`, or `unchecked`.
          enum:
            - pass
            - fail
            - unavailable
            - unchecked
          type: string
    CardDetails:
      type: object
      properties:
        apple_pay:
          description: Whether or not the card is an apple pay card
          type: boolean
        brand:
          description: Type of card.
          enum:
            - amex
            - diners
            - discover
            - jcb
            - maestro
            - mastercard
            - solo
            - visa
            - visa_debit
            - visa_electron
            - unknown
          type: string
        checks:
          $ref: '#/components/schemas/CardChecks'
        exp_month:
          description: Two-digit number representing the card's expiration month.
          type: number
        exp_year:
          description: Two- or four-digit number representing the card's expiration year.
          type: number
        funding:
          description: Card funding type.
          enum:
            - credit
            - debit
            - prepaid
            - unknown
          type: string
        holder_name:
          description: The card holder's name.
          type: string
        last4:
          description: Last 4 digits of the card.
          type: string
      x-konfig-properties:
        checks:
          description: Checks on Card address and CVC if provided.
    CardPresentChargeFeeTemplate:
      type: object
      properties:
        bank_account_change_fee:
          description: >-
            The amount of the fee applied when the merchant bank account
            information is updated, in currency minor units.
          type: number
        chargeback_fee:
          description: >-
            The amount of the fee applied per chargeback, in currency minor
            units.
          type: number
        markups:
          description: The list of additional markups applied to a given card type.
          items:
            $ref: '#/components/schemas/Markup'
          type: array
        monthly_terminal_fee:
          description: >-
            The amount of the monthly fee applied per terminal, in currency
            minor units.
          type: number
        retrieval_fee:
          description: >-
            The amount of the fee applied per retrieval, in currency minor
            units.
          type: number
        reversal_fee:
          description: The amount of the fee applied per reversal, in currency minor units.
          type: number
        transaction_fee:
          description: >-
            The amount of the transaction fee applied to each transaction, in
            currency minor units.
          type: number
        transaction_fee_type:
          description: The type of transaction fee this pricing template applies.
          enum:
            - flat_rate
            - interchange
          type: string
      required:
        - chargeback_fee
        - markups
        - retrieval_fee
        - reversal_fee
        - transaction_fee
        - transaction_fee_type
    Charge:
      type: object
      properties:
        amount_captured:
          description: >-
            Amount (in the smallest currency unit) captured. Can be less than
            the `amount` on the PaymentIntent if a partial capture was made.
          type: number
        amount_refunded:
          description: >-
            Amount (in the smallest currency unit) refunded. Can be less than
            the `amount` on the PaymentIntent if a partial refund was made.
          type: number
        balance_transaction:
          $ref: '#/components/schemas/BalanceTransaction'
        captured:
          description: >-
            If the charge was created without capturing, this Boolean represents
            whether it is still uncaptured or has since been captured.
          type: boolean
        captured_at:
          description: Time at which the charge was captured.
          format: date-time
          type: string
        created_at:
          description: Time at which the object was created.
          format: date-time
          type: string
        failed_at:
          description: Time at which the charge failed.
          format: date-time
          type: string
        failure_code:
          description: Error code explaining reason for charge failure.
          enum:
            - account_closed
            - account_frozen
            - account_number_invalid
            - authorization_revoked
            - avs_check_failed
            - bank_account_blocked
            - call_issuer
            - card_not_supported
            - expired_card
            - fraudulent
            - generic_decline
            - incorrect_cvc
            - insufficient_funds
            - invalid_expiry
            - invalid_field
            - invalid_number
            - limit_exceeded
            - no_account
            - not_authorized
            - not_permitted
            - processing_error
            - not_recognized
            - pickup_card
            - restricted_card
            - risk_blocked
            - service_not_allowed
            - stop_payment
            - try_again_later
            - internal_error
            - no_action_taken
            - card_removed
          type: string
        failure_message:
          description: >-
            Message to user further explaining the reason for the charge
            failure.
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        payment_intent_id:
          description: The ID of the PaymentIntent associated with this charge.
          type: string
        payment_method_id:
          description: The id of the PaymentMethod at the time of the transaction.
          type: string
        platform_fee:
          $ref: '#/components/schemas/PlatformFee'
        refunded:
          description: >-
            Whether the charge has been fully refunded. If the charge is only
            partially refunded, this attribute will be false.
          type: boolean
        refunds:
          description: A list of refunds that have been applied to the charge.
          items:
            $ref: '#/components/schemas/Refund'
          type: array
        status:
          description: The status of the payment.
          enum:
            - succeeded
            - pending
            - failed
          type: string
        updated_at:
          description: Time at which the object was updated.
          format: date-time
          type: string
      required:
        - amount_captured
        - amount_refunded
        - captured
        - created_at
        - id
        - payment_intent_id
        - payment_method_id
        - refunded
        - refunds
        - status
        - updated_at
      x-konfig-properties:
        balance_transaction:
          description: >-
            The balance transaction that describes the impact of this charge on
            your account balance (not including refunds or disputes).

            Note: Multiple balance transactions may be associated with this
            resource and you can fetch them all with
            `/balance-transactions?source_id={id}`.
          deprecated: true
        platform_fee:
          description: The platform fee (if any) for the charge.
    CheckoutSession:
      type: object
      properties:
        account_id:
          description: The ID of the account for this checkout session.
          type: string
        amount_total:
          description: Total of all items, in currency minor units.
          type: number
        cancel_url:
          description: >-
            If set, checkout will display a back button and customers will be
            directed to this URL if they decide to cancel payment and return to
            your website.
          type: string
        created_at:
          description: Time at which the object was created.
          format: date-time
          type: string
        currency:
          description: >-
            Three-letter [ISO currency
            code](https://www.iso.org/iso-4217-currency-codes.html), in
            lowercase.
          enum:
            - aud
            - cad
            - dkk
            - eur
            - hkd
            - jpy
            - nzd
            - nok
            - gbp
            - zar
            - sek
            - chf
            - usd
          type: string
        customer_details:
          $ref: '#/components/schemas/CustomerDetails'
        customer_id:
          description: The ID of the customer for this checkout session.
          type: string
        expires_at:
          description: >-
            The due date for the checkout session. After this date the customer
            will no longer be able to complete the checkout session.
          format: date-time
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        line_items:
          description: >-
            A list of items the customer is purchasing. The maximum is 100 line
            items, however it is recommended to consolidate line items if there
            are more than a few dozen.
          items:
            $ref: '#/components/schemas/CheckoutSessionLineItem'
          type: array
        metadata:
          description: >-
            Set of key-value pairs that you can attach to an object. This can be
            useful for storing additional information about the object in a
            structured format. Individual keys can be unset by posting an empty
            value (i.e. `''` or `null`) to them. All keys can be unset by
            posting an empty value (i.e. `{}` or `null`) to `metadata`."
          additionalProperties:
            type: string
          example:
            order_id: '100123'
            internal_customer_id: 7cb1159d-875e-47ae-a309-319fa7ff395b
          type: object
        payment_intent_id:
          description: The ID of the payment intent for checkout session.
          type: string
        payment_method_types:
          description: >-
            A list of the types of payment methods (e.g. card) this checkout
            session is allowed to accept.
          items:
            type: string
            enum:
              - card
              - ach_debit
              - eft_debit
              - card_present
          type: array
        status:
          description: >-
            The status of the checkout session, one of `open`, `complete` or
            `expired`.


            `open`

            The checkout session is still in progress. Payment processing has
            not started.


            `complete`

            The checkout session is complete. Payment processing may still be in
            progress.


            `expired`

            The checkout session has expired. No further processing will occur.
          enum:
            - open
            - complete
            - expired
          type: string
        success_url:
          description: >-
            The URL to which we should send customers when payment is complete.
            It is recommended that you supply this value,

            but if none is provided, a generic success landing page will be
            used.
          type: string
        updated_at:
          description: Time at which the object was last updated.
          format: date-time
          type: string
        url:
          description: >-
            The URL to the checkout session. Redirect customers to this URL to
            take them to checkout.
          type: string
      required:
        - account_id
        - amount_total
        - created_at
        - currency
        - id
        - line_items
        - payment_intent_id
        - payment_method_types
        - status
        - updated_at
        - url
      x-konfig-properties:
        customer_details:
          description: The customer details.
    CheckoutSessionCreateParams:
      type: object
      properties:
        cancel_url:
          description: >-
            If set, checkout will display a back button and customers will be
            directed to this URL if they decide to cancel payment and return to
            your website.
          type: string
        customer_email:
          description: >-
            If provided, this value will be used when the Customer object is
            created. If not provided, customers will be asked to enter their
            email address. Use this parameter to prefill customer data if you
            already have an email on file. To access information about the
            customer once a session is complete, use the customer_id field to
            fetch the customer.
          type: string
        customer_id:
          description: The ID of the customer for this checkout session.
          type: string
        expires_at:
          description: >-
            The due date for the checkout session. After this date the customer
            will no longer be able to complete the checkout session.
          format: date-time
          type: string
        line_items:
          description: >-
            A list of items the customer is purchasing. The maximum is 100 line
            items, however it is recommended to consolidate line items if there
            are more than a few dozen.
          items:
            $ref: '#/components/schemas/CheckoutSessionLineItem'
          maxItems: 100
          type: array
        metadata:
          description: >-
            Set of [key-value pairs](https://api.tilled.com) that you can attach
            to an object. This can be useful for storing additional information
            about the object in a structured format. Individual keys can be
            unset by posting an empty value (i.e. `''` or `null`) to them. All
            keys can be unset by posting an empty value (i.e. `{}` or `null`) to
            `metadata`.
          additionalProperties:
            type: string
          example:
            order_id: '100123'
            internal_customer_id: 7cb1159d-875e-47ae-a309-319fa7ff395b
          type: object
        payment_intent_data:
          $ref: '#/components/schemas/PaymentIntentDataCreateParams'
        success_url:
          description: >-
            The URL to which we should send customers when payment is complete.
            It is recommended that you supply this value,

            but if none is provided, a generic success landing page will be
            used.
          type: string
      required:
        - line_items
        - payment_intent_data
      x-konfig-properties:
        payment_intent_data:
          description: A subset of parameters to be passed to the payment intent creation.
    CheckoutSessionLineItem:
      type: object
      properties:
        price_data:
          $ref: '#/components/schemas/Price'
        quantity:
          description: Quantity of the item. Maximum decimal places 4.
          minimum: 0.0001
          type: number
      required:
        - price_data
        - quantity
      x-konfig-properties:
        price_data:
          description: Data about the price of this line item.
    Customer:
      type: object
      properties:
        account_id:
          description: The id of the associated account.
          type: string
        created_at:
          description: Time at which the object was created.
          format: date-time
          type: string
        email:
          description: The customer's email address.
          type: string
        first_name:
          description: The customer's first name.
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        last_name:
          description: The customer's last name.
          type: string
        metadata:
          description: >-
            Set of [key-value pairs](https://api.tilled.com) that you can attach
            to an object. This can be useful for storing additional information
            about the object in a structured format.
          additionalProperties:
            type: string
          example:
            order_id: '100123'
            internal_customer_id: 7cb1159d-875e-47ae-a309-319fa7ff395b
          type: object
        middle_name:
          description: The customer's middle name.
          type: string
        phone:
          description: The customer's phone number.
          type: string
        updated_at:
          description: Time at which the object was last updated.
          format: date-time
          type: string
      required:
        - account_id
        - created_at
        - id
        - updated_at
    CustomerCreateParams:
      type: object
      properties:
        email:
          description: The customer's email address.
          type: string
        first_name:
          description: The customer's first name.
          maxLength: 255
          pattern: /^[^<>]*$/
          type: string
        last_name:
          description: The customer's last name.
          maxLength: 255
          pattern: /^[^<>]*$/
          type: string
        metadata:
          description: >-
            Set of [key-value pairs](https://api.tilled.com) that you can attach
            to an object. This can be useful for storing additional information
            about the object in a structured format. Individual keys can be
            unset by posting an empty value (i.e. `''` or `null`) to them. All
            keys can be unset by posting an empty value (i.e. `{}` or `null`) to
            `metadata`.
          additionalProperties:
            type: string
          example:
            order_id: '100123'
            internal_customer_id: 7cb1159d-875e-47ae-a309-319fa7ff395b
          type: object
        middle_name:
          description: The customer's middle name.
          maxLength: 255
          pattern: /^[^<>]*$/
          type: string
        phone:
          description: The customer's phone number.
          pattern: /^[^<>]*$/
          type: string
    CustomerDetails:
      type: object
      properties:
        email:
          description: The customer's email address.
          type: string
      required:
        - email
    CustomerUpdateParams:
      type: object
      properties:
        email:
          description: The customer's email address.
          type: string
        first_name:
          description: The customer's first name.
          maxLength: 255
          pattern: /^[^<>]*$/
          type: string
        last_name:
          description: The customer's last name.
          maxLength: 255
          pattern: /^[^<>]*$/
          type: string
        metadata:
          description: >-
            Set of [key-value pairs](https://api.tilled.com) that you can attach
            to an object. This can be useful for storing additional information
            about the object in a structured format. Individual keys can be
            unset by posting an empty value (i.e. `''` or `null`) to them. All
            keys can be unset by posting an empty value (i.e. `{}` or `null`) to
            `metadata`.
          additionalProperties:
            type: string
          example:
            order_id: '100123'
            internal_customer_id: 7cb1159d-875e-47ae-a309-319fa7ff395b
          type: object
        middle_name:
          description: The customer's middle name.
          maxLength: 255
          pattern: /^[^<>]*$/
          type: string
        phone:
          description: The customer's phone number.
          pattern: /^[^<>]*$/
          type: string
    DebitFeeTemplate:
      type: object
      properties:
        return_fee:
          description: The amount of the fee applied per return, in currency minor units.
          type: number
        transaction_fee:
          description: >-
            The amount of the transaction fee applied to each transaction, in
            currency minor units or hundredths of a percent depending on the
            transaction_fee_type selected.
          type: number
        transaction_fee_type:
          description: The type of transaction fee this pricing template applies.
          enum:
            - flat_rate
          type: string
      required:
        - return_fee
        - transaction_fee
        - transaction_fee_type
    Dispute:
      type: object
      properties:
        account_id:
          description: The ID of the Account associated with this dispute.
          type: string
        amount:
          description: >-
            Amount of the charge that is in dispute in the smallest currency
            unit (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a
            zero-decimal currency). If the dispute is type `chargeback` the
            amount has already been deducted from your account balance and can
            only be restored by submitting evidence proving the validity of the
            charge.
          type: number
        balance_transactions:
          description: >-
            The balance transactions that describes the impact of this dispute
            on your account balance.
          items:
            $ref: '#/components/schemas/BalanceTransaction'
          type: array
        charge_id:
          description: The ID of the Charge associated with this dispute.
          type: string
        closing_at:
          description: >-
            Time at which the supporting evidence is due and the dispute will be
            closed with no response.
          format: date-time
          type: string
        created_at:
          description: Time at which the object was created.
          format: date-time
          type: string
        currency:
          description: >-
            Three-letter [ISO currency
            code](https://www.iso.org/iso-4217-currency-codes.html), in
            lowercase.
          enum:
            - aud
            - cad
            - dkk
            - eur
            - hkd
            - jpy
            - nzd
            - nok
            - gbp
            - zar
            - sek
            - chf
            - usd
          type: string
        evidence:
          $ref: '#/components/schemas/DisputeEvidence'
        id:
          description: Unique identifier for the object.
          type: string
        reason_description:
          description: Description explaining the reason for a dispute
          type: string
        reversed_at:
          description: Time at which the dispute was reversed.
          format: date-time
          type: string
        status:
          description: Current status of the dispute.
          enum:
            - warning_needs_response
            - warning_under_review
            - warning_closed
            - needs_response
            - under_review
            - closed
            - won
            - lost
          type: string
        status_history:
          description: Status history of the dispute.
          items:
            $ref: '#/components/schemas/DisputeStatusHistory'
          type: array
        updated_at:
          description: Time at which the object was updated.
          format: date-time
          type: string
      required:
        - account_id
        - amount
        - balance_transactions
        - charge_id
        - created_at
        - currency
        - id
        - status
        - status_history
        - updated_at
      x-konfig-properties:
        evidence:
          description: Evidence submitted to challenge the dispute.
    DisputeEvidence:
      type: object
      properties:
        description:
          description: Description of the evidence submitted to challenge the dispute.
          type: string
        files:
          description: Evidentiary files attached to the dispute.
          items:
            $ref: '#/components/schemas/DisputeFile'
          type: array
      required:
        - description
        - files
    DisputeEvidenceCreateParams:
      type: object
      properties:
        description:
          description: Description of the evidence submitted to challenge the dispute.
          type: string
        files:
          description: Evidentiary files to attach to the dispute.
          items:
            $ref: '#/components/schemas/DisputeFileCreateParams'
          type: array
    DisputeFile:
      type: object
      properties:
        file:
          $ref: '#/components/schemas/File'
        type:
          description: The type of evidence provided in the file.
          enum:
            - customer_communications
            - refund_policy
            - cancellation_policy
            - customer_signature
            - receipt
            - service_documentation
            - duplicate_charge_documentation
            - shipping_documentation
            - uncategorized
          type: string
      required:
        - file
        - type
      x-konfig-properties:
        file:
          description: The file.
    DisputeFileCreateParams:
      type: object
      properties:
        file_id:
          description: The id of the file.
          type: string
        type:
          description: The type of evidence provided in the file.
          enum:
            - customer_communications
            - refund_policy
            - cancellation_policy
            - customer_signature
            - receipt
            - service_documentation
            - duplicate_charge_documentation
            - shipping_documentation
            - uncategorized
          type: string
      required:
        - file_id
        - type
    DisputeStatusHistory:
      type: object
      properties:
        status:
          description: Historical status of the dispute.
          enum:
            - warning_needs_response
            - warning_under_review
            - warning_closed
            - needs_response
            - under_review
            - closed
            - won
            - lost
          type: string
        status_date:
          description: Time at which the dispute entered this status.
          format: date-time
          type: string
      required:
        - status
        - status_date
    DocumentDto:
      type: object
      properties:
        account_id:
          description: The ID of the account owning the document.
          type: string
        created_at:
          description: Time at which the object was created.
          format: date-time
          type: string
        file_id:
          description: >-
            The file ID of an uploaded [File](https://api.tilled.com) for the
            document, of type `onboarding_documentation`
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        metadata:
          description: >-
            Set of [key-value pairs](https://api.tilled.com) that you can attach
            to an object. This can be useful for storing additional information
            about the object in a structured format. Individual keys can be
            unset by posting an empty value (i.e. `''` or `null`) to them. All
            keys can be unset by posting an empty value (i.e. `{}` or `null`) to
            `metadata`.
          additionalProperties:
            type: string
          example:
            internal_individual_id: 7cb1159d-875e-47ae-a309-319fa7ff395b
          type: object
        rejected_reason:
          description: The reason for rejection of the document, if applicable
          enum:
            - blurry
            - corrupt
            - invalid
            - scanned
            - incomplete
            - damaged
            - not_needed
          type: string
        request_notes:
          description: >-
            Additional notes for the request of a document, offering extra
            context
          type: string
        status:
          description: The status of the document
          enum:
            - requested
            - submitted
            - rejected
            - verified
          type: string
        submitted_at:
          description: Time at which the object was submitted.
          format: date-time
          type: string
        subtype:
          description: The subtype of the document
          enum:
            - bank_letter_voided_check
            - ein_letter
            - articles_of_incorp
            - business_license
            - utility_bill
            - processing_statement
            - financial_statement
            - 501c3
            - tax_return
            - invoice
            - dl_passport
            - dl_back
            - business_model
            - pricing_model
            - website
            - shopping_cart
            - other
          type: string
        type:
          description: The type of the document
          enum:
            - file
            - written
          type: string
        updated_at:
          description: Time at which the object was last updated.
          format: date-time
          type: string
        written_response:
          description: >-
            Written response to a document that has been requested, alternative
            to a [File](https://api.tilled.com)
          type: string
      required:
        - account_id
        - created_at
        - id
        - status
        - submitted_at
        - subtype
        - type
        - updated_at
    DocumentSubmitRequestParams:
      type: object
      properties:
        file_id:
          description: >-
            The file ID of an uploaded [File](https://api.tilled.com) for the
            document. File type must be `onboarding_documentation`. Required
            when document type is `file`
          type: string
        written_response:
          description: >-
            Written response to a document that has been requested, alternative
            to a [File](https://api.tilled.com). Required when document type is
            `written`
          maxLength: 255
          pattern: /^[^<\^\\\[\]";\*]*$/
          type: string
    EftDebitDetails:
      type: object
      properties:
        bank_name:
          description: Name of the bank associated to this Eft Debit.
          type: string
        institution_id:
          description: >-
            The sequence of three-digits used by banks to identify specific
            financial institutions
          type: string
        last2:
          description: The last 2 digits of the bank account number.
          type: string
        transit_number:
          description: >-
            The sequence of five-digits used by banks to identify specific
            financial institution's branch
          type: string
    Event:
      type: object
      properties:
        account_id:
          description: The id of the account that originated the event.
          type: string
        created_at:
          description: Time at which the object was created.
          format: date-time
          type: string
        data:
          description: >-
            Object containing the API resource relevant to the event. For
            example, a `charge.succeeded` event will have a full charge object
            as the value.
          type: object
        id:
          description: Unique identifier for the object.
          type: string
        type:
          description: >-
            Description of the event (e.g. `charge.succeeded` or
            `charge.refunded`).


            `account.updated` Occurs whenever an account status or property has
            changed. This includes capability statuses.


            `charge.captured` Occurs whenever a previously uncaptured charge is
            captured.


            `charge.expired` Occurs whenever an uncaptured charge expires.


            `charge.failed` Occurs whenever a failed charge attempt occurs.


            `charge.succeeded` Occurs whenever a new charge is created and is
            successful.


            `charge.pending` Occurs whenever a pending charge is created.


            `charge.refunded` occurs whenever a charge is refunded, including
            partial refunds


            `charge.refund.updated` Occurs whenever a refund is updated, on
            selected payment methods.


            `charge.updated` Occurs when a charge description is updated


            `customer.created` Occurs whenever a new customer is created.


            `customer.deleted` Occurs whenever a customer is deleted.


            `customer.updated` Occurs whenever any property of a customer
            changes.


            `payment_intent.canceled` Occurs when a PaymentIntent is canceled.


            `payment_intent.created` Occurs when a new PaymentIntent is created.


            `payment_intent.payment_failed` Occurs when a PaymentIntent has
            failed the attempt to create a payment method or a payment.


            `payment_intent.processing` Occurs when a PaymentIntent has started
            processing.


            `payment_intent.requires_action` Occurs when a PaymentIntent
            transitions to requires_action state


            `payment_intent.succeeded` Occurs when a PaymentIntent has
            successfully completed payment.


            `payment_method.attached` Occurs whenever a new payment method is
            attached to a customer.


            `payment_method.detached` Occurs whenever a payment method is
            detached from a customer.


            `report_run.succeeded` Occurs whenever a report run has successfully
            been uploaded to S3 and our File system.


            `report_run.failed` Occurs whenever a report run has failed to be
            uploaded to S3 or our File system.
          enum:
            - account.updated
            - charge.captured
            - charge.expired
            - charge.failed
            - charge.succeeded
            - charge.pending
            - charge.refunded
            - charge.refund.updated
            - charge.updated
            - customer.created
            - customer.deleted
            - customer.updated
            - dispute.created
            - dispute.updated
            - payment_intent.canceled
            - payment_intent.created
            - payment_intent.payment_failed
            - payment_intent.processing
            - payment_intent.requires_action
            - payment_intent.succeeded
            - payment_intent.amount_capturable_updated
            - payment_method.attached
            - payment_method.detached
            - payout.created
            - payout.failed
            - payout.paid
            - payout.updated
            - platform_fee.created
            - platform_fee.refunded
            - subscription.created
            - subscription.canceled
            - subscription.updated
            - report_run.succeeded
            - report_run.failed
            - outbound_transfer.pending
            - outbound_transfer.failed
            - outbound_transfer.canceled
            - outbound_transfer.succeeded
          type: string
        updated_at:
          description: Time at which the object was last updated.
          format: date-time
          type: string
      required:
        - account_id
        - created_at
        - data
        - id
        - type
        - updated_at
    File:
      type: object
      properties:
        title:
          description: The user friendly title.
          type: string
        created_at:
          description: Time at which the object was created.
          format: date-time
          type: string
        expires_at:
          description: Time at which the file should no longer be accessible.
          format: date-time
          type: string
        filename:
          description: The filename.
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        purpose:
          description: The file purpose.
          enum:
            - logo
            - icon
            - terms
            - report
            - dispute_evidence
            - onboarding_documentation
          type: string
        size:
          description: The file size.
          type: number
        type:
          description: The file type.
          enum:
            - png
            - jpg
            - pdf
            - csv
            - tiff
          type: string
        updated_at:
          description: Time at which the object was last updated.
          format: date-time
          type: string
        url:
          description: The URL for the file.
          type: string
      required:
        - created_at
        - filename
        - id
        - purpose
        - size
        - type
        - updated_at
    FileCreateParams:
      type: object
      properties:
        title:
          description: The user friendly file title.
          pattern: /^[^<>]*$/
          type: string
        file:
          description: >-
            A file to upload. The file should follow the specifications of RFC
            2388 (which defines file transfers for the multipart/form-data
            protocol).
          format: binary
          type: string
        purpose:
          description: The file purpose.
          enum:
            - logo
            - icon
            - dispute_evidence
            - onboarding_documentation
          type: string
      required:
        - file
        - purpose
    ForgotPasswordParams:
      type: object
      properties:
        email:
          description: Email
          type: string
      required:
        - email
    GlobalEmailSettings:
      type: object
      properties:
        disputes:
          description: Flag for dispute email notifications
          type: boolean
        documents:
          description: Flag for document request email notifications
          type: boolean
        onboarding:
          description: Flag for onboarding email notifications
          type: boolean
    HealthOutput:
      type: object
      properties:
        description:
          description: Human-friendly description of the API.
          type: string
        version:
          description: Public version of the API.
          type: string
        notes:
          description: Array of notes relevant to the current state of health.
          items:
            type: string
          type: array
        status:
          description: >-
            The overall health of the API. `pass` is healthy, `fail` is
            unhealthy, and `warn` is healthy with some concerns.
          enum:
            - pass
            - fail
            - warn
          type: string
      required:
        - status
    Level3:
      type: object
      properties:
        duty_amount:
          description: >-
            Duty associated with the import of the purchased goods on the total
            amount for the order, in minor units.
          maximum: 99999999
          minimum: 0
          type: number
        line_items:
          description: >-
            More detailed information about the items being purchased. Max
            length is 25.
          items:
            $ref: '#/components/schemas/LineItem'
          maxItems: 25
          type: array
        shipping_address_country:
          description: >-
            2-digit Country code (e.g. 'US', 'CA') of the address to which the
            purchased goods will be delivered.
          maxLength: 2
          minLength: 2
          type: string
        shipping_address_zip:
          description: >-
            Postal/zip code of the address to which the purchased goods will be
            delivered. This field can be identical to the `shipping_from_zip` if
            the customer is present and takes immediate possession of the goods.
          maxLength: 10
          type: string
        shipping_amount:
          description: >-
            The shipping or freight portion of the total transaction amount, in
            minor units.
          maximum: 99999999
          minimum: 0
          type: number
        shipping_from_zip:
          description: >-
            Postal/zip code of the address from which the purchased goods are
            being shipped
          maxLength: 10
          type: string
      required:
        - duty_amount
        - line_items
        - shipping_address_country
        - shipping_address_zip
        - shipping_amount
        - shipping_from_zip
    LineItem:
      type: object
      properties:
        product_code:
          description: Merchant-defined product code of the item being purchased
          maxLength: 12
          type: string
        product_description:
          description: Description of the item(s) being purchased
          maxLength: 35
          type: string
        quantity:
          description: >-
            Quantity of the item. Note: will be rounded to a maximum of 4
            decimals.
          minimum: 0
          type: number
        tax_amount:
          description: >-
            Amount of any value-added taxes that can be associated with the
            purchased item, in minor units.
          maximum: 99999999
          minimum: 0
          type: number
        unit_amount:
          description: Price of the item being purchased, in minor units.
          maximum: 99999999
          minimum: 0
          type: number
      required:
        - product_code
        - product_description
        - quantity
        - tax_amount
        - unit_amount
    LoginDto:
      type: object
      properties:
        refresh_token:
          description: JSON Web Token used to refresh access tokens.
          type: string
        token:
          description: JSON Web Token used for authentication (i.e. access token).
          type: string
        user:
          $ref: '#/components/schemas/User'
      required:
        - refresh_token
        - token
        - user
      x-konfig-properties:
        user:
          description: The logged in user.
    LoginParams:
      type: object
      properties:
        email:
          description: Email
          type: string
        password:
          description: Password
          type: string
      required:
        - email
        - password
    Markup:
      type: object
      properties:
        card_type:
          description: The card type this markup applies to.
          enum:
            - amex
            - diners
            - discover
            - jcb
            - maestro
            - mastercard
            - solo
            - visa
            - visa_debit
            - visa_electron
            - unknown
          type: string
        rate:
          description: The amount of the markup applied to this card type.
          type: number
      required:
        - card_type
        - rate
    MerchantApplication:
      type: object
      properties:
        accept_terms_and_conditions:
          description: >-
            Indicates whether or not the merchant has accepted the terms and
            conditions.
          type: boolean
        business_legal_entity:
          $ref: '#/components/schemas/BusinessLegalEntity'
        pricing_templates:
          description: >-
            The pricing templates applied to/associated with this merchant
            application.
          items:
            $ref: '#/components/schemas/PricingTemplate'
          type: array
        product_codes:
          description: >-
            *Deprecated: See `pricing_template` for account details.*


            The product codes applied to/associated with this merchant
            application.
          deprecated: true
          items:
            $ref: '#/components/schemas/ProductCode'
          type: array
        terms_and_conditions_links:
          description: Links to terms and conditions for a merchant application.
          items:
            $ref: '#/components/schemas/TermsAndConditionsDetail'
          type: array
        updated_at:
          description: Time at which the object was last updated.
          format: date-time
          type: string
        validation_errors:
          description: >-
            If an application contains any validation errors they will appear
            here. If they are not addressed before submission then the
            submission will fail.
          items:
            type: string
          type: array
      required:
        - accept_terms_and_conditions
        - pricing_templates
        - product_codes
      x-konfig-properties:
        business_legal_entity:
          description: Merchant account details
    MerchantApplicationCreateParams:
      type: object
      properties:
        accept_terms_and_conditions:
          description: >-
            Indicates whether or not the merchant has accepted the terms and
            conditions.
          type: boolean
        business_legal_entity:
          $ref: '#/components/schemas/BusinessLegalEntity'
      required:
        - accept_terms_and_conditions
      x-konfig-properties:
        business_legal_entity:
          description: Merchant account details
    OutboundTransfer:
      type: object
      properties:
        account_id:
          description: The ID of the account for this outbound transfer.
          type: string
        amount:
          description: Amount of the outbound transfer, in currency minor units.
          type: number
        canceled_at:
          description: >-
            Populated when `status` is `canceled`, this is the time at which the
            Outbound Transfer was canceled.
          format: date-time
          type: string
        created_at:
          description: Time at which the object was created.
          format: date-time
          type: string
        currency:
          description: >-
            Three-letter [ISO currency
            code](https://www.iso.org/iso-4217-currency-codes.html), in
            lowercase.
          enum:
            - aud
            - cad
            - dkk
            - eur
            - hkd
            - jpy
            - nzd
            - nok
            - gbp
            - zar
            - sek
            - chf
            - usd
          type: string
        destination_payment_method_id:
          description: >-
            The ID of destination [payment method](https://api.tilled.com) to
            send the outbound transfer to.
          type: string
        failure_code:
          description: Error code explaining reason for outbound transfer failure.
          enum:
            - account_closed
            - account_frozen
            - account_number_invalid
            - authorization_revoked
            - bank_account_blocked
            - fraudulent
            - insufficient_funds
            - invalid_field
            - limit_exceeded
            - no_account
            - not_authorized
            - not_permitted
            - processing_error
            - not_recognized
            - risk_blocked
            - stop_payment
          type: string
        failure_message:
          description: >-
            Message to user further explaining the reason for the outbound
            transfer failure.
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        metadata:
          description: >-
            Set of [key-value pairs](https://api.tilled.com) that you can attach
            to an object. This can be useful for storing additional information
            about the object in a structured format. Individual keys can be
            unset by posting an empty value (i.e. `''` or `null`) to them. All
            keys can be unset by posting an empty value (i.e. `{}` or `null`) to
            `metadata`.
          additionalProperties:
            type: string
          example:
            order_id: '100123'
            internal_customer_id: 7cb1159d-875e-47ae-a309-319fa7ff395b
          type: object
        status:
          description: The status of the outbound transfer.
          enum:
            - canceled
            - failed
            - pending
            - succeeded
          type: string
        updated_at:
          description: Time at which the object was last updated.
          format: date-time
          type: string
      required:
        - account_id
        - amount
        - created_at
        - currency
        - destination_payment_method_id
        - id
        - status
        - updated_at
    OutboundTransferCreateParams:
      type: object
      properties:
        amount:
          description: >-
            Amount intended to be transferred by this OutboundTransfer. A
            positive integer representing how much to transfer in the smallest
            currency unit (e.g., 100 cents to transfer $1.00)
          maximum: 99999999
          minimum: 1
          type: number
        currency:
          description: >-
            Three-letter [ISO currency
            code](https://www.iso.org/iso-4217-currency-codes.html), in
            lowercase.
          enum:
            - aud
            - cad
            - dkk
            - eur
            - hkd
            - jpy
            - nzd
            - nok
            - gbp
            - zar
            - sek
            - chf
            - usd
          type: string
        destination_payment_method_id:
          description: >-
            ID of the destination [PaymentMethod](https://api.tilled.com) to
            attach to this OutboundTransfer.
            [PaymentMethod](https://api.tilled.com) must be of type `ach_debit`
            or `eft_debit`
          type: string
        metadata:
          description: >-
            Set of [key-value pairs](https://api.tilled.com) that you can attach
            to an object. This can be useful for storing additional information
            about the object in a structured format. Individual keys can be
            unset by posting an empty value (i.e. `''` or `null`) to them. All
            keys can be unset by posting an empty value (i.e. `{}` or `null`) to
            `metadata`.
          additionalProperties:
            type: string
          example:
            order_id: '100123'
            internal_customer_id: 7cb1159d-875e-47ae-a309-319fa7ff395b
          type: object
      required:
        - amount
        - currency
        - destination_payment_method_id
    PaginatedDto:
      type: object
      properties:
        has_more:
          description: >-
            Whether or not there are more elements available after this set. If
            `false`, this set comprises the end of the list.
          type: boolean
        limit:
          description: >-
            The maximum number of entries to return. If the value exceeds the
            maximum, then the maximum value will be used.
          type: number
        offset:
          description: >-
            The (zero-based) offset of the first item in the collection to
            return.
          type: number
        total:
          description: The total items count.
          type: number
      required:
        - has_more
    PartialAddress:
      type: object
      properties:
        city:
          description: City where address is located.
          maxLength: 40
          pattern: /^[^<\^\\\[\]";\*]*$/
          type: string
        country:
          description: >-
            2-digit Country code (e.g. 'US', 'CA') [See ISO 3166-1
            alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
          type: string
        state:
          description: >-
            State/province/region of the address. For US and CA use 2-digit
            state/province codes (e.g. 'AL', 'AK', 'BC', 'ON', 'etc'.)
          type: string
        street:
          description: First line of the street address
          maxLength: 50
          pattern: /^[^<\^\\\[\]";\*]*$/
          type: string
        street2:
          description: Second line of the street address, if required.
          maxLength: 50
          pattern: /^[^<\^\\\[\]";\*]*$/
          type: string
        zip:
          description: Zip code or postal code of the address. No special characters.
          maxLength: 10
          pattern: /^[^<\^\\\[\]";\*]*$/
          type: string
    PaymentIntent:
      type: object
      properties:
        account_id:
          description: >-
            ID of the Tilled account for which the funds of this PaymentIntent
            are intended.
          type: string
        amount:
          description: >-
            Amount intended to be collected by this PaymentIntent. A positive
            integer representing how much to charge in the smallest currency
            unit (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a
            zero-decimal currency).
          type: number
        amount_capturable:
          description: Amount that can be captured from this PaymentIntent.
          type: number
        amount_received:
          description: Amount that was collected by this PaymentIntent.
          type: number
        canceled_at:
          description: >-
            Populated when `status` is `canceled`, this is the time at which the
            PaymentIntent was canceled.
          format: date-time
          type: string
        cancellation_reason:
          description: >-
            Reason for cancellation of this PaymentIntent, either user-provided
            (`duplicate`, `fraudulent`, `requested_by_customer`, or `abandoned`)
            or generated by Tilled internally (`automatic`).
          enum:
            - duplicate
            - fraudulent
            - requested_by_customer
            - abandoned
            - automatic
          type: string
        capture_method:
          description: >-
            Controls when the funds will be captured from the customer’s
            account.


            `automatic`

            (Default) Tilled automatically captures funds when the customer
            authorizes the payment.


            `manual`

            Place a hold on funds when the customer authorizes the payment, but
            don't capture the funds until later.
          enum:
            - automatic
            - manual
          type: string
        charges:
          description: >-
            Charges that were created by this PaymentIntent, if any. At most,
            this list will only contain one successful charge.
          items:
            $ref: '#/components/schemas/Charge'
          type: array
        client_secret:
          description: >-
            The client secret of this PaymentIntent.

            The client secret, along with a publishable key, can be used to
            complete a payment from your frontend. It should not be stored,
            logged, embedded in URLs, or exposed to anyone other than the
            customer. Make sure that you have TLS enabled on any page that
            includes the client secret.
          type: string
        created_at:
          description: Time at which the object was created.
          format: date-time
          type: string
        currency:
          description: >-
            Three-letter [ISO currency
            code](https://www.iso.org/iso-4217-currency-codes.html), in
            lowercase.
          enum:
            - aud
            - cad
            - dkk
            - eur
            - hkd
            - jpy
            - nzd
            - nok
            - gbp
            - zar
            - sek
            - chf
            - usd
          type: string
        customer:
          $ref: '#/components/schemas/Customer'
        id:
          description: Unique identifier for the object.
          type: string
        last_payment_error:
          $ref: '#/components/schemas/PaymentIntentError'
        level3:
          $ref: '#/components/schemas/Level3'
        metadata:
          description: >-
            Set of [key-value pairs](https://api.tilled.com) that you can attach
            to an object. This can be useful for storing additional information
            about the object in a structured format.
          additionalProperties:
            type: string
          example:
            order_id: '100123'
            internal_customer_id: 7cb1159d-875e-47ae-a309-319fa7ff395b
          type: object
        occurrence_type:
          description: >-
            Used to identify authorization requests that use stored credentials
            to improve authorization rates and reduce fraud.


            `consumer_ad_hoc`

            Ad hoc consumer-initiated request


            `merchant_ad_hoc`

            Unscheduled merchant-initiated request


            `merchant_recurring`

            Scheduled, merchant-initiated recurring request
          enum:
            - consumer_ad_hoc
            - merchant_ad_hoc
            - merchant_recurring
          type: string
        payment_method:
          $ref: '#/components/schemas/PaymentMethod'
        payment_method_types:
          description: >-
            The list of payment method types (e.g. card) that this PaymentIntent
            is allowed to use.
          items:
            type: string
            enum:
              - card
              - ach_debit
              - eft_debit
              - card_present
          type: array
        platform_fee_amount:
          description: >-
            The amount of the fee (if any) that will be requested to be applied
            to the payment and transferred to the `partner` account. The amount
            of the fee collected will be capped a the total payment amount.
          type: number
        statement_descriptor_suffix:
          description: >-
            Provides information about a card payment that customers see on
            their statements. Concatenated with the prefix (shortened
            descriptor) or statement descriptor that’s set on the account to
            form the complete statement descriptor. Maximum 22 characters for
            the concatenated descriptor
          type: string
        status:
          description: >-
            Status of this PaymentIntent, one of `requires_payment_method`,
            `requires_confirmation`, `requires_action`, `processing`,
            `requires_capture`, `canceled`, or `succeeded`.
          enum:
            - canceled
            - processing
            - requires_action
            - requires_capture
            - requires_confirmation
            - requires_payment_method
            - succeeded
          type: string
        subscription_id:
          description: ID of the subscription related to this PaymentIntent (if any).
          type: string
        updated_at:
          description: Time at which the object was updated.
          format: date-time
          type: string
      required:
        - account_id
        - amount
        - amount_capturable
        - amount_received
        - capture_method
        - charges
        - client_secret
        - created_at
        - currency
        - id
        - payment_method_types
        - status
        - updated_at
      x-konfig-properties:
        customer:
          description: >-
            The Customer this PaymentIntent belongs to, if one exists. Payment
            methods attached to other Customers cannot be used with this
            PaymentIntent.
        last_payment_error:
          description: >-
            The payment error encountered in the previous PaymentIntent
            confirmation. It will be cleared if the PaymentIntent is later
            updated for any reason.
        level3:
          description: >-
            Level 2 and Level 3 (L2/L3) credit card processing refers to certain
            B2B card transactions for which the merchant might be eligible for
            lower credit card interchange rates. The lower rates may be
            available for merchants who provide more detailed information when
            processing card-not-present transactions.
        payment_method:
          description: The PaymentMethod used in this PaymentIntent.
    PaymentIntentCancelParams:
      type: object
      properties:
        cancellation_reason:
          description: >-
            Reason for canceling this PaymentIntent. Possible values are
            `duplicate`, `fraudulent`, `requested_by_customer`, or `abandoned`
          enum:
            - duplicate
            - fraudulent
            - requested_by_customer
            - abandoned
          type: string
    PaymentIntentCaptureParams:
      type: object
      properties:
        amount_to_capture:
          description: >-
            The amount to capture from the PaymentIntent, which must be less
            than or equal to the original amount. Any additional amount will be
            automatically refunded. Defaults to the full `amount` if not
            provided.
          maximum: 99999999
          minimum: 1
          type: number
        platform_fee_amount:
          description: >-
            The amount of the platform fee (if any) that will be requested to be
            applied to the payment and transferred to the `partner` account. The
            amount of the fee collected will be capped at the total payment
            amount.
          minimum: 0
          type: number
    PaymentIntentConfirmParams:
      type: object
      properties:
        payment_method_id:
          description: ID of the PaymentMethod to attach to this PaymentIntent.
          type: string
    PaymentIntentCreateParams:
      type: object
      properties:
        amount:
          description: >-
            Amount intended to be collected by this PaymentIntent. A positive
            integer representing how much to charge in the smallest currency
            unit (e.g., 100 cents to charge $1.00)
          maximum: 99999999
          minimum: 1
          type: number
        capture_method:
          description: >-
            Controls when the funds will be captured from the customer’s
            account.


            `automatic`

            (Default) Tilled automatically captures funds when the customer
            authorizes the payment.


            `manual`

            Place a hold on funds when the customer authorizes the payment, but
            don't capture the funds until later.
          enum:
            - automatic
            - manual
          type: string
        confirm:
          description: >-
            Set to 'true' to attempt to confirm this PaymentIntent immediately.
            This parameter defaults to `false`.
          type: boolean
        currency:
          description: Three-letter ISO currency code, in lowercase.
          enum:
            - aud
            - cad
            - dkk
            - eur
            - hkd
            - jpy
            - nzd
            - nok
            - gbp
            - zar
            - sek
            - chf
            - usd
          type: string
        level3:
          $ref: '#/components/schemas/Level3'
        metadata:
          description: >-
            Set of [key-value pairs](https://api.tilled.com) that you can attach
            to an object. This can be useful for storing additional information
            about the object in a structured format. Individual keys can be
            unset by posting an empty value (i.e. `''` or `null`) to them. All
            keys can be unset by posting an empty value (i.e. `{}` or `null`) to
            `metadata`.
          additionalProperties:
            type: string
          example:
            order_id: '100123'
            internal_customer_id: 7cb1159d-875e-47ae-a309-319fa7ff395b
          type: object
        occurrence_type:
          description: >-
            Used to identify authorization requests that use stored credentials
            to improve authorization rates and reduce fraud.


            `consumer_ad_hoc`

            Ad hoc consumer-initiated request


            `merchant_ad_hoc`

            Unscheduled merchant-initiated request


            `merchant_recurring`

            Scheduled, merchant-initiated recurring request
          enum:
            - consumer_ad_hoc
            - merchant_ad_hoc
            - merchant_recurring
          type: string
        payment_method_id:
          description: ID of the PaymentMethod to attach to this PaymentIntent.
          type: string
        payment_method_types:
          description: >-
            The list of payment method types (e.g. card) that this PaymentIntent
            is allowed to use.
          items:
            type: string
            enum:
              - card
              - ach_debit
              - eft_debit
              - card_present
          type: array
        platform_fee_amount:
          description: >-
            The amount of the platform fee (if any) that will be requested to be
            applied to the payment and transferred to the `partner` account. The
            amount of the fee collected will be capped at the total payment
            amount.
          minimum: 0
          type: number
        statement_descriptor_suffix:
          description: >-
            Provides information about a payment that customers see on their
            statements. Concatenated with the prefix (shortened descriptor) or
            statement descriptor that’s set on the account to form the complete
            statement descriptor. Maximum 20 characters for the concatenated
            descriptor.
          maxLength: 20
          minLength: 1
          pattern: ^[^<>\'"*]*$
          type: string
      required:
        - amount
        - currency
        - payment_method_types
      x-konfig-properties:
        level3:
          description: >-
            Level 2 and Level 3 (L2/L3) credit card processing refers to certain
            B2B card transactions for which the merchant might be eligible for
            lower credit card interchange rates. The lower rates may be
            available for merchants who provide more detailed information when
            processing card-not-present transactions.
    PaymentIntentDataCreateParams:
      type: object
      properties:
        metadata:
          description: >-
            Set of [key-value pairs](https://api.tilled.com) that you can attach
            to an object. This can be useful for storing additional information
            about the object in a structured format. Individual keys can be
            unset by posting an empty value (i.e. `''` or `null`) to them. All
            keys can be unset by posting an empty value (i.e. `{}` or `null`) to
            `metadata`.
          additionalProperties:
            type: string
          example:
            order_id: '100123'
            internal_customer_id: 7cb1159d-875e-47ae-a309-319fa7ff395b
          type: object
        payment_method_types:
          description: >-
            The list of payment method types (e.g. card) that this PaymentIntent
            is allowed to use.
          items:
            type: string
            enum:
              - card
              - ach_debit
              - eft_debit
              - card_present
          type: array
        platform_fee_amount:
          description: >-
            The amount of the platform fee (if any) that will be requested to be
            applied to the payment and transferred to the `partner` account. The
            amount of the fee collected will be capped at the total payment
            amount.
          minimum: 0
          type: number
      required:
        - payment_method_types
    PaymentIntentError:
      type: object
      properties:
        charge_id:
          description: The id of the failed charge.
          type: string
        code:
          description: Error code explaining reason for charge failure.
          enum:
            - account_closed
            - account_frozen
            - account_number_invalid
            - authorization_revoked
            - avs_check_failed
            - bank_account_blocked
            - call_issuer
            - card_not_supported
            - expired_card
            - fraudulent
            - generic_decline
            - incorrect_cvc
            - insufficient_funds
            - invalid_expiry
            - invalid_field
            - invalid_number
            - limit_exceeded
            - no_account
            - not_authorized
            - not_permitted
            - processing_error
            - not_recognized
            - pickup_card
            - restricted_card
            - risk_blocked
            - service_not_allowed
            - stop_payment
            - try_again_later
            - internal_error
            - no_action_taken
            - card_removed
          type: string
        message:
          description: A human-readable message providing more details about the error.
          type: string
      required:
        - charge_id
        - message
    PaymentIntentUpdateParams:
      type: object
      properties:
        amount:
          description: >-
            Amount intended to be collected by this PaymentIntent. A positive
            integer representing how much to charge in the smallest currency
            unit (e.g., 100 cents to charge $1.00)
          maximum: 99999999
          minimum: 1
          type: number
        capture_method:
          description: >-
            Controls when the funds will be captured from the customer’s
            account.


            `automatic`

            (Default) Tilled automatically captures funds when the customer
            authorizes the payment.


            `manual`

            Place a hold on funds when the customer authorizes the payment, but
            don't capture the funds until later.
          enum:
            - automatic
            - manual
          type: string
        currency:
          description: Three-letter ISO currency code, in lowercase.
          enum:
            - aud
            - cad
            - dkk
            - eur
            - hkd
            - jpy
            - nzd
            - nok
            - gbp
            - zar
            - sek
            - chf
            - usd
          type: string
        level3:
          $ref: '#/components/schemas/Level3'
        metadata:
          description: >-
            Set of [key-value pairs](https://api.tilled.com) that you can attach
            to an object. This can be useful for storing additional information
            about the object in a structured format. Individual keys can be
            unset by posting an empty value (i.e. `''` or `null`) to them. All
            keys can be unset by posting an empty value (i.e. `{}` or `null`) to
            `metadata`.
          additionalProperties:
            type: string
          example:
            order_id: '100123'
            internal_customer_id: 7cb1159d-875e-47ae-a309-319fa7ff395b
          type: object
        occurrence_type:
          description: >-
            Used to identify authorization requests that use stored credentials
            to improve authorization rates and reduce fraud.


            `consumer_ad_hoc`

            Ad hoc consumer-initiated request


            `merchant_ad_hoc`

            Unscheduled merchant-initiated request


            `merchant_recurring`

            Scheduled, merchant-initiated recurring request
          enum:
            - consumer_ad_hoc
            - merchant_ad_hoc
            - merchant_recurring
          type: string
        payment_method_id:
          description: ID of the PaymentMethod to attach to this PaymentIntent.
          type: string
        payment_method_types:
          description: >-
            The list of payment method types (e.g. card) that this PaymentIntent
            is allowed to use.
          items:
            type: string
            enum:
              - card
              - ach_debit
              - eft_debit
              - card_present
          type: array
        platform_fee_amount:
          description: >-
            The amount of the platform fee (if any) that will be requested to be
            applied to the payment and transferred to the `partner` account. The
            amount of the fee collected will be capped at the total payment
            amount.
          minimum: 0
          type: number
        statement_descriptor_suffix:
          description: >-
            Provides information about a payment that customers see on their
            statements. Concatenated with the prefix (shortened descriptor) or
            statement descriptor that’s set on the account to form the complete
            statement descriptor. Maximum 20 characters for the concatenated
            descriptor.
          maxLength: 20
          minLength: 1
          pattern: ^[^<>\'"*]*$
          type: string
      x-konfig-properties:
        level3:
          description: >-
            Level 2 and Level 3 (L2/L3) credit card processing refers to certain
            B2B card transactions for which the merchant might be eligible for
            lower credit card interchange rates. The lower rates may be
            available for merchants who provide more detailed information when
            processing card-not-present transactions.
    PaymentMethod:
      type: object
      properties:
        ach_debit:
          $ref: '#/components/schemas/AchDebitDetails'
        billing_details:
          $ref: '#/components/schemas/PaymentMethodBillingDetails'
        card:
          $ref: '#/components/schemas/CardDetails'
        card_present:
          $ref: '#/components/schemas/CardDetails'
        chargeable:
          description: >-
            Indicates whether or not the payment method can be used to make a
            charge. When a payment method is created via Tilled.js, a payment
            method is only capable of being used once (i.e. single-use) unless
            it is attached to a customer, in which case it becomes reusable.
          type: boolean
        created_at:
          description: Time at which the object was created.
          format: date-time
          type: string
        customer_id:
          description: The ID of the Customer to which this PaymentMethod is saved.
          type: string
        eft_debit:
          $ref: '#/components/schemas/EftDebitDetails'
        expires_at:
          description: >-
            The time at which this PaymentMethod expires and is no longer
            available. PaymentMethods are created using a token generated by
            Tilled.js representing the details of a payment method (e.g. card or
            bank details). This token is a single-use token with an expiration
            date. Use `/payment-methods/{id}/attach` to make this PaymentMethod
            reusable.
          format: date-time
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        metadata:
          description: >-
            Set of [key-value pairs](https://api.tilled.com) that you can attach
            to an object. This can be useful for storing additional information
            about the object in a structured format.
          additionalProperties:
            type: string
          example:
            order_id: '100123'
            internal_customer_id: 7cb1159d-875e-47ae-a309-319fa7ff395b
          type: object
        nick_name:
          description: A customer provided name for the PaymentMethod.
          type: string
        terminal_reader:
          $ref: '#/components/schemas/TerminalReader'
        type:
          description: >-
            The type of the PaymentMethod. An additional hash is included on the
            PaymentMethod with a name matching this value. It contains
            additional information specific to the PaymentMethod type.
          enum:
            - card
            - ach_debit
            - eft_debit
            - card_present
          type: string
        updated_at:
          description: Time at which the object was last updated.
          format: date-time
          type: string
      required:
        - chargeable
        - created_at
        - id
        - type
        - updated_at
      x-konfig-properties:
        ach_debit:
          description: >-
            If this is a `ach_debit` PaymentMethod, this hash contains details
            about the ACH Debit bank account.
        billing_details:
          description: >-
            Billing information associated with the PaymentMethod that may be
            used or required by particular types of payment methods. (e.g. it is
            required for `ach_debit` and Apple Pay)
        card:
          description: >-
            If this is a `card` PaymentMethod, this hash contains the user's
            card details.
        eft_debit:
          description: >-
            If this is a `eft_debit` PaymentMethod, this hash contains details
            about the EFT Debit bank account.
        terminal_reader:
          description: >-
            If the payment method type is "card_present" then we return the
            terminal_reader object.
    PaymentMethodAttachParams:
      type: object
      properties:
        customer_id:
          description: The ID of the Customer to which to attach the PaymentMethod.
          type: string
      required:
        - customer_id
    PaymentMethodBillingDetails:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/PartialAddress'
        email:
          description: Email address
          type: string
        name:
          description: Full name
          pattern: /^[^<>]*$/
          type: string
        phone:
          description: Billing phone number (including extension)
          pattern: /^[^<>]*$/
          type: string
      x-konfig-properties:
        address:
          description: The billing address.
    PaymentMethodCreateAchDebitSingleUseTokenParams:
      type: object
      properties:
        ach_debit:
          $ref: '#/components/schemas/PaymentMethodCreateParamsAchDebit'
        billing_details:
          $ref: >-
            #/components/schemas/PaymentMethodCreateDebitSingleUseTokenParamsBillingDetails
      required:
        - ach_debit
        - billing_details
      x-konfig-properties:
        ach_debit:
          description: Details about the ACH Direct Debit bank account.
        billing_details:
          description: >-
            Billing information associated with the PaymentMethod that may be
            used or required by particular types of payment methods.
    PaymentMethodCreateDebitSingleUseTokenParamsBillingDetails:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/BaseAddress'
        email:
          description: Email address
          type: string
        name:
          description: Full name
          pattern: /^[^<>]*$/
          type: string
        phone:
          description: Billing phone number (including extension)
          pattern: /^[^<>]*$/
          type: string
      required:
        - address
      x-konfig-properties:
        address:
          description: The billing address.
    PaymentMethodCreateParams:
      type: object
      properties:
        ach_debit:
          $ref: '#/components/schemas/PaymentMethodCreateParamsAchDebit'
        billing_details:
          $ref: '#/components/schemas/PaymentMethodCreateParamsBillingDetails'
        card:
          $ref: '#/components/schemas/PaymentMethodCreateParamsCard'
        eft_debit:
          $ref: '#/components/schemas/PaymentMethodCreateParamsEftDebit'
        metadata:
          description: >-
            Set of [key-value pairs](https://api.tilled.com) that you can attach
            to an object. This can be useful for storing additional information
            about the object in a structured format. Individual keys can be
            unset by posting an empty value (i.e. `''` or `null`) to them. All
            keys can be unset by posting an empty value (i.e. `{}` or `null`) to
            `metadata`.
          additionalProperties:
            type: string
          example:
            order_id: '100123'
            internal_customer_id: 7cb1159d-875e-47ae-a309-319fa7ff395b
          type: object
        nick_name:
          description: A customer provided name for the PaymentMethod.
          pattern: /^[^<>]*$/
          type: string
        payment_token:
          description: >-
            A token generated by Tilled.js representing the details of a payment
            method (e.g. card or bank details)
          type: string
        terminal_reader_id:
          description: >-
            If this is a `card_present` PaymentMethod, this is the id of
            terminal reader you want to use to collect card information.

            Starts with a prefix `term_`
          type: string
        type:
          description: >-
            The type of the PaymentMethod. An additional hash is included on the
            PaymentMethod with a name matching this value. It contains
            additional information specific to the PaymentMethod type. If the
            selected type is `card_present`, then `terminal_reader_id` is
            required.
          enum:
            - card
            - ach_debit
            - eft_debit
            - card_present
          type: string
      required:
        - type
      x-konfig-properties:
        ach_debit:
          description: >-
            If this is an `ach_debit` PaymentMethod, this hash contains details
            about the ACH Direct Debit bank account.
        billing_details:
          description: >-
            Billing information associated with the PaymentMethod that may be
            used or required by most types of payment methods.
        card:
          description: >-
            If this is a `card` PaymentMethod, this hash contains the user's
            card details. When providing a card number, you must meet the
            requirements for PCI compliance. We strongly recommend using
            Tilled.js instead of interacting with this API directly.
        eft_debit:
          description: >-
            If this is an `eft_debit` PaymentMethod, this hash contains details
            about the EFT Direct Debit bank account.
    PaymentMethodCreateParamsAchDebit:
      type: object
      properties:
        account_holder_name:
          description: The name of the customer or company that owns the bank account.
          maxLength: 22
          type: string
        account_number:
          description: This is the bank account number
          maxLength: 17
          minLength: 4
          type: string
        account_type:
          description: Bank account type.
          enum:
            - checking
            - savings
          type: string
        routing_number:
          description: >-
            The sequence of 9-digits used by banks to identify specific
            financial institutions (i.e. ABA routing number)
          type: string
      required:
        - account_holder_name
        - account_number
        - account_type
        - routing_number
    PaymentMethodCreateParamsBillingDetails:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/PartialAddress'
        email:
          description: Email address
          type: string
        name:
          description: Full name
          pattern: /^[^<>]*$/
          type: string
        phone:
          description: Billing phone number (including extension)
          pattern: /^[^<>]*$/
          type: string
      x-konfig-properties:
        address:
          description: The billing address.
    PaymentMethodCreateParamsCard:
      type: object
      properties:
        cvc:
          description: >-
            The card's security code (aka CVC, CVV, etc). It is highly
            recommended to always include this value.
          type: string
        exp_month:
          description: Two-digit number representing the card's expiration month.
          maximum: 12
          minimum: 1
          type: number
        exp_year:
          description: Four-digit number representing the card's expiration year.
          maximum: 9999
          minimum: 1000
          type: number
        number:
          description: The card number, as a string without any separators.
          type: string
      required:
        - exp_month
        - exp_year
        - number
    PaymentMethodCreateParamsEftDebit:
      type: object
      properties:
        account_holder_name:
          description: The name of the customer or company that owns the bank account.
          maxLength: 22
          type: string
        account_number:
          description: This is the bank account number
          maxLength: 12
          minLength: 4
          type: string
        institution_id:
          description: >-
            The sequence of three-digits used by banks to identify specific
            financial institutions
          maxLength: 3
          minLength: 3
          type: string
        transit_number:
          description: >-
            The sequence of five-digits used by banks to identify specific
            financial institution's branch
          maxLength: 5
          minLength: 5
          type: string
      required:
        - account_holder_name
        - account_number
        - institution_id
        - transit_number
    PaymentMethodUpdateParams:
      type: object
      properties:
        billing_details:
          $ref: '#/components/schemas/PaymentMethodCreateParamsBillingDetails'
        metadata:
          description: >-
            Set of [key-value pairs](https://api.tilled.com) that you can attach
            to an object. This can be useful for storing additional information
            about the object in a structured format. Individual keys can be
            unset by posting an empty value (i.e. `''` or `null`) to them. All
            keys can be unset by posting an empty value (i.e. `{}` or `null`) to
            `metadata`.
          additionalProperties:
            type: string
          example:
            order_id: '100123'
            internal_customer_id: 7cb1159d-875e-47ae-a309-319fa7ff395b
          type: object
        nick_name:
          description: A customer provided name for the PaymentMethod.
          pattern: /^[^<>]*$/
          type: string
      x-konfig-properties:
        billing_details:
          description: >-
            Billing information associated with the PaymentMethod that may be
            used or required by most types of payment methods.
    Payout:
      type: object
      properties:
        description:
          description: >-
            An arbitrary string attached to the object. Often useful for
            displaying to users.
          type: string
        account_id:
          type: string
        amount:
          description: >-
            Amount to be transferred to your bank account, in the smallest
            currency unit (e.g., 100 cents to charge $1.00 or 100 to charge
            ¥100, a zero-decimal currency).
          type: number
        balance_transaction:
          $ref: '#/components/schemas/BalanceTransaction'
        created_at:
          description: Time at which the object was created.
          format: date-time
          type: string
        currency:
          description: >-
            Three-letter [ISO currency
            code](https://www.iso.org/iso-4217-currency-codes.html), in
            lowercase.
          enum:
            - aud
            - cad
            - dkk
            - eur
            - hkd
            - jpy
            - nzd
            - nok
            - gbp
            - zar
            - sek
            - chf
            - usd
          type: string
        failure_code:
          description: Error code explaining the reason for a payout failure, if available.
          enum:
            - account_closed
            - account_frozen
            - bank_account_restricted
            - bank_ownership_changed
            - could_not_process
            - debit_not_authorized
            - declined
            - invalid_account_number
            - incorrect_account_holder_name
            - incorrect_account_holder_address
            - incorrect_account_holder_tax_id
            - invalid_currency
            - no_account
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        paid_at:
          description: The date the payout was paid.
          format: date-time
          type: string
        status:
          description: >-
            Current status of the payout: `paid`, `pending`, `in_transit`,
            `canceled` or `failed`. A payout is `pending` until it is submitted
            to the bank, when it becomes `in_transit`. The status then changes
            to `paid` if the transaction goes through, or to `failed` or
            `canceled` (within 5 business days). Some failed payouts may
            initially show as `paid` but then change to `failed`.
          enum:
            - canceled
            - failed
            - in_transit
            - paid
            - pending
          type: string
        transaction_count:
          description: >-
            An optional property that is included when specified in a query
            parameter on request. It represents the number of
            balance_transaction objects associated with the payout (aside from
            the payout balance transaction itself).
          type: number
        updated_at:
          description: Time at which the object was last updated.
          format: date-time
          type: string
      required:
        - account_id
        - amount
        - balance_transaction
        - created_at
        - currency
        - id
        - status
        - updated_at
      x-konfig-properties:
        balance_transaction:
          description: >-
            The balance transaction that describes the impact of this payout on
            your account balance.

            Note: Multiple balance transactions may be associated with this
            resource and you can fetch them all with
            `/balance-transactions?source_id={id}`.
          deprecated: true
    PlatformFee:
      type: object
      properties:
        amount:
          description: Amount earned, in minor currency units.
          type: number
        amount_refunded:
          description: >-
            Amount refunded, in minor currency units. Can be less than the
            amount attribute if a partial refund was issued.
          type: number
        balance_transaction:
          $ref: '#/components/schemas/BalanceTransaction'
        charge_id:
          description: Id of the charge this fee was taken from.
          type: string
        created_at:
          description: Time at which the object was created.
          format: date-time
          type: string
        currency:
          description: >-
            Three-letter [ISO currency
            code](https://www.iso.org/iso-4217-currency-codes.html), in
            lowercase.
          enum:
            - aud
            - cad
            - dkk
            - eur
            - hkd
            - jpy
            - nzd
            - nok
            - gbp
            - zar
            - sek
            - chf
            - usd
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        payee_account_id:
          description: >-
            Id of the Tilled account that earned this fee. This is generally an
            account of `type` `partner`.
          type: string
        payer_account_id:
          description: >-
            Id of the Tilled account this fee was taken from. This is generally
            an account of `type` `merchant`.
          type: string
        refunded:
          description: >-
            Whether the fee has been fully refunded. If the fee is only
            partially refunded, this attribute will be false.
          type: boolean
        refunds:
          description: A list of refunds that have been applied to the fee.
          items:
            $ref: '#/components/schemas/PlatformFeeRefund'
          type: array
        updated_at:
          description: Time at which the object was last updated.
          format: date-time
          type: string
      required:
        - amount
        - amount_refunded
        - balance_transaction
        - charge_id
        - created_at
        - currency
        - id
        - payee_account_id
        - payer_account_id
        - refunded
        - refunds
        - updated_at
      x-konfig-properties:
        balance_transaction:
          description: >-
            The balance transaction that describes the impact of this collected
            platform fee on your account balance (not including refunds).

            Note: Multiple balance transactions may be associated with this
            resource and you can fetch them all with
            `/balance-transactions?source_id={id}`.
          deprecated: true
    PlatformFeeRefund:
      type: object
      properties:
        amount:
          description: Amount in the smallest currency unit.
          type: number
        balance_transaction:
          $ref: '#/components/schemas/BalanceTransaction'
        created_at:
          description: Time at which the object was created.
          format: date-time
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        platform_fee_id:
          description: ID of the platform fee that was refunded.
          type: string
        updated_at:
          description: Time at which the object was last updated.
          format: date-time
          type: string
      required:
        - amount
        - balance_transaction
        - created_at
        - id
        - platform_fee_id
        - updated_at
      x-konfig-properties:
        balance_transaction:
          description: >-
            The balance transaction that describes the impact of this refund on
            your account balance.

            Note: Multiple balance transactions may be associated with this
            resource and you can fetch them all with
            `/balance-transactions?source_id={id}`.
          deprecated: true
    Price:
      type: object
      properties:
        currency:
          description: Three-letter ISO currency code, in lowercase.
          enum:
            - aud
            - cad
            - dkk
            - eur
            - hkd
            - jpy
            - nzd
            - nok
            - gbp
            - zar
            - sek
            - chf
            - usd
          type: string
        product_data:
          $ref: '#/components/schemas/Product'
        unit_amount:
          description: >-
            A non-negative integer in minor units (i.e. cents) representing how
            much to charge.
          maximum: 99999999
          minimum: 1
          type: number
      required:
        - currency
        - product_data
        - unit_amount
      x-konfig-properties:
        product_data:
          description: Data about the specific goods or services offered at this price.
    PricingTemplate:
      type: object
      properties:
        account_id:
          description: The ID of the Account associated with this pricing template.
          type: string
        account_monthly_fee:
          description: >-
            The account monthly fee configured for this pricing template, in
            currency minor units.
          type: number
        account_monthly_minimum_fee:
          description: >-
            The account monthly minimum fee configured for this pricing
            template, in currency minor units.
          type: number
        ach_debit:
          $ref: '#/components/schemas/DebitFeeTemplate'
        card:
          $ref: '#/components/schemas/CardChargeFeeTemplate'
        card_present:
          $ref: '#/components/schemas/CardPresentChargeFeeTemplate'
        created_at:
          description: Time at which the object was created.
          format: date-time
          type: string
        currency:
          description: The currency this pricing template applies to.
          enum:
            - aud
            - cad
            - dkk
            - eur
            - hkd
            - jpy
            - nzd
            - nok
            - gbp
            - zar
            - sek
            - chf
            - usd
          type: string
        eft_debit:
          $ref: '#/components/schemas/DebitFeeTemplate'
        id:
          description: Unique identifier for the object.
          type: string
        name:
          description: The name of this pricing template.
          type: string
        payment_method_type:
          description: The payment method type this pricing template applies to.
          enum:
            - card
            - ach_debit
            - card_present
            - eft_debit
          type: string
        status:
          description: The status of this pricing template
          enum:
            - active
            - archived
            - pending
          type: string
        updated_at:
          description: Time at which the object was last updated.
          format: date-time
          type: string
      required:
        - account_id
        - account_monthly_fee
        - account_monthly_minimum_fee
        - created_at
        - currency
        - id
        - name
        - payment_method_type
        - status
        - updated_at
      x-konfig-properties:
        ach_debit:
          description: >-
            If this is an `ach_debit` pricing template, this hash contains the
            direct debit specific pricing details.
        card:
          description: >-
            If this is a `card` pricing template, this hash contains the card
            specific pricing details.
        card_present:
          description: >-
            If this is a `card_present` pricing template, this hash contains the
            card specific pricing details.
        eft_debit:
          description: >-
            If this is an `eft_debit` pricing template, this hash contains the
            direct debit specific pricing details.
    Principal:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/PrincipalAddress'
        date_of_birth:
          description: >-
            Date of birth of the principal. Format must be ISO8601 (e.g.
            '2000-01-25'; format 'YYYY-MM-DD'). Currently the principal must be
            older than 18 years of age.
          format: date-time
          type: string
        email:
          description: Email address of the principal
          type: string
        first_name:
          description: First name of the principal.
          pattern: /^[^<>]*$/
          type: string
        id:
          description: >-
            The unique identifier for this principal. It is not required upon
            initial submission. The `ssn` property is redacted in any responses,
            so if the principal needs to be updated then provide this identifier
            that was generated during the initial request.
          maxLength: 36
          type: string
        is_applicant:
          description: >-
            Indicates whether this principal is the applicant for the merchant
            account. For US merchant accounts (`region = US`) it is required
            that _exactly_ one of the principals is specified as the applicant.
          type: boolean
        is_control_prong:
          description: >-
            This indicates whether the principal is the Control Prong. Control
            Prong is an individual with significant responsibility for managing
            the legal entity customer (e.g., a CEO, CFO, COO, Managing Member,
            General Partner, President, Vice-President, or Treasurer). For US
            merchant accounts (`region = US`) it is required that _exactly_ one
            of the principals is specified as the Control Prong.
          type: boolean
        job_title:
          description: Job title of the principal (e.g. CEO, CFO, President, VP)
          pattern: /^[^<>]*$/
          type: string
        last_name:
          description: Last name of the principal.
          pattern: /^[^<>]*$/
          type: string
        middle_name:
          description: Middle name of the principal.
          pattern: /^[^<>]*$/
          type: string
        nationality:
          description: Nationality of the principal
          enum:
            - AF
            - AL
            - DZ
            - US
            - AS
            - AD
            - AO
            - AI
            - AQ
            - AG
            - AR
            - AM
            - AW
            - AU
            - AT
            - AZ
            - BS
            - BH
            - BD
            - BB
            - BL
            - BY
            - BE
            - BZ
            - BJ
            - BM
            - BT
            - BO
            - BA
            - BR
            - GB
            - BN
            - BG
            - BF
            - BI
            - KH
            - CM
            - CA
            - CV
            - KY
            - CF
            - TD
            - CL
            - CN
            - CX
            - CC
            - CO
            - KM
            - CG
            - CD
            - CK
            - CR
            - HR
            - CU
            - CW
            - CY
            - CZ
            - DK
            - DJ
            - DM
            - DO
            - NL
            - EC
            - EG
            - AE
            - GQ
            - ER
            - EE
            - ET
            - FK
            - FO
            - FJ
            - PH
            - FI
            - FR
            - GF
            - PF
            - GA
            - GM
            - GE
            - DE
            - GH
            - GI
            - GR
            - GL
            - GD
            - GP
            - GU
            - GT
            - GW
            - GN
            - GY
            - HT
            - HN
            - HK
            - HU
            - KI
            - IS
            - IN
            - ID
            - IR
            - IQ
            - IE
            - IL
            - IT
            - CI
            - JM
            - JP
            - JO
            - KZ
            - KE
            - KN
            - KW
            - KG
            - LA
            - LV
            - LB
            - LR
            - LY
            - LI
            - LT
            - LU
            - MO
            - MK
            - YT
            - MG
            - MW
            - MY
            - MV
            - ML
            - MT
            - IM
            - MH
            - MQ
            - MR
            - MU
            - MX
            - FM
            - MD
            - MC
            - MN
            - ME
            - MS
            - MA
            - LS
            - BW
            - MZ
            - MM
            - NA
            - NR
            - NP
            - NC
            - NZ
            - VU
            - NI
            - NG
            - NE
            - NU
            - NF
            - KP
            - MP
            - 'NO'
            - OM
            - PK
            - PW
            - PS
            - PA
            - PG
            - PY
            - PE
            - PN
            - PL
            - PT
            - PR
            - QA
            - RO
            - RU
            - RW
            - SH
            - LC
            - VC
            - PM
            - SV
            - WS
            - SM
            - SA
            - SN
            - RS
            - SC
            - SL
            - SG
            - SK
            - SI
            - SB
            - SO
            - ZA
            - KR
            - ES
            - LK
            - SD
            - SS
            - SR
            - SZ
            - SE
            - CH
            - SY
            - ST
            - TW
            - TJ
            - TZ
            - TH
            - TL
            - TG
            - TK
            - TO
            - TT
            - TN
            - TR
            - TM
            - TC
            - TV
            - UG
            - UA
            - UY
            - UZ
            - VE
            - VN
            - VG
            - WF
            - EH
            - YE
            - ZM
            - ZW
            - AX
          type: string
        percentage_shareholding:
          description: Percentage of ownership of the company.
          maximum: 100
          minimum: 0
          type: number
        phone:
          description: Phone number of the principal.
          pattern: /^[^<>]*$/
          type: string
        previous_address:
          $ref: '#/components/schemas/PrincipalAddress'
        ssn:
          description: >-
            Social Security Number (US) or Social Insurance Number (CA).
            Optional when business type is `NPCORP`, `CHARITY`, or `GOV`.
            Expected format: 9-digit string of numbers (e.g. "111444777").
            Optional in CA.
          maxLength: 9
          minLength: 9
          type: string
        type:
          description: >-
            Type of representative. Ex. shareholder, director, officer, merchant
            rep
          enum:
            - director
            - shareholder
            - merchant_rep
            - contact
          type: string
      required:
        - address
        - date_of_birth
        - first_name
        - is_applicant
        - job_title
        - last_name
        - percentage_shareholding
        - phone
      x-konfig-properties:
        address:
          description: Registered *residential* address for this principal
        previous_address:
          description: >-
            Previous registered *residential* address for this principal.
            Require for Canadian principals and have lived at their current
            address for fewer than 3 years.
    PrincipalAddress:
      type: object
      properties:
        city:
          description: City where address is located.
          type: string
        country:
          description: >-
            2-digit Country code (e.g. 'US', 'CA') [See ISO 3166-1
            alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
          type: string
        state:
          description: >-
            State/province/region of the address. For US and CA use 2-digit
            state/province codes (e.g. 'AL', 'AK', 'BC', 'ON', 'etc'.)
          type: string
        street:
          description: First line of the street address
          type: string
        street2:
          description: Second line of the street address, if required.
          type: string
        years_at_address:
          description: >-
            Years at given address. Required for CA merchant accounts (`region =
            CA`).
          maximum: 99
          minimum: 0
          type: number
        zip:
          description: Zip code or postal code of the address. No special characters.
          maxLength: 10
          type: string
      required:
        - city
        - country
        - state
        - street
        - zip
    Product:
      type: object
      properties:
        description:
          description: >-
            The product's description, meant to be displayable to the customer.
            Use this field to optionally store a long form explaination of the
            product being sold for your own rendering purposes.
          maxLength: 500
          type: string
        images:
          description: >-
            A list of up to 8 URLs of images for this product, meant to be
            displayable to the customer.
          items:
            type: string
          type: array
        name:
          description: The product's name, meant to be displayable to the customer.
          type: string
      required:
        - name
    ProductCode:
      type: object
      properties:
        description:
          description: >-
            The user friendly description. Example: *2.90% | $0.30 TXN | $10
            CHBK/Reversals/Retrievals | $0 Monthly*
          type: string
        created_at:
          description: Time at which the object was created.
          format: date-time
          type: string
        currency:
          description: >-
            Three-letter [ISO currency
            code](https://www.iso.org/iso-4217-currency-codes.html), in
            lowercase.
          enum:
            - aud
            - cad
            - dkk
            - eur
            - hkd
            - jpy
            - nzd
            - nok
            - gbp
            - zar
            - sek
            - chf
            - usd
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        payment_method_type:
          description: The payment method type that this product code is valid for.
          enum:
            - card
            - ach_debit
            - card_present
            - eft_debit
          type: string
        region:
          description: The Region in which the product code is usable
          enum:
            - US
            - CA
          type: string
        updated_at:
          description: Time at which the object was last updated.
          format: date-time
          type: string
      required:
        - created_at
        - currency
        - description
        - id
        - payment_method_type
        - updated_at
    Refund:
      type: object
      properties:
        amount:
          description: Amount (in the smallest currency unit) refunded.
          type: number
        balance_transaction:
          $ref: '#/components/schemas/BalanceTransaction'
        charge_id:
          description: ID of the Charge that was refunded.
          type: string
        created_at:
          description: Time at which the object was created.
          format: date-time
          type: string
        failure_code:
          description: Error code explaining reason for refund failure.
          enum:
            - expired_or_canceled_card
            - lost_or_stolen_card
            - fraudulent
            - risk_blocked
            - declined
            - proprietary_card_activity_regulations
            - blacklisted_card
            - not_permitted
            - processing_error
          type: string
        failure_message:
          description: >-
            Message to user further explaining the reason for the refund
            failure.
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        metadata:
          description: >-
            Set of [key-value pairs](https://api.tilled.com) that you can attach
            to an object. This can be useful for storing additional information
            about the object in a structured format.
          additionalProperties:
            type: string
          example:
            order_id: '100123'
            internal_customer_id: 7cb1159d-875e-47ae-a309-319fa7ff395b
          type: object
        payment_intent_id:
          description: ID of the PaymentIntent that was refunded.
          type: string
        payment_method_id:
          description: ID of the payment method that was refunded.
          type: string
        reason:
          description: >-
            Reason for the refund, either user-provided (`duplicate`,
            `fraudulent`, or `requested_by_customer`) or generated  by Tilled
            (`expired_uncaptured_charge`)
          enum:
            - duplicate
            - fraudulent
            - requested_by_customer
            - expired_uncaptured_charge
            - partial_capture
          type: string
        status:
          description: >-
            Status of the refund, one of `pending`, `succeeded`, `failed`,
            `canceled` or `requires_action`.
          enum:
            - canceled
            - pending
            - succeeded
            - failed
            - requires_action
          type: string
        updated_at:
          description: Time at which the object was last updated.
          format: date-time
          type: string
      required:
        - amount
        - balance_transaction
        - charge_id
        - created_at
        - id
        - payment_intent_id
        - status
        - updated_at
      x-konfig-properties:
        balance_transaction:
          description: >-
            The balance transaction that describes the impact of this refund on
            your account balance.

            Note: Multiple balance transactions may be associated with this
            resource and you can fetch them all with
            `/balance-transactions?source_id={id}`.
          deprecated: true
    RefundCreateParams:
      type: object
      properties:
        amount:
          description: >-
            A positive integer representing how much of this charge to refund in
            the smallest currency unit (e.g., 100 cents to charge $1.00). *The
            default is the entire charge.*
          maximum: 99999999
          minimum: 1
          type: number
        metadata:
          description: >-
            Set of [key-value pairs](https://api.tilled.com) that you can attach
            to an object. This can be useful for storing additional information
            about the object in a structured format. Individual keys can be
            unset by posting an empty value (i.e. `''` or `null`) to them. All
            keys can be unset by posting an empty value (i.e. `{}` or `null`) to
            `metadata`.
          additionalProperties:
            type: string
          example:
            order_id: '100123'
            internal_customer_id: 7cb1159d-875e-47ae-a309-319fa7ff395b
          type: object
        payment_intent_id:
          description: ID of the PaymentIntent to refund.
          type: string
        reason:
          description: >-
            String indicating the reason for the refund. If set, possible values
            are `duplicate`, `fraudulent`, and `requested_by_customer`.
          enum:
            - duplicate
            - fraudulent
            - requested_by_customer
          type: string
        refund_platform_fee:
          description: >-
            Boolean indicating whether the platform fee should be refunded when
            refunding this charge. If a full charge refund is given, the full
            platform fee will be refunded. Otherwise, the platform fee will be
            refunded in an amount proportional to the amount of the charge
            refunded.
          default: false
          type: boolean
      required:
        - payment_intent_id
    RegisterDto:
      type: object
      properties:
        account:
          $ref: '#/components/schemas/Account'
        token:
          description: JSON Web Token used for authentication.
          type: string
        user:
          $ref: '#/components/schemas/User'
      required:
        - account
        - token
        - user
      x-konfig-properties:
        account:
          description: The created account (may be empty when registering via invitation)
        user:
          description: The created user.
    RegisterParams:
      type: object
      properties:
        account_name:
          description: The business name or individual name.
          maxLength: 255
          pattern: /^[^<>;]*$/
          type: string
        email:
          description: Email address
          type: string
        name:
          description: Full name
          maxLength: 255
          pattern: /^[^<>]*$/
          type: string
        password:
          description: >-
            Password. Requires 1 alphabetic and 1 numeric character and a
            minimum length of 7.
          minLength: 7
          pattern: ^(?=.*[A-Za-z])(?=.*[0-9]).*$
          type: string
        user_invitation_id:
          description: ID of the user invitation associated with this registration.
          type: string
      required:
        - email
        - name
        - password
    ReportAdditionalFilter:
      type: object
      properties:
        key:
          enum:
            - search_filter
          type: string
        value:
          type: string
      required:
        - key
        - value
    ReportMetadataKey:
      type: object
      properties:
        metadata_key:
          type: string
        metadata_type:
          enum:
            - payment_intent
            - customer
            - refund
            - payment_method
          type: string
      required:
        - metadata_key
        - metadata_type
    ReportRun:
      type: object
      properties:
        parameters:
          $ref: '#/components/schemas/ReportRunRequestParameters'
        account_id:
          description: The id of the associated account.
          type: string
        created_at:
          description: Time at which the object was created.
          format: date-time
          type: string
        failure_message:
          description: The failure message of the report run, if status is 'failed'.
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        result:
          $ref: '#/components/schemas/File'
        status:
          description: The status of a report run.
          enum:
            - queued
            - finished
            - failed
          type: string
        type:
          description: The type of a report run.
          enum:
            - payments_summary_1
            - payouts_summary_1
            - payouts_summary_2
            - fees_summary_1
            - processing_summary_1
            - disputes_summary_1
            - interchange_detail_1
          type: string
        updated_at:
          description: Time at which the object was last updated.
          format: date-time
          type: string
      required:
        - account_id
        - created_at
        - id
        - parameters
        - status
        - type
        - updated_at
    ReportRunCreateParams:
      type: object
      properties:
        parameters:
          $ref: '#/components/schemas/ReportRunRequestParameters'
        report_name:
          description: >-
            The name of the report. Can only be alphanumeric, and include
            hyphens (-), underscores (_), and periods (.)
          maxLength: 200
          pattern: ^([A-Z]|[a-z]|[0-9]|[-_.])+$
          type: string
        type:
          description: The type of a Report Run.
          enum:
            - payments_summary_1
            - payouts_summary_1
            - payouts_summary_2
            - fees_summary_1
            - processing_summary_1
            - disputes_summary_1
            - interchange_detail_1
          type: string
      required:
        - parameters
        - type
      x-konfig-properties:
        parameters:
          description: The request paramaters of a Report Run
    ReportRunRequestParameters:
      type: object
      properties:
        account_id:
          description: The specific child Account Id to run a report on
          type: string
        additional_filters:
          description: >-
            List of additional filters on specific reports

            Note: Currenlty only supports `payouts_summary_2` report type with a
            key value of `search_filter`.
          items:
            $ref: '#/components/schemas/ReportAdditionalFilter'
          type: array
        end_at:
          description: Date of the end of the data to include in the Report Run
          format: date-time
          type: string
        metadata_keys_to_include:
          description: List of custom metadata keys to include as columns in the report
          items:
            $ref: '#/components/schemas/ReportMetadataKey'
          type: array
        start_at:
          description: Date of the start of the data to include in the Report Run
          format: date-time
          type: string
        time_zone:
          description: Timezone of the Report Run
          default: America/Chicago
          enum:
            - Africa/Abidjan
            - Africa/Accra
            - Africa/Addis_Ababa
            - Africa/Algiers
            - Africa/Asmara
            - Africa/Asmera
            - Africa/Bamako
            - Africa/Bangui
            - Africa/Banjul
            - Africa/Bissau
            - Africa/Blantyre
            - Africa/Brazzaville
            - Africa/Bujumbura
            - Africa/Cairo
            - Africa/Casablanca
            - Africa/Ceuta
            - Africa/Conakry
            - Africa/Dakar
            - Africa/Dar_es_Salaam
            - Africa/Djibouti
            - Africa/Douala
            - Africa/El_Aaiun
            - Africa/Freetown
            - Africa/Gaborone
            - Africa/Harare
            - Africa/Johannesburg
            - Africa/Juba
            - Africa/Kampala
            - Africa/Khartoum
            - Africa/Kigali
            - Africa/Kinshasa
            - Africa/Lagos
            - Africa/Libreville
            - Africa/Lome
            - Africa/Luanda
            - Africa/Lubumbashi
            - Africa/Lusaka
            - Africa/Malabo
            - Africa/Maputo
            - Africa/Maseru
            - Africa/Mbabane
            - Africa/Mogadishu
            - Africa/Monrovia
            - Africa/Nairobi
            - Africa/Ndjamena
            - Africa/Niamey
            - Africa/Nouakchott
            - Africa/Ouagadougou
            - Africa/Porto-Novo
            - Africa/Sao_Tome
            - Africa/Timbuktu
            - Africa/Tripoli
            - Africa/Tunis
            - Africa/Windhoek
            - America/Adak
            - America/Anchorage
            - America/Anguilla
            - America/Antigua
            - America/Araguaina
            - America/Argentina/Buenos_Aires
            - America/Argentina/Catamarca
            - America/Argentina/ComodRivadavia
            - America/Argentina/Cordoba
            - America/Argentina/Jujuy
            - America/Argentina/La_Rioja
            - America/Argentina/Mendoza
            - America/Argentina/Rio_Gallegos
            - America/Argentina/Salta
            - America/Argentina/San_Juan
            - America/Argentina/San_Luis
            - America/Argentina/Tucuman
            - America/Argentina/Ushuaia
            - America/Aruba
            - America/Asuncion
            - America/Atikokan
            - America/Atka
            - America/Bahia
            - America/Bahia_Banderas
            - America/Barbados
            - America/Belem
            - America/Belize
            - America/Blanc-Sablon
            - America/Boa_Vista
            - America/Bogota
            - America/Boise
            - America/Buenos_Aires
            - America/Cambridge_Bay
            - America/Campo_Grande
            - America/Cancun
            - America/Caracas
            - America/Catamarca
            - America/Cayenne
            - America/Cayman
            - America/Chicago
            - America/Chihuahua
            - America/Coral_Harbour
            - America/Cordoba
            - America/Costa_Rica
            - America/Creston
            - America/Cuiaba
            - America/Curacao
            - America/Danmarkshavn
            - America/Dawson
            - America/Dawson_Creek
            - America/Denver
            - America/Detroit
            - America/Dominica
            - America/Edmonton
            - America/Eirunepe
            - America/El_Salvador
            - America/Ensenada
            - America/Fort_Wayne
            - America/Fortaleza
            - America/Glace_Bay
            - America/Godthab
            - America/Goose_Bay
            - America/Grand_Turk
            - America/Grenada
            - America/Guadeloupe
            - America/Guatemala
            - America/Guayaquil
            - America/Guyana
            - America/Halifax
            - America/Havana
            - America/Hermosillo
            - America/Indiana/Indianapolis
            - America/Indiana/Knox
            - America/Indiana/Marengo
            - America/Indiana/Petersburg
            - America/Indiana/Tell_City
            - America/Indiana/Vevay
            - America/Indiana/Vincennes
            - America/Indiana/Winamac
            - America/Indianapolis
            - America/Inuvik
            - America/Iqaluit
            - America/Jamaica
            - America/Jujuy
            - America/Juneau
            - America/Kentucky/Louisville
            - America/Kentucky/Monticello
            - America/Knox_IN
            - America/Kralendijk
            - America/La_Paz
            - America/Lima
            - America/Los_Angeles
            - America/Louisville
            - America/Lower_Princes
            - America/Maceio
            - America/Managua
            - America/Manaus
            - America/Marigot
            - America/Martinique
            - America/Matamoros
            - America/Mazatlan
            - America/Mendoza
            - America/Menominee
            - America/Merida
            - America/Metlakatla
            - America/Mexico_City
            - America/Miquelon
            - America/Moncton
            - America/Monterrey
            - America/Montevideo
            - America/Montreal
            - America/Montserrat
            - America/Nassau
            - America/New_York
            - America/Nipigon
            - America/Nome
            - America/Noronha
            - America/North_Dakota/Beulah
            - America/North_Dakota/Center
            - America/North_Dakota/New_Salem
            - America/Ojinaga
            - America/Panama
            - America/Pangnirtung
            - America/Paramaribo
            - America/Phoenix
            - America/Port-au-Prince
            - America/Port_of_Spain
            - America/Porto_Acre
            - America/Porto_Velho
            - America/Puerto_Rico
            - America/Rainy_River
            - America/Rankin_Inlet
            - America/Recife
            - America/Regina
            - America/Resolute
            - America/Rio_Branco
            - America/Rosario
            - America/Santa_Isabel
            - America/Santarem
            - America/Santiago
            - America/Santo_Domingo
            - America/Sao_Paulo
            - America/Scoresbysund
            - America/Shiprock
            - America/Sitka
            - America/St_Barthelemy
            - America/St_Johns
            - America/St_Kitts
            - America/St_Lucia
            - America/St_Thomas
            - America/St_Vincent
            - America/Swift_Current
            - America/Tegucigalpa
            - America/Thule
            - America/Thunder_Bay
            - America/Tijuana
            - America/Toronto
            - America/Tortola
            - America/Vancouver
            - America/Virgin
            - America/Whitehorse
            - America/Winnipeg
            - America/Yakutat
            - America/Yellowknife
            - Antarctica/Casey
            - Antarctica/Davis
            - Antarctica/DumontDUrville
            - Antarctica/Macquarie
            - Antarctica/Mawson
            - Antarctica/McMurdo
            - Antarctica/Palmer
            - Antarctica/Rothera
            - Antarctica/South_Pole
            - Antarctica/Syowa
            - Antarctica/Troll
            - Antarctica/Vostok
            - Arctic/Longyearbyen
            - Asia/Aden
            - Asia/Almaty
            - Asia/Amman
            - Asia/Anadyr
            - Asia/Aqtau
            - Asia/Aqtobe
            - Asia/Ashgabat
            - Asia/Ashkhabad
            - Asia/Baghdad
            - Asia/Bahrain
            - Asia/Baku
            - Asia/Bangkok
            - Asia/Beirut
            - Asia/Bishkek
            - Asia/Brunei
            - Asia/Calcutta
            - Asia/Chita
            - Asia/Choibalsan
            - Asia/Chongqing
            - Asia/Chungking
            - Asia/Colombo
            - Asia/Dacca
            - Asia/Damascus
            - Asia/Dhaka
            - Asia/Dili
            - Asia/Dubai
            - Asia/Dushanbe
            - Asia/Gaza
            - Asia/Harbin
            - Asia/Hebron
            - Asia/Ho_Chi_Minh
            - Asia/Hong_Kong
            - Asia/Hovd
            - Asia/Irkutsk
            - Asia/Istanbul
            - Asia/Jakarta
            - Asia/Jayapura
            - Asia/Jerusalem
            - Asia/Kabul
            - Asia/Kamchatka
            - Asia/Karachi
            - Asia/Kashgar
            - Asia/Kathmandu
            - Asia/Katmandu
            - Asia/Khandyga
            - Asia/Kolkata
            - Asia/Krasnoyarsk
            - Asia/Kuala_Lumpur
            - Asia/Kuching
            - Asia/Kuwait
            - Asia/Macao
            - Asia/Macau
            - Asia/Magadan
            - Asia/Makassar
            - Asia/Manila
            - Asia/Muscat
            - Asia/Nicosia
            - Asia/Novokuznetsk
            - Asia/Novosibirsk
            - Asia/Omsk
            - Asia/Oral
            - Asia/Phnom_Penh
            - Asia/Pontianak
            - Asia/Pyongyang
            - Asia/Qatar
            - Asia/Qyzylorda
            - Asia/Rangoon
            - Asia/Riyadh
            - Asia/Saigon
            - Asia/Sakhalin
            - Asia/Samarkand
            - Asia/Seoul
            - Asia/Shanghai
            - Asia/Singapore
            - Asia/Srednekolymsk
            - Asia/Taipei
            - Asia/Tashkent
            - Asia/Tbilisi
            - Asia/Tehran
            - Asia/Tel_Aviv
            - Asia/Thimbu
            - Asia/Thimphu
            - Asia/Tokyo
            - Asia/Ujung_Pandang
            - Asia/Ulaanbaatar
            - Asia/Ulan_Bator
            - Asia/Urumqi
            - Asia/Ust-Nera
            - Asia/Vientiane
            - Asia/Vladivostok
            - Asia/Yakutsk
            - Asia/Yekaterinburg
            - Asia/Yerevan
            - Atlantic/Azores
            - Atlantic/Bermuda
            - Atlantic/Canary
            - Atlantic/Cape_Verde
            - Atlantic/Faeroe
            - Atlantic/Faroe
            - Atlantic/Jan_Mayen
            - Atlantic/Madeira
            - Atlantic/Reykjavik
            - Atlantic/South_Georgia
            - Atlantic/St_Helena
            - Atlantic/Stanley
            - Australia/ACT
            - Australia/Adelaide
            - Australia/Brisbane
            - Australia/Broken_Hill
            - Australia/Canberra
            - Australia/Currie
            - Australia/Darwin
            - Australia/Eucla
            - Australia/Hobart
            - Australia/LHI
            - Australia/Lindeman
            - Australia/Lord_Howe
            - Australia/Melbourne
            - Australia/NSW
            - Australia/North
            - Australia/Perth
            - Australia/Queensland
            - Australia/South
            - Australia/Sydney
            - Australia/Tasmania
            - Australia/Victoria
            - Australia/West
            - Australia/Yancowinna
            - Brazil/Acre
            - Brazil/DeNoronha
            - Brazil/East
            - Brazil/West
            - Canada/Atlantic
            - Canada/Central
            - Canada/East-Saskatchewan
            - Canada/Eastern
            - Canada/Mountain
            - Canada/Newfoundland
            - Canada/Pacific
            - Canada/Saskatchewan
            - Canada/Yukon
            - Chile/Continental
            - Chile/EasterIsland
            - Etc/GMT
            - Etc/GMT+0
            - Etc/GMT+1
            - Etc/GMT+10
            - Etc/GMT+11
            - Etc/GMT+12
            - Etc/GMT+2
            - Etc/GMT+3
            - Etc/GMT+4
            - Etc/GMT+5
            - Etc/GMT+6
            - Etc/GMT+7
            - Etc/GMT+8
            - Etc/GMT+9
            - Etc/GMT-0
            - Etc/GMT-1
            - Etc/GMT-10
            - Etc/GMT-11
            - Etc/GMT-12
            - Etc/GMT-13
            - Etc/GMT-14
            - Etc/GMT-2
            - Etc/GMT-3
            - Etc/GMT-4
            - Etc/GMT-5
            - Etc/GMT-6
            - Etc/GMT-7
            - Etc/GMT-8
            - Etc/GMT-9
            - Etc/Greenwich
            - Etc/UCT
            - Etc/UTC
            - Etc/Universal
            - Etc/Zulu
            - Europe/Amsterdam
            - Europe/Andorra
            - Europe/Athens
            - Europe/Belfast
            - Europe/Belgrade
            - Europe/Berlin
            - Europe/Bratislava
            - Europe/Brussels
            - Europe/Bucharest
            - Europe/Budapest
            - Europe/Busingen
            - Europe/Chisinau
            - Europe/Copenhagen
            - Europe/Dublin
            - Europe/Gibraltar
            - Europe/Guernsey
            - Europe/Helsinki
            - Europe/Isle_of_Man
            - Europe/Istanbul
            - Europe/Jersey
            - Europe/Kaliningrad
            - Europe/Kiev
            - Europe/Lisbon
            - Europe/Ljubljana
            - Europe/London
            - Europe/Luxembourg
            - Europe/Madrid
            - Europe/Malta
            - Europe/Mariehamn
            - Europe/Minsk
            - Europe/Monaco
            - Europe/Moscow
            - Europe/Nicosia
            - Europe/Oslo
            - Europe/Paris
            - Europe/Podgorica
            - Europe/Prague
            - Europe/Riga
            - Europe/Rome
            - Europe/Samara
            - Europe/San_Marino
            - Europe/Sarajevo
            - Europe/Simferopol
            - Europe/Skopje
            - Europe/Sofia
            - Europe/Stockholm
            - Europe/Tallinn
            - Europe/Tirane
            - Europe/Tiraspol
            - Europe/Uzhgorod
            - Europe/Vaduz
            - Europe/Vatican
            - Europe/Vienna
            - Europe/Vilnius
            - Europe/Volgograd
            - Europe/Warsaw
            - Europe/Zagreb
            - Europe/Zaporozhye
            - Europe/Zurich
            - Indian/Antananarivo
            - Indian/Chagos
            - Indian/Christmas
            - Indian/Cocos
            - Indian/Comoro
            - Indian/Kerguelen
            - Indian/Mahe
            - Indian/Maldives
            - Indian/Mauritius
            - Indian/Mayotte
            - Indian/Reunion
            - Mexico/BajaNorte
            - Mexico/BajaSur
            - Mexico/General
            - Pacific/Apia
            - Pacific/Auckland
            - Pacific/Chatham
            - Pacific/Chuuk
            - Pacific/Easter
            - Pacific/Efate
            - Pacific/Enderbury
            - Pacific/Fakaofo
            - Pacific/Fiji
            - Pacific/Funafuti
            - Pacific/Galapagos
            - Pacific/Gambier
            - Pacific/Guadalcanal
            - Pacific/Guam
            - Pacific/Honolulu
            - Pacific/Johnston
            - Pacific/Kiritimati
            - Pacific/Kosrae
            - Pacific/Kwajalein
            - Pacific/Majuro
            - Pacific/Marquesas
            - Pacific/Midway
            - Pacific/Nauru
            - Pacific/Niue
            - Pacific/Norfolk
            - Pacific/Noumea
            - Pacific/Pago_Pago
            - Pacific/Palau
            - Pacific/Pitcairn
            - Pacific/Pohnpei
            - Pacific/Ponape
            - Pacific/Port_Moresby
            - Pacific/Rarotonga
            - Pacific/Saipan
            - Pacific/Samoa
            - Pacific/Tahiti
            - Pacific/Tarawa
            - Pacific/Tongatapu
            - Pacific/Truk
            - Pacific/Wake
            - Pacific/Wallis
            - Pacific/Yap
          type: string
      required:
        - end_at
        - start_at
    ReportRunRetrieveParams:
      type: object
      properties:
        include_expired:
          description: Whether to included expired Report Runs or not
          default: false
          type: boolean
    Subscription:
      type: object
      properties:
        account_id:
          description: The id of the associated account.
          type: string
        billing_cycle_anchor:
          description: >-
            Determines the date of the first payment and the day of
            week/month/year for subsequent payments. If a month doesn't have the
            anchor day, the subscription will be billed on the last day of the
            month. For example, a monthly subscription starting on January 31
            bills on Feb 28/29, then March 31, April 30, etc. The subscription
            will be billed close to (typically within 30 minutes) the time
            portion of this date-time field. Note: if no time portion was
            specified during the creation of the subscription (i.e.
            '2022-04-01') then the time is defaulted to midnight UTC (00:00:00)
            and the subscription will be billed around 7PM Eastern on the
            *previous* day.
          format: date-time
          type: string
        cancel_at:
          description: >-
            A date in the future at which the subscription will automatically
            get canceled.
          format: date-time
          type: string
        canceled_at:
          description: >-
            If the subscription has been canceled, the date of that
            cancellation.
          format: date-time
          type: string
        created_at:
          description: Time at which the object was created.
          format: date-time
          type: string
        currency:
          description: >-
            Three-letter [ISO currency
            code](https://www.iso.org/iso-4217-currency-codes.html), in
            lowercase.
          enum:
            - aud
            - cad
            - dkk
            - eur
            - hkd
            - jpy
            - nzd
            - nok
            - gbp
            - zar
            - sek
            - chf
            - usd
          type: string
        customer_id:
          description: The id of the customer who owns the subscription.
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        interval_count:
          description: >-
            The number of intervals (specified in the `interval_unit` attribute)
            between subscription billings. For example, `interval_unit=month`
            and `interval_count=3` bills every 3 months.
          type: number
        interval_unit:
          description: >-
            The frequency at which a subscription is billed. One of `week`,
            `month` or `year`.
          enum:
            - week
            - month
            - year
          type: string
        metadata:
          description: >-
            Set of [key-value pairs](https://api.tilled.com) that you can attach
            to an object. This can be useful for storing additional information
            about the object in a structured format.

            This `metadata` will be copied to the `payment_intent.metadata`
            field when a payment is attempted.
          additionalProperties:
            type: string
          example:
            order_id: '100123'
            internal_customer_id: 7cb1159d-875e-47ae-a309-319fa7ff395b
          type: object
        next_payment_at:
          description: >-
            The date at which payment will next be attempted. The value will be
            `null` when no more payments are to be attempted. Examples:
            `canceled` and `paused` statuses or `cancel_at` is prior to what
            would be the next payment date. When a payment fails and the status
            changes to `past_due` this value can be manually updated to
            determine the next attempt.
          format: date-time
          type: string
        pause_at:
          description: >-
            A date in the future at which the subscription will automatically
            get paused.
          format: date-time
          type: string
        paused_at:
          description: >-
            If the subscription has been paused, the date of the most recent
            pausing.
          format: date-time
          type: string
        payment_method_id:
          description: >-
            The id of the PaymentMethod used for this subscription. It must
            belong to the customer associated with the subscription.
          type: string
        platform_fee_amount:
          description: >-
            The amount of the fee (if any) that will be requested to be applied
            to the payment and transferred to the `partner` account. The amount
            of the fee collected will be capped a the total payment amount.
          type: number
        price:
          description: >-
            Amount intended to be collected by this subscription. A positive
            integer representing how much to charge in the smallest currency
            unit (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a
            zero-decimal currency).
          type: number
        resume_at:
          description: >-
            If the subscription has been paused, the date in the future at which
            the subscription will automatically return to active.
          format: date-time
          type: string
        status:
          description: >-
            Status of this subscription, one of `active`, `canceled`,
            `past_due`, `paused`, or `pending`.
          enum:
            - active
            - canceled
            - past_due
            - paused
            - pending
          type: string
        updated_at:
          description: Time at which the object was last updated.
          format: date-time
          type: string
      required:
        - account_id
        - billing_cycle_anchor
        - created_at
        - currency
        - customer_id
        - id
        - interval_count
        - interval_unit
        - payment_method_id
        - price
        - status
        - updated_at
    SubscriptionCreateParams:
      type: object
      properties:
        billing_cycle_anchor:
          description: >-
            Determines the date of the first payment and the day of
            week/month/year for subsequent payments. If a month doesn't have the
            anchor day, the subscription will be billed on the last day of the
            month. For example, a monthly subscription starting on January 31
            bills on Feb 28/29, then March 31, April 30, etc. Format must be
            ISO8601 (e.g. '2000-01-25', '2024-02-01T04:00:00-0500',
            '2018-04-04T16:00:00.000Z'). UTC is assumed unless a timezone offset
            is supplied. The subscription will be billed close to (typically
            within 30 minutes) the time portion of this date-time field. Note:
            if no time portion was specified during the creation of the
            subscription (i.e. '2022-04-01') then the time is defaulted to
            midnight UTC (00:00:00) and the subscription will be billed around
            7PM Eastern on the *previous* day.
          format: date-time
          type: string
        cancel_at:
          description: >-
            A date in the future at which the subscription will automatically
            get canceled.
          format: date-time
          type: string
        currency:
          description: Three-letter ISO currency code, in lowercase.
          enum:
            - aud
            - cad
            - dkk
            - eur
            - hkd
            - jpy
            - nzd
            - nok
            - gbp
            - zar
            - sek
            - chf
            - usd
          type: string
        customer_id:
          description: The id of the customer who owns the subscription.
          type: string
        interval_count:
          description: >-
            The number of intervals (specified in the `interval_unit` attribute)
            between subscription billings. For example, `interval_unit=month`
            and `interval_count=3` bills every 3 months.
          default: 1
          minimum: 1
          type: number
        interval_unit:
          description: >-
            The frequency at which a subscription is billed. One of `week`,
            `month` or `year`.
          enum:
            - week
            - month
            - year
          type: string
        metadata:
          description: >-
            Set of [key-value pairs](https://api.tilled.com) that you can attach
            to an object. This can be useful for storing additional information
            about the object in a structured format. Individual keys can be
            unset by posting an empty value (i.e. `''` or `null`) to them. All
            keys can be unset by posting an empty value (i.e. `{}` or `null`) to
            `metadata`.
          additionalProperties:
            type: string
          example:
            order_id: '100123'
            internal_customer_id: 7cb1159d-875e-47ae-a309-319fa7ff395b
          type: object
        payment_method_id:
          description: >-
            The id of the PaymentMethod used for this subscription. It must
            belong to the customer associated with the subscription.
          type: string
        platform_fee_amount:
          description: >-
            The amount of the fee (if any) that will be requested to be applied
            to the payment and transferred to the `partner` account. The amount
            of the fee collected will be capped a the total payment amount.
          minimum: 0
          type: number
        price:
          description: >-
            Amount intended to be collected by this subscription. A positive
            integer representing how much to charge in the smallest currency
            unit (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a
            zero-decimal currency).
          maximum: 99999999
          minimum: 1
          type: number
      required:
        - billing_cycle_anchor
        - currency
        - customer_id
        - interval_unit
        - payment_method_id
        - price
    SubscriptionPauseParams:
      type: object
      properties:
        resume_at:
          description: >-
            The date in the future at which the subscription will automatically
            return to active.
          format: date-time
          type: string
    SubscriptionRetryParams:
      type: object
      properties:
        next_payment_at:
          description: >-
            The date in the future at which the subscription will attempt to
            retry payment. The default is today.
          format: date-time
          type: string
    SubscriptionUpdateParams:
      type: object
      properties:
        cancel_at:
          description: >-
            A date in the future at which the subscription will automatically
            get canceled.
          format: date-time
          type: string
        metadata:
          description: >-
            Set of [key-value pairs](https://api.tilled.com) that you can attach
            to an object. This can be useful for storing additional information
            about the object in a structured format. Individual keys can be
            unset by posting an empty value (i.e. `''` or `null`) to them. All
            keys can be unset by posting an empty value (i.e. `{}` or `null`) to
            `metadata`.
          additionalProperties:
            type: string
          example:
            order_id: '100123'
            internal_customer_id: 7cb1159d-875e-47ae-a309-319fa7ff395b
          type: object
        pause_at:
          description: >-
            The date in the future at which the subscription will automatically
            be paused.
          format: date-time
          type: string
        payment_method_id:
          description: >-
            The id of the PaymentMethod used for this subscription. It must
            belong to the customer associated with the subscription.
          type: string
        platform_fee_amount:
          description: >-
            The amount of the fee (if any) that will be requested to be applied
            to the payment and transferred to the `partner` account. The amount
            of the fee collected will be capped a the total payment amount.
          minimum: 0
          type: number
        price:
          description: >-
            Amount intended to be collected by this subscription. A positive
            integer representing how much to charge in the smallest currency
            unit (e.g., 100 cents to charge $1.00 or 100 to charge ¥100, a
            zero-decimal currency).
          maximum: 99999999
          minimum: 1
          type: number
        resume_at:
          description: >-
            The date in the future at which the subscription will automatically
            return to active.
          format: date-time
          type: string
    TerminalReader:
      type: object
      properties:
        description:
          description: The merchant provided description of the terminal reader
          type: string
        account_id:
          description: The Account that owns this terminal reader.
          type: string
        created_at:
          description: Time at which the object was created.
          format: date-time
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        metadata:
          description: >-
            Set of [key-value pairs](https://api.tilled.com) that you can attach
            to an object. This can be useful for storing additional information
            about the object in a structured format.
          additionalProperties:
            type: string
          example:
            reference_id: '100123'
            store_id: 7cb1159d-875e-47ae-a309-319fa7ff395b
          type: object
        serial_number:
          description: The serial number of the terminal reader.
          type: string
        settings:
          $ref: '#/components/schemas/TerminalReaderSettings'
        type:
          description: The type of the terminal reader.
          enum:
            - vl_100
            - vl_110
            - vp_500
          type: string
        updated_at:
          description: Time at which the object was last updated.
          format: date-time
          type: string
      required:
        - account_id
        - created_at
        - id
        - type
        - updated_at
    TerminalReaderConnectionStatus:
      type: object
      properties:
        connection_status:
          description: The connection status of the terminal reader.
          enum:
            - online
            - offline
          type: string
        id:
          description: Unique identifier for the object.
          type: string
      required:
        - connection_status
        - id
    TerminalReaderSettings:
      type: object
      properties:
        tipping_enabled:
          description: Whether or not tipping is enabled on the device
          default: false
          type: boolean
      required:
        - tipping_enabled
    TerminalReaderUpdateParams:
      type: object
      properties:
        description:
          maxLength: 255
          type: string
        metadata:
          description: >-
            Set of [key-value pairs](https://api.tilled.com) that you can attach
            to an object. This can be useful for storing additional information
            about the object in a structured format. Individual keys can be
            unset by posting an empty value (i.e. `''` or `null`) to them. All
            keys can be unset by posting an empty value (i.e. `{}` or `null`) to
            `metadata`.
          additionalProperties:
            type: string
          example:
            order_id: '100123'
            internal_customer_id: 7cb1159d-875e-47ae-a309-319fa7ff395b
          type: object
        serial_number:
          maxLength: 255
          type: string
        settings:
          $ref: '#/components/schemas/TerminalReaderSettings'
    TermsAndConditionsDetail:
      type: object
      properties:
        description:
          type: string
        link:
          type: string
        name:
          type: string
      required:
        - description
        - link
        - name
    User:
      type: object
      properties:
        account_id:
          description: >-
            If this user is associated with multiple accounts then this value
            will be one of those accounts.
          deprecated: true
          type: string
        account_roles:
          description: The user's role within a specific account.
          items:
            $ref: '#/components/schemas/AccountRole'
          type: array
        created_at:
          description: Time at which the object was created.
          format: date-time
          type: string
        email:
          description: The user email.
          type: string
        email_settings:
          $ref: '#/components/schemas/UserEmailSettings'
        id:
          description: Unique identifier for the object.
          type: string
        last_login_at:
          description: Time at which the user last successfully logged in via the API.
          format: date-time
          type: string
        last_request_at:
          description: >-
            Time at which the user's token was last used to authenticate a
            request to the API.
          format: date-time
          type: string
        name:
          description: The full name of the user.
          type: string
        role:
          description: >-
            If this user is associated with multiple accounts then this value
            will be the role

            associated with the account_id property.

            The user's role, primarily used in the Tilled Dashboard. The roles
            have varied restrictions on the actions they can take.
          deprecated: true
          enum:
            - owner
            - admin
            - developer
            - analyst
            - view_only
            - merchant_owner
            - merchant_admin
          type: string
        updated_at:
          description: Time at which the object was last updated.
          format: date-time
          type: string
        verification_code:
          description: Six digit verification code of the user.
          type: string
      required:
        - account_id
        - account_roles
        - created_at
        - email
        - email_settings
        - id
        - name
        - role
        - updated_at
      x-konfig-properties:
        email_settings:
          description: User email settings.
    UserCreateParams:
      type: object
      properties:
        email:
          description: Email address
          type: string
        name:
          description: Full name
          maxLength: 255
          pattern: /^[^<>]*$/
          type: string
        password:
          description: >-
            Password. Requires 1 alphabetic and 1 numeric character and a
            minimum length of 7.
          minLength: 7
          pattern: ^(?=.*[A-Za-z])(?=.*[0-9]).*$
          type: string
        role:
          description: >-
            The user's role, primarily used in the Tilled Dashboard. The roles
            have varied restrictions on the actions they can take.


            `admin`

            Best for business owners and company administrators.


            `developer`

            Best for developers or people primarily using the Tilled API.


            `analyst`

            Best for people who need full access to Tilled data, but don't need
            to update business settings.


            `view_only`

            Best for people who need to view Tilled data, but don't need to make
            any updates.
          enum:
            - admin
            - developer
            - analyst
            - view_only
            - merchant_owner
            - merchant_admin
          type: string
      required:
        - email
        - name
        - password
        - role
    UserEmailSettings:
      type: object
      properties:
        disputes:
          description: Indicates if the user is receiving dispute related emails.
          nullable: true
          type: boolean
        documents:
          description: Indicates if the user is receiving document request related emails.
          nullable: true
          type: boolean
        onboarding:
          description: >-
            Indicates if the partner user is receiving onboarding related
            emails.
          nullable: true
          type: boolean
    UserEmailSettingsUpdateParams:
      type: object
      properties:
        disputes:
          description: Indicates if the user is receiving dispute related emails.
          enum:
            - 'true'
            - 'false'
            - null
          nullable: true
          type: string
        documents:
          description: Indicates if the user is receiving document request related emails.
          enum:
            - 'true'
            - 'false'
            - null
          nullable: true
          type: string
        onboarding:
          description: Indicates if the user is receiving onboarding related emails.
          enum:
            - 'true'
            - 'false'
            - null
          nullable: true
          type: string
    UserInvitation:
      type: object
      properties:
        account_id:
          description: The ID of the Account associated with this pending user.
          type: string
        created_at:
          description: Time at which the object was created.
          format: date-time
          type: string
        email:
          description: The pending user's email.
          type: string
        id:
          description: Unique identifier for the object.
          type: string
        invitation_url:
          description: Frontend link for the user invitation.
          type: string
        inviter_user_id:
          description: The ID of the user who sent the invitation.
          type: string
        role:
          description: >-
            The pending user's role, primarily used in the Tilled Dashboard. The
            roles have varied restrictions on the actions they can take.
          enum:
            - owner
            - admin
            - developer
            - analyst
            - view_only
            - merchant_owner
            - merchant_admin
          type: string
        sent_at:
          description: Time at which the invitation was last sent.
          format: date-time
          type: string
        updated_at:
          description: Time at which the object was last updated.
          format: date-time
          type: string
      required:
        - account_id
        - created_at
        - email
        - id
        - role
        - updated_at
    UserInvitationCheck:
      type: object
      properties:
        email:
          description: The pending user's email.
          type: string
        id:
          description: The ID of the invitation.
          type: string
        inviter_email:
          description: The email address of the user who sent the invitation.
          type: string
        partner_account_name:
          description: The name of the parent (ISV) account
          type: string
      required:
        - email
        - id
    UserInvitationCreateParams:
      type: object
      properties:
        email:
          description: Email address
          type: string
        email_template:
          description: >-
            The type of email, if any, that should be sent to the new user.
            Defaults to

            `console_invitation` if one is not provided.


            `merchant_application`

            "You've been invited by {partner name} to complete the setup of your
            payment processing account.

            To create your account and access your application follow the link
            below. {user invitation link}"


            `none`

            No email sent.


            `console_invitation`

            "You have been invited to access your merchant account with {partner
            name}. To get started,

            accept the invite below: {user invitation link}. Joining the team
            will give you access to

            your merchant dashboard, including information about payments,
            customers, payouts, and more".
          enum:
            - merchant_application
            - none
            - console_invitation
          type: string
        role:
          description: >-
            The user's role, primarily used in the Tilled Dashboard. The roles
            have varied restrictions on the actions they can take.


            `admin`

            Best for business owners and company administrators.


            `developer`

            Best for developers or people primarily using the Tilled API.


            `analyst`

            Best for people who need full access to Tilled data, but don't need
            to update business settings.


            `view_only`

            Best for people who need to view Tilled data, but don't need to make
            any updates.
          enum:
            - admin
            - developer
            - analyst
            - view_only
            - merchant_owner
            - merchant_admin
          type: string
      required:
        - email
        - role
    UserResetPasswordParams:
      type: object
      properties:
        email:
          description: Email address
          type: string
        password:
          description: >-
            Password. Requires 1 alphabetic and 1 numeric character and a
            minimum length of 7.
          minLength: 7
          pattern: ^(?=.*[A-Za-z])(?=.*[0-9]).*$
          type: string
        password_reset_token:
          description: Password reset token
          type: string
      required:
        - email
        - password
        - password_reset_token
    UserUpdateParams:
      type: object
      properties:
        email:
          description: Email address
          deprecated: true
          type: string
        email_settings:
          $ref: '#/components/schemas/UserEmailSettingsUpdateParams'
        name:
          description: Full name
          maxLength: 255
          pattern: /^[^<>]*$/
          type: string
        role:
          description: >-
            The user's role, primarily used in the Tilled Dashboard. The roles
            have varied restrictions on the actions they can take.


            `admin`

            Best for business owners and company administrators.


            `developer`

            Best for developers or people primarily using the Tilled API.


            `analyst`

            Best for people who need full access to Tilled data, but don't need
            to update business settings.


            `view_only`

            Best for people who need to view Tilled data, but don't need to make
            any updates.
          enum:
            - admin
            - developer
            - analyst
            - view_only
            - merchant_owner
            - merchant_admin
          type: string
      x-konfig-properties:
        email_settings:
          description: User email settings
    WebhookEndpoint:
      type: object
      properties:
        description:
          description: An optional description of what the webhook is used for.
          type: string
        account_id:
          description: The id of the associated account.
          type: string
        created_at:
          description: Time at which the object was created.
          format: date-time
          type: string
        enabled_events:
          description: >-
            The list of events to enable for this endpoint. You may specify
            `['*']` to enable all events, except those that require explicit
            selection.
          items:
            type: string
            enum:
              - '*'
              - account.updated
              - charge.captured
              - charge.expired
              - charge.failed
              - charge.succeeded
              - charge.pending
              - charge.refunded
              - charge.refund.updated
              - charge.updated
              - customer.created
              - customer.deleted
              - customer.updated
              - dispute.created
              - dispute.updated
              - payment_intent.canceled
              - payment_intent.created
              - payment_intent.payment_failed
              - payment_intent.processing
              - payment_intent.requires_action
              - payment_intent.succeeded
              - payment_intent.amount_capturable_updated
              - payment_method.attached
              - payment_method.detached
              - payout.created
              - payout.failed
              - payout.paid
              - payout.updated
              - platform_fee.created
              - platform_fee.refunded
              - subscription.created
              - subscription.canceled
              - subscription.updated
              - report_run.succeeded
              - report_run.failed
              - outbound_transfer.pending
              - outbound_transfer.failed
              - outbound_transfer.canceled
              - outbound_transfer.succeeded
          type: array
        id:
          description: Unique identifier for the object.
          type: string
        secret:
          description: >-
            The endpoint's secret, used to generate webhook signatures. Only
            returned at creation.
          type: string
        updated_at:
          description: Time at which the object was last updated.
          format: date-time
          type: string
        url:
          description: The URL of the webhook endpoint.
          type: string
      required:
        - account_id
        - created_at
        - enabled_events
        - id
        - updated_at
        - url
    WebhookEndpointCreateParams:
      type: object
      properties:
        description:
          description: An optional description of what the webhook is used for.
          maxLength: 255
          pattern: /^[^<>]*$/
          type: string
        enabled_events:
          description: >-
            The list of events to enable for this endpoint. You may specify
            `['*']` to enable all events, except those that require explicit
            selection.
          enum:
            - '*'
            - account.updated
            - charge.captured
            - charge.expired
            - charge.failed
            - charge.succeeded
            - charge.pending
            - charge.refunded
            - charge.refund.updated
            - charge.updated
            - customer.created
            - customer.deleted
            - customer.updated
            - dispute.created
            - dispute.updated
            - payment_intent.canceled
            - payment_intent.created
            - payment_intent.payment_failed
            - payment_intent.processing
            - payment_intent.requires_action
            - payment_intent.succeeded
            - payment_intent.amount_capturable_updated
            - payment_method.attached
            - payment_method.detached
            - payout.created
            - payout.failed
            - payout.paid
            - payout.updated
            - platform_fee.created
            - platform_fee.refunded
            - subscription.created
            - subscription.canceled
            - subscription.updated
            - report_run.succeeded
            - report_run.failed
            - outbound_transfer.pending
            - outbound_transfer.failed
            - outbound_transfer.canceled
            - outbound_transfer.succeeded
          items:
            type: string
            enum:
              - '*'
              - account.updated
              - charge.captured
              - charge.expired
              - charge.failed
              - charge.succeeded
              - charge.pending
              - charge.refunded
              - charge.refund.updated
              - charge.updated
              - customer.created
              - customer.deleted
              - customer.updated
              - dispute.created
              - dispute.updated
              - payment_intent.canceled
              - payment_intent.created
              - payment_intent.payment_failed
              - payment_intent.processing
              - payment_intent.requires_action
              - payment_intent.succeeded
              - payment_intent.amount_capturable_updated
              - payment_method.attached
              - payment_method.detached
              - payout.created
              - payout.failed
              - payout.paid
              - payout.updated
              - platform_fee.created
              - platform_fee.refunded
              - subscription.created
              - subscription.canceled
              - subscription.updated
              - report_run.succeeded
              - report_run.failed
              - outbound_transfer.pending
              - outbound_transfer.failed
              - outbound_transfer.canceled
              - outbound_transfer.succeeded
          type: array
        url:
          description: The URL of the webhook endpoint.
          type: string
      required:
        - enabled_events
        - url
    WebhookEndpointUpdateParams:
      type: object
      properties:
        description:
          description: An optional description of what the webhook is used for.
          maxLength: 255
          pattern: /^[^<>]*$/
          type: string
        enabled_events:
          description: >-
            The list of events to enable for this endpoint. You may specify
            `['*']` to enable all events, except those that require explicit
            selection.
          enum:
            - '*'
            - account.updated
            - charge.captured
            - charge.expired
            - charge.failed
            - charge.succeeded
            - charge.pending
            - charge.refunded
            - charge.refund.updated
            - charge.updated
            - customer.created
            - customer.deleted
            - customer.updated
            - dispute.created
            - dispute.updated
            - payment_intent.canceled
            - payment_intent.created
            - payment_intent.payment_failed
            - payment_intent.processing
            - payment_intent.requires_action
            - payment_intent.succeeded
            - payment_intent.amount_capturable_updated
            - payment_method.attached
            - payment_method.detached
            - payout.created
            - payout.failed
            - payout.paid
            - payout.updated
            - platform_fee.created
            - platform_fee.refunded
            - subscription.created
            - subscription.canceled
            - subscription.updated
            - report_run.succeeded
            - report_run.failed
            - outbound_transfer.pending
            - outbound_transfer.failed
            - outbound_transfer.canceled
            - outbound_transfer.succeeded
          items:
            type: string
            enum:
              - '*'
              - account.updated
              - charge.captured
              - charge.expired
              - charge.failed
              - charge.succeeded
              - charge.pending
              - charge.refunded
              - charge.refund.updated
              - charge.updated
              - customer.created
              - customer.deleted
              - customer.updated
              - dispute.created
              - dispute.updated
              - payment_intent.canceled
              - payment_intent.created
              - payment_intent.payment_failed
              - payment_intent.processing
              - payment_intent.requires_action
              - payment_intent.succeeded
              - payment_intent.amount_capturable_updated
              - payment_method.attached
              - payment_method.detached
              - payout.created
              - payout.failed
              - payout.paid
              - payout.updated
              - platform_fee.created
              - platform_fee.refunded
              - subscription.created
              - subscription.canceled
              - subscription.updated
              - report_run.succeeded
              - report_run.failed
              - outbound_transfer.pending
              - outbound_transfer.failed
              - outbound_transfer.canceled
              - outbound_transfer.succeeded
          type: array
        url:
          description: The URL of the webhook endpoint.
          type: string
    AccountsListConnectedResponse:
      allOf:
        - $ref: '#/components/schemas/PaginatedDto'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/Account'
          required:
            - items
    ApiKeysListAllResponse:
      allOf:
        - $ref: '#/components/schemas/PaginatedDto'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/ApiKey'
          required:
            - items
    ApiKeysPermanentlyDeleteByIdResponse:
      type: object
      properties: {}
      example: {}
    ApplePayDomainsListAllResponse:
      allOf:
        - $ref: '#/components/schemas/PaginatedDto'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/ApplePayDomain'
          required:
            - items
    ApplePayDomainsDeleteDomainResponse:
      type: object
      properties: {}
      example: {}
    OnboardingSubmitMerchantApplicationResponse:
      type: object
      properties: {}
      example: {}
    BalanceTransactionsListAllResponse:
      allOf:
        - $ref: '#/components/schemas/PaginatedDto'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/BalanceTransaction'
          required:
            - items
    CheckoutSessionsListAllResponse:
      allOf:
        - $ref: '#/components/schemas/PaginatedDto'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/CheckoutSession'
          required:
            - items
    CustomersListAllResponse:
      allOf:
        - $ref: '#/components/schemas/PaginatedDto'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/Customer'
          required:
            - items
    CustomersDeleteCustomerResponse:
      type: object
      properties: {}
      example: {}
    DisputesListAllResponse:
      allOf:
        - $ref: '#/components/schemas/PaginatedDto'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/Dispute'
          required:
            - items
    DocumentsListAllResponse:
      allOf:
        - $ref: '#/components/schemas/PaginatedDto'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/DocumentDto'
          required:
            - items
    EventsListAllResponse:
      allOf:
        - $ref: '#/components/schemas/PaginatedDto'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/Event'
          required:
            - items
    FilesGetAllResponse:
      allOf:
        - $ref: '#/components/schemas/PaginatedDto'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/File'
          required:
            - items
    FilesPermanentlyDeleteByIdResponse:
      type: object
      properties: {}
      example: {}
    FilesGetContentsByIdResponse:
      type: string
      format: binary
    OutboundTransfersListAllResponse:
      allOf:
        - $ref: '#/components/schemas/PaginatedDto'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/OutboundTransfer'
          required:
            - items
    PaymentIntentsListAllResponse:
      allOf:
        - $ref: '#/components/schemas/PaginatedDto'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/PaymentIntent'
          required:
            - items
    PaymentMethodsListForCustomerResponse:
      allOf:
        - $ref: '#/components/schemas/PaginatedDto'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/PaymentMethod'
          required:
            - items
    PayoutsGetAllResponse:
      allOf:
        - $ref: '#/components/schemas/PaginatedDto'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/Payout'
          required:
            - items
    PlatformFeesListAllResponse:
      allOf:
        - $ref: '#/components/schemas/PaginatedDto'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/PlatformFee'
          required:
            - items
    PricingTemplatesListAllResponse:
      allOf:
        - $ref: '#/components/schemas/PaginatedDto'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/PricingTemplate'
          required:
            - items
    ProductCodesListForAccountResponse:
      allOf:
        - $ref: '#/components/schemas/PaginatedDto'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/ProductCode'
          required:
            - items
    RefundsListAllResponse:
      allOf:
        - $ref: '#/components/schemas/PaginatedDto'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/Refund'
          required:
            - items
    ReportRunsListAllResponse:
      allOf:
        - $ref: '#/components/schemas/PaginatedDto'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/ReportRun'
          required:
            - items
    SubscriptionsListAllResponse:
      allOf:
        - $ref: '#/components/schemas/PaginatedDto'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/Subscription'
          required:
            - items
    TerminalReadersListAllResponse:
      allOf:
        - $ref: '#/components/schemas/PaginatedDto'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/TerminalReader'
          required:
            - items
    UsersListAllUserInvitationsResponse:
      allOf:
        - $ref: '#/components/schemas/PaginatedDto'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/UserInvitation'
          required:
            - items
    UsersGetAllResponse:
      allOf:
        - $ref: '#/components/schemas/PaginatedDto'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/User'
          required:
            - items
    UsersRemoveUserResponse:
      type: object
      properties: {}
      example: {}
    WebhookEndpointsGetAllResponse:
      allOf:
        - $ref: '#/components/schemas/PaginatedDto'
        - properties:
            items:
              type: array
              items:
                $ref: '#/components/schemas/WebhookEndpoint'
          required:
            - items
    WebhookEndpointsDeleteEndpointResponse:
      type: object
      properties: {}
      example: {}
