openapi: 3.0.1
info:
  title: Payfactory Api
  description: >-
    Payfactory specializes in embedded payment facilitation (payfac) services
    for ISVs and SaaS companies. Our gateway-friendly platform integrates with
    software systems to provide seamless payment facilitation with little to no
    development required, allowing our partners to minimize integration costs
    and quickly gain a new revenue stream. Founded by payment industry veterans,
    we believe that integrated processing should be simple, frictionless and
    fast â€“ while also maintaining the highest level of security, customer
    service and human support.
  version: v1
  x-konfig-ignore:
    object-with-no-properties: true
    potential-incorrect-type: true
servers:
  - url: https://dev-api.payfactory.app
tags:
  - name: Application
  - name: Reporting
  - name: ApplicationForm
  - name: Transaction
  - name: Document
paths:
  /v1/Application/Status/{appId}:
    get:
      tags:
        - Application
      summary: Gets the Status of an Application
      operationId: Application_getApplicationStatus
      parameters:
        - description: ''
          name: appId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationStatusResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGetApplicationStatusResponse'
  /v1/Application/Details/{appId}:
    get:
      tags:
        - Application
      summary: Gets Details for an Application
      operationId: Application_getApplicationDetails
      parameters:
        - description: ''
          name: appId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationDetailsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationGetApplicationDetailsResponse'
  /v1/Application/StartUnderwriting/{appId}:
    post:
      tags:
        - Application
      summary: Start Underwriting Process for an Application
      operationId: Application_startUnderwritingProcess
      parameters:
        - description: ''
          name: appId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApplicationStartUnderwritingProcessResponse
  /v1/Application/Submit:
    post:
      tags:
        - Application
      summary: Submit a new Application
      operationId: Application_createNewApplication
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationSubmitRequestModel'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationSubmitResponseModel'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationCreateNewApplicationResponse'
  /v1/Application/Delete/{appId}:
    delete:
      tags:
        - Application
      operationId: Application_removeById
      parameters:
        - name: appId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/ApplicationForm/session/{sessionId}:
    get:
      tags:
        - ApplicationForm
      summary: Gets information about a Session
      operationId: ApplicationForm_getSessionInfo
      parameters:
        - description: ''
          name: sessionId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationFormGetSessionInfoResponse'
    put:
      tags:
        - ApplicationForm
      summary: Touch a Session, keeping it active
      operationId: ApplicationForm_updateSessionActivity
      parameters:
        - description: ''
          name: sessionId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ApplicationFormUpdateSessionActivityResponse
  /v1/ApplicationForm/session:
    post:
      tags:
        - ApplicationForm
      summary: Creates a new Session
      operationId: ApplicationForm_createSession
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSessionRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationFormCreateSessionResponse'
  /v1/Document/Upload/{type}/{appId}:
    post:
      tags:
        - Document
      summary: Upload an Agreement for a new Application
      operationId: Document_uploadAgreement
      parameters:
        - description: ''
          name: type
          in: path
          required: true
          schema:
            type: string
        - description: ''
          name: appId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DocumentUploadAgreementRequest'
            encoding:
              Document:
                style: form
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /v1/Reporting/Deposits:
    get:
      tags:
        - Reporting
      summary: Get current Deposits
      operationId: Reporting_getDeposits
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportingGetDepositsResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportingGetDeposits401Response'
  /v1/Reporting/Deposits/{referenceId}:
    get:
      tags:
        - Reporting
      summary: Get Deposits by ReferenceId.
      operationId: Reporting_getDepositsByReferenceId
      parameters:
        - description: ''
          name: referenceId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportingGetDepositsByReferenceIdResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ReportingGetDepositsByReferenceId401Response
  /v1/Reporting/AchTransactions/{referenceId}:
    get:
      tags:
        - Reporting
      operationId: Reporting_getAchTransactionsByReferenceId
      parameters:
        - name: referenceId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ReportingGetAchTransactionsByReferenceIdResponse
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ReportingGetAchTransactionsByReferenceId401Response
  /v1/Reporting/Deposits/{numberOfDeposits}:
    get:
      tags:
        - Reporting
      summary: Get {n} current Deposits
      operationId: Reporting_getDepositsByCount
      parameters:
        - description: ''
          name: numberOfDeposits
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportingGetDepositsByCountResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReportingGetDepositsByCount401Response'
  /v1/Transaction/Metadata:
    post:
      tags:
        - Transaction
      summary: Post Metadata related to a Transaction
      operationId: Transaction_createMetadata
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionMetadataRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionCreateMetadataResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionCreateMetadata401Response'
  /v1/Transaction/MetadataBulk:
    post:
      tags:
        - Transaction
      summary: Post multiple Metadate related to a Transactions
      operationId: Transaction_createMetadataBulk
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionCreateMetadataBulkRequest'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionCreateMetadataBulkResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionCreateMetadataBulk401Response'
components:
  schemas:
    AddressModel:
      required:
        - city
        - state
        - street1
        - zip
      type: object
      properties:
        country:
          type: string
          nullable: true
          readOnly: true
        street1:
          maxLength: 40
          minLength: 2
          type: string
          example: 125 West Third Street 1st Floor
        street2:
          maxLength: 40
          type: string
          nullable: true
        city:
          maxLength: 28
          minLength: 2
          pattern: ^[a-zA-Z ]+$
          type: string
          example: Tulsa
        state:
          minLength: 1
          type: string
          example: OK
        zip:
          maxLength: 5
          minLength: 1
          pattern: ^[0-9]{5}$
          type: string
          example: '74555'
    ApplicationDetailsResponse:
      type: object
      properties:
        appId:
          type: string
          nullable: true
        externalId:
          type: string
          nullable: true
        legalName:
          type: string
          nullable: true
        dbaName:
          type: string
          nullable: true
        ownershipType:
          type: string
          nullable: true
        taxId:
          type: string
          nullable: true
        address:
          $ref: '#/components/schemas/AddressModel'
        phone:
          type: string
          nullable: true
        website:
          type: string
          nullable: true
        customerService:
          $ref: '#/components/schemas/ApplicationDetailsResponse.CustomerServiceModel'
        signer:
          $ref: '#/components/schemas/ApplicationDetailsResponse.SignerModel'
        monthlyTransactionVolume:
          type: integer
          format: int32
        merchantCategoryCode:
          type: string
          nullable: true
    ApplicationDetailsResponse.CustomerServiceModel:
      type: object
      properties:
        phone:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
    ApplicationDetailsResponse.SignerModel:
      type: object
      properties:
        title:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
    ApplicationStatus:
      enum:
        - Unknown
        - Submitted
        - Pending
        - Underwriting
        - Approved
        - Declinded
        - Onboarded
      type: string
    ApplicationStatusResponse:
      type: object
      properties:
        appId:
          type: string
          nullable: true
        status:
          $ref: '#/components/schemas/ApplicationStatus'
        legalName:
          type: string
          nullable: true
        dba:
          type: string
          nullable: true
        externalId:
          type: string
          nullable: true
    ApplicationSubmitRequestModel:
      required:
        - bankDetails
        - businessContact
        - businessDetails
        - customerServiceContact
        - isvName
        - pricingStructure
        - processingDetails
        - riskContact
      type: object
      properties:
        externalId:
          maxLength: 250
          minLength: 3
          type: string
          nullable: true
        isvName:
          maxLength: 50
          minLength: 3
          type: string
        businessDetails:
          $ref: '#/components/schemas/BusinessDetailsModel'
        customerServiceContact:
          $ref: '#/components/schemas/CustomerServiceContactModel'
        riskContact:
          $ref: '#/components/schemas/RiskContactModel'
        businessContact:
          $ref: '#/components/schemas/PersonModel'
        processingDetails:
          $ref: '#/components/schemas/ProcessingDetailsModel'
        bankDetails:
          $ref: '#/components/schemas/BankDetailsModel'
        pricingStructure:
          $ref: '#/components/schemas/PricingModel'
        owners:
          type: array
          items:
            $ref: '#/components/schemas/OwnerModel'
          nullable: true
    ApplicationSubmitResponseModel:
      type: object
      properties:
        appId:
          type: string
          nullable: true
    BankDetailsModel:
      required:
        - accountNumber
        - routingNumber
      type: object
      properties:
        routingNumber:
          description: Bank Routing Number
          maxLength: 9
          minLength: 1
          pattern: ^[0-9]{9}
          type: string
          example: '082900872'
        accountNumber:
          description: Bank Account Number
          maxLength: 30
          minLength: 3
          pattern: ^[0-9]{3,30}
          type: string
          format: password
          example: '1234567890'
    BusinessDetailsModel:
      required:
        - address
        - dbaName
        - establishedDate
        - legalName
        - mcc
        - ownershipType
        - phone
        - taxId
        - website
      type: object
      properties:
        address:
          $ref: '#/components/schemas/AddressModel'
        phone:
          maxLength: 10
          minLength: 1
          pattern: ^[2-9]\d{9}$
          type: string
          example: '5551234567'
        establishedDate:
          description: Date your business was established
          type: string
          format: date
          example: '1959-02-03'
        legalName:
          description: Legal name of your business
          maxLength: 40
          minLength: 3
          pattern: ^[0-9A-Za-z ,'.&;_\-]+$
          type: string
          example: ACME LLC.
        dbaName:
          description: The name you are doing business as
          maxLength: 40
          minLength: 3
          pattern: ^[0-9A-Za-z ,'.&;_\-]+$
          type: string
          example: ACME
        taxId:
          description: Federal Tax Id
          maxLength: 9
          minLength: 1
          pattern: ^\d{9}$
          type: string
          example: '123456789'
        website:
          description: Company website
          maxLength: 48
          minLength: 1
          type: string
          example: https://www.acme.com
        mcc:
          description: Merchant Category Code
          maximum: 9999
          minimum: 1
          type: integer
          format: int32
          example: 7297
        ownershipType:
          $ref: '#/components/schemas/OwnershipTypeEnum'
    CardTypeEnum:
      enum:
        - UNKNOWN
        - Visa
        - MasterCard
        - AmericanExpress
        - Discover
      type: string
    CreateSessionRequest:
      required:
        - companyName
        - completeUrl
        - externalId
        - redirectUrl
        - refreshUrl
        - signer
      type: object
      properties:
        pricingPlanId:
          description: Id of the Pricing Plan. Only used if enabled for the partner
          type: string
          nullable: true
          example: APFOG8GTO04FKF
        signer:
          $ref: '#/components/schemas/CreateSessionRequest.SignerModel'
        companyName:
          description: Name of the merchant account
          minLength: 1
          type: string
          example: Test
        redirectUrl:
          description: Url to redirect the merchant user to when clicking the back button
          minLength: 1
          type: string
          format: uri
          example: https://test.com/return
        completeUrl:
          description: Url to redirect the merchant user to upon completing the application
          minLength: 1
          type: string
          format: uri
          example: https://test.com/complete
        refreshUrl:
          description: >-
            Url to redirect to the merchant user to when their session is
            expired
          minLength: 1
          type: string
          format: uri
          example: https://test.com/refresh
        externalId:
          description: Unique identifier for the merchant in your system
          maxLength: 250
          minLength: 3
          type: string
          example: Test1234
        businessDetails:
          $ref: '#/components/schemas/SessionBusinessDetailsModel'
    CreateSessionRequest.SignerModel:
      required:
        - emailAddress
        - firstName
        - lastName
      type: object
      properties:
        emailAddress:
          description: >-
            Email address of the merchant signer(the user who you are
            redirecting to complete the application
          maxLength: 64
          minLength: 1
          pattern: >-
            ^(?:[A-z0-9!#$%&'*+\/=?^_`{|}~-]+(?:\.[A-z0-9!#$%&'*+\/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[A-z0-9](?:[A-z0-9-]*[A-z0-9])?\.)+[A-z0-9](?:[A-z0-9-]*[A-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[A-z0-9-]*[A-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])$
          type: string
          example: test@test.com
        firstName:
          description: FirstName of the Signer
          maxLength: 15
          minLength: 1
          type: string
          example: Testor
        lastName:
          description: LastName of the Signer
          maxLength: 15
          minLength: 1
          type: string
          example: Testington
    CustomerServiceContactModel:
      required:
        - email
        - phone
      type: object
      properties:
        phone:
          maxLength: 10
          minLength: 1
          pattern: ^[2-9]\d{9}$
          type: string
          example: '5551234567'
        email:
          maxLength: 64
          minLength: 1
          pattern: >-
            ^(?:[A-z0-9!#$%&'*+\/=?^_`{|}~-]+(?:\.[A-z0-9!#$%&'*+\/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[A-z0-9](?:[A-z0-9-]*[A-z0-9])?\.)+[A-z0-9](?:[A-z0-9-]*[A-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[A-z0-9-]*[A-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])$
          type: string
          example: test@test.com
    DepositModel:
      type: object
      properties:
        date:
          type: string
          format: date-time
        type:
          $ref: '#/components/schemas/DepositType'
        subMerchantId:
          type: string
          nullable: true
        amount:
          type: number
          format: double
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/TransactionModel'
          nullable: true
    DepositType:
      enum:
        - UNKNOWN
        - Transactions
        - Fees
      type: string
    ErrorResponse:
      type: object
      properties:
        status:
          type: integer
          format: int32
        message:
          type: string
          nullable: true
    MultiErrorResponse:
      type: object
      properties:
        status:
          type: integer
          format: int32
        messages:
          type: array
          items:
            type: string
          nullable: true
    OwnerModel:
      required:
        - email
        - firstName
        - lastName
        - ownershipPercentage
        - phone
        - title
      type: object
      properties:
        title:
          maxLength: 40
          minLength: 1
          type: string
          example: CEO
        firstName:
          maxLength: 15
          minLength: 1
          type: string
          example: John
        lastName:
          maxLength: 15
          minLength: 1
          type: string
          example: Doe
        email:
          minLength: 1
          pattern: >-
            ^(?:[A-z0-9!#$%&'*+\/=?^_`{|}~-]+(?:\.[A-z0-9!#$%&'*+\/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[A-z0-9](?:[A-z0-9-]*[A-z0-9])?\.)+[A-z0-9](?:[A-z0-9-]*[A-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[A-z0-9-]*[A-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])$
          type: string
          example: test@test.com
        phone:
          maxLength: 10
          minLength: 1
          pattern: ^[2-9]\d{9}$
          type: string
          example: '5551234567'
        dob:
          description: Date of birth
          type: string
          format: date-time
          nullable: true
          example: '1947-03-25'
        ssn:
          description: Social Security Number
          pattern: ^(?!666|000|9\d{2})[0-9]{3}(?!00)[0-9]{2}(?!0000)[0-9]{4}$
          type: string
          nullable: true
          example: '5554449999'
        homeAddress:
          $ref: '#/components/schemas/AddressModel'
        ownershipPercentage:
          maximum: 100
          minimum: 1
          pattern: \d+
          type: integer
          format: int32
          example: 100
    OwnershipTypeEnum:
      enum:
        - Unknown
        - SoleProprietorship
        - Partnership
        - PrivateCorporation
        - FinancialInstitution
        - NonProfit
        - Government
        - PublicCorporation
        - SECRegulatedCorporation
        - Trust
        - LimitedLiabilityCompany
      type: string
    PersonModel:
      required:
        - email
        - firstName
        - lastName
        - phone
        - title
      type: object
      properties:
        title:
          maxLength: 40
          minLength: 1
          type: string
          example: CEO
        firstName:
          maxLength: 15
          minLength: 1
          type: string
          example: John
        lastName:
          maxLength: 15
          minLength: 1
          type: string
          example: Doe
        email:
          minLength: 1
          pattern: >-
            ^(?:[A-z0-9!#$%&'*+\/=?^_`{|}~-]+(?:\.[A-z0-9!#$%&'*+\/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[A-z0-9](?:[A-z0-9-]*[A-z0-9])?\.)+[A-z0-9](?:[A-z0-9-]*[A-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[A-z0-9-]*[A-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])$
          type: string
          example: test@test.com
        phone:
          maxLength: 10
          minLength: 1
          pattern: ^[2-9]\d{9}$
          type: string
          example: '5551234567'
        dob:
          description: Date of birth
          type: string
          format: date-time
          nullable: true
          example: '1947-03-25'
        ssn:
          description: Social Security Number
          pattern: ^(?!666|000|9\d{2})[0-9]{3}(?!00)[0-9]{2}(?!0000)[0-9]{4}$
          type: string
          nullable: true
          example: '5554449999'
        homeAddress:
          $ref: '#/components/schemas/AddressModel'
    PricingModel:
      required:
        - amex
        - discover
        - monthlyFee
        - visaMasterCard
      type: object
      properties:
        amex:
          $ref: '#/components/schemas/PricingModel.PricingStructureCardModel'
        visaMasterCard:
          $ref: '#/components/schemas/PricingModel.PricingStructureCardModel'
        discover:
          $ref: '#/components/schemas/PricingModel.PricingStructureCardModel'
        monthlyFee:
          maximum: 100
          minimum: 0
          type: number
          format: double
          example: 25
        billingFrequency:
          $ref: '#/components/schemas/PricingModel.BillingFrequencyEnum'
        program:
          $ref: '#/components/schemas/PricingProgramEnum'
    PricingModel.BillingFrequencyEnum:
      enum:
        - Monthly
        - Daily
      type: string
    PricingModel.PricingStructureCardModel:
      required:
        - fee
        - rate
      type: object
      properties:
        rate:
          maximum: 10
          minimum: 0
          type: number
          format: double
          example: 2.5
        fee:
          maximum: 10
          minimum: 0
          type: number
          format: double
          example: 0.25
    PricingProgramEnum:
      enum:
        - MerchantServices
        - PlatformServices
      type: string
    ProcessingDetailsModel:
      required:
        - averageTransactionAmount
        - billingDescriptor
        - cardNotPresentPerctange
        - cardPresentPerctange
        - dailyTransactionCount
        - highTransactionAmount
        - lowTransactionAmount
        - monthlyTransactionVolume
      type: object
      properties:
        billingDescriptor:
          maxLength: 21
          minLength: 1
          pattern: ^[^<>'" *]+$
          type: string
          example: ACME_WEST_POS
        monthlyTransactionVolume:
          maximum: 999999999
          minimum: 1
          pattern: \d+
          type: integer
          format: int32
          example: 1000
        lowTransactionAmount:
          maximum: 999999999
          minimum: 1
          pattern: \d+
          type: integer
          format: int32
          example: 2000
        averageTransactionAmount:
          maximum: 999999999
          minimum: 1
          pattern: \d+
          type: integer
          format: int32
          example: 3000
        highTransactionAmount:
          maximum: 999999999
          minimum: 1
          pattern: \d+
          type: integer
          format: int32
          example: 4000
        dailyTransactionCount:
          maximum: 999999999
          minimum: 1
          pattern: \d+
          type: integer
          format: int32
          example: 5000
        cardNotPresentPerctange:
          maximum: 100
          minimum: 0
          pattern: \d+
          type: integer
          format: int32
          example: 90
        cardPresentPerctange:
          maximum: 100
          minimum: 0
          pattern: \d+
          type: integer
          format: int32
          example: 10
    RiskContactModel:
      required:
        - email
        - firstName
        - lastName
      type: object
      properties:
        firstName:
          maxLength: 25
          minLength: 1
          type: string
          example: John
        lastName:
          maxLength: 25
          minLength: 1
          type: string
          example: Doe
        email:
          maxLength: 64
          minLength: 1
          pattern: >-
            ^(?:[A-z0-9!#$%&'*+\/=?^_`{|}~-]+(?:\.[A-z0-9!#$%&'*+\/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[A-z0-9](?:[A-z0-9-]*[A-z0-9])?\.)+[A-z0-9](?:[A-z0-9-]*[A-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[A-z0-9-]*[A-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])$
          type: string
          example: test@test.com
    SessionBusinessDetailsModel:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/AddressModel'
        phone:
          maxLength: 10
          pattern: ^[2-9]\d{9}$
          type: string
          nullable: true
          example: '5551234567'
        establishedDate:
          description: Date your business was established
          type: string
          format: date
          example: '1959-02-03'
        legalName:
          description: Legal name of your business
          maxLength: 40
          minLength: 3
          pattern: ^[0-9A-Za-z ,'.&;_\-]+$
          type: string
          nullable: true
          example: ACME LLC.
        dbaName:
          description: The name you are doing business as
          maxLength: 40
          minLength: 3
          pattern: ^[0-9A-Za-z ,'.&;_\-]+$
          type: string
          nullable: true
          example: ACME
        taxId:
          description: Federal Tax Id
          maxLength: 9
          pattern: ^\d{9}$
          type: string
          nullable: true
          example: '123456789'
        website:
          description: Company website
          maxLength: 48
          type: string
          nullable: true
          example: https://www.acme.com
    SessionResponse:
      type: object
      properties:
        sessionId:
          type: string
          nullable: true
        appId:
          type: string
          nullable: true
        externalId:
          type: string
          nullable: true
        validUntil:
          type: string
          format: date-time
        complete:
          type: boolean
        url:
          type: string
          nullable: true
        expired:
          type: boolean
    TransactionMetadataRequest:
      required:
        - cardHolderName
        - merchantId
        - transactionId
      type: object
      properties:
        transactionId:
          description: The transaction Id from the payment processor
          maxLength: 35
          minLength: 1
          type: string
        merchantId:
          description: Payfactoy's merchant Id
          minLength: 1
          pattern: ^[A-Z0-9]{4}-[A-Z0-9]{4}$
          type: string
          example: 4BCD-3FGH
        cardHolderName:
          description: Name of the Cardholder
          maxLength: 100
          minLength: 1
          type: string
          example: John Doe
        externalId:
          description: Any identifier you choose to send
          maxLength: 50
          type: string
          nullable: true
          example: abcdef123456
        orderId:
          description: Any identifier you choose to send
          maxLength: 50
          type: string
          nullable: true
          example: '321654987'
        partnerFee:
          description: Required if partner is configured for the partner fee program
          type: number
          format: double
          nullable: true
          example: 1.25
        itemCount:
          description: Number of items sold in the transaction
          type: integer
          format: int32
          nullable: true
          example: 1
    TransactionModel:
      type: object
      properties:
        date:
          type: string
          format: date-time
        amount:
          type: number
          format: double
        fee:
          type: number
          format: double
        maskedPan:
          type: string
          nullable: true
        cardType:
          $ref: '#/components/schemas/CardTypeEnum'
        cardholderName:
          type: string
          nullable: true
        expDate:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        refNumber:
          type: string
          nullable: true
        batchId:
          type: string
          nullable: true
        authCode:
          type: string
          nullable: true
        userData:
          type: string
          nullable: true
    DocumentUploadAgreementRequest:
      required:
        - Document
      type: object
      properties:
        Document:
          type: string
          format: binary
          example: .pdf
    TransactionCreateMetadataBulkRequest:
      type: array
      items:
        $ref: '#/components/schemas/TransactionMetadataRequest'
    ApplicationGetApplicationStatusResponse:
      type: object
      properties: {}
      example: {}
    ApplicationGetApplicationDetailsResponse:
      type: object
      properties: {}
      example: {}
    ApplicationStartUnderwritingProcessResponse:
      type: object
      properties: {}
      example: {}
    ApplicationCreateNewApplicationResponse:
      type: object
      properties: {}
      example: {}
    ApplicationFormGetSessionInfoResponse:
      type: object
      properties: {}
      example: {}
    ApplicationFormUpdateSessionActivityResponse:
      type: object
      properties: {}
      example: {}
    ApplicationFormCreateSessionResponse:
      type: object
      properties: {}
      example: {}
    ReportingGetDepositsResponse:
      type: array
      items:
        $ref: '#/components/schemas/DepositModel'
    ReportingGetDeposits401Response:
      type: object
      properties: {}
      example: {}
    ReportingGetDepositsByReferenceIdResponse:
      type: array
      items:
        $ref: '#/components/schemas/DepositModel'
    ReportingGetDepositsByReferenceId401Response:
      type: object
      properties: {}
      example: {}
    ReportingGetAchTransactionsByReferenceIdResponse:
      type: array
      items:
        $ref: '#/components/schemas/DepositModel'
    ReportingGetAchTransactionsByReferenceId401Response:
      type: object
      properties: {}
      example: {}
    ReportingGetDepositsByCountResponse:
      type: array
      items:
        $ref: '#/components/schemas/DepositModel'
    ReportingGetDepositsByCount401Response:
      type: object
      properties: {}
      example: {}
    TransactionCreateMetadataResponse:
      type: object
      properties: {}
      example: {}
    TransactionCreateMetadata401Response:
      type: object
      properties: {}
      example: {}
    TransactionCreateMetadataBulkResponse:
      type: object
      properties: {}
      example: {}
    TransactionCreateMetadataBulk401Response:
      type: object
      properties: {}
      example: {}
  securitySchemes:
    ApiKey:
      type: apiKey
      name: pf-api-key
      in: header
security:
  - ApiKey: []
x-readme:
  explorer-enabled: true
  proxy-enabled: true
_id: 646fce00d3f8620059f6fc19
