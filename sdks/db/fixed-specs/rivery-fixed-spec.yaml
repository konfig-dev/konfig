openapi: 3.0.3
info:
  title: Rivery API
  description: >

    # Rivery API documentation


    Welcome to the Rivery API Documentation. 


    Using the Rivery API, you can automate any single or group operations you
    perform in the Rivery console. 

    You can create, execute, and delete Rivers, create DataFrames, automate
    processes, and more.

    The Rivery API is structured around REST. It accepts JSON request bodies,
    returns JSON responses,

    and employs conventional HTTP response codes, authentication, and verbs to
    access and use data through HTTP requests. 


    Consult our [Legacy API](https://api-docs.rivery.io/) documentation. 


    Please [contact our Support team](mailto:<contact@rivery.io>) if you have
    any questions or concerns.


    # Authorization

    ## Rivery API Token

    To generate a Bearer token, please check out [Rivery's
    docs](https://docs.rivery.io/docs/rivery-api).


    Every bearer token is a combination of account, environment, and scopes
    attached. Every time the token is provided,

    the API compares its scopes with the request required scope.

    If the scope is not valid, an insufficient permissions (403) response code
    returned.


    ## Scopes

    A scope is defined as a combination of the entity in Rivery, and the
    operation allowed to perform on the entity.


    The entity can be any entity available via the API, for example -
    connection.

    An operation can be one of specific operations allowed for each scope. For
    example: list or edit.

    Therefore, listing connections scope will be set as `connection:list`.

    Please make sure the Bearer token is has the right scopes attached for all
    of the needed requests.
  version: 1.0.0
  contact:
    name: Rivery Documentation
    url: https://docs.rivery.io/
    email: contact@rivery.io
  x-logo:
    url: https://riveryio.wpengine.com/wp-content/uploads/2021/08/logo-main.svg
  x-konfig-ignore:
    object-with-no-properties: true
    potential-incorrect-type: true
servers:
  - description: US
    url: https://api.rivery.io
  - description: EU
    url: https://api.eu-west-1.rivery.io
tags:
  - description: Management of rivers
    name: Rivers
  - description: Get the Rivery's activities data with various of GET operations
    name: Activities
  - description: Beta endpoints
    name: Beta Endpoints
  - description: Management of dataframe entities
    name: Dataframes
  - name: Groups
  - description: Listing accounts
    name: Accounts
  - description: Listing account's environments
    name: Environments
  - description: Listing account's audit events
    name: Audit Events
  - description: Management of connection entities
    name: Connections
paths:
  /v1/accounts/{account_id}/environments/{environment_id}/dataframes:
    get:
      tags:
        - Dataframes
      summary: Get Dataframes
      operationId: list_dataframes
      security:
        - HTTPBearer: []
      description: |-
        **Authorization scope:** `dataframe:list` 
         
         **Get all dataframe entities from the DB**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
        - required: true
          schema:
            title: Environment Id
            type: string
          name: environment_id
          in: path
        - description: The number of items per page in the paginated list.
          required: false
          schema:
            title: Items Per Page
            description: The number of items per page in the paginated list.
            type: integer
            maximum: 500
            minimum: 1
            default: 20
          name: items_per_page
          in: query
        - description: The current page number in the paginated list.
          required: false
          schema:
            title: Page
            description: The current page number in the paginated list.
            type: integer
            minimum: 1
            default: 1
          name: page
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataframePaginationResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - Dataframes
      summary: Add Dataframe
      operationId: add_dataframe
      security:
        - HTTPBearer: []
      description: |-
        **Authorization scope:** `dataframe:write` 
         
         **Creates a new dataframe entity.**
        ****
        **Please note that the Dataframe's name has to be unique**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
        - required: true
          schema:
            title: Environment Id
            type: string
          name: environment_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataframeAddInput'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataframeResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/accounts/{account_id}/environments/{environment_id}/dataframes/{dataframe_name}:
    get:
      tags:
        - Dataframes
      summary: Get Dataframe
      operationId: get_dataframe
      security:
        - HTTPBearer: []
      description: |-
        **Authorization scope:** `dataframe:list` 
         
         **Get a specific dataframe by name.**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
        - required: true
          schema:
            title: Environment Id
            type: string
          name: environment_id
          in: path
        - required: true
          schema:
            title: Dataframe Name
            type: string
          name: dataframe_name
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataframeResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - Dataframes
      summary: Update Dataframe
      operationId: update_dataframe
      security:
        - HTTPBearer: []
      description: |-
        **Authorization scope:** `dataframe:write` 
         
         **Updates an existing dataframe entity. Please note that only the connecting_settings field can be modified**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
        - required: true
          schema:
            title: Environment Id
            type: string
          name: environment_id
          in: path
        - required: true
          schema:
            title: Dataframe Name
            type: string
          name: dataframe_name
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataframeUpdateInput'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataframeResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - Dataframes
      summary: Delete Dataframe
      operationId: delete_dataframe
      security:
        - HTTPBearer: []
      description: |-
        **Authorization scope:** `dataframe:write` 
         
         **Delete a dataframe.**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
        - required: true
          schema:
            title: Environment Id
            type: string
          name: environment_id
          in: path
        - required: true
          schema:
            title: Dataframe Name
            type: string
          name: dataframe_name
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDataframeResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/accounts/{account_id}/environments/{environment_id}/dataframes/{dataframe_name}/download:
    get:
      tags:
        - Dataframes
      summary: Download Dataframe
      operationId: download_dataframe
      security:
        - HTTPBearer: []
      description: |-
        **Authorization scope:** `dataframe:list` 
         
         **This endpoint creates a new task for downloading a dataframe.**
        ****
        ****
        **Be advised: the task is an async operation, which means that**
        **after creating the task, the client must call the endpoint GET**
        **operation in order to get the result.**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
        - required: true
          schema:
            title: Environment Id
            type: string
          name: environment_id
          in: path
        - required: true
          schema:
            title: Dataframe Name
            type: string
          name: dataframe_name
          in: path
      responses:
        '202':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/accounts/{account_id}/environments/{environment_id}/dataframes/{dataframe_name}/clear:
    post:
      tags:
        - Dataframes
      summary: Clear Dataframe Values
      operationId: Dataframes_clearValues
      security:
        - HTTPBearer: []
      description: |-
        **Authorization scope:** `dataframe:write` 
         
         **This endpoint creates an asynchronous operation for clearing the**
        **Dataframe's data.**
        **.**
        ****
        **Please note - this is different from deleting the Dataframe,**
        **which deletes both the Dataframe's data and configuration.**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
        - required: true
          schema:
            title: Environment Id
            type: string
          name: environment_id
          in: path
        - required: true
          schema:
            title: Dataframe Name
            type: string
          name: dataframe_name
          in: path
      responses:
        '202':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/accounts/{account_id}/environments/{environment_id}/activities_statistics:
    get:
      tags:
        - Activities
      summary: Get Activities Statistic
      operationId: Activities_getStatistics
      security:
        - HTTPBearer: []
      description: |-
        **Authorization scope:** `activity:list` 
         
         **Get environment's activity statistics.**
        ****
        **The statistics include how many units(RPU) were consumed, and how**
        **many runs ended with each status.**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
        - required: true
          schema:
            title: Environment Id
            type: string
          name: environment_id
          in: path
        - description: >-
            The start UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
            YYYY-MM-DDTHH:MM:SS.mmmmmm
          required: true
          schema:
            title: Start Time
            description: >-
              The start UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
              YYYY-MM-DDTHH:MM:SS.mmmmmm
            type: string
            format: date-time
          example: '2020-01-01T12:00:00'
          name: start_time
          in: query
        - description: >-
            The end UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
            YYYY-MM-DDTHH:MM:SS.mmmmmm
          required: true
          schema:
            title: End Time
            description: >-
              The end UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
              YYYY-MM-DDTHH:MM:SS.mmmmmm
            type: string
            format: date-time
          example: '2020-01-01T12:00:00'
          name: end_time
          in: query
        - description: A list of statuses to filter
          required: false
          schema:
            description: A list of statuses to filter
            items:
              $ref: '#/components/schemas/ActivityStatusEnum'
            type: array
          name: status
          in: query
        - description: The ID of the group to filter
          required: false
          schema:
            title: Group Id
            description: The ID of the group to filter
            items:
              type: string
            type: array
          name: group_id
          in: query
        - description: >-
            A flag that indicates whether the river is scheduled. If not set
            then activities of all rivers will be returned
          required: false
          schema:
            $ref: '#/components/schemas/ScheduleEnum'
          name: is_scheduled
          in: query
        - description: Get statistics for rivers that has the search query in their name
          required: false
          schema:
            title: Search
            description: Get statistics for rivers that has the search query in their name
            type: string
          name: search
          in: query
        - description: The river type
          required: false
          schema:
            description: The river type
            items:
              $ref: '#/components/schemas/RiverTypeEnum'
            type: array
          name: river_type
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityStatisticResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/accounts/{account_id}/environments/{environment_id}/rivers/{river_cross_id}/activities_statistics:
    get:
      tags:
        - Activities
      summary: Get River Activities Statistic
      operationId: Activities_getRiverActivitiesStatistic
      security:
        - HTTPBearer: []
      description: |-
        **Authorization scope:** `activity:list` 
         
         **Get river's activity statistics (summary).**
        ****
        **The statistics include how many units(RPU) were consumed, and how**
        **many runs ended with each status**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
        - required: true
          schema:
            title: Environment Id
            type: string
          name: environment_id
          in: path
        - required: true
          schema:
            title: River Cross Id
            type: string
          name: river_cross_id
          in: path
        - description: >-
            The start UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
            YYYY-MM-DDTHH:MM:SS.mmmmmm
          required: true
          schema:
            title: Start Time
            description: >-
              The start UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
              YYYY-MM-DDTHH:MM:SS.mmmmmm
            type: string
            format: date-time
          example: '2020-01-01T12:00:00'
          name: start_time
          in: query
        - description: >-
            The end UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
            YYYY-MM-DDTHH:MM:SS.mmmmmm
          required: true
          schema:
            title: End Time
            description: >-
              The end UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
              YYYY-MM-DDTHH:MM:SS.mmmmmm
            type: string
            format: date-time
          example: '2020-01-01T12:00:00'
          name: end_time
          in: query
        - required: false
          schema:
            items:
              $ref: '#/components/schemas/ActivityStatusEnum'
            type: array
          name: status
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiverActivityStatisticResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/accounts/{account_id}/environments/{environment_id}/rivers/{river_cross_id}/activities_targets:
    get:
      tags:
        - Activities
      summary: Get River Activities Targets
      operationId: Activities_getRiverActivityTargets
      security:
        - HTTPBearer: []
      description: |-
        **Authorization scope:** `activity:list` 
         
         **Get river's activity targets (table names) in a specific time frame for**
        **specific river and their status.**
        ****
        **This endpoint should be used for multi table rivers.**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
        - required: true
          schema:
            title: Environment Id
            type: string
          name: environment_id
          in: path
        - required: true
          schema:
            title: River Cross Id
            type: string
          name: river_cross_id
          in: path
        - description: >-
            The start UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
            YYYY-MM-DDTHH:MM:SS.mmmmmm
          required: true
          schema:
            title: Start Time
            description: >-
              The start UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
              YYYY-MM-DDTHH:MM:SS.mmmmmm
            type: string
            format: date-time
          example: '2020-01-01T12:00:00'
          name: start_time
          in: query
        - description: >-
            The end UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
            YYYY-MM-DDTHH:MM:SS.mmmmmm
          required: true
          schema:
            title: End Time
            description: >-
              The end UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
              YYYY-MM-DDTHH:MM:SS.mmmmmm
            type: string
            format: date-time
          example: '2020-01-01T12:00:00'
          name: end_time
          in: query
        - description: Filter by the run group ID
          required: false
          schema:
            title: Run Group Id
            description: Filter by the run group ID
            type: string
          name: run_group_id
          in: query
        - description: Filter by the sub river ID
          required: false
          schema:
            title: Sub River Id
            description: Filter by the sub river ID
            type: string
          name: sub_river_id
          in: query
        - description: >-
            A list of statuses. Only targets with those statuses will be
            returned
          required: false
          schema:
            description: >-
              A list of statuses. Only targets with those statuses will be
              returned
            items:
              $ref: '#/components/schemas/ActivityStatusEnum'
            type: array
          name: status
          in: query
        - description: Indicates by which parameter to sort the targets
          required: false
          schema:
            $ref: '#/components/schemas/TargetsSortByEnum'
          name: sort_by
          in: query
        - required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
          name: sort_order
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiverActivityTargetResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/accounts/{account_id}/environments/{environment_id}/rivers/{river_cross_id}/activities_run_groups:
    get:
      tags:
        - Activities
      summary: List River Activities Run Groups
      operationId: Activities_listRunGroups
      security:
        - HTTPBearer: []
      description: |-
        **Authorization scope:** `activity:list` 
         
         **Get list of run groups that occurred in a specific time**
        **frame for specific river and their status.**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
        - required: true
          schema:
            title: Environment Id
            type: string
          name: environment_id
          in: path
        - required: true
          schema:
            title: River Cross Id
            type: string
          name: river_cross_id
          in: path
        - description: >-
            The start UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
            YYYY-MM-DDTHH:MM:SS.mmmmmm
          required: true
          schema:
            title: Start Time
            description: >-
              The start UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
              YYYY-MM-DDTHH:MM:SS.mmmmmm
            type: string
            format: date-time
          example: '2020-01-01T12:00:00'
          name: start_time
          in: query
        - description: >-
            The end UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
            YYYY-MM-DDTHH:MM:SS.mmmmmm
          required: true
          schema:
            title: End Time
            description: >-
              The end UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
              YYYY-MM-DDTHH:MM:SS.mmmmmm
            type: string
            format: date-time
          example: '2020-01-01T12:00:00'
          name: end_time
          in: query
        - description: Filter by the target table name
          required: false
          schema:
            title: Target Name
            description: Filter by the target table name
            type: string
          name: target_name
          in: query
        - description: Filter by the sub river ID
          required: false
          schema:
            title: Sub River Id
            description: Filter by the sub river ID
            type: string
          name: sub_river_id
          in: query
        - description: >-
            A list of statuses. Only run groups with this statuses will be
            returned.
          required: false
          schema:
            description: >-
              A list of statuses. Only run groups with this statuses will be
              returned.
            items:
              $ref: '#/components/schemas/RunGroupStatusEnum'
            type: array
          name: status
          in: query
        - description: Cache context id is an internal query parameter for cache purposes
          required: false
          schema:
            title: Cache Context Id
            description: Cache context id is an internal query parameter for cache purposes
            type: string
          name: cache_context_id
          in: query
        - required: false
          schema:
            title: Page
            type: integer
            minimum: 1
            default: 1
          name: page
          in: query
        - required: false
          schema:
            $ref: '#/components/schemas/RunGroupSortByEnum'
          name: sort_by
          in: query
        - required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
          name: sort_order
          in: query
        - required: false
          schema:
            title: Items Per Page
            type: integer
            maximum: 200
            minimum: 1
            default: 50
          name: items_per_page
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiverActivityRunGroupResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/accounts/{account_id}/environments/{environment_id}/rivers/{river_cross_id}/activities_run_groups/{run_group_id}:
    get:
      tags:
        - Activities
      summary: Get River Activities Run Groups
      operationId: Activities_getRunGroup
      description: Get a specific run group id
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
        - required: true
          schema:
            title: Environment Id
            type: string
          name: environment_id
          in: path
        - required: true
          schema:
            title: River Cross Id
            type: string
          name: river_cross_id
          in: path
        - required: true
          schema:
            title: Run Group Id
            type: string
          name: run_group_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiverActivityRunGroupWithStatistics'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/accounts/{account_id}/environments/{environment_id}/rivers/{river_cross_id}/activities_sub_rivers:
    get:
      tags:
        - Activities
      summary: Get River Activities Sub Rivers
      operationId: Activities_getSubRiverActivities
      security:
        - HTTPBearer: []
      description: |-
        **Authorization scope:** `activity:list` 
         
         **Get list of sub rivers that ran in a specific time frame.**
        ****
        **Additional filters can be added such as target name or run group id.**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
        - required: true
          schema:
            title: Environment Id
            type: string
          name: environment_id
          in: path
        - required: true
          schema:
            title: River Cross Id
            type: string
          name: river_cross_id
          in: path
        - description: >-
            The start UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
            YYYY-MM-DDTHH:MM:SS.mmmmmm
          required: true
          schema:
            title: Start Time
            description: >-
              The start UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
              YYYY-MM-DDTHH:MM:SS.mmmmmm
            type: string
            format: date-time
          example: '2020-01-01T12:00:00'
          name: start_time
          in: query
        - description: >-
            The end UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
            YYYY-MM-DDTHH:MM:SS.mmmmmm
          required: true
          schema:
            title: End Time
            description: >-
              The end UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
              YYYY-MM-DDTHH:MM:SS.mmmmmm
            type: string
            format: date-time
          example: '2020-01-01T12:00:00'
          name: end_time
          in: query
        - description: Filter by the target table name
          required: false
          schema:
            title: Target Name
            description: Filter by the target table name
            type: string
          name: target_name
          in: query
        - description: Filter by the run group ID
          required: false
          schema:
            title: Run Group Id
            description: Filter by the run group ID
            type: string
          name: run_group_id
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiverActivitySubRiverResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/accounts/{account_id}/environments/{environment_id}/rivers/{river_cross_id}/runs:
    get:
      tags:
        - Activities
      summary: Get River Activities Runs
      operationId: Activities_getRiverRuns
      security:
        - HTTPBearer: []
      description: |-
        **Authorization scope:** `activity:list` 
         
         **Get list of runs for a specific river in a specific time frame.**
        ****
        **This endpoint return information about the runs.**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
        - required: true
          schema:
            title: Environment Id
            type: string
          name: environment_id
          in: path
        - required: true
          schema:
            title: River Cross Id
            type: string
          name: river_cross_id
          in: path
        - description: >-
            The start UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
            YYYY-MM-DDTHH:MM:SS.mmmmmm
          required: true
          schema:
            title: Start Time
            description: >-
              The start UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
              YYYY-MM-DDTHH:MM:SS.mmmmmm
            type: string
            format: date-time
          example: '2020-01-01T12:00:00'
          name: start_time
          in: query
        - description: >-
            The end UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
            YYYY-MM-DDTHH:MM:SS.mmmmmm
          required: true
          schema:
            title: End Time
            description: >-
              The end UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
              YYYY-MM-DDTHH:MM:SS.mmmmmm
            type: string
            format: date-time
          example: '2020-01-01T12:00:00'
          name: end_time
          in: query
        - description: Filter by the target table name
          required: false
          schema:
            title: Target Name
            description: Filter by the target table name
            type: string
          name: target_name
          in: query
        - description: Filter by the run group ID
          required: false
          schema:
            title: Run Group Id
            description: Filter by the run group ID
            type: string
          name: run_group_id
          in: query
        - description: Filter by the sub river ID
          required: false
          schema:
            title: Sub River Id
            description: Filter by the sub river ID
            type: string
          name: sub_river_id
          in: query
        - required: false
          schema:
            title: Page
            type: integer
            minimum: 1
            default: 1
          name: page
          in: query
        - required: false
          schema:
            title: Items Per Page
            type: integer
            maximum: 200
            minimum: 1
            default: 20
          name: items_per_page
          in: query
        - description: Indicates by which parameter to sort the runs
          required: false
          schema:
            $ref: '#/components/schemas/RunsSortByEnum'
          name: sort_by
          in: query
        - required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
          name: sort_order
          in: query
        - description: Cache context id is an internal query parameter for cache purposes
          required: false
          schema:
            title: Cache Context Id
            description: Cache context id is an internal query parameter for cache purposes
            type: string
          name: cache_context_id
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiverActivityRunsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/accounts/{account_id}/environments/{environment_id}/rivers/{river_cross_id}/runs/{run_id}:
    get:
      tags:
        - Activities
      summary: Get River Activities Run
      operationId: Activities_getRiverActivitiesRun
      security:
        - HTTPBearer: []
      description: |-
        **Authorization scope:** `activity:list` 
         
         **Get a specific run details.**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
        - required: true
          schema:
            title: Environment Id
            type: string
          name: environment_id
          in: path
        - required: true
          schema:
            title: River Cross Id
            type: string
          name: river_cross_id
          in: path
        - required: true
          schema:
            title: Run Id
            type: string
          name: run_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiverActivityRun'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/accounts/{account_id}/environments/{environment_id}/rivers/{river_cross_id}/runs/{run_id}/logic_steps:
    get:
      tags:
        - Activities
      summary: Get River Activities Run Logic Steps
      operationId: Activities_getLogicStepsStatus
      security:
        - HTTPBearer: []
      description: |-
        **Authorization scope:** `activity:list` 
         
         **Get the status of each logic step for a specific run.**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
        - required: true
          schema:
            title: Environment Id
            type: string
          name: environment_id
          in: path
        - required: true
          schema:
            title: River Cross Id
            type: string
          name: river_cross_id
          in: path
        - required: true
          schema:
            title: Run Id
            type: string
          name: run_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiverActivityRunLogicStepsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/accounts/{account_id}/environments/{environment_id}/rivers/{river_cross_id}/runs/{run_id}/variables:
    get:
      tags:
        - Activities
      summary: Get Activities Logic Variables
      operationId: Activities_getRunVariables
      security:
        - HTTPBearer: []
      description: >-
        **Authorization scope:** `activity:list` 
         
         **This endpoint retrieves the values of the logic variables in a specific run.**
        **The values are stored for a short period of time and will expire after
        that time.**

        **If the values have expired, an error message will be returned.**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
        - required: true
          schema:
            title: Environment Id
            type: string
          name: environment_id
          in: path
        - required: true
          schema:
            title: River Cross Id
            type: string
          name: river_cross_id
          in: path
        - required: true
          schema:
            title: Run Id
            type: string
          name: run_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityLogicVariableResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/accounts/{account_id}/environments/{environment_id}/rivers/{river_cross_id}/runs/{run_id}/logic_steps/{step_id}/logs:
    get:
      tags:
        - Activities
      summary: Get Activities Logic Step Log
      operationId: Activities_getLogicStepLogs
      security:
        - HTTPBearer: []
      description: |-
        **Authorization scope:** `activity:list` 
         
         **Get the logs of a python logic step.**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
        - required: true
          schema:
            title: Environment Id
            type: string
          name: environment_id
          in: path
        - required: true
          schema:
            title: River Cross Id
            type: string
          name: river_cross_id
          in: path
        - required: true
          schema:
            title: Run Id
            type: string
          name: run_id
          in: path
        - required: true
          schema:
            title: Step Id
            type: string
          name: step_id
          in: path
        - description: The step iteration number
          required: false
          schema:
            title: Iteration Number
            description: The step iteration number
            type: integer
            minimum: 0
            default: 0
          name: iteration_number
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiverActivityRunLogicStepsLogsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/accounts/{account_id}/environments/{environment_id}/activities:
    get:
      tags:
        - Activities
      summary: Get Activities
      operationId: get_activities
      security:
        - HTTPBearer: []
      description: |-
        **Authorization scope:** `activity:list` 
         
         **Get summary of activities for the account and environment summarized by**
        **river.**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
        - required: true
          schema:
            title: Environment Id
            type: string
          name: environment_id
          in: path
        - description: >-
            The start UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
            YYYY-MM-DDTHH:MM:SS.mmmmmm
          required: true
          schema:
            title: Start Time
            description: >-
              The start UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
              YYYY-MM-DDTHH:MM:SS.mmmmmm
            type: string
            format: date-time
          example: '2020-01-01T12:00:00'
          name: start_time
          in: query
        - description: >-
            The end UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
            YYYY-MM-DDTHH:MM:SS.mmmmmm
          required: true
          schema:
            title: End Time
            description: >-
              The end UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
              YYYY-MM-DDTHH:MM:SS.mmmmmm
            type: string
            format: date-time
          example: '2020-01-01T12:00:00'
          name: end_time
          in: query
        - required: false
          schema:
            items:
              $ref: '#/components/schemas/ActivityStatusEnum'
            type: array
          name: status
          in: query
        - description: The ID of the group to filter
          required: false
          schema:
            title: Group Id
            description: The ID of the group to filter
            items:
              type: string
            type: array
          name: group_id
          in: query
        - description: >-
            A flag that indicates whether the river is scheduled. If not set
            then activities of all rivers will be returned
          required: false
          schema:
            $ref: '#/components/schemas/ScheduleEnum'
          name: is_scheduled
          in: query
        - required: false
          schema:
            title: Page
            type: integer
            minimum: 1
            default: 1
          name: page
          in: query
        - required: false
          schema:
            title: Items Per Page
            type: integer
            maximum: 200
            minimum: 1
            default: 20
          name: items_per_page
          in: query
        - description: Cache context id is an internal query parameter for cache purposes
          required: false
          schema:
            title: Cache Context Id
            description: Cache context id is an internal query parameter for cache purposes
            type: string
          name: cache_context_id
          in: query
        - description: Search for a specific river by river name
          required: false
          schema:
            title: Search
            description: Search for a specific river by river name
            type: string
          name: search
          in: query
        - required: false
          schema:
            $ref: '#/components/schemas/ActivitySortByEnum'
          name: sort_by
          in: query
        - required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
          name: sort_order
          in: query
        - description: The river type
          required: false
          schema:
            description: The river type
            items:
              $ref: '#/components/schemas/RiverTypeEnum'
            type: array
          name: river_type
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivitiesResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/accounts/{account_id}/environments/{environment_id}/rivers/{river_cross_id}/runs/{run_id}/logs:
    get:
      tags:
        - Activities
      summary: Get Run Logs
      operationId: Activities_getRunLogs
      security:
        - HTTPBearer: []
      description: |-
        **Authorization scope:** `activity:list` 
         
         **This method fetches the logs for a given run id of a river.**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
        - required: true
          schema:
            title: Environment Id
            type: string
          name: environment_id
          in: path
        - required: true
          schema:
            title: River Cross Id
            type: string
          name: river_cross_id
          in: path
        - required: true
          schema:
            title: Run Id
            type: string
          name: run_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/ActivitiesGetRunLogsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/accounts/{account_id}/environments/{environment_id}/rivers/{river_cross_id}/versions:
    get:
      tags:
        - Rivers
      summary: List River Versions
      operationId: Rivers_listVersions
      security:
        - HTTPBearer: []
      description: |-
        **Authorization scope:** `river:list` 
         
         **This endpoint returns all river versions for a given river_cross_id.**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
        - required: true
          schema:
            title: Environment Id
            type: string
          name: environment_id
          in: path
        - required: true
          schema:
            title: River Cross Id
            type: string
          name: river_cross_id
          in: path
        - description: The number of items per page in the paginated list.
          required: false
          schema:
            title: Items Per Page
            description: The number of items per page in the paginated list.
            type: integer
            maximum: 500
            minimum: 1
            default: 20
          name: items_per_page
          in: query
        - description: The current page number in the paginated list.
          required: false
          schema:
            title: Page
            description: The current page number in the paginated list.
            type: integer
            minimum: 1
            default: 1
          name: page
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiverVersionsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/accounts/{account_id}/environments/{environment_id}/rivers/{river_cross_id}/versions/{version_id}:
    get:
      tags:
        - Rivers
      summary: Get River Version
      operationId: Rivers_getVersion
      security:
        - HTTPBearer: []
      description: |-
        **Authorization scope:** `river:list` 
         
         **This endpoint returns a given version for a version id and river_cross_id.**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
        - required: true
          schema:
            title: Environment Id
            type: string
          name: environment_id
          in: path
        - required: true
          schema:
            title: River Cross Id
            type: string
          name: river_cross_id
          in: path
        - required: true
          schema:
            title: Version Id
            type: string
          name: version_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiverVersions'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/accounts/{account_id}/environments/{environment_id}/rivers/{river_cross_id}:
    get:
      tags:
        - Rivers
      summary: Get River
      operationId: get_river
      security:
        - HTTPBearer: []
      description: |-
        **Authorization scope:** `river:list` 
         
         **This endpoint gets a river.**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
        - required: true
          schema:
            title: Environment Id
            type: string
          name: environment_id
          in: path
        - required: true
          schema:
            title: River Cross Id
            type: string
          name: river_cross_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiverModel'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - Beta Endpoints
      summary: Edit River
      operationId: edit_river
      security:
        - HTTPBearer: []
      description: |-
        **Authorization scope:** `river:write` 
         
         **This endpoint updates a river.**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
        - required: true
          schema:
            title: Environment Id
            type: string
          name: environment_id
          in: path
        - required: true
          schema:
            title: River Cross Id
            type: string
          name: river_cross_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WriteRiverInput'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiverModel'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - Rivers
      summary: Delete River
      operationId: delete_river
      security:
        - HTTPBearer: []
      description: |-
        **Authorization scope:** `river:write` 
         
         **This endpoint deletes a river**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
        - required: true
          schema:
            title: Environment Id
            type: string
          name: environment_id
          in: path
        - required: true
          schema:
            title: River Cross Id
            type: string
          name: river_cross_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteRiverResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/accounts/{account_id}/environments/{environment_id}/rivers:
    get:
      tags:
        - Rivers
      summary: List Rivers
      operationId: list_rivers
      security:
        - HTTPBearer: []
      description: |-
        **Authorization scope:** `river:list` 
         
         **This endpoint gets a summary of all the rivers in an environment**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
        - required: true
          schema:
            title: Environment Id
            type: string
          name: environment_id
          in: path
        - description: The current page number in the paginated list.
          required: false
          schema:
            title: Page
            description: The current page number in the paginated list.
            type: integer
            minimum: 1
            default: 1
          name: page
          in: query
        - description: The number of items per page in the paginated list.
          required: false
          schema:
            title: Items Per Page
            description: The number of items per page in the paginated list.
            type: integer
            maximum: 500
            minimum: 1
            default: 20
          name: items_per_page
          in: query
        - description: The river group name
          required: false
          schema:
            title: Group Name
            description: The river group name
            type: string
          name: group_name
          in: query
        - description: The river group id
          required: false
          schema:
            title: Group Id
            description: The river group id
            items:
              type: string
            type: array
          name: group_id
          in: query
        - description: The river name
          required: false
          schema:
            title: Name
            description: The river name
            type: string
          name: name
          in: query
        - description: The river schedule status
          required: false
          schema:
            $ref: '#/components/schemas/RiverScheduleStatusEnum'
          name: schedule
          in: query
        - description: The river status
          required: false
          schema:
            description: The river status
            items:
              $ref: '#/components/schemas/RiverStatusEnum'
            type: array
          name: river_status
          in: query
        - description: The river sort by filter
          required: false
          schema:
            $ref: '#/components/schemas/ListRiversSortByFilterEnum'
          name: sort_by
          in: query
        - description: The river sort order filter
          required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
          name: sort_order
          in: query
        - description: The river type
          required: false
          schema:
            description: The river type
            items:
              $ref: '#/components/schemas/RiverTypeEnum'
            type: array
          name: river_type
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiverListResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - Beta Endpoints
      summary: Add River
      operationId: add_river
      security:
        - HTTPBearer: []
      description: |-
        **Authorization scope:** `river:write` 
         
         **This endpoint creates a river.**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
        - required: true
          schema:
            title: Environment Id
            type: string
          name: environment_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WriteRiverInput'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiverModel'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/accounts/{account_id}/environments/{environment_id}/rivers/{river_cross_id}/cdc_config:
    get:
      tags:
        - Rivers
      summary: Get Cdc Config
      operationId: Rivers_getCdcConfig
      security:
        - HTTPBearer: []
      description: >-
        **Authorization scope:** `river:list` 
         
         **This endpoint gets the cdc config:**
        ****

        *** Gets cdc offset by provided datasource type to see the last position
        of the cdc**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
        - required: true
          schema:
            title: Environment Id
            type: string
          name: environment_id
          in: path
        - required: true
          schema:
            title: River Cross Id
            type: string
          name: river_cross_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CdcConfig'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - Rivers
      summary: Set Cdc Config
      operationId: Rivers_setCdcConfig
      security:
        - HTTPBearer: []
      description: >-
        **Authorization scope:** `river:write` 
         
         **This endpoint set the cdc config:**
        ****

        *** Set the cdc offset that next run of the river can continue from
        specific position**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
        - required: true
          schema:
            title: Environment Id
            type: string
          name: environment_id
          in: path
        - required: true
          schema:
            title: River Cross Id
            type: string
          name: river_cross_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CdcConfig'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiversSetCdcConfigResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - Rivers
      summary: Delete Cdc Config
      operationId: Rivers_deleteCdcConfig
      security:
        - HTTPBearer: []
      description: |-
        **Authorization scope:** `river:write` 
         
         **This endpoint delete the cdc config:**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
        - required: true
          schema:
            title: Environment Id
            type: string
          name: environment_id
          in: path
        - required: true
          schema:
            title: River Cross Id
            type: string
          name: river_cross_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiversDeleteCdcConfigResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/accounts/{account_id}/environments/{environment_id}/rivers/{river_cross_id}/cancel_run:
    post:
      tags:
        - Rivers
      summary: Cancel River Run
      operationId: Rivers_cancelRun
      security:
        - HTTPBearer: []
      description: |-
        **Authorization scope:** `river:execute` 
         
         **This endpoint cancels a specific run if run_id is provided or multiple runs if run_group_id is provided.**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
        - required: true
          schema:
            title: Environment Id
            type: string
          name: environment_id
          in: path
        - required: true
          schema:
            title: River Cross Id
            type: string
          name: river_cross_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelRiverRunBody'
        required: true
      responses:
        '202':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/accounts/{account_id}/environments/{environment_id}/rivers/{river_cross_id}/run:
    post:
      tags:
        - Rivers
      summary: Run River
      operationId: run_river
      security:
        - HTTPBearer: []
      description: |-
        **Authorization scope:** `river:execute` 
         
         **This endpoint runs a river.**
        ****
        **Throttling rules:**
        *** River can be executed up to 2 times per minute**
        *** Each user can execute a river up to 15 times per minute**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
        - required: true
          schema:
            title: Environment Id
            type: string
          name: environment_id
          in: path
        - required: true
          schema:
            title: River Cross Id
            type: string
          name: river_cross_id
          in: path
        - description: >-
            A flag that indicates whether to run all active sub rivers of the
            master river
          required: false
          schema:
            title: Run Sub Rivers
            description: >-
              A flag that indicates whether to run all active sub rivers of the
              master river
            type: boolean
            default: false
          name: run_sub_rivers
          in: query
      responses:
        '202':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiversRunResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/accounts/{account_id}/environments/{environment_id}/rivers/{river_cross_id}/sub_rivers/{sub_river_id}/run:
    post:
      tags:
        - Rivers
      summary: Run Sub River
      operationId: Rivers_triggerSubRiverRun
      security:
        - HTTPBearer: []
      description: |-
        **Authorization scope:** `river:execute` 
         
         **This endpoint runs a sub_river.**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
        - required: true
          schema:
            title: Environment Id
            type: string
          name: environment_id
          in: path
        - required: true
          schema:
            title: River Cross Id
            type: string
          name: river_cross_id
          in: path
        - required: true
          schema:
            title: Sub River Id
            type: string
          name: sub_river_id
          in: path
      responses:
        '202':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiversRunResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/accounts/{account_id}/environments/{environment_id}/rivers/{river_cross_id}/variables:
    get:
      tags:
        - Rivers
      summary: Get River Variables
      operationId: Rivers_getVariables
      security:
        - HTTPBearer: []
      description: |-
        **Authorization scope:** `river:list` 
         
         **Get all river variables**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
        - required: true
          schema:
            title: Environment Id
            type: string
          name: environment_id
          in: path
        - required: true
          schema:
            title: River Cross Id
            type: string
          name: river_cross_id
          in: path
        - description: The number of items per page in the paginated list.
          required: false
          schema:
            title: Items Per Page
            description: The number of items per page in the paginated list.
            type: integer
            maximum: 500
            minimum: 1
            default: 20
          name: items_per_page
          in: query
        - description: The current page number in the paginated list.
          required: false
          schema:
            title: Page
            description: The current page number in the paginated list.
            type: integer
            minimum: 1
            default: 1
          name: page
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiverVariablesPaginatedResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - Rivers
      summary: Update River Variable
      operationId: Rivers_updateRiverVariable
      security:
        - HTTPBearer: []
      description: >-
        **Authorization scope:** `river:write` 
         
         **This endpoint updates a variable for a river.**
        **Given a list of variables, it will replace all existing variables for
        the logic river with the provided list.**
      parameters:
        - required: true
          schema:
            title: River Cross Id
            type: string
          name: river_cross_id
          in: path
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
        - required: true
          schema:
            title: Environment Id
            type: string
          name: environment_id
          in: path
        - description: The number of items per page in the paginated list.
          required: false
          schema:
            title: Items Per Page
            description: The number of items per page in the paginated list.
            type: integer
            maximum: 500
            minimum: 1
            default: 20
          name: items_per_page
          in: query
        - description: The current page number in the paginated list.
          required: false
          schema:
            title: Page
            description: The current page number in the paginated list.
            type: integer
            minimum: 1
            default: 1
          name: page
          in: query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRiverVariableInputList'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiverVariablesPaginatedResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/accounts/{account_id}/environments:
    get:
      tags:
        - Environments
      summary: List Environments
      operationId: list_environments
      security:
        - HTTPBearer: []
      description: |-
        **Authorization scope:** `environment:list` 
         
         **Get list of environments entities for an account**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
        - required: false
          schema:
            title: Include Deleted
            type: boolean
            default: false
          name: include_deleted
          in: query
        - required: false
          schema:
            title: Is Deployable Environments
            type: boolean
            default: false
          name: is_deployable_environments
          in: query
        - description: The number of items per page in the paginated list.
          required: false
          schema:
            title: Items Per Page
            description: The number of items per page in the paginated list.
            type: integer
            maximum: 500
            minimum: 1
            default: 20
          name: items_per_page
          in: query
        - description: The current page number in the paginated list.
          required: false
          schema:
            title: Page
            description: The current page number in the paginated list.
            type: integer
            minimum: 1
            default: 1
          name: page
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListEnvironmentsPaginationResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - Beta Endpoints
      summary: Add Environment
      operationId: add_environment
      security:
        - HTTPBearer: []
      description: |-
        **Authorization scope:** `environment:list` 
         
         **Creates a new environment entity**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnvironmentInput'
        required: true
      responses:
        '201':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentsFields'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/accounts/{account_id}/environments/{environment_id}:
    get:
      tags:
        - Environments
      summary: Get Environment
      operationId: get_environment
      security:
        - HTTPBearer: []
      description: |-
        **Authorization scope:** `environment:list` 
         
         **Get a specific environment**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
        - required: true
          schema:
            title: Environment Id
            type: string
          name: environment_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentsFields'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - Beta Endpoints
      summary: Patch Environment
      operationId: patch_environment
      security:
        - HTTPBearer: []
      description: |-
        **Authorization scope:** `environment:edit` 
         
         **Updates an existing environment entity**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
        - required: true
          schema:
            title: Environment Id
            type: string
          name: environment_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchEnvironmentInput'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnvironmentsFields'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - Beta Endpoints
      summary: Delete Environment
      operationId: delete_environment
      security:
        - HTTPBearer: []
      description: |-
        **Authorization scope:** `environment:delete` 
         
         **Delete Environment**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
        - required: true
          schema:
            title: Environment Id
            type: string
          name: environment_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/accounts/{account_id}/scim_provisioning:
    get:
      tags:
        - Accounts
      summary: Get Scim Provisioning Status
      operationId: Accounts_getScimProvisioningStatus
      security:
        - HTTPBearer: []
      description: |-
        **Authorization scope:** `account:write` 
         
         **Get SCIM provisioning status**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetScimTokenStatusResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - Accounts
      summary: Add Or Update Scim Provisioning
      operationId: Accounts_addOrUpdateScimProvisioning
      security:
        - HTTPBearer: []
      description: >-
        **Authorization scope:** `account:write` 
         
         **Add or update SCIM provisioning.**
        **This endpoint returns the connection string used to communicate with
        your SCIM app and the authentication token**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOrUpdateScimTokenResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - Accounts
      summary: Delete Scim Provisioning
      operationId: Accounts_deleteScimProvisioning
      security:
        - HTTPBearer: []
      description: |-
        **Authorization scope:** `account:write` 
         
         **Deletes the scim provisioning. This endpoint won't delete any existing resource that were already sync by the SCIM.**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/accounts/{account_id}/environments/{environment_id}/audit_events:
    get:
      tags:
        - Audit Events
      summary: List Audit Events
      operationId: AuditEvents_list
      security:
        - HTTPBearer: []
      description: |-
        **Authorization scope:** `audit:list` 
         
         **List audit events**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
        - required: true
          schema:
            title: Environment Id
            type: string
          name: environment_id
          in: path
        - description: >-
            The start UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
            YYYY-MM-DDTHH:MM:SS.mmmmmm
          required: false
          schema:
            title: Start Time
            description: >-
              The start UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
              YYYY-MM-DDTHH:MM:SS.mmmmmm
            type: string
            format: date-time
          example: '2020-01-01T12:00:00'
          name: start_time
          in: query
        - description: >-
            The end UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
            YYYY-MM-DDTHH:MM:SS.mmmmmm If end_time is supplied without
            start_time the start_time will be the previous day of the end_time
          required: false
          schema:
            title: End Time
            description: >-
              The end UTC date time. Time format YYYY-MM-DDTHH:MM:SS or
              YYYY-MM-DDTHH:MM:SS.mmmmmm If end_time is supplied without
              start_time the start_time will be the previous day of the end_time
            type: string
            format: date-time
          example: '2020-01-01T12:00:00'
          name: end_time
          in: query
        - description: A list of users id's who initiated the event
          required: false
          schema:
            title: User Id
            description: A list of users id's who initiated the event
            items:
              type: string
            type: array
          example: 5eda28ee6b028e1ce7a2b5ed
          name: user_id
          in: query
        - description: A list of entity types
          required: false
          schema:
            description: A list of entity types
            items:
              $ref: '#/components/schemas/AuditEventTypeEnum'
            type: array
            example: connections
            x-examples:
              - connections
              - rivers
              - river_groups
          name: event_type
          in: query
        - description: A list of event types
          required: false
          schema:
            description: A list of event types
            items:
              $ref: '#/components/schemas/AuditEntityTypeEnum'
            type: array
            example: delete
            x-examples:
              - delete
              - create
              - update
          name: entity_type
          in: query
        - description: A unique logical identifier of an entity, usually the cross_id
          required: false
          schema:
            title: Entity Logical Key
            description: A unique logical identifier of an entity, usually the cross_id
            type: string
          example: 5eda28ee6b028e1ce7a2b5ec
          name: entity_logical_key
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditEventsPaginationResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/accounts/{account_id}/environments/{environment_id}/audit_events/{event_id}:
    get:
      tags:
        - Audit Events
      summary: Get Audit Event
      operationId: AuditEvents_getById
      security:
        - HTTPBearer: []
      description: |-
        **Authorization scope:** `audit:list` 
         
         **Get a specific audit event by event_id.**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
        - required: true
          schema:
            title: Environment Id
            type: string
          name: environment_id
          in: path
        - description: The id of the audit event
          required: true
          schema:
            title: Event Id
            description: The id of the audit event
            type: string
          example: eac285a5a9ae4ada9ccd49889a651e16
          name: event_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditEventsResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/accounts/{account_id}/environments/{environment_id}/connections/{connection_cross_id}:
    delete:
      tags:
        - Connections
      summary: Delete Connection
      operationId: delete_connection
      security:
        - HTTPBearer: []
      description: |-
        **Authorization scope:** `connection:delete` 
         
         **This endpoint deletes a connection**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
        - required: true
          schema:
            title: Environment Id
            type: string
          name: environment_id
          in: path
        - required: true
          schema:
            title: Connection Cross Id
            type: string
          name: connection_cross_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteConnectionResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/accounts/{account_id}/teams:
    get:
      tags:
        - Groups
      summary: List Teams
      operationId: list_teams
      security:
        - HTTPBearer: []
      description: |-
        **Authorization scope:** `team:list` 
         
         **Get all user teams**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
        - required: false
          schema:
            title: Page
            type: integer
            default: 1
          name: page
          in: query
        - required: false
          schema:
            title: Items Per Page
            type: integer
            maximum: 200
            default: 20
          name: items_per_page
          in: query
        - description: The internal display name of the team
          required: false
          schema:
            title: Display Name
            description: The internal display name of the team
            type: string
          example: Marketing team
          name: display_name
          in: query
        - description: The team source local (rivery) or external (Active Directory)
          required: false
          schema:
            title: Source
            description: The team source local (rivery) or external (Active Directory)
            type: string
          example: rivery
          name: source
          in: query
        - description: The remote display name of the team
          required: false
          schema:
            title: Remote Display Name
            description: The remote display name of the team
            type: string
          example: Core team
          name: remote_display_name
          in: query
        - description: Sorted the results by attributes
          required: false
          schema:
            $ref: '#/components/schemas/TeamsSortByEnum'
          name: sort_by
          in: query
        - required: false
          schema:
            $ref: '#/components/schemas/SortOrderEnum'
          name: sort_order
          in: query
        - description: List of team ids
          required: false
          schema:
            title: Team Id
            description: List of team ids
            items:
              type: string
            type: array
          example:
            - 65ce173412f5e196b2b9b163
          name: team_id
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTeamsListResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    post:
      tags:
        - Groups
      summary: Create Team
      operationId: create_team
      security:
        - HTTPBearer: []
      description: |-
        **Authorization scope:** `team:write` 
         
         **Create user team**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserTeam'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTeamsModel'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/accounts/{account_id}/teams/{team_id}:
    get:
      tags:
        - Groups
      summary: Get Team
      operationId: get_team
      security:
        - HTTPBearer: []
      description: |-
        **Authorization scope:** `team:list` 
         
         **Get user team by id**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
        - required: true
          schema:
            title: Team Id
            type: string
          name: team_id
          in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTeamsModel'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    put:
      tags:
        - Groups
      summary: Update Team
      operationId: update_team
      security:
        - HTTPBearer: []
      description: |-
        **Authorization scope:** `team:write` 
         
         **Update team**
      parameters:
        - required: true
          schema:
            title: Team Id
            type: string
          name: team_id
          in: path
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserTeamsInput'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTeamsModel'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    delete:
      tags:
        - Groups
      summary: Delete Team
      operationId: delete_team
      security:
        - HTTPBearer: []
      description: |-
        **Authorization scope:** `team:write` 
         
         **Delete user team**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
        - required: true
          schema:
            title: Team Id
            type: string
          name: team_id
          in: path
      responses:
        '204':
          description: Successful Response
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
    patch:
      tags:
        - Groups
      summary: Patch Team
      operationId: patch_team
      security:
        - HTTPBearer: []
      description: |-
        **Authorization scope:** `team:write` 
         
         **Patch team by id**
      parameters:
        - required: true
          schema:
            title: Team Id
            type: string
          name: team_id
          in: path
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchUserTeamsInput'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTeamsModel'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/accounts/{account_id}/environments/{environment_id}/rivers/{river_cross_id}/copy:
    post:
      tags:
        - Beta Endpoints
      summary: Copy River
      operationId: copy_river
      security:
        - HTTPBearer: []
      description: |-
        **Authorization scope:** `river:write` 
         
         **This endpoint creates a copy of a river**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
        - required: true
          schema:
            title: Environment Id
            type: string
          name: environment_id
          in: path
        - required: true
          schema:
            title: River Cross Id
            type: string
          name: river_cross_id
          in: path
      responses:
        '201':
          description: Successful Response
          headers:
            Location:
              description: The location of the created resource
              type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CopyRiverResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/accounts/{account_id}/environments/{environment_id}/rivers/{river_cross_id}/restore:
    put:
      tags:
        - Beta Endpoints
      summary: Restore River Version
      operationId: restore_river
      security:
        - HTTPBearer: []
      description: |-
        **Authorization scope:** `river:write` 
         
         **This endpoint restores a river to a specific version**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
        - required: true
          schema:
            title: Environment Id
            type: string
          name: environment_id
          in: path
        - required: true
          schema:
            title: River Cross Id
            type: string
          name: river_cross_id
          in: path
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RestoreRiverVersionInput'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiverModel'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/accounts/{account_id}/environments/{environment_id}/rivers/{river_cross_id}/enable_cdc:
    post:
      tags:
        - Beta Endpoints
      summary: Enable Cdc
      operationId: enable_cdc
      security:
        - HTTPBearer: []
      description: |-
        **Authorization scope:** `river:write` 
         
         **This endpoint enables the CDC extraction for a CDC river.**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
        - required: true
          schema:
            title: Environment Id
            type: string
          name: environment_id
          in: path
        - required: true
          schema:
            title: River Cross Id
            type: string
          name: river_cross_id
          in: path
      responses:
        '202':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/accounts/{account_id}/environments/{environment_id}/rivers/{river_cross_id}/disable_cdc:
    post:
      tags:
        - Beta Endpoints
      summary: Disable Cdc
      operationId: disable_cdc
      security:
        - HTTPBearer: []
      description: |-
        **Authorization scope:** `river:write` 
         
         **This endpoint disables the CDC extraction for a CDC river.**
      parameters:
        - required: true
          schema:
            title: Account Id
            type: string
          name: account_id
          in: path
        - required: true
          schema:
            title: Environment Id
            type: string
          name: environment_id
          in: path
        - required: true
          schema:
            title: River Cross Id
            type: string
          name: river_cross_id
          in: path
      responses:
        '202':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OperationResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/predefined_metadata/columns:
    get:
      tags:
        - Beta Endpoints
      summary: Get Predefined Columns
      operationId: BetaEndpoints_getPredefinedColumns
      security:
        - HTTPBearer: []
      description: >-
        This endpoint gets all predefined columns per datasource id and
        report_id.
      parameters:
        - description: The datasource of the columns.
          required: true
          schema:
            $ref: '#/components/schemas/SourceTypeEnum'
          example: shopify
          name: datasource_id
          in: query
        - description: The report id
          required: true
          schema:
            title: Report
            description: The report id
            type: string
          example: orders
          name: report
          in: query
        - description: Name of the column to filter
          required: false
          schema:
            title: Column Name
            description: Name of the column to filter
            type: string
          example: id
          name: column_name
          in: query
        - description: The number of items per page in the paginated list.
          required: false
          schema:
            title: Items Per Page
            description: The number of items per page in the paginated list.
            type: integer
            maximum: 500
            minimum: 1
            default: 20
          name: items_per_page
          in: query
        - description: The current page number in the paginated list.
          required: false
          schema:
            title: Page
            description: The current page number in the paginated list.
            type: integer
            minimum: 1
            default: 1
          name: page
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PredefinedColumnsPaginatedResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/predefined_metadata/tables:
    get:
      tags:
        - Beta Endpoints
      summary: Get Predefined Tables
      operationId: BetaEndpoints_listPredefinedTables
      security:
        - HTTPBearer: []
      description: This endpoint gets all predefined tables per datasource id.
      parameters:
        - description: The datasource of the columns.
          required: true
          schema:
            $ref: '#/components/schemas/SourceTypeEnum'
          example: shopify
          name: datasource_id
          in: query
        - description: Name of the report to filter
          required: false
          schema:
            title: Report Name
            description: Name of the report to filter
            type: string
          example: orders
          name: report_name
          in: query
        - description: The number of items per page in the paginated list.
          required: false
          schema:
            title: Items Per Page
            description: The number of items per page in the paginated list.
            type: integer
            maximum: 500
            minimum: 1
            default: 20
          name: items_per_page
          in: query
        - description: The current page number in the paginated list.
          required: false
          schema:
            title: Page
            description: The current page number in the paginated list.
            type: integer
            minimum: 1
            default: 1
          name: page
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PredefinedTablesModelPaginatedResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/predefined_metadata/metadata:
    get:
      tags:
        - Beta Endpoints
      summary: Get Predefined Metadata
      operationId: BetaEndpoints_getPredefinedMetadata
      security:
        - HTTPBearer: []
      description: This endpoint gets all predefined metadata datasource id and report id.
      parameters:
        - description: The datasource of the columns.
          required: true
          schema:
            $ref: '#/components/schemas/SourceTypeEnum'
          example: shopify
          name: datasource_id
          in: query
        - description: The report id
          required: true
          schema:
            title: Report Id
            description: The report id
            type: string
          example: predefined_orders
          name: report_id
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PredefinedMetadataModelResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
  /v1/river_source/metadata:
    get:
      tags:
        - Beta Endpoints
      summary: Get Source Metadata
      operationId: BetaEndpoints_getSourceMetadata
      security:
        - HTTPBearer: []
      description: This endpoint gets all source metadata.
      parameters:
        - description: The source name
          required: true
          schema:
            $ref: '#/components/schemas/SourceTypeEnum'
          example: shopify
          name: source_name
          in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourcedMetadataModelResponse'
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
components:
  schemas:
    ActionProperties:
      title: ActionProperties
      description: Action properties which define the action river properties
      properties:
        properties_type:
          title: Properties Type
          type: string
          enum:
            - actions
          default: actions
      type: object
    ActivitiesResponse:
      title: ActivitiesResponse
      description: General activities response
      properties:
        next_page:
          title: Next Page
          description: The next page URL
          type: string
          nullable: true
        previous_page:
          title: Previous Page
          description: The previous page URL
          type: string
          nullable: true
        page:
          title: Page
          description: The page number
          type: integer
          default: 1
        current_page_size:
          title: Current Page Size
          description: The current page size
          type: integer
        total_items:
          title: Total Items
          description: The total number of entities fetched
          type: integer
          default: 0
        account_id:
          title: Account Id
          description: The account id
          type: string
        environment_id:
          title: Environment Id
          description: The environment id
          type: string
        items:
          title: Items
          items:
            $ref: '#/components/schemas/Activity'
          type: array
        cache_context_id:
          title: Cache Context Id
          type: string
          nullable: true
      type: object
      required:
        - current_page_size
        - account_id
        - environment_id
        - items
        - cache_context_id
    Activity:
      title: Activity
      description: Activity properties to return.
      properties:
        account_id:
          title: Account Id
          type: string
        environment_id:
          title: Environment Id
          type: string
        cross_id:
          title: Cross Id
          type: string
        river_id:
          title: River Id
          type: string
        master_river_id:
          title: Master River Id
          type: string
        river_name:
          title: River Name
          type: string
        is_sub_river:
          title: Is Sub River
          type: boolean
        is_master_river:
          title: Is Master River
          type: boolean
        is_multi:
          title: Is Multi
          type: boolean
        is_deleted:
          title: Is Deleted
          type: boolean
        group_id:
          title: Group Id
          type: string
        is_scheduled:
          title: Is Scheduled
          type: boolean
        total_files:
          title: Total Files
          type: integer
        units:
          title: Units
          description: Total RPU (units)
          type: number
          example: 2.1
        rpu:
          title: Rpu
          description: Total RPU
          type: number
          example: 2.1
        total_size:
          title: Total Size
          type: integer
        last_run:
          title: Last Run
          type: integer
        pending:
          title: Pending
          type: integer
        failed:
          title: Failed
          type: integer
        running:
          title: Running
          type: integer
        succeeded:
          title: Succeeded
          type: integer
        canceled:
          title: Canceled
          type: integer
        datasource_id:
          title: Datasource Id
          type: string
      type: object
      required:
        - account_id
        - environment_id
        - cross_id
        - river_id
        - master_river_id
        - river_name
        - is_sub_river
        - is_master_river
        - is_multi
        - is_deleted
        - is_scheduled
        - total_files
        - units
        - rpu
        - total_size
        - last_run
        - pending
        - failed
        - running
        - succeeded
        - canceled
        - datasource_id
    ActivityLogicVariableResponse:
      title: ActivityLogicVariableResponse
      description: The activities logic variables response
      properties:
        items:
          title: Items
          items:
            $ref: '#/components/schemas/RiverVariablesFields'
          type: array
      type: object
      required:
        - items
    ActivitySortByEnum:
      title: ActivitySortByEnum
      description: Activities sort properties in the UI.
      type: string
      enum:
        - river_name
        - last_run
        - units
    ActivityStatisticResponse:
      title: ActivityStatisticResponse
      description: Activity statistics response
      properties:
        account_id:
          title: Account Id
          type: string
        environment_id:
          title: Environment Id
          type: string
        total_units:
          title: Total Units
          description: Total RPU (units)
          type: number
          example: 2.1
        total_rpu:
          title: Total Rpu
          description: Total RPU
          type: number
          example: 2.1
        running:
          title: Running
          type: integer
        canceled:
          title: Canceled
          type: integer
        pending:
          title: Pending
          type: integer
        failed:
          title: Failed
          type: integer
        succeeded:
          title: Succeeded
          type: integer
        skipped:
          title: Skipped
          type: integer
      type: object
      required:
        - account_id
        - environment_id
        - total_units
        - total_rpu
        - running
        - canceled
        - pending
        - failed
        - succeeded
        - skipped
    ActivityStatusEnum:
      title: ActivityStatusEnum
      description: The external status of a run (being used in the api)
      type: string
      enum:
        - pending
        - canceled
        - succeeded
        - failed
        - running
        - skipped
    AthenaAdditionalTargetSettings:
      title: AthenaAdditionalTargetSettings
      description: Athena specific target settings
      properties:
        is_ordered_merge_key:
          title: Is Ordered Merge Key
          description: >-
            If the table got any and should consider filter out duplicates data
            between source filemerge process(by order).
          type: boolean
          default: false
          example: true
        order_expression:
          title: Order Expression
          description: >-
            The order expression of the river entity,to filter duplications from
            the source data by the provided order expression (for `merge`
            loading method).
          type: string
          example: id desc,createDate asc
          nullable: true
        target_loading:
          description: >-
            The target loading of the table entity,if not specified the default
            loading mode of the riverwill be used.
          allOf:
            - $ref: '#/components/schemas/LoadingMode'
          example: merge
          nullable: true
        target_type:
          title: Target Type
          description: Internal field, populated automatically
          type: string
          enum:
            - athena
          default: athena
          nullable: true
        replace_invalid_utf_characters:
          title: Replace Invalid Utf Characters
          description: Enable replacing invalid UTF characters in the target
          type: boolean
          default: false
        truncate_columns:
          title: Truncate Columns
          description: Whether or not to truncate the columns in the target
          type: boolean
          default: false
      type: object
    AthenaModifiedColumn:
      title: AthenaModifiedColumn
      description: Athena specific columns settings
      properties:
        is_selected:
          title: Is Selected
          description: If the column is selected and should be modified.
          type: boolean
          example: true
        name:
          title: Name
          description: The name of the column.
          type: string
          example: column_name
        type:
          title: Type
          description: The type of the column.
          type: string
          example: string
          nullable: true
        alias:
          title: Alias
          description: The alias of the column in the target table.
          type: string
          example: column_alias
          nullable: true
        expression:
          title: Expression
          description: >-
            This tells us the column is an expression or not so we know if it
            suppose to exist in the source / target or is it auto generated.
          type: string
          example: select 'test'
          nullable: true
        is_key:
          title: Is Key
          description: If the column is a key.
          type: boolean
          example: true
          nullable: true
        sort_order:
          title: Sort Order
          description: >-
            The sort order of the column (number), sort order are used in the
            merge process to determine the order of the merge keys.
          type: integer
          example: 1
          nullable: true
        is_sort_key:
          title: Is Sort Key
          description: If the column is a sort column.
          type: boolean
          example: true
          nullable: true
        calculated_column_mode:
          description: >-
            The mode of the calculated column.Help to identify if the column is
            source expression or target expression,required if the column is an
            expression.
          allOf:
            - $ref: '#/components/schemas/CalculatedColumnModeEnum'
          example: source
          nullable: true
        order:
          title: Order
          description: >-
            The order of the column in the expression,required if the column is
            an expression.
          type: integer
          example: 1
          nullable: true
        target_type:
          title: Target Type
          description: Internal field, populated automatically
          type: string
          enum:
            - athena
          default: athena
          nullable: true
      type: object
      required:
        - is_selected
        - name
    AthenaTargetSettings:
      title: AthenaTargetSettings
      description: Athena target settings properties to return.
      properties:
        name:
          title: Name
          description: The name of the target
          type: string
          enum:
            - athena
          default: athena
        connection_id:
          title: Connection Id
          description: The connection ID of this target
          type: string
          example: 5f4d3b3d9f9c8b0001f6b0e6
          nullable: true
        connection_name:
          title: Connection Name
          description: The connection name of this target
          type: string
          example: Connection 1
          nullable: true
        table_name:
          title: Table Name
          description: >-
            The table name of this target (only relevant for non multi table
            source to target rivers)
          type: string
          default: ''
          example: Table 1
          nullable: true
        target_prefix:
          title: Target Prefix
          description: >-
            The table prefix of this target (only relevant for multi table
            source to target rivers)
          type: string
          default: ''
          example: start_at_
          nullable: true
        is_ordered_merge_key:
          title: Is Ordered Merge Key
          description: >-
            If the table got any and should consider filter out duplicates data
            between source filemerge process(by order).
          type: boolean
          default: false
          example: true
        order_expression:
          title: Order Expression
          description: The order expression of the river entity.
          type: string
          example: id desc,createDate asc
          nullable: true
        loading_method:
          $ref: '#/components/schemas/LoadingMode'
        merge_method:
          description: >-
            The merge method to preform,only relevant when the loading mode is
            Merge,if not provided the default merge method will be used.(merge)
          allOf:
            - $ref: '#/components/schemas/MergeMethod'
          example: merge
          nullable: true
        file_zone_settings:
          title: File Zone Settings
          description: The file zone settings of this target
          allOf:
            - $ref: '#/components/schemas/RiverFileZoneSettings'
          nullable: true
        file_path_destination:
          title: File Path Destination
          description: The file name and path
          type: string
          example: path/to/file
        bucket_name:
          title: Bucket Name
          description: The bucket name
          type: string
          example: bucket
        additional_settings:
          title: Additional Settings
          description: The additional settings of this target
          type: object
          default: {}
          example:
            key: value
          nullable: true
      type: object
      required:
        - loading_method
      x-konfig-properties:
        loading_method:
          description: The loading method of this target
          example: merge
    AuditEntityTypeEnum:
      title: AuditEntityTypeEnum
      description: The audit event entity types
      type: string
      enum:
        - accounts
        - connections
        - rivers
        - river_groups
        - users
        - teams
    AuditEventTypeEnum:
      title: AuditEventTypeEnum
      description: The audit events, events type
      type: string
      enum:
        - create
        - delete
        - update
    AuditEventsPaginationResponse:
      title: AuditEventsPaginationResponse
      description: Audit events pagination response
      properties:
        next_page:
          title: Next Page
          description: The next page URL
          type: string
          nullable: true
        previous_page:
          title: Previous Page
          description: The previous page URL
          type: string
          nullable: true
        items:
          title: Items
          items:
            $ref: '#/components/schemas/AuditEventsResponse'
          type: array
      type: object
      required:
        - items
    AuditEventsResponse:
      title: AuditEventsResponse
      description: Audit events response
      properties:
        event_id:
          title: Event Id
          description: The id of the audit event
          type: string
        event_initiator:
          title: Event Initiator
          description: Where the event was initiated
          type: string
          example: UI
        event_datetime:
          title: Event Datetime
          description: The event date time in UTC timezone
          type: string
          example: '2022-08-02T13:38:44.054000'
        event_type:
          $ref: '#/components/schemas/AuditEventTypeEnum'
        event_result_status:
          title: Event Result Status
          description: The status of the API request of the event
          type: integer
          example: 200
        event_name:
          title: Event Name
          description: >-
            The name of the event in the following
            format-event_type:entity_type:additional_info
          type: string
          example: update:rivers:without_version
        entity_type:
          $ref: '#/components/schemas/AuditEntityTypeEnum'
        entity_logical_key:
          title: Entity Logical Key
          type: string
          default: A unique logical identifier of an entity, usually the cross_id
          example: 5eda28ee6b028e1ce7a2b5ec
        account_id:
          title: Account Id
          description: The account id the event originated for
          type: string
          example: 5ebec4ca6b028e2da4191dde
        environment_id:
          title: Environment Id
          description: The environment id the event originated for
          type: string
          example: 5ebec4ca6b028e2da4191de1
        user_id:
          title: User Id
          description: The user id the event originated for
          type: string
          example: 60d08931f5682c0d9fa24890
        user_name:
          title: User Name
          description: The name of the user that originated the event
          type: string
          example: Rivi Ee
        entity_name:
          title: Entity Name
          description: >-
            The name of the event entity, this could be the name of the river,
            connection etc.
          type: string
          example: My First River
        entity_subtype:
          title: Entity Subtype
          description: >-
            The even subtype, this could be a river classification like logic or
            s2t rivers
          type: string
          example: src_to_trgt
          x-examples:
            - src_to_trgt
            - logic
        additional_info:
          title: Additional Info
          type: string
          default: Additional information saved for the event
          example: '{"version_id": "637582d3c32287000fc1d69f"}'
      type: object
      required:
        - event_id
        - event_initiator
        - event_datetime
        - event_type
        - event_result_status
        - event_name
        - entity_type
        - account_id
        - environment_id
        - user_id
      x-konfig-properties:
        event_type:
          description: The type of the event
          example: create
        entity_type:
          description: The type of entity that was recorded
          example: rivers
    AzureSqlAdditionalTargetSettings:
      title: AzureSqlAdditionalTargetSettings
      description: Azure SQL specific target settings
      properties:
        is_ordered_merge_key:
          title: Is Ordered Merge Key
          description: >-
            If the table got any and should consider filter out duplicates data
            between source filemerge process(by order).
          type: boolean
          default: false
          example: true
        order_expression:
          title: Order Expression
          description: >-
            The order expression of the river entity,to filter duplications from
            the source data by the provided order expression (for `merge`
            loading method).
          type: string
          example: id desc,createDate asc
          nullable: true
        target_loading:
          description: >-
            The target loading of the table entity,if not specified the default
            loading mode of the riverwill be used.
          allOf:
            - $ref: '#/components/schemas/LoadingMode'
          example: merge
          nullable: true
        target_type:
          title: Target Type
          description: Internal field, populated automatically
          type: string
          enum:
            - azure_sql
          default: azure_sql
          nullable: true
      type: object
    AzureSqlModifiedColumn:
      title: AzureSqlModifiedColumn
      description: AzureSql specific columns settings
      properties:
        is_selected:
          title: Is Selected
          description: If the column is selected and should be modified.
          type: boolean
          example: true
        name:
          title: Name
          description: The name of the column.
          type: string
          example: column_name
        type:
          title: Type
          description: The type of the column.
          type: string
          example: string
          nullable: true
        alias:
          title: Alias
          description: The alias of the column in the target table.
          type: string
          example: column_alias
          nullable: true
        expression:
          title: Expression
          description: >-
            This tells us the column is an expression or not so we know if it
            suppose to exist in the source / target or is it auto generated.
          type: string
          example: select 'test'
          nullable: true
        is_key:
          title: Is Key
          description: If the column is a key.
          type: boolean
          example: true
          nullable: true
        sort_order:
          title: Sort Order
          description: >-
            The sort order of the column (number), sort order are used in the
            merge process to determine the order of the merge keys.
          type: integer
          example: 1
          nullable: true
        is_sort_key:
          title: Is Sort Key
          description: If the column is a sort column.
          type: boolean
          example: true
          nullable: true
        calculated_column_mode:
          description: >-
            The mode of the calculated column.Help to identify if the column is
            source expression or target expression,required if the column is an
            expression.
          allOf:
            - $ref: '#/components/schemas/CalculatedColumnModeEnum'
          example: source
          nullable: true
        order:
          title: Order
          description: >-
            The order of the column in the expression,required if the column is
            an expression.
          type: integer
          example: 1
          nullable: true
        target_type:
          title: Target Type
          description: Internal field, populated automatically
          type: string
          enum:
            - azure_sql
          default: azure_sql
          nullable: true
      type: object
      required:
        - is_selected
        - name
    AzureSqlTargetSettings:
      title: AzureSqlTargetSettings
      description: Azure SQL target settings properties to return.
      properties:
        name:
          title: Name
          description: The name of the target
          type: string
          enum:
            - azure_sql
          default: azure_sql
        connection_id:
          title: Connection Id
          description: The connection ID of this target
          type: string
          example: 5f4d3b3d9f9c8b0001f6b0e6
          nullable: true
        connection_name:
          title: Connection Name
          description: The connection name of this target
          type: string
          example: Connection 1
          nullable: true
        table_name:
          title: Table Name
          description: >-
            The table name of this target (only relevant for non multi table
            source to target rivers)
          type: string
          default: ''
          example: Table 1
          nullable: true
        target_prefix:
          title: Target Prefix
          description: >-
            The table prefix of this target (only relevant for multi table
            source to target rivers)
          type: string
          default: ''
          example: start_at_
          nullable: true
        is_ordered_merge_key:
          title: Is Ordered Merge Key
          description: >-
            If the table got any and should consider filter out duplicates data
            between source filemerge process(by order).
          type: boolean
          default: false
          example: true
        order_expression:
          title: Order Expression
          description: The order expression of the river entity.
          type: string
          example: id desc,createDate asc
          nullable: true
        loading_method:
          $ref: '#/components/schemas/LoadingMode'
        merge_method:
          description: >-
            The merge method to preform,only relevant when the loading mode is
            Merge,if not provided the default merge method will be used.(merge)
          allOf:
            - $ref: '#/components/schemas/MergeMethod'
          example: merge
          nullable: true
        file_zone_settings:
          title: File Zone Settings
          description: The file zone settings of this target
          allOf:
            - $ref: '#/components/schemas/RiverFileZoneSettings'
          nullable: true
        file_path_destination:
          title: File Path Destination
          description: The file name and path
          type: string
          example: path/to/file
        bucket_name:
          title: Bucket Name
          description: The bucket name
          type: string
          example: bucket
        additional_settings:
          title: Additional Settings
          description: The additional settings of this target
          type: object
          default: {}
          example:
            key: value
          nullable: true
      type: object
      required:
        - loading_method
      x-konfig-properties:
        loading_method:
          description: The loading method of this target
          example: merge
    AzureSynapseAnalyticsModifiedColumn:
      title: AzureSynapseAnalyticsModifiedColumn
      description: AzureSynapseAnalytics specific columns settings
      properties:
        is_selected:
          title: Is Selected
          description: If the column is selected and should be modified.
          type: boolean
          example: true
        name:
          title: Name
          description: The name of the column.
          type: string
          example: column_name
        type:
          title: Type
          description: The type of the column.
          type: string
          example: string
          nullable: true
        alias:
          title: Alias
          description: The alias of the column in the target table.
          type: string
          example: column_alias
          nullable: true
        expression:
          title: Expression
          description: >-
            This tells us the column is an expression or not so we know if it
            suppose to exist in the source / target or is it auto generated.
          type: string
          example: select 'test'
          nullable: true
        is_key:
          title: Is Key
          description: If the column is a key.
          type: boolean
          example: true
          nullable: true
        sort_order:
          title: Sort Order
          description: >-
            The sort order of the column (number), sort order are used in the
            merge process to determine the order of the merge keys.
          type: integer
          example: 1
          nullable: true
        is_sort_key:
          title: Is Sort Key
          description: If the column is a sort column.
          type: boolean
          example: true
          nullable: true
        calculated_column_mode:
          description: >-
            The mode of the calculated column.Help to identify if the column is
            source expression or target expression,required if the column is an
            expression.
          allOf:
            - $ref: '#/components/schemas/CalculatedColumnModeEnum'
          example: source
          nullable: true
        order:
          title: Order
          description: >-
            The order of the column in the expression,required if the column is
            an expression.
          type: integer
          example: 1
          nullable: true
        target_type:
          title: Target Type
          description: Internal field, populated automatically
          type: string
          enum:
            - azure_synapse_analytics
          default: azure_synapse_analytics
          nullable: true
      type: object
      required:
        - is_selected
        - name
    AzureSynapseAnalyticsTargetSettings:
      title: AzureSynapseAnalyticsTargetSettings
      description: Azure Synapse Analytics target settings properties to return.
      properties:
        name:
          title: Name
          description: The name of the target
          type: string
          enum:
            - azure_synapse_analytics
          default: azure_synapse_analytics
        connection_id:
          title: Connection Id
          description: The connection ID of this target
          type: string
          example: 5f4d3b3d9f9c8b0001f6b0e6
          nullable: true
        connection_name:
          title: Connection Name
          description: The connection name of this target
          type: string
          example: Connection 1
          nullable: true
        table_name:
          title: Table Name
          description: >-
            The table name of this target (only relevant for non multi table
            source to target rivers)
          type: string
          default: ''
          example: Table 1
          nullable: true
        target_prefix:
          title: Target Prefix
          description: >-
            The table prefix of this target (only relevant for multi table
            source to target rivers)
          type: string
          default: ''
          example: start_at_
          nullable: true
        is_ordered_merge_key:
          title: Is Ordered Merge Key
          description: >-
            If the table got any and should consider filter out duplicates data
            between source filemerge process(by order).
          type: boolean
          default: false
          example: true
        order_expression:
          title: Order Expression
          description: The order expression of the river entity.
          type: string
          example: id desc,createDate asc
          nullable: true
        loading_method:
          $ref: '#/components/schemas/LoadingMode'
        merge_method:
          description: >-
            The merge method to preform,only relevant when the loading mode is
            Merge,if not provided the default merge method will be used.(merge)
          allOf:
            - $ref: '#/components/schemas/MergeMethod'
          example: merge
          nullable: true
        file_zone_settings:
          title: File Zone Settings
          description: The file zone settings of this target
          allOf:
            - $ref: '#/components/schemas/RiverFileZoneSettings'
          nullable: true
        file_path_destination:
          title: File Path Destination
          description: The file name and path
          type: string
          example: path/to/file
        bucket_name:
          title: Bucket Name
          description: The bucket name
          type: string
          example: bucket
        additional_settings:
          title: Additional Settings
          description: The additional settings of this target
          type: object
          default: {}
          example:
            key: value
          nullable: true
      type: object
      required:
        - loading_method
      x-konfig-properties:
        loading_method:
          description: The loading method of this target
          example: merge
    BigQueryAdditionalTargetSettings:
      title: BigQueryAdditionalTargetSettings
      description: BigQuery specific target settings
      properties:
        is_ordered_merge_key:
          title: Is Ordered Merge Key
          description: >-
            If the table got any and should consider filter out duplicates data
            between source filemerge process(by order).
          type: boolean
          default: false
          example: true
        order_expression:
          title: Order Expression
          description: >-
            The order expression of the river entity,to filter duplications from
            the source data by the provided order expression (for `merge`
            loading method).
          type: string
          example: id desc,createDate asc
          nullable: true
        target_loading:
          description: >-
            The target loading of the table entity,if not specified the default
            loading mode of the riverwill be used.
          allOf:
            - $ref: '#/components/schemas/LoadingMode'
          example: merge
          nullable: true
        target_type:
          title: Target Type
          description: Internal field, populated automatically
          type: string
          enum:
            - bigquery
          default: bigquery
          nullable: true
        use_standard_sql:
          title: Use Standard Sql
          description: >-
            Indication if to use standard SQL, default is true, if false will
            use legacy SQL.
          type: boolean
          example: true
          nullable: true
        split_tables:
          title: Split Tables
          description: Split tables at target.
          type: string
          default: no_split
          example: no_split
          nullable: true
        split_interval:
          title: Split Interval
          description: The interval by which to split the tables if split table is on.
          type: string
          example: daily
          nullable: true
        split_data:
          title: Split Data
          description: >-
            The expression by which to split the tablesif split tables by
            expression is chosen.
          type: string
          example: a>3
          nullable: true
        partition_type:
          title: Partition Type
          description: The type of partition to partition that table by.
          type: string
          example: timestamp
          nullable: true
        partition_granularity:
          title: Partition Granularity
          description: The partition granularity to split the table by.
          type: string
          example: day
          nullable: true
      type: object
    BigQueryModifiedColumn:
      title: BigQueryModifiedColumn
      description: Big Query specific columns settings
      properties:
        is_selected:
          title: Is Selected
          description: If the column is selected and should be modified.
          type: boolean
          example: true
        name:
          title: Name
          description: The name of the column.
          type: string
          example: column_name
        type:
          title: Type
          description: The type of the column.
          type: string
          example: string
          nullable: true
        alias:
          title: Alias
          description: The alias of the column in the target table.
          type: string
          example: column_alias
          nullable: true
        expression:
          title: Expression
          description: >-
            This tells us the column is an expression or not so we know if it
            suppose to exist in the source / target or is it auto generated.
          type: string
          example: select 'test'
          nullable: true
        is_key:
          title: Is Key
          description: If the column is a key.
          type: boolean
          example: true
          nullable: true
        sort_order:
          title: Sort Order
          description: >-
            The sort order of the column (number), sort order are used in the
            merge process to determine the order of the merge keys.
          type: integer
          example: 1
          nullable: true
        is_sort_key:
          title: Is Sort Key
          description: If the column is a sort column.
          type: boolean
          example: true
          nullable: true
        calculated_column_mode:
          description: >-
            The mode of the calculated column.Help to identify if the column is
            source expression or target expression,required if the column is an
            expression.
          allOf:
            - $ref: '#/components/schemas/CalculatedColumnModeEnum'
          example: source
          nullable: true
        order:
          title: Order
          description: >-
            The order of the column in the expression,required if the column is
            an expression.
          type: integer
          example: 1
          nullable: true
        is_partition:
          title: Is Partition
          description: Indication if the column is a partition column
          type: boolean
          default: false
          nullable: true
        target_type:
          title: Target Type
          description: Internal field, populated automatically
          type: string
          enum:
            - bigquery
          default: bigquery
          nullable: true
      type: object
      required:
        - is_selected
        - name
    BigQueryTargetSettings:
      title: BigQueryTargetSettings
      description: BigQuery target settings properties to return.
      properties:
        name:
          title: Name
          description: The name of the target
          type: string
          enum:
            - bigquery
          default: bigquery
        connection_id:
          title: Connection Id
          description: The connection ID of this target
          type: string
          example: 5f4d3b3d9f9c8b0001f6b0e6
          nullable: true
        connection_name:
          title: Connection Name
          description: The connection name of this target
          type: string
          example: Connection 1
          nullable: true
        table_name:
          title: Table Name
          description: >-
            The table name of this target (only relevant for non multi table
            source to target rivers)
          type: string
          default: ''
          example: Table 1
          nullable: true
        target_prefix:
          title: Target Prefix
          description: >-
            The table prefix of this target (only relevant for multi table
            source to target rivers)
          type: string
          default: ''
          example: start_at_
          nullable: true
        is_ordered_merge_key:
          title: Is Ordered Merge Key
          description: >-
            If the table got any and should consider filter out duplicates data
            between source filemerge process(by order).
          type: boolean
          default: false
          example: true
        order_expression:
          title: Order Expression
          description: The order expression of the river entity.
          type: string
          example: id desc,createDate asc
          nullable: true
        loading_method:
          $ref: '#/components/schemas/LoadingMode'
        merge_method:
          description: >-
            The merge method to preform,only relevant when the loading mode is
            Merge,if not provided the default merge method will be used.(merge)
          allOf:
            - $ref: '#/components/schemas/MergeMethod'
          example: merge
          nullable: true
        file_zone_settings:
          title: File Zone Settings
          description: The file zone settings of this target
          allOf:
            - $ref: '#/components/schemas/RiverFileZoneSettings'
          nullable: true
        file_path_destination:
          title: File Path Destination
          description: The file name and path
          type: string
          example: path/to/file
        bucket_name:
          title: Bucket Name
          description: The bucket name
          type: string
          example: bucket
        additional_settings:
          title: Additional Settings
          description: The additional settings of this target
          type: object
          default: {}
          example:
            key: value
          nullable: true
        dataset_id:
          title: Dataset Id
          description: The dataset ID of this target
          type: string
          example: dataset_1
          nullable: true
      type: object
      required:
        - loading_method
      x-konfig-properties:
        loading_method:
          description: The loading method of this target
          example: merge
    BlobStorageSettings:
      title: BlobStorageSettings
      description: Azure Blob Storage target settings properties to return.
      properties:
        name:
          title: Name
          description: The name of the target
          type: string
          enum:
            - blob_storage
          default: blob_storage
        connection_id:
          title: Connection Id
          description: The connection ID of this target
          type: string
          example: 5f4d3b3d9f9c8b0001f6b0e6
          nullable: true
        connection_name:
          title: Connection Name
          description: The connection name of this target
          type: string
          example: Connection 1
          nullable: true
        path:
          title: Path
          description: The path of the file zone entity.
          type: string
          example: my_path
        bucket_name:
          title: Bucket Name
          description: The bucket name of the file zone entity.
          type: string
          example: my_bucket
        partitioned_kind:
          $ref: '#/components/schemas/PartitionedKindEnum'
      type: object
      required:
        - path
        - bucket_name
        - partitioned_kind
      x-konfig-properties:
        partitioned_kind:
          description: The partitioned kind of the file zone entity.
          example: by_day
    CalculatedColumnModeEnum:
      title: CalculatedColumnModeEnum
      description: >-
        The calculated column mode

        Calculated column mode is used to determine if the calculated column is
        a new column or an override of an existing

        It can be used either on the source or the target
      type: string
      enum:
        - source
        - target
    CancelRiverRunBody:
      title: CancelRiverRunBody
      description: Cancel River Run body
      properties:
        run_id:
          title: Run Id
          description: The run_id to cancel.
          type: string
        run_group_id:
          title: Run Group Id
          description: >-
            The run_group_id to cancel. Use this field when you want to cancel
            multiple tables or sub rivers
          type: string
      type: object
    CdcConfig:
      title: CdcConfig
      description: The cdc config request class.
      properties:
        config:
          title: Config
          oneOf:
            - $ref: '#/components/schemas/CdcMysqlConfig'
            - $ref: '#/components/schemas/CdcPostgresConfig'
            - $ref: '#/components/schemas/CdcSqlServerConfig'
            - $ref: '#/components/schemas/CdcMongodbConfig'
            - $ref: '#/components/schemas/CdcOracleConfig'
          discriminator:
            propertyName: datasource_type
            mapping:
              mysql: '#/components/schemas/CdcMysqlConfig'
              postgres: '#/components/schemas/CdcPostgresConfig'
              mssql: '#/components/schemas/CdcSqlServerConfig'
              mongodb: '#/components/schemas/CdcMongodbConfig'
              oracle: '#/components/schemas/CdcOracleConfig'
      type: object
      required:
        - config
    CdcMongodbConfig:
      title: CdcMongodbConfig
      description: |-
        Cdc Mongodb Config:
        * resume token offset of the Mongodb database CDC
      properties:
        last_updated:
          title: Last Updated
          type: string
          default: '2024-04-16T14:43:07.443036Z'
        datasource_type:
          title: Datasource Type
          type: string
          enum:
            - mongodb
          default: mongodb
        resume_token:
          title: Resume Token
          description: The resume token position offset
          type: string
      type: object
      required:
        - resume_token
    CdcMysqlConfig:
      title: CdcMysqlConfig
      description: |-
        Cdc mysql config:
        * binlog offset of the MYSQL database CDC
      properties:
        last_updated:
          title: Last Updated
          type: string
          default: '2024-04-16T14:43:07.443036Z'
        datasource_type:
          title: Datasource Type
          type: string
          enum:
            - mysql
          default: mysql
        binlog_file:
          title: Binlog File
          description: The bin log file
          type: string
          example: mysql-bin-changelog.000931
        binlog_position:
          title: Binlog Position
          description: The binlog position
          type: string
          example: '515820321'
        gtid:
          title: Gtid
          description: The gtid position offset
          type: string
          example: >-
            51d431b9-585e-11ed-9222-022d1416c792:1-34,7e0646d8-b3e4-11eb-a15e-0a47d4c912dc:1-21343,8937b67f-3ab2-11ea-9bc9-0ad74248f0fe:1-5182243242,c23585e8-579a-11ed-83e3-0a47d4c912dc:1-12
      type: object
    CdcOracleConfig:
      title: CdcOracleConfig
      description: |-
        Cdc Oracle config:
        * system change number of the Oracle database CDC
      properties:
        last_updated:
          title: Last Updated
          type: string
          default: '2024-04-16T14:43:07.443036Z'
        datasource_type:
          title: Datasource Type
          type: string
          enum:
            - oracle
          default: oracle
        scn_offset:
          title: Scn Offset
          description: The system change number offset
          type: integer
      type: object
      required:
        - scn_offset
    CdcPostgresConfig:
      title: CdcPostgresConfig
      description: |-
        Cdc postgres config:
        * lsn offset of the postgres database CDC
      properties:
        last_updated:
          title: Last Updated
          type: string
          default: '2024-04-16T14:43:07.443036Z'
        datasource_type:
          title: Datasource Type
          type: string
          enum:
            - postgres
          default: postgres
        lsn_offset:
          title: Lsn Offset
          description: The lsn position offset
          type: integer
          example: 518
      type: object
      required:
        - lsn_offset
    CdcSqlServerConfig:
      title: CdcSqlServerConfig
      description: |-
        Cdc sql server config:
        * lsn offset of the sql server database CDC
      properties:
        last_updated:
          title: Last Updated
          type: string
          default: '2024-04-16T14:43:07.443036Z'
        datasource_type:
          title: Datasource Type
          type: string
          enum:
            - mssql
          default: mssql
        lsn_offset_sql_server:
          title: Lsn Offset Sql Server
          description: The lsn offset sql server position offset
          type: string
          example: '0x0000004B000009350003'
      type: object
      required:
        - lsn_offset_sql_server
    ColumnsIncrementTypeEnum:
      title: ColumnsIncrementTypeEnum
      description: All increment columns data types
      type: string
      enum:
        - INTEGER
        - TIMESTAMP
        - DATE
        - FLOAT
        - STRING
        - DATETIME
    ColumnsIntervalTypeEnum:
      title: ColumnsIntervalTypeEnum
      description: The column's interval type
      type: string
      enum:
        - datetime
        - runningnumber
        - epoch
        - row_version
        - date
    ColumnsModeEnum:
      title: ColumnsModeEnum
      description: All column modes.
      type: string
      enum:
        - NULLABLE
        - REPEATED
    ColumnsTypeEnum:
      title: ColumnsTypeEnum
      description: All column data types.
      type: string
      enum:
        - INTEGER
        - TIMESTAMP
        - DATE
        - FLOAT
        - STRING
        - DATETIME
        - BOOLEAN
        - RECORD
        - VARCHAR
        - SMALLINT
        - BIGINT
        - OBJECT
        - NUMBER
        - VARIANT
        - JSON
        - TEXT
        - TIME
        - TINYINT
    ConvertFileTypeEnum:
      title: ConvertFileTypeEnum
      description: >-
        Conversion service types of file conversions.

        The conversion service supports multiple conversion including CSV and
        JSON but the back only support PARQUET for now

        Once the back adds support for the other file types we can add them here
      type: string
      enum:
        - parquet
    CopyRiverResponse:
      title: CopyRiverResponse
      description: Copy river response
      properties:
        details:
          title: Details
          type: string
        cross_id:
          title: Cross Id
          description: The new river cross id
          type: string
          example: 62e7f4352c13160013dc39be
      type: object
      required:
        - details
        - cross_id
    CreateOrUpdateScimTokenResponse:
      title: CreateOrUpdateScimTokenResponse
      description: SCIM Token create or update response.
      properties:
        account_id:
          title: Account Id
          description: The account id
          type: string
          example: 65c2465a76ba59de1a868a4e
          x-examples:
            - 65c2465a76ba59de1a868a4e
        scim_service_url:
          title: Scim Service Url
          description: The connection string (URL) used to communicate with your SCIM app
          type: string
          example: https://rivery-scim.rivery.io
          x-examples:
            - https://rivery-scim.rivery.io
        token:
          title: Token
          description: >-
            The SCIM authentication token. Keep the token somewhere safe. The
            token will be shown only once.
          type: string
          example: '1234'
          x-examples:
            - '1234'
      type: object
      required:
        - account_id
        - scim_service_url
        - token
    CreateUserTeam:
      title: CreateUserTeam
      description: Request create user groups input.
      properties:
        description:
          title: Description
          description: Internal description
          type: string
          example: Some description
        display_name:
          title: Display Name
          description: The display name in rivery
          type: string
          example: Rivery Core Team
        environments:
          title: Environments
          description: Dictionary of environment id and environment role
          type: object
          default: {}
          example:
            633ede20f1fc5500111fd7b3:
              role: viewer
            5f887c764c40e5598f717676:
              role: viewer
        is_all_environment_admin:
          title: Is All Environment Admin
          description: Indicates if group have Admin permission for all environment
          type: boolean
          default: false
          example: true
      type: object
      required:
        - display_name
    DatabaseTableInput:
      title: DatabaseTableInput
      description: |-
        Table properties which define the db table data
        This schema is being used for read
      properties:
        run_type_and_datasource:
          title: Run Type And Datasource
          description: Internal field
          type: string
          enum:
            - multi_tables
          default: multi_tables
        details:
          $ref: '#/components/schemas/WriteDatabaseTableDetailsInput'
      type: object
      required:
        - details
      x-konfig-properties:
        details:
          title: Details
          description: The database table details
    DatabricksModifiedColumn:
      title: DatabricksModifiedColumn
      description: Databricks specific columns settings
      properties:
        is_selected:
          title: Is Selected
          description: If the column is selected and should be modified.
          type: boolean
          example: true
        name:
          title: Name
          description: The name of the column.
          type: string
          example: column_name
        type:
          title: Type
          description: The type of the column.
          type: string
          example: string
          nullable: true
        alias:
          title: Alias
          description: The alias of the column in the target table.
          type: string
          example: column_alias
          nullable: true
        expression:
          title: Expression
          description: >-
            This tells us the column is an expression or not so we know if it
            suppose to exist in the source / target or is it auto generated.
          type: string
          example: select 'test'
          nullable: true
        is_key:
          title: Is Key
          description: If the column is a key.
          type: boolean
          example: true
          nullable: true
        sort_order:
          title: Sort Order
          description: >-
            The sort order of the column (number), sort order are used in the
            merge process to determine the order of the merge keys.
          type: integer
          example: 1
          nullable: true
        is_sort_key:
          title: Is Sort Key
          description: If the column is a sort column.
          type: boolean
          example: true
          nullable: true
        calculated_column_mode:
          description: >-
            The mode of the calculated column.Help to identify if the column is
            source expression or target expression,required if the column is an
            expression.
          allOf:
            - $ref: '#/components/schemas/CalculatedColumnModeEnum'
          example: source
          nullable: true
        order:
          title: Order
          description: >-
            The order of the column in the expression,required if the column is
            an expression.
          type: integer
          example: 1
          nullable: true
        target_type:
          title: Target Type
          description: Internal field, populated automatically
          type: string
          enum:
            - databricks
          default: databricks
          nullable: true
      type: object
      required:
        - is_selected
        - name
    DatabricksTargetSettings:
      title: DatabricksTargetSettings
      description: Databricks target settings properties to return.
      properties:
        name:
          title: Name
          description: The name of the target
          type: string
          enum:
            - databricks
          default: databricks
        connection_id:
          title: Connection Id
          description: The connection ID of this target
          type: string
          example: 5f4d3b3d9f9c8b0001f6b0e6
          nullable: true
        connection_name:
          title: Connection Name
          description: The connection name of this target
          type: string
          example: Connection 1
          nullable: true
        table_name:
          title: Table Name
          description: >-
            The table name of this target (only relevant for non multi table
            source to target rivers)
          type: string
          default: ''
          example: Table 1
          nullable: true
        target_prefix:
          title: Target Prefix
          description: >-
            The table prefix of this target (only relevant for multi table
            source to target rivers)
          type: string
          default: ''
          example: start_at_
          nullable: true
        is_ordered_merge_key:
          title: Is Ordered Merge Key
          description: >-
            If the table got any and should consider filter out duplicates data
            between source filemerge process(by order).
          type: boolean
          default: false
          example: true
        order_expression:
          title: Order Expression
          description: The order expression of the river entity.
          type: string
          example: id desc,createDate asc
          nullable: true
        loading_method:
          $ref: '#/components/schemas/LoadingMode'
        merge_method:
          description: >-
            The merge method to preform,only relevant when the loading mode is
            Merge,if not provided the default merge method will be used.(merge)
          allOf:
            - $ref: '#/components/schemas/MergeMethod'
          example: merge
          nullable: true
        file_zone_settings:
          title: File Zone Settings
          description: The file zone settings of this target
          allOf:
            - $ref: '#/components/schemas/RiverFileZoneSettings'
          nullable: true
        file_path_destination:
          title: File Path Destination
          description: The file name and path
          type: string
          example: path/to/file
        bucket_name:
          title: Bucket Name
          description: The bucket name
          type: string
          example: bucket
        additional_settings:
          title: Additional Settings
          description: The additional settings of this target
          type: object
          default: {}
          example:
            key: value
          nullable: true
      type: object
      required:
        - loading_method
      x-konfig-properties:
        loading_method:
          description: The loading method of this target
          example: merge
    DataframeAddInput:
      title: DataframeAddInput
      description: |-
        Input for adding Dataframe
            
      properties:
        connection_settings:
          $ref: '#/components/schemas/DataframeConnectionSettingsInput'
        name:
          title: Name
          description: The name of the dataframe - must be unique
          type: string
          example: unique_name
      type: object
      required:
        - name
      x-konfig-properties:
        connection_settings:
          title: Connection Settings
          description: The connection settings of the dataframe
          example: |-
            "connection_settings":{
                    "connection" : "6278159bcfc148000fad5632",
                    "datasource_id" : "s3",
                    "storage_type" : "aws",
                    "default_bucket" : "rivery-dev-tests"}
                    
    DataframeConnectionSettingsInput:
      title: DataframeConnectionSettingsInput
      description: |-
        Input for the Dataframe connection settings
            
      properties:
        connection:
          title: Connection
          description: The connection of the connection_settings
          type: string
          example: 62e7f4352c13160013dc39be
        datasource_id:
          title: Datasource Id
          description: The datasource_id of the connection_settings
          type: string
          example: aws
        default_bucket:
          title: Default Bucket
          description: The default bucket of the connection settings
          type: string
          example: some_s3_bucket
        storage_type:
          title: Storage Type
          description: The storage type of the connection settings
          type: string
          example: s3
      type: object
      required:
        - connection
        - datasource_id
        - default_bucket
        - storage_type
    DataframePaginationResponse:
      title: DataframePaginationResponse
      description: |-
        Dataframe response properties to return as a paginated list
            
      properties:
        next_page:
          title: Next Page
          description: The next page URL
          type: string
          nullable: true
        previous_page:
          title: Previous Page
          description: The previous page URL
          type: string
          nullable: true
        page:
          title: Page
          description: The page number
          type: integer
          default: 1
        current_page_size:
          title: Current Page Size
          description: The current page size
          type: integer
        total_items:
          title: Total Items
          description: The total number of entities fetched
          type: integer
          default: 0
        account_id:
          title: Account Id
          description: The account id
          type: string
        environment_id:
          title: Environment Id
          description: The environment id
          type: string
        items:
          title: Items
          items:
            $ref: '#/components/schemas/DataframeResponse'
          type: array
      type: object
      required:
        - current_page_size
        - account_id
        - environment_id
        - items
    DataframeResponse:
      title: DataframeResponse
      description: |-
        Dataframe response properties to return
            
      properties:
        account_id:
          title: Account Id
          description: The account id of the user
          type: string
          example: 62e7f4352c13160013dc39be
        environment_id:
          title: Environment Id
          description: The environment id of the user
          type: string
          example: 82e7f4122c13169813dc395g
        connection_settings:
          title: Connection Settings
          description: The connection settings of the dataframe
          type: object
          default: {}
          example: |-
            "connection_settings":{
                                                                    "connection" : "6278159bcfc148000fad5632",
                                                                    "datasource_id" : "s3",
                                                                    "storage_type" : "aws",
                                                                    "default_bucket" : "rivery-dev-tests"}
        name:
          title: Name
          description: The name of the dataframe - must be unique
          type: string
          example: unique_name
      type: object
      required:
        - account_id
        - environment_id
        - name
    DataframeUpdateInput:
      title: DataframeUpdateInput
      description: Input for updating Dataframe
      properties:
        connection_settings:
          $ref: '#/components/schemas/DataframeConnectionSettingsInput'
      type: object
      x-konfig-properties:
        connection_settings:
          title: Connection Settings
          description: The connection settings of the dataframe
          example: |-
            "connection_settings":{
                    "connection" : "6278159bcfc148000fad5632",
                    "datasource_id" : "s3",
                    "storage_type" : "aws",
                    "default_bucket" : "rivery-dev-tests"}
                    
    DateRange:
      title: DateRange
      description: Date range when using incremental loading method.
      properties:
        time_period:
          description: The time period of the river entity.
          allOf:
            - $ref: '#/components/schemas/RiverTimePeriodEnum'
          default: custom
          example: custom
          nullable: true
        start_date:
          title: Start Date
          description: The start date of the river entity.
          type: string
          example: '2020-12-01T00:00:00.000Z'
          nullable: true
        end_date:
          title: End Date
          description: The end date of the river entity.
          type: string
          example: '2020-01-01T00:00:00.000Z'
          nullable: true
        days_back:
          title: Days Back
          description: The days back of the river entity.
          type: integer
          default: 0
          example: 1
        include_end_value:
          title: Include End Value
          description: Whether to include or exclude the end_value in the date range
          type: boolean
          default: false
          example: true
          extra:
            name: date_range.include_end_value
            type: switch
            display_name: Include the End Value of the End Date
            left_label: true
        split_time_intervals:
          $ref: '#/components/schemas/SplitTimeIntervals'
        update_increment_on_failures:
          title: Update Increment On Failures
          description: >-
            If to update the start date for the next extraction even if the
            current extraction is unsuccessful.
          type: boolean
          default: false
          example: true
      type: object
      x-konfig-properties:
        split_time_intervals:
          title: Split Time Intervals
          description: The interval time to split by when using date increment.
          default:
            time_interval: dont_split
            interval_size: 1
          example:
            time_interval: days
            interval_size: 3
    DistributionMethodEnum:
      title: DistributionMethodEnum
      description: |-
        Enum for distribution methods in Redshift as a target, example:
        ALL - A copy of the entire table is distributed to every node
      type: string
      enum:
        - all
        - even
        - key
    EmailTargetSettings:
      title: EmailTargetSettings
      description: Email target settings properties to return.
      properties:
        name:
          title: Name
          description: The name of the target
          type: string
          enum:
            - target_email
          default: target_email
        email_list:
          title: Email List
          description: A list of email addresses to send the data to.
          items:
            type: string
          type: array
          maxItems: 15
          minItems: 1
          example:
            - example@example.io
      type: object
      required:
        - email_list
    EnvironmentInput:
      title: EnvironmentInput
      description: Add Environment Model
      properties:
        description:
          title: Description
          description: The environment description
          type: string
          example: Development environment for new rivers
        name:
          title: Name
          description: The environment name
          type: string
          example: Dev Environment
        color:
          $ref: '#/components/schemas/EnvironmentsColorEnum'
        is_default:
          title: Is Default
          description: >-
            A flag that indicates whether the environment is the account's
            default environment
          type: boolean
          default: 'False'
          example: true
      type: object
      required:
        - name
      x-konfig-properties:
        color:
          description: The environment color as shown in the app
          default: gray.400
          example: Gray.400
    EnvironmentsColorEnum:
      title: EnvironmentsColorEnum
      description: The EnvironmentsColor enum provides all color options for environments
      type: string
      enum:
        - gray.400
        - tagGreen
        - cBlues
        - tagCyan
        - tagGeekBlue
        - cPurples
        - tagPurple
        - tagMagenta
        - cOranges
        - tagOrange
        - yellow.200
    EnvironmentsFields:
      title: EnvironmentsFields
      description: |-
        Environments properties to return.
            
      properties:
        description:
          title: Description
          description: The environment description
          type: string
          example: Development environment for new rivers
        _id:
          title: ' Id'
          description: The environment id
          type: string
          example: 633ede20f1fc5500111fd7b3
        account:
          title: Account
          description: The account id of the user
          type: string
          example: 62e7f4352c13160013dc39be
        user_created:
          title: User Created
          description: The user id of the user who first created the environment
          type: string
          example: 62e7f4352c13160013dc39be
        created_at:
          title: Created At
          description: >-
            The environment creation date time in UTC timezone. Time format
            YYYY-MM-DDThh:mm:ss.ms
          anyOf:
            - type: string
              format: date-time
            - type: string
          example: '2022-07-25T18:38:55.640Z'
        cross_id:
          title: Cross Id
          description: The cross id of the environment
          type: string
          example: 62e7f4352c13160013dc39be
        updated_at:
          title: Updated At
          description: The time in which the environment was last updated (UTC time zone)
          anyOf:
            - type: string
              format: date-time
            - type: string
          example: '2022-08-02T13:38:44.054000'
        environment_name:
          title: Environment Name
          description: The environment name
          type: string
          example: Dev Environment
        color:
          $ref: '#/components/schemas/EnvironmentsColorEnum'
        variables:
          title: Variables
          description: Environment's variables
          type: object
          example:
            days_ago: '0'
            aws_file_zone: Rivery-rivery
            gcs_file_zone: Rivery-rivery
            azure_file_zone: Rivery-rivery
            hours_offset: '0'
        is_deleted:
          title: Is Deleted
          description: A flag that indicates whether the environment is deleted
          type: boolean
          default: false
          example: true
        deleted_by:
          title: Deleted By
          description: >-
            The user id of the user who deleted the environment (if the
            environment is deleted)
          type: string
          example: 62e7f4352c13160013dc39be
        deleted_at:
          title: Deleted At
          description: >-
            The time in which the environment was deleted (if the environment is
            deleted). Time format YYYY-MM-DDThh:mm:ss.ms
          anyOf:
            - type: string
              format: date-time
            - type: string
          example: '2022-07-25T18:38:55.640Z'
        is_default:
          title: Is Default
          description: >-
            A flag that indicates whether the environment is the account's
            default environment
          type: boolean
          default: 'False'
          example: true
        updated_by:
          title: Updated By
          description: The user id of the user who last updated the environment
          type: string
          example: 62e7f4352c13160013dc39be
        is_delete_lock:
          title: Is Delete Lock
          description: A flag that indicates the environment deletion progress
          type: boolean
          example: true
      type: object
      required:
        - _id
        - account
        - cross_id
        - environment_name
        - variables
      x-konfig-properties:
        color:
          description: The environment color as shown in the app
          default: gray.400
          example: Gray
    ExtractMethodEnum:
      title: ExtractMethodEnum
      description: |-
        Extract method enum.
        The supported extract methods are:
         - All - for extracting all the data with no filter
         - Incremental - for extracting the data with an increment filter by a certain field / column
         - LogBased - for CDC extraction using logs
      type: string
      enum:
        - all
        - incremental
        - log
    FacebookAdsAdsTypeEnum:
      title: FacebookAdsAdsTypeEnum
      description: Facebook Ads, ads type enum
      type: string
      enum:
        - ads_ids
        - ads_names
        - ads_filter
    FacebookAdsCampaignsTypeEnum:
      title: FacebookAdsCampaignsTypeEnum
      description: Facebook Ads campaigns type enum
      type: string
      enum:
        - campaigns_ids
        - campaigns_names
        - campaigns_filter
    FacebookAdsSetsTypeEnum:
      title: FacebookAdsSetsTypeEnum
      description: Facebook Ads ad sets type enum
      type: string
      enum:
        - adsets_ids
        - adsets_names
        - adsets_filter
    FinancialStatusEnum:
      title: FinancialStatusEnum
      description: Shopify financial order status enum
      type: string
      enum:
        - any
        - paid
        - unpaid
        - voided
        - pending
        - refunded
        - authorized
        - partially_paid
        - partially_refunded
    GCSModifiedColumn:
      title: GCSModifiedColumn
      description: GCS specific columns settings
      properties:
        is_selected:
          title: Is Selected
          description: If the column is selected and should be modified.
          type: boolean
          example: true
        name:
          title: Name
          description: The name of the column.
          type: string
          example: column_name
        type:
          title: Type
          description: The type of the column.
          type: string
          example: string
          nullable: true
        alias:
          title: Alias
          description: The alias of the column in the target table.
          type: string
          example: column_alias
          nullable: true
        expression:
          title: Expression
          description: >-
            This tells us the column is an expression or not so we know if it
            suppose to exist in the source / target or is it auto generated.
          type: string
          example: select 'test'
          nullable: true
        is_key:
          title: Is Key
          description: If the column is a key.
          type: boolean
          example: true
          nullable: true
        sort_order:
          title: Sort Order
          description: >-
            The sort order of the column (number), sort order are used in the
            merge process to determine the order of the merge keys.
          type: integer
          example: 1
          nullable: true
        is_sort_key:
          title: Is Sort Key
          description: If the column is a sort column.
          type: boolean
          example: true
          nullable: true
        calculated_column_mode:
          description: >-
            The mode of the calculated column.Help to identify if the column is
            source expression or target expression,required if the column is an
            expression.
          allOf:
            - $ref: '#/components/schemas/CalculatedColumnModeEnum'
          example: source
          nullable: true
        order:
          title: Order
          description: >-
            The order of the column in the expression,required if the column is
            an expression.
          type: integer
          example: 1
          nullable: true
        target_type:
          title: Target Type
          description: Internal field, populated automatically
          type: string
          enum:
            - GCS
          default: GCS
          nullable: true
      type: object
      required:
        - is_selected
        - name
    GcsTargetSettings:
      title: GcsTargetSettings
      description: GCS target settings properties to return.
      properties:
        name:
          title: Name
          description: The name of the target
          type: string
          enum:
            - GCS
          default: GCS
        connection_id:
          title: Connection Id
          description: The connection ID of this target
          type: string
          example: 5f4d3b3d9f9c8b0001f6b0e6
          nullable: true
        connection_name:
          title: Connection Name
          description: The connection name of this target
          type: string
          example: Connection 1
          nullable: true
        path:
          title: Path
          description: The path of the file zone entity.
          type: string
          example: my_path
        bucket_name:
          title: Bucket Name
          description: The bucket name of the file zone entity.
          type: string
          example: my_bucket
        partitioned_kind:
          $ref: '#/components/schemas/PartitionedKindEnum'
      type: object
      required:
        - path
        - bucket_name
        - partitioned_kind
      x-konfig-properties:
        partitioned_kind:
          description: The partitioned kind of the file zone entity.
          example: by_day
    GeneralResponse:
      title: GeneralResponse
      description: General response schema contains only details
      properties:
        details:
          title: Details
          type: string
      type: object
      required:
        - details
    GetScimTokenStatusResponse:
      title: GetScimTokenStatusResponse
      description: SCIM token get status
      properties:
        account_id:
          title: Account Id
          description: The account id
          type: string
          example: 65c2465a76ba59de1a868a4e
          x-examples:
            - 65c2465a76ba59de1a868a4e
        is_enabled:
          title: Is Enabled
          description: A flag that indicates whether SCIM provisioning is enabled
          type: boolean
          example: true
          x-examples:
            - true
        scim_service_url:
          title: Scim Service Url
          description: The connection string (URL) used to communicate with your SCIM app
          type: string
          example: https://rivery-scim.rivery.io
          x-examples:
            - https://rivery-scim.rivery.io
      type: object
      required:
        - account_id
        - is_enabled
        - scim_service_url
    GroupOrUserSourceEnum:
      title: GroupOrUserSourceEnum
      description: >-
        The source group. can be locally from Rivery or imported from external
        provider
      type: string
      enum:
        - rivery
        - active_directory
    HTTPValidationError:
      title: HTTPValidationError
      properties:
        detail:
          title: Detail
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
      type: object
    IDNameInput:
      title: IDNameInput
      description: Basic ID and Name input
      properties:
        id:
          title: Id
          description: The if of the entity
          type: string
        name:
          title: Name
          description: The name of the entity
          type: string
      type: object
      required:
        - id
    IncrementColumn:
      title: IncrementColumn
      description: Increment columns for the table entity
      properties:
        name:
          title: Name
          description: The column’s name
          type: string
          example: column name
        type:
          $ref: '#/components/schemas/ColumnsIncrementTypeEnum'
        incremental_type:
          $ref: '#/components/schemas/ColumnsIntervalTypeEnum'
        is_default:
          title: Is Default
          description: >-
            A boolean field that indicates if the column should be the default
            increment column
          type: boolean
          default: false
          example: false
      type: object
      required:
        - name
        - type
        - incremental_type
      x-konfig-properties:
        type:
          description: The data type of the increment column in the DB
          example: DATETIME
        incremental_type:
          description: The interval type of the column
          example: datetime
    IncrementalFieldEnum:
      title: IncrementalFieldEnum
      description: Shopify addresses/customers incremental field enum
      type: string
      enum:
        - updated at
        - created at
    IntervalTimeExternalEnum:
      title: IntervalTimeExternalEnum
      description: >-
        Intervals by time options (external enum for IntervalChunkSizeEnum
        options)
      type: string
      enum:
        - dont_split
        - minutes
        - hours
        - days
        - weeks
        - months
        - years
    LegacyRiverResponse:
      title: LegacyRiverResponse
      description: >-
        This class is used to return the river version definition in the legacy
        format.
      properties:
        river_definition:
          title: River Definition
          description: The definition of the river version
          type: object
          example:
            river:
              version: river_version
              name: river_name
              id: 55fr7d4270fdca16cac18261
              type: river_type
              source:
                type: source_type
                id: 55fr7d4270fdca16cac18261X
                name: source_name
        source_task_config:
          title: Source Task Config
          description: The source task config of the river version
          type: object
          example:
            task:
              name: task_name
        target_task_config:
          title: Target Task Config
          description: The target task config of the river version
          type: object
          example:
            task:
              name: task_name
      type: object
      required:
        - river_definition
        - source_task_config
    ListEnvironmentsPaginationResponse:
      title: ListEnvironmentsPaginationResponse
      description: The list environments response to return as a paginated list
      properties:
        next_page:
          title: Next Page
          description: The next page URL
          type: string
          nullable: true
        previous_page:
          title: Previous Page
          description: The previous page URL
          type: string
          nullable: true
        page:
          title: Page
          description: The page number
          type: integer
          default: 1
        current_page_size:
          title: Current Page Size
          description: The current page size
          type: integer
        total_items:
          title: Total Items
          description: The total number of entities fetched
          type: integer
          default: 0
        account_id:
          title: Account Id
          description: The account id
          type: string
        items:
          title: Items
          items:
            $ref: '#/components/schemas/EnvironmentsFields'
          type: array
      type: object
      required:
        - current_page_size
        - account_id
        - items
    ListRiverObject:
      title: ListRiverObject
      description: River list object for the list endpoint.
      properties:
        description:
          title: Description
          description: Description of the river, if available
          type: string
          example: river_description
          nullable: true
        name:
          title: Name
          description: Name of the river
          type: string
          example: river_name
        river_status:
          $ref: '#/components/schemas/RiverStatusEnum'
        group_name:
          title: Group Name
          description: Name of the group associated with the river
          type: string
          example: river_group_1
        group_id:
          title: Group Id
          description: the id of the group associated with the river
          type: string
          example: 62e7f4352c13160013dc39be
        river_schedulers:
          title: River Schedulers
          description: List of schedulers used for the river
          items:
            type: string
          type: array
          example:
            - 0 * * * *
            - 0 0 1 * *
        datasource_id:
          title: Datasource Id
          description: Source ID of the river
          type: string
          example: 5f7d4270fdca16cac18261
        last_user_name_modified:
          title: Last User Name Modified
          description: User name of the last modifier
          type: string
          example: user_name
        river_cross_id:
          title: River Cross Id
          description: River cross ID
          type: string
          example: 5f7d4270fdca16cac18261
        last_updated_at:
          title: Last Updated At
          description: Last time the river was modified
          type: string
          format: date-time
          example: '2021-01-01T00:00:00.000Z'
        is_api_v2:
          title: Is Api V2
          description: Flag indicating whether the river is using API v2
          type: boolean
          example: true
        river_type:
          $ref: '#/components/schemas/RiverTypeEnum'
        created_at:
          title: Created At
          description: Time the river was created
          type: string
          format: date-time
          example: '2021-01-01T00:00:00.000Z'
      type: object
      required:
        - name
        - river_status
        - group_name
        - group_id
        - river_schedulers
        - datasource_id
        - last_user_name_modified
        - river_cross_id
        - last_updated_at
        - is_api_v2
        - river_type
        - created_at
      x-konfig-properties:
        river_status:
          description: Status of the river
          example: active
        river_type:
          description: Type of the river
          example: source_to_target
    ListRiversSortByFilterEnum:
      title: ListRiversSortByFilterEnum
      description: The river sort by filter enum provide all the sort by options.
      type: string
      enum:
        - last_updated_at
        - source_name
        - river_name
        - group_name
        - group_id
    LoadingMode:
      title: LoadingMode
      description: 'Enum for loading modes '
      type: string
      enum:
        - overwrite
        - append
        - merge
    LogicBlockTypeEnum:
      title: LogicBlockTypeEnum
      description: >-
        Logic step can have block types - this enum enumerate the different
        block types
      type: string
      enum:
        - big_query_sql
        - river
        - redshift
        - action
        - azure_datalake
        - azure_sql
        - azure_datalake_job
        - snowflake
        - logicode
        - azure_sql_dwh
        - postgres
        - databricks
        - firebolt
        - athena
    LogicContainerTypeEnum:
      title: LogicContainerTypeEnum
      description: ALl of the logic container options
      type: string
      enum:
        - run_once
        - loop_over
        - condition
    LogicProperties:
      title: LogicProperties
      description: Logic properties which define the logic river properties
      properties:
        properties_type:
          title: Properties Type
          type: string
          enum:
            - logic
          default: logic
      type: object
    LogicStep:
      title: LogicStep
      description: Logic step configuration
      properties:
        is_container:
          title: Is Container
          description: A flag that indicates whether this step is a container or not
          type: boolean
          example: true
        container_type:
          $ref: '#/components/schemas/LogicContainerTypeEnum'
        start_date_utc:
          title: Start Date Utc
          description: >-
            The start date time in UTC timezone.Time format
            YYYY-MM-DDThh:mm:ss.ms
          type: string
          format: date-time
          example: '2022-07-25T18:38:55.640Z'
        start_date_in_milliseconds:
          title: Start Date In Milliseconds
          description: The start epoch in milliseconds.
          type: integer
          example: 1658774335000
        end_date_utc:
          title: End Date Utc
          description: The end date time in UTC timezone.Time format YYYY-MM-DDThh:mm:ss.ms
          type: string
          format: date-time
          example: '2022-07-25T18:38:55.640Z'
          nullable: true
        end_date_in_milliseconds:
          title: End Date In Milliseconds
          description: The end epoch in milliseconds.
          type: integer
          example: 1658774335000
          nullable: true
        step_status:
          $ref: '#/components/schemas/ActivityStatusEnum'
        loop_iteration_number:
          title: Loop Iteration Number
          description: >-
            If loop exist, it will contain the loop iteration number, otherwise
            0
          type: integer
        duration:
          title: Duration
          description: >-
            Step duration. Format h:mm:ss.ms. If step failed or canceled the
            duration will be 'None'
          type: string
          example: '0:01:23.275006'
        step_execution_id:
          title: Step Execution Id
          type: string
        step_id:
          title: Step Id
          type: string
        step_index:
          title: Step Index
          type: string
        error_description:
          title: Error Description
          description: The error description if any
          type: string
          example: error
          nullable: true
        logicode_statistics:
          title: Logicode Statistics
          description: The logicode statistics of RPU, duration and network
          allOf:
            - $ref: '#/components/schemas/LogicodeStatistics'
          nullable: true
        block_type:
          description: The logic block type
          allOf:
            - $ref: '#/components/schemas/LogicBlockTypeEnum'
          example: action
          nullable: true
      type: object
      required:
        - is_container
        - start_date_utc
        - start_date_in_milliseconds
        - step_status
        - loop_iteration_number
        - duration
        - step_execution_id
        - step_id
        - step_index
      x-konfig-properties:
        container_type:
          description: The container type - if any
          example: run_once
        step_status:
          description: The step status
          example: succeeded
    LogicodeStatistics:
      title: LogicodeStatistics
      description: Logicode (python) statistics
      properties:
        logicode_rpu:
          title: Logicode Rpu
          description: The total RPUs that were consumed during this step run
          type: number
        logicode_network_mb:
          title: Logicode Network Mb
          description: The total network (in and out) consumption of this step run
          type: number
        logicode_duration_seconds:
          title: Logicode Duration Seconds
          description: The duration of this step
          type: number
      type: object
      required:
        - logicode_rpu
        - logicode_network_mb
        - logicode_duration_seconds
    MergeMethod:
      title: MergeMethod
      description: 'Enum for merge methods '
      type: string
      enum:
        - switch_tables
        - delete_insert
        - merge
    MongoDBAdditionalSourceSettings:
      title: MongoDBAdditionalSourceSettings
      description: MongoDB specific source settings
      properties:
        filter_expression:
          title: Filter Expression
          description: The filter expression of the river entity.
          type: string
          default: ''
          example: id > 100
        source_type:
          title: Source Type
          description: Internal field, populated automatically
          type: string
          enum:
            - mongodb
          default: mongodb
          nullable: true
        concurrent_requests_number:
          title: Concurrent Requests Number
          description: Number of connections to open concurrently to MongoDB
          type: integer
          default: 1
          example: 1
          nullable: true
      type: object
    MongoDBSourceCDCSettings:
      title: MongoDBSourceCDCSettings
      description: MongoDB Source settings properties.
      properties:
        default_tables_migration_option:
          $ref: '#/components/schemas/RiverTablesMigrationDefaultSyncOption'
        datasource_id:
          title: Datasource Id
          description: The data source id of this source
          type: string
          enum:
            - mongodb
          default: mongodb
      type: object
      x-konfig-properties:
        default_tables_migration_option:
          description: >-
            This option determine the tables migration option. For example.
            Choosing SKIP_INITIAL_MIGRATIONwill cause all tables to inherit the
            status from the River level to be used for a one-time process.
          default: RUN_INITIAL_MIGRATION
          example: SKIP_INITIAL_MIGRATION
    MySQLAdditionalSourceSettings:
      title: MySQLAdditionalSourceSettings
      description: MySQL specific source settings
      properties:
        filter_expression:
          title: Filter Expression
          description: The filter expression of the river entity.
          type: string
          default: ''
          example: id > 100
        source_type:
          title: Source Type
          description: Internal field, populated automatically
          type: string
          enum:
            - mysql
          default: mysql
          nullable: true
      type: object
    MysqlSourceCDCSettings:
      title: MysqlSourceCDCSettings
      description: Mysql Source settings properties to return.
      properties:
        default_tables_migration_option:
          $ref: '#/components/schemas/RiverTablesMigrationDefaultSyncOption'
        datasource_id:
          title: Datasource Id
          description: The data source id of this source
          type: string
          enum:
            - mysql
          default: mysql
      type: object
      x-konfig-properties:
        default_tables_migration_option:
          description: >-
            This option determine the tables migration option. For example.
            Choosing SKIP_INITIAL_MIGRATIONwill cause all tables to inherit the
            status from the River level to be used for a one-time process.
          default: RUN_INITIAL_MIGRATION
          example: SKIP_INITIAL_MIGRATION
    NotificationSettings:
      title: NotificationSettings
      description: |-
        Notification settings properties for the entire river
        (define what to do on warning, error, failure/timeout)
      properties:
        warning:
          title: Warning
          description: Notification report for warning.
          allOf:
            - $ref: '#/components/schemas/RiverNotificationReport'
          nullable: true
        failure:
          title: Failure
          description: Notification report for failure.
          allOf:
            - $ref: '#/components/schemas/RiverNotificationReport'
          nullable: true
        run_threshold:
          title: Run Threshold
          description: Notification report for run threshold.
          allOf:
            - $ref: '#/components/schemas/RiverNotificationReport'
          nullable: true
      type: object
    OperationResponse:
      title: OperationResponse
      description: |-
        Operation properties to return.
            
      properties:
        operation_id:
          title: Operation Id
          description: The ID of the operation
          type: string
          example: 62e7f4352c13160013dc39be
        operation_type:
          title: Operation Type
          description: The type of the operation
          type: string
          example: dataframe
        last_update_date:
          title: Last Update Date
          description: The date time in UTC timezone of the last update
          type: string
          format: date-time
          example: '2022-08-02T13:38:44.054000'
        status:
          $ref: '#/components/schemas/PullRequestStatus'
        result:
          title: Result
          description: The result of the operation
          example: 'true'
        error_message:
          title: Error Message
          description: The error message of the operation
          type: string
          example: '[RVR-QBK-003]: Response value error: Missing Rows/Columns'
      type: object
      required:
        - operation_id
        - operation_type
        - last_update_date
        - status
      x-konfig-properties:
        status:
          description: The current status of the operation id
          example: D
    OracleAdditionalSourceSettings:
      title: OracleAdditionalSourceSettings
      description: Oracle specific source settings
      properties:
        filter_expression:
          title: Filter Expression
          description: The filter expression of the river entity.
          type: string
          default: ''
          example: id > 100
        source_type:
          title: Source Type
          description: Internal field, populated automatically
          type: string
          enum:
            - oracle
          default: oracle
          nullable: true
      type: object
    OracleSourceCDCSettings:
      title: OracleSourceCDCSettings
      description: Oracle Source settings properties to return.
      properties:
        default_tables_migration_option:
          $ref: '#/components/schemas/RiverTablesMigrationDefaultSyncOption'
        datasource_id:
          title: Datasource Id
          description: The data source id of this source
          type: string
          enum:
            - oracle
          default: oracle
      type: object
      x-konfig-properties:
        default_tables_migration_option:
          description: >-
            This option determine the tables migration option. For example.
            Choosing SKIP_INITIAL_MIGRATIONwill cause all tables to inherit the
            status from the River level to be used for a one-time process.
          default: RUN_INITIAL_MIGRATION
          example: SKIP_INITIAL_MIGRATION
    PartitionedKindEnum:
      title: PartitionedKindEnum
      description: Partitioned kind for storages
      type: string
      enum:
        - by_day
        - by_hour
        - by_minute
    PatchEnvironmentInput:
      title: PatchEnvironmentInput
      description: Patch Environment Model
      properties:
        description:
          title: Description
          description: The environment description
          type: string
          example: Development environment for new rivers
        environment_name:
          title: Environment Name
          description: The environment name
          type: string
          example: Dev Environment
        color:
          $ref: '#/components/schemas/EnvironmentsColorEnum'
        is_default:
          title: Is Default
          description: >-
            A flag that indicates whether the environment is the account's
            default environment
          type: boolean
          example: true
      type: object
      x-konfig-properties:
        color:
          description: The environment color as shown in the app
          example: Gray.400
    PatchUserTeamsInput:
      title: PatchUserTeamsInput
      description: Request patch user groups input.
      properties:
        description:
          title: Description
          description: Internal description
          type: string
          example: Some description
        display_name:
          title: Display Name
          description: The display name in rivery
          type: string
          example: Rivery Core Team
        environments:
          title: Environments
          description: Dictionary of environment id and environment role
          type: object
          example:
            633ede20f1fc5500111fd7b3:
              role: viewer
            5f887c764c40e5598f717676:
              role: viewer
        is_all_environment_admin:
          title: Is All Environment Admin
          description: Indicates if group have Admin permission for all environment
          type: boolean
          example: true
      type: object
    PostgreSQLAdditionalSourceSettings:
      title: PostgreSQLAdditionalSourceSettings
      description: PostgreSQL specific source settings
      properties:
        filter_expression:
          title: Filter Expression
          description: The filter expression of the river entity.
          type: string
          default: ''
          example: id > 100
        source_type:
          title: Source Type
          description: Internal field, populated automatically
          type: string
          enum:
            - postgresql
          default: postgresql
          nullable: true
      type: object
    PostgresAdditionalTargetSettings:
      title: PostgresAdditionalTargetSettings
      description: Postgres specific target settings
      properties:
        is_ordered_merge_key:
          title: Is Ordered Merge Key
          description: >-
            If the table got any and should consider filter out duplicates data
            between source filemerge process(by order).
          type: boolean
          default: false
          example: true
        order_expression:
          title: Order Expression
          description: >-
            The order expression of the river entity,to filter duplications from
            the source data by the provided order expression (for `merge`
            loading method).
          type: string
          example: id desc,createDate asc
          nullable: true
        target_loading:
          description: >-
            The target loading of the table entity,if not specified the default
            loading mode of the riverwill be used.
          allOf:
            - $ref: '#/components/schemas/LoadingMode'
          example: merge
          nullable: true
        target_type:
          title: Target Type
          description: Internal field, populated automatically
          type: string
          enum:
            - postgres
          default: postgres
          nullable: true
        analyze_tables:
          title: Analyze Tables
          description: Analyze the tables after the load process
          type: boolean
          default: false
      type: object
    PostgresModifiedColumn:
      title: PostgresModifiedColumn
      description: Postgres specific columns settings
      properties:
        is_selected:
          title: Is Selected
          description: If the column is selected and should be modified.
          type: boolean
          example: true
        name:
          title: Name
          description: The name of the column.
          type: string
          example: column_name
        type:
          title: Type
          description: The type of the column.
          type: string
          example: string
          nullable: true
        alias:
          title: Alias
          description: The alias of the column in the target table.
          type: string
          example: column_alias
          nullable: true
        expression:
          title: Expression
          description: >-
            This tells us the column is an expression or not so we know if it
            suppose to exist in the source / target or is it auto generated.
          type: string
          example: select 'test'
          nullable: true
        is_key:
          title: Is Key
          description: If the column is a key.
          type: boolean
          example: true
          nullable: true
        sort_order:
          title: Sort Order
          description: >-
            The sort order of the column (number), sort order are used in the
            merge process to determine the order of the merge keys.
          type: integer
          example: 1
          nullable: true
        is_sort_key:
          title: Is Sort Key
          description: If the column is a sort column.
          type: boolean
          example: true
          nullable: true
        calculated_column_mode:
          description: >-
            The mode of the calculated column.Help to identify if the column is
            source expression or target expression,required if the column is an
            expression.
          allOf:
            - $ref: '#/components/schemas/CalculatedColumnModeEnum'
          example: source
          nullable: true
        order:
          title: Order
          description: >-
            The order of the column in the expression,required if the column is
            an expression.
          type: integer
          example: 1
          nullable: true
        target_type:
          title: Target Type
          description: Internal field, populated automatically
          type: string
          enum:
            - postgres
          default: postgres
          nullable: true
      type: object
      required:
        - is_selected
        - name
    PostgresSourceCDCSettings:
      title: PostgresSourceCDCSettings
      description: Postgres Source settings properties to return.
      properties:
        default_tables_migration_option:
          $ref: '#/components/schemas/RiverTablesMigrationDefaultSyncOption'
        datasource_id:
          title: Datasource Id
          description: The data source id of this source
          type: string
          enum:
            - postgres
          default: postgres
        custom_replication_slot:
          title: Custom Replication Slot
          description: The custom replication slot of this source
          type: string
          example: custom_replication_slot
        custom_publication:
          title: Custom Publication
          description: The custom publication of this source
          type: string
          example: custom_publication
      type: object
      x-konfig-properties:
        default_tables_migration_option:
          description: >-
            This option determine the tables migration option. For example.
            Choosing SKIP_INITIAL_MIGRATIONwill cause all tables to inherit the
            status from the River level to be used for a one-time process.
          default: RUN_INITIAL_MIGRATION
          example: SKIP_INITIAL_MIGRATION
    PostgresTargetSettings:
      title: PostgresTargetSettings
      description: Postgres target settings properties to return.
      properties:
        name:
          title: Name
          description: The name of the target
          type: string
          enum:
            - postgres
          default: postgres
        connection_id:
          title: Connection Id
          description: The connection ID of this target
          type: string
          example: 5f4d3b3d9f9c8b0001f6b0e6
          nullable: true
        connection_name:
          title: Connection Name
          description: The connection name of this target
          type: string
          example: Connection 1
          nullable: true
        table_name:
          title: Table Name
          description: >-
            The table name of this target (only relevant for non multi table
            source to target rivers)
          type: string
          default: ''
          example: Table 1
          nullable: true
        target_prefix:
          title: Target Prefix
          description: >-
            The table prefix of this target (only relevant for multi table
            source to target rivers)
          type: string
          default: ''
          example: start_at_
          nullable: true
        is_ordered_merge_key:
          title: Is Ordered Merge Key
          description: >-
            If the table got any and should consider filter out duplicates data
            between source filemerge process(by order).
          type: boolean
          default: false
          example: true
        order_expression:
          title: Order Expression
          description: The order expression of the river entity.
          type: string
          example: id desc,createDate asc
          nullable: true
        loading_method:
          $ref: '#/components/schemas/LoadingMode'
        merge_method:
          description: >-
            The merge method to preform,only relevant when the loading mode is
            Merge,if not provided the default merge method will be used.(merge)
          allOf:
            - $ref: '#/components/schemas/MergeMethod'
          example: merge
          nullable: true
        file_zone_settings:
          title: File Zone Settings
          description: The file zone settings of this target
          allOf:
            - $ref: '#/components/schemas/RiverFileZoneSettings'
          nullable: true
        file_path_destination:
          title: File Path Destination
          description: The file name and path
          type: string
          example: path/to/file
        bucket_name:
          title: Bucket Name
          description: The bucket name
          type: string
          example: bucket
        additional_settings:
          title: Additional Settings
          description: The additional settings of this target
          type: object
          default: {}
          example:
            key: value
          nullable: true
      type: object
      required:
        - loading_method
      x-konfig-properties:
        loading_method:
          description: The loading method of this target
          example: merge
    PredefinedColumnModel:
      title: PredefinedColumnModel
      description: Predefined report column structure
      properties:
        name:
          title: Name
          description: The column name.
          type: string
          example: column_name
        type:
          $ref: '#/components/schemas/ColumnsTypeEnum'
        is_key:
          title: Is Key
          description: Whether the column is a key.
          type: boolean
          default: false
          example: true
        alias:
          title: Alias
          description: The column name's alias.
          type: string
          example: column_alias
        mode:
          $ref: '#/components/schemas/ColumnsModeEnum'
        datasource_id:
          $ref: '#/components/schemas/SourceTypeEnum'
        report:
          title: Report
          description: The column's report id.
          type: string
          example: orders
        fields:
          title: Fields
          description: A list of subfields for the original field
          items:
            type: string
          type: array
      type: object
      required:
        - name
        - type
        - datasource_id
        - report
      x-konfig-properties:
        type:
          description: The column's data type.
          example: STRING
        mode:
          description: The column's mode.
          example: NULLABLE
        datasource_id:
          description: The column datasource id.
          example: shopify
    PredefinedColumnsPaginatedResponse:
      title: PredefinedColumnsPaginatedResponse
      description: The response for the get predefined columns.
      properties:
        next_page:
          title: Next Page
          description: The next page URL
          type: string
          nullable: true
        previous_page:
          title: Previous Page
          description: The previous page URL
          type: string
          nullable: true
        page:
          title: Page
          description: The page number
          type: integer
          default: 1
        current_page_size:
          title: Current Page Size
          description: The current page size
          type: integer
        total_items:
          title: Total Items
          description: The total number of entities fetched
          type: integer
          default: 0
        items:
          title: Items
          description: A list of predefined columns
          items:
            $ref: '#/components/schemas/PredefinedColumnModel'
          type: array
      type: object
      required:
        - current_page_size
        - items
    PredefinedMetadataModelResponse:
      title: PredefinedMetadataModelResponse
      description: The response for the get predefined metadata.
      properties:
        title:
          title: Title
          description: The report title.
          type: string
          example: my title
        description:
          title: Description
          description: The report description.
          type: string
          example: report description
        properties:
          title: Properties
          description: The report fields and metadata.
          type: object
        required:
          title: Required
          description: A list of required report fields
          items:
            type: string
          type: array
          example:
            - id
      type: object
      required:
        - title
        - description
        - properties
    PredefinedReportShopifyTableInput:
      title: PredefinedReportShopifyTableInput
      description: |-
        Table properties which define the predefined report table data
        This schema is being used for read
      properties:
        run_type_and_datasource:
          title: Run Type And Datasource
          description: Internal field
          type: string
          enum:
            - predefined_report_shopify
          default: predefined_report_shopify
        details:
          title: Details
          description: The predefined report table details
          anyOf:
            - $ref: '#/components/schemas/WriteShopifyPredefinedOrdersReport'
            - $ref: '#/components/schemas/WriteShopifyPredefinedShopReport'
            - $ref: '#/components/schemas/WriteShopifyPredefinedAddressesReport'
            - $ref: '#/components/schemas/WriteShopifyPredefinedAnalyticReport'
            - $ref: '#/components/schemas/WriteShopifyPredefinedCustomersReport'
            - $ref: '#/components/schemas/WriteShopifyPredefinedInventoryLevelsReport'
            - $ref: '#/components/schemas/WriteShopifyPredefinedMarketingEventsReport'
            - $ref: >-
                #/components/schemas/WriteShopifyPredefinedOrderTransactionsReport
            - $ref: '#/components/schemas/WriteShopifyPredefinedProductsReport'
      type: object
      required:
        - details
    PredefinedTableModel:
      title: PredefinedTableModel
      description: >-
        Predefined table properties to return (for Shopify, Facebook ads,
        etc...)
      properties:
        id:
          title: Id
          description: The table id.
          type: string
          example: table_id
        increment_columns:
          title: Increment Columns
          description: List of columns that the table can run incrementally by.
          items:
            $ref: '#/components/schemas/IncrementColumn'
          type: array
          example:
            - incremental_type: runningnumber
              type: FLOAT
              name: days_unsigned__c
              is_default: false
        datasource_id:
          title: Datasource Id
          description: The id of the datasource.
          type: string
          example: shopify
        report_id:
          title: Report Id
          description: The id of the report.
          type: string
          example: predefined_orders
        report_name:
          title: Report Name
          description: The name of the report.
          type: string
          example: orders
        no_increment:
          title: No Increment
          description: Indication if there is no increment for the report.
          type: boolean
          nullable: true
        increment_required:
          title: Increment Required
          description: Indication if the increment is required for the report.
          type: boolean
          nullable: true
        user_parameters:
          title: User Parameters
          description: List of parameters the user can input and change.
          items:
            type: string
          type: array
          default: []
          example:
            - date
          nullable: true
        hide_parameters:
          title: Hide Parameters
          description: List of parameters hidden to the user
          items:
            type: string
          type: array
          default: []
          nullable: true
      type: object
      required:
        - id
        - increment_columns
        - datasource_id
        - report_id
        - report_name
    PredefinedTablesModelPaginatedResponse:
      title: PredefinedTablesModelPaginatedResponse
      description: The response for the get predefined tables.
      properties:
        next_page:
          title: Next Page
          description: The next page URL
          type: string
          nullable: true
        previous_page:
          title: Previous Page
          description: The previous page URL
          type: string
          nullable: true
        page:
          title: Page
          description: The page number
          type: integer
          default: 1
        current_page_size:
          title: Current Page Size
          description: The current page size
          type: integer
        total_items:
          title: Total Items
          description: The total number of entities fetched
          type: integer
          default: 0
        items:
          title: Items
          description: A list of predefined tables
          items:
            $ref: '#/components/schemas/PredefinedTableModel'
          type: array
      type: object
      required:
        - current_page_size
        - items
    ProductsIncrementalFieldEnum:
      title: ProductsIncrementalFieldEnum
      description: Shopify products incremental field enum
      type: string
      enum:
        - updated at
        - created at
        - published at
    PullRequestStatus:
      title: PullRequestStatus
      description: >-
        The status of the pull request that we use in the back, and expose in
        the API
      type: string
      enum:
        - W
        - E
        - R
        - D
    RedshiftAdditionalTargetSettings:
      title: RedshiftAdditionalTargetSettings
      description: Redshift specific target settings
      properties:
        is_ordered_merge_key:
          title: Is Ordered Merge Key
          description: >-
            If the table got any and should consider filter out duplicates data
            between source filemerge process(by order).
          type: boolean
          default: false
          example: true
        order_expression:
          title: Order Expression
          description: >-
            The order expression of the river entity,to filter duplications from
            the source data by the provided order expression (for `merge`
            loading method).
          type: string
          example: id desc,createDate asc
          nullable: true
        target_loading:
          description: >-
            The target loading of the table entity,if not specified the default
            loading mode of the riverwill be used.
          allOf:
            - $ref: '#/components/schemas/LoadingMode'
          example: merge
          nullable: true
        target_type:
          title: Target Type
          description: Internal field, populated automatically
          type: string
          enum:
            - redshift
          default: redshift
          nullable: true
        distribution_method:
          $ref: '#/components/schemas/DistributionMethodEnum'
        merge_method:
          description: >-
            The merge method of the table, if not specified the default merge
            method of the riverwill be used.
          allOf:
            - $ref: '#/components/schemas/MergeMethod'
          example: merge
          nullable: true
      type: object
      x-konfig-properties:
        distribution_method:
          description: The distribution method of the target.
          default: even
          example: even
    RedshiftModifiedColumn:
      title: RedshiftModifiedColumn
      description: Redshift specific columns settings
      properties:
        is_selected:
          title: Is Selected
          description: If the column is selected and should be modified.
          type: boolean
          example: true
        name:
          title: Name
          description: The name of the column.
          type: string
          example: column_name
        type:
          title: Type
          description: The type of the column.
          type: string
          example: string
          nullable: true
        alias:
          title: Alias
          description: The alias of the column in the target table.
          type: string
          example: column_alias
          nullable: true
        expression:
          title: Expression
          description: >-
            This tells us the column is an expression or not so we know if it
            suppose to exist in the source / target or is it auto generated.
          type: string
          example: select 'test'
          nullable: true
        is_key:
          title: Is Key
          description: If the column is a key.
          type: boolean
          example: true
          nullable: true
        sort_order:
          title: Sort Order
          description: >-
            The sort order of the column (number), sort order are used in the
            merge process to determine the order of the merge keys.
          type: integer
          example: 1
          nullable: true
        is_sort_key:
          title: Is Sort Key
          description: If the column is a sort column.
          type: boolean
          example: true
          nullable: true
        calculated_column_mode:
          description: >-
            The mode of the calculated column.Help to identify if the column is
            source expression or target expression,required if the column is an
            expression.
          allOf:
            - $ref: '#/components/schemas/CalculatedColumnModeEnum'
          example: source
          nullable: true
        order:
          title: Order
          description: >-
            The order of the column in the expression,required if the column is
            an expression.
          type: integer
          example: 1
          nullable: true
        target_type:
          title: Target Type
          description: Internal field, populated automatically
          type: string
          enum:
            - redshift
          default: redshift
          nullable: true
        length:
          title: Length
          description: The length of VARCHAR columns.
          type: integer
          example: 256
          nullable: true
        scale:
          title: Scale
          description: The scale of DECIMAL columns.
          type: integer
          example: 0
          nullable: true
        precision:
          title: Precision
          description: The precision of DECIMAL columns.
          type: integer
          example: 18
          nullable: true
        is_dist_key:
          title: Is Dist Key
          description: >-
            If the column is a unique Distkey column on which the table is
            distributed to each node
          type: boolean
          example: true
          nullable: true
        is_sorted:
          title: Is Sorted
          description: >-
            If the column should be sorted (if true- sort_order is the order of
            the column for sorting.
          type: boolean
          example: true
          nullable: true
      type: object
      required:
        - is_selected
        - name
    RedshiftTargetSettings:
      title: RedshiftTargetSettings
      description: Redshift target settings properties to return.
      properties:
        name:
          title: Name
          description: The name of the target
          type: string
          enum:
            - redshift
          default: redshift
        connection_id:
          title: Connection Id
          description: The connection ID of this target
          type: string
          example: 5f4d3b3d9f9c8b0001f6b0e6
          nullable: true
        connection_name:
          title: Connection Name
          description: The connection name of this target
          type: string
          example: Connection 1
          nullable: true
        table_name:
          title: Table Name
          description: >-
            The table name of this target (only relevant for non multi table
            source to target rivers)
          type: string
          default: ''
          example: Table 1
          nullable: true
        target_prefix:
          title: Target Prefix
          description: >-
            The table prefix of this target (only relevant for multi table
            source to target rivers)
          type: string
          default: ''
          example: start_at_
          nullable: true
        is_ordered_merge_key:
          title: Is Ordered Merge Key
          description: >-
            If the table got any and should consider filter out duplicates data
            between source filemerge process(by order).
          type: boolean
          default: false
          example: true
        order_expression:
          title: Order Expression
          description: The order expression of the river entity.
          type: string
          example: id desc,createDate asc
          nullable: true
        loading_method:
          $ref: '#/components/schemas/LoadingMode'
        merge_method:
          description: >-
            The merge method to preform,only relevant when the loading mode is
            Merge,if not provided the default merge method will be used.(merge)
          allOf:
            - $ref: '#/components/schemas/MergeMethod'
          example: merge
          nullable: true
        file_zone_settings:
          title: File Zone Settings
          description: The file zone settings of this target
          allOf:
            - $ref: '#/components/schemas/RiverFileZoneSettings'
          nullable: true
        file_path_destination:
          title: File Path Destination
          description: The file name and path
          type: string
          example: path/to/file
        bucket_name:
          title: Bucket Name
          description: The bucket name
          type: string
          example: bucket
        additional_settings:
          title: Additional Settings
          description: The additional settings of this target
          type: object
          default: {}
          example:
            key: value
          nullable: true
        schema_name:
          title: Schema Name
          description: The schema name of this target
          type: string
          example: Schema 1
          nullable: true
      type: object
      required:
        - loading_method
      x-konfig-properties:
        loading_method:
          description: The loading method of this target
          example: merge
    RestoreRiverVersionInput:
      title: RestoreRiverVersionInput
      description: Input for restoring a river version
      properties:
        version_id:
          title: Version Id
          description: The id of the version to restore.
          type: string
          example: 5f7d4270fdca16cac18261
      type: object
      required:
        - version_id
    RiverActivityRun:
      title: RiverActivityRun
      description: A run
      properties:
        run_id:
          title: Run Id
          description: The run ID
          type: string
          example: 5658a1c9ea724ee59f048cbb5a6f734a
        datasource_id:
          title: Datasource Id
          description: The datasource ID
          type: string
          example: mysql
        error_description:
          title: Error Description
          description: The error description if any
          type: string
          example: error
          nullable: true
        units:
          title: Units
          description: Total RPU (units)
          type: number
          example: 2.1
        rpu:
          title: Rpu
          description: Total RPU
          type: number
          example: 2.1
        run_group_id:
          title: Run Group Id
          description: The run group id
          type: string
          example: 201dcf8182ad4a59868cb41b957fdc8d
        status:
          $ref: '#/components/schemas/ActivityStatusEnum'
        source_name:
          title: Source Name
          description: The name of the source
          type: string
          example: mysql
        target_name:
          title: Target Name
          description: The target table name
          type: string
          example: table
          nullable: true
        start_date_utc:
          title: Start Date Utc
          description: >-
            The start date time in UTC timezone.Time format
            YYYY-MM-DDThh:mm:ss.ms
          type: string
          format: date-time
          example: '2022-07-25T18:38:55.640Z'
        start_date_in_milliseconds:
          title: Start Date In Milliseconds
          description: The start epoch in milliseconds.
          type: integer
          example: 1658774335000
        end_date_utc:
          title: End Date Utc
          description: The end date time in UTC timezone.Time format YYYY-MM-DDThh:mm:ss.ms
          type: string
          format: date-time
          example: '2022-07-25T18:38:55.640Z'
          nullable: true
        end_date_in_milliseconds:
          title: End Date In Milliseconds
          description: The end epoch in milliseconds.
          type: integer
          example: 1658774335000
          nullable: true
        sub_river_id:
          title: Sub River Id
          description: The sub river id
          type: string
          example: 507f191e810c19729de860ea
          nullable: true
        is_sub_river_run:
          title: Is Sub River Run
          description: A flag that indicates whether this run is of a sub river or not
          type: boolean
          example: false
      type: object
      required:
        - run_id
        - datasource_id
        - units
        - rpu
        - run_group_id
        - status
        - source_name
        - start_date_utc
        - start_date_in_milliseconds
        - is_sub_river_run
    RiverActivityRunGroup:
      title: RiverActivityRunGroup
      description: The run group details
      properties:
        run_group_id:
          title: Run Group Id
          description: The run group id
          type: string
          example: 201dcf8182ad4a59868cb41b957fdc8d
        status:
          title: Status
          type: string
        units:
          title: Units
          description: Total RPU (units)
          type: number
          example: 2.1
        rpu:
          title: Rpu
          description: Total RPU
          type: number
          example: 2.1
        max_duration_in_milliseconds:
          title: Max Duration In Milliseconds
          type: integer
        run_date_epoch_milliseconds:
          title: Run Date Epoch Milliseconds
          type: integer
        run_date_utc:
          title: Run Date Utc
          type: string
          format: date-time
        run_end_date_epoch_milliseconds:
          title: Run End Date Epoch Milliseconds
          description: The end epoch in milliseconds.
          type: integer
          example: 1658774335000
          nullable: true
        run_end_date_utc:
          title: Run End Date Utc
          description: The end date time in UTC timezone.Time format YYYY-MM-DDThh:mm:ss.ms
          type: string
          format: date-time
          example: '2022-07-25T18:38:55.640Z'
          nullable: true
      type: object
      required:
        - run_group_id
        - status
        - run_date_epoch_milliseconds
        - run_date_utc
    RiverActivityRunGroupResponse:
      title: RiverActivityRunGroupResponse
      description: The response for the activity run groups
      properties:
        next_page:
          title: Next Page
          description: The next page URL
          type: string
          nullable: true
        previous_page:
          title: Previous Page
          description: The previous page URL
          type: string
          nullable: true
        page:
          title: Page
          description: The page number
          type: integer
          default: 1
        current_page_size:
          title: Current Page Size
          description: The current page size
          type: integer
        total_items:
          title: Total Items
          description: The total number of entities fetched
          type: integer
          default: 0
        account_id:
          title: Account Id
          description: The account id
          type: string
        environment_id:
          title: Environment Id
          description: The environment id
          type: string
        items:
          title: Items
          items:
            $ref: '#/components/schemas/RiverActivityRunGroup'
          type: array
        river_cross_id:
          title: River Cross Id
          type: string
      type: object
      required:
        - current_page_size
        - account_id
        - environment_id
        - items
        - river_cross_id
    RiverActivityRunGroupWithStatistics:
      title: RiverActivityRunGroupWithStatistics
      description: The run group details with statistics
      properties:
        run_group_id:
          title: Run Group Id
          description: The run group id
          type: string
          example: 201dcf8182ad4a59868cb41b957fdc8d
        status:
          title: Status
          type: string
        units:
          title: Units
          description: Total RPU (units)
          type: number
          example: 2.1
        rpu:
          title: Rpu
          description: Total RPU
          type: number
          example: 2.1
        max_duration_in_milliseconds:
          title: Max Duration In Milliseconds
          type: integer
        run_date_epoch_milliseconds:
          title: Run Date Epoch Milliseconds
          type: integer
        run_date_utc:
          title: Run Date Utc
          type: string
          format: date-time
        run_end_date_epoch_milliseconds:
          title: Run End Date Epoch Milliseconds
          description: The end epoch in milliseconds.
          type: integer
          example: 1658774335000
          nullable: true
        run_end_date_utc:
          title: Run End Date Utc
          description: The end date time in UTC timezone.Time format YYYY-MM-DDThh:mm:ss.ms
          type: string
          format: date-time
          example: '2022-07-25T18:38:55.640Z'
          nullable: true
        running:
          title: Running
          type: integer
        canceled:
          title: Canceled
          type: integer
        pending:
          title: Pending
          type: integer
        failed:
          title: Failed
          type: integer
        succeeded:
          title: Succeeded
          type: integer
        skipped:
          title: Skipped
          type: integer
      type: object
      required:
        - run_group_id
        - status
        - run_date_epoch_milliseconds
        - run_date_utc
        - running
        - canceled
        - pending
        - failed
        - succeeded
        - skipped
    RiverActivityRunLogicStepsLogsResponse:
      title: RiverActivityRunLogicStepsLogsResponse
      description: run's logic step logs
      properties:
        logs_url:
          title: Logs Url
          type: string
      type: object
      required:
        - logs_url
    RiverActivityRunLogicStepsResponse:
      title: RiverActivityRunLogicStepsResponse
      description: run's logic step
      properties:
        account_id:
          title: Account Id
          type: string
        environment_id:
          title: Environment Id
          type: string
        river_cross_id:
          title: River Cross Id
          type: string
        run_id:
          title: Run Id
          type: string
        steps:
          title: Steps
          additionalProperties:
            $ref: '#/components/schemas/LogicStep'
          type: object
      type: object
      required:
        - account_id
        - environment_id
        - river_cross_id
        - run_id
        - steps
    RiverActivityRunsResponse:
      title: RiverActivityRunsResponse
      description: The activity run response
      properties:
        next_page:
          title: Next Page
          description: The next page URL
          type: string
          nullable: true
        previous_page:
          title: Previous Page
          description: The previous page URL
          type: string
          nullable: true
        page:
          title: Page
          description: The page number
          type: integer
          default: 1
        current_page_size:
          title: Current Page Size
          description: The current page size
          type: integer
        total_items:
          title: Total Items
          description: The total number of entities fetched
          type: integer
          default: 0
        account_id:
          title: Account Id
          description: The account id
          type: string
        environment_id:
          title: Environment Id
          description: The environment id
          type: string
        items:
          title: Items
          items:
            $ref: '#/components/schemas/RiverActivityRun'
          type: array
        river_cross_id:
          title: River Cross Id
          type: string
      type: object
      required:
        - current_page_size
        - account_id
        - environment_id
        - items
        - river_cross_id
    RiverActivityStatisticResponse:
      title: RiverActivityStatisticResponse
      description: Statistics response
      properties:
        account_id:
          title: Account Id
          type: string
        environment_id:
          title: Environment Id
          type: string
        total_units:
          title: Total Units
          description: Total RPU (units)
          type: number
          example: 2.1
        total_rpu:
          title: Total Rpu
          description: Total RPU
          type: number
          example: 2.1
        running:
          title: Running
          type: integer
        canceled:
          title: Canceled
          type: integer
        pending:
          title: Pending
          type: integer
        failed:
          title: Failed
          type: integer
        succeeded:
          title: Succeeded
          type: integer
        skipped:
          title: Skipped
          type: integer
        river_cross_id:
          title: River Cross Id
          type: string
      type: object
      required:
        - account_id
        - environment_id
        - total_units
        - total_rpu
        - running
        - canceled
        - pending
        - failed
        - succeeded
        - skipped
        - river_cross_id
    RiverActivitySubRiver:
      title: RiverActivitySubRiver
      description: Activity's sub river
      properties:
        sub_river_id:
          title: Sub River Id
          type: string
        sub_river_name:
          title: Sub River Name
          type: string
      type: object
      required:
        - sub_river_id
        - sub_river_name
    RiverActivitySubRiverResponse:
      title: RiverActivitySubRiverResponse
      description: The response of the sub river
      properties:
        items:
          title: Items
          items:
            $ref: '#/components/schemas/RiverActivitySubRiver'
          type: array
        account_id:
          title: Account Id
          type: string
        environment_id:
          title: Environment Id
          type: string
        river_cross_id:
          title: River Cross Id
          type: string
      type: object
      required:
        - items
        - account_id
        - environment_id
        - river_cross_id
    RiverActivityTarget:
      title: RiverActivityTarget
      description: The activity target
      properties:
        target_name:
          title: Target Name
          type: string
        status:
          $ref: '#/components/schemas/ActivityStatusEnum'
        units:
          title: Units
          description: Total RPU (units)
          type: number
          example: 2.1
        rpu:
          title: Rpu
          description: Total RPU
          type: number
          example: 2.1
        last_run:
          title: Last Run
          type: string
          format: date-time
      type: object
      required:
        - target_name
        - status
        - units
        - rpu
        - last_run
    RiverActivityTargetResponse:
      title: RiverActivityTargetResponse
      description: Target response
      properties:
        items:
          title: Items
          items:
            $ref: '#/components/schemas/RiverActivityTarget'
          type: array
        account_id:
          title: Account Id
          type: string
        environment_id:
          title: Environment Id
          type: string
        river_cross_id:
          title: River Cross Id
          type: string
      type: object
      required:
        - items
        - account_id
        - environment_id
        - river_cross_id
    RiverFileZoneSettings:
      title: RiverFileZoneSettings
      description: River File zone settings properties to return.
      properties:
        path:
          title: Path
          description: The path of the file zone entity.
          type: string
          example: my_path
        bucket_name:
          title: Bucket Name
          description: The bucket name of the file zone entity.
          type: string
          example: my_bucket
          nullable: true
        partitioned_kind:
          $ref: '#/components/schemas/PartitionedKindEnum'
      type: object
      required:
        - path
        - partitioned_kind
      x-konfig-properties:
        partitioned_kind:
          description: The partitioned kind of the file zone entity.
          example: by_day
    RiverKindEnum:
      title: RiverKindEnum
      description: River kind
      type: string
      enum:
        - sub_river
        - main_river
    RiverListResponse:
      title: RiverListResponse
      description: List rivers response object.
      properties:
        next_page:
          title: Next Page
          description: The next page URL
          type: string
          nullable: true
        previous_page:
          title: Previous Page
          description: The previous page URL
          type: string
          nullable: true
        page:
          title: Page
          description: The page number
          type: integer
          default: 1
        current_page_size:
          title: Current Page Size
          description: The current page size
          type: integer
        total_items:
          title: Total Items
          description: The total number of entities fetched
          type: integer
          default: 0
        account_id:
          title: Account Id
          description: The account id
          type: string
        environment_id:
          title: Environment Id
          description: The environment id
          type: string
        items:
          title: Items
          items:
            $ref: '#/components/schemas/ListRiverObject'
          type: array
      type: object
      required:
        - current_page_size
        - account_id
        - environment_id
        - items
    RiverMetadata:
      title: RiverMetadata
      description: River metadata properties for the CREATE
      properties:
        description:
          title: Description
          description: The description of the river.
          type: string
          default: ''
          example: River 1 description
        river_status:
          $ref: '#/components/schemas/RiverStatusEnum'
      type: object
      x-konfig-properties:
        river_status:
          description: The status of the river.
          default: disabled
          example: active
    RiverMetadataExtended:
      title: RiverMetadataExtended
      description: Extended RiverMetadata to be returned with the GET
      properties:
        description:
          title: Description
          description: The description of the river.
          type: string
          default: ''
          example: River 1 description
        river_status:
          $ref: '#/components/schemas/RiverStatusEnum'
        current_version_id:
          title: Current Version Id
          description: The current version ID of the river.
          type: string
          example: 5f4d3b3d9f9c8b0001f6b0e6
          nullable: true
        created_by:
          title: Created By
          description: The User that created the river.
          type: string
          example: SomeUser
        last_updated_by:
          title: Last Updated By
          description: The User that last updated the river.
          type: string
          example: SomeUser
        created_at:
          title: Created At
          description: The date the river was created.
          type: string
          format: date-time
          example: '2020-09-01T00:00:00Z'
        last_updated_at:
          title: Last Updated At
          description: The date the river was last updated.
          type: string
          format: date-time
          example: '2020-09-01T12:00:00.000Z'
      type: object
      required:
        - last_updated_by
        - created_at
        - last_updated_at
      x-konfig-properties:
        river_status:
          description: The status of the river.
          default: disabled
          example: active
    RiverModel:
      title: RiverModel
      description: River properties to return
      properties:
        cross_id:
          title: Cross Id
          description: The river cross id.
          type: string
          example: 62e7f4352c13160013dc39be
        account_id:
          title: Account Id
          description: The account id.
          type: string
          example: 62e7f4352c13160013dc39be
        kind:
          $ref: '#/components/schemas/RiverKindEnum'
        type:
          $ref: '#/components/schemas/RiverTypeEnum'
        name:
          title: Name
          description: The name of the river.
          type: string
          example: my_river
        environment_id:
          title: Environment Id
          description: The environment cross id.
          type: string
          example: 62e7f4352c13160013dc39be
        environment_name:
          title: Environment Name
          description: The environment name.
          type: string
          example: my_environment
        group_id:
          title: Group Id
          description: The group id.
          type: string
          example: 62e7f4352c13160013dc39be
        group_name:
          title: Group Name
          description: The group name.
          type: string
          example: my_group
        metadata:
          $ref: '#/components/schemas/RiverMetadataExtended'
        properties:
          title: Properties
          description: The river properties, will change according to the river type.
          oneOf:
            - $ref: '#/components/schemas/SourceToTargetRiverProperties'
            - $ref: '#/components/schemas/ActionProperties'
            - $ref: '#/components/schemas/LogicProperties'
          discriminator:
            propertyName: properties_type
            mapping:
              source_to_target: '#/components/schemas/SourceToTargetRiverProperties'
              actions: '#/components/schemas/ActionProperties'
              logic: '#/components/schemas/LogicProperties'
        settings:
          title: Settings
          description: River settings.
          allOf:
            - $ref: '#/components/schemas/RiverSettings'
          nullable: true
        schedulers:
          title: Schedulers
          description: River schedulers.
          items:
            $ref: '#/components/schemas/RiverSchedule'
          type: array
          default: []
          nullable: true
      type: object
      required:
        - cross_id
        - account_id
        - type
        - name
        - environment_id
        - environment_name
        - group_id
        - group_name
        - metadata
        - properties
      x-konfig-properties:
        kind:
          description: The kind of the river.
          default: main_river
          example: main_river
        type:
          description: The type of the river.
          example: source_to_target
        metadata:
          title: Metadata
          description: The river metadata.
    RiverNotificationReport:
      title: RiverNotificationReport
      description: |-
        River Notification Report properties
            
      properties:
        email:
          title: Email
          description: Email address to send the report to in case of failure.
          type: string
          example: test@test.com
        is_enabled:
          title: Is Enabled
          description: A flag that indicates whether the notification is enabled.
          type: boolean
          default: false
          example: true
        execution_time_limit_seconds:
          title: Execution Time Limit Seconds
          description: >-
            The execution time limit in seconds of the river before reporting,
            only relevant for on run_threshold.
          type: integer
          example: 43200
          nullable: true
      type: object
      required:
        - email
    RiverRunResponse:
      title: RiverRunResponse
      description: Run properties to return
      properties:
        sub_river_id:
          title: Sub River Id
          description: The river cross id
          type: string
          example: 62e7f4352c13160013dc39be
          nullable: true
        run_id:
          title: Run Id
          description: The run id of the run process
          type: string
          example: 1f1468d097754cd8892468c2763ebfe8
        status:
          $ref: '#/components/schemas/ActivityStatusEnum'
        message:
          title: Message
          description: the message of the run process
          type: string
          example: The river is already in progress.
          nullable: true
      type: object
      required:
        - run_id
        - status
      x-konfig-properties:
        status:
          description: the status of the run process
          example: pending
    RiverSchedule:
      title: RiverSchedule
      description: |-
        River schedule properties to return.
            
      properties:
        cron_expression:
          title: Cron Expression
          description: The cron expression of the river entity.
          type: string
          example: '* * * * *'
          nullable: true
        is_enabled:
          title: Is Enabled
          description: The is enabled of the river.
          type: boolean
          default: false
          example: true
      type: object
    RiverScheduleStatusEnum:
      title: RiverScheduleStatusEnum
      description: River schedule status enum
      type: string
      enum:
        - all
        - scheduled
        - unscheduled
    RiverSettings:
      title: RiverSettings
      description: |-
        River settings properties to return.
            
      properties:
        run_timeout_seconds:
          title: Run Timeout Seconds
          description: The timeout of the river in seconds.
          type: integer
          default: 43200
          example: 43200
        notification:
          title: Notification
          description: River notification settings.
          allOf:
            - $ref: '#/components/schemas/NotificationSettings'
          nullable: true
      type: object
    RiverStatusEnum:
      title: RiverStatusEnum
      description: >-
        River status enum.

        Used in the is_enabled field which is part of the river properties.

        Disabled status for a river means the river cannot be executed while
        active status river can.
      type: string
      enum:
        - active
        - disabled
    RiverTablesMigrationDefaultSyncOption:
      title: RiverTablesMigrationDefaultSyncOption
      description: >-
        Each river can have a few options when it comes to migration of tables

        1. skip_initial_migration: will mean that the tables will inherit the
        status from the river and skip the migration

        2. run_initial_migration: (default for most cases) will mean that tables
        will fully migrate in the first run
      type: string
      enum:
        - SKIP_INITIAL_MIGRATION
        - RUN_INITIAL_MIGRATION
    RiverTimePeriodEnum:
      title: RiverTimePeriodEnum
      description: River supported time periods
      type: string
      enum:
        - custom
        - yesterday
        - today
        - last_7_days
        - last_365_days
        - week_to_date
        - previous_week
        - previous_week_to_date
        - last_week
        - month_to_date
        - previous_month
        - previous_month_to_date
        - year_to_date
    RiverTypeEnum:
      title: RiverTypeEnum
      description: All of the EXTERNAL river types
      type: string
      enum:
        - src_to_trgt
        - source_to_target
        - actions
        - logic
    RiverVariableSettings:
      title: RiverVariableSettings
      description: |-
        Variable settings fields.
            
      properties:
        clear_value_on_start:
          title: Clear Value On Start
          description: Option for clearing variable on river start
          type: boolean
          default: false
          example: false
        is_multi_value:
          title: Is Multi Value
          description: Indicator for variable containing multiple values
          type: boolean
          default: false
          example: false
        is_encrypted:
          title: Is Encrypted
          description: Option for encrypting variable value
          type: boolean
          default: false
          example: true
        is_private:
          title: Is Private
          description: Option for private variable value in source to target rivers
          type: boolean
          default: false
          example: false
        add_to_results:
          title: Add To Results
          description: Add variables to results for actions river
          type: boolean
          example: false
      type: object
    RiverVariablesFields:
      title: RiverVariablesFields
      description: |-
        River variable properties to return.
            
      properties:
        account:
          title: Account
          description: The account of the river
          type: string
          example: 55fr7d4270fdca16cac18261
        env_id:
          title: Env Id
          description: The environment of the river
          type: string
          example: 55fr7d4270fdca16cac18261
        river_id:
          title: River Id
          description: The ID of the river
          type: string
          example: 55fr7d4270fdca16cac18261
        name:
          title: Name
          description: The name of the variable
          type: string
          example: credentials
        settings:
          title: Settings
          description: variable settings
          type: object
          example:
            clear_value_on_start: true
            is_multi_value: false
            is_private: false
            is_encrypted: false
        value:
          title: Value
          description: value of variable
          anyOf:
            - type: string
            - items: {}
              type: array
          example: '1234'
      type: object
      required:
        - account
        - env_id
        - river_id
        - name
        - settings
    RiverVariablesPaginatedResponse:
      title: RiverVariablesPaginatedResponse
      description: >-
        Final river variables paginated response for all variables in a single
        river.
            
      properties:
        next_page:
          title: Next Page
          description: The next page URL
          type: string
          nullable: true
        previous_page:
          title: Previous Page
          description: The previous page URL
          type: string
          nullable: true
        page:
          title: Page
          description: The page number
          type: integer
          default: 1
        current_page_size:
          title: Current Page Size
          description: The current page size
          type: integer
        total_items:
          title: Total Items
          description: The total number of entities fetched
          type: integer
          default: 0
        account_id:
          title: Account Id
          description: The account id
          type: string
        environment_id:
          title: Environment Id
          description: The environment id
          type: string
        items:
          title: Items
          items:
            $ref: '#/components/schemas/RiverVariablesFields'
          type: array
      type: object
      required:
        - current_page_size
        - account_id
        - environment_id
        - items
    RiverVersionMetadata:
      title: RiverVersionMetadata
      description: |-
        River Versions metadata. This class does not contain the version itself.
            
      properties:
        account_id:
          title: Account Id
          description: The account id of the river version
          type: string
          example: 55fr7d4270fdca16cac18261
        user_info:
          title: User Info
          description: Contains user name and user email information
          allOf:
            - $ref: '#/components/schemas/UserInfo'
          nullable: true
        environment_id:
          title: Environment Id
          description: The environment id of the river version
          type: string
          example: 55fr7d4270fdca16cac18261
        insert_date:
          title: Insert Date
          description: The insert date time of the river version in UTC timezone
          type: string
          format: date-time
          example: '2022-08-02T13:38:44.054000'
        version_id:
          title: Version Id
          description: The version id of the river version
          type: string
          example: 55fr7d4270fdca16cac18261
        previous_version:
          title: Previous Version
          description: The previous version id of the river version
          type: string
          example: 55fr7d4270fdca16cac18261
        created_by:
          title: Created By
          description: The creator id of the river version
          type: string
          example: 55fr7d4270fdca16cac18261
        river_id:
          title: River Id
          description: The river id of the river version
          type: string
          example: 55fr7d4270fdca16cac18261
        restored_by:
          title: Restored By
          description: The restore id of the river version
          type: string
          example: 55fr7d4270fdca16cac18261
        restore_date:
          title: Restore Date
          description: The restore date time of the river version in UTC timezone
          type: string
          format: date-time
          example: '2022-08-02T13:38:44.054000'
          nullable: true
        name:
          title: Name
          description: Name of river version
          type: string
          example: river_version_name
        bookmarked:
          title: Bookmarked
          description: Flag indicating whether the river version is bookmarked or not
          type: boolean
          default: false
          example: false
      type: object
      required:
        - account_id
        - environment_id
        - insert_date
        - version_id
        - created_by
        - river_id
    RiverVersions:
      title: RiverVersions
      description: |-
        River Versions properties to return.
            
      properties:
        account_id:
          title: Account Id
          description: The account id of the river version
          type: string
          example: 55fr7d4270fdca16cac18261
        user_info:
          title: User Info
          description: Contains user name and user email information
          allOf:
            - $ref: '#/components/schemas/UserInfo'
          nullable: true
        environment_id:
          title: Environment Id
          description: The environment id of the river version
          type: string
          example: 55fr7d4270fdca16cac18261
        insert_date:
          title: Insert Date
          description: The insert date time of the river version in UTC timezone
          type: string
          format: date-time
          example: '2022-08-02T13:38:44.054000'
        version_id:
          title: Version Id
          description: The version id of the river version
          type: string
          example: 55fr7d4270fdca16cac18261
        previous_version:
          title: Previous Version
          description: The previous version id of the river version
          type: string
          example: 55fr7d4270fdca16cac18261
        created_by:
          title: Created By
          description: The creator id of the river version
          type: string
          example: 55fr7d4270fdca16cac18261
        river_id:
          title: River Id
          description: The river id of the river version
          type: string
          example: 55fr7d4270fdca16cac18261
        restored_by:
          title: Restored By
          description: The restore id of the river version
          type: string
          example: 55fr7d4270fdca16cac18261
        restore_date:
          title: Restore Date
          description: The restore date time of the river version in UTC timezone
          type: string
          format: date-time
          example: '2022-08-02T13:38:44.054000'
          nullable: true
        name:
          title: Name
          description: Name of river version
          type: string
          example: river_version_name
        bookmarked:
          title: Bookmarked
          description: Flag indicating whether the river version is bookmarked or not
          type: boolean
          default: false
          example: false
        river:
          title: River
          description: The definition of the river version
          anyOf:
            - $ref: '#/components/schemas/LegacyRiverResponse'
            - $ref: '#/components/schemas/RiverModel'
          example:
            river definition: some definition
      type: object
      required:
        - account_id
        - environment_id
        - insert_date
        - version_id
        - created_by
        - river_id
        - river
    RiverVersionsResponse:
      title: RiverVersionsResponse
      description: |-
        River Versions response.
            
      properties:
        next_page:
          title: Next Page
          description: The next page URL
          type: string
          nullable: true
        previous_page:
          title: Previous Page
          description: The previous page URL
          type: string
          nullable: true
        page:
          title: Page
          description: The page number
          type: integer
          default: 1
        current_page_size:
          title: Current Page Size
          description: The current page size
          type: integer
        total_items:
          title: Total Items
          description: The total number of entities fetched
          type: integer
          default: 0
        account_id:
          title: Account Id
          description: The account id
          type: string
        environment_id:
          title: Environment Id
          description: The environment id
          type: string
        statistics:
          $ref: '#/components/schemas/RiverVersionsStats'
        items:
          title: Items
          items:
            $ref: '#/components/schemas/RiverVersionMetadata'
          type: array
      type: object
      required:
        - current_page_size
        - account_id
        - environment_id
        - statistics
        - items
    RiverVersionsStats:
      title: RiverVersionsStats
      description: |-
        River versions stats fields.
            
      properties:
        bookmarked_versions:
          title: Bookmarked Versions
          description: Number of bookmarked river versions
          type: integer
          example: 3
        bookmarks_allowed:
          title: Bookmarks Allowed
          description: Maximum number of bookmarked river versions allowed
          type: integer
          example: 30
        total_versions:
          title: Total Versions
          description: Total number of existing river versions
          type: integer
          example: 3
        snapshot_versions:
          title: Snapshot Versions
          description: Number of snapshot river versions
          type: integer
          example: 2
        versions_allowed:
          title: Versions Allowed
          description: Maximum number of non-bookmarked river versions allowed
          type: integer
          example: 70
      type: object
      required:
        - bookmarked_versions
        - bookmarks_allowed
        - total_versions
        - snapshot_versions
        - versions_allowed
    RiversRunResponse:
      title: RiversRunResponse
      description: >-
        Run response properties to return

        The response is a list since in the case of sub rivers that are multiple
        runs,

        and we want to be able to return them all
      properties:
        runs:
          title: Runs
          items:
            $ref: '#/components/schemas/RiverRunResponse'
          type: array
        river_cross_id:
          title: River Cross Id
          type: string
        run_group_id:
          title: Run Group Id
          type: string
      type: object
      required:
        - runs
        - river_cross_id
        - run_group_id
    RunGroupSortByEnum:
      title: RunGroupSortByEnum
      description: Activities sort properties in the UI.
      type: string
      enum:
        - units
        - last_run
        - max_duration
    RunGroupStatusEnum:
      title: RunGroupStatusEnum
      description: The run group enum provide all the status that run group can have.
      type: string
      enum:
        - partially succeeded
        - pending
        - canceled
        - succeeded
        - failed
        - running
        - skipped
    RunTypeEnum:
      title: RunTypeEnum
      description: River run types
      type: string
      enum:
        - custom
        - multi_tables
        - legacy
        - predefined_report
    RunningNumber:
      title: RunningNumber
      description: >-
        Running number when using incremental on a running number and not date
        time
      properties:
        start_value:
          title: Start Value
          description: The start value of the river entity.
          type: integer
          example: 1
          nullable: true
        end_value:
          title: End Value
          description: The end value of the river entity.
          type: integer
          example: 100
          nullable: true
        include_end_value:
          title: Include End Value
          description: >-
            Whether to include or exclude the end_value in the running number
            range
          type: boolean
          default: false
          example: true
        rows_in_chunk:
          title: Rows In Chunk
          description: The rows in chunk of the river entity.
          type: integer
          default: 100000
          example: 1000
      type: object
    RunsSortByEnum:
      title: RunsSortByEnum
      description: Activities sort properties in the UI.
      type: string
      enum:
        - units
        - start_time
        - table_name
    S3ModifiedColumn:
      title: S3ModifiedColumn
      description: S3 specific columns settings
      properties:
        is_selected:
          title: Is Selected
          description: If the column is selected and should be modified.
          type: boolean
          example: true
        name:
          title: Name
          description: The name of the column.
          type: string
          example: column_name
        type:
          title: Type
          description: The type of the column.
          type: string
          example: string
          nullable: true
        alias:
          title: Alias
          description: The alias of the column in the target table.
          type: string
          example: column_alias
          nullable: true
        expression:
          title: Expression
          description: >-
            This tells us the column is an expression or not so we know if it
            suppose to exist in the source / target or is it auto generated.
          type: string
          example: select 'test'
          nullable: true
        is_key:
          title: Is Key
          description: If the column is a key.
          type: boolean
          example: true
          nullable: true
        sort_order:
          title: Sort Order
          description: >-
            The sort order of the column (number), sort order are used in the
            merge process to determine the order of the merge keys.
          type: integer
          example: 1
          nullable: true
        is_sort_key:
          title: Is Sort Key
          description: If the column is a sort column.
          type: boolean
          example: true
          nullable: true
        calculated_column_mode:
          description: >-
            The mode of the calculated column.Help to identify if the column is
            source expression or target expression,required if the column is an
            expression.
          allOf:
            - $ref: '#/components/schemas/CalculatedColumnModeEnum'
          example: source
          nullable: true
        order:
          title: Order
          description: >-
            The order of the column in the expression,required if the column is
            an expression.
          type: integer
          example: 1
          nullable: true
        target_type:
          title: Target Type
          description: Internal field, populated automatically
          type: string
          enum:
            - s3
          default: s3
          nullable: true
      type: object
      required:
        - is_selected
        - name
    S3TargetSettings:
      title: S3TargetSettings
      description: S3 target settings properties to return.
      properties:
        name:
          title: Name
          description: The name of the target
          type: string
          enum:
            - s3
          default: s3
        connection_id:
          title: Connection Id
          description: The connection ID of this target
          type: string
          example: 5f4d3b3d9f9c8b0001f6b0e6
          nullable: true
        connection_name:
          title: Connection Name
          description: The connection name of this target
          type: string
          example: Connection 1
          nullable: true
        path:
          title: Path
          description: The path of the file zone entity.
          type: string
          example: my_path
        bucket_name:
          title: Bucket Name
          description: The bucket name of the file zone entity.
          type: string
          example: my_bucket
        partitioned_kind:
          $ref: '#/components/schemas/PartitionedKindEnum'
        convert_file_type:
          description: The type of file to convert to
          allOf:
            - $ref: '#/components/schemas/ConvertFileTypeEnum'
          example: parquet
          nullable: true
      type: object
      required:
        - path
        - bucket_name
        - partitioned_kind
      x-konfig-properties:
        partitioned_kind:
          description: The partitioned kind of the file zone entity.
          example: by_day
    ScheduleEnum:
      title: ScheduleEnum
      description: Schedule can be either True or False (enabled or disabled)
      type: string
      enum:
        - 'true'
        - 'false'
    Schema:
      title: Schema
      description: The schema we use for GET operations
      properties:
        name:
          title: Name
          description: The name of the schema
          type: string
        tables:
          title: Tables
          items:
            oneOf:
              - $ref: '#/components/schemas/DatabaseTableInput'
              - $ref: '#/components/schemas/PredefinedReportShopifyTableInput'
            discriminator:
              propertyName: run_type_and_datasource
              mapping:
                multi_tables: '#/components/schemas/DatabaseTableInput'
                predefined_report_shopify: '#/components/schemas/PredefinedReportShopifyTableInput'
          type: array
          default: []
      type: object
      required:
        - name
    SnowflakeAdditionalTargetSettings:
      title: SnowflakeAdditionalTargetSettings
      description: Snowflake specific target settings
      properties:
        is_ordered_merge_key:
          title: Is Ordered Merge Key
          description: >-
            If the table got any and should consider filter out duplicates data
            between source filemerge process(by order).
          type: boolean
          default: false
          example: true
        order_expression:
          title: Order Expression
          description: >-
            The order expression of the river entity,to filter duplications from
            the source data by the provided order expression (for `merge`
            loading method).
          type: string
          example: id desc,createDate asc
          nullable: true
        target_loading:
          description: >-
            The target loading of the table entity,if not specified the default
            loading mode of the riverwill be used.
          allOf:
            - $ref: '#/components/schemas/LoadingMode'
          example: merge
          nullable: true
        target_type:
          title: Target Type
          description: Internal field, populated automatically
          type: string
          enum:
            - snowflake
          default: snowflake
          nullable: true
        merge_method:
          description: >-
            The merge method of the table, if not specified the default merge
            method of the riverwill be used.
          allOf:
            - $ref: '#/components/schemas/MergeMethod'
          example: merge
          nullable: true
        enforce_masking_policy:
          title: Enforce Masking Policy
          description: >-
            Reserve the data masking policy that is applied on the column level
            in your target table.
          type: boolean
          default: false
          example: false
          nullable: true
        recreate_keys:
          title: Recreate Keys
          description: Recreate the table keys.
          type: boolean
          default: false
          example: false
          nullable: true
        escape_character:
          title: Escape Character
          description: >-
            Escape characters allow special characters in strings to be
            interpreted as literal characters, rather than as control characters
            inside the query
          type: string
          example: \t
          nullable: true
      type: object
    SnowflakeModifiedColumn:
      title: SnowflakeModifiedColumn
      description: Snowflake specific columns settings
      properties:
        is_selected:
          title: Is Selected
          description: If the column is selected and should be modified.
          type: boolean
          example: true
        name:
          title: Name
          description: The name of the column.
          type: string
          example: column_name
        type:
          title: Type
          description: The type of the column.
          type: string
          example: string
          nullable: true
        alias:
          title: Alias
          description: The alias of the column in the target table.
          type: string
          example: column_alias
          nullable: true
        expression:
          title: Expression
          description: >-
            This tells us the column is an expression or not so we know if it
            suppose to exist in the source / target or is it auto generated.
          type: string
          example: select 'test'
          nullable: true
        is_key:
          title: Is Key
          description: If the column is a key.
          type: boolean
          example: true
          nullable: true
        sort_order:
          title: Sort Order
          description: >-
            The sort order of the column (number), sort order are used in the
            merge process to determine the order of the merge keys.
          type: integer
          example: 1
          nullable: true
        is_sort_key:
          title: Is Sort Key
          description: If the column is a sort column.
          type: boolean
          example: true
          nullable: true
        calculated_column_mode:
          description: >-
            The mode of the calculated column.Help to identify if the column is
            source expression or target expression,required if the column is an
            expression.
          allOf:
            - $ref: '#/components/schemas/CalculatedColumnModeEnum'
          example: source
          nullable: true
        order:
          title: Order
          description: >-
            The order of the column in the expression,required if the column is
            an expression.
          type: integer
          example: 1
          nullable: true
        target_type:
          title: Target Type
          description: Internal field, populated automatically
          type: string
          enum:
            - snowflake
          default: snowflake
          nullable: true
      type: object
      required:
        - is_selected
        - name
    SnowflakeTargetSettings:
      title: SnowflakeTargetSettings
      description: Snowflake target settings properties to return.
      properties:
        name:
          title: Name
          description: The name of the target
          type: string
          enum:
            - snowflake
          default: snowflake
        connection_id:
          title: Connection Id
          description: The connection ID of this target
          type: string
          example: 5f4d3b3d9f9c8b0001f6b0e6
          nullable: true
        connection_name:
          title: Connection Name
          description: The connection name of this target
          type: string
          example: Connection 1
          nullable: true
        table_name:
          title: Table Name
          description: >-
            The table name of this target (only relevant for non multi table
            source to target rivers)
          type: string
          default: ''
          example: Table 1
          nullable: true
        target_prefix:
          title: Target Prefix
          description: >-
            The table prefix of this target (only relevant for multi table
            source to target rivers)
          type: string
          default: ''
          example: start_at_
          nullable: true
        is_ordered_merge_key:
          title: Is Ordered Merge Key
          description: >-
            If the table got any and should consider filter out duplicates data
            between source filemerge process(by order).
          type: boolean
          default: false
          example: true
        order_expression:
          title: Order Expression
          description: The order expression of the river entity.
          type: string
          example: id desc,createDate asc
          nullable: true
        loading_method:
          $ref: '#/components/schemas/LoadingMode'
        merge_method:
          description: >-
            The merge method to preform,only relevant when the loading mode is
            Merge,if not provided the default merge method will be used.(merge)
          allOf:
            - $ref: '#/components/schemas/MergeMethod'
          example: merge
          nullable: true
        file_zone_settings:
          title: File Zone Settings
          description: The file zone settings of this target
          allOf:
            - $ref: '#/components/schemas/RiverFileZoneSettings'
          nullable: true
        file_path_destination:
          title: File Path Destination
          description: The file name and path
          type: string
          example: path/to/file
        bucket_name:
          title: Bucket Name
          description: The bucket name
          type: string
          example: bucket
        additional_settings:
          title: Additional Settings
          description: The additional settings of this target
          type: object
          default: {}
          example:
            key: value
          nullable: true
        database_name:
          title: Database Name
          description: The database name of this target
          type: string
          example: Database 1
          nullable: true
        schema_name:
          title: Schema Name
          description: The schema name of this target
          type: string
          example: Schema 1
          nullable: true
      type: object
      required:
        - loading_method
      x-konfig-properties:
        loading_method:
          description: The loading method of this target
          example: merge
    SortOrderEnum:
      title: SortOrderEnum
      description: Sorting can be either asc or desc, used in the api-service
      type: string
      enum:
        - desc
        - asc
    SourceSettings:
      title: SourceSettings
      description: Source settings properties to return.
      properties:
        name:
          description: The name of the source (correlate to source type in db)
          allOf:
            - $ref: '#/components/schemas/SourceTypeEnum'
          example: mysql
          nullable: true
        connection_id:
          title: Connection Id
          description: The connection ID of this source.
          type: string
          example: 5f4d3b3d9f9c8b0001f6b0e6
          nullable: true
        connection_name:
          title: Connection Name
          description: The connection name of this source.
          type: string
          example: Connection 1
          nullable: true
        run_type:
          $ref: '#/components/schemas/RunTypeEnum'
        cdc_settings:
          title: Cdc Settings
          description: The CDC settings of this source.
          oneOf:
            - $ref: '#/components/schemas/MysqlSourceCDCSettings'
            - $ref: '#/components/schemas/PostgresSourceCDCSettings'
            - $ref: '#/components/schemas/OracleSourceCDCSettings'
            - $ref: '#/components/schemas/MongoDBSourceCDCSettings'
          discriminator:
            propertyName: datasource_id
            mapping:
              mysql: '#/components/schemas/MysqlSourceCDCSettings'
              postgres: '#/components/schemas/PostgresSourceCDCSettings'
              oracle: '#/components/schemas/OracleSourceCDCSettings'
              mongodb: '#/components/schemas/MongoDBSourceCDCSettings'
          nullable: true
        additional_settings:
          title: Additional Settings
          description: The additional settings of this source.
          type: object
          default: {}
          example:
            extract_method: all
          nullable: true
      type: object
      required:
        - name
      x-konfig-properties:
        run_type:
          description: The run type of this source.
          default: multi_tables
          example: predefined_report
    SourceToTargetRiverProperties:
      title: SourceToTargetRiverProperties
      description: Source to target River properties that is being used for GET purposes
      properties:
        properties_type:
          title: Properties Type
          type: string
          enum:
            - source_to_target
          default: source_to_target
        source:
          $ref: '#/components/schemas/SourceSettings'
        target:
          title: Target
          description: The target of the river.
          oneOf:
            - $ref: '#/components/schemas/SnowflakeTargetSettings'
            - $ref: '#/components/schemas/BigQueryTargetSettings'
            - $ref: '#/components/schemas/RedshiftTargetSettings'
            - $ref: '#/components/schemas/S3TargetSettings'
            - $ref: '#/components/schemas/EmailTargetSettings'
            - $ref: '#/components/schemas/BlobStorageSettings'
            - $ref: '#/components/schemas/GcsTargetSettings'
            - $ref: '#/components/schemas/DatabricksTargetSettings'
            - $ref: '#/components/schemas/AzureSynapseAnalyticsTargetSettings'
            - $ref: '#/components/schemas/AthenaTargetSettings'
            - $ref: '#/components/schemas/AzureSqlTargetSettings'
            - $ref: '#/components/schemas/PostgresTargetSettings'
          discriminator:
            propertyName: name
            mapping:
              snowflake: '#/components/schemas/SnowflakeTargetSettings'
              bigquery: '#/components/schemas/BigQueryTargetSettings'
              redshift: '#/components/schemas/RedshiftTargetSettings'
              s3: '#/components/schemas/S3TargetSettings'
              target_email: '#/components/schemas/EmailTargetSettings'
              blob_storage: '#/components/schemas/BlobStorageSettings'
              GCS: '#/components/schemas/GcsTargetSettings'
              databricks: '#/components/schemas/DatabricksTargetSettings'
              azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsTargetSettings'
              athena: '#/components/schemas/AthenaTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlTargetSettings'
              postgres: '#/components/schemas/PostgresTargetSettings'
        schemas:
          title: Schemas
          description: The schemas of the river entity
          items:
            $ref: '#/components/schemas/Schema'
          type: array
          default: []
      type: object
      required:
        - source
        - target
      x-konfig-properties:
        source:
          title: Source
          description: The source of the river.
    SourceTypeEnum:
      title: SourceTypeEnum
      description: The source type enum provide all the source type options.
      type: string
      enum:
        - mysql
        - postgresql
        - oracle
        - mongodb
        - shopify
        - facebook ads
    SourcedMetadataModelResponse:
      title: SourcedMetadataModelResponse
      description: The response for the get source metadata.
      properties:
        title:
          title: Title
          description: The datasource title.
          type: string
          example: my title
        description:
          title: Description
          description: The datasource description.
          type: string
          example: report description
        properties:
          title: Properties
          description: The datasource fields and metadata.
          type: object
        required:
          title: Required
          description: A list of required datasource fields
          items:
            type: string
          type: array
          example:
            - id
      type: object
      required:
        - title
        - description
        - properties
    SplitTimeIntervals:
      title: SplitTimeIntervals
      description: >-
        Settings for splitting to time intervals when using incremental loading
        method by dates.
      properties:
        time_interval:
          $ref: '#/components/schemas/IntervalTimeExternalEnum'
        interval_size:
          title: Interval Size
          description: >-
            The number of time units for each interval - for example, when the
            interval is set to days and the interval size is 3, each interval
            will extract data for 3 days.
          type: integer
          default: 1
          example: 3
          extra:
            name: date_range.split_time_intervals.interval_size
            type: number
            display_name: Split Interval Size
            condition:
              different: dont_split
              field_name: date_range.split_time_intervals.time_interval
      type: object
      x-konfig-properties:
        time_interval:
          description: The interval time unit to split when using date increment.
          default: dont_split
          example: days
          extra:
            name: date_range.split_time_intervals.time_interval
            type: split_time_intervals
            display_name: >-
              Split your loading data into several intervals in case of a large
              amount of returned data by:
    StatusEnum:
      title: StatusEnum
      description: Shopify order status enum
      type: string
      enum:
        - any
        - cancelled
        - closed
        - open
    TableCDCSettings:
      title: TableCDCSettings
      description: The table CDC settings
      properties:
        initiate_table:
          title: Initiate Table
          description: Initiate migration process for CDC table
          type: boolean
          example: true
          nullable: true
        overwrite_table_in_migration:
          title: Overwrite Table In Migration
          description: Overwrite target table for CDC migration process
          type: boolean
          example: true
          nullable: true
      type: object
    TableStatusEnum:
      title: TableStatusEnum
      description: Table status for rivers in multi table mode
      type: string
      enum:
        - waiting_for_migration
        - migrating
        - tracked
        - live
    TargetsSortByEnum:
      title: TargetsSortByEnum
      description: Activities sort properties in the UI.
      type: string
      enum:
        - units
        - last_run
        - table_name
    TeamsSortByEnum:
      title: TeamsSortByEnum
      description: User teams sort properties in the UI.
      type: string
      enum:
        - display_name
        - created_at
        - source
        - is_all_environment_admin
    UpdateRiverVariableInput:
      title: UpdateRiverVariableInput
      description: |-
        Logic river variable fields for update.
            
      properties:
        name:
          title: Name
          description: The name of the variable
          type: string
          example: credentials
        settings:
          $ref: '#/components/schemas/RiverVariableSettings'
        value:
          title: Value
          description: value of a variable
          anyOf:
            - type: string
            - items: {}
              type: array
          example: '1234'
      type: object
      required:
        - name
        - settings
      x-konfig-properties:
        settings:
          title: Settings
          description: settings class for variable
          example:
            clear_value_on_start: true
            is_multi_value: false
            is_encrypted: false
    UpdateRiverVariableInputList:
      title: UpdateRiverVariableInputList
      description: |-
        List of logic river variable fields for update.
            
      properties:
        items:
          title: Items
          items:
            $ref: '#/components/schemas/UpdateRiverVariableInput'
          type: array
      type: object
      required:
        - items
    UpdateUserTeamsInput:
      title: UpdateUserTeamsInput
      description: Request update user groups input.
      properties:
        description:
          title: Description
          description: Internal description
          type: string
          example: Some description
        display_name:
          title: Display Name
          description: The display name in rivery
          type: string
          example: Rivery Core Team
        environments:
          title: Environments
          description: Dictionary of environment id and environment role
          type: object
          example:
            633ede20f1fc5500111fd7b3:
              role: viewer
            5f887c764c40e5598f717676:
              role: viewer
        is_all_environment_admin:
          title: Is All Environment Admin
          description: Indicates if group have Admin permission for all environment
          type: boolean
          default: false
          example: true
      type: object
    UserInfo:
      title: UserInfo
      description: |-
        River version creator info.
            
      properties:
        user_name:
          title: User Name
          description: river version creator username
          type: string
          example: createdby_username
        user_email:
          title: User Email
          description: river version creator email
          type: string
          example: createdby@rivery.io
      type: object
      required:
        - user_name
        - user_email
    UserTeamsListResponse:
      title: UserTeamsListResponse
      description: List user teams response
      properties:
        next_page:
          title: Next Page
          description: The next page URL
          type: string
          nullable: true
        previous_page:
          title: Previous Page
          description: The previous page URL
          type: string
          nullable: true
        page:
          title: Page
          description: The page number
          type: integer
          default: 1
        current_page_size:
          title: Current Page Size
          description: The current page size
          type: integer
        total_items:
          title: Total Items
          description: The total number of entities fetched
          type: integer
          default: 0
        account_id:
          title: Account Id
          description: The account id
          type: string
        items:
          title: Items
          items:
            $ref: '#/components/schemas/UserTeamsModel'
          type: array
      type: object
      required:
        - current_page_size
        - account_id
        - items
    UserTeamsModel:
      title: UserTeamsModel
      description: Base user team model properties to return.
      properties:
        description:
          title: Description
          description: Internal description
          type: string
          example: Some description
        _id:
          title: ' Id'
          description: The user group id
          type: string
          example: 633ede20f1fc5500111fd7b3
        account_id:
          title: Account Id
          description: The account id
          type: string
          example: 55bf7c4270fdca16cac18761
        display_name:
          title: Display Name
          description: The display name in rivery
          type: string
          example: Rivery Core Team
        remote_display_name:
          title: Remote Display Name
          description: The SCIM display name
          type: string
          example: Core Team
        environments:
          title: Environments
          description: Dictionary of environment id and environment role
          type: object
          default: {}
          example:
            633ede20f1fc5500111fd7b3:
              role: viewer
            5f887c764c40e5598f717676:
              role: viewer
        is_all_environment_admin:
          title: Is All Environment Admin
          description: Indicates if group have Admin permission for all environment
          type: boolean
          default: false
          example: true
        source:
          $ref: '#/components/schemas/GroupOrUserSourceEnum'
        created_at:
          title: Created At
          description: Created team datatime
          type: string
          format: date-time
          example: '2024-04-16T14:43:05.410714'
      type: object
      required:
        - _id
        - account_id
        - display_name
        - created_at
      x-konfig-properties:
        source:
          description: >-
            Source if this group locally of rivery or imported from external
            such as Active Directory
          default: rivery
          example: rivery
    ValidationError:
      title: ValidationError
      properties:
        loc:
          title: Location
          items:
            anyOf:
              - type: string
              - type: integer
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      type: object
      required:
        - loc
        - msg
        - type
    WriteDatabaseTableDetailsInput:
      title: WriteDatabaseTableDetailsInput
      description: |-
        Table properties which define the db table details data
        This schema is being used for Create or Update purposes
      properties:
        is_selected:
          title: Is Selected
          description: If the table is selected or not.
          type: boolean
          default: false
          example: true
        target_table:
          title: Target Table
          description: The name of the target table (relevant to multi-tables rivers)
          type: string
          example: target_table_name
        modified_columns:
          title: Modified Columns
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          default: []
        additional_target_settings:
          title: Additional Target Settings
          description: The additional target settings of this table.
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
          example: &ref_0
            is_ordered_merge_key: false
            target_type: snowflake
            enforce_masking_policy: false
            recreate_keys: false
          x-examples:
            - *ref_0
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
        extract_method:
          description: >-
            The extract method of the table entity.if not specified the extract
            method of the riverwill be used.
          allOf:
            - $ref: '#/components/schemas/ExtractMethodEnum'
          example: incremental
          nullable: true
        name:
          title: Name
          description: The name of the table
          type: string
          example: table_name
        incremental_field:
          title: Incremental Field
          description: The interval field of the river entity.
          type: string
          example: some_date_field
          nullable: true
        date_range:
          title: Date Range
          description: >-
            The date range of the river entity only needed if the extract method
            is incremental.
          allOf:
            - $ref: '#/components/schemas/DateRange'
          nullable: true
        running_number:
          title: Running Number
          description: >-
            The running number of the river entity only needed if the extract
            method is incremental.
          allOf:
            - $ref: '#/components/schemas/RunningNumber'
          nullable: true
        exporter_chunk_size:
          title: Exporter Chunk Size
          description: >-
            The exporter chunk size of the river entity. i.e. the number of rows
            to extract per chuck
          type: integer
          default: 30000
          example: 1000
        table_status:
          $ref: '#/components/schemas/TableStatusEnum'
        cdc_settings:
          title: Cdc Settings
          description: The CDC settings of this table.
          allOf:
            - $ref: '#/components/schemas/TableCDCSettings'
          nullable: true
        additional_source_settings:
          title: Additional Source Settings
          description: The additional source settings of this table.
          oneOf:
            - $ref: '#/components/schemas/MongoDBAdditionalSourceSettings'
            - $ref: '#/components/schemas/MySQLAdditionalSourceSettings'
            - $ref: '#/components/schemas/PostgreSQLAdditionalSourceSettings'
            - $ref: '#/components/schemas/OracleAdditionalSourceSettings'
          discriminator:
            propertyName: source_type
            mapping:
              mongodb: '#/components/schemas/MongoDBAdditionalSourceSettings'
              mysql: '#/components/schemas/MySQLAdditionalSourceSettings'
              postgresql: '#/components/schemas/PostgreSQLAdditionalSourceSettings'
              oracle: '#/components/schemas/OracleAdditionalSourceSettings'
          nullable: true
          example: &ref_1
            filter_expression: ''
            source_type: mongodb
            concurrent_requests_number: 1
          x-examples:
            - *ref_1
      type: object
      required:
        - target_table
        - name
      x-konfig-properties:
        table_status:
          description: The table status of the river entity.
          default: waiting_for_migration
          example: waiting_for_migration
    WriteDatabaseTableInput:
      title: WriteDatabaseTableInput
      description: |-
        Table properties which define the db table data
        This schema is being used for Create or Update purposes
      properties:
        run_type_and_datasource:
          title: Run Type And Datasource
          description: Internal field
          type: string
          enum:
            - multi_tables
          default: multi_tables
        details:
          $ref: '#/components/schemas/WriteDatabaseTableDetailsInput'
      type: object
      required:
        - details
      x-konfig-properties:
        details:
          title: Details
          description: The database table details
    WriteFacebookAdsPredefinedAdAccountActivitiesReport:
      title: WriteFacebookAdsPredefinedAdAccountActivitiesReport
      description: Facebook ads predefined ad account activities report, used for write.
      properties:
        is_selected:
          title: Is Selected
          description: If the table is selected or not.
          type: boolean
          default: false
          example: true
        target_table:
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          type: string
          example: target_table_name
        modified_columns:
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          default: []
        additional_target_settings:
          title: Additional Target Settings
          description: The additional target settings of this table.
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
          example: &ref_2
            is_ordered_merge_key: false
            target_type: snowflake
            enforce_masking_policy: false
            recreate_keys: false
          x-examples:
            - *ref_2
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
        extract_method:
          title: Extract Method
          description: The extract method of the table entity.
          type: string
          default: incremental
          example: incremental
          extra:
            title: Extract Method
            type: extract_method
            name: extract_method
            display_name: Pick the way you would like to extract data from your source
            is_disabled: true
        report_id:
          title: Report Id
          description: The report id
          type: string
          enum:
            - predefined_ad_account_activities
        incremental_field:
          title: Incremental Field
          description: The interval field of the river entity.
          type: string
          enum:
            - Date
          default: Date
          example: date_field
        date_range:
          $ref: '#/components/schemas/DateRange'
      type: object
      required:
        - target_table
        - report_id
        - date_range
      x-konfig-properties:
        date_range:
          title: Date Range
          description: The date range of the river entity.
          extra:
            type: date_range
    WriteFacebookAdsPredefinedAdAccountReport:
      title: WriteFacebookAdsPredefinedAdAccountReport
      description: Facebook ads predefined ad account report, used for write.
      properties:
        is_selected:
          title: Is Selected
          description: If the table is selected or not.
          type: boolean
          default: false
          example: true
        target_table:
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          type: string
          example: target_table_name
        modified_columns:
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          default: []
        additional_target_settings:
          title: Additional Target Settings
          description: The additional target settings of this table.
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
          example: &ref_3
            is_ordered_merge_key: false
            target_type: snowflake
            enforce_masking_policy: false
            recreate_keys: false
          x-examples:
            - *ref_3
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
        extract_method:
          title: Extract Method
          description: The extract method of the table entity.
          type: string
          default: all
          example: all
          extra:
            title: Extract Method
            display_name: Pick the way you would like to extract data from your source
            example: all
            is_disabled: true
            type: extract_method
            name: extract_method
        report_id:
          title: Report Id
          description: The report id
          type: string
          enum:
            - predefined_ad_account
      type: object
      required:
        - target_table
        - report_id
    WriteFacebookAdsPredefinedAdCreativesReport:
      title: WriteFacebookAdsPredefinedAdCreativesReport
      description: Facebook ads predefined ad creatives report, used for write.
      properties:
        is_selected:
          title: Is Selected
          description: If the table is selected or not.
          type: boolean
          default: false
          example: true
        target_table:
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          type: string
          example: target_table_name
        modified_columns:
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          default: []
        additional_target_settings:
          title: Additional Target Settings
          description: The additional target settings of this table.
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
          example: &ref_4
            is_ordered_merge_key: false
            target_type: snowflake
            enforce_masking_policy: false
            recreate_keys: false
          x-examples:
            - *ref_4
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
        extract_method:
          title: Extract Method
          description: The extract method of the table entity.
          type: string
          default: incremental
          example: incremental
          extra:
            title: Extract Method
            type: extract_method
            name: extract_method
            display_name: Pick the way you would like to extract data from your source
            is_disabled: true
        report_id:
          title: Report Id
          description: The report id
          type: string
          enum:
            - predefined_ad_creatives
        incremental_field:
          title: Incremental Field
          description: The interval field of the river entity.
          type: string
          enum:
            - Ads Creation Date
          default: Ads Creation Date
          example: ads_creation_date_field
        date_range:
          $ref: '#/components/schemas/DateRange'
      type: object
      required:
        - target_table
        - report_id
        - date_range
      x-konfig-properties:
        date_range:
          title: Date Range
          description: The date range of the river entity.
          extra:
            type: date_range
    WriteFacebookAdsPredefinedAdLeadsFormsReport:
      title: WriteFacebookAdsPredefinedAdLeadsFormsReport
      description: Facebook ads predefined ad leads forms report, used for write.
      properties:
        is_selected:
          title: Is Selected
          description: If the table is selected or not.
          type: boolean
          default: false
          example: true
        target_table:
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          type: string
          example: target_table_name
        modified_columns:
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          default: []
        additional_target_settings:
          title: Additional Target Settings
          description: The additional target settings of this table.
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
          example: &ref_5
            is_ordered_merge_key: false
            target_type: snowflake
            enforce_masking_policy: false
            recreate_keys: false
          x-examples:
            - *ref_5
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
        extract_method:
          title: Extract Method
          description: The extract method of the table entity.
          type: string
          default: all
          example: all
          extra:
            title: Extract Method
            display_name: Pick the way you would like to extract data from your source
            example: all
            is_disabled: true
            type: extract_method
            name: extract_method
        report_id:
          title: Report Id
          description: The report id
          type: string
          enum:
            - predefined_ad_leads_forms
      type: object
      required:
        - target_table
        - report_id
    WriteFacebookAdsPredefinedAdLeadsReport:
      title: WriteFacebookAdsPredefinedAdLeadsReport
      description: Facebook ads predefined ad leads report, used for write.
      properties:
        is_selected:
          title: Is Selected
          description: If the table is selected or not.
          type: boolean
          default: false
          example: true
        target_table:
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          type: string
          example: target_table_name
        modified_columns:
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          default: []
        additional_target_settings:
          title: Additional Target Settings
          description: The additional target settings of this table.
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
          example: &ref_6
            is_ordered_merge_key: false
            target_type: snowflake
            enforce_masking_policy: false
            recreate_keys: false
          x-examples:
            - *ref_6
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
        extract_method:
          title: Extract Method
          description: The extract method of the table entity.
          type: string
          default: incremental
          example: incremental
          extra:
            title: Extract Method
            type: extract_method
            name: extract_method
            display_name: Pick the way you would like to extract data from your source
            is_disabled: true
        report_id:
          title: Report Id
          description: The report id
          type: string
          enum:
            - predefined_ad_leads
        incremental_field:
          title: Incremental Field
          description: The interval field of the river entity.
          type: string
          enum:
            - Ads Creation Date
          default: Ads Creation Date
          example: ads_creation_date
        date_range:
          $ref: '#/components/schemas/DateRange'
      type: object
      required:
        - target_table
        - report_id
        - date_range
      x-konfig-properties:
        date_range:
          title: Date Range
          description: The date range of the river entity.
          extra:
            type: date_range
    WriteFacebookAdsPredefinedAdSetsReport:
      title: WriteFacebookAdsPredefinedAdSetsReport
      description: Facebook ads predefined ad sets report, used for write.
      properties:
        adsets_ac:
          title: Adsets Ac
          description: Leave empty for all ad sets
          items:
            $ref: '#/components/schemas/IDNameInput'
          type: array
          default: []
        adsets_filter:
          title: Adsets Filter
          description: Leave empty for all ad sets
          items:
            type: string
          type: array
          default: []
        adsets_ids:
          title: Adsets Ids
          description: Leave empty for all ad sets
          items:
            type: string
          type: array
          default: []
        adsets_names:
          title: Adsets Names
          description: Leave empty for all ad sets
          items:
            type: string
          type: array
          default: []
        adsets_type:
          $ref: '#/components/schemas/FacebookAdsSetsTypeEnum'
        campaigns_ac:
          title: Campaigns Ac
          description: Leave empty for all campaigns
          items:
            $ref: '#/components/schemas/IDNameInput'
          type: array
          default: []
        campaigns_filter:
          title: Campaigns Filter
          description: Leave empty for all campaigns
          items:
            type: string
          type: array
          default: []
        campaigns_ids:
          title: Campaigns Ids
          description: Leave empty for all campaigns
          items:
            type: string
          type: array
          default: []
        campaigns_names:
          title: Campaigns Names
          description: Leave empty for all campaigns
          items:
            type: string
          type: array
          default: []
        campaigns_type:
          $ref: '#/components/schemas/FacebookAdsCampaignsTypeEnum'
        is_selected:
          title: Is Selected
          description: If the table is selected or not.
          type: boolean
          default: false
          example: true
        target_table:
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          type: string
          example: target_table_name
        modified_columns:
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          default: []
        additional_target_settings:
          title: Additional Target Settings
          description: The additional target settings of this table.
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
          example: &ref_7
            is_ordered_merge_key: false
            target_type: snowflake
            enforce_masking_policy: false
            recreate_keys: false
          x-examples:
            - *ref_7
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
        extract_method:
          title: Extract Method
          description: The extract method of the table entity.
          type: string
          default: all
          example: all
          extra:
            title: Extract Method
            display_name: Pick the way you would like to extract data from your source
            example: all
            is_disabled: true
            type: extract_method
            name: extract_method
        report_id:
          title: Report Id
          description: The report id
          type: string
          enum:
            - predefined_adsets
      type: object
      required:
        - target_table
        - report_id
      x-konfig-properties:
        adsets_type:
          description: The type of ad sets input to use
          example: adsets_names
          x-examples:
            - adsets_names
            - adsets_ids
            - adsets_filter
        campaigns_type:
          description: The type of campaigns input to use
          example: campaigns_names
          x-examples:
            - campaigns_names
            - campaigns_ids
            - campaigns_filter
    WriteFacebookAdsPredefinedAdsPixelsReport:
      title: WriteFacebookAdsPredefinedAdsPixelsReport
      description: Facebook ads predefined ads pixels report, used for write.
      properties:
        is_selected:
          title: Is Selected
          description: If the table is selected or not.
          type: boolean
          default: false
          example: true
        target_table:
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          type: string
          example: target_table_name
        modified_columns:
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          default: []
        additional_target_settings:
          title: Additional Target Settings
          description: The additional target settings of this table.
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
          example: &ref_8
            is_ordered_merge_key: false
            target_type: snowflake
            enforce_masking_policy: false
            recreate_keys: false
          x-examples:
            - *ref_8
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
        extract_method:
          title: Extract Method
          description: The extract method of the table entity.
          type: string
          default: incremental
          example: incremental
          extra:
            title: Extract Method
            type: extract_method
            name: extract_method
            display_name: Pick the way you would like to extract data from your source
            is_disabled: true
        report_id:
          title: Report Id
          description: The report id
          type: string
          enum:
            - predefined_ads_pixels
        incremental_field:
          title: Incremental Field
          description: The interval field of the river entity.
          type: string
          enum:
            - Date
          default: Date
          example: date_field
        date_range:
          $ref: '#/components/schemas/DateRange'
      type: object
      required:
        - target_table
        - report_id
        - date_range
      x-konfig-properties:
        date_range:
          title: Date Range
          description: The date range of the river entity.
          extra:
            type: date_range
    WriteFacebookAdsPredefinedAdsReport:
      title: WriteFacebookAdsPredefinedAdsReport
      description: Facebook ads predefined ads report, used for write.
      properties:
        ads_ac:
          title: Ads Ac
          description: Leave empty for all ads
          items:
            $ref: '#/components/schemas/IDNameInput'
          type: array
          default: []
        ads_filter:
          title: Ads Filter
          description: Leave empty for all ads
          items:
            type: string
          type: array
          default: []
        ads_ids:
          title: Ads Ids
          description: Leave empty for all ads
          items:
            type: string
          type: array
          default: []
        ads_names:
          title: Ads Names
          description: Leave empty for all ads
          items:
            type: string
          type: array
          default: []
        ads_type:
          $ref: '#/components/schemas/FacebookAdsAdsTypeEnum'
        adsets_ac:
          title: Adsets Ac
          description: Leave empty for all ad sets
          items:
            $ref: '#/components/schemas/IDNameInput'
          type: array
          default: []
        adsets_filter:
          title: Adsets Filter
          description: Leave empty for all ad sets
          items:
            type: string
          type: array
          default: []
        adsets_ids:
          title: Adsets Ids
          description: Leave empty for all ad sets
          items:
            type: string
          type: array
          default: []
        adsets_names:
          title: Adsets Names
          description: Leave empty for all ad sets
          items:
            type: string
          type: array
          default: []
        adsets_type:
          $ref: '#/components/schemas/FacebookAdsSetsTypeEnum'
        campaigns_ac:
          title: Campaigns Ac
          description: Leave empty for all campaigns
          items:
            $ref: '#/components/schemas/IDNameInput'
          type: array
          default: []
        campaigns_filter:
          title: Campaigns Filter
          description: Leave empty for all campaigns
          items:
            type: string
          type: array
          default: []
        campaigns_ids:
          title: Campaigns Ids
          description: Leave empty for all campaigns
          items:
            type: string
          type: array
          default: []
        campaigns_names:
          title: Campaigns Names
          description: Leave empty for all campaigns
          items:
            type: string
          type: array
          default: []
        campaigns_type:
          $ref: '#/components/schemas/FacebookAdsCampaignsTypeEnum'
        is_selected:
          title: Is Selected
          description: If the table is selected or not.
          type: boolean
          default: false
          example: true
        target_table:
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          type: string
          example: target_table_name
        modified_columns:
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          default: []
        additional_target_settings:
          title: Additional Target Settings
          description: The additional target settings of this table.
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
          example: &ref_9
            is_ordered_merge_key: false
            target_type: snowflake
            enforce_masking_policy: false
            recreate_keys: false
          x-examples:
            - *ref_9
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
        extract_method:
          title: Extract Method
          description: The extract method of the table entity.
          type: string
          default: incremental
          example: incremental
          extra:
            title: Extract Method
            type: extract_method
            name: extract_method
            display_name: Pick the way you would like to extract data from your source
            is_disabled: true
        report_id:
          title: Report Id
          description: The report id
          type: string
          enum:
            - predefined_ads
        incremental_field:
          title: Incremental Field
          description: The interval field of the river entity.
          type: string
          enum:
            - Ads Creation Date
          default: Ads Creation Date
          example: ads_creation_date
        date_range:
          $ref: '#/components/schemas/DateRange'
      type: object
      required:
        - target_table
        - report_id
        - date_range
      x-konfig-properties:
        ads_type:
          description: The type of ads input to use
          example: ads_ids
          x-examples:
            - ads_ids
            - ads_names
            - ads_filter
        adsets_type:
          description: The type of ad sets input to use
          example: adsets_names
          x-examples:
            - adsets_names
            - adsets_ids
            - adsets_filter
        campaigns_type:
          description: The type of campaigns input to use
          example: campaigns_names
          x-examples:
            - campaigns_names
            - campaigns_ids
            - campaigns_filter
        date_range:
          title: Date Range
          description: The date range of the river entity.
          extra:
            type: date_range
    WriteFacebookAdsPredefinedCampaignsReport:
      title: WriteFacebookAdsPredefinedCampaignsReport
      description: Facebook ads predefined campaigns report, used for write.
      properties:
        campaigns_ac:
          title: Campaigns Ac
          description: Leave empty for all campaigns
          items:
            $ref: '#/components/schemas/IDNameInput'
          type: array
          default: []
        campaigns_filter:
          title: Campaigns Filter
          description: Leave empty for all campaigns
          items:
            type: string
          type: array
          default: []
        campaigns_ids:
          title: Campaigns Ids
          description: Leave empty for all campaigns
          items:
            type: string
          type: array
          default: []
        campaigns_names:
          title: Campaigns Names
          description: Leave empty for all campaigns
          items:
            type: string
          type: array
          default: []
        campaigns_type:
          $ref: '#/components/schemas/FacebookAdsCampaignsTypeEnum'
        is_selected:
          title: Is Selected
          description: If the table is selected or not.
          type: boolean
          default: false
          example: true
        target_table:
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          type: string
          example: target_table_name
        modified_columns:
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          default: []
        additional_target_settings:
          title: Additional Target Settings
          description: The additional target settings of this table.
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
          example: &ref_10
            is_ordered_merge_key: false
            target_type: snowflake
            enforce_masking_policy: false
            recreate_keys: false
          x-examples:
            - *ref_10
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
        extract_method:
          title: Extract Method
          description: The extract method of the table entity.
          type: string
          default: all
          example: all
          extra:
            title: Extract Method
            display_name: Pick the way you would like to extract data from your source
            example: all
            is_disabled: true
            type: extract_method
            name: extract_method
        report_id:
          title: Report Id
          description: The report id
          type: string
          enum:
            - predefined_campaigns
      type: object
      required:
        - target_table
        - report_id
      x-konfig-properties:
        campaigns_type:
          description: The type of campaigns input to use
          example: campaigns_names
          x-examples:
            - campaigns_names
            - campaigns_ids
            - campaigns_filter
    WriteFacebookAdsPredefinedCustomAudiencesReport:
      title: WriteFacebookAdsPredefinedCustomAudiencesReport
      description: Facebook ads predefined custom audiences report, used for write.
      properties:
        is_selected:
          title: Is Selected
          description: If the table is selected or not.
          type: boolean
          default: false
          example: true
        target_table:
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          type: string
          example: target_table_name
        modified_columns:
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          default: []
        additional_target_settings:
          title: Additional Target Settings
          description: The additional target settings of this table.
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
          example: &ref_11
            is_ordered_merge_key: false
            target_type: snowflake
            enforce_masking_policy: false
            recreate_keys: false
          x-examples:
            - *ref_11
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
        extract_method:
          title: Extract Method
          description: The extract method of the table entity.
          type: string
          default: all
          example: all
          extra:
            title: Extract Method
            display_name: Pick the way you would like to extract data from your source
            example: all
            is_disabled: true
            type: extract_method
            name: extract_method
        report_id:
          title: Report Id
          description: The report id
          type: string
          enum:
            - predefined_custom_audiences
      type: object
      required:
        - target_table
        - report_id
    WriteFacebookAdsPredefinedCustomConversionsReport:
      title: WriteFacebookAdsPredefinedCustomConversionsReport
      description: Facebook ads predefined custom conversions report, used for write.
      properties:
        is_selected:
          title: Is Selected
          description: If the table is selected or not.
          type: boolean
          default: false
          example: true
        target_table:
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          type: string
          example: target_table_name
        modified_columns:
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          default: []
        additional_target_settings:
          title: Additional Target Settings
          description: The additional target settings of this table.
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
          example: &ref_12
            is_ordered_merge_key: false
            target_type: snowflake
            enforce_masking_policy: false
            recreate_keys: false
          x-examples:
            - *ref_12
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
        extract_method:
          title: Extract Method
          description: The extract method of the table entity.
          type: string
          default: all
          example: all
          extra:
            title: Extract Method
            display_name: Pick the way you would like to extract data from your source
            example: all
            is_disabled: true
            type: extract_method
            name: extract_method
        report_id:
          title: Report Id
          description: The report id
          type: string
          enum:
            - predefined_custom_conversions
      type: object
      required:
        - target_table
        - report_id
    WriteFacebookAdsPredefinedInsightBasicReport:
      title: WriteFacebookAdsPredefinedInsightBasicReport
      description: Facebook ads predefined insights basic report, used for write.
      properties:
        ads_ac:
          title: Ads Ac
          description: Leave empty for all ads
          items:
            $ref: '#/components/schemas/IDNameInput'
          type: array
          default: []
        ads_filter:
          title: Ads Filter
          description: Leave empty for all ads
          items:
            type: string
          type: array
          default: []
        ads_ids:
          title: Ads Ids
          description: Leave empty for all ads
          items:
            type: string
          type: array
          default: []
        ads_names:
          title: Ads Names
          description: Leave empty for all ads
          items:
            type: string
          type: array
          default: []
        ads_type:
          $ref: '#/components/schemas/FacebookAdsAdsTypeEnum'
        adsets_ac:
          title: Adsets Ac
          description: Leave empty for all ad sets
          items:
            $ref: '#/components/schemas/IDNameInput'
          type: array
          default: []
        adsets_filter:
          title: Adsets Filter
          description: Leave empty for all ad sets
          items:
            type: string
          type: array
          default: []
        adsets_ids:
          title: Adsets Ids
          description: Leave empty for all ad sets
          items:
            type: string
          type: array
          default: []
        adsets_names:
          title: Adsets Names
          description: Leave empty for all ad sets
          items:
            type: string
          type: array
          default: []
        adsets_type:
          $ref: '#/components/schemas/FacebookAdsSetsTypeEnum'
        campaigns_ac:
          title: Campaigns Ac
          description: Leave empty for all campaigns
          items:
            $ref: '#/components/schemas/IDNameInput'
          type: array
          default: []
        campaigns_filter:
          title: Campaigns Filter
          description: Leave empty for all campaigns
          items:
            type: string
          type: array
          default: []
        campaigns_ids:
          title: Campaigns Ids
          description: Leave empty for all campaigns
          items:
            type: string
          type: array
          default: []
        campaigns_names:
          title: Campaigns Names
          description: Leave empty for all campaigns
          items:
            type: string
          type: array
          default: []
        campaigns_type:
          $ref: '#/components/schemas/FacebookAdsCampaignsTypeEnum'
        is_selected:
          title: Is Selected
          description: If the table is selected or not.
          type: boolean
          default: false
          example: true
        target_table:
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          type: string
          example: target_table_name
        modified_columns:
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          default: []
        additional_target_settings:
          title: Additional Target Settings
          description: The additional target settings of this table.
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
          example: &ref_13
            is_ordered_merge_key: false
            target_type: snowflake
            enforce_masking_policy: false
            recreate_keys: false
          x-examples:
            - *ref_13
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
        extract_method:
          title: Extract Method
          description: The extract method of the table entity.
          type: string
          default: incremental
          example: incremental
          extra:
            title: Extract Method
            type: extract_method
            name: extract_method
            display_name: Pick the way you would like to extract data from your source
            is_disabled: true
        report_id:
          title: Report Id
          description: The report id
          type: string
          enum:
            - predefined_insight_report_basic
        incremental_field:
          title: Incremental Field
          description: The interval field of the river entity.
          type: string
          enum:
            - Date
          default: Date
          example: date_field
        date_range:
          $ref: '#/components/schemas/DateRange'
      type: object
      required:
        - target_table
        - report_id
        - date_range
      x-konfig-properties:
        ads_type:
          description: The type of ads input to use
          example: ads_ids
          x-examples:
            - ads_ids
            - ads_names
            - ads_filter
        adsets_type:
          description: The type of ad sets input to use
          example: adsets_names
          x-examples:
            - adsets_names
            - adsets_ids
            - adsets_filter
        campaigns_type:
          description: The type of campaigns input to use
          example: campaigns_names
          x-examples:
            - campaigns_names
            - campaigns_ids
            - campaigns_filter
        date_range:
          title: Date Range
          description: The date range of the river entity.
          extra:
            type: date_range
    WriteFacebookAdsPredefinedInsightReportAgeGender:
      title: WriteFacebookAdsPredefinedInsightReportAgeGender
      description: Facebook ads predefined insights age gender report, used for write.
      properties:
        ads_ac:
          title: Ads Ac
          description: Leave empty for all ads
          items:
            $ref: '#/components/schemas/IDNameInput'
          type: array
          default: []
        ads_filter:
          title: Ads Filter
          description: Leave empty for all ads
          items:
            type: string
          type: array
          default: []
        ads_ids:
          title: Ads Ids
          description: Leave empty for all ads
          items:
            type: string
          type: array
          default: []
        ads_names:
          title: Ads Names
          description: Leave empty for all ads
          items:
            type: string
          type: array
          default: []
        ads_type:
          $ref: '#/components/schemas/FacebookAdsAdsTypeEnum'
        adsets_ac:
          title: Adsets Ac
          description: Leave empty for all ad sets
          items:
            $ref: '#/components/schemas/IDNameInput'
          type: array
          default: []
        adsets_filter:
          title: Adsets Filter
          description: Leave empty for all ad sets
          items:
            type: string
          type: array
          default: []
        adsets_ids:
          title: Adsets Ids
          description: Leave empty for all ad sets
          items:
            type: string
          type: array
          default: []
        adsets_names:
          title: Adsets Names
          description: Leave empty for all ad sets
          items:
            type: string
          type: array
          default: []
        adsets_type:
          $ref: '#/components/schemas/FacebookAdsSetsTypeEnum'
        campaigns_ac:
          title: Campaigns Ac
          description: Leave empty for all campaigns
          items:
            $ref: '#/components/schemas/IDNameInput'
          type: array
          default: []
        campaigns_filter:
          title: Campaigns Filter
          description: Leave empty for all campaigns
          items:
            type: string
          type: array
          default: []
        campaigns_ids:
          title: Campaigns Ids
          description: Leave empty for all campaigns
          items:
            type: string
          type: array
          default: []
        campaigns_names:
          title: Campaigns Names
          description: Leave empty for all campaigns
          items:
            type: string
          type: array
          default: []
        campaigns_type:
          $ref: '#/components/schemas/FacebookAdsCampaignsTypeEnum'
        is_selected:
          title: Is Selected
          description: If the table is selected or not.
          type: boolean
          default: false
          example: true
        target_table:
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          type: string
          example: target_table_name
        modified_columns:
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          default: []
        additional_target_settings:
          title: Additional Target Settings
          description: The additional target settings of this table.
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
          example: &ref_14
            is_ordered_merge_key: false
            target_type: snowflake
            enforce_masking_policy: false
            recreate_keys: false
          x-examples:
            - *ref_14
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
        extract_method:
          title: Extract Method
          description: The extract method of the table entity.
          type: string
          default: incremental
          example: incremental
          extra:
            title: Extract Method
            type: extract_method
            name: extract_method
            display_name: Pick the way you would like to extract data from your source
            is_disabled: true
        report_id:
          title: Report Id
          description: The report id
          type: string
          enum:
            - predefined_insight_report_age_gender
        incremental_field:
          title: Incremental Field
          description: The interval field of the river entity.
          type: string
          enum:
            - Date
          default: Date
          example: date_field
        date_range:
          $ref: '#/components/schemas/DateRange'
      type: object
      required:
        - target_table
        - report_id
        - date_range
      x-konfig-properties:
        ads_type:
          description: The type of ads input to use
          example: ads_ids
          x-examples:
            - ads_ids
            - ads_names
            - ads_filter
        adsets_type:
          description: The type of ad sets input to use
          example: adsets_names
          x-examples:
            - adsets_names
            - adsets_ids
            - adsets_filter
        campaigns_type:
          description: The type of campaigns input to use
          example: campaigns_names
          x-examples:
            - campaigns_names
            - campaigns_ids
            - campaigns_filter
        date_range:
          title: Date Range
          description: The date range of the river entity.
          extra:
            type: date_range
    WriteFacebookAdsPredefinedInsightReportCountry:
      title: WriteFacebookAdsPredefinedInsightReportCountry
      description: Facebook ads predefined insights country report, used for write.
      properties:
        ads_ac:
          title: Ads Ac
          description: Leave empty for all ads
          items:
            $ref: '#/components/schemas/IDNameInput'
          type: array
          default: []
        ads_filter:
          title: Ads Filter
          description: Leave empty for all ads
          items:
            type: string
          type: array
          default: []
        ads_ids:
          title: Ads Ids
          description: Leave empty for all ads
          items:
            type: string
          type: array
          default: []
        ads_names:
          title: Ads Names
          description: Leave empty for all ads
          items:
            type: string
          type: array
          default: []
        ads_type:
          $ref: '#/components/schemas/FacebookAdsAdsTypeEnum'
        adsets_ac:
          title: Adsets Ac
          description: Leave empty for all ad sets
          items:
            $ref: '#/components/schemas/IDNameInput'
          type: array
          default: []
        adsets_filter:
          title: Adsets Filter
          description: Leave empty for all ad sets
          items:
            type: string
          type: array
          default: []
        adsets_ids:
          title: Adsets Ids
          description: Leave empty for all ad sets
          items:
            type: string
          type: array
          default: []
        adsets_names:
          title: Adsets Names
          description: Leave empty for all ad sets
          items:
            type: string
          type: array
          default: []
        adsets_type:
          $ref: '#/components/schemas/FacebookAdsSetsTypeEnum'
        campaigns_ac:
          title: Campaigns Ac
          description: Leave empty for all campaigns
          items:
            $ref: '#/components/schemas/IDNameInput'
          type: array
          default: []
        campaigns_filter:
          title: Campaigns Filter
          description: Leave empty for all campaigns
          items:
            type: string
          type: array
          default: []
        campaigns_ids:
          title: Campaigns Ids
          description: Leave empty for all campaigns
          items:
            type: string
          type: array
          default: []
        campaigns_names:
          title: Campaigns Names
          description: Leave empty for all campaigns
          items:
            type: string
          type: array
          default: []
        campaigns_type:
          $ref: '#/components/schemas/FacebookAdsCampaignsTypeEnum'
        is_selected:
          title: Is Selected
          description: If the table is selected or not.
          type: boolean
          default: false
          example: true
        target_table:
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          type: string
          example: target_table_name
        modified_columns:
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          default: []
        additional_target_settings:
          title: Additional Target Settings
          description: The additional target settings of this table.
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
          example: &ref_15
            is_ordered_merge_key: false
            target_type: snowflake
            enforce_masking_policy: false
            recreate_keys: false
          x-examples:
            - *ref_15
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
        extract_method:
          title: Extract Method
          description: The extract method of the table entity.
          type: string
          default: incremental
          example: incremental
          extra:
            title: Extract Method
            type: extract_method
            name: extract_method
            display_name: Pick the way you would like to extract data from your source
            is_disabled: true
        report_id:
          title: Report Id
          description: The report id
          type: string
          enum:
            - predefined_insight_report_country
        incremental_field:
          title: Incremental Field
          description: The interval field of the river entity.
          type: string
          enum:
            - Date
          default: Date
          example: date_field
        date_range:
          $ref: '#/components/schemas/DateRange'
      type: object
      required:
        - target_table
        - report_id
        - date_range
      x-konfig-properties:
        ads_type:
          description: The type of ads input to use
          example: ads_ids
          x-examples:
            - ads_ids
            - ads_names
            - ads_filter
        adsets_type:
          description: The type of ad sets input to use
          example: adsets_names
          x-examples:
            - adsets_names
            - adsets_ids
            - adsets_filter
        campaigns_type:
          description: The type of campaigns input to use
          example: campaigns_names
          x-examples:
            - campaigns_names
            - campaigns_ids
            - campaigns_filter
        date_range:
          title: Date Range
          description: The date range of the river entity.
          extra:
            type: date_range
    WriteFacebookAdsPredefinedInsightReportPlatform:
      title: WriteFacebookAdsPredefinedInsightReportPlatform
      description: Facebook ads predefined insights platform report, used for write.
      properties:
        ads_ac:
          title: Ads Ac
          description: Leave empty for all ads
          items:
            $ref: '#/components/schemas/IDNameInput'
          type: array
          default: []
        ads_filter:
          title: Ads Filter
          description: Leave empty for all ads
          items:
            type: string
          type: array
          default: []
        ads_ids:
          title: Ads Ids
          description: Leave empty for all ads
          items:
            type: string
          type: array
          default: []
        ads_names:
          title: Ads Names
          description: Leave empty for all ads
          items:
            type: string
          type: array
          default: []
        ads_type:
          $ref: '#/components/schemas/FacebookAdsAdsTypeEnum'
        adsets_ac:
          title: Adsets Ac
          description: Leave empty for all ad sets
          items:
            $ref: '#/components/schemas/IDNameInput'
          type: array
          default: []
        adsets_filter:
          title: Adsets Filter
          description: Leave empty for all ad sets
          items:
            type: string
          type: array
          default: []
        adsets_ids:
          title: Adsets Ids
          description: Leave empty for all ad sets
          items:
            type: string
          type: array
          default: []
        adsets_names:
          title: Adsets Names
          description: Leave empty for all ad sets
          items:
            type: string
          type: array
          default: []
        adsets_type:
          $ref: '#/components/schemas/FacebookAdsSetsTypeEnum'
        campaigns_ac:
          title: Campaigns Ac
          description: Leave empty for all campaigns
          items:
            $ref: '#/components/schemas/IDNameInput'
          type: array
          default: []
        campaigns_filter:
          title: Campaigns Filter
          description: Leave empty for all campaigns
          items:
            type: string
          type: array
          default: []
        campaigns_ids:
          title: Campaigns Ids
          description: Leave empty for all campaigns
          items:
            type: string
          type: array
          default: []
        campaigns_names:
          title: Campaigns Names
          description: Leave empty for all campaigns
          items:
            type: string
          type: array
          default: []
        campaigns_type:
          $ref: '#/components/schemas/FacebookAdsCampaignsTypeEnum'
        is_selected:
          title: Is Selected
          description: If the table is selected or not.
          type: boolean
          default: false
          example: true
        target_table:
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          type: string
          example: target_table_name
        modified_columns:
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          default: []
        additional_target_settings:
          title: Additional Target Settings
          description: The additional target settings of this table.
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
          example: &ref_16
            is_ordered_merge_key: false
            target_type: snowflake
            enforce_masking_policy: false
            recreate_keys: false
          x-examples:
            - *ref_16
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
        extract_method:
          title: Extract Method
          description: The extract method of the table entity.
          type: string
          default: incremental
          example: incremental
          extra:
            title: Extract Method
            type: extract_method
            name: extract_method
            display_name: Pick the way you would like to extract data from your source
            is_disabled: true
        report_id:
          title: Report Id
          description: The report id
          type: string
          enum:
            - predefined_insight_report_platform
        incremental_field:
          title: Incremental Field
          description: The interval field of the river entity.
          type: string
          enum:
            - Date
          default: Date
          example: date_field
        date_range:
          $ref: '#/components/schemas/DateRange'
      type: object
      required:
        - target_table
        - report_id
        - date_range
      x-konfig-properties:
        ads_type:
          description: The type of ads input to use
          example: ads_ids
          x-examples:
            - ads_ids
            - ads_names
            - ads_filter
        adsets_type:
          description: The type of ad sets input to use
          example: adsets_names
          x-examples:
            - adsets_names
            - adsets_ids
            - adsets_filter
        campaigns_type:
          description: The type of campaigns input to use
          example: campaigns_names
          x-examples:
            - campaigns_names
            - campaigns_ids
            - campaigns_filter
        date_range:
          title: Date Range
          description: The date range of the river entity.
          extra:
            type: date_range
    WriteFacebookAdsPredefinedInsightReportProduct:
      title: WriteFacebookAdsPredefinedInsightReportProduct
      description: Facebook ads predefined insights product report, used for write.
      properties:
        ads_ac:
          title: Ads Ac
          description: Leave empty for all ads
          items:
            $ref: '#/components/schemas/IDNameInput'
          type: array
          default: []
        ads_filter:
          title: Ads Filter
          description: Leave empty for all ads
          items:
            type: string
          type: array
          default: []
        ads_ids:
          title: Ads Ids
          description: Leave empty for all ads
          items:
            type: string
          type: array
          default: []
        ads_names:
          title: Ads Names
          description: Leave empty for all ads
          items:
            type: string
          type: array
          default: []
        ads_type:
          $ref: '#/components/schemas/FacebookAdsAdsTypeEnum'
        adsets_ac:
          title: Adsets Ac
          description: Leave empty for all ad sets
          items:
            $ref: '#/components/schemas/IDNameInput'
          type: array
          default: []
        adsets_filter:
          title: Adsets Filter
          description: Leave empty for all ad sets
          items:
            type: string
          type: array
          default: []
        adsets_ids:
          title: Adsets Ids
          description: Leave empty for all ad sets
          items:
            type: string
          type: array
          default: []
        adsets_names:
          title: Adsets Names
          description: Leave empty for all ad sets
          items:
            type: string
          type: array
          default: []
        adsets_type:
          $ref: '#/components/schemas/FacebookAdsSetsTypeEnum'
        campaigns_ac:
          title: Campaigns Ac
          description: Leave empty for all campaigns
          items:
            $ref: '#/components/schemas/IDNameInput'
          type: array
          default: []
        campaigns_filter:
          title: Campaigns Filter
          description: Leave empty for all campaigns
          items:
            type: string
          type: array
          default: []
        campaigns_ids:
          title: Campaigns Ids
          description: Leave empty for all campaigns
          items:
            type: string
          type: array
          default: []
        campaigns_names:
          title: Campaigns Names
          description: Leave empty for all campaigns
          items:
            type: string
          type: array
          default: []
        campaigns_type:
          $ref: '#/components/schemas/FacebookAdsCampaignsTypeEnum'
        is_selected:
          title: Is Selected
          description: If the table is selected or not.
          type: boolean
          default: false
          example: true
        target_table:
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          type: string
          example: target_table_name
        modified_columns:
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          default: []
        additional_target_settings:
          title: Additional Target Settings
          description: The additional target settings of this table.
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
          example: &ref_17
            is_ordered_merge_key: false
            target_type: snowflake
            enforce_masking_policy: false
            recreate_keys: false
          x-examples:
            - *ref_17
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
        extract_method:
          title: Extract Method
          description: The extract method of the table entity.
          type: string
          default: incremental
          example: incremental
          extra:
            title: Extract Method
            type: extract_method
            name: extract_method
            display_name: Pick the way you would like to extract data from your source
            is_disabled: true
        report_id:
          title: Report Id
          description: The report id
          type: string
          enum:
            - predefined_insight_report_product
        incremental_field:
          title: Incremental Field
          description: The interval field of the river entity.
          type: string
          enum:
            - Date
          default: Date
          example: date_field
        date_range:
          $ref: '#/components/schemas/DateRange'
      type: object
      required:
        - target_table
        - report_id
        - date_range
      x-konfig-properties:
        ads_type:
          description: The type of ads input to use
          example: ads_ids
          x-examples:
            - ads_ids
            - ads_names
            - ads_filter
        adsets_type:
          description: The type of ad sets input to use
          example: adsets_names
          x-examples:
            - adsets_names
            - adsets_ids
            - adsets_filter
        campaigns_type:
          description: The type of campaigns input to use
          example: campaigns_names
          x-examples:
            - campaigns_names
            - campaigns_ids
            - campaigns_filter
        date_range:
          title: Date Range
          description: The date range of the river entity.
          extra:
            type: date_range
    WriteFacebookAdsPredefinedSavedAudiencesReport:
      title: WriteFacebookAdsPredefinedSavedAudiencesReport
      description: Facebook ads predefined saved audiences report, used for write.
      properties:
        is_selected:
          title: Is Selected
          description: If the table is selected or not.
          type: boolean
          default: false
          example: true
        target_table:
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          type: string
          example: target_table_name
        modified_columns:
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          default: []
        additional_target_settings:
          title: Additional Target Settings
          description: The additional target settings of this table.
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
          example: &ref_18
            is_ordered_merge_key: false
            target_type: snowflake
            enforce_masking_policy: false
            recreate_keys: false
          x-examples:
            - *ref_18
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
        extract_method:
          title: Extract Method
          description: The extract method of the table entity.
          type: string
          default: all
          example: all
          extra:
            title: Extract Method
            display_name: Pick the way you would like to extract data from your source
            example: all
            is_disabled: true
            type: extract_method
            name: extract_method
        report_id:
          title: Report Id
          description: The report id
          type: string
          enum:
            - predefined_saved_audiences
      type: object
      required:
        - target_table
        - report_id
    WritePredefinedReportFacebookAdsTableInput:
      title: WritePredefinedReportFacebookAdsTableInput
      description: |-
        Table properties which define the predefined report table data
        This schema is being used for Create or Update purposes
      properties:
        run_type_and_datasource:
          title: Run Type And Datasource
          description: Internal field
          type: string
          enum:
            - predefined_report_facebook ads
          default: predefined_report_facebook ads
        details:
          title: Details
          description: The predefined report table details
          anyOf:
            - $ref: >-
                #/components/schemas/WriteFacebookAdsPredefinedInsightBasicReport
            - $ref: '#/components/schemas/WriteFacebookAdsPredefinedCampaignsReport'
            - $ref: '#/components/schemas/WriteFacebookAdsPredefinedAdsReport'
            - $ref: >-
                #/components/schemas/WriteFacebookAdsPredefinedAdLeadsFormsReport
            - $ref: '#/components/schemas/WriteFacebookAdsPredefinedAdsPixelsReport'
            - $ref: '#/components/schemas/WriteFacebookAdsPredefinedAdSetsReport'
            - $ref: '#/components/schemas/WriteFacebookAdsPredefinedAdAccountReport'
            - $ref: >-
                #/components/schemas/WriteFacebookAdsPredefinedAdAccountActivitiesReport
            - $ref: '#/components/schemas/WriteFacebookAdsPredefinedAdCreativesReport'
            - $ref: '#/components/schemas/WriteFacebookAdsPredefinedAdLeadsReport'
            - $ref: >-
                #/components/schemas/WriteFacebookAdsPredefinedCustomAudiencesReport
            - $ref: >-
                #/components/schemas/WriteFacebookAdsPredefinedCustomConversionsReport
            - $ref: >-
                #/components/schemas/WriteFacebookAdsPredefinedInsightReportAgeGender
            - $ref: >-
                #/components/schemas/WriteFacebookAdsPredefinedInsightReportCountry
            - $ref: >-
                #/components/schemas/WriteFacebookAdsPredefinedInsightReportPlatform
            - $ref: >-
                #/components/schemas/WriteFacebookAdsPredefinedInsightReportProduct
            - $ref: >-
                #/components/schemas/WriteFacebookAdsPredefinedSavedAudiencesReport
      type: object
      required:
        - details
    WritePredefinedReportShopifyTableInput:
      title: WritePredefinedReportShopifyTableInput
      description: |-
        Table properties which define the predefined report table data
        This schema is being used for Create or Update purposes
      properties:
        run_type_and_datasource:
          title: Run Type And Datasource
          description: Internal field
          type: string
          enum:
            - predefined_report_shopify
          default: predefined_report_shopify
        details:
          title: Details
          description: The predefined report table details
          anyOf:
            - $ref: '#/components/schemas/WriteShopifyPredefinedOrdersReport'
            - $ref: '#/components/schemas/WriteShopifyPredefinedShopReport'
            - $ref: '#/components/schemas/WriteShopifyPredefinedAddressesReport'
            - $ref: '#/components/schemas/WriteShopifyPredefinedAnalyticReport'
            - $ref: '#/components/schemas/WriteShopifyPredefinedCustomersReport'
            - $ref: '#/components/schemas/WriteShopifyPredefinedInventoryLevelsReport'
            - $ref: '#/components/schemas/WriteShopifyPredefinedMarketingEventsReport'
            - $ref: >-
                #/components/schemas/WriteShopifyPredefinedOrderTransactionsReport
            - $ref: '#/components/schemas/WriteShopifyPredefinedProductsReport'
      type: object
      required:
        - details
    WriteRiverInput:
      title: WriteRiverInput
      description: River fields for new river creation / update an existing river.
      properties:
        name:
          title: Name
          description: The name of the river.
          type: string
          example: river_name
        kind:
          description: The kind of the river.
          allOf:
            - $ref: '#/components/schemas/RiverKindEnum'
          default: main_river
          example: main_river
          nullable: true
        type:
          $ref: '#/components/schemas/RiverTypeEnum'
        group_id:
          title: Group Id
          description: The id of the group the river belongs to.
          type: string
          example: 55fr7d4270fdca16cac18261
          nullable: true
        group_name:
          title: Group Name
          description: The name of the group the river belongs to.
          type: string
          example: river_group_1
          nullable: true
        metadata:
          $ref: '#/components/schemas/RiverMetadata'
        settings:
          $ref: '#/components/schemas/RiverSettings'
        properties:
          title: Properties
          description: The properties of a river.
          oneOf:
            - $ref: '#/components/schemas/WriteSourceToTargetRiverPropertiesInput'
            - $ref: '#/components/schemas/ActionProperties'
            - $ref: '#/components/schemas/LogicProperties'
          discriminator:
            propertyName: properties_type
            mapping:
              source_to_target: '#/components/schemas/WriteSourceToTargetRiverPropertiesInput'
              actions: '#/components/schemas/ActionProperties'
              logic: '#/components/schemas/LogicProperties'
        schedulers:
          title: Schedulers
          description: >-
            An object containing the schedule settings. Currently support only
            one scheduler
          items:
            $ref: '#/components/schemas/RiverSchedule'
          type: array
          maxItems: 1
          minItems: 0
          default: []
        cross_id:
          title: Cross Id
          description: The cross_id of the river to be deployed.
          type: string
          nullable: true
          hidden: true
        deployment_definition:
          title: Deployment Definition
          description: The deployment definition of the river to be deployed.
          type: object
          nullable: true
          hidden: true
      type: object
      required:
        - name
        - type
        - properties
      x-konfig-properties:
        type:
          description: The type of river.
          example: source_to_target
        metadata:
          title: Metadata
          description: An object containing river metadata.
          default:
            description: ''
            river_status: disabled
        settings:
          title: Settings
          description: An object containing river settings.
          default:
            run_timeout_seconds: 43200
    WriteSchemaInput:
      title: WriteSchemaInput
      description: Schema properties to write (PUT operations)
      properties:
        name:
          title: Name
          description: The name of the schema
          type: string
        tables:
          title: Tables
          items:
            oneOf:
              - $ref: '#/components/schemas/WriteDatabaseTableInput'
              - $ref: '#/components/schemas/WritePredefinedReportShopifyTableInput'
              - $ref: >-
                  #/components/schemas/WritePredefinedReportFacebookAdsTableInput
            discriminator:
              propertyName: run_type_and_datasource
              mapping:
                multi_tables: '#/components/schemas/WriteDatabaseTableInput'
                predefined_report_shopify: '#/components/schemas/WritePredefinedReportShopifyTableInput'
                predefined_report_facebook ads: >-
                  #/components/schemas/WritePredefinedReportFacebookAdsTableInput
          type: array
          default: []
      type: object
      required:
        - name
    WriteShopifyPredefinedAddressesReport:
      title: WriteShopifyPredefinedAddressesReport
      description: Shopify predefined addresses report, used for write.
      properties:
        is_selected:
          title: Is Selected
          description: If the table is selected or not.
          type: boolean
          default: false
          example: true
        target_table:
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          type: string
          example: target_table_name
        modified_columns:
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          default: []
        additional_target_settings:
          title: Additional Target Settings
          description: The additional target settings of this table.
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
          example: &ref_19
            is_ordered_merge_key: false
            target_type: snowflake
            enforce_masking_policy: false
            recreate_keys: false
          x-examples:
            - *ref_19
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
        extract_method:
          title: Extract Method
          description: The extract method of the table entity.
          type: string
          default: incremental
          example: incremental
          extra:
            title: Extract Method
            type: extract_method
            name: extract_method
            display_name: Pick the way you would like to extract data from your source
            is_disabled: true
        report_id:
          title: Report Id
          description: The report id
          type: string
          enum:
            - predefined_addresses
        incremental_field:
          $ref: '#/components/schemas/IncrementalFieldEnum'
        date_range:
          $ref: '#/components/schemas/DateRange'
      type: object
      required:
        - target_table
        - report_id
        - date_range
      extra_fields:
        skip_failed_queues:
          display_name: Number of allowed failed queues
          name: skip_failed_queues
          value: 0
          required: false
          type: number
          readonly: true
          chakra: true
      report_index:
        extract_method: 0
        incremental_field: 1
        incremental_type: 2
        date_range: 3
        advanced_settings: 4
        include_end_value: 4.1
        time_interval: 4.2
        interval_size: 4.3
        skip_failed_queues: 5
      x-konfig-properties:
        incremental_field:
          description: The interval field of the river entity.
          default: updated at
          example: date_field
          extra:
            display_name: Incremental Field
            type: incremental_field
            options:
              - label: updated at
                value: updated at
              - label: created at
                value: created at
        date_range:
          title: Date Range
          description: The date range of the river entity.
          extra:
            type: date_range
    WriteShopifyPredefinedAnalyticReport:
      title: WriteShopifyPredefinedAnalyticReport
      description: Shopify predefined analytic report, used for write.
      properties:
        is_selected:
          title: Is Selected
          description: If the table is selected or not.
          type: boolean
          default: false
          example: true
        target_table:
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          type: string
          example: target_table_name
        modified_columns:
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          default: []
        additional_target_settings:
          title: Additional Target Settings
          description: The additional target settings of this table.
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
          example: &ref_20
            is_ordered_merge_key: false
            target_type: snowflake
            enforce_masking_policy: false
            recreate_keys: false
          x-examples:
            - *ref_20
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
        extract_method:
          title: Extract Method
          description: The extract method of the table entity.
          type: string
          default: incremental
          example: incremental
          extra:
            title: Extract Method
            type: extract_method
            name: extract_method
            display_name: Pick the way you would like to extract data from your source
            is_disabled: true
        report_id:
          title: Report Id
          description: The report id
          type: string
          enum:
            - predefined_analytic_reports
        incremental_field:
          title: Incremental Field
          description: The interval field of the river entity.
          type: string
          enum:
            - updated at
          default: updated at
          example: date_field
        date_range:
          $ref: '#/components/schemas/DateRange'
      type: object
      required:
        - target_table
        - report_id
        - date_range
      extra_fields:
        skip_failed_queues:
          display_name: Number of allowed failed queues
          name: skip_failed_queues
          value: 0
          required: false
          type: number
          readonly: true
          chakra: true
      report_index:
        extract_method: 0
        incremental_field: 1
        incremental_type: 2
        date_range: 3
        advanced_settings: 4
        include_end_value: 4.1
        time_interval: 4.2
        interval_size: 4.3
        skip_failed_queues: 5
      x-konfig-properties:
        date_range:
          title: Date Range
          description: The date range of the river entity.
          extra:
            type: date_range
    WriteShopifyPredefinedCustomersReport:
      title: WriteShopifyPredefinedCustomersReport
      description: Shopify predefined analytic report, used for write.
      properties:
        is_selected:
          title: Is Selected
          description: If the table is selected or not.
          type: boolean
          default: false
          example: true
        target_table:
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          type: string
          example: target_table_name
        modified_columns:
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          default: []
        additional_target_settings:
          title: Additional Target Settings
          description: The additional target settings of this table.
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
          example: &ref_21
            is_ordered_merge_key: false
            target_type: snowflake
            enforce_masking_policy: false
            recreate_keys: false
          x-examples:
            - *ref_21
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
        extract_method:
          title: Extract Method
          description: The extract method of the table entity.
          type: string
          default: incremental
          example: incremental
          extra:
            title: Extract Method
            type: extract_method
            name: extract_method
            display_name: Pick the way you would like to extract data from your source
            is_disabled: true
        report_id:
          title: Report Id
          description: The report id
          type: string
          enum:
            - predefined_customers
        incremental_field:
          $ref: '#/components/schemas/IncrementalFieldEnum'
        date_range:
          $ref: '#/components/schemas/DateRange'
      type: object
      required:
        - target_table
        - report_id
        - date_range
      extra_fields:
        skip_failed_queues:
          display_name: Number of allowed failed queues
          name: skip_failed_queues
          value: 0
          required: false
          type: number
          readonly: true
          chakra: true
      report_index:
        extract_method: 0
        incremental_field: 1
        incremental_type: 2
        date_range: 3
        advanced_settings: 4
        include_end_value: 4.1
        time_interval: 4.2
        interval_size: 4.3
        skip_failed_queues: 5
      x-konfig-properties:
        incremental_field:
          description: The interval field of the river entity.
          default: updated at
          example: date_field
          extra:
            display_name: Incremental Field
            type: incremental_field
            options:
              - label: updated at
                value: updated at
              - label: created at
                value: created at
        date_range:
          title: Date Range
          description: The date range of the river entity.
          extra:
            type: date_range
    WriteShopifyPredefinedInventoryLevelsReport:
      title: WriteShopifyPredefinedInventoryLevelsReport
      description: Shopify predefined inventory levels report, used for write.
      properties:
        is_selected:
          title: Is Selected
          description: If the table is selected or not.
          type: boolean
          default: false
          example: true
        target_table:
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          type: string
          example: target_table_name
        modified_columns:
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          default: []
        additional_target_settings:
          title: Additional Target Settings
          description: The additional target settings of this table.
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
          example: &ref_22
            is_ordered_merge_key: false
            target_type: snowflake
            enforce_masking_policy: false
            recreate_keys: false
          x-examples:
            - *ref_22
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
        extract_method:
          title: Extract Method
          description: The extract method of the table entity.
          type: string
          default: incremental
          example: incremental
          extra:
            title: Extract Method
            type: extract_method
            name: extract_method
            display_name: Pick the way you would like to extract data from your source
            is_disabled: true
        report_id:
          title: Report Id
          description: The report id
          type: string
          enum:
            - predefined_inventory_levels
        incremental_field:
          $ref: '#/components/schemas/IncrementalFieldEnum'
        date_range:
          $ref: '#/components/schemas/DateRange'
      type: object
      required:
        - target_table
        - report_id
        - date_range
      extra_fields:
        skip_failed_queues:
          display_name: Number of allowed failed queues
          name: skip_failed_queues
          value: 0
          required: false
          type: number
          readonly: true
          chakra: true
      report_index:
        extract_method: 0
        incremental_field: 1
        incremental_type: 2
        date_range: 3
        advanced_settings: 4
        include_end_value: 4.1
        time_interval: 4.2
        interval_size: 4.3
        skip_failed_queues: 5
      x-konfig-properties:
        incremental_field:
          description: The interval field of the river entity.
          default: created at
          example: date_field
          extra:
            display_name: Incremental Field
            type: incremental_field
            options:
              - label: updated at
                value: updated at
              - label: created at
                value: created at
        date_range:
          title: Date Range
          description: The date range of the river entity.
          extra:
            type: date_range
    WriteShopifyPredefinedMarketingEventsReport:
      title: WriteShopifyPredefinedMarketingEventsReport
      description: Shopify predefined marketing events report, used for write.
      properties:
        is_selected:
          title: Is Selected
          description: If the table is selected or not.
          type: boolean
          default: false
          example: true
        target_table:
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          type: string
          example: target_table_name
        modified_columns:
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          default: []
        additional_target_settings:
          title: Additional Target Settings
          description: The additional target settings of this table.
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
          example: &ref_23
            is_ordered_merge_key: false
            target_type: snowflake
            enforce_masking_policy: false
            recreate_keys: false
          x-examples:
            - *ref_23
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
        extract_method:
          title: Extract Method
          description: The extract method of the table entity.
          type: string
          default: all
          example: all
          extra:
            title: Extract Method
            display_name: Pick the way you would like to extract data from your source
            example: all
            is_disabled: true
            type: extract_method
            name: extract_method
        report_id:
          title: Report Id
          description: The report id
          type: string
          enum:
            - predefined_marketing_events
      type: object
      required:
        - target_table
        - report_id
      report_index:
        extract_method: 0
    WriteShopifyPredefinedOrderTransactionsReport:
      title: WriteShopifyPredefinedOrderTransactionsReport
      description: Shopify predefined order transaction report, used for write.
      properties:
        is_selected:
          title: Is Selected
          description: If the table is selected or not.
          type: boolean
          default: false
          example: true
        target_table:
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          type: string
          example: target_table_name
        modified_columns:
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          default: []
        additional_target_settings:
          title: Additional Target Settings
          description: The additional target settings of this table.
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
          example: &ref_24
            is_ordered_merge_key: false
            target_type: snowflake
            enforce_masking_policy: false
            recreate_keys: false
          x-examples:
            - *ref_24
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
        extract_method:
          title: Extract Method
          description: The extract method of the table entity.
          type: string
          default: incremental
          example: incremental
          extra:
            title: Extract Method
            type: extract_method
            name: extract_method
            display_name: Pick the way you would like to extract data from your source
            is_disabled: true
        report_id:
          title: Report Id
          description: The report id
          type: string
          enum:
            - predefined_order_transactions
        incremental_field:
          $ref: '#/components/schemas/IncrementalFieldEnum'
        date_range:
          $ref: '#/components/schemas/DateRange'
      type: object
      required:
        - target_table
        - report_id
        - date_range
      extra_fields:
        skip_failed_queues:
          display_name: Number of allowed failed queues
          name: skip_failed_queues
          value: 0
          required: false
          type: number
          readonly: true
          chakra: true
      report_index:
        extract_method: 0
        incremental_field: 1
        incremental_type: 2
        date_range: 3
        advanced_settings: 4
        include_end_value: 4.1
        time_interval: 4.2
        interval_size: 4.3
        skip_failed_queues: 5
      x-konfig-properties:
        incremental_field:
          description: The interval field of the river entity.
          default: updated at
          example: date_field
          extra:
            display_name: Incremental Field
            type: incremental_field
            options:
              - label: updated at
                value: updated at
              - label: created at
                value: created at
        date_range:
          title: Date Range
          description: The date range of the river entity.
          extra:
            type: date_range
    WriteShopifyPredefinedOrdersReport:
      title: WriteShopifyPredefinedOrdersReport
      description: Shopify predefined orders report, used for write.
      properties:
        is_selected:
          title: Is Selected
          description: If the table is selected or not.
          type: boolean
          default: false
          example: true
        target_table:
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          type: string
          example: target_table_name
        modified_columns:
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          default: []
        additional_target_settings:
          title: Additional Target Settings
          description: The additional target settings of this table.
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
          example: &ref_25
            is_ordered_merge_key: false
            target_type: snowflake
            enforce_masking_policy: false
            recreate_keys: false
          x-examples:
            - *ref_25
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
        extract_method:
          title: Extract Method
          description: The extract method of the table entity.
          type: string
          default: incremental
          example: incremental
          extra:
            title: Extract Method
            type: extract_method
            name: extract_method
            display_name: Pick the way you would like to extract data from your source
            is_disabled: true
        report_id:
          title: Report Id
          description: The report id
          type: string
          enum:
            - predefined_orders
        incremental_field:
          title: Incremental Field
          description: The interval field of the river entity.
          type: string
          enum:
            - updated at
          default: updated at
          example: date_field
          extra:
            display_name: Incremental Field
            type: incremental_field
            options:
              - label: updated at
                value: updated at
        date_range:
          $ref: '#/components/schemas/DateRange'
        status:
          $ref: '#/components/schemas/StatusEnum'
        financial_status:
          $ref: '#/components/schemas/FinancialStatusEnum'
      type: object
      required:
        - target_table
        - report_id
        - date_range
      extra_fields:
        skip_failed_queues:
          display_name: Number of allowed failed queues
          name: skip_failed_queues
          value: 0
          required: false
          type: number
          readonly: true
          chakra: true
      report_index:
        status: 0
        financial_status: 1
        extract_method: 2
        incremental_field: 3
        incremental_type: 4
        date_range: 5
        advanced_settings: 6
        include_end_value: 6.1
        time_interval: 6.2
        interval_size: 6.3
        skip_failed_queues: 7
      x-konfig-properties:
        date_range:
          title: Date Range
          description: The date range of the river entity.
          extra:
            type: date_range
        status:
          description: Filter by order status
          default: any
          extra:
            required: true
            chakra: true
            display_name: Status
            type: list_single_options
            options:
              - id: any
                name: Any
              - id: cancelled
                name: Cancelled
              - id: closed
                name: Closed
              - id: open
                name: Open
        financial_status:
          description: Filter by order's financial status
          default: any
          extra:
            chakra: true
            display_name: Financial Status
            type: list_single_options
            options:
              - id: any
                name: Any
              - id: paid
                name: Paid
              - id: unpaid
                name: Unpaid
              - id: voided
                name: Voided
              - id: pending
                name: Pending
              - id: refunded
                name: Refunded
              - id: authorized
                name: Authorized
              - id: partially_paid
                name: Partially paid
              - id: partially_refunded
                name: Partially refunded
    WriteShopifyPredefinedProductsReport:
      title: WriteShopifyPredefinedProductsReport
      description: Shopify predefined products report, used for write.
      properties:
        is_selected:
          title: Is Selected
          description: If the table is selected or not.
          type: boolean
          default: false
          example: true
        target_table:
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          type: string
          example: target_table_name
        modified_columns:
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          default: []
        additional_target_settings:
          title: Additional Target Settings
          description: The additional target settings of this table.
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
          example: &ref_26
            is_ordered_merge_key: false
            target_type: snowflake
            enforce_masking_policy: false
            recreate_keys: false
          x-examples:
            - *ref_26
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
        extract_method:
          title: Extract Method
          description: The extract method of the table entity.
          type: string
          default: incremental
          example: incremental
          extra:
            title: Extract Method
            type: extract_method
            name: extract_method
            display_name: Pick the way you would like to extract data from your source
            is_disabled: true
        report_id:
          title: Report Id
          description: The report id
          type: string
          enum:
            - predefined_products
        incremental_field:
          $ref: '#/components/schemas/ProductsIncrementalFieldEnum'
        date_range:
          $ref: '#/components/schemas/DateRange'
      type: object
      required:
        - target_table
        - report_id
        - date_range
      extra_fields:
        skip_failed_queues:
          display_name: Number of allowed failed queues
          name: skip_failed_queues
          value: 0
          required: false
          type: number
          readonly: true
          chakra: true
      report_index:
        extract_method: 0
        incremental_field: 1
        incremental_type: 2
        date_range: 3
        advanced_settings: 4
        include_end_value: 4.1
        time_interval: 4.2
        interval_size: 4.3
        skip_failed_queues: 5
      x-konfig-properties:
        incremental_field:
          description: The interval field of the river entity.
          default: updated at
          example: date_field
          extra:
            display_name: Incremental Field
            type: incremental_field
            options:
              - label: updated at
                value: updated at
              - label: created at
                value: created at
              - label: published at
                value: published at
        date_range:
          title: Date Range
          description: The date range of the river entity.
          extra:
            type: date_range
    WriteShopifyPredefinedShopReport:
      title: WriteShopifyPredefinedShopReport
      description: Shopify predefined shop report, used for write.
      properties:
        is_selected:
          title: Is Selected
          description: If the table is selected or not.
          type: boolean
          default: false
          example: true
        target_table:
          title: Target Table
          description: >-
            The name of the target table relevant to multi-tables and predefined
            rivers
          type: string
          example: target_table_name
        modified_columns:
          title: Modified Columns
          description: >-
            The modified columns of the river entityfor example if you want to
            unselect a column or change the column name or type.
          items:
            oneOf:
              - $ref: '#/components/schemas/BigQueryModifiedColumn'
              - $ref: '#/components/schemas/SnowflakeModifiedColumn'
              - $ref: '#/components/schemas/RedshiftModifiedColumn'
              - $ref: '#/components/schemas/S3ModifiedColumn'
              - $ref: '#/components/schemas/GCSModifiedColumn'
              - $ref: '#/components/schemas/AthenaModifiedColumn'
              - $ref: '#/components/schemas/AzureSqlModifiedColumn'
              - $ref: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
              - $ref: '#/components/schemas/DatabricksModifiedColumn'
              - $ref: '#/components/schemas/PostgresModifiedColumn'
            discriminator:
              propertyName: target_type
              mapping:
                bigquery: '#/components/schemas/BigQueryModifiedColumn'
                snowflake: '#/components/schemas/SnowflakeModifiedColumn'
                redshift: '#/components/schemas/RedshiftModifiedColumn'
                s3: '#/components/schemas/S3ModifiedColumn'
                GCS: '#/components/schemas/GCSModifiedColumn'
                athena: '#/components/schemas/AthenaModifiedColumn'
                azure_sql: '#/components/schemas/AzureSqlModifiedColumn'
                azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsModifiedColumn'
                databricks: '#/components/schemas/DatabricksModifiedColumn'
                postgres: '#/components/schemas/PostgresModifiedColumn'
          type: array
          default: []
        additional_target_settings:
          title: Additional Target Settings
          description: The additional target settings of this table.
          oneOf:
            - $ref: '#/components/schemas/SnowflakeAdditionalTargetSettings'
            - $ref: '#/components/schemas/RedshiftAdditionalTargetSettings'
            - $ref: '#/components/schemas/BigQueryAdditionalTargetSettings'
            - $ref: '#/components/schemas/AthenaAdditionalTargetSettings'
            - $ref: '#/components/schemas/AzureSqlAdditionalTargetSettings'
            - $ref: '#/components/schemas/PostgresAdditionalTargetSettings'
          discriminator:
            propertyName: target_type
            mapping:
              snowflake: '#/components/schemas/SnowflakeAdditionalTargetSettings'
              redshift: '#/components/schemas/RedshiftAdditionalTargetSettings'
              bigquery: '#/components/schemas/BigQueryAdditionalTargetSettings'
              athena: '#/components/schemas/AthenaAdditionalTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlAdditionalTargetSettings'
              postgres: '#/components/schemas/PostgresAdditionalTargetSettings'
          nullable: true
          example: &ref_27
            is_ordered_merge_key: false
            target_type: snowflake
            enforce_masking_policy: false
            recreate_keys: false
          x-examples:
            - *ref_27
            - is_ordered_merge_key: false
              target_type: redshift
              distribution_method: even
            - is_ordered_merge_key: false
              target_type: bigquery
              split_tables: no_split
        extract_method:
          title: Extract Method
          description: The extract method of the table entity.
          type: string
          default: all
          example: all
          extra:
            title: Extract Method
            display_name: Pick the way you would like to extract data from your source
            example: all
            is_disabled: true
            type: extract_method
            name: extract_method
        report_id:
          title: Report Id
          description: The report id
          type: string
          enum:
            - predefined_shop
      type: object
      required:
        - target_table
        - report_id
      report_index:
        extract_method: 0
    WriteSourceToTargetRiverPropertiesInput:
      title: WriteSourceToTargetRiverPropertiesInput
      description: Source to target River properties that is being used for PUT purposes
      properties:
        properties_type:
          title: Properties Type
          type: string
          enum:
            - source_to_target
          default: source_to_target
        source:
          $ref: '#/components/schemas/SourceSettings'
        target:
          title: Target
          description: The target of the river.
          oneOf:
            - $ref: '#/components/schemas/SnowflakeTargetSettings'
            - $ref: '#/components/schemas/BigQueryTargetSettings'
            - $ref: '#/components/schemas/RedshiftTargetSettings'
            - $ref: '#/components/schemas/S3TargetSettings'
            - $ref: '#/components/schemas/EmailTargetSettings'
            - $ref: '#/components/schemas/BlobStorageSettings'
            - $ref: '#/components/schemas/GcsTargetSettings'
            - $ref: '#/components/schemas/DatabricksTargetSettings'
            - $ref: '#/components/schemas/AzureSynapseAnalyticsTargetSettings'
            - $ref: '#/components/schemas/AthenaTargetSettings'
            - $ref: '#/components/schemas/AzureSqlTargetSettings'
            - $ref: '#/components/schemas/PostgresTargetSettings'
          discriminator:
            propertyName: name
            mapping:
              snowflake: '#/components/schemas/SnowflakeTargetSettings'
              bigquery: '#/components/schemas/BigQueryTargetSettings'
              redshift: '#/components/schemas/RedshiftTargetSettings'
              s3: '#/components/schemas/S3TargetSettings'
              target_email: '#/components/schemas/EmailTargetSettings'
              blob_storage: '#/components/schemas/BlobStorageSettings'
              GCS: '#/components/schemas/GcsTargetSettings'
              databricks: '#/components/schemas/DatabricksTargetSettings'
              azure_synapse_analytics: '#/components/schemas/AzureSynapseAnalyticsTargetSettings'
              athena: '#/components/schemas/AthenaTargetSettings'
              azure_sql: '#/components/schemas/AzureSqlTargetSettings'
              postgres: '#/components/schemas/PostgresTargetSettings'
        schemas:
          title: Schemas
          description: The schemas of the river entity
          items:
            $ref: '#/components/schemas/WriteSchemaInput'
          type: array
          default: []
      type: object
      required:
        - source
        - target
      x-konfig-properties:
        source:
          title: Source
          description: The source of the river.
    DeleteDataframeResponse:
      type: object
      properties: {}
      example: {}
    ActivitiesGetRunLogsResponse:
      type: string
    DeleteRiverResponse:
      type: object
      properties: {}
      example: {}
    RiversDeleteCdcConfigResponse:
      type: object
      properties: {}
      example: {}
    RiversSetCdcConfigResponse:
      type: object
      properties: {}
      example: {}
    DeleteConnectionResponse:
      type: object
      properties: {}
      example: {}
  securitySchemes:
    HTTPBearer:
      type: http
      scheme: bearer
