openapi: 3.0.1
info:
  title: Deel REST API
  description: >-
    API specification for Deel HR user provisioning API. This YAML file is a
    preview of the API Deel is building. We are looking forward to your
    feedback.
  version: 1.25.0
  contact:
    name: Deel API Team
    email: apiteam@deel.com
  termsOfService: https://www.letsdeel.com/terms-of-service
  x-konfig-ignore:
    object-with-no-properties: true
    potential-incorrect-type: true
servers:
  - description: Production server
    url: https://api.letsdeel.com/rest/v2
  - description: Demo server
    url: https://api-staging.letsdeel.com/rest/v2
tags:
  - description: API end-points related to Partner Managed data.
    name: Partner Managed
    externalDocs:
      description: See
      url: https://developer.letdeel.com
  - description: Global Payroll
    name: Global Payroll
    externalDocs:
      description: See
      url: https://developer.letsdeel.com
  - description: API end-points related to People data.
    name: People
    externalDocs:
      description: See
      url: https://developer.letdeel.com
  - description: >-
      The Contracts resource lets you create, amend and, retrieve Deel
      contracts.
    name: Contracts
    externalDocs:
      description: See
      url: https://developer.deel.com/rest/v2/#contracts
  - description: >-
      The Contracts resource lets you create, amend and, retrieve Deel
      contracts.
    name: Contractors
    externalDocs:
      description: See
      url: https://developer.deel.com/rest/v2/#contracts
  - description: >-
      The Invoices resource lets you create, amend and retrieve invoices related
      to Deel contracts.
    name: Invoices
    externalDocs:
      description: See
      url: https://developer.letsdeel.com
  - description: >-
      The Invoices resource lets you create, amend and retrieve timesheets of
      Deel contracts.
    name: Timesheets
    externalDocs:
      description: See
      url: https://developer.letsdeel.com
  - description: Manage time off requests.
    name: Time Off
    externalDocs:
      description: See
      url: https://developer.letsdeel.com
  - name: User
  - description: Employee of Record (EOR).
    name: EOR
    externalDocs:
      description: See
      url: https://developer.letsdeel.com
  - description: Helper end-points for managing milestones of Deel contracts
    name: Milestones
    externalDocs:
      description: See
      url: https://developer.deel.com/rest/v2/#milestones
  - description: Helper end-points for additional information about your organizations
    name: Organizations
    externalDocs:
      description: See
      url: https://developer.deel.com/rest/v2/#organizations
  - description: API end-points related to Adjustments data.
    name: Adjustments
    externalDocs:
      description: See
      url: https://developer.letdeel.com
  - name: Webhooks
  - description: End-points to retrieve paid invoices and receipts.
    name: Accounting
    externalDocs:
      description: See
      url: https://developer.deel.com
  - description: Helper end-points for choosing options for other operations
    name: Lookups
    externalDocs:
      description: See
      url: https://developer.deel.com/rest/v2/#lookups
  - description: End-points to manage tasks for a given contract
    name: Tasks
    externalDocs:
      description: See
      url: https://developer.deel.com/rest/v2/#tasks
  - description: End-points to manage off-cycle payments for a given contract
    name: Off-cycle Payments
    externalDocs:
      description: See
      url: https://developer.deel.com/rest/v2/#off-cycle-payments
  - description: API endpoints related to Candidates.
    name: Candidates
    externalDocs:
      description: See
      url: https://developer.letdeel.com
  - description: API end-points related to Manager data.
    name: Managers
    externalDocs:
      description: See
      url: https://developer.letdeel.com
  - description: >-
      End-points to generate temporary tokens to use with embedded Deel SDK
      components.
    name: Token
    externalDocs:
      description: See
      url: https://developer.letsdeel.com
  - name: Attachments
  - name: ServiceProviderConfig
  - description: API end-points related to HRIS data.
    name: Hris
    externalDocs:
      description: See
      url: https://developer.letdeel.com
  - description: The Legal Entities resource lets you manage your legal entities
    name: Legal Entities
    externalDocs:
      description: See
      url: https://developer.deel.com/rest/v2/#legalentities
  - description: Helper end-points for additional information about your teams
    name: Teams
    externalDocs:
      description: See
      url: https://developer.letsdeel.com
paths:
  /invoices:
    get:
      tags:
        - Accounting
      summary: Retrieve invoices
      operationId: Accounting_getPaidInvoices
      security:
        - deelToken: []
        - oauth2:
            - accounting:read
      description: Retrieve a list of paid invoices for your workforce.
      parameters:
        - $ref: '#/components/parameters/ParamIssuedDateFrom'
        - $ref: '#/components/parameters/ParamIssuedDateTo'
        - $ref: '#/components/parameters/ParamLimit'
        - $ref: '#/components/parameters/ParamOffset'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForInvoiceList'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /invoices/deel:
    get:
      tags:
        - Accounting
      summary: Retrieve Deel invoices
      operationId: Accounting_getDeelInvoices
      security:
        - deelToken: []
        - oauth2:
            - accounting:read
      description: Retrieve a list of invoices related to Deel fees.
      parameters:
        - $ref: '#/components/parameters/ParamLimit'
        - $ref: '#/components/parameters/ParamOffset'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForDeelInvoiceList'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /invoices/{invoice_id}/download:
    get:
      tags:
        - Accounting
      summary: Download invoice PDF
      operationId: Accounting_getInvoicePdfDownloadLink
      security:
        - deelToken: []
        - oauth2:
            - accounting:read
      description: Get link to download the invoice PDF.
      parameters:
        - $ref: '#/components/parameters/ParamInvoiceInvoiceId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForInvoiceDownloadLink'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /managers:
    get:
      tags:
        - Managers
      summary: List of managers
      operationId: Managers_list
      security:
        - deelToken: []
        - oauth2:
            - organizations:read
      description: List all organization managers.
      parameters:
        - $ref: '#/components/parameters/ParamLimitForAgreements'
        - $ref: '#/components/parameters/ParamOffsetForAgreements'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyToGetAdminUser'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '409':
          description: A matching profile already exists.
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
    post:
      tags:
        - Managers
      summary: Create a manager
      operationId: Managers_createNewManager
      security:
        - deelToken: []
        - oauth2:
            - organizations:write
      description: Create a new organization manager.
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreateAdminUser'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyToCreateAdminUser'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '409':
          description: A matching profile already exists.
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /hris/direct-employees:
    post:
      tags:
        - People
      summary: Create a new Hris direct employee
      operationId: People_createDirectEmployee
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreateHrisDirectEmployee'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForHrisDirectEmployee'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '409':
          description: A matching profile already exists
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /eor/validations/{country_code}:
    get:
      tags:
        - EOR
      summary: Retrieve country guide
      operationId: Eor_getCountryGuide
      security:
        - deelToken: []
        - oauth2:
            - contracts:read
      description: >-
        Retrieve the hiring guide data for a country. This data can be used to
        create Employee of Record (EOR) contract quotes.
      parameters:
        - $ref: '#/components/parameters/ParamEorCountryCode'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForEorCountryValidations'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /eor/workers/{worker_id}/payslips:
    get:
      tags:
        - EOR
      summary: Retrieve employee payslips
      operationId: Eor_getEmployeePayslips
      security:
        - deelToken: []
        - oauth2:
            - payslips:read
      description: Get of payslips for an employee.
      parameters:
        - $ref: '#/components/parameters/ParamWorkerId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForEORPayslipsList'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /eor/workers/{worker_id}/payslips/{payslip_id}/download:
    get:
      tags:
        - EOR
      summary: Download payslip PDF
      operationId: Eor_getPayslipDownload
      security:
        - deelToken: []
        - oauth2:
            - payslips:read
      description: Get download url for EOR payslip.
      parameters:
        - $ref: '#/components/parameters/ParamWorkerId'
        - $ref: '#/components/parameters/PayslipId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForEORPayslipDownloadUrl'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /eor/employment_cost:
    post:
      tags:
        - EOR
      summary: Employee Cost Calculator
      operationId: Eor_calculateEmployeeCosts
      security:
        - deelToken: []
        - oauth2: []
      description: Determine EOR employee costs across the globe.
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCalculateEorEmployeeCost'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForEorEmploymentCostCalculation'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /eor/{contract_id}/benefits:
    get:
      tags:
        - EOR
      summary: Get EOR contract benefits
      operationId: Eor_getContractBenefits
      security:
        - deelToken: []
        - oauth2:
            - contracts:read
      description: Retrieve EOR contract benefits
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForEorContractBenefits'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /eor:
    post:
      tags:
        - EOR
      summary: Create an EOR contract
      operationId: Eor_createContractQuote
      security:
        - deelToken: []
        - oauth2:
            - contracts:read
            - contracts:write
      description: >-
        Create an Employee of Record (EOR) contract quote. The endpoints creates
        a contract quote request. Deel will process the information and get back
        with a quote for this contract.
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyForEorContractCreation'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForEorContractCreation'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/gp:
    post:
      tags:
        - Global Payroll
      summary: Create a contract
      operationId: GlobalPayroll_createContractGp
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      description: Create a Global Payroll contract.
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyForGPContractCreation'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForGPContractCreation'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/time-based:
    post:
      tags:
        - Contractors
      summary: Create a new contract (time-based)
      operationId: Contractors_createNewTimeBasedContract
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreateContractTimeBased'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForContractCreatedTimeBased'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
      x-internal: true
  /gp/workers/{worker_id}/payslips:
    get:
      tags:
        - Global Payroll
      summary: Retrieve employee payslips
      operationId: GlobalPayroll_getPayslips
      security:
        - deelToken: []
        - oauth2:
            - payslips:read
      description: Get of payslips for an employee.
      parameters:
        - $ref: '#/components/parameters/ParamWorkerId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGPPayslipsList'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /gp/workers/{worker_id}/address:
    patch:
      tags:
        - Global Payroll
      summary: Update address
      operationId: GlobalPayroll_updateWorkerAddress
      security:
        - deelToken: []
        - oauth2:
            - people:write
      description: Update the address of a Global Payroll employee.
      parameters:
        - $ref: '#/components/parameters/ParamWorkerId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyForGPEmployeeAddressUpdate'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGPEmployeeAddressUpdate'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /gp/workers/{worker_id}/banks:
    get:
      tags:
        - Global Payroll
      summary: Retrieve bank accounts
      operationId: GlobalPayroll_getBankAccounts
      security:
        - deelToken: []
        - oauth2:
            - people:read
      description: Retrieve all bank accounts for an employee.
      parameters:
        - $ref: '#/components/parameters/ParamWorkerId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForWorkerBankAccountsInfo'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
    post:
      tags:
        - Global Payroll
      summary: Add bank account
      operationId: GlobalPayroll_addBankAccount
      security:
        - deelToken: []
        - oauth2:
            - people:write
      description: Add a new bank account for an employee.
      parameters:
        - $ref: '#/components/parameters/ParamWorkerId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyForAddWorkerBankAccount'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForBankAccountUpdated'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /gp/workers/{worker_id}/banks/{bank_id}:
    patch:
      tags:
        - Global Payroll
      summary: Modify bank account
      operationId: GlobalPayroll_modifyBankAccount
      security:
        - deelToken: []
        - oauth2:
            - people:write
      description: Modify bank account for an employee.
      parameters:
        - $ref: '#/components/parameters/ParamWorkerId'
        - $ref: '#/components/parameters/ParamEmployeeBankAccountId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyForAddWorkerBankAccount'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForBankAccountUpdated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
      x-forbidden-token-types:
        - personal
        - organization
        - oauth2
  /gp/workers/{worker_id}/banks/guide:
    get:
      tags:
        - Global Payroll
      summary: Retrieve bank guide
      operationId: GlobalPayroll_getBankGuide
      security:
        - deelToken: []
        - oauth2:
            - people:read
      description: Retrieve the bank form guide for employee.
      parameters:
        - $ref: '#/components/parameters/ParamWorkerId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForBankAccountGuide'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /gp/workers/{worker_id}/compensation:
    patch:
      tags:
        - Global Payroll
      summary: Update compensation
      operationId: GlobalPayroll_updateCompensationHistory
      security:
        - deelToken: []
        - oauth2:
            - people:write
      description: >-
        Update the compensation of a Global Payroll employee. Returns the full
        compensation history including the update.
      parameters:
        - $ref: '#/components/parameters/ParamWorkerId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyForGPEmployeeCompensationUpdate'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGPEmployeeCompensationUpdate'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /gp/workers/{worker_id}/pto-policy:
    patch:
      tags:
        - Global Payroll
      summary: Update PTO policy
      operationId: GlobalPayroll_updatePtoPolicy
      security:
        - deelToken: []
        - oauth2:
            - people:write
      description: Update the PTO policy of a Global Payroll employee.
      parameters:
        - $ref: '#/components/parameters/ParamWorkerId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyForGPEmployeePTOUpdate'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGenericResultUpdated'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /gp/workers/{worker_id}/employee-information:
    patch:
      tags:
        - Global Payroll
      summary: Update employee information
      operationId: GlobalPayroll_updateEmployeeInformation
      security:
        - deelToken: []
        - oauth2:
            - people:write
      description: Update Global Payroll employee information.
      parameters:
        - $ref: '#/components/parameters/ParamWorkerId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyForGPEmployeeEmployeeUpdate'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGPEmployeeInformationUpdate'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /gp/workers/{worker_id}/payslips/{payslip_id}/download:
    get:
      tags:
        - Global Payroll
      summary: Download payslip PDF
      operationId: GlobalPayroll_getPayslipDownloadUrl
      security:
        - deelToken: []
        - oauth2:
            - payslips:read
      description: Get download url for GP payslip.
      parameters:
        - $ref: '#/components/parameters/ParamWorkerId'
        - $ref: '#/components/parameters/PayslipId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGPPayslipDownloadUrl'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /gp/legal-entities/{legal_entity_id}/reports:
    get:
      tags:
        - Global Payroll
      summary: List payroll events by legal entity
      operationId: GlobalPayroll_listPayrollEventsByLegalEntity
      security:
        - deelToken: []
        - oauth2:
            - global-payroll:read
      description: Get list of global payroll events by legal entities.
      parameters:
        - $ref: '#/components/parameters/ParamLegalEntityId'
        - $ref: '#/components/parameters/ParamPayrollReportStartDate'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGPPayrollEventReport'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /gp/reports/{gp_report_id}/gross_to_net:
    get:
      tags:
        - Global Payroll
      summary: List gross-to-net report
      operationId: GlobalPayroll_getGrossToNetGpReport
      security:
        - deelToken: []
        - oauth2:
            - global-payroll:read
      description: Get list of global payroll reports detailing gross-to-net calculations.
      parameters:
        - $ref: '#/components/parameters/ParamGlobalPayrollReportId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGlobalPayrollG2NReport'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /gp/reports/{gp_report_id}/gross_to_net/csv:
    get:
      tags:
        - Global Payroll
      summary: Download gross-to-net report
      operationId: GlobalPayroll_downloadGrossToNetGpReport
      security:
        - deelToken: []
        - oauth2:
            - global-payroll:read
      description: Download global payroll reports detailing gross-to-net calculations.
      parameters:
        - $ref: '#/components/parameters/ParamGlobalPayrollReportId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGlobalPayrollG2NReportCsv'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /gp/workers/{worker_id}/terminations:
    post:
      tags:
        - Global Payroll
      summary: Request termination
      operationId: GlobalPayroll_requestTerminationProcess
      security:
        - deelToken: []
        - oauth2:
            - global-payroll:write
      description: >-
        Request a termination for a global payroll employee. A successful call
        starts the termination process and does not confirm termination.
      parameters:
        - $ref: '#/components/parameters/ParamWorkerId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyForWorkerTermination'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForWorkerTermination'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /adjustments:
    post:
      tags:
        - Adjustments
      summary: Create a new adjustment
      operationId: Adjustments_createNewAdjustment
      security:
        - deelToken: []
        - oauth2:
            - adjustments:write
      description: Create a new adjustment.
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreateAdjustment'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForAdjustmentCreated'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /adjustments/{adjustment_id}:
    get:
      tags:
        - Adjustments
      summary: Retrieve an adjustment
      operationId: Adjustments_getById
      security:
        - deelToken: []
        - oauth2:
            - adjustments:read
      description: Retrieve an adjustment.
      parameters:
        - $ref: '#/components/parameters/ParamAdjustmentId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForAdjustmentById'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
    patch:
      tags:
        - Adjustments
      summary: Update an adjustment
      operationId: Adjustments_updateAdjustment
      security:
        - deelToken: []
        - oauth2:
            - adjustments:write
      description: Update an adjustment.
      parameters:
        - $ref: '#/components/parameters/ParamAdjustmentId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToUpdateAdjustment'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGenericResultUpdated'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
    delete:
      tags:
        - Adjustments
      summary: Delete an adjustment
      operationId: Adjustments_removeAdjustment
      security:
        - deelToken: []
        - oauth2:
            - adjustments:write
      description: Delete an adjustment.
      parameters:
        - $ref: '#/components/parameters/ParamAdjustmentId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGenericResultDeleted'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /adjustments/categories:
    get:
      tags:
        - Adjustments
      summary: Retrieve categories
      operationId: Adjustments_getCategories
      security:
        - deelToken: []
        - oauth2:
            - adjustments:read
      description: Get all categories for your organization.
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForAdjustmentsCategories'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /candidates:
    post:
      tags:
        - Candidates
      summary: Add Candidate
      operationId: Candidates_addCandidateToDeel
      security:
        - deelToken: []
        - oauth2:
            - candidates:write
      description: Add a candidate to Deel.
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreateCandidate'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForGenericResultCreated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
      x-forbidden-token-types:
        - personal
        - organization
  /candidates/{candidate_id}:
    patch:
      tags:
        - Candidates
      summary: Update Candidate
      operationId: Candidates_updateCandidateById
      security:
        - deelToken: []
        - oauth2:
            - candidates:write
      description: Update an existed candidate.
      parameters:
        - $ref: '#/components/parameters/ParamCandidateId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToPatchCandidate'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGenericResultUpdated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
      x-forbidden-token-types:
        - personal
        - organization
  /partner-managed/employees/{employee_id}/contracts/{contract_id}/additional-information:
    post:
      tags:
        - Partner Managed
      summary: Add additional information
      operationId: PartnerManaged_addAdditionalInformationForEorEmployee
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      description: Add additional information for an EOR employee.
      parameters:
        - $ref: '#/components/parameters/ParamEmployeeId'
        - $ref: '#/components/parameters/ParamContractId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToAdditionalEORInfo'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForGenericResultUpdated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
      x-forbidden-token-types:
        - personal
        - organization
        - oauth2
  /partner-managed/employees/{employee_id}/contracts/{contract_id}/signatures:
    post:
      tags:
        - Partner Managed
      summary: Sign a contract
      operationId: PartnerManaged_signContract
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      description: Sign a contract as a employee.
      parameters:
        - $ref: '#/components/parameters/ParamEmployeeId'
        - $ref: '#/components/parameters/ParamContractId'
      requestBody:
        $ref: >-
          #/components/requestBodies/RequestBodyToCreateEmployeeContractSignature
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForGenericResultCreated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
      x-forbidden-token-types:
        - personal
        - organization
        - oauth2
  /partner-managed/employees/{employee_id}/contracts/{contract_id}/custom-verification-letter:
    post:
      tags:
        - Partner Managed
      summary: Request custom verification letter
      operationId: PartnerManaged_requestCustomVerificationLetter
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      description: >-
        Request employment verification letters, visa support, bank verification
        and more.
      parameters:
        - $ref: '#/components/parameters/ParamEmployeeId'
        - $ref: '#/components/parameters/ParamContractId'
      requestBody:
        $ref: >-
          #/components/requestBodies/RequestBodyToRequestCustomVerificationLetter
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForGenericResultCreated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
      x-forbidden-token-types:
        - personal
        - organization
        - oauth2
  /partner-managed/employees/{employee_id}/contracts/{contract_id}/hr-documents:
    get:
      tags:
        - Partner Managed
      summary: List HR verification letters and documents
      operationId: PartnerManaged_listHrVerificationLettersAndDocuments
      security:
        - deelToken: []
        - oauth2:
            - contracts:read
      description: List all HR verification letters and documents available.
      parameters:
        - $ref: '#/components/parameters/ParamEmployeeId'
        - $ref: '#/components/parameters/ParamContractId'
      responses:
        '200':
          $ref: >-
            #/components/responses/ResponseBodyForHrVerificationLettersAndDocuments
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
      x-forbidden-token-types:
        - personal
        - organization
        - oauth2
  /partner-managed/employees/{employee_id}/contracts/{contract_id}/hr-documents/{document_id}/download:
    get:
      tags:
        - Partner Managed
      summary: Download HR verification letters and documents
      operationId: PartnerManaged_downloadHrVerificationLettersAndDocuments
      security:
        - deelToken: []
        - oauth2:
            - contracts:read
      description: Retrieve URL to download HR verification letters and documents.
      parameters:
        - $ref: '#/components/parameters/ParamEmployeeId'
        - $ref: '#/components/parameters/ParamContractId'
        - $ref: '#/components/parameters/ParamDocumentId'
      responses:
        '200':
          $ref: >-
            #/components/responses/ResponseBodyForDownloadHrVerificationLettersAndDocuments
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
      x-forbidden-token-types:
        - personal
        - organization
        - oauth2
  /partner-managed/employees/{employee_id}/contracts/{contract_id}/offer-letter:
    get:
      tags:
        - Partner Managed
      summary: Preview job offer letter
      operationId: PartnerManaged_previewJobOfferLetter
      security:
        - deelToken: []
        - oauth2:
            - contracts:read
      description: >-
        Retrieve an EOR job offer letter in HTML. This endpoint does not support
        IC and Global Payroll contract types.
      parameters:
        - $ref: '#/components/parameters/ParamEmployeeId'
        - $ref: '#/components/parameters/ParamContractId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForContractPreview'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
      x-forbidden-token-types:
        - personal
        - organization
        - oauth2
  /partner-managed/employees/{employee_id}/contracts/{contract_id}/employee-agreement:
    get:
      tags:
        - Partner Managed
      summary: Preview employee agreement
      operationId: PartnerManaged_getEmployeeAgreementHtml
      security:
        - deelToken: []
        - oauth2:
            - contracts:read
      description: Retrieve an EOR Employee Agreement content in HTML.
      parameters:
        - $ref: '#/components/parameters/ParamEmployeeId'
        - $ref: '#/components/parameters/ParamContractId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForContractPreview'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
      x-forbidden-token-types:
        - personal
        - organization
        - oauth2
  /partner-managed/employees/{employee_id}/contracts/{contract_id}/employee-agreement/download:
    get:
      tags:
        - Partner Managed
      summary: Download employee agreement PDF
      operationId: PartnerManaged_downloadEmployeeAgreementPdf
      security:
        - deelToken: []
        - oauth2:
            - contracts:read
      description: Get link to download the employee agreement PDF.
      parameters:
        - $ref: '#/components/parameters/ParamEmployeeId'
        - $ref: '#/components/parameters/ParamContractId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForEmployeeAgreementDownload'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
      x-forbidden-token-types:
        - personal
        - organization
        - oauth2
  /partner-managed/employees/{employee_id}/banks/guide:
    get:
      tags:
        - Partner Managed
      summary: Bank account form
      operationId: PartnerManaged_getBankGuideForEorEmployee
      security:
        - deelToken: []
        - oauth2:
            - contracts:read
      description: >-
        Retrieve bank account form guide for an EOR employee. This data can be
        used to add a new bank account for an employee.
      parameters:
        - $ref: '#/components/parameters/ParamEmployeeId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForBankAccountGuide'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
      x-forbidden-token-types:
        - personal
        - organization
        - oauth2
  /partner-managed/employees/{employee_id}/banks:
    post:
      tags:
        - Partner Managed
      summary: Add bank account
      operationId: PartnerManaged_addBankAccountForEorEmployee
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      description: Add bank account for an EOR employee.
      parameters:
        - $ref: '#/components/parameters/ParamEmployeeId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToAddEmployeeBankAccount'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForEmployeeBankAccountAdded'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
      x-forbidden-token-types:
        - personal
        - organization
        - oauth2
  /partner-managed/employees/{employee_id}/banks/{bank_id}:
    patch:
      tags:
        - Partner Managed
      summary: Modify bank account for an EOR employee
      operationId: PartnerManaged_modifyBankAccountForEorEmployee
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      description: Modify bank account for an EOR employee.
      parameters:
        - $ref: '#/components/parameters/ParamEmployeeId'
        - $ref: '#/components/parameters/ParamEmployeeBankAccountId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToModifyEmployeeBankAccount'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForEmployeeBankAccountAdded'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
      x-forbidden-token-types:
        - personal
        - organization
        - oauth2
  /partner-managed/employees/{employee_id}/payslips:
    get:
      tags:
        - Partner Managed
      summary: Get list of payslips for an EOR employee
      operationId: PartnerManaged_listPayslipsForEorEmployee
      security:
        - deelToken: []
        - oauth2:
            - contracts:read
      description: Get list of payslips for an EOR employee.
      parameters:
        - $ref: '#/components/parameters/ParamEmployeeId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForEmployeePayslipsList'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
      x-forbidden-token-types:
        - personal
        - organization
        - oauth2
  /partner-managed/employees/{employee_id}/compliance-documents:
    get:
      tags:
        - Partner Managed
      summary: List of employee compliance documents
      operationId: PartnerManaged_listEmployeeComplianceDocuments
      security:
        - deelToken: []
        - oauth2:
            - contracts:read
      description: Get a list of employee compliance documents.
      parameters:
        - $ref: '#/components/parameters/ParamEmployeeId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGetEmployeeComplianceDocuments'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
      x-forbidden-token-types:
        - personal
        - organization
        - oauth2
  /partner-managed/employees/{employee_id}/compliance-documents/{document_id}:
    post:
      tags:
        - Partner Managed
      summary: Upload employee compliance document
      operationId: PartnerManaged_uploadComplianceDocument
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      description: Upload an employee compliance document.
      parameters:
        - $ref: '#/components/parameters/ParamEmployeeId'
        - $ref: '#/components/parameters/ParamDocumentId'
      requestBody:
        $ref: >-
          #/components/requestBodies/RequestBodyToUploadEmployeeComplianceDocument
      responses:
        '200':
          $ref: >-
            #/components/responses/ResponseBodyForUploadEmployeeComplianceDocument
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
      x-forbidden-token-types:
        - personal
        - organization
        - oauth2
  /partner-managed/employees/{employee_id}/compliance-documents/{document_id}/templates/download:
    get:
      tags:
        - Partner Managed
      summary: Download employee compliance document template
      operationId: PartnerManaged_downloadComplianceDocumentTemplate
      security:
        - deelToken: []
        - oauth2:
            - contracts:read
      description: >-
        Get the download link for an employee compliance document template, if
        it exists.
      parameters:
        - $ref: '#/components/parameters/ParamEmployeeId'
        - $ref: '#/components/parameters/ParamDocumentId'
      responses:
        '200':
          $ref: >-
            #/components/responses/ResponseBodyForGetEmployeeComplianceDocumentTemplateDownloadLink
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
      x-forbidden-token-types:
        - personal
        - organization
        - oauth2
  /partner-managed/employees/{employee_id}/tax-documents:
    get:
      tags:
        - Partner Managed
      summary: List of tax documents for an employee
      operationId: PartnerManaged_listTaxDocumentsForEmployee
      security:
        - deelToken: []
        - oauth2:
            - contracts:read
      description: Get list of tax documents for an employee.
      parameters:
        - $ref: '#/components/parameters/ParamEmployeeId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForEmployeeTaxDocumentsList'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
      x-forbidden-token-types:
        - personal
        - organization
        - oauth2
  /contracts/task-based:
    post:
      tags:
        - Contractors
      summary: Create a new contract (task-based)
      operationId: Contractors_createNewTaskBasedContract
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreateContractTaskBased'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForContractCreatedTaskBased'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
      x-internal: true
  /contracts/milestone-based:
    post:
      tags:
        - Contractors
      summary: Create a new contract (milestone-based)
      operationId: Contractors_createNewMilestoneContract
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreateContractMilestoneBased'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForContractCreatedMilestoneBased'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
      x-internal: true
  /contracts/fixed-rate:
    post:
      tags:
        - Contractors
      summary: Create a new contract (fixed-rate)
      operationId: Contractors_createNewFixedRateContract
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreateContractFixedRate'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForContractCreatedFixedRate'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
      x-internal: true
  /contracts:
    get:
      tags:
        - Contracts
      summary: List of contracts
      operationId: Contracts_getList
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
            - contracts:read
      description: Retrieve a list of contracts.
      parameters:
        - $ref: '#/components/parameters/ParamAfterCursor'
        - $ref: '#/components/parameters/ParamLimit'
        - $ref: '#/components/parameters/ParamSortDir'
        - $ref: '#/components/parameters/ParamContractsTypeList'
        - $ref: '#/components/parameters/ParamContractsStatusList'
        - $ref: '#/components/parameters/ParamContractsTeamId'
        - $ref: '#/components/parameters/ParamContractsExternalId'
        - $ref: '#/components/parameters/ParamContractsCountryCodeList'
        - $ref: '#/components/parameters/ParamContractsCurrencyCodeList'
        - $ref: '#/components/parameters/ParamContractsSearchTerm'
        - $ref: '#/components/parameters/ParamContractsSortBy'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForContractList'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
    post:
      tags:
        - Contractors
      summary: Create a new contract
      operationId: Contractors_createNewDeelContract
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      description: Create a new Deel contract.
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreateContract'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForContractCreated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/{contract_id}:
    get:
      tags:
        - Contracts
      summary: Retrieve a single contract
      operationId: Contracts_getSingleContract
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
            - contracts:read
      description: Retrieve a single contract.
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForContractDetails'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
    patch:
      tags:
        - Contracts
      summary: External Id
      operationId: Contracts_addExternalId
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      description: >-
        Add an external Id to a Deel contract. You can use this to add a Deel
        contract's refernece Id in your platform. External Id can be passed as a
        query parameter in List contract endpoint to find this conract later.
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToPatchExternalId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForContractExternalIdPatched'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/{contract_id}/documents:
    post:
      tags:
        - Contracts
      summary: Attach a file to contract
      operationId: Contracts_attachFileToDocument
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
            - contracts:read
      description: Attach a file to contract document.
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
      requestBody:
        $ref: '#/components/requestBodies/RequestFormForContractDocument'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForContractDocument'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
    put:
      tags:
        - Contracts
      summary: Edit the file attached to contract document.
      operationId: Contracts_editFileAttachment
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
            - contracts:read
      description: Overwrite the file currently attached to contract document.
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
      requestBody:
        $ref: '#/components/requestBodies/RequestFormForContractDocument'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForContractDocument'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/{contract_id}/preview:
    get:
      tags:
        - Contractors
      summary: Preview a contract agreement
      operationId: Contractors_getContractPreview
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
            - contracts:read
      description: >-
        Retrieve an IC and EOR contract agreement content in HTML. If no
        template is specified, the default or currently assigned template will
        be used. This endpoint does not support Global Payroll contract type.
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
        - $ref: '#/components/parameters/ParamContractTemplateIdInQuery'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForContractPreview'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/{contract_id}/tasks:
    get:
      tags:
        - Tasks
      summary: List of tasks
      operationId: Tasks_getContractTasks
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
            - contracts:read
      description: Retrieve a list of tasks for a given contract.
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForTaskList'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
    post:
      tags:
        - Tasks
      summary: Create new task
      operationId: Tasks_createNewTask
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      description: Create a new task for the contractor.
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreatePgoTask'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForTaskCreated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/{contract_id}/alternate_emails:
    get:
      tags:
        - Contracts
      summary: Find contract emails by ID
      operationId: Contracts_findEmailsById
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
            - contracts:read
      description: Returns an array of alternate email objects
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForAlternateEmailList'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/{contract_id}/tasks/many/reviews:
    post:
      tags:
        - Tasks
      summary: Review multiple tasks
      operationId: Tasks_reviewManyTasks
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      description: Review multiple tasks to approve or decline the submitted work.
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreatePgoTaskReviewsReviews'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForTaskList'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/{contract_id}/tasks/{task_id}/reviews:
    post:
      tags:
        - Tasks
      summary: Review a single task
      operationId: Tasks_submitTaskReview
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      description: Review a single task to approve or decline the submitted work.
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
        - $ref: '#/components/parameters/ParamTaskId'
      requestBody:
        $ref: >-
          #/components/requestBodies/RequestBodyToCreatePgoTaskReviewsByIdReviews
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForTaskList'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/{contract_id}/tasks/{task_id}:
    delete:
      tags:
        - Tasks
      summary: Delete task
      operationId: Tasks_deleteFromContract
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      description: Delete task from the contract.
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
        - $ref: '#/components/parameters/ParamTaskId'
        - $ref: '#/components/parameters/ParamTaskDeletionReason'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGenericResultDeleted'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/{contract_id}/amendments:
    post:
      tags:
        - Contractors
      summary: Amend contract
      operationId: Contractors_amendContractDetails
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      description: >-
        Amend the details of a contract. Please note that if the contract is
        already signed or active, then the update will have to be approved and
        re-signed for to take effect.
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToAmendContractDetails'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForGenericResultCreated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/{contract_id}/terminations:
    post:
      tags:
        - Contractors
      summary: Terminate contract
      operationId: Contractors_terminateContract
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      description: Terminate an active contract.
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreateContractTermination'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForContractTerminationResult'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/{contract_id}/signatures:
    post:
      tags:
        - Contracts
      summary: Sign a contract
      operationId: Contracts_clientSignContract
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      description: Sign a contract as a client.
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreateContractSignature'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForGenericResultCreated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
      x-forbidden-token-types:
        - organization
  /contracts/{contract_id}/archive:
    patch:
      tags:
        - Contracts
      summary: Archive a contract
      operationId: Contracts_archiveContract
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      description: Archive a terminated, cancelled or completed contract.
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
      responses:
        '204':
          $ref: '#/components/responses/ResponseBodyForGenericResultUpdated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
      deprecated: true
  /contracts/{contract_id}/invitations:
    post:
      tags:
        - Contracts
      summary: Send contract to worker
      operationId: Contracts_inviteWorkerToSign
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      description: Invite a worker to sign the contract. Worker will be notified via email.
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreateContractInvitation'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForGenericResultCreated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
    delete:
      tags:
        - Contracts
      summary: Remove invite
      operationId: Contracts_removeInvite
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      description: Remove invite in order to re-invite a worker to sign the contract.
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGenericResultDeleted'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/{contract_id}/timesheets:
    get:
      tags:
        - Timesheets
      summary: List of timesheets by contract
      operationId: Timesheets_listByContract
      security:
        - deelToken: []
        - oauth2:
            - timesheets:write
            - timesheets:read
      description: Retrieve a list of timesheets found for a contract.
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
        - $ref: '#/components/parameters/ParamTimesheetsContractTypeList'
        - $ref: '#/components/parameters/ParamTimesheetsStatusList'
        - $ref: '#/components/parameters/ParamTimesheetsReporterId'
        - $ref: '#/components/parameters/ParamDateFrom'
        - $ref: '#/components/parameters/ParamDateTo'
        - $ref: '#/components/parameters/ParamTimesheetsLimit'
        - $ref: '#/components/parameters/ParamTimesheetsOffset'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForTimesheetList'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/{contract_id}/milestones:
    get:
      tags:
        - Milestones
      summary: List of milestones by contract
      operationId: Milestones_listByContract
      security:
        - deelToken: []
        - oauth2:
            - milestones:write
            - milestones:read
      description: Retrieve a list of milestones found for a contract.
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForMilestoneList'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
    post:
      tags:
        - Milestones
      summary: Create a milestone
      operationId: Milestones_createNewMilestone
      security:
        - deelToken: []
        - oauth2:
            - milestones:write
      description: Add a new milestone to contract.
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreateMilestone'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGenericResultCreated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/{contract_id}/milestones/{milestone_id}:
    get:
      tags:
        - Milestones
      summary: Retrieve a single milestone
      operationId: Milestones_getSingleMilestone
      security:
        - deelToken: []
        - oauth2:
            - milestones:write
            - milestones:read
      description: Retrieve a single milestone.
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
        - $ref: '#/components/parameters/ParamMilestoneId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForMilestone'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
    delete:
      tags:
        - Milestones
      summary: Delete a milestone
      operationId: Milestones_deleteSingleMilestone
      security:
        - deelToken: []
        - oauth2:
            - milestones:write
      description: Delete a single milestone from a contract.
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
        - $ref: '#/components/parameters/ParamMilestoneId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGenericResultDeleted'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/{contract_id}/milestones/{milestone_id}/reviews:
    post:
      tags:
        - Milestones
      summary: Review a single milestone
      operationId: Milestones_createReview
      security:
        - deelToken: []
        - oauth2:
            - milestones:write
      description: Review a milestone to approve or decline submitted work.
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
        - $ref: '#/components/parameters/ParamMilestoneId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreateMilestoneReview'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForGenericResultCreated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/{contract_id}/milestones/many/reviews:
    post:
      tags:
        - Milestones
      summary: Review multiple milestones
      operationId: Milestones_reviewMultiple
      security:
        - deelToken: []
        - oauth2:
            - timesheets:write
      description: Review a batch of milestones to approve or reject submitted work.
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreateMilestoneReviews'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForGenericResultCreated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/{contract_id}/off-cycle-payments:
    get:
      tags:
        - Off-cycle Payments
      summary: List of off-cycle payments
      operationId: OffcyclePayments_getList
      security:
        - deelToken: []
        - oauth2:
            - off-cycle-payments:write
            - off-cycle-payments:read
      description: Retrieve a list of off-cycle payments for the given contract id.
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForOffCyclePaymentList'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
    post:
      tags:
        - Off-cycle Payments
      summary: Add off-cycle payment
      operationId: OffcyclePayments_addPaymentInvoice
      security:
        - deelToken: []
        - oauth2:
            - off-cycle-payments:write
      description: >-
        Add a new invoice line-item for the purpose of off-cycle payment for a
        given contract.
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreateOffCyclePayment'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGenericResultCreatedWithId'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/{contract_id}/off-cycle-payments/{offcycle_payment_id}:
    get:
      tags:
        - Off-cycle Payments
      summary: Retrieve a single off-cycle payment
      operationId: OffcyclePayments_getSinglePayment
      security:
        - deelToken: []
        - oauth2:
            - off-cycle-payments:write
            - off-cycle-payments:read
      description: Retrieve a single off-cycle payment.
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
        - $ref: '#/components/parameters/ParamOffCyclePaymentId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForOffCyclePayment'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/{contract_id}/premium:
    post:
      tags:
        - Contractors
      summary: Upgrade to Premium
      operationId: Contractors_upgradeToPremium
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      description: >-
        Add additional protection against misclassification by upgrading to Deel
        Premium.
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToAddPremium'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForPremiumResultAdded'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
    delete:
      tags:
        - Contractors
      summary: Downgrade from Premium
      operationId: Contractors_removePremium
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      description: Remove Deel Premium from an existing contract.
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
        - $ref: '#/components/parameters/ParamPremiumDeletionReason'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGenericResultDeleted'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/{contract_id}/final-payments:
    get:
      tags:
        - Contracts
      summary: Calculate final payment
      operationId: Contracts_calculateFinalPaymentAmount
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
            - contracts:read
      description: >-
        Calculate the final payment due to the contractor when ending the
        contract.
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
        - $ref: '#/components/parameters/ParamEndDate'
        - $ref: '#/components/parameters/ParamFinalPaymentCalculationType'
        - $ref: '#/components/parameters/ParamFinalPaymentWorkweekStart'
        - $ref: '#/components/parameters/ParamFinalPaymentWorkweekEnd'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForFinalPaymentCalculated'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
      x-internal: true
  /contracts/estimate:
    post:
      tags:
        - Contracts
      summary: Calculate first payment amount
      operationId: Contracts_calculateFirstPaymentAmount
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      description: >-
        First payment is calculated from the number of working/calendar days
        between their start date and the start of the payment cycle.
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToEstimateFirstPayment'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForEstimateFirstPayment'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/{contract_id}/time-offs:
    get:
      tags:
        - Time Off
      summary: List time off by contract (obsolete)
      operationId: TimeOff_listByContract
      security:
        - deelToken: []
        - oauth2:
            - contracts:read
            - contracts:write
      description: Retrieve the list of time off requests by an employee.
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForEorTimeoffs'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
    post:
      tags:
        - Time Off
      summary: Add a time off request (obsolete)
      operationId: TimeOff_addRequestObsolete
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      description: Add a time off request for a full-time employee.
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreateTimeoff'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForEorTimeoffItem'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/{contract_id}/time-offs/{timeoff_id}:
    put:
      tags:
        - Time Off
      summary: Edit a time off request (obsolete)
      operationId: TimeOff_editRequestObsolete
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      description: Edit a time off request for a full-time employee.
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
        - $ref: '#/components/parameters/ParamTimeoffId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreateTimeoff'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForEorTimeoffItem'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
    delete:
      tags:
        - Time Off
      summary: Cancel a time off request (obsolete)
      operationId: TimeOff_cancelRequestObsolete
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      description: Cancel a time off request for an employee.
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
        - $ref: '#/components/parameters/ParamTimeoffId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGenericResultDeleted'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /timesheets:
    get:
      tags:
        - Timesheets
      summary: List of timesheets
      operationId: Timesheets_getList
      security:
        - deelToken: []
        - oauth2:
            - timesheets:write
            - timesheets:read
      description: >-
        Retrieve a list of timesheets in your Deel account. You can filter the
        list by providing additional paramters e.g. contract_id, contract_type
        etc.
      parameters:
        - $ref: '#/components/parameters/ParamTimesheetsContractId'
        - $ref: '#/components/parameters/ParamTimesheetsContractTypeList'
        - $ref: '#/components/parameters/ParamTimesheetsStatusList'
        - $ref: '#/components/parameters/ParamTimesheetsReporterId'
        - $ref: '#/components/parameters/ParamDateFrom'
        - $ref: '#/components/parameters/ParamDateTo'
        - $ref: '#/components/parameters/ParamTimesheetsLimit'
        - $ref: '#/components/parameters/ParamTimesheetsOffset'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForTimesheetList'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
    post:
      tags:
        - Timesheets
      summary: Create a timesheet entry
      operationId: Timesheets_submitWorkForContractor
      security:
        - deelToken: []
        - oauth2:
            - timesheets:write
      description: Submit work for a contractor.
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreateTimesheet'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForTimesheetCreated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /timesheets/{timesheet_id}:
    get:
      tags:
        - Timesheets
      summary: Retrieve a single timesheet entry
      operationId: Timesheets_getSingleEntry
      security:
        - deelToken: []
        - oauth2:
            - timesheets:write
            - timesheets:read
      description: Retrieve a single timesheet entry by Id.
      parameters:
        - $ref: '#/components/parameters/ParamTimesheetId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForTimesheetDetails'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
    patch:
      tags:
        - Timesheets
      summary: Update a timesheet entry
      operationId: Timesheets_updateEntry
      security:
        - deelToken: []
        - oauth2:
            - timesheets:write
      description: Update a single timesheet entry.
      parameters:
        - $ref: '#/components/parameters/ParamTimesheetId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToUpdateTimesheet'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGenericResultUpdated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
    delete:
      tags:
        - Timesheets
      summary: Delete a timesheet entry
      operationId: Timesheets_deleteEntry
      security:
        - deelToken: []
        - oauth2:
            - timesheets:write
      description: Delete a single timesheet entry.
      parameters:
        - $ref: '#/components/parameters/ParamTimesheetId'
        - $ref: '#/components/parameters/ParamTimesheetDeletionReason'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGenericResultDeleted'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /timesheets/{timesheet_id}/reviews:
    post:
      tags:
        - Timesheets
      summary: Review a single timesheet
      operationId: Timesheets_reviewSingleTimesheet
      security:
        - deelToken: []
        - oauth2:
            - timesheets:write
      description: Review a timesheet to approve or decline submitted work.
      parameters:
        - $ref: '#/components/parameters/ParamTimesheetId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreateTimesheetReview'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForGenericResultCreated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /timesheets/many/reviews:
    post:
      tags:
        - Timesheets
      summary: Review multiple timesheets
      operationId: Timesheets_reviewMultiple
      security:
        - deelToken: []
        - oauth2:
            - timesheets:write
      description: Review a batch of timesheets to approve or reject submitted work.
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreateTimesheetReviews'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForGenericResultCreated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/{contract_id}/invoice-adjustments:
    get:
      tags:
        - Invoices
      summary: Invoice line items by contract
      operationId: Invoices_getLineItemsByContract
      security:
        - deelToken: []
        - oauth2:
            - invoice-adjustments:write
            - invoice-adjustments:read
      description: Retrieve invoice line items for a given contract id.
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
        - $ref: '#/components/parameters/ParamInvoiceAdjustmentsContractTypeList'
        - $ref: '#/components/parameters/ParamInvoiceAdjustmentsTypeList'
        - $ref: '#/components/parameters/ParamInvoiceAdjustmentsStatusList'
        - $ref: '#/components/parameters/ParamInvoiceAdjustmentsInvoiceId'
        - $ref: '#/components/parameters/ParamInvoiceAdjustmentsReporterId'
        - $ref: '#/components/parameters/ParamInvoiceAdjustmentsDateFrom'
        - $ref: '#/components/parameters/ParamInvoiceAdjustmentsDateTo'
        - $ref: '#/components/parameters/ParamInvoiceAdjustmentsLimit'
        - $ref: '#/components/parameters/ParamInvoiceAdjustmentsOffset'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForInvoiceAdjustmentList'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /invoice-adjustments:
    get:
      tags:
        - Invoices
      summary: List invoice adjustments
      operationId: Invoices_listInvoiceAdjustments
      security:
        - deelToken: []
        - oauth2:
            - invoice-adjustments:write
            - invoice-adjustments:read
      description: >-
        Retrieve invoice adjustments. You can filter the list by providing
        additional parameters e.g. contract_id, contract_type etc.
      parameters:
        - $ref: '#/components/parameters/ParamInvoiceAdjustmentsContractId'
        - $ref: '#/components/parameters/ParamInvoiceAdjustmentsContractTypeList'
        - $ref: '#/components/parameters/ParamInvoiceAdjustmentsTypeList'
        - $ref: '#/components/parameters/ParamInvoiceAdjustmentsStatusList'
        - $ref: '#/components/parameters/ParamInvoiceAdjustmentsInvoiceId'
        - $ref: '#/components/parameters/ParamInvoiceAdjustmentsReporterId'
        - $ref: '#/components/parameters/ParamInvoiceAdjustmentsDateFrom'
        - $ref: '#/components/parameters/ParamInvoiceAdjustmentsDateTo'
        - $ref: '#/components/parameters/ParamInvoiceAdjustmentsLimit'
        - $ref: '#/components/parameters/ParamInvoiceAdjustmentsOffset'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForInvoiceAdjustmentList'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
    post:
      tags:
        - Invoices
      summary: Create an invoice adjustment
      operationId: Invoices_createAdjustment
      security:
        - deelToken: []
        - oauth2:
            - invoice-adjustments:write
      description: >-
        Create an invoice adjustment using this endpoint. For example, you can
        add a bonus, commission, VAT %, deduction etc. to an invoice.
      parameters:
        - $ref: '#/components/parameters/ParamInvoiceAdjustmentRecurring'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreateInvoiceAdjustment'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForInvoiceAdjustmentCreated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /invoice-adjustments/{invoice_adjustment_id}:
    patch:
      tags:
        - Invoices
      summary: Update an invoice adjustment
      operationId: Invoices_updateAdjustmentById
      security:
        - deelToken: []
        - oauth2:
            - invoice-adjustments:write
      description: >-
        Update an existing invoice adjustment. It is not possible to update VAT
        adjustments, we recommend you to delete the existing VAT adjust and
        create a new one.
      parameters:
        - $ref: '#/components/parameters/ParamInvoiceAdjustmentId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToUpdateInvoiceAdjustment'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGenericResultUpdated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
    delete:
      tags:
        - Invoices
      summary: Delete an invoice adjustment
      operationId: Invoices_deleteAdjustment
      security:
        - deelToken: []
        - oauth2:
            - invoice-adjustments:write
      description: Delete an existing invoice adjustment.
      parameters:
        - $ref: '#/components/parameters/ParamInvoiceAdjustmentId'
        - $ref: '#/components/parameters/ParamInvoiceAdjustmentDeletionReason'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGenericResultDeleted'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /invoice-adjustments/{invoice_adjustment_id}/reviews:
    post:
      tags:
        - Invoices
      summary: Review an invoice adjustment
      operationId: Invoices_submitAdjustmentReview
      security:
        - deelToken: []
        - oauth2:
            - invoice-adjustments:write
      description: Review an invoice adjustment to approve or decline it.
      parameters:
        - $ref: '#/components/parameters/ParamInvoiceAdjustmentId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreateInvoiceAdjustmentReview'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForGenericResultCreated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /invoice-adjustments/many/reviews:
    post:
      tags:
        - Invoices
      summary: Bulk review invoice adjustments
      operationId: Invoices_reviewMultiple
      security:
        - deelToken: []
        - oauth2:
            - invoice-adjustments:write
      description: Review multiple invoice adjustments to approve or decline a batch.
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreateInvoiceAdjustmentReviews'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForGenericResultCreated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /invoice-adjustments/{invoice_adjustment_id}/attachment:
    get:
      tags:
        - Invoices
      summary: Retrieve Attachment file url.
      operationId: Invoices_getAttachmentFileUrl
      security:
        - deelToken: []
        - oauth2:
            - invoice-adjustments:read
      description: Retrieve Attachment file url of specified id.
      parameters:
        - $ref: '#/components/parameters/ParamInvoiceAdjustmentId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForInvoiceAttachment'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /legal-entities:
    get:
      tags:
        - Organizations
      summary: List of legal entities
      operationId: Organizations_getLegalEntitiesList
      security:
        - deelToken: []
        - oauth2:
            - organizations:read
            - accounting:read
      description: Retrieve a list of legal entities in your account.
      parameters:
        - $ref: '#/components/parameters/ParamLegalEntityType'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForLegalEntityList'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /lookups/countries:
    get:
      tags:
        - Lookups
      summary: Country list
      operationId: Lookups_getCountryList
      security:
        - deelToken: []
        - oauth2: []
      description: Retrieve a list of countries supported by Deel.
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForCountryList'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /lookups/currencies:
    get:
      tags:
        - Lookups
      summary: Currency list
      operationId: Lookups_getCurrenciesList
      security:
        - deelToken: []
        - oauth2: []
      description: Retrieve the list of currencies used by Deel.
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForCurrencyList'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /lookups/job-titles:
    get:
      tags:
        - Lookups
      summary: Job titles list
      operationId: Lookups_getJobTitlesList
      security:
        - deelToken: []
        - oauth2: []
      description: Retrieve a list of pre-defined job titles in Deel platform.
      parameters:
        - $ref: '#/components/parameters/ParamJobTitleListLimit'
        - $ref: '#/components/parameters/ParamJobTitleListCursor'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForJobTitleList'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /lookups/seniorities:
    get:
      tags:
        - Lookups
      summary: Seniority levels
      operationId: Lookups_getSeniorityLevels
      security:
        - deelToken: []
        - oauth2: []
      description: >-
        Retrieve a list of pre-defined seniority level for roles in Deel
        platform.
      parameters:
        - $ref: '#/components/parameters/ParamSeniorityListLimit'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForSeniorityList'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /lookups/time-off-types:
    get:
      tags:
        - Lookups
        - Time Off
      summary: Time-off types
      operationId: Lookups_getTimeOffTypes
      security:
        - deelToken: []
        - oauth2: []
      description: >-
        Retrieve a list of pre-defined time off types to register in Deel
        platform.
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForTimeoffTypeList'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /organizations:
    get:
      tags:
        - Organizations
      summary: Get current organization
      operationId: Organizations_getDetails
      security:
        - deelToken: []
        - oauth2:
            - organizations:read
      description: >-
        Retrieve the current organization details. Organization is automatically
        detected from the auth token.
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForOrganizations'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /teams:
    get:
      tags:
        - Organizations
      summary: Get team list
      operationId: Organizations_getTeamList
      security:
        - deelToken: []
        - oauth2:
            - organizations:read
      description: Retrieve a list of teams in your organization.
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForTeams'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /attachments:
    post:
      tags:
        - Attachments
      summary: Upload file to Deel
      operationId: Attachments_uploadDeelFile
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
            - invoice-adjustments:write
            - milestones:write
            - off-cycle-payments:write
            - tasks:write
            - timesheets:write
      description: >-
        Upload file to Deel storage to use the file attachment feature for other
        endpoints.
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreateFileRef'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForFileRefCreated'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
      x-internal: true
  /agreements:
    get:
      tags:
        - Organizations
      summary: Get agreements with Deel.
      operationId: Organizations_listAgreementsWithDeel
      security:
        - deelToken: []
        - oauth2:
            - organizations:read
      description: This end-point returns a list of your agreements with Deel.
      parameters:
        - $ref: '#/components/parameters/ParamContractIdInQuery'
        - $ref: '#/components/parameters/ParamLimitForAgreements'
        - $ref: '#/components/parameters/ParamOffsetForAgreements'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForAgreementList'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
      x-internal: true
  /contract-templates:
    get:
      tags:
        - Contracts
      summary: Get contract templates
      operationId: Contracts_getList
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
            - contracts:read
      description: Retrieve a list of contract templates in your organization.
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForContractTemplateList'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
      x-internal: true
  /contracts/{contract_id}/entitlements:
    get:
      tags:
        - Time Off
      summary: List time off entitlements (obsolete)
      operationId: TimeOff_listEntitlements
      security:
        - deelToken: []
        - oauth2:
            - contracts:read
            - contracts:write
      description: Retrieve a list of time off entitlements for a full-time employee.
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForEorEntitlements'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /contracts/{contract_id}/adjustments:
    get:
      tags:
        - Adjustments
      summary: Retrieve adjustments
      operationId: Adjustments_getAll
      security:
        - deelToken: []
        - oauth2:
            - adjustments:read
      description: Get all adjustments for the specific contract.
      parameters:
        - $ref: '#/components/parameters/ParamContractId'
        - $ref: '#/components/parameters/FromDateInQuery'
        - $ref: '#/components/parameters/ToDateInQuery'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForAdjustments'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /time-offs/{timeoff_id}/review:
    patch:
      tags:
        - Time Off
      summary: Review a time off request (obsolete)
      operationId: TimeOff_manageRequest
      security:
        - deelToken: []
        - oauth2:
            - contracts:write
      description: Approve or decline an employee's time off request.
      parameters:
        - $ref: '#/components/parameters/ParamTimeoffId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToReviewTimeoff'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGenericResultUpdated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /payments:
    get:
      tags:
        - Accounting
      summary: Retrieve payment reciepts
      operationId: Accounting_getPaymentReceipts
      security:
        - deelToken: []
        - oauth2:
            - accounting:read
      description: Retrieve a list of payments made to Deel.
      parameters:
        - $ref: '#/components/parameters/ParamDateFrom'
        - $ref: '#/components/parameters/ParamDateTo'
        - $ref: '#/components/parameters/ParamContractsCurrencyCodeList'
        - $ref: '#/components/parameters/ParamLegalEntityQuery'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForPaymentList'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /internal/people:
    get:
      tags:
        - People
      summary: Get internal people list
      operationId: People_getList
      security:
        - deelToken: []
        - oauth2:
            - profile:read
            - people:read
      parameters:
        - $ref: '#/components/parameters/ParamPeopleOffset'
        - $ref: '#/components/parameters/ParamPeopleLimit'
      responses:
        '200':
          $ref: '#/components/responses/InternalPeopleResponse'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /people:
    get:
      tags:
        - People
      summary: List of people
      operationId: People_getList
      security:
        - deelToken: []
        - oauth2:
            - people:read
            - Users:read
      description: Retrieve a list of People in your organization.
      parameters:
        - $ref: '#/components/parameters/ParamPeopleOffset'
        - $ref: '#/components/parameters/ParamPeopleLimit'
        - $ref: '#/components/parameters/ParamContractsSearchTerm'
        - $ref: '#/components/parameters/ParamPeopleSortBy'
        - $ref: '#/components/parameters/ParamPeopleSortDir'
        - $ref: '#/components/parameters/ParamHiringStatuses'
      responses:
        '200':
          $ref: '#/components/responses/PeopleResponse'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /people/{worker_id}:
    get:
      tags:
        - People
      summary: Retrieve a single person
      operationId: People_getPerson
      security:
        - deelToken: []
        - oauth2:
            - people:read
      description: Retrieve a single person in your organization.
      parameters:
        - $ref: '#/components/parameters/ParamWorkerId'
      responses:
        '200':
          $ref: '#/components/responses/PeopleByIdResponse'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /people/{worker_id}/department:
    put:
      tags:
        - People
      summary: Update department
      operationId: People_updateDepartment
      security:
        - deelToken: []
        - oauth2:
            - people:write
      description: Update worker department.
      parameters:
        - $ref: '#/components/parameters/ParamWorkerId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToUpdateWorkerDepartment'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGenericResultUpdated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /people/{worker_id}/working-location:
    put:
      tags:
        - People
      summary: Update working location
      operationId: People_updateWorkingLocation
      security:
        - deelToken: []
        - oauth2:
            - people:write
      description: Update worker working location.
      parameters:
        - $ref: '#/components/parameters/ParamWorkerId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToUpdateWorkerWorkingLocation'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGenericResultUpdated'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /people/me:
    x-internal: true
    get:
      tags:
        - People
      summary: Get my current profile
      operationId: People_getCurrentProfile
      security:
        - deelToken: []
        - oauth2:
            - profile:read
            - people:read
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForPeopleMe'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /people/{worker_id}/time-offs:
    get:
      tags:
        - People
      summary: List of time off entries
      operationId: People_listTimeOffsByWorkerId
      security:
        - deelToken: []
        - oauth2:
            - people:read
      description: >-
        List of time offs by worker id. Worker id can be retreived using /people
        endpoint.
      parameters:
        - $ref: '#/components/parameters/ParamWorkerId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForEmployeeTimeoffs'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
    post:
      tags:
        - People
      summary: Add a time off request
      operationId: People_addTimeOffRequest
      security:
        - deelToken: []
        - oauth2:
            - people:write
      description: Add a time off request for a worker. New requests are auto-approved.
      parameters:
        - $ref: '#/components/parameters/ParamWorkerId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToCreatePeopleTimeoff'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForEmployeeTimeoffsCreation'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /people/{worker_id}/time-offs/entitlements:
    get:
      tags:
        - People
      summary: List of time off entitlements
      operationId: People_listTimeOffEntitlements
      security:
        - deelToken: []
        - oauth2:
            - people:read
      description: Retrieve a list of time off entitlements for a worker.
      parameters:
        - $ref: '#/components/parameters/ParamWorkerId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForEmployeeTimeoffsEntitlements'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /people/{worker_id}/time-offs/{timeoff_id}:
    patch:
      tags:
        - People
      summary: Edit a time off request
      operationId: People_editTimeOffRequest
      security:
        - deelToken: []
        - oauth2:
            - people:write
      description: Edit a time off request for a worker.
      parameters:
        - $ref: '#/components/parameters/ParamNewTimeOffId'
        - $ref: '#/components/parameters/ParamWorkerId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToUpdatePeopleTimeoff'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForEmployeeTimeoffsCreation'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
    delete:
      tags:
        - People
      summary: Delete a time off request
      operationId: People_deleteTimeOffRequest
      security:
        - deelToken: []
        - oauth2:
            - people:write
      description: Delete a time off request.
      parameters:
        - $ref: '#/components/parameters/ParamNewTimeOffId'
        - $ref: '#/components/parameters/ParamWorkerId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForGenericResultDeleted'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /people/{worker_id}/time-offs/{timeoff_id}/review:
    patch:
      tags:
        - People
      summary: Review a time off request
      operationId: People_reviewTimeOff
      security:
        - deelToken: []
        - oauth2:
            - people:write
      description: >-
        Approve or decline a time off request. New requests are auto-approved.
        Hence they don't need to be manually approved.
      parameters:
        - $ref: '#/components/parameters/ParamNewTimeOffId'
        - $ref: '#/components/parameters/ParamWorkerId'
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyToReviewTimeoffInternal'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForEmployeeTimeoffs'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /people/{worker_id}/time-offs/policies:
    get:
      tags:
        - People
      summary: List of time off policies
      operationId: People_listTimeOffPolicies
      security:
        - deelToken: []
        - oauth2:
            - people:read
      description: Retrieve a list of time off policies for a worker.
      parameters:
        - $ref: '#/components/parameters/ParamWorkerId'
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForEmployeeTimeoffsPolicies'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /webhooks:
    get:
      tags:
        - Webhooks
      summary: List of webhooks
      operationId: Webhooks_listWebhookSubscriptions
      security:
        - deelToken: []
        - oauth2:
            - webhooks:read
      description: Retrieve a list of webhook subscriptions.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookListResponse'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
    post:
      tags:
        - Webhooks
      summary: Create a webhook
      operationId: Webhooks_createSubscription
      security:
        - deelToken: []
        - oauth2:
            - webhooks:write
      description: Create a new webhooks subscription.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateWebhookRequest'
      responses:
        '201':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookItemResponse'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /webhooks/{id}:
    get:
      tags:
        - Webhooks
      summary: Retrieve a single webhook
      operationId: WebhookController_getById
      security:
        - deelToken: []
        - oauth2:
            - webhooks:read
      description: Retrieve a single webhook subscription.
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookItemResponse'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
    patch:
      tags:
        - Webhooks
      summary: Edit a webhook
      operationId: WebhookController_editById
      security:
        - deelToken: []
        - oauth2:
            - webhooks:write
      description: Edit a webhook subscription.
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchWebhookRequest'
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookItemResponse'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
    delete:
      tags:
        - Webhooks
      summary: Delete a webhook
      operationId: WebhookController_deleteById
      security:
        - deelToken: []
        - oauth2:
            - webhooks:write
      description: Delete a webhook subscription.
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: successful operation
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /webhooks/events/types:
    get:
      tags:
        - Webhooks
      summary: List of webhook event types
      operationId: Webhooks_listEventTypes
      security:
        - deelToken: []
        - oauth2:
            - webhooks:read
      description: Retrieve a list of webhook event types.
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebhookEventTypeListResponse'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /payments/{payment_id}/breakdown:
    get:
      tags:
        - Accounting
      summary: Retrieve a payment breakdown
      operationId: Accounting_getPaymentBreakdown
      security:
        - deelToken: []
        - oauth2:
            - accounting:read
            - accounting:write
      description: >-
        Get a full breakdown of a payment made to Deel. Breakdown will include
        individual invoices and Deel fee as line items.
      parameters:
        - name: payment_id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/PaymentBreakDownResponse'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /departments:
    get:
      tags:
        - Organizations
      summary: Retrieve departments
      operationId: Organizations_getDepartmentList
      security:
        - deelToken: []
        - oauth2:
            - organizations:read
      description: Get list of organization departments.
      responses:
        '200':
          $ref: '#/components/responses/DepartmentsResponse'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /working-locations:
    get:
      tags:
        - Organizations
      summary: Retrieve working locations
      operationId: Organizations_getWorkingLocations
      security:
        - deelToken: []
        - oauth2:
            - organizations:read
      description: Get organization working locations.
      responses:
        '200':
          $ref: '#/components/responses/WorkingLocationsResponse'
        '400':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '405':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '429':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /public-tokens:
    post:
      tags:
        - Token
      summary: Create a public token
      operationId: Token_createPublicToken
      security:
        - deelToken: []
        - oauth2:
            - public-token:write
      description: Create a public token to use with embedded Deel SDK components.
      requestBody:
        $ref: '#/components/requestBodies/RequestBodyForCreatePublicToken'
      responses:
        '201':
          $ref: '#/components/responses/ResponseBodyForCreatePublicToken'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
  /ServiceProviderConfig:
    get:
      tags:
        - ServiceProviderConfig
      summary: Get service provider config
      operationId: ServiceProviderConfig_getDetails
      security:
        - deelToken: []
        - oauth2:
            - contracts:read
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceProviderConfig'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ServiceProviderConfig'
  /Users:
    get:
      tags:
        - User
      summary: List users
      operationId: User_listDeelUsers
      security:
        - deelToken: []
        - oauth2:
            - Users:read
      description: Retrieve a list of users in Deel HR.
      parameters:
        - description: >-
            Filter results by a given value. For now, only supports equal (eq)
            expression for "email" filter.
          name: filter
          in: query
          schema:
            type: string
            example: email eq "john.doe@example.com"
        - description: Start index. (1-based)
          name: startIndex
          in: query
          schema:
            type: integer
            format: int32
            default: 1
            example: 1
            minimum: 1
            maximum: 9999
        - description: Page size.
          name: count
          in: query
          schema:
            type: integer
            format: int32
            default: 50
            example: 50
            minimum: 1
            maximum: 99
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSearchResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/UserSearchResponse'
        '400':
          description: Bad request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Too many requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-forbidden-token-types:
        - personal
        - oauth2
    post:
      tags:
        - User
      summary: Create a user
      operationId: User_createUser
      security:
        - deelToken: []
        - oauth2:
            - Users:write
      requestBody:
        description: a new user without 'id'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClientUser'
          application/scim+json:
            schema:
              $ref: '#/components/schemas/CreateClientUser'
        required: false
      responses:
        '201':
          description: successfully created user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: authorization failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: permissions denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: duplicate email
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: body
  /Users/.search:
    post:
      tags:
        - User
      summary: Search or list users
      operationId: User_searchOrList
      security:
        - deelToken: []
        - oauth2:
            - contracts:read
      requestBody:
        description: search parameters
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
          application/scim+json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
        required: false
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSearchResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/UserSearchResponse'
        '400':
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: authorization failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: permissions denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: body
  /Users/{id}:
    get:
      tags:
        - User
      summary: Retrieve a single User
      operationId: User_getById
      security:
        - deelToken: []
        - oauth2:
            - Users:read
      description: Retrieve a single user by id.
      parameters:
        - description: Retrieve a single user by id.
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '401':
          description: Unauthorized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: Forbidden.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Too many requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error,
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-forbidden-token-types:
        - personal
        - oauth2
    put:
      tags:
        - User
      summary: Fully update/replace a user
      operationId: User_updateUserById
      security:
        - deelToken: []
        - oauth2:
            - contracts:read
      parameters:
        - description: user id
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: an existing user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/scim+json:
            schema:
              $ref: '#/components/schemas/User'
        required: false
      responses:
        '200':
          description: successfully fully updated a user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: authorization failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: permissions denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: duplicate email
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-codegen-request-body-name: body
    delete:
      tags:
        - User
      summary: Delete a user
      operationId: User_deleteUser
      security:
        - deelToken: []
        - oauth2:
            - contracts:read
      parameters:
        - description: user id
          name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDeleteUserResponse'
        '401':
          description: authorization failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: permissions denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    patch:
      tags:
        - User
      summary: Partially update/patch a user
      operationId: User_partiallyUpdateUser
      security:
        - deelToken: []
        - oauth2:
            - Users:write
      parameters:
        - description: user id
          name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: patch operations list
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPatch'
          application/scim+json:
            schema:
              $ref: '#/components/schemas/UserPatch'
        required: false
      responses:
        '200':
          description: successfully partially updated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        '400':
          description: bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: authorization failure
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '403':
          description: permissions denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: duplicate email
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
            application/scim+json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
      x-forbidden-token-types:
        - personal
        - oauth2
      x-codegen-request-body-name: body
  /time-offs:
    get:
      tags:
        - Time Off
      summary: List of time offs (obsolete)
      operationId: TimeOff_getAllObsolete
      security:
        - deelToken: []
        - oauth2:
            - contracts:read
      description: List of time offs for all employees in your organization.
      responses:
        '200':
          $ref: '#/components/responses/ResponseBodyForEorClientTimeoffs'
        '401':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '403':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '404':
          $ref: '#/components/responses/ResponseBodyForApiError'
        '500':
          $ref: '#/components/responses/ResponseBodyForApiError'
components:
  parameters:
    ParamContractId:
      description: Deel contract id.
      name: contract_id
      in: path
      required: true
      schema:
        type: string
      example: 37nex2x
    ParamCandidateId:
      description: Candidate id.
      name: candidate_id
      in: path
      required: true
      schema:
        type: string
      example: 37nex2x
    ParamEmployeeBankAccountId:
      description: Bank Account id.
      name: bank_id
      in: path
      required: true
      schema:
        type: string
      example: dcc7b587-2246-4909-853e-12056e90c451
    ParamCountryInQuery:
      description: Country code
      name: country
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/CountryCode'
    CategoryInQuery:
      description: Filter adjustments by category.
      name: category
      in: query
      schema:
        type: string
    FromDateInQuery:
      description: Filter adjustments by start date.
      name: from
      in: query
      schema:
        type: string
        format: date
    ToDateInQuery:
      description: Filter adjustments by end date.
      name: to
      in: query
      schema:
        type: string
        format: date
    CursorInQuery:
      description: Cursor for pagination.
      name: cursor
      in: query
      schema:
        type: string
        format: date
    PageSizeInQuery:
      description: Cursor for pagination.
      name: page_size
      in: query
      schema:
        type: string
        format: date
    ParamCurrencyInQuery:
      description: Currency code
      name: currency
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/CurrencyCode'
    ParamContractTemplateIdInQuery:
      description: ID of an existing contract template.
      name: templateId
      in: query
      required: false
      schema:
        type: string
    ParamContractIdInQuery:
      description: Deel contract id.
      name: contract_id
      in: query
      required: false
      schema:
        type: string
      example: 37nex2x
    ParamEorCountryCode:
      description: Country code.
      name: country_code
      in: path
      required: true
      schema:
        $ref: '#/components/schemas/CountryCode'
      example: US
    ParamAdjustmentId:
      description: Adjustment id.
      name: adjustment_id
      in: path
      required: true
      schema:
        type: string
    ParamAfterCursor:
      description: Return next page of results after given cursor.
      name: after_cursor
      in: query
      schema:
        type: string
    ParamLimit:
      description: >-
        Return a page of results with given number of records; NOTE: technically
        ALL query parameters are strings or array of strings
      name: limit
      in: query
      schema:
        type: number
        minimum: 1
        maximum: 99
        default: 10
    ParamPeopleLimit:
      description: Return a page of results with given number of records.
      name: limit
      in: query
      schema:
        type: number
        minimum: 1
        maximum: 200
    ParamPeopleOffset:
      description: Return a page of results with given number of records.
      name: offset
      in: query
      schema:
        type: number
        format: int64
        minimum: 0
        default: 0
        maximum: 999999999
    ParamOrganizationId:
      description: Id of an existing organization.
      name: organizationId
      in: path
      required: true
      schema:
        type: string
    ParamSortDir:
      description: Order direction of results; ascending or descending.
      name: order_direction
      in: query
      schema:
        $ref: '#/components/schemas/SortDirEnum'
    ParamPeopleSortDir:
      description: Order direction of results; ascending or descending.
      name: sort_order
      in: query
      schema:
        $ref: '#/components/schemas/SortDirEnum'
    ParamGlobalPayrollFlagQuery:
      description: Filter GP legal entities
      name: gp
      in: query
      required: false
      schema:
        type: boolean
    ParamLegalEntityIdQuery:
      description: Id of an legal entity.
      name: legal_entity_id
      in: query
      schema:
        type: string
        format: uuid
    ParamLegalEntityId:
      description: Id of an legal entity.
      name: legal_entity_id
      in: path
      required: true
      schema:
        type: string
        format: uuid
    ParamGlobalPayrollReportId:
      description: Id of gp report.
      name: gp_report_id
      in: path
      required: true
      schema:
        type: string
        format: uuid
    ParamPayrollReportStartDate:
      description: Start date of payroll report.
      name: start_date
      in: query
      schema:
        $ref: '#/components/schemas/DateString'
    ParamHiringStatuses:
      description: Employee's current hiring status.
      name: hiring_statuses[]
      in: query
      schema:
        $ref: '#/components/schemas/HiringStatusEnum'
    ParamEmployeeId:
      description: Unique identifier for an employee in Deel.
      name: employee_id
      in: path
      required: true
      schema:
        type: string
      example: 0123abcd-e031-4f1e-93d4-6bc66e8c4727
    ParamDocumentId:
      description: Unique identifier for a compliance document in Deel.
      name: document_id
      in: path
      required: true
      schema:
        type: number
      example: 1234
    ParamPeopleId:
      description: Unique identifier for a worker in Deel.
      name: people_id
      in: path
      required: true
      schema:
        type: string
      example: 0123abcd-e031-4f1e-93d4-6bc66e8c4727
    ParamWorkerId:
      description: Unique identifier for a worker.
      name: worker_id
      in: path
      required: true
      schema:
        type: string
      example: 0123abcd-e031-4f1e-93d4-6bc66e8c4727
    PayslipId:
      description: Unique identifier for a payslip.
      name: payslip_id
      in: path
      required: true
      schema:
        type: string
      example: ApdZbLvq0r0E
    ParamNewTimeOffId:
      description: Unique identifier for a time-off in Deel.
      name: timeoff_id
      in: path
      required: true
      schema:
        type: string
      example: 0123abcd-e031-4f1e-93d4-6bc66e8c4727
    ParamContractsTeamId:
      description: >-
        Filter contracts for given team ID; NOTE: technically ALL query
        parameters are strings or array of strings
      name: team_id
      in: query
      schema:
        type: string
    ParamContractsExternalId:
      description: Filter contracts for given external ID
      name: external_id
      in: query
      schema:
        type: string
    ParamContractsSearchTerm:
      description: >-
        Include a contract if by name or contractor name contains given search
        term.
      name: search
      in: query
      schema:
        type: string
    ParamContractsTypeList:
      description: >-
        You can filter contracts by type, a contract is included in results if
        its type is in this list.
      name: types
      in: query
      schema:
        $ref: '#/components/schemas/ContractTypeEnumList'
    ParamContractsStatusList:
      description: >-
        You can filter contracts by current status, a contract is included in
        results if its status is in this list.
      name: statuses
      in: query
      schema:
        $ref: '#/components/schemas/ContractStatusEnumList'
    ParamContractsCountryCodeList:
      description: Country codes of contracts to filter.
      name: countries
      in: query
      schema:
        $ref: '#/components/schemas/CountryCodeList'
    ParamContractsCurrencyCodeList:
      description: Currency codes of contracts to filter.
      name: currencies
      in: query
      schema:
        oneOf:
          - $ref: '#/components/schemas/CurrencyCodeList'
          - $ref: '#/components/schemas/CurrencyCodeRequired'
    ParamContractsSortBy:
      description: Sort contracts by given field name.
      name: sort_by
      in: query
      schema:
        $ref: '#/components/schemas/ContractsSortByEnum'
    ParamPeopleSortBy:
      description: Sort people by given field name.
      name: sort_by
      in: query
      schema:
        $ref: '#/components/schemas/PeopleSortByEnum'
    ParamTimesheetsContractId:
      description: Id of a Deel contract.
      name: contract_id
      in: query
      schema:
        type: string
    ParamTimesheetsReporterId:
      description: >-
        ID of an existing profile; NOTE: technically ALL query parameters are
        strings or array of strings
      name: reporter_id
      in: query
      schema:
        type: number
    ParamTimesheetsContractTypeList:
      description: Types of contracts to filter.
      name: contract_types
      in: query
      schema:
        $ref: '#/components/schemas/ContractTypeEnumList'
    ParamTimesheetsStatusList:
      description: Statuses of timesheets to filter.
      name: statuses
      in: query
      schema:
        $ref: '#/components/schemas/TimesheetStatusEnumList'
    ParamDateFrom:
      description: >-
        Filtered results will include records created on or after the provided
        date.
      name: date_from
      in: query
      example: '2022-01-01T00:00:00.000Z'
      schema:
        $ref: '#/components/schemas/DateString'
    ParamDateTo:
      description: Filtered results will include records created before the provided date.
      name: date_to
      in: query
      example: '2022-12-01T00:00:00.000Z'
      schema:
        $ref: '#/components/schemas/DateString'
    ParamIssuedDateFrom:
      description: to get records created after given issue date
      name: issued_from_date
      in: query
      schema:
        type: string
    ParamIssuedDateTo:
      description: to get records created before given issued date
      name: issued_to_date
      in: query
      schema:
        type: string
    ParamTimesheetsLimit:
      description: >-
        Return a page of results with given number of records; NOTE: technically
        ALL query parameters are strings or array of strings
      name: limit
      in: query
      schema:
        type: number
        format: int64
        minimum: 1
        maximum: 99
        default: 99
    ParamTimesheetsOffset:
      description: Return a page of results after given index of row
      name: offset
      in: query
      schema:
        type: number
        format: int64
        minimum: 0
        default: 0
        maximum: 999999999
    ParamTimesheetId:
      description: ID of an existing timesheet
      name: timesheet_id
      in: path
      required: true
      schema:
        type: number
        format: int64
    ParamTimesheetDeletionReason:
      description: Reason for deleting an existing timesheet
      name: reason
      in: query
      required: false
      schema:
        type: string
    ParamTaskDeletionReason:
      description: Reason for deleting an existing task
      name: reason
      in: query
      required: false
      schema:
        type: string
    ParamInvoiceAdjustmentsContractId:
      description: Id of an Deel contract.
      name: contract_id
      in: query
      schema:
        type: string
    ParamInvoiceAdjustmentsReporterId:
      description: >-
        ID of an existing profile; NOTE: technically ALL query parameters are
        strings or array of strings
      name: reporter_id
      in: query
      schema:
        type: number
    ParamInvoiceAdjustmentsInvoiceId:
      description: >-
        ID of an existing invoice; NOTE: technically ALL query parameters are
        strings or array of strings
      name: invoice_id
      in: query
      schema:
        type: number
        format: int64
    ParamInvoiceInvoiceId:
      description: ID of an existing invoice
      name: invoice_id
      in: path
      required: true
      schema:
        type: string
    ParamInvoiceAdjustmentsContractTypeList:
      description: types of contracts to filter
      name: contract_types
      in: query
      schema:
        $ref: '#/components/schemas/ContractTypeEnumList'
    ParamInvoiceAdjustmentsTypeList:
      description: types of invoice adjustments to filter
      name: types
      in: query
      schema:
        $ref: '#/components/schemas/InvoiceAdjustmentTypeEnumList'
    ParamInvoiceAdjustmentsStatusList:
      description: statuses of invoice adjustment to filter
      name: statuses
      in: query
      schema:
        $ref: '#/components/schemas/InvoiceAdjustmentStatusEnumList'
    ParamInvoiceAdjustmentsDateFrom:
      description: >-
        to get invoice adjustments submitted on or after given start date
        (inclusive)
      name: date_from
      in: query
      schema:
        $ref: '#/components/schemas/DateString'
    ParamInvoiceAdjustmentsDateTo:
      description: >-
        to get invoice adjustments submitted before given end date (excludes
        records submitted on this date)
      name: date_to
      in: query
      schema:
        $ref: '#/components/schemas/DateString'
    ParamInvoiceAdjustmentsLimit:
      description: >-
        Return a page of results with given number of records; NOTE: technically
        ALL query parameters are strings or array of strings
      name: limit
      in: query
      schema:
        type: number
        minimum: 1
        maximum: 99
        default: 10
    ParamInvoiceAdjustmentsOffset:
      description: >-
        Return a page of results after given index of row; NOTE: technically ALL
        query parameters are strings or array of strings
      name: offset
      in: query
      schema:
        type: number
        format: int64
        minimum: 0
        default: 0
        maximum: 999999999
    ParamInvoiceAdjustmentId:
      description: ID of an existing invoice adjustment
      name: invoice_adjustment_id
      in: path
      required: true
      schema:
        type: number
    ParamInvoiceAdjustmentRecurring:
      description: Add this invoice adjustment as recurring
      name: recurring
      in: query
      required: false
      schema:
        type: boolean
    ParamInvoiceAdjustmentDeletionReason:
      description: Reason for deleting an existing invoice adjustment
      name: reason
      in: query
      required: false
      schema:
        type: string
    ParamJobTitleListLimit:
      description: >-
        Return a page of results with given number of records; NOTE: technically
        ALL query parameters are strings or array of strings
      name: limit
      in: query
      required: false
      schema:
        type: number
        format: int64
        minimum: 20
        maximum: 99
        default: 99
    ParamLegalEntityType:
      description: Return list of global payroll legal entities if provided
      name: type
      in: query
      required: false
      schema:
        type: string
    ParamJobTitleListCursor:
      description: Return next page of results after given cursor
      name: after_cursor
      in: query
      required: false
      schema:
        type: string
        nullable: false
    ParamSeniorityListLimit:
      description: >-
        Return a page of results with given number of records; NOTE: technically
        ALL query parameters are strings or array of strings
      name: limit
      in: query
      required: false
      schema:
        type: number
        format: int64
        minimum: 20
        maximum: 99
        default: 50
    ParamMilestoneId:
      description: ID of milestone to return
      name: milestone_id
      in: path
      required: true
      schema:
        type: string
    ParamOffCyclePaymentId:
      description: ID of off-cycle payment to return
      name: offcycle_payment_id
      in: path
      required: true
      schema:
        type: string
    ParamTaskId:
      description: ID of task entity.
      name: task_id
      in: path
      required: true
      schema:
        type: string
    ParamLimitForAgreements:
      description: Maximum number of records to return.
      name: limit
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/AgreementsParamLimit'
    ParamOffsetForAgreements:
      description: Offset/index of record for the next page of records to return.
      name: offset
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/AgreementsParamOffset'
    ParamPremiumDeletionReason:
      description: Reason for deleting an existing Deel Premium from a contract.
      name: reason
      in: query
      required: false
      schema:
        type: string
    ParamEndDate:
      description: The day to end the contract.
      name: end_date
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/DateString'
    ParamFinalPaymentCalculationType:
      description: The days to calculate.
      name: calculation_type
      in: query
      required: false
      schema:
        type: string
        enum:
          - CUSTOM_AMOUNT
          - WORK_DAYS
          - CALENDAR_DAYS
          - FULL_AMOUNT
    ParamFinalPaymentWorkweekStart:
      description: The day the work week starts, 0 to 6
      name: workweek_start
      in: query
      required: false
      schema:
        type: string
        minimum: 0
        maximum: 6
    ParamFinalPaymentWorkweekEnd:
      description: The day the work week ends, 0 to 6
      name: workweek_end
      in: query
      required: false
      schema:
        type: string
        minimum: 0
        maximum: 6
    ParamTimeoffId:
      description: Time off Id
      name: timeoff_id
      in: path
      required: true
      schema:
        type: string
      example: '12345'
    ParamInvoicesStatusList:
      description: statuses of invoices to filter
      name: statuses
      in: query
      schema:
        oneOf:
          - $ref: '#/components/schemas/InvoiceStatusEnumList'
          - $ref: '#/components/schemas/InvoiceStatusEnum'
    ParamLegalEntityQuery:
      description: Filter by legal entity type; company, or individual
      name: entities
      in: query
      required: false
      schema:
        oneOf:
          - $ref: '#/components/schemas/LegalEntityArray'
          - $ref: '#/components/schemas/LegalEntityType'
    ParamOffset:
      description: >-
        Return a page of results after given index of row; NOTE: technically ALL
        query parameters are strings or array of strings
      name: offset
      in: query
      schema:
        type: number
        format: int64
        minimum: 0
        default: 0
        maximum: 999999999
    ParamInvoicesContractId:
      description: Id of a Deel contract.
      name: contract_id
      in: query
      schema:
        type: string
  responses:
    ResponseBodyToCreateAdminUser:
      description: Basic information of the new admin user.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateAdminUserResponseContainer'
    ResponseBodyToGetAdminUser:
      description: Basic information of the new admin user.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdminUsersContainer'
    ResponseBodyForPaymentStatementInitiatedWebhook:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentStatementInitiatedWebhook'
    ResponseBodyForHrisDirectEmployee:
      description: Hris direct employee object that was created or edited
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HrisDirectEmployeeContainer'
    ResponseBodyForAlternateEmailList:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AlternateEmailList'
    ResponseBodyForApiError:
      description: Operation failed.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiErrorContainer'
    ResponseBodyForContractList:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContractListContainer'
    ResponseBodyForContractCreated:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContractContainer'
    ResponseBodyForEstimateFirstPayment:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponseEstimateFirstPaymentContainer'
    ResponseBodyForContractCreatedTimeBased:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContractContainer_pay_as_you_go_time_based'
    ResponseBodyForContractCreatedTaskBased:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContractContainer_payg_tasks'
    ResponseBodyForEmployeeBankAccountAdded:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BankAccountAddedContainer'
    ResponseBodyForEmployeePayslipsList:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmployeePayslipsListContainer'
    ResponseBodyForGPPayslipsList:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GPPayslipsListContainer'
    ResponseBodyForEORPayslipsList:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EORPayslipsListContainer'
    ResponseBodyForEmployeeTaxDocumentsList:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmployeeTaxDocumentsListContainer'
    ResponseBodyForContractCreatedMilestoneBased:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContractContainer_payg_milestones'
    ResponseBodyForContractCreatedFixedRate:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContractContainer_ongoing_time_based'
    ResponseBodyForGenericResultCreated:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GenericResultCreated'
    ResponseBodyForGenericResultCreatedWithId:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GenericResultCreatedWithId'
    ResponseBodyForContractExternalIdPatched:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GenericResultCreated'
    ResponseBodyForContractTerminationResult:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContractTerminationResultContainer'
    ResponseBodyForContractDetails:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContractContainer'
    ResponseBodyForLegalEntityList:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LegalEntityListContainer'
    ResponseBodyForOrganizations:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrganizationListContainer'
    ResponseBodyForTeams:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TeamListContainer'
    ResponseBodyForTimesheetList:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TimesheetListContainer'
    ResponseBodyForTimesheetDetails:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TimesheetContainer'
    ResponseBodyForTimesheetCreated:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvoiceAdjustmentCreatedContainer'
    ResponseBodyForGenericResultUpdated:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GenericResultUpdated'
    ResponseBodyForGenericResultDeleted:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GenericResultDeleted'
    ResponseBodyForEorClientTimeoffs:
      description: successful operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EorClientTimeoffsContainer'
    ResponseBodyForEmployeeTimeoffs:
      description: successful operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmployeeTimeoffsContainer'
    ResponseBodyForEmployeeTimeoffsCreation:
      description: successful operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmployeeTimeoffsCreationContainer'
    ResponseBodyForEmployeeTimeoffsEntitlements:
      description: successful operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmployeeTimeoffsEntitlementsContainer'
    ResponseBodyForEmployeeTimeoffsPolicies:
      description: successful operation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmployeeTimeoffsPoliciesContainer'
    ResponseBodyForInvoiceAdjustmentList:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvoiceAdjustmentListContainer'
    ResponseBodyForInvoiceAttachment:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvoiceAdjustmentAttachmentContainer'
    ResponseBodyForInvoiceAdjustmentCreated:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvoiceAdjustmentCreatedContainer'
    ResponseBodyForInvoiceAdjustmentDetails:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvoiceAdjustmentContainer'
    ResponseBodyForCountryList:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CountryListContainer'
    ResponseBodyForCurrencyList:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CurrencyListContainer'
    ResponseBodyForJobTitleList:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JobTitleListContainer'
    ResponseBodyForSeniorityList:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SeniorityListContainer'
    ResponseBodyForMilestoneList:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MilestoneListContainer'
    ResponseBodyForMilestone:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MilestoneContainer'
    ResponseBodyForOffCyclePaymentList:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OffCyclePaymentListContainer'
    ResponseBodyForOffCyclePayment:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OffCyclePaymentContainer'
    ResponseBodyForFileRefCreated:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OutputToCreateFileRefContainer'
    ResponseBodyForTaskList:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TaskListContainer'
    ResponseBodyForTaskCreated:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TaskCreatedContainer'
    ResponseBodyForAgreementList:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AgreementListContainer'
    ResponseBodyForPremiumResultAdded:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PremiumResultAddedContainer'
    ResponseBodyForEorEntitlements:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EorEntitlementsContainer'
    ResponseBodyForEorTimeoffs:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EorTimeoffsContainer'
    ResponseBodyForEorTimeoffItem:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EorTimeoffsItemContainer'
    ResponseBodyForFinalPaymentCalculated:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FinalPaymentCalculatedContainer'
    ResponseBodyForContractTemplateList:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContractTemplateListContainer'
    ResponseBodyForEorCountryValidations:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EorCountryValidationsContainer'
    ResponseBodyForGPContractCreation:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GPContractCreatedContainer'
    ResponseBodyForGPEmployeeAddressUpdate:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GPEmployeeAddressUpdatedContainer'
    ResponseBodyForGPEmployeeInformationUpdate:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GPEmployeeInformationUpdatedContainer'
    ResponseBodyForGPEmployeeCompensationUpdate:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GPEmployeeCompensationUpdatedContainer'
    ResponseBodyForGPPayslipDownloadUrl:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GPPayslipDownloadUrlContainer'
    ResponseBodyForGPPayrollEventReport:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GPPayrollEventReportContainer'
    ResponseBodyForGlobalPayrollG2NReport:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GlobalPayrollG2NReportContainer'
    ResponseBodyForGlobalPayrollG2NReportCsv:
      description: Successful operation.
      content:
        text/csv:
          schema:
            $ref: >-
              #/components/schemas/GlobalPayrollDownloadGrossToNetGpReportResponse
    ResponseBodyForEORPayslipDownloadUrl:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EORPayslipDownloadUrlContainer'
    ResponseBodyForEorContractBenefits:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EORContractBenefitsContainer'
    ResponseBodyForEorContractCreation:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EorContractCreatedContainer'
    ResponseBodyForEorEmploymentCostCalculation:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EorEmployeeCostCalculationResponseContainer'
    ResponseBodyForTimeoffTypeList:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TimeoffTypeListContainer'
    ResponseBodyForAdjustmentsCategories:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdjustmentsCategoriesContainer'
    ResponseBodyForAdjustments:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdjustmentsContainer'
    ResponseBodyForAdjustmentCreated:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdjustmentCreatedContainer'
    ResponseBodyForAdjustmentById:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdjustmentCreatedContainer'
    ResponseBodyForEmployees:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GenericResultUpdated'
    ResponseBodyForPaymentList:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentListContainer'
    ResponseBodyForInvoiceList:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvoiceListContainer'
    ResponseBodyForDeelInvoiceList:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeelInvoiceListContainer'
    ResponseBodyForEmployeeAgreementDownload:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmployeeAgreementDownloadContainer'
    ResponseBodyForHrVerificationLettersAndDocuments:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: >-
              #/components/schemas/HrVerificationLettersAndDocumentsListContainer
    ResponseBodyForDownloadHrVerificationLettersAndDocuments:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmployeeAgreementDownloadContainer'
    ResponseBodyForInvoiceDownload:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvoiceDownloadContainer'
    PaymentBreakDownResponse:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentBreakDownContainer'
    DepartmentsResponse:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DepartmentsContainer'
    WorkingLocationsResponse:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WorkingLocationsContainer'
    InternalPeopleResponse:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InternalPeopleContainer'
    PeopleResponse:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PeopleContainer'
    PeopleByIdResponse:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PeopleByIdContainer'
    ResponseBodyForPeopleMe:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PeopleMe'
    ResponseBodyForContractPreview:
      description: Successful operation.
      content:
        text/html:
          schema:
            $ref: '#/components/schemas/ContractPreview'
    ResponseBodyForBankAccountGuide:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BankAccountGuideContainer'
    ResponseBodyForBankAccountUpdated:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BankAccountUpdatedContainer'
    ResponseBodyForWorkerTermination:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WorkerTerminationContainer'
    ResponseBodyForWorkerBankAccountsInfo:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WorkerBankAccountsInfoContainer'
    ResponseBodyForContractDocument:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContractDocumentContainer'
    ResponseBodyForGetEmployeeComplianceDocuments:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetEmployeeComplianceDocumentsContainer'
    ResponseBodyForGetEmployeeComplianceDocumentTemplateDownloadLink:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: >-
              #/components/schemas/GetEmployeeComplianceDocumentTemplateDownloadLinkContainer
    ResponseBodyForUploadEmployeeComplianceDocument:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UploadEmployeeComplianceDocumentContainer'
    ResponseBodyForCreatePublicToken:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PublicTokenCreatedContainer'
    ResponseBodyForInvoiceDownloadLink:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvoiceDownloadLinkContainer'
  requestBodies:
    RequestBodyToCreateAdminUser:
      description: Basic information of the new admin user.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdminUserCreateContainer'
      required: true
    RequestBodyToCreateHrisDirectEmployee:
      description: Hris direct employee object that will be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HrisDirectEmployee'
      required: true
    RequestBodyToCreateContract:
      description: Contract object that needs to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContractToCreateContainer'
      required: true
    RequestBodyToAmendContractDetails:
      description: Contract object that needs to be amended
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContractToAmendDetailsContainer'
      required: true
    RequestBodyToCreateContractTimeBased:
      description: Contract object that needs to be created
      content:
        application/json:
          schema:
            $ref: >-
              #/components/schemas/ContractToCreateContainer_pay_as_you_go_time_based
      required: true
    RequestBodyToCreateCandidate:
      description: Add a candidate to Deel
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CandidateToCreateContainer'
      required: true
    RequestBodyToCreateAdjustment:
      description: Creation data for a new adjustment
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/AdjustmentToCreateContainer'
      required: true
    RequestBodyToUpdateAdjustment:
      description: Adjustment object that needs to be updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdjustmentToUpdateContainer'
      required: true
    RequestBodyToCreateContractTaskBased:
      description: Contract object that needs to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContractToCreateContainer_payg_tasks'
      required: true
    RequestBodyToAddEmployeeBankAccount:
      description: Bank Account object that needs to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BankAccountToAddContainer'
      required: true
    RequestBodyToAdditionalEORInfo:
      description: Bank Account object that needs to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AdditionalEORInfoContainer'
      required: true
    RequestBodyToRequestCustomVerificationLetter:
      description: Request custom verification letter to be requested
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RequestCustomVerificationLetterContainer'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/RequestCustomVerificationLetterWithFile'
      required: true
    RequestBodyToModifyEmployeeBankAccount:
      description: Bank Account object that needs to be modified
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BankAccountToAddContainer'
      required: true
    RequestBodyToCreateContractMilestoneBased:
      description: Contract object that needs to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContractToCreateContainer_payg_milestones'
      required: true
    RequestBodyToCreateContractFixedRate:
      description: Contract object that needs to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContractToCreateContainer_ongoing_time_based'
      required: true
    RequestBodyToCreateContractTermination:
      description: Contract that needs to be terminated and when.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContractToTerminateContainer'
      required: true
    RequestBodyToCreateContractSignature:
      description: Contract signature object that needs to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContractSignatureToCreateContainer'
      required: true
    RequestBodyToCreateEmployeeContractSignature:
      description: Contract signature object that needs to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmployeeContractSignatureToCreateContainer'
      required: true
    RequestBodyToCreateContractInvitation:
      description: Contract invitation object that needs to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContractInvitationToCreateContainer'
      required: true
    RequestBodyToCreateTimesheet:
      description: Timesheet object that needs to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TimesheetToCreateContainer'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/TimesheetToCreateWithFile'
      required: true
    RequestBodyToCreateTimesheetOnlyWithFile:
      description: Timesheet object that needs to be created
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/TimesheetToCreateWithFile'
      required: true
    RequestBodyToUpdateTimesheet:
      description: Timesheet object that needs to be updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TimesheetToUpdateContainer'
      required: true
    RequestBodyToCreateTimesheetReviews:
      description: Timesheet review objects that need to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TimesheetReviewsToCreateContainer'
    RequestBodyToCreatePgoTaskReviewsByIdReviews:
      description: Timesheet review objects that need to be created
      content:
        application/json:
          schema:
            $ref: >-
              #/components/schemas/RequestBodyToCreatePgoTaskReviewsByIdReviewsContainer
    RequestBodyToCreatePgoTaskReviewsReviews:
      description: Timesheet review objects that need to be created
      content:
        application/json:
          schema:
            $ref: >-
              #/components/schemas/RequestBodyToCreatePgoTaskReviewsReviewsContainer
    RequestBodyToCreateTimesheetReview:
      description: Timesheet review object that need to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TimesheetReviewToCreateContainer'
    RequestBodyToCreateMilestoneReviews:
      description: Milestone review objects that need to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MilestoneReviewsToCreateContainer'
    RequestBodyToCreateMilestoneReview:
      description: Milestone review object that need to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MilestoneReviewToCreateContainer'
    RequestBodyToCreateInvoiceAdjustment:
      description: InvoiceAdjustment object that needs to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvoiceAdjustmentToCreateContainer'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/InvoiceAdjustmentToCreateWithFile'
      required: true
    RequestBodyToUpdateInvoiceAdjustment:
      description: InvoiceAdjustment object that needs to be updated
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvoiceAdjustmentToUpdateContainer'
      required: true
    RequestBodyToCreateInvoiceAdjustmentReviews:
      description: InvoiceAdjustment review objects that need to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvoiceAdjustmentReviewsToCreateContainer'
    RequestBodyToCreateInvoiceAdjustmentReview:
      description: InvoiceAdjustment review object that need to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InvoiceAdjustmentReviewToCreateContainer'
    RequestBodyToCreateMilestone:
      description: Milestone object that needs to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MilestoneToCreateContainer'
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/MilestoneToCreateFormWithFile'
    RequestFormForContractDocument:
      description: A form to attach a file to contract document.
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/FileObject'
    RequestBodyToCreateOffCyclePayment:
      description: Off-cycle payment object that needs to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OffCyclePaymentToCreateContainer'
    RequestBodyToCreateFileRef:
      description: File info object that needs to be created.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InputToCreateFileRef'
      required: true
    RequestBodyToEstimateFirstPayment:
      description: Pro-rata payment object that needs to estimated payment
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EstimateFirstPaymentContainer'
      required: true
    RequestBodyToCreatePgoTask:
      description: Contract object that needs to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InputToCreatePgoTask'
      required: true
    RequestBodyToPatchExternalId:
      description: Contract object that needs to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InputToPatchContractExternalId'
      required: true
    RequestBodyToPatchCandidate:
      description: Update an existed candidate
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CandidateToPatchContainer'
      required: true
    RequestBodyToAddPremium:
      description: Answers for assessment in order to find eligibility for Deel Premium.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PremiumToAddContainer'
    RequestBodyForContractsShield:
      description: MSA ID (agreement) used to shield the contract
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InputToShieldContract'
      required: true
    RequestBodyForEorContractCreation:
      description: Employee (eor) contract object that needs to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EorContractToCreateContainer'
      required: true
    RequestBodyToCalculateEorEmployeeCost:
      description: Information to use in the EOR employeeCost calculation.
      content:
        application/json:
          schema:
            $ref: >-
              #/components/schemas/EorEmployeeCostCalculationRequestBodyContainer
    RequestBodyForGPContractCreation:
      description: Global Payroll (GP) contract object that needs to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GPContractToCreateContainer'
      required: true
    RequestBodyForGPEmployeeAddressUpdate:
      description: The desired address of the Global Payroll employee
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GPEmployeeAddressToUpdateContainer'
      required: true
    RequestBodyForAddWorkerBankAccount:
      description: Request body to add new bank account for employee
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AddWorkerBankAccountContainer'
      required: true
    RequestBodyForWorkerTermination:
      description: Request body to add new bank account for employee
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WorkerTerminationBodyContainer'
      required: true
    RequestBodyForGPEmployeePTOUpdate:
      description: The desired PTO policy of the Global Payroll employee
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GPEmployeePTOToUpdateContainer'
      required: true
    RequestBodyForGPEmployeeEmployeeUpdate:
      description: The desired information of the Global Payroll employee
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GPEmployeeInformationToUpdateContainer'
      required: true
    RequestBodyForGPEmployeeCompensationUpdate:
      description: The desired compensation of the Global Payroll employee
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GPEmployeeCompensationToUpdateContainer'
      required: true
    RequestBodyToReviewTimeoff:
      description: Timeoff acceptance approve or decline.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TimeoffToReviewContainer'
      required: true
    RequestBodyToReviewTimeoffInternal:
      description: Timeoff acceptance approve or decline.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TimeoffToReviewInternalContainer'
      required: true
    RequestBodyToCreateTimeoff:
      description: Detail of the time off that will be registered to the contract.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateTimeoffContainer'
    RequestBodyToCreatePeopleTimeoff:
      description: Detail of the time off that will be registered to the contract.
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/CreatePeopleTimeoff'
    RequestBodyToUpdateWorkerDepartment:
      description: Detail of the department data to attach for worker.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateWorkerDepartmentContainer'
    RequestBodyToUpdateWorkerWorkingLocation:
      description: Detail of the working location data to attach for worker.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateWorkerWorkingLocationContainer'
    RequestBodyToUpdatePeopleTimeoff:
      description: Detail of the time off that will be updated.
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/PeopleTimeOffContainer'
    RequestBodyToUploadEmployeeComplianceDocument:
      description: The employee compliance document data to upload.
      content:
        multipart/form-data:
          schema:
            $ref: '#/components/schemas/UploadEmployeeComplianceDocumentFileContainer'
      required: true
    RequestBodyForCreatePublicToken:
      description: Public token object that needs to be created.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatePublicTokenContainer'
      required: true
  schemas:
    UploadEmployeeComplianceDocumentFileContainer:
      type: object
      x-internal: true
      required:
        - file
      properties:
        file:
          description: The employee compliance document to upload.
          type: string
          format: binary
    UploadEmployeeComplianceDocumentContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          type: object
          properties:
            success:
              description: A flag denoting if the file upload was successful.
              type: boolean
              example: true
    GetEmployeeComplianceDocumentTemplateDownloadLinkContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          type: object
          properties:
            url:
              description: The URL for the requested compliance document template.
              type: string
              example: >-
                https://s3URL/letsdeel.com/contract_requirement_templates/12345.pdf
            expires_at:
              description: Expiration date time of download URL.
              type: string
              format: date-time
              example: '2020-03-31T10:58:49.780Z'
    GetEmployeeComplianceDocumentsContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          type: object
          required:
            - documents
          properties:
            documents:
              type: array
              items:
                type: object
                properties:
                  description:
                    description: A short description of the document.
                    type: string
                    example: This document is needed for tax purposes.
                  id:
                    description: The unique identifier of the document.
                    $ref: '#/components/schemas/UniqueObjectIdentifier'
                  name:
                    description: The name of the document.
                    type: string
                    example: Example Document
                  has_template:
                    description: >-
                      Denotes if this document has a template available for
                      download
                    type: boolean
                    example: true
                  fillable:
                    description: Denotes if the document is available to fill out on Deel.
                    type: boolean
                    example: false
                  is_optional:
                    description: Denotes if the document is optional or required.
                    type: boolean
                    example: false
                  country:
                    description: The country associated with this document.
                    type: string
                    example: GB
                  uploaded_at:
                    description: >-
                      The timestamp when this document was uploaded / supplied
                      to Deel.
                    type: string
                    example: '2023-01-01T12:00:00.000Z'
                  filenames:
                    description: >-
                      The list of filenames for the associated uploaded
                      documents.
                    type: array
                    items:
                      description: A file name for an uploaded document.
                      type: string
                      example: myComplianceDocument.pdf
    PaymentStatementInitiatedWebhook:
      type: object
      required:
        - billing_invoices
        - invoices
      properties:
        billing_invoices:
          type: array
          items:
            type: number
        invoices:
          type: array
          items:
            type: number
    AlternateEmailList:
      description: List of alternate email addresses.
      type: array
      items:
        $ref: '#/components/schemas/AlternateEmailItem'
    AlternateEmailItem:
      title: Root Schema
      type: object
      required:
        - email
        - isVerified
      properties:
        email:
          title: Alternate email
          $ref: '#/components/schemas/EmailType'
        isVerified:
          title: True if email has been verified
          type: boolean
    ApiErrorContainer:
      type: object
      x-internal: true
      properties:
        request:
          $ref: '#/components/schemas/ApiErrorRequest'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
    ApiErrorRequest:
      type: object
      x-internal: true
      properties:
        method:
          description: The HTTP method of the failed request
          type: string
          example: POST
        url:
          description: The relative URL of the failed request
          type: string
          example: /rest/v2/example
        status:
          description: The status code of the response
          type: number
          example: 400
        api_req_id:
          description: The request ID of the failed request
          type: string
          example: 00000000-0000-0000-0000-000000000000
        docs:
          description: >-
            A link to the official documentation for the requested endpoint
            resource
          type: string
          example: https://developer.deel.com/reference/example
        source:
          description: The source handler which produced the returned error
          type: string
          example: AJV
        code:
          description: The code of the source handler which produced the returned error
          type: number
          example: 3
    ApiError:
      type: object
      x-internal: true
      properties:
        message:
          description: A description of the returned error
          type: string
          example: Must have required property 'example_field'
        path:
          description: The JSON path where input validation failed
          type: string
          example: /data/type
    ContractSearchForm:
      description: >-
        Search form should include parameters varied based on usage of cursor
        for pagination. NOTE: that all query parameters are based on strings
      x-internal: true
      oneOf:
        - $ref: '#/components/schemas/ContractSearchFormWithCursor'
        - $ref: '#/components/schemas/ContractSearchFormWithoutCursor'
    ContractSearchFormWithCursor:
      description: >-
        This is a model to make it easier to understand and restrict search
        parameters
      type: object
      x-internal: true
      properties:
        after_cursor:
          description: Return next page of results after given cursor.
          type: string
          nullable: false
        limit:
          description: Return a page of results with given number of records.
          type: string
          pattern: ^\d{1,5}$
          default: '10'
          nullable: false
    ContractSearchFormWithoutCursor:
      description: >-
        This is a model to make it easier to understand and restrict search
        parameters
      type: object
      x-internal: true
      properties:
        limit:
          description: Return a page of results with given number of records.
          type: string
          pattern: ^\d{1,5}$
          default: '10'
          nullable: false
        order_direction:
          $ref: '#/components/schemas/SortDirEnum'
        types:
          oneOf:
            - $ref: '#/components/schemas/ContractTypeEnum'
            - $ref: '#/components/schemas/ContractTypeEnumList'
        statuses:
          oneOf:
            - $ref: '#/components/schemas/ContractStatusEnumList'
            - $ref: '#/components/schemas/ContractStatusEnum'
        team_id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
        external_id:
          description: Filter contracts for given external ID
          type: string
          nullable: false
          maxLength: 255
        countries:
          oneOf:
            - $ref: '#/components/schemas/CountryCodeList'
            - $ref: '#/components/schemas/CountryCode'
        currencies:
          oneOf:
            - $ref: '#/components/schemas/CurrencyCodeList'
            - $ref: '#/components/schemas/CurrencyCodeRequired'
        search:
          description: >-
            Include a contract if by name or contractor name contains given
            search term.
          type: string
          nullable: false
        sort_by:
          $ref: '#/components/schemas/ContractsSortByEnum'
    ContractListContainer:
      type: object
      x-internal: true
      properties:
        data:
          $ref: '#/components/schemas/ContractList'
        page:
          $ref: '#/components/schemas/PageInfo'
      required:
        - data
        - page
    ContractList:
      type: array
      x-internal: true
      items:
        $ref: '#/components/schemas/BasicContract'
    BasicContract:
      type: object
      x-internal: true
      properties:
        title:
          type: string
          nullable: false
          minLength: 1
        id:
          type: string
          nullable: false
          minLength: 1
        type:
          $ref: '#/components/schemas/ContractTypeEnum'
        status:
          $ref: '#/components/schemas/ContractStatusEnum'
        client:
          $ref: '#/components/schemas/ClientOfBasicContract'
        worker:
          $ref: '#/components/schemas/WorkerOfBasicContract'
        invitations:
          $ref: '#/components/schemas/InvitationsOfBasicContract'
        signatures:
          $ref: '#/components/schemas/SignaturesOfBasicContract'
        is_shielded:
          type: boolean
        is_archived:
          type: boolean
        created_at:
          $ref: '#/components/schemas/DateTimeString'
        termination_date:
          $ref: '#/components/schemas/DateTimeString'
        notice_period:
          $ref: '#/components/schemas/NoticePeriod'
        scale:
          description: The payment scale (e.g., hourly, weekly, monthly, etc.)
          type: string
          nullable: true
        who_reports:
          $ref: '#/components/schemas/ContractWhoReportsEnum'
        external_id:
          description: A unique identifier for the object provided by an external system.
          type: string
          nullable: true
      required:
        - id
        - title
        - type
        - status
        - client
        - worker
        - invitations
        - signatures
        - is_shielded
        - is_archived
        - created_at
        - termination_date
    ContractContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/Contract'
    ContractContainer_pay_as_you_go_time_based:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/Contract'
    BankAccountAddedContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/BankAccountAdded'
    ContractContainer_payg_tasks:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/Contract'
    ContractContainer_payg_milestones:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/Contract'
    ContractContainer_ongoing_time_based:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/Contract'
    ResponseEstimateFirstPaymentContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/ResponseEstimateFirstPayment'
    ResponseEstimateFirstPayment:
      type: object
      x-internal: true
      properties:
        pro_rata:
          $ref: '#/components/schemas/ProRata'
        first_payment_dates:
          type: array
          items:
            $ref: '#/components/schemas/FirstPaymentDate'
    BankAccountAdded:
      type: object
      x-internal: true
      properties:
        id:
          description: ID of Bank Account.
          type: string
          example: dcc7b587-2246-4909-853e-12056e90c451
        status:
          $ref: '#/components/schemas/BankAccountStatus'
        created_at:
          $ref: '#/components/schemas/DateTimeString'
        updated_at:
          $ref: '#/components/schemas/DateTimeString'
    BankAccountStatus:
      description: Bank Account status
      type: string
      x-internal: true
      enum:
        - new
        - pending
        - approved
        - failed
    Contract:
      type: object
      x-internal: true
      properties:
        title:
          type: string
          nullable: false
          minLength: 1
        id:
          type: string
          nullable: false
          minLength: 1
        type:
          $ref: '#/components/schemas/ContractTypeEnum'
        status:
          $ref: '#/components/schemas/ContractStatusEnum'
        created_at:
          $ref: '#/components/schemas/DateTimeString'
        job_title:
          type: string
        seniority:
          $ref: '#/components/schemas/Seniority'
        who_reports:
          $ref: '#/components/schemas/ContractWhoReportsEnum'
        scope_of_work:
          type: string
          nullable: true
        start_date:
          $ref: '#/components/schemas/DateTimeString'
        termination_date:
          $ref: '#/components/schemas/DateTimeString'
        special_clause:
          type: string
        is_archived:
          type: boolean
        client:
          $ref: '#/components/schemas/ClientOfContract'
        worker:
          $ref: '#/components/schemas/WorkerOfContract'
        invitations:
          $ref: '#/components/schemas/InvitationsOfBasicContract'
        signatures:
          $ref: '#/components/schemas/SignaturesOfContract'
        compensation_details:
          $ref: '#/components/schemas/CompensationDetailsOfContract'
        employment_details:
          $ref: '#/components/schemas/EmploymentDetailsOfContract'
        notice_period:
          $ref: '#/components/schemas/NoticePeriod'
        contract_template:
          $ref: '#/components/schemas/ContractTemplate'
        custom_fields:
          type: array
          items:
            $ref: '#/components/schemas/ContractCustomField'
        quote:
          description: >-
            It is the quote associated with this contract. It will only be
            present for EOR-type contracts.
          $ref: '#/components/schemas/EorQuoteBase'
          nullable: true
        external_id:
          description: A unique identifier for the object provided by an external system.
          type: string
          nullable: true
      required:
        - id
        - title
        - type
        - status
        - created_at
        - job_title
        - seniority
        - special_clause
        - start_date
        - termination_date
        - is_archived
        - client
        - worker
        - invitations
        - signatures
        - compensation_details
        - employment_details
    ClientOfBasicContract:
      type: object
      x-internal: true
      properties:
        team:
          $ref: '#/components/schemas/TeamOfBasicContract'
    ClientOfContract:
      type: object
      x-internal: true
      nullable: true
      properties:
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
        full_name:
          type: string
        email:
          $ref: '#/components/schemas/EmailType'
        team:
          $ref: '#/components/schemas/TeamOfContract'
        legal_entity:
          $ref: '#/components/schemas/ClientLegalEntity'
      required:
        - team
        - legal_entity
    ClientLegalEntity:
      type: object
      x-internal: true
      nullable: true
      properties:
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
        name:
          type: string
        email:
          $ref: '#/components/schemas/EmailType'
        type:
          $ref: '#/components/schemas/LegalEntityType'
        subtype:
          $ref: '#/components/schemas/LegalEntitySubType'
        registration_number:
          type: string
        vat_number:
          type: string
      required:
        - id
        - name
        - email
        - type
        - subtype
        - registration_number
        - vat_number
    DateStringDefaultNow:
      description: >-
        Short date in format ISO-8601 (YYYY-MM-DD). For example: 2022-12-31.
        Defaults to current date
      type: string
      x-internal: true
      format: date
      pattern: ^\d{4}-\d{2}-\d{2}$
      example: '1999-12-31T00:00:00.000Z'
    DateStringRequired:
      description: 'Short date in format ISO-8601 (YYYY-MM-DD). For example: 2022-12-31.'
      type: string
      x-internal: true
      format: date
      pattern: ^\d{4}-\d{2}-\d{2}$
      example: '1999-12-31T00:00:00.000Z'
    DateString:
      description: 'Short date in format ISO-8601 (YYYY-MM-DD). For example: 2022-12-31.'
      type: string
      x-internal: true
      format: date
      pattern: ^\d{4}-\d{2}-\d{2}$
      example: '1999-12-31T00:00:00.000Z'
      nullable: true
    DateTimeStringRequired:
      description: Long date-time format following ISO-8601
      type: string
      x-internal: true
      format: date-time
      example: '2022-05-24T09:38:46.235Z'
      nullable: false
    DateTimeString:
      description: Long date-time format following ISO-8601
      type: string
      x-internal: true
      format: date-time
      example: '2022-05-24T09:38:46.235Z'
      nullable: true
    WorkerOfBasicContract:
      type: object
      x-internal: true
      required:
        - id
        - full_name
        - email
      nullable: true
      properties:
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
        full_name:
          type: string
          nullable: false
          minLength: 1
        email:
          $ref: '#/components/schemas/EmailType'
        alternate_email:
          $ref: '#/components/schemas/AlternateEmailList'
        image:
          $ref: '#/components/schemas/UrlType'
    WorkerOfContract:
      type: object
      x-internal: true
      nullable: true
      properties:
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
          nullable: false
        full_name:
          description: Worker's full name.
          type: string
          nullable: false
          minLength: 1
        email:
          $ref: '#/components/schemas/EmailType'
        alternate_email:
          $ref: '#/components/schemas/AlternateEmailList'
        nationality:
          description: Worker's nationality.
          example: US
          type: string
          nullable: true
        image:
          type: string
          format: url
        legal_entity:
          $ref: '#/components/schemas/WorkerLegalEntity'
        date_of_birth:
          $ref: '#/components/schemas/DateTimeString'
        expected_email:
          $ref: '#/components/schemas/WorkerEmailType'
        first_name:
          description: Worker's first name
          type: string
          nullable: true
          maxLength: 255
          example: John
        last_name:
          description: Worker's last name
          type: string
          nullable: true
          maxLength: 255
          example: Doe
        country:
          description: Worker's country (location not nationality)
          type: string
          nullable: true
          example: US
    WorkerLegalEntity:
      type: object
      x-internal: true
      properties:
        type:
          $ref: '#/components/schemas/LegalEntityType'
        personal_name:
          type: string
        registration_number:
          type: string
      required:
        - type
        - personal_name
        - registration_number
    TeamOfBasicContract:
      type: object
      x-internal: true
      required:
        - id
        - name
      properties:
        id:
          description: Unique reference of a team
          $ref: '#/components/schemas/UniqueObjectIdentifier'
        name:
          description: Name of a team
          type: string
          nullable: true
    TeamOfContract:
      type: object
      x-internal: true
      required:
        - id
        - name
      properties:
        id:
          description: Unique reference of a team
          $ref: '#/components/schemas/UniqueObjectIdentifier'
        name:
          description: Name of a team
          type: string
          nullable: false
    InvitationsOfBasicContract:
      type: object
      x-internal: true
      properties:
        client_email:
          $ref: '#/components/schemas/EmailType'
        worker_email:
          $ref: '#/components/schemas/EmailType'
    SignaturesOfBasicContract:
      type: object
      x-internal: true
      required:
        - client_signed_at
        - worker_signature
        - worker_signed_at
      properties:
        client_signed_at:
          $ref: '#/components/schemas/DateTimeString'
        worker_signature:
          description: Worker's signature.
          type: string
          example: Jane Doe
          nullable: false
        worker_signed_at:
          $ref: '#/components/schemas/DateTimeString'
    SignaturesOfContract:
      type: object
      x-internal: true
      required:
        - client_signature
        - client_signed_at
        - worker_signature
        - worker_signed_at
        - signed_at
      properties:
        client_signature:
          description: normally name of client is used as signature
          type: string
        client_signed_at:
          $ref: '#/components/schemas/DateTimeString'
        worker_signature:
          description: Signatures of client representative.
          type: string
          nullable: false
        worker_signed_at:
          $ref: '#/components/schemas/DateTimeString'
        signed_at:
          $ref: '#/components/schemas/DateTimeString'
    CompensationDetailsOfContract:
      type: object
      x-internal: true
      properties:
        currency_code:
          $ref: '#/components/schemas/CurrencyCodeRequired'
        amount:
          type: string
        scale:
          type: string
        frequency:
          type: string
        first_payment:
          type: string
        first_payment_date:
          $ref: '#/components/schemas/DateTimeString'
        gross_annual_salary:
          type: string
        gross_signing_bonus:
          type: string
        gross_variable_bonus:
          type: string
      required:
        - currency_code
        - amount
        - scale
        - frequency
        - first_payment
        - first_payment_date
        - gross_annual_salary
        - gross_signing_bonus
        - gross_variable_bonus
    EmploymentDetailsOfContract:
      type: object
      x-internal: true
      properties:
        type:
          type: string
        days_per_week:
          type: number
        hours_per_day:
          type: number
        probation_period:
          type: number
          nullable: true
        paid_vacation_days:
          type: number
        country:
          $ref: '#/components/schemas/CountryCode'
        state:
          description: State code.
          type: string
          example: CO
          nullable: true
      required:
        - type
        - days_per_week
        - hours_per_day
        - probation_period
        - paid_vacation_days
    ContractToAmendDetailsContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/ContractDetailsToAmend'
    ContractDetailsToAmend:
      description: You can specify any combination of data points that need changing.
      type: object
      x-internal: true
      properties:
        amount:
          type: number
          minimum: 1
          nullable: false
          example: 100
        currency_code:
          $ref: '#/components/schemas/CurrencyCodeRequired'
        scale:
          $ref: '#/components/schemas/WorkStatementScaleEnum'
        effective_date:
          $ref: '#/components/schemas/DateStringRequired'
        first_payment_date:
          $ref: '#/components/schemas/DateStringRequired'
        first_payment:
          type: number
          minimum: 0
          nullable: false
        frequency:
          $ref: '#/components/schemas/WorkStatementCycleScaleEnum'
        cycle_end:
          type: number
          minimum: 1
          maximum: 31
        cycle_end_type:
          $ref: '#/components/schemas/WorkStatementCycleEndTypeEnum'
        payment_due_type:
          $ref: '#/components/schemas/WorkStatementPaymentDueTypeEnum'
        payment_due_days:
          type: number
          minimum: 0
          maximum: 90
          nullable: false
        pay_before_weekends:
          description: If the payment due is on a weekend, pay on Friday.
          type: boolean
          nullable: false
        job_title_name:
          description: You can enter new job title.
          type: string
          nullable: false
          example: 3D Designer
        job_title_id:
          description: If you want to use a predefined job title, please use a job title ID
          $ref: '#/components/schemas/UniqueObjectIdentifier'
          example: 123
        seniority_id:
          description: You can use a predefined seniority level ID.
          $ref: '#/components/schemas/UniqueObjectIdentifier'
        special_clause:
          description: Text to describe any special clause in contract.
          type: string
          nullable: false
        scope_of_work:
          description: Text to describe the scope of work of the contract.
          type: string
          nullable: false
    ContractToCreateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/ContractToCreate'
    AdminUserCreateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/AdminUserCreateRequest'
    ContractToCreate:
      x-internal: true
      oneOf:
        - $ref: '#/components/schemas/ContractToCreate_pay_as_you_go_time_based'
        - $ref: '#/components/schemas/ContractToCreate_payg_tasks'
        - $ref: '#/components/schemas/ContractToCreate_payg_milestones'
        - $ref: '#/components/schemas/ContractToCreate_ongoing_time_based'
    ContractToCreateContainer_pay_as_you_go_time_based:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/ContractToCreate_pay_as_you_go_time_based'
    AdjustmentToCreateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/AdjustmentToCreate'
    AdjustmentToUpdateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/AdjustmentToUpdate'
    CandidateToCreateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/CandidateToCreate'
    CandidateToPatchContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/CandidateToPatch'
    BankAccountToAddContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/BankAccountToAdd'
    AdditionalEORInfoContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/AdditionalEORInfo'
    RequestCustomVerificationLetterContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/LetterRequest'
    RequestCustomVerificationLetterWithFile:
      type: object
      allOf:
        - $ref: '#/components/schemas/LetterRequest'
        - type: object
          required:
            - files
          properties:
            files:
              type: array
              items:
                $ref: '#/components/schemas/FileObject'
    ContractToCreateContainer_payg_tasks:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/ContractToCreate_payg_tasks'
    ContractToCreateContainer_payg_milestones:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/ContractToCreate_payg_milestones'
    ContractToCreateContainer_ongoing_time_based:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/ContractToCreate_ongoing_time_based'
    CandidateToPatch:
      description: Details of candidate to update
      type: object
      x-internal: true
      required:
        - status
      properties:
        first_name:
          description: Candidate's first name.
          type: string
          example: John
        last_name:
          description: Candidate's last name.
          type: string
          example: Doe
        status:
          $ref: '#/components/schemas/CandidateStatusEnum'
        start_date:
          description: Candidate's expected start date.
          $ref: '#/components/schemas/DateStringRequired'
        job_title:
          description: Job Title.
          type: string
          example: 3D Designer
        link:
          description: Link to candidate's profile in ATS.
          type: string
        email:
          title: Candidate's email.
          $ref: '#/components/schemas/EmailTypeRequired'
        nationality:
          description: Candidate's nationality.
          $ref: '#/components/schemas/NationalityType'
        country:
          description: Job location country.
          $ref: '#/components/schemas/CountryCode'
        state:
          description: Job location state.
          type: string
          minLength: 1
          maxLength: 50
          example: AL
    AdjustmentToCreate:
      description: Details of adjustment to create
      type: object
      x-internal: true
      required:
        - contract_id
        - amount
        - title
        - description
        - adjustment_category_id
        - file
        - vendor
        - country
      properties:
        title:
          description: Title of adjustment.
          type: string
          example: Your title here
          minLength: 3
          maxLength: 255
        description:
          description: Description of adjustment.
          type: string
          example: Your description here
          minLength: 3
          maxLength: 255
        contract_id:
          description: The identifier of the contract associated with the adjustment
          type: string
          example: m3jk2j
          minLength: 5
        amount:
          description: Amount of adjustment.
          oneOf:
            - type: string
            - type: number
          minimum: 1
          minLength: 1
          example: 100.25
        date_of_adjustment:
          description: The date of the expense associated with the adjustment.
          $ref: '#/components/schemas/DateString'
          example: '2023-11-02T00:00:00.000Z'
        cycle_reference:
          description: Cycle reference of adjustment.
          type: string
          example: my_cycle_reference
        file:
          description: File of adjustment.
          type: string
          format: binary
          minLength: 1
        adjustment_category_id:
          description: Adjustment category id.
          type: string
          example: c9cf4c2c0165f48f494415390c3b49
          minLength: 25
        move_next_cycle:
          description: If an adjustments can belong to another payroll cycle.
          type: boolean
          nullable: true
          example: true
        vendor:
          description: Vendor of adjustment.
          type: string
          example: Vendor
          minLength: 3
        country:
          description: Country of adjustment.
          $ref: '#/components/schemas/CountryCode'
          example: CA
    AdjustmentToUpdate:
      description: Details of adjustment to update
      type: object
      x-internal: true
      properties:
        title:
          description: Title of adjustment.
          type: string
          example: Your title here
          minLength: 3
          maxLength: 255
        description:
          description: Description of adjustment.
          type: string
          example: Your description here
          minLength: 3
          maxLength: 255
        amount:
          description: Amount of adjustment.
          oneOf:
            - type: string
            - type: number
          minimum: 1
          minLength: 1
          example: 100.25
        file:
          description: File of adjustment.
          type: string
          format: binary
          minLength: 1
    CandidateToCreate:
      description: Details of candidate to create
      type: object
      x-internal: true
      required:
        - id
        - first_name
        - last_name
        - status
        - start_date
        - link
      properties:
        id:
          description: Unique identifier of candidate in your ATS.
          type: string
        first_name:
          description: Candidate's first name.
          type: string
          example: John
        last_name:
          description: Candidate's last name.
          type: string
          example: Doe
        status:
          $ref: '#/components/schemas/CandidateStatusEnum'
        start_date:
          description: Candidate's expected start date.
          $ref: '#/components/schemas/DateStringRequired'
        link:
          description: Link to candidate's profile in ATS.
          type: string
        job_title:
          description: Job Title.
          type: string
          example: 3D Designer
        email:
          title: Candidate's email.
          $ref: '#/components/schemas/EmailTypeRequired'
        nationality:
          description: Candidate's nationality.
          $ref: '#/components/schemas/NationalityType'
        country:
          description: Job location country.
          $ref: '#/components/schemas/CountryCode'
        state:
          description: Job location state.
          type: string
          minLength: 1
          maxLength: 50
          example: AL
    ContractToCreate_pay_as_you_go_time_based:
      x-internal: true
      allOf:
        - $ref: '#/components/schemas/ContractToCreate_Shared'
        - type: object
          required:
            - type
            - start_date
          properties:
            type:
              type: string
              enum:
                - pay_as_you_go_time_based
            start_date:
              $ref: '#/components/schemas/DateStringRequired'
        - type: object
          required:
            - compensation_details
          properties:
            compensation_details:
              allOf:
                - $ref: >-
                    #/components/schemas/CompensationDetailsOfContractToCreate_Shared
                - $ref: >-
                    #/components/schemas/CompensationDetailsOfContractToCreate_pay_as_you_go_time_based
    BankAccountToAdd:
      x-internal: true
      type: array
      items:
        type: object
        required:
          - key
          - value
        properties:
          key:
            description: The key of the bank account properties.
            type: string
          value:
            description: The value for that key property.
            type: string
    ContractToCreate_payg_tasks:
      x-internal: true
      allOf:
        - $ref: '#/components/schemas/ContractToCreate_Shared'
        - type: object
          required:
            - type
            - start_date
          properties:
            type:
              type: string
              enum:
                - payg_tasks
            start_date:
              $ref: '#/components/schemas/DateStringRequired'
        - type: object
          required:
            - compensation_details
          properties:
            compensation_details:
              $ref: >-
                #/components/schemas/CompensationDetailsOfContractToCreate_Shared
    ContractToCreate_payg_milestones:
      x-internal: true
      allOf:
        - $ref: '#/components/schemas/ContractToCreate_Shared'
        - type: object
          required:
            - type
          properties:
            type:
              type: string
              enum:
                - payg_milestones
            start_date:
              $ref: '#/components/schemas/DateString'
        - type: object
          required:
            - compensation_details
          properties:
            compensation_details:
              $ref: >-
                #/components/schemas/CompensationDetailsOfContractToCreate_Shared
    ContractToCreate_ongoing_time_based:
      x-internal: true
      allOf:
        - $ref: '#/components/schemas/ContractToCreate_Shared'
        - type: object
          required:
            - type
            - start_date
          properties:
            type:
              type: string
              enum:
                - ongoing_time_based
            start_date:
              $ref: '#/components/schemas/DateStringRequired'
        - type: object
          required:
            - compensation_details
          properties:
            compensation_details:
              allOf:
                - $ref: >-
                    #/components/schemas/CompensationDetailsOfContractToCreate_Shared
                - $ref: >-
                    #/components/schemas/CompensationDetailsOfContractToCreate_ongoing_time_based
    EorQuoteBase:
      description: EOR quote approved by Deel
      type: object
      properties:
        annual_salary:
          description: Annual Salary in local currency
          type: number
          example: 900
        currency:
          description: Local currency
          $ref: '#/components/schemas/CurrencyCodeRequired'
        breakdown_costs:
          description: Breakdown costs
          $ref: '#/components/schemas/BreakdownCostsQuote'
        severance_accrual_total:
          description: Total severance accrual in local currency
          type: number
          example: 900
        severance_accrual_total_usd:
          description: Total severance accrual in USD
          type: number
          example: 900
        recurring_allowance_total:
          description: Total recurring allowance in local currency
          type: number
          example: 900
        recurring_allowance_total_usd:
          description: Total recurring allowance in USD
          type: number
          example: 900
        salary_total:
          description: Total salary in local currency
          type: number
          example: 900
        salary_total_usd:
          description: Total salary in USD
          type: number
          example: 900
        employer_cost_total:
          description: Total employer cost in local currency
          type: number
          example: 900
        employer_cost_total_usd:
          description: Total employer cost in USD
          type: number
          example: 900
        platform_fee_total:
          description: Total platform fee in local currency
          type: number
          example: 900
        platform_fee_total_usd:
          description: Total platform fee in USD
          type: number
          example: 900
        mobility_fee_total:
          description: Total mobility fee in local currency
          type: number
          example: 900
        mobility_fee_total_usd:
          description: Total mobility fee in USD
          type: number
          example: 900
        monthly_cost_total:
          description: Total monthly cost in local currency
          type: number
          example: 900
        monthly_cost_total_usd:
          description: Total monthly cost in USD
          type: number
          example: 900
        gross_salary_total:
          description: Total gross salary in local currency
          type: number
          example: 900
        gross_salary_total_usd:
          description: Total gross salary in USD
          type: number
          example: 900
        cba_total:
          description: Total CBA in local currency
          type: number
          example: 900
        cba_total_usd:
          description: Total CBA in USD
          type: number
          example: 900
        created_at:
          description: Quote creation date
          $ref: '#/components/schemas/DateString'
        updated_at:
          description: Quote updated date
          $ref: '#/components/schemas/DateString'
    EorQuotePayload:
      description: EOR quote approved by Deel
      type: object
      allOf:
        - $ref: '#/components/schemas/EorQuoteBase'
        - type: object
          properties:
            contract_id:
              description: Contract id
              type: string
            contract_name:
              description: Contract name
              type: string
              example: My EOR Contract
            country_code:
              $ref: '#/components/schemas/CountryCode'
            country_name:
              description: Country Name
              type: string
              example: Argentina
    BenefitQuote:
      type: object
      x-internal: true
      properties:
        fee:
          description: Fee in local currency
          type: number
        fee_usd:
          description: Fee in USD
          type: number
        name:
          description: Benefit's name
          type: string
        plan:
          description: Benefit's plan
          type: string
        price:
          description: Price in local currency
          type: number
        currency:
          $ref: '#/components/schemas/CurrencyCode'
        price_usd:
          description: Price in USD
          type: number
    BreakdownCostsQuote:
      type: object
      x-internal: true
      properties:
        monthly:
          type: object
          properties:
            costs:
              type: array
              items:
                $ref: '#/components/schemas/CostQuote'
            total:
              description: Total costs in local currency
              type: number
            total_usd:
              description: Total costs in USD
              type: number
    CostQuote:
      type: object
      x-internal: true
      properties:
        name:
          description: Cost's name
          type: string
        currency:
          $ref: '#/components/schemas/CurrencyCode'
        total:
          description: Total cost in local currency
          type: number
        total_usd:
          description: Total cost in USD
          type: number
    ContractToCreate_Shared:
      description: Details of contract to create
      type: object
      x-internal: true
      required:
        - type
        - title
        - job_title
        - meta
        - client
      properties:
        title:
          description: The title of the contract.
          type: string
        country_code:
          $ref: '#/components/schemas/CountryCode'
        state_code:
          description: >-
            The state or province code. Use country lookup endpoint to retrieve
            state codes.
          type: string
          nullable: true
        scope_of_work:
          description: Describe the work to be performed.
          type: string
          nullable: true
        special_clause:
          description: Enter any special clause you may have.
          type: string
          nullable: true
        termination_date:
          $ref: '#/components/schemas/DateString'
        client:
          type: object
          required:
            - legal_entity
            - team
          properties:
            legal_entity:
              description: >-
                Choose the Deel legal entity for this contract. Use legal entity
                endpoint to retrieve a list of legal entities in your
                organization.
              type: object
              required:
                - id
              properties:
                id:
                  $ref: '#/components/schemas/UniqueObjectIdentifier'
            team:
              description: >-
                Choose the Deel team for this contract. Use teams endpoint to
                retrieve a list of teams in your organization.
              type: object
              required:
                - id
              properties:
                id:
                  $ref: '#/components/schemas/UniqueObjectIdentifier'
        job_title:
          description: >-
            Worker's job title. You can enter a custom job title or use a
            pre-defiled job title using the Id retrieved in job-titles endpoint.
          type: object
          properties:
            id:
              description: Id of an predefined job title.
              $ref: '#/components/schemas/UniqueObjectIdentifier'
            name:
              description: Job title. Please leave it blank when entering an Id.
              type: string
              nullable: true
              maxLength: 255
        seniority:
          description: >-
            Job seniority level. Please use the seniority levels endpoint to
            retrieve the list of seniority levels.
          type: object
          nullable: true
          properties:
            id:
              $ref: '#/components/schemas/UniqueObjectIdentifier'
        notice_period:
          $ref: '#/components/schemas/NoticePeriod'
        who_reports:
          $ref: '#/components/schemas/ContractWhoReportsEnum'
        meta:
          $ref: '#/components/schemas/MetaDataOfContractToCreate'
        external_id:
          description: External Id.
          type: string
          nullable: true
        worker:
          description: Worker properties
          type: object
          nullable: true
          required:
            - first_name
            - expected_email
          properties:
            expected_email:
              $ref: '#/components/schemas/WorkerEmailType'
            first_name:
              description: Worker's first name
              type: string
              nullable: true
              maxLength: 255
              example: John
            last_name:
              description: Worker's last name
              type: string
              nullable: true
              maxLength: 255
              example: Doe
    MetaDataOfContractToCreate:
      description: Additional custom info about a contract
      type: object
      x-internal: true
      required:
        - documents_required
      properties:
        documents_required:
          description: >-
            Require the contractor to upload necessary compliance documents as
            per their country’s labor laws.
          type: boolean
        is_main_income:
          type: boolean
    CompensationDetailsOfContractToCreate_pay_as_you_go_time_based:
      x-internal: true
      type: object
      required:
        - amount
        - scale
      properties:
        amount:
          type: number
        scale:
          $ref: '#/components/schemas/WorkStatementScaleEnum'
    CompensationDetailsOfContractToCreate_ongoing_time_based:
      x-internal: true
      type: object
      required:
        - amount
        - scale
      properties:
        amount:
          type: number
        scale:
          $ref: '#/components/schemas/WorkStatementScaleEnum'
    CompensationDetailsOfContractToCreate_Shared:
      type: object
      x-internal: true
      required:
        - currency_code
        - frequency
        - cycle_end
        - cycle_end_type
        - payment_due_type
        - payment_due_days
      properties:
        amount:
          description: >-
            Amount to be paid. This field can be excluded when creating a
            Pay-as-you-go task-based or Milestone contracts.
          type: number
          example: 100
        currency_code:
          $ref: '#/components/schemas/CurrencyCodeRequired'
        frequency:
          $ref: '#/components/schemas/WorkStatementCycleScaleEnum'
        cycle_end:
          description: Date invoice cycle ends.
          type: number
          minimum: 1
          maximum: 31
          example: 15
        cycle_end_type:
          $ref: '#/components/schemas/WorkStatementCycleEndTypeEnum'
        payment_due_type:
          $ref: '#/components/schemas/WorkStatementPaymentDueTypeEnum'
        payment_due_days:
          type: number
          minimum: 0
          maximum: 90
          example: 7
        pay_before_weekends:
          description: If the payment due is on a weekend, pay on Friday.
          type: boolean
          example: true
        first_payment_date:
          $ref: '#/components/schemas/DateString'
        first_payment:
          description: First payment amount.
          type: number
          default: 0
          minimum: 0
          example: 500
        notice_period:
          $ref: '#/components/schemas/NoticePeriod'
    EmployeeContractSignatureToCreateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/EmployeeContractSignatureToCreate'
    ContractSignatureToCreateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/ContractSignatureToCreate'
    SalaryFrequencyScaleEnum:
      description: Scale of the salary frequency.
      type: string
      x-internal: true
      enum:
        - monthly
        - quarterly
        - annually
        - specific_month
        - specific_date
      example: monthly
    EmployeeContractSignatureToCreate:
      type: object
      x-internal: true
      required:
        - signature
      properties:
        signature:
          description: Signature of employee.
          type: string
          minLength: 2
    ContractSignatureToCreate:
      type: object
      x-internal: true
      required:
        - client_signature
      properties:
        client_signature:
          description: Signature of client.
          type: string
          nullable: false
          minLength: 2
        contract_template_id:
          description: >-
            Please use null to use default Deel contract template; otherwise you
            can use the template you created and customized. If template ID is
            not in payload, template stays unchanged.
          type: number
          nullable: true
          example: 12345678
    ContractInvitationToCreateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/ContractInvitationToCreate'
    ContractInvitationToCreate:
      type: object
      x-internal: true
      required:
        - email
        - message
      properties:
        email:
          $ref: '#/components/schemas/EmailTypeRequired'
        message:
          description: Message for the worker.
          type: string
          nullable: false
          minLength: 1
    WorkStatementScaleEnumOptional:
      description: >-
        Defines the scale at which the amount is paid. For example, enter
        'hourly' to define the amount per hour. This field can be excluded when
        creating a Pay-as-you-go task-based or Milestone contracts.
      type: string
      x-internal: true
      enum:
        - hourly
        - daily
        - weekly
        - monthly
        - biweekly
        - semimonthly
        - custom
      example: daily
      nullable: true
    WorkStatementScaleEnum:
      description: >-
        Defines the scale at which the amount is paid. For example, enter
        'hourly' to define the amount per hour. This field can be excluded when
        creating a Pay-as-you-go task-based or Milestone contracts.
      type: string
      x-internal: true
      enum:
        - hourly
        - daily
        - weekly
        - monthly
        - biweekly
        - semimonthly
        - custom
      example: daily
    WorkStatementCycleScaleEnum:
      description: Scale of the invoice cycle.
      type: string
      x-internal: true
      enum:
        - weekly
        - monthly
        - biweekly
        - semimonthly
        - calendar-month
      example: monthly
    WorkStatementCycleEndTypeEnum:
      description: Cycle end can be weekly 1-7 (Monday = 1) or monthly 1-31.
      type: string
      x-internal: true
      enum:
        - DAY_OF_WEEK
        - DAY_OF_LAST_WEEK
        - DAY_OF_MONTH
      example: DAY_OF_WEEK
    WeekDaysEnum:
      description: Days of the week.
      type: string
      x-internal: true
      enum:
        - Sunday
        - Monday
        - Tuesday
        - Wednesday
        - Thursday
        - Friday
        - Saturday
      example: Monday
    WorkStatementPaymentDueTypeEnum:
      description: >-
        Type of payment due. If the payment is due on the last day of month,
        enter 'WITHIN_MONTH'.
      type: string
      x-internal: true
      default: REGULAR
      enum:
        - REGULAR
        - WITHIN_MONTH
      example: REGULAR
    LegalEntityListContainer:
      type: object
      x-internal: true
      properties:
        data:
          $ref: '#/components/schemas/LegalEntityList'
    LegalEntityList:
      type: array
      x-internal: true
      items:
        $ref: '#/components/schemas/BasicLegalEntity'
    BasicLegalEntity:
      type: object
      x-internal: true
      required:
        - id
        - name
        - entity_type
        - entity_subtype
      properties:
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
        name:
          type: string
          nullable: false
        country:
          type: string
          nullable: false
        entity_type:
          $ref: '#/components/schemas/LegalEntityType'
        entity_subtype:
          $ref: '#/components/schemas/LegalEntitySubType'
    OrganizationListContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/OrganizationList'
    OrganizationList:
      type: array
      x-internal: true
      items:
        $ref: '#/components/schemas/BasicOrganization'
    BasicOrganization:
      type: object
      x-internal: true
      required:
        - id
        - name
      properties:
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
        name:
          type: string
          nullable: false
          minLength: 1
    TeamListContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/TeamList'
    TeamList:
      type: array
      x-internal: true
      items:
        $ref: '#/components/schemas/BasicTeam'
    BasicTeam:
      type: object
      required:
        - id
        - name
      x-internal: true
      properties:
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
        name:
          type: string
          nullable: false
          minLength: 1
    TimesheetListContainer:
      type: object
      x-internal: true
      properties:
        data:
          $ref: '#/components/schemas/TimesheetList'
        page:
          $ref: '#/components/schemas/PageInfoWithoutCursor'
      required:
        - data
        - page
    TimesheetList:
      type: array
      x-internal: true
      items:
        $ref: '#/components/schemas/BasicTimesheet'
    BasicTimesheet:
      type: object
      x-internal: true
      required:
        - id
        - type
        - status
        - description
        - date_submitted
        - created_at
        - currency_code
        - total_amount
        - quantity
        - contract
        - worksheet
        - reported_by
        - reviewed_by
        - attachment
      properties:
        description:
          type: string
          nullable: false
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
        type:
          description: Deprecated - it is always "work"
          type: string
        status:
          $ref: '#/components/schemas/TimesheetStatusEnum'
        date_submitted:
          $ref: '#/components/schemas/DateTimeStringRequired'
        currency_code:
          $ref: '#/components/schemas/CurrencyCodeRequired'
        total_amount:
          description: >-
            is equal to quantity times rate of active work statement + bonus in
            this record
          type: string
          example: '200.0000'
          nullable: false
        quantity:
          type: number
          example: 1
          nullable: true
        created_at:
          type: string
          example: '2022-05-04T03:45:27.108Z'
          nullable: false
        scale:
          type: string
          example: custom
          nullable: true
        custom_scale:
          type: string
          nullable: true
        attachment:
          $ref: '#/components/schemas/FileAttachmentInfo'
        worksheet:
          type: object
          nullable: true
          required:
            - weeks
            - days
            - hours
            - minutes
          properties:
            weeks:
              type: number
              example: 0
              minimum: 0
            days:
              type: number
              example: 0
              minimum: 0
            hours:
              type: number
              example: 1
              minimum: 0
            minutes:
              type: number
              example: 0
              minimum: 0
        reviewed_by:
          type: object
          nullable: true
          required:
            - id
            - full_name
            - reviewed_at
            - remarks
          properties:
            id:
              $ref: '#/components/schemas/UniqueObjectIdentifier'
            full_name:
              type: string
              example: Jane Smith
            reviewed_at:
              type: string
              example: '2022-05-04T03:45:27.899Z'
            remarks:
              type: string
              nullable: false
        contract:
          type: object
          required:
            - id
            - title
            - type
          properties:
            title:
              type: string
              nullable: false
            id:
              type: string
              nullable: false
            type:
              $ref: '#/components/schemas/ContractTypeEnum'
        payment_cycle:
          type: object
          properties:
            start_date:
              $ref: '#/components/schemas/DateTimeString'
            end_date:
              $ref: '#/components/schemas/DateTimeString'
        reported_by:
          type: object
          nullable: false
          required:
            - id
            - full_name
          properties:
            id:
              $ref: '#/components/schemas/UniqueObjectIdentifier'
            full_name:
              type: string
              example: John Smith
              nullable: false
    TimesheetContainer:
      type: object
      x-internal: true
      properties:
        data:
          $ref: '#/components/schemas/Timesheet'
      required:
        - data
    Timesheet:
      x-internal: true
      allOf:
        - $ref: '#/components/schemas/BasicTimesheet'
        - $ref: '#/components/schemas/TimesheetApproversContainer'
    TimesheetApproversContainer:
      type: object
      x-internal: true
      required:
        - approvers
      properties:
        approvers:
          $ref: '#/components/schemas/TimesheetApproverList'
    TimesheetApproverList:
      type: array
      x-internal: true
      items:
        $ref: '#/components/schemas/TimesheetApprover'
    TimesheetApprover:
      type: object
      x-internal: true
      required:
        - full_name
        - email
        - approved
      properties:
        full_name:
          type: string
        email:
          type: string
        approved:
          type: boolean
    TimesheetToCreateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/TimesheetSharedProperties'
    TimesheetSharedProperties:
      description: >-
        Details of the timesheet to create. Both a client or a contractor may
        create a timesheet.
      type: object
      x-internal: true
      required:
        - contract_id
        - quantity
        - date_submitted
        - description
      properties:
        description:
          type: string
          nullable: false
          default: ''
        contract_id:
          description: Id of a Deel contract.
          type: string
          nullable: false
        date_submitted:
          $ref: '#/components/schemas/DateStringRequired'
        quantity:
          description: >-
            This is based on the scale of work statement of the associated
            contract
          type: number
          minimum: 0.01
          nullable: false
          example: 2
    TimesheetToCreateWithFile:
      x-internal: true
      allOf:
        - $ref: '#/components/schemas/TimesheetSharedProperties'
        - $ref: '#/components/schemas/FileObject'
    TimesheetToUpdateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/TimesheetToUpdate'
    TimesheetToUpdate:
      description: >-
        Details of the timesheet to update. Both a client or a contractor may
        update a timesheet.
      type: object
      x-internal: true
      required:
        - quantity
        - description
      properties:
        description:
          type: string
          nullable: false
        quantity:
          type: number
          nullable: false
    TimesheetReviewsToCreateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/TimesheetReviewsToCreate'
    RequestBodyToCreatePgoTaskReviewsByIdReviewsContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/PgoTaskReviewsByIdToCreate'
    RequestBodyToCreatePgoTaskReviewsReviewsContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/PgoTaskReviewsToCreate'
    TimesheetReviewsToCreate:
      type: object
      x-internal: true
      required:
        - status
        - ids
      properties:
        status:
          type: string
          nullable: false
          enum:
            - approved
            - declined
        reason:
          type: string
          nullable: true
        ids:
          $ref: '#/components/schemas/TimesheetIdItems'
    GenericReportReviewCreatedContainer:
      type: object
      x-internal: true
      properties:
        data:
          $ref: '#/components/schemas/GenericReportReviewCreatedList'
      required:
        - data
    GenericReportReviewCreatedList:
      type: array
      x-internal: true
      items:
        $ref: '#/components/schemas/GenericReportReviewCreated'
    GenericReportReviewCreated:
      type: object
      x-internal: true
      required:
        - status
        - id
      properties:
        status:
          $ref: '#/components/schemas/InvoiceAdjustmentStatusEnum'
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
    PgoTaskReviewsByIdToCreate:
      type: object
      x-internal: true
      required:
        - status
      properties:
        status:
          description: Review status.
          type: string
          example: approved
          nullable: false
          enum:
            - approved
            - declined
        reason:
          description: Review comments.
          type: string
          example: Excited!
          nullable: true
    PgoTaskReviewsToCreate:
      type: object
      x-internal: true
      required:
        - status
        - ids
      properties:
        status:
          description: Review status.
          type: string
          nullable: false
          example: approved
          enum:
            - approved
            - declined
        reason:
          description: Additional comments with the reivew.
          type: string
          nullable: true
          example: Great work.
        ids:
          type: array
          minItems: 1
          maxItems: 1000
          example:
            - 1234
            - 1235
          items:
            description: ID of an existing timesheet record
            $ref: '#/components/schemas/UniqueObjectIdentifier'
    TimesheetReviewToCreateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/TimesheetReviewToCreate'
    TimesheetReviewToCreate:
      type: object
      x-internal: true
      required:
        - status
      properties:
        status:
          type: string
          nullable: false
          enum:
            - approved
            - declined
        reason:
          type: string
          nullable: true
    TimesheetSearchContainer:
      description: >-
        This is a model to make it easier to understand and restrict search
        parameters
      type: object
      x-internal: true
      properties:
        limit:
          description: Return a page of results with given number of records.
          type: string
          pattern: ^\d{1,5}$
          default: '10'
          maxLength: 5
          nullable: false
        offset:
          type: string
          pattern: ^\d{1,5}$
          maxLength: 5
          default: '10'
          nullable: false
        order_direction:
          $ref: '#/components/schemas/SortDirEnum'
        contract_id:
          type: string
          nullable: false
        invoice_id:
          type: string
          nullable: false
          pattern: ^\d+$
          maxLength: 10
        reporter_id:
          type: string
          nullable: false
          pattern: ^\d+$
          maxLength: 10
        contract_types:
          oneOf:
            - $ref: '#/components/schemas/ContractTypeEnumList'
            - $ref: '#/components/schemas/ContractTypeEnum'
        types:
          oneOf:
            - $ref: '#/components/schemas/TimesheetTypeEnumList'
            - $ref: '#/components/schemas/TimesheetTypeEnum'
        statuses:
          oneOf:
            - $ref: '#/components/schemas/TimesheetStatusEnumList'
            - $ref: '#/components/schemas/TimesheetStatusEnum'
        date_from:
          $ref: '#/components/schemas/DateString'
        date_to:
          $ref: '#/components/schemas/DateString'
    TimesheetAccountingRefs:
      type: array
      x-internal: true
      nullable: true
      items:
        type: object
        nullable: false
        required:
          - integration
        properties:
          integration:
            type: string
            nullable: false
          mapping_category:
            type: object
            required:
              - id
              - name
            properties:
              id:
                type: string
                nullable: false
              name:
                type: string
                nullable: false
    InvoiceAdjustmentSearchContainer:
      description: >-
        This is a model to make it easier to understand and restrict search
        parameters
      type: object
      x-internal: true
      properties:
        limit:
          description: Return a page of results with given number of records.
          type: string
          pattern: ^\d{1,5}$
          default: '10'
          maxLength: 5
          nullable: false
        offset:
          type: string
          pattern: ^\d{1,5}$
          maxLength: 5
          default: '10'
          nullable: false
        order_direction:
          $ref: '#/components/schemas/SortDirEnum'
        contract_id:
          type: string
          nullable: false
        invoice_id:
          type: string
          nullable: false
        reporter_id:
          type: string
          nullable: false
        contract_types:
          oneOf:
            - $ref: '#/components/schemas/ContractTypeEnumList'
            - $ref: '#/components/schemas/ContractTypeEnum'
        types:
          oneOf:
            - $ref: '#/components/schemas/InvoiceAdjustmentTypeEnumList'
            - $ref: '#/components/schemas/InvoiceAdjustmentTypeEnum'
        statuses:
          oneOf:
            - $ref: '#/components/schemas/InvoiceAdjustmentStatusEnumList'
            - $ref: '#/components/schemas/InvoiceAdjustmentStatusEnum'
        date_from:
          $ref: '#/components/schemas/DateString'
        date_to:
          $ref: '#/components/schemas/DateString'
    InvoiceAdjustmentListContainer:
      type: object
      x-internal: true
      properties:
        data:
          $ref: '#/components/schemas/InvoiceAdjustmentList'
        page:
          $ref: '#/components/schemas/PageInfoWithoutCursorNew'
      required:
        - data
        - page
    InvoiceAdjustmentAttachmentContainer:
      type: object
      x-internal: true
      properties:
        data:
          $ref: '#/components/schemas/AttachmentFileRef'
      required:
        - data
    InvoiceAdjustmentList:
      type: array
      x-internal: true
      items:
        $ref: '#/components/schemas/BasicInvoiceAdjustment'
    BasicInvoiceAdjustment:
      type: object
      x-internal: true
      required:
        - id
        - type
        - status
        - description
        - date_submitted
        - created_at
        - currency_code
        - quantity
        - total_amount
        - contract
        - worksheet
        - reported_by
        - reviewed_by
        - payment_cycle
        - attachment
      properties:
        description:
          type: string
          nullable: false
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
        type:
          $ref: '#/components/schemas/InvoiceAdjustmentTypeEnum'
        status:
          $ref: '#/components/schemas/InvoiceAdjustmentStatusEnum'
        date_submitted:
          $ref: '#/components/schemas/DateTimeStringRequired'
        currency_code:
          $ref: '#/components/schemas/CurrencyCodeRequired'
        invoice_id:
          type: number
          nullable: true
        quantity:
          type: number
          example: 1
          nullable: true
        total_amount:
          type: string
          example: '200.0000'
          nullable: false
        created_at:
          $ref: '#/components/schemas/DateTimeStringRequired'
        scale:
          type: string
          example: custom
          nullable: true
        custom_scale:
          type: string
          nullable: true
        attachment:
          $ref: '#/components/schemas/FileAttachmentInfo'
        worksheet:
          type: object
          nullable: true
          required:
            - weeks
            - days
            - hours
            - minutes
          properties:
            weeks:
              type: number
              example: 0
              minimum: 0
            days:
              type: number
              example: 0
              minimum: 0
            hours:
              type: number
              example: 1
              minimum: 0
            minutes:
              type: number
              example: 0
              minimum: 0
        reviewed_by:
          type: object
          nullable: true
          required:
            - id
            - full_name
            - reviewed_at
            - remarks
          properties:
            id:
              $ref: '#/components/schemas/UniqueObjectIdentifier'
            full_name:
              type: string
              example: Jane Smith
            reviewed_at:
              type: string
              example: '2022-05-04T03:45:27.899Z'
            remarks:
              type: string
              nullable: false
        contract:
          type: object
          required:
            - id
            - title
            - type
          properties:
            title:
              type: string
              nullable: false
            id:
              type: string
              nullable: false
            type:
              $ref: '#/components/schemas/ContractTypeEnum'
        payment_cycle:
          type: object
          nullable: false
          required:
            - start_date
            - end_date
          properties:
            start_date:
              $ref: '#/components/schemas/DateTimeStringRequired'
            end_date:
              $ref: '#/components/schemas/DateTimeStringRequired'
        reported_by:
          type: object
          nullable: false
          required:
            - id
            - full_name
          properties:
            id:
              $ref: '#/components/schemas/UniqueObjectIdentifier'
            full_name:
              type: string
              example: John Smith
              nullable: false
    InvoiceAdjustmentContainer:
      type: object
      x-internal: true
      properties:
        data:
          $ref: '#/components/schemas/InvoiceAdjustment'
      required:
        - data
    InvoiceAdjustment:
      x-internal: true
      allOf:
        - $ref: '#/components/schemas/BasicInvoiceAdjustment'
        - $ref: '#/components/schemas/InvoiceAdjustmentApproversContainer'
    InvoiceAdjustmentApproversContainer:
      type: object
      x-internal: true
      required:
        - approvers
      properties:
        approvers:
          $ref: '#/components/schemas/InvoiceAdjustmentApproverList'
    InvoiceAdjustmentApproverList:
      type: array
      x-internal: true
      items:
        $ref: '#/components/schemas/InvoiceAdjustmentApprover'
    InvoiceAdjustmentApprover:
      type: object
      x-internal: true
      required:
        - full_name
        - email
        - approved
      properties:
        full_name:
          type: string
        email:
          type: string
        approved:
          type: boolean
    InvoiceAdjustmentToCreateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/InvoiceAdjustmentToCreate'
    InvoiceAdjustmentToCreateWithFile:
      x-internal: true
      allOf:
        - $ref: '#/components/schemas/InvoiceAdjustmentToCreate'
        - $ref: '#/components/schemas/FileObject'
    InvoiceAdjustmentToCreate:
      description: Details of invoice adjustment to create.
      type: object
      x-internal: true
      required:
        - contract_id
        - date_submitted
        - type
        - description
        - amount
      properties:
        description:
          description: Description of the adjustment.
          type: string
          maxLength: 30000
          example: Bonus for being awesome.
        contract_id:
          description: Id of a Deel contract.
          type: string
          nullable: false
        date_submitted:
          $ref: '#/components/schemas/DateStringRequired'
        type:
          $ref: '#/components/schemas/InvoiceAdjustmentTypeToCreateEnum'
        amount:
          description: Amount to be paid. Must be a positive number.
          type: number
          nullable: false
          minimum: 0
          example: 2500
        paymentCycleId:
          description: ID of an existing active payment cycle - required if type is "vat"
          type: number
          nullable: true
    InvoiceAdjustmentCreatedContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/InvoiceAdjustmentCreated'
    InvoiceAdjustmentCreated:
      description: Details of invoice adjustment created.
      type: object
      x-internal: true
      required:
        - created
      properties:
        created:
          type: boolean
          nullable: false
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
          nullable: true
        status:
          $ref: '#/components/schemas/InvoiceAdjustmentStatusEnum'
        created_at:
          $ref: '#/components/schemas/DateTimeString'
    InvoiceAdjustmentToUpdateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/InvoiceAdjustmentToUpdate'
    InvoiceAdjustmentToUpdate:
      description: Details of invoice adjustment to update.
      type: object
      x-internal: true
      required:
        - description
      properties:
        description:
          type: string
          nullable: false
          maxLength: 30000
        amount:
          type: number
          minimum: 0
          nullable: false
    InvoiceAdjustmentReviewsToCreateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/InvoiceAdjustmentReviewsToCreate'
    InvoiceAdjustmentReviewsToCreate:
      type: object
      x-internal: true
      required:
        - status
        - ids
        - reason
      properties:
        status:
          type: string
          nullable: false
          enum:
            - approved
            - declined
        reason:
          type: string
          nullable: false
        ids:
          $ref: '#/components/schemas/TimesheetIdItems'
    TimesheetIdItems:
      type: array
      x-internal: true
      minItems: 1
      maxItems: 1000
      nullable: false
      items:
        description: ID of an existing timesheet record
        oneOf:
          - type: number
          - type: string
    InvoiceAdjustmentReviewToCreateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/InvoiceAdjustmentReviewToCreate'
    InvoiceAdjustmentReviewToCreate:
      type: object
      x-internal: true
      required:
        - status
        - reason
      properties:
        status:
          type: string
          nullable: false
          enum:
            - approved
            - declined
        reason:
          type: string
          nullable: false
    GenericResultCreated:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          type: object
          required:
            - created
          properties:
            created:
              type: boolean
    GenericResultCreatedWithId:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          type: object
          required:
            - created
          properties:
            id:
              $ref: '#/components/schemas/UniqueObjectIdentifier'
            created:
              type: boolean
    ContractExternalIdPatchedContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/ContractExternalIdToPatch'
    GenericResultUpdated:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          type: object
          required:
            - updated
          properties:
            updated:
              type: boolean
    GenericResultDeleted:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          type: object
          required:
            - deleted
          properties:
            deleted:
              description: Confirms the deletion.
              type: boolean
              nullable: false
    ContractTypeEnumList:
      description: List of contract types
      type: array
      x-internal: true
      items:
        $ref: '#/components/schemas/ContractTypeEnum'
    ContractTypeEnum:
      description: Type of a contract
      type: string
      x-internal: true
      enum:
        - ongoing_time_based
        - milestones
        - time_based
        - pay_as_you_go_time_based
        - commission
        - payg_milestones
        - payg_tasks
        - eor
        - unknown
        - employee
        - global_payroll
        - shield_msa
        - hris_direct_employee
    ContractTypeEnumForEstimate:
      description: Type of a contract
      type: string
      x-internal: true
      enum:
        - ongoing_time_based
        - payg_tasks
    AdjustmentStatusEnum:
      description: Adjustment status
      type: string
      x-internal: true
      enum:
        - open
        - pending_approval
        - overwritten
        - failed
        - success
    CandidateStatusEnum:
      description: Offer status
      type: string
      x-internal: true
      enum:
        - offer-accepted
        - offer-sent
        - offer-declined
        - offer-deleted
    ContractTypeEnumToCreate:
      description: Type of a contract
      type: string
      x-internal: true
      enum:
        - pay_as_you_go_time_based
        - payg_tasks
        - payg_milestones
    ContractStatusEnumList:
      description: List of contract statuses
      type: array
      x-internal: true
      items:
        $ref: '#/components/schemas/ContractStatusEnum'
    ContractStatusEnum:
      description: Status of a contract in Deel workflow
      type: string
      x-internal: true
      nullable: false
      enum:
        - new
        - under_review
        - waiting_for_employee_contract
        - waiting_for_client_sign
        - processing_payment
        - waiting_for_contractor_sign
        - waiting_for_eor_sign
        - waiting_for_employee_sign
        - awaiting_deposit_payment
        - in_progress
        - completed
        - cancelled
        - user_cancelled
        - rejected
        - waiting_for_client_payment
    ContractWhoReportsEnum:
      description: Flag to indicate who is supposed to provide regular reports
      type: string
      x-internal: true
      enum:
        - both
        - client
        - contractor
    ContractFirstSignEnum:
      description: Flag to indicate who is supposed to sign a contract
      type: string
      x-internal: true
      enum:
        - client
        - contractor
    ContractsSortByEnum:
      type: string
      x-internal: true
      enum:
        - contract_title
        - worker_name
    PeopleSortByEnum:
      type: string
      x-internal: true
      enum:
        - id
        - first_name
        - last_name
        - full_name
        - email
        - country
        - birth_date
        - hiring_type
        - start_date
        - team
        - job_title
        - hiring_status
        - completion_date
        - direct_manager
        - direct_reports_count
    ProfileTypeEnum:
      type: string
      x-internal: true
      enum:
        - client
        - contractor
        - icp
        - direct_employee
        - hris_direct_employee
        - service_account
    CountryListContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/CountryList'
    CountryList:
      type: array
      x-internal: true
      items:
        $ref: '#/components/schemas/Country'
    Country:
      type: object
      x-internal: true
      required:
        - code
        - name
        - visa_support
        - eor_support
        - state_type
        - states
      properties:
        code:
          $ref: '#/components/schemas/CountryCode'
        name:
          description: Country name.
          type: string
          nullable: false
          minLength: 1
          example: United States
        visa_support:
          description: >-
            Identifies if Deel provides visa support for employees being hired
            in this country.
          type: boolean
          nullable: false
        eor_support:
          description: Identifies if Deel support EoR in this country.
          type: boolean
          nullable: false
        state_type:
          description: >-
            Identifies the type of sub-territory within a country where local
            laws may apply. Some countries may have states, provinces,
            prefectures or regions.
          type: string
          nullable: true
          example: state
        states:
          type: array
          items:
            $ref: '#/components/schemas/StateOfCountry'
    StateOfCountry:
      description: >-
        It may be called states, provinces, prefectures or regions, or none at
        all
      type: object
      x-internal: true
      required:
        - code
        - name
      properties:
        code:
          description: Territory code.
          type: string
          nullable: false
          minLength: 1
          example: NY
        name:
          description: Territory name.
          type: string
          nullable: false
          minLength: 1
          example: New York
    CurrencyListContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/CurrencyList'
    CurrencyList:
      type: array
      x-internal: true
      items:
        $ref: '#/components/schemas/Currency'
    Currency:
      type: object
      x-internal: true
      required:
        - code
        - name
      properties:
        code:
          $ref: '#/components/schemas/CurrencyCodeRequired'
        name:
          type: string
          nullable: false
          minLength: 1
          example: Euro
    PaymentMethodEnumList:
      description: filter invoices by payment method
      type: array
      items:
        $ref: '#/components/schemas/PaymentMethodEnum'
    PaymentMethodEnum:
      description: All the supported payment types
      type: string
      nullable: false
      enum:
        - stripe_bacs_debit
        - pay_pal
        - stripe_card
        - bt_card
        - stripe_ach
        - coinbase
        - go_cardless
        - brex
        - stripe_sepa_debit
        - transferwise
        - go_cardless_becs
        - bank_transfer
        - mercury_wire
        - bt_pay_pal
    PaymentStatusEnumList:
      type: array
      items:
        $ref: '#/components/schemas/PaymentStatusEnum'
    PaymentStatusEnum:
      description: status of payment
      type: string
      enum:
        - paid
        - processing
    InvoiceStatusEnumList:
      description: >-
        filter invoices by current status, show a invoice if its status is in
        this list
      type: array
      items:
        $ref: '#/components/schemas/InvoiceStatusEnum'
    InvoiceStatusEnum:
      description: Current status of the invoice.
      type: string
      nullable: false
      enum:
        - pending
        - paid
        - processing
        - canceled
        - skipped
        - failed
        - refunded
      example: paid
    InvoiceTypeEnum:
      description: invoice's type
      type: string
      nullable: false
      enum:
        - PAYMENT
        - EOR_DEPOSIT
        - EOR_FIRST_PAYMENT
        - EOR_TERMINATION_OFFCYCLE
        - SIGNING_BONUS
        - REFUND_STATEMENT
        - EOR_TAX_RULING
        - GP_DEPOSIT_STATEMENT
        - GP_FUNDING_STATEMENT
        - GLOBAL_PAYROLL_FEES
        - SHIELD_DEPOSIT
        - EOR_MANAGEMENT_FEE
      example: GP_DEPOSIT_STATEMENT
    CountryCodeList:
      type: array
      x-internal: true
      items:
        $ref: '#/components/schemas/CountryCode'
    CountryCode:
      description: Country code.
      type: string
      x-internal: true
      pattern: ^[A-Z]{2}$
      minLength: 2
      maxLength: 2
      example: US
    CountryCodeNulleable:
      description: Country code.
      type: string
      x-internal: true
      pattern: ^[A-Z]{2}$
      nullable: true
      minLength: 2
      maxLength: 2
      example: US
    CurrencyCodeList:
      type: array
      x-internal: true
      items:
        $ref: '#/components/schemas/CurrencyCodeRequired'
    CurrencyCodeRequired:
      type: string
      x-internal: true
      pattern: ^[A-Z]{3}$
      minLength: 3
      maxLength: 3
      example: GBP
    CurrencyCode:
      description: Currency code.
      type: string
      x-internal: true
      pattern: ^[A-Z]{3}$
      nullable: false
      minLength: 3
      maxLength: 3
      example: GBP
    LegalEntityArray:
      type: array
      items:
        $ref: '#/components/schemas/LegalEntityType'
    LegalEntityType:
      type: string
      x-internal: true
      enum:
        - individual
        - company
    LegalEntitySubType:
      type: string
      x-internal: true
    JobTitleListContainer:
      type: object
      x-internal: true
      required:
        - data
        - page
      properties:
        data:
          $ref: '#/components/schemas/JobTitleList'
        page:
          type: object
          required:
            - cursor
          properties:
            cursor:
              description: >-
                Use for pagination to get next set of records after the given
                cursor.
              type: string
              example: eyJvZmZzZXQiOjEwMCwibGltaXQiOjEwMCwiZmlsdGVyVHlwZSI6ImFsbCJ9
    JobTitleList:
      type: array
      x-internal: true
      items:
        $ref: '#/components/schemas/JobTitle'
    JobTitle:
      type: object
      x-internal: true
      required:
        - id
        - name
      properties:
        id:
          description: Unique identifier for the job title in Deel platform.
          $ref: '#/components/schemas/UniqueObjectIdentifier'
        name:
          description: Job title.
          type: string
          nullable: false
          example: 3D Artist
    SeniorityListContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/SeniorityList'
    SeniorityList:
      type: array
      x-internal: true
      items:
        $ref: '#/components/schemas/SeniorityRequired'
    SeniorityRequired:
      description: Seniority describes level of expertise at a job e.g. junior
      type: object
      x-internal: true
      required:
        - id
        - name
        - level
      properties:
        id:
          description: Unique identifier for seniority record.
          $ref: '#/components/schemas/UniqueObjectIdentifier'
        name:
          description: Name of seniority level e.g. Mid (Individual Contributor Level 2)
          type: string
          nullable: false
          minLength: 1
          example: Mid (Individual Contributor Level 2)
        level:
          description: Level of seniority level e.g. 2
          type: number
          nullable: false
          example: 2
    Seniority:
      description: Seniority describes level of expertise at a job e.g. junior
      type: object
      x-internal: true
      nullable: true
      required:
        - id
        - name
      properties:
        id:
          description: Unique identifier for seniority record
          $ref: '#/components/schemas/UniqueObjectIdentifier'
        name:
          description: Name of seniority level e.g. Mid (Individual Contributor Level 2)
          type: string
          nullable: false
          minLength: 1
          example: Mid (Individual Contributor Level 2)
        level:
          description: Level of seniority level e.g. 2
          type: number
          nullable: true
          example: 2
    TimesheetTypeEnumList:
      type: array
      x-internal: true
      items:
        $ref: '#/components/schemas/TimesheetTypeEnum'
    TimesheetTypeEnum:
      description: Type for timesheet
      type: string
      x-internal: true
      enum:
        - work
    OffCyclePaymentTypeEnum:
      description: Type for Off-cycle payments
      type: string
      x-internal: true
      enum:
        - offcycle
    TimesheetStatusEnumList:
      type: array
      x-internal: true
      items:
        $ref: '#/components/schemas/TimesheetStatusEnum'
    TimesheetStatusEnum:
      description: Status of this entry.
      type: string
      nullable: true
      x-internal: true
      example: approved
      enum:
        - approved
        - declined
        - not_payable
        - paid
        - pending
        - processing
        - null
    InvoiceAdjustmentTypeEnumList:
      type: array
      x-internal: true
      items:
        $ref: '#/components/schemas/InvoiceAdjustmentTypeEnum'
    InvoiceAdjustmentTypeEnum:
      description: Type of invoice adjustment.
      type: string
      x-internal: true
      enum:
        - accrued_holiday
        - additional_fee
        - allowance
        - bonus
        - commission
        - deduction
        - deposit
        - deposit_refund
        - employer_cost
        - expense
        - health_allowance
        - health_benefit
        - health_insurance_fee
        - legal_fee
        - management_fee
        - milestone
        - offcycle
        - other
        - overtime
        - pension
        - pro_rata
        - setup_fee
        - severance
        - shield_service
        - signing_bonus
        - signing_bonus_employer_cost
        - refund
        - task
        - time_off
        - vat
        - withholding_tax
        - work
    InvoiceAdjustmentTypeToCreateEnum:
      description: Type of invoice adjustment.
      type: string
      x-internal: true
      enum:
        - bonus
        - commission
        - deduction
        - expense
        - other
        - overtime
        - time_off
        - vat
    InvoiceAdjustmentStatusEnumList:
      type: array
      x-internal: true
      items:
        $ref: '#/components/schemas/InvoiceAdjustmentStatusEnum'
    InvoiceAdjustmentStatusEnum:
      description: status of invoice adjustment
      type: string
      nullable: true
      x-internal: true
      enum:
        - approved
        - declined
        - not_payable
        - paid
        - pending
        - processing
        - null
    SortDirEnum:
      type: string
      x-internal: true
      enum:
        - asc
        - desc
    HiringStatusEnum:
      type: string
      x-internal: true
      enum:
        - active
        - inactive
        - onboarding
    EmailTypeRequired:
      description: Worker's email address.
      type: string
      x-internal: true
      format: email
      minLength: 5
    WorkerEmailType:
      description: Worker's email address.
      type: string
      x-internal: true
      format: email
      minLength: 5
      nullable: true
    EmailType:
      description: User's email address.
      type: string
      x-internal: true
      format: email
      minLength: 5
      nullable: true
    NationalityType:
      type: string
      x-internal: true
      minLength: 2
      maxLength: 2
      example: US
    UrlTypeRequired:
      type: string
      x-internal: true
      format: uri
      nullable: false
      minLength: 5
    UrlType:
      type: string
      x-internal: true
      format: uri
      nullable: true
      minLength: 5
    PageInfo:
      type: object
      x-internal: true
      required:
        - cursor
        - total_rows
      properties:
        cursor:
          type: string
          nullable: false
        total_rows:
          type: number
          nullable: false
    PageInfoWithoutCursor:
      type: object
      x-internal: true
      required:
        - total_rows
      properties:
        total_rows:
          type: number
          nullable: false
    PageInfoWithoutCursorNew:
      type: object
      x-internal: true
      required:
        - total_rows
        - items_per_page
        - offset
      properties:
        total_rows:
          type: number
          nullable: false
        items_per_page:
          type: number
          nullable: false
          minimum: 1
          maximum: 99
        offset:
          type: number
          nullable: false
          minimum: 0
          maximum: 999999999
    PageInfoWithCursorNew:
      type: object
      x-internal: true
      required:
        - total_rows
        - items_per_page
        - offset
      properties:
        total_rows:
          type: number
          nullable: false
        items_per_page:
          type: number
          nullable: false
          minimum: 1
          maximum: 99
        offset:
          type: number
          nullable: false
          minimum: 0
          maximum: 999999999
        cursor:
          description: >-
            Use for pagination to get next set of records after the given
            cursor.
          type: string
          example: eyJvZmZzZXQiOjEwMCwibGltaXQiOjEwMCwiZmlsdGVyVHlwZSI6ImFsbCJ9
    MilestoneContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/Milestone'
    MilestoneToCreateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/MilestoneProperties'
    MilestoneToCreateFormWithFile:
      x-internal: true
      allOf:
        - $ref: '#/components/schemas/MilestoneProperties'
        - $ref: '#/components/schemas/FileObject'
    MilestoneProperties:
      type: object
      x-internal: true
      nullable: false
      required:
        - amount
        - title
        - description
      properties:
        title:
          description: Title of milestone.
          type: string
          nullable: false
          example: Sprint 2
        description:
          description: Description of milestone.
          type: string
          nullable: false
          example: 'Sprint #2'
        amount:
          description: Amount to be paid for the milestone.
          type: string
          nullable: false
          example: '900.00'
    MilestoneListContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/MilestoneList'
    MilestoneList:
      type: array
      x-internal: true
      items:
        $ref: '#/components/schemas/Milestone'
    Milestone:
      type: object
      x-internal: true
      nullable: false
      required:
        - amount
        - approval_requested
        - reviewed_by
        - reported_by
        - id
        - title
        - description
        - status
        - created_at
      properties:
        title:
          description: Title of milestone.
          type: string
          nullable: false
          example: Sprint 1
        description:
          description: Description of milestone.
          type: string
          nullable: false
          example: 'Sprint #1'
        id:
          description: Unique identifier for the milestone.
          $ref: '#/components/schemas/UniqueObjectIdentifier'
        amount:
          description: Amount to be paid for the milestone.
          type: string
          example: '900.00'
        approval_requested:
          description: >-
            Indicates if the contractor has requested the approval for the
            milestone.
          type: boolean
          example: false
        reviewed_by:
          description: Reviewer's information.
          type: object
          nullable: true
          required:
            - id
            - full_name
          properties:
            id:
              description: Reviewer's unique Deel id.
              $ref: '#/components/schemas/UniqueObjectIdentifier'
            full_name:
              description: Reviewer's full name.
              type: string
              nullable: false
              example: Jane Doe
        reported_by:
          description: Milestone creator.
          type: object
          nullable: false
          required:
            - id
            - full_name
          properties:
            id:
              description: Reporter's unique Deel id.
              $ref: '#/components/schemas/UniqueObjectIdentifier'
            full_name:
              description: Reporter's full name.
              type: string
              nullable: false
              example: Jane Doe
        status:
          description: Current status of milestone.
          type: string
          nullable: false
          example: pending
        created_at:
          $ref: '#/components/schemas/DateTimeString'
    MilestoneReviewsToCreateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/MilestoneReviewsToCreate'
    MilestoneReviewsToCreate:
      type: object
      x-internal: true
      required:
        - status
        - ids
      properties:
        status:
          type: string
          nullable: false
          enum:
            - approved
            - declined
        reason:
          type: string
          nullable: true
        ids:
          type: array
          minItems: 1
          maxItems: 1000
          items:
            description: ID of an existing milestone record
            type: number
            nullable: false
    MilestoneReviewToCreateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/MilestoneReviewToCreate'
    MilestoneReviewToCreate:
      type: object
      x-internal: true
      required:
        - status
      properties:
        status:
          type: string
          nullable: false
          enum:
            - approved
            - declined
        reason:
          type: string
          nullable: true
    OffCyclePaymentContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/OffCyclePayment'
    OffCyclePaymentToCreateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/OffCyclePaymentToCreate'
    EstimateFirstPaymentContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/EstimateFirstPayment'
    OffCyclePaymentToCreate:
      description: Details of invoice adjustment to create.
      type: object
      x-internal: true
      nullable: false
      required:
        - date_submitted
        - amount
      properties:
        description:
          description: Description of off-cycle payment.
          type: string
          nullable: false
        date_submitted:
          $ref: '#/components/schemas/DateStringRequired'
        amount:
          description: Amount to be paid. Must be a positive number.
          type: number
          nullable: false
          minimum: 0
          example: 2500
    EstimateFirstPayment:
      description: Details of pro rata payment to create.
      type: object
      x-internal: true
      nullable: false
      required:
        - start_date
        - country_code
        - type
        - compensation_details
      properties:
        type:
          $ref: '#/components/schemas/ContractTypeEnumForEstimate'
        country_code:
          $ref: '#/components/schemas/CountryCode'
        start_date:
          $ref: '#/components/schemas/DateStringRequired'
        compensation_details:
          type: object
          properties:
            amount:
              description: Amount to be paid. Must be a positive number.
              type: number
              nullable: false
              minimum: 0
              example: 2500
            currency_code:
              $ref: '#/components/schemas/CurrencyCodeRequired'
            scale:
              $ref: '#/components/schemas/WorkStatementCycleScaleEnum'
            cycle_end:
              description: Date invoice cycle ends.
              type: number
              minimum: 1
              maximum: 31
            cycle_end_type:
              $ref: '#/components/schemas/WorkStatementCycleEndTypeEnum'
            payment_due_type:
              $ref: '#/components/schemas/WorkStatementPaymentDueTypeEnum'
            payment_due_days:
              type: number
              minimum: 0
              maximum: 90
              nullable: false
            calculation_type:
              description: Either works days or calendar days
              type: string
              enum:
                - CUSTOM_AMOUNT
                - WORK_DAYS
                - CALENDAR_DAYS
                - FULL_AMOUNT
              nullable: false
            work_week_start:
              $ref: '#/components/schemas/WeekDaysEnum'
            work_week_end:
              $ref: '#/components/schemas/WeekDaysEnum'
    ProRata:
      description: Details of the pro rata for the first payment
      type: object
      x-internal: true
      nullable: false
      properties:
        calculation_type:
          description: Either works days or calendar days
          type: string
          enum:
            - CUSTOM_AMOUNT
            - WORK_DAYS
            - CALENDAR_DAYS
            - FULL_AMOUNT
          nullable: false
        rate:
          description: Rate to be paid.
          type: number
          nullable: false
          minimum: 0
          example: 2500
        daily_rate:
          description: Daily rate to be paid.
          type: number
          nullable: false
          minimum: 0
          example: 2500
        total:
          description: Total to be paid.
          type: number
          nullable: false
          minimum: 0
          example: 2500
        cycle_work_days:
          description: Total days to be work.
          type: number
          nullable: false
          minimum: 0
          example: 11
        work_week_start:
          $ref: '#/components/schemas/WeekDaysEnum'
        work_week_end:
          $ref: '#/components/schemas/WeekDaysEnum'
        cycle_start:
          $ref: '#/components/schemas/DateStringRequired'
        cycle_end:
          $ref: '#/components/schemas/DateStringRequired'
    FirstPaymentDate:
      description: First payment date
      type: object
      x-internal: true
      nullable: false
      properties:
        due:
          $ref: '#/components/schemas/DateStringRequired'
    OffCyclePaymentListContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/OffCyclePaymentList'
    OffCyclePaymentList:
      type: array
      x-internal: true
      items:
        $ref: '#/components/schemas/OffCyclePayment'
    OffCyclePayment:
      type: object
      x-internal: true
      nullable: false
      required:
        - id
        - status
        - description
        - date_submitted
        - created_at
        - currency_code
        - amount
        - reported_by
      properties:
        description:
          description: Description of the off-cycle payment entry.
          type: string
          nullable: false
          example: Yearly bonus.
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
        status:
          $ref: '#/components/schemas/InvoiceAdjustmentStatusEnum'
        date_submitted:
          $ref: '#/components/schemas/DateTimeStringRequired'
        currency_code:
          $ref: '#/components/schemas/CurrencyCodeRequired'
        amount:
          description: Amount of off-cycle payment.
          type: string
          example: '200.00'
          nullable: false
        created_at:
          $ref: '#/components/schemas/DateTimeStringRequired'
        reported_by:
          type: object
          nullable: false
          required:
            - id
            - full_name
          properties:
            id:
              description: Profile id of the creator.
              $ref: '#/components/schemas/UniqueObjectIdentifier'
            full_name:
              description: Full name of the creator.
              type: string
              example: John Smith
              nullable: false
    Payslips:
      type: object
      x-internal: true
      required:
        - id
        - from
        - to
        - status
      properties:
        id:
          description: Unique identifier for the payslip.
          type: string
          example: 9K1rw5vwkZX2
        from:
          description: Start date of the payslip.
          format: date-time
          example: '2023-08-01T00:00:00.000Z'
        to:
          description: End date of the payslip.
          format: date-time
          example: '2023-08-31T00:00:00.000Z'
        status:
          description: Status of the payslip.
          type: string
          example: PUBLISHED
    BankAccountGuide:
      type: object
      x-internal: true
      required:
        - key
        - required
      properties:
        key:
          description: The key of the field.
          type: string
          example: countryCode
        label:
          description: Label for this field.
          type: string
          example: Country
        required:
          description: Whether the field is required or not.
          type: boolean
          example: true
        values_allowed:
          type: array
          items:
            $ref: '#/components/schemas/BankAccountValueAllowed'
        validations:
          type: array
          items:
            $ref: '#/components/schemas/ValidationType'
        type:
          description: Type of the field
          type: string
          example: text
    EmployeePayslipsList:
      type: object
      x-internal: true
      required:
        - id
        - from
        - to
        - filename
        - status
        - rejected_at
        - reject_reason
        - uploaded_at
        - published_at
        - schedule_publishing_date
        - created_at
        - updated_at
        - url
      properties:
        id:
          type: string
          example: 9K1rw5vwkZX2
        from:
          type: string
          format: date-time
          example: '2023-08-01T00:00:00.000Z'
        to:
          type: string
          format: date-time
          example: '2023-08-31T00:00:00.000Z'
        filename:
          type: string
          example: payslip_demo.pdf
        status:
          type: string
          example: PUBLISHED
        rejected_at:
          type: string
          format: date-time
          example: '2023-08-29T00:00:00.000Z'
        reject_reason:
          type: string
          example: Something wrong
        uploaded_at:
          type: string
          format: date-time
          example: '2023-09-08T08:44:20.464Z'
        published_at:
          type: string
          format: date-time
          example: '2023-09-08T08:44:20.289Z'
        schedule_publishing_date:
          type: string
          format: date-time
          example: '2023-09-08T08:44:20.289Z'
        created_at:
          type: string
          format: date-time
          example: '2023-09-08T08:44:20.289Z'
        updated_at:
          type: string
          format: date-time
          example: '2023-09-08T08:44:20.289Z'
        url:
          type: string
          example: http://example.com/file.pdf
    EmployeeTaxDocumentsList:
      type: object
      x-internal: true
      properties:
        year:
          type: number
          example: 2023
        type:
          type: string
          example: Tax Document
        country:
          type: string
          example: IL
        id:
          type: string
          example: 9AmobdjMwXOq
        url:
          type: string
          example: https://example.com/file.pdf
    ValidationType:
      type: object
      x-internal: true
      properties:
        type:
          description: Validation type.
          $ref: '#/components/schemas/ValidationTypeEnum'
        value:
          description: Validation value.
          oneOf:
            - type: string
            - type: number
          example: 2
    ValidationTypeEnum:
      type: string
      enum:
        - MIN_LENGTH
        - MAX_LENGTH
        - REGEXP
    BankAccountValueAllowed:
      x-internal: true
      type: object
      properties:
        value:
          description: The key of the allowed value.
          type: string
          example: AR
        label:
          description: The name of the allowed value.
          type: string
          example: Argentina
    FileAttachmentInfo:
      description: This object is used for linking file attachments to your records.
      type: object
      nullable: true
      required:
        - filename
        - key
      x-internal: true
      properties:
        filename:
          description: Original filename you used to upload using attachments end-point.
          type: string
          nullable: false
        key:
          description: >-
            You can call attachments end-point, get key and URL to upload your
            file.
          type: string
          nullable: false
    FileObject:
      description: This is the file you will upload in a multi-part form.
      type: object
      x-internal: true
      properties:
        file:
          description: Upload the file you want to attach to this entry.
          type: string
          nullable: false
          format: binary
    FileRefTypeEnum:
      description: type of files allowed when uploading attachments
      type: string
      nullable: false
      minLength: 5
      x-internal: true
      enum:
        - application/pdf
        - text/csv
        - text/plain
        - image/jpeg
        - image/png
    InputToCreateFileRef:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          type: object
          required:
            - content_type
          properties:
            content_type:
              $ref: '#/components/schemas/FileRefTypeEnum'
    OutputToCreateFileRef:
      type: object
      required:
        - key
        - url
      x-internal: true
      properties:
        key:
          type: string
          nullable: false
        url:
          type: string
          nullable: false
    AttachmentFileRef:
      type: object
      required:
        - url
      x-internal: true
      properties:
        url:
          description: File URL to download the attachment.
          type: string
          nullable: false
    OutputToCreateFileRefContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/OutputToCreateFileRef'
    InputToPatchContractExternalId:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/ContractExternalIdToPatch'
    InputToCreatePgoTask:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/PgoTaskToCreate'
    InputToDeletePgoTask:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/PgoTaskToDelete'
    ContractExternalIdToPatch:
      type: object
      required:
        - external_id
      properties:
        external_id:
          description: A unique identifier for the object provided by an external system.
          type: string
          nullable: false
    PgoTaskToCreate:
      type: object
      x-internal: true
      required:
        - amount
        - date_submitted
        - description
      properties:
        description:
          description: Task description.
          type: string
          nullable: true
          example: Make the button pop.
        amount:
          description: Fixed rate for this task.
          type: string
          nullable: false
          minLength: 1
          example: '123.45'
        date_submitted:
          $ref: '#/components/schemas/DateStringRequired'
        attachment:
          $ref: '#/components/schemas/FileAttachmentInfo'
    PgoTask:
      type: object
      x-internal: true
      required:
        - id
        - amount
        - date_submitted
        - description
        - status
      properties:
        description:
          description: Task description.
          type: string
          nullable: false
          example: Make the button pop.
        id:
          description: Unique identifier of the task.
          $ref: '#/components/schemas/UniqueObjectIdentifier'
        amount:
          description: Fixed rate for this task.
          type: string
          nullable: false
          example: '200'
        date_submitted:
          $ref: '#/components/schemas/DateStringRequired'
        status:
          $ref: '#/components/schemas/TimesheetStatusEnum'
        attachment:
          $ref: '#/components/schemas/FileAttachmentInfo'
    PgoTaskToDelete:
      type: object
      x-internal: true
      properties:
        description:
          description: Description of exclusion.
          type: string
          nullable: true
        delete_recurring_report:
          description: Request to delete recurring report.
          type: boolean
          nullable: true
    TaskListContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/TaskList'
    TaskList:
      type: array
      x-internal: true
      items:
        $ref: '#/components/schemas/PgoTask'
    TaskCreatedContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/TaskCreated'
    TaskCreated:
      type: object
      x-internal: true
      properties:
        created:
          description: Whether the creation operation was successful.
          type: boolean
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
        status:
          $ref: '#/components/schemas/TimesheetStatusEnum'
    AgreementsSearchForm:
      description: >-
        Convenient model to encapsulate query parameters to get a list of
        agreements.
      type: object
      x-internal: true
      properties:
        contract_id:
          type: string
          nullable: false
        limit:
          $ref: '#/components/schemas/AgreementsParamLimit'
        offset:
          $ref: '#/components/schemas/AgreementsParamOffset'
    AgreementsParamLimit:
      description: >-
        Maximum number of records to return. This is supposed to be an integer
        but query parameters are string. Maximum is 50.
      type: string
      x-internal: true
      default: '50'
    AgreementsParamOffset:
      description: >-
        Offset/index of record for the next page of records to return. This is
        supposed to be an integer but query parameters are string.
      type: string
      x-internal: true
      default: '0'
    AgreementListContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/AgreementList'
        page:
          $ref: '#/components/schemas/PageInfoWithoutCursor'
    AgreementList:
      type: array
      x-internal: true
      items:
        $ref: '#/components/schemas/Agreement'
    Agreement:
      type: object
      x-internal: true
      required:
        - id
        - agreement_title
        - agreement_type
        - msa
        - client_legal_entity
        - provider_legal_entity
      properties:
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
          nullable: false
        agreement_title:
          type: string
          nullable: false
        agreement_type:
          type: string
          nullable: false
          example: shield
        msa:
          type: object
          required:
            - id
            - title
          properties:
            title:
              type: string
              nullable: false
            id:
              type: string
              nullable: false
        client_legal_entity:
          type: object
          required:
            - id
            - name
          properties:
            id:
              $ref: '#/components/schemas/UniqueObjectIdentifier'
              nullable: false
            name:
              type: string
              nullable: false
        provider_legal_entity:
          type: object
          required:
            - id
            - name
          properties:
            id:
              $ref: '#/components/schemas/UniqueObjectIdentifier'
              nullable: false
            name:
              type: string
              nullable: false
              example: Deel Inc.
    InputToShieldContract:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          type: object
          x-internal: false
          nullable: false
          required:
            - agreement_id
          properties:
            agreement_id:
              description: MSA contract id (agreement).
              type: number
              nullable: false
    PremiumToAddContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/PremiumToAdd'
    PremiumToAdd:
      type: object
      x-internal: true
      nullable: false
      required:
        - agreement_reflects_relation
        - contractor_characteristics
      properties:
        agreement_reflects_relation:
          description: >-
            Is the Contractor Agreement selected on the Deel Platform perfectly
            reflecting your organizations relation and actual working practices
            with the contractor?
          type: boolean
          enum:
            - true
            - false
          nullable: false
          example: true
        contractor_characteristics:
          description: >-
            Workers doing certain jobs may be considered to be employees by law,
            even if they would otherwise be considered independent contractors
            under common law. Is the work of this worker characterized as:
            Apprentice, Trainee, Labourer, Driver, Medical worker, Legal worker,
            Construction worker or someone working in the fields of
            Finance/Investment?
          type: boolean
          enum:
            - true
            - false
          nullable: false
          example: false
    PremiumResultAddedContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/PremiumResultAdded'
    EorEntitlementsContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/EorEntitlements'
    EorTimeoffsContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/EorTimeoffs'
    EorTimeoffsItemContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/EorTimeoffsBaseItem'
    EorClientTimeoffsContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/EorClientTimeoffs'
    EmployeeTimeoffsContainer:
      type: object
      x-internal: true
      properties:
        data:
          description: List of employee time offs.
          type: array
          items:
            $ref: '#/components/schemas/EmployeeTimeoffsItem'
    EmployeeTimeoffsCreationContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/EmployeeTimeoffsItemResponse'
    EmployeeTimeoffsEntitlementsContainer:
      type: object
      required:
        - data
      x-internal: true
      properties:
        data:
          description: List of employee time offs entitlements.
          type: array
          items:
            $ref: '#/components/schemas/EmployeeTimeoffsEntitlementsItem'
    EmployeeTimeoffsPoliciesContainer:
      type: object
      required:
        - data
      x-internal: true
      properties:
        data:
          description: List of employee time offs policies.
          type: array
          items:
            $ref: '#/components/schemas/EmployeeTimeoffsPoliciesItem'
    EmployeeTimeoffsPoliciesItem:
      type: object
      required:
        - id
        - type
        - name
        - description
        - unit_amount
        - used
        - tracking_start_date
        - tracking_end_date
        - entitlement
      properties:
        description:
          description: Description of the time off policy.
          type: string
          example: Vacation policy
        id:
          description: Unique identifier for the time off policy.
          type: string
          example: 9K1rw5vwkZX2
        type:
          description: Type of time off policy.
          type: string
          example: VACATION
        name:
          description: Name of the time off policy.
          type: string
          example: Vacation
        unit_amount:
          description: Unit amount of the time off policy.
          type: number
          example: 20
        used:
          description: Used time off policy.
          type: number
          nullable: true
          example: 10
        tracking_start_date:
          description: Start date of the time off policy.
          format: date-time
          nullable: true
          example: '2023-08-01T00:00:00.000Z'
        tracking_end_date:
          description: End date of the time off policy.
          nullable: true
          format: date-time
          example: '2023-08-31T00:00:00.000Z'
        entitlement:
          type: object
          properties:
            accrual_amount:
              description: Accrual amount of the time off policy.
              nullable: true
              type: string
              example: 0
            accrual_unit:
              description: Accrual unit of the time off policy.
              nullable: true
              type: string
              example: BUSINESS_DAY
            total:
              description: Total time off policy.
              nullable: true
              example: 20
            unit_amount:
              description: Unit amount of the time off policy.
              nullable: true
              example: 20
            unit:
              description: Unit of the time off policy.
              nullable: true
              type: string
              example: CALENDAR_DAY
            accrued:
              description: Accrued time off policy.
              nullable: true
              type: string
              example: '2.55'
    EmployeeTimeoffsEntitlementsItem:
      type: object
      required:
        - year
        - tracking_period
        - vacation_allowed
        - vacation_rollover
        - vacation_expired
        - vacation_payout
        - vacation_requested
        - vacation_approved
        - vacation_used
        - vacation_total
        - sick_leave_requested
        - sick_leave_approved
        - sick_leave_used
        - sick_leave_total
        - sick_leave_allowed
        - other_leave_requested
        - other_leave_approved
        - other_leave_used
        - other_leave_total
      properties:
        year:
          type: number
          example: 2023
        tracking_period:
          type: string
          example: '2023-01-01T00:00:00.000Z'
        vacation_allowed:
          type: string
          example: '0.00'
        vacation_rollover:
          type: string
          example: '0.00'
        vacation_expired:
          type: string
          example: '0.00'
        vacation_payout:
          type: string
          example: '0.00'
        vacation_requested:
          type: string
          example: '0.00'
        vacation_approved:
          type: string
          example: '0.00'
        vacation_used:
          type: string
          example: '7.00'
        vacation_total:
          type: string
          example: '7.00'
        sick_leave_requested:
          type: string
          example: '0.00'
        sick_leave_approved:
          type: string
          example: '0.00'
        sick_leave_used:
          type: string
          example: '0.00'
        sick_leave_total:
          type: string
          example: '0.00'
        sick_leave_allowed:
          type: string
          example: '395.00'
        other_leave_requested:
          type: string
          example: '0.00'
        other_leave_approved:
          type: string
          example: '0.00'
        other_leave_used:
          type: string
          example: '0.00'
        other_leave_total:
          type: string
          example: '0.00'
    FinalPaymentCalculatedContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/FinalPaymentCalculated'
    FinalPaymentCalculated:
      type: object
      x-internal: true
      required:
        - daily_rate
        - total
        - remaining_days
        - last_cycle
        - calculation_type
        - workweek_start
        - workweek_end
      properties:
        daily_rate:
          description: The daily rate paid.
          type: string
          nullable: false
          example: '5.8571'
        total:
          description: Total amount to pay.
          type: string
          nullable: false
          example: '5.8571'
        remaining_days:
          description: Dais remaining to end the contract.
          type: string
          nullable: false
          example: '5.8571'
        last_cycle:
          description: The last payment cycle.
          properties:
            start:
              $ref: '#/components/schemas/DateTimeStringRequired'
            end:
              $ref: '#/components/schemas/DateTimeStringRequired'
            completion_date:
              $ref: '#/components/schemas/DateTimeStringRequired'
        calculation_type:
          description: Either works days or calendar days
          type: string
          enum:
            - CUSTOM_AMOUNT
            - WORK_DAYS
            - CALENDAR_DAYS
            - FULL_AMOUNT
          nullable: false
        workweek_start:
          description: The day the work week starts, 0 to 6
          type: number
          default: 1
          nullable: false
        workweek_end:
          description: The day the work week starts, 0 to 6
          type: number
          default: 5
          nullable: false
    PremiumResultAdded:
      type: object
      x-internal: true
      required:
        - id
        - calculated_premium
        - misclassification_guarantee
        - penalties
        - third_party_liabilities
      properties:
        id:
          description: Deel Premium plan id.
          type: string
          nullable: false
          example: d3f79ad9-b0b5-4e0d-af2e-ad84435c0acb
        calculated_premium:
          description: Cost for Deel Premium.
          type: number
          nullable: false
          example: 50
        misclassification_guarantee:
          type: object
          nullable: false
          properties:
            description:
              description: Cover your legal defense costs.
              type: string
              nullable: false
            name:
              description: Legal costs.
              type: string
              nullable: false
        penalties:
          type: object
          nullable: false
          properties:
            description:
              description: >-
                Get indemnity against tax authority penalties, liabilities and
                fines.
              type: string
              nullable: false
            name:
              description: Penalties.
              type: string
              nullable: false
        third_party_liabilities:
          type: object
          nullable: false
          properties:
            description:
              description: >-
                Get indemnity against third parties up to $10k depending on the
                court's decision.
              type: string
              nullable: false
            name:
              description: Third-party liabilities.
              type: string
              nullable: false
    EorEntitlements:
      description: Time-off Entitlements for EOR contracts.
      type: object
      required:
        - entitlements
      properties:
        entitlements:
          description: List of entitlements.
          type: array
          items:
            $ref: '#/components/schemas/EorEntitlementListItem'
    EorEntitlementListItem:
      description: Entitlement Item for a given year.
      type: object
      properties:
        year:
          type: number
          example: 2022
        vacation_allowed:
          description: Minimum vacation allowed.
          type: string
          example: '16'
        sick_leave_allowed:
          description: Maximum sick leave allowed.
          type: string
          example: '16'
        vacation_requested:
          description: Vacation days requested by the employee.
          type: string
          example: '5'
        vacation_approved:
          description: Vacation days approved.
          type: string
          example: '5'
        vacation_used:
          description: Vacation days used by the employee.
          type: string
          example: '5'
        vacation_total:
          description: Total number of vacation days requested, approved and used.
          type: string
          example: '5'
        sick_leave_requested:
          description: Sick days requested by the employee.
          type: string
          example: '5'
        sick_leave_approved:
          description: Sick days approved.
          type: string
          example: '5'
        sick_leave_used:
          description: Sick days used by the employee.
          type: string
          example: '5'
        sick_leave_total:
          description: Total number of sick days requested, approved and used.
          type: string
          example: '5'
        other_leave_requested:
          description: Other type of time off requested by the employee.
          type: string
          example: '5'
        other_leave_approved:
          description: Other type of time off days approved.
          type: string
          example: '5'
        other_leave_used:
          description: Other type of time off days used by the employee.
          type: string
          example: '5'
        other_leave_total:
          description: >-
            Total number of other type of time off days requested, approved and
            used.
          type: string
          example: '5'
        rollover_type:
          $ref: '#/components/schemas/EorHolidaysRolloverType'
        max_rollover_yearly:
          type: string
          format: nullable
          example: '3'
      x-konfig-properties:
        rollover_type:
          example: EXPIRATION
    EorHolidaysRolloverType:
      type: string
      enum:
        - EXPIRATION
        - PAY_OUT
        - UNLIMITED_ROLLOVER
        - LIMITED_ROLLOVER
        - UNSET
    ContractToTerminateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/ContractToTerminate'
    ContractToTerminate:
      type: object
      x-internal: true
      properties:
        completion_date:
          $ref: '#/components/schemas/DateString'
        terminate_now:
          type: boolean
        message:
          description: A message for the termination
          type: string
          nullable: false
    ContractTerminationResultContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/ContractTerminationResult'
    ContractTerminationResult:
      type: object
      x-internal: true
      properties:
        id:
          description: Deel Contract ID.
          type: string
          nullable: false
        completion_date:
          $ref: '#/components/schemas/DateString'
      x-konfig-properties:
        completion_date:
          description: Date the contract is marked for completion
    ContractTemplateListContainer:
      type: object
      x-internal: true
      properties:
        data:
          $ref: '#/components/schemas/ContractTemplateList'
    ContractTemplateList:
      type: array
      x-internal: true
      items:
        $ref: '#/components/schemas/ContractTemplateSummary'
    ContractTemplateSummary:
      type: object
      x-internal: true
      required:
        - id
        - title
      properties:
        title:
          description: Title of a contract template
          type: string
          nullable: false
          example: UK Employment Contract 2022.
        id:
          description: Unique identifier of a contract template
          $ref: '#/components/schemas/UniqueObjectIdentifier'
    ContractTemplate:
      description: Contract template details.
      type: object
      nullable: true
      x-internal: true
      properties:
        title:
          description: Title of a contract template
          type: string
          example: UK Employment Contract 2022.
        id:
          description: Unique identifier of a contract template
          $ref: '#/components/schemas/UniqueObjectIdentifier'
    NoticePeriod:
      description: Days before to notice the termination of contract for eather party.
      type: number
      default: 0
      minimum: 0
      example: 15
    PeopleCustomField:
      description: Customized attributes on people (Job title, Project code, etc).
      type: object
      properties:
        name:
          description: Custom field property name.
          type: string
          nullable: false
          example: Job title
        value:
          description: Custom field property value.
          type: string
          nullable: false
          example: Software Engineer II
    ContractCustomField:
      description: Customized attributes on contracts (Employee ID, Project code, etc).
      type: object
      properties:
        name:
          description: Custom field property name.
          type: string
          nullable: false
          example: Employee ID
        value:
          description: Custom field property value.
          type: string
          nullable: false
          example: '54234'
    EorCountryValidationsContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/EorCountryValidations'
    GPContractToCreateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/GPContractToCreate'
    GPEmployeePTOToUpdateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/GPEmployeePTOUpdateData'
    GPEmployeeInformationToUpdateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/GPEmployeeInformationUpdateData'
    GPEmployeeInformationUpdatedContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/GPEmployeeInformationUpdateData'
    GPPayslipDownloadUrlContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/PayslipDownloadUrl'
    GPPayrollEventReportContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/GPPayrollEventReports'
    GlobalPayrollG2NReportContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/GlobalPayrollG2NReport'
    EORPayslipDownloadUrlContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/PayslipDownloadUrl'
    EORContractBenefitsContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/EORContractBenefits'
    GPContractCreatedContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/GPContractCreated'
    EorContractToCreateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/EorContractToCreate'
    EorEmployeeCostCalculationRequestBodyContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/EorEmployeeCostCalculationRequestBody'
    EorContractCreatedContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/EorContractCreated'
    EorEmployeeCostCalculationResponseContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/EorEmployeeCostCalculationResponse'
    GPEmployeeCompensationToUpdateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/GPEmployeeCompensationUpdateData'
    GPEmployeeCompensationUpdateData:
      type: object
      required:
        - scale
        - salary
        - effective_date
      properties:
        scale:
          $ref: '#/components/schemas/GPContractSalaryScaleEnum'
        salary:
          description: Compensation salary.
          type: number
          example: 50000
        effective_date:
          $ref: '#/components/schemas/DateStringRequired'
    GPEmployeeCompensationUpdatedContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/GPEmployeeCompensationUpdated'
    GPEmployeeCompensationUpdated:
      type: array
      items:
        type: object
        properties:
          status:
            $ref: '#/components/schemas/GPContractSalaryStatusEnum'
          scale:
            $ref: '#/components/schemas/GPContractSalaryScaleEnum'
          salary:
            description: Compensation salary.
            type: number
            example: 50000
          effective_date:
            $ref: '#/components/schemas/DateStringRequired'
    GPEmployeeAddressToUpdateContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/GPEmployeeAddressUpdateData'
    AddWorkerBankAccountContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/WorkerBankAccountToAdd'
    WorkerTerminationBodyContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/WorkerTerminationBody'
    GPEmployeePTOUpdateData:
      type: object
      required:
        - accrual_start_date
        - yearly_allowance
      properties:
        accrual_start_date:
          description: Date when the employee starts to accrue PTO.
          $ref: '#/components/schemas/DateStringRequired'
        yearly_allowance:
          description: Enter the number of holidays.
          type: string
          example: '15'
    GPEmployeeInformationUpdateData:
      type: object
      properties:
        first_name:
          description: First name of the employee.
          type: string
          example: Jane
        middle_name:
          description: Middle name of the employee.
          type: string
          example: Jay
        last_name:
          description: Last name of the employee.
          type: string
          example: Doe
        date_of_birth:
          $ref: '#/components/schemas/DateString'
        gender:
          description: Employee's gender.
          type: string
        marital_status:
          $ref: '#/components/schemas/MaritalStatusEnum'
          example: Single
        employee_number:
          description: Employee's number.
          type: string
    PayslipDownloadUrl:
      type: object
      required:
        - url
      properties:
        url:
          type: string
          example: >-
            https://s3.eu-west-1.amazonaws.com/api-dev-eks.letsdeel.com/employee_payslips/ApdZbLvq0r0E_Payslip_Kulvear_Bowie_2023-12-31.pdf?AWSAccessKeyId=ASIATHF2L5PZ545TTFF7&Expires=1698149134&Signature=DmqwQiXY%2FHmPS%2FYBcB2DOZ9SDVA%3D&x-amz-security-token=zxc
    EORContractBenefits:
      type: array
      items:
        type: object
        properties:
          id:
            description: Unique identifier of the benefit.
            type: string
            example: e2e09831-853d-4f56-b43f-2ec19cda7b0c
          name:
            description: Name of the benefit.
            type: string
            example: Health Insurance
          provider:
            type: object
            properties:
              name:
                description: Name of the provider.
                type: string
                example: Provider name
          offer_status:
            description: Status of the offer.
            type: string
            enum:
              - Offered
              - Not offered
            example: Offered
          plan:
            type: object
            properties:
              name:
                description: Name of the plan.
                type: string
                example: Gold
          enrollment_details:
            type: object
            properties:
              status:
                description: Status of the enrollment.
                type: string
                example: Enrolled
              plan:
                type: object
                properties:
                  name:
                    description: Name of the plan.
                    type: string
                    example: Gold
              standard:
                type: object
                properties:
                  monthly_cost:
                    description: Standard monthly cost.
                    nullable: true
                    type: string
                    example: '100'
                  monthly_contribution:
                    description: Standard monthly contribution.
                    nullable: true
                    type: string
                    example: '50'
              current:
                type: object
                properties:
                  monthly_cost:
                    description: Current monthly cost.
                    type: string
                    example: '100'
                  monthly_contribution:
                    description: Current monthly contribution.
                    type: string
                    example: '50'
    GPPayrollEventReports:
      type: array
      items:
        type: object
        required:
          - id
          - status
          - start_date
          - end_date
          - lock_date
        properties:
          id:
            type: string
            example: clqmd5qb07xwevi01cd5kb6kw
          status:
            type: string
            example: OPEN
          start_date:
            $ref: '#/components/schemas/DateTimeStringRequired'
          lock_date:
            $ref: '#/components/schemas/DateTimeStringRequired'
          end_date:
            $ref: '#/components/schemas/DateTimeStringRequired'
    GlobalPayrollG2NReport:
      type: object
      properties:
        net_pay:
          type: string
          nullable: true
        ee_loans:
          type: string
          nullable: true
        contract_id:
          type: string
        annual_bonus:
          type: number
          nullable: true
        car_allowance:
          type: number
          nullable: true
        esp_deduction:
          type: number
          nullable: true
        employee_name:
          type: string
          nullable: true
        employer_cost:
          type: string
          nullable: true
        funding_amount:
          type: number
          nullable: true
        home_allowance:
          type: string
          nullable: true
        ee_income_tax:
          type: string
          nullable: true
        employee_number:
          type: number
          nullable: true
        backdated_salary:
          type: string
          nullable: true
        employer_contribution:
          type: string
          nullable: true
        er_occupational_risk:
          type: string
          nullable: true
        employment_status_tag_internal:
          type: string
          nullable: true
        employee_job_title:
          type: string
          nullable: true
        employee_division:
          type: string
          nullable: true
        employee_department:
          type: string
          nullable: true
        pension_contribution:
          type: number
          nullable: true
        cost_center:
          type: string
          nullable: true
    MaritalStatusEnum:
      type: string
      x-internal: true
      enum:
        - Single
        - Married
        - Widowed
        - Divorced
        - Separated
        - Registered Partnership
        - Common Law
    GPEmployeeAddressUpdateData:
      type: object
      properties:
        city:
          description: City name.
          type: string
          example: London
        street:
          description: Street name.
          type: string
          example: 123 Deel Street
        zip:
          description: Zip code.
          type: string
          example: '12345'
    WorkerBankAccountInfo:
      type: object
      allOf:
        - $ref: '#/components/schemas/WorkerBankAccountToAdd'
        - type: object
          required:
            - id
            - created_at
            - updated_at
          properties:
            id:
              $ref: '#/components/schemas/UniqueObjectIdentifier'
            created_at:
              $ref: '#/components/schemas/DateTimeStringRequired'
            updated_at:
              $ref: '#/components/schemas/DateTimeStringRequired'
            status:
              description: Current status of bank account
              type: string
    WorkerBankAccountToAdd:
      type: object
      properties:
        full_name:
          description: Full name of the user.
          type: string
          example: John Doe
        phone:
          description: The user's phone number.
          type: string
          example: '+1234567890'
        address_line1:
          description: The primary address line.
          type: string
          example: 1234 Main St
        address_line2:
          description: The secondary address line.
          type: string
          example: Apartment 101
        city:
          description: The city of the user's address.
          type: string
          example: Springfield
        province_state:
          description: The state or province of the user's address.
          type: string
          example: Ontario
        postal:
          description: The user's postal or ZIP code.
          type: string
          example: '12345'
        bank_name:
          description: Name of the user's bank.
          type: string
          example: Bank of Examples
        country_code:
          description: The country code of the user.
          type: string
          example: US
        bank_country_code:
          description: The country code where the bank is located.
          type: string
          example: US
        swift_bic:
          description: SWIFT/BIC code for the bank.
          type: string
          example: EXAMPLEBIC
        account_number:
          description: The user's bank account number.
          type: string
          example: '123456789012'
        bank_code:
          description: The bank code.
          type: string
          example: '123'
        original_name:
          description: The original name of the user.
          type: string
          example: Johnathan Doe
        tax_id:
          description: The user's tax identification number.
          type: string
          example: 123-45-6789
        branch_code:
          description: The branch code of the user's bank.
          type: string
          example: '001'
        currency_code:
          description: The currency code for transactions.
          type: string
          example: USD
        bank_branch_name:
          description: The name of the user's bank branch.
          type: string
          example: Main Street Branch
        iban:
          description: The International Bank Account Number (IBAN).
          type: string
          example: GB29NWBK60161331926819
        email:
          description: The user's email address.
          type: string
          example: john.doe@example.com
        rib_number:
          description: The RIB(Relevé d'Identité Bancaire).
          type: string
          example: '12345678901'
        account_type:
          description: Bank account type.
          type: string
          example: '12345678901'
        ach_routing_number:
          description: The ACH (Automated Clearing House) Routing Number.
          type: string
          example: '12345678901'
    WorkerTerminationBody:
      type: object
      required:
        - severance
        - desired_end_date
        - last_date_of_work
        - message
        - is_voluntary
      properties:
        desired_end_date:
          description: The preferred end date for terminating the worker's engagement.
          type: string
          format: date
          pattern: ^\d{4}-\d{2}-\d{2}$
          example: '2023-12-31T00:00:00.000Z'
        last_date_of_work:
          description: The effective termination date of the worker's employment.
          type: string
          format: date
          pattern: ^\d{4}-\d{2}-\d{2}$
          example: '2023-12-31T00:00:00.000Z'
        message:
          description: The reason for terminating the worker's engagement.
          type: string
          example: Termination reason
        is_voluntary:
          description: >-
            Indicates whether the worker termination is voluntary (true) or
            involuntary (false).
          type: boolean
          example: true
        severance:
          type: object
          oneOf:
            - properties:
                amount:
                  description: >-
                    The amount of severance, specified in the designated
                    currency.
                  type: number
                  example: 100
                type:
                  description: The type of severance, either in cash or time off.
                  example: TIME
                  enum:
                    - TIME
                  type: string
                time_unit:
                  description: The unit of time for severance.
                  type: string
                  enum:
                    - DAYS
                    - WEEKS
                    - MONTHS
                  example: MONTHS
                currency:
                  $ref: '#/components/schemas/CurrencyCode'
              required:
                - currency
                - time_unit
                - amount
                - type
            - properties:
                amount:
                  description: >-
                    The amount of severance, specified in the designated
                    currency.
                  type: number
                  example: 100
                type:
                  description: The type of severance, either in cash or time off.
                  example: CASH
                  enum:
                    - CASH
                  type: string
                currency:
                  $ref: '#/components/schemas/CurrencyCode'
              required:
                - currency
                - amount
                - type
              not:
                required:
                  - time_unit
    GPEmployeeAddressUpdatedContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/GPEmployeeAddressUpdated'
    GPEmployeeAddressUpdated:
      type: object
      properties:
        country:
          $ref: '#/components/schemas/CountryCode'
        state:
          description: State name.
          type: string
          example: CO
        city:
          description: City name.
          type: string
          example: Denver
        street:
          description: Street name.
          type: string
          example: 123 Deel Street
        zip:
          description: Zip code.
          type: string
          example: '12345'
        updated_at:
          $ref: '#/components/schemas/DateTimeStringRequired'
    GPContractToCreate:
      type: object
      required:
        - employee
        - employment
        - job_title
        - client
        - compensation_details
      properties:
        employee:
          type: object
          required:
            - first_name
            - last_name
            - email
            - address
            - work_email
          properties:
            first_name:
              description: Employee's first name.
              type: string
              example: Jane
            last_name:
              description: Employee's last name.
              type: string
              example: Doe
            email:
              description: Employee's email address.
              $ref: '#/components/schemas/EmailTypeRequired'
              example: employee@email.com
            work_email:
              description: Employee's work email address.
              $ref: '#/components/schemas/EmailTypeRequired'
              example: work@email.com
            nationality:
              description: Employee's nationality.
              example: US
              type: string
            employee_number:
              description: Employee's number.
              type: string
              example: '100'
            address:
              type: object
              required:
                - street
                - city
                - zip
                - country
              properties:
                street:
                  description: Street and number.
                  type: string
                  example: Deel Street 500
                city:
                  description: City name.
                  type: string
                  example: Denver
                state:
                  description: State code.
                  type: string
                  example: CO
                zip:
                  description: Zip code.
                  type: string
                  example: '44000'
                country:
                  $ref: '#/components/schemas/CountryCode'
        employment:
          type: object
          required:
            - type
            - start_date
            - holidays
          properties:
            type:
              $ref: '#/components/schemas/GPContractStatusTypeEnum'
            start_date:
              description: Employment start date in Deel.
              $ref: '#/components/schemas/DateStringRequired'
            holidays:
              type: object
              required:
                - allowance
                - start_date
              properties:
                allowance:
                  description: Enter the number of holidays.
                  type: number
                start_date:
                  $ref: '#/components/schemas/DateStringRequired'
          x-konfig-properties: {}
        job_title:
          description: Employee's job title.
          type: string
        client:
          $ref: '#/components/schemas/GPClient'
        compensation_details:
          type: object
          required:
            - salary
            - scale
          properties:
            scale:
              description: Defines the scale at which the salary is paid.
              type: string
              default: YEAR
              enum:
                - YEAR
                - MONTH
            salary:
              description: Employee's gross annual/month salary.
              type: number
            currency:
              description: Salary currency.
              example: BRL
              $ref: '#/components/schemas/CurrencyCodeRequired'
    EorContractToCreate:
      type: object
      required:
        - employment
        - employee
        - job_title
        - seniority
        - client
        - compensation_details
      properties:
        employee:
          type: object
          required:
            - first_name
            - last_name
            - nationality
          properties:
            first_name:
              description: Employee's first name.
              type: string
              example: Jane
            last_name:
              description: Employee's last name.
              type: string
              example: Doe
            email:
              description: Employee's email address.
              type: string
              example: employee@email.com
            nationality:
              description: Employee's nationality.
              example: US
              type: string
            address:
              type: object
              nullable: true
              properties:
                street:
                  description: Street and number.
                  type: string
                  example: Deel Street 500
                city:
                  description: City name.
                  type: string
                  example: Denver
                state:
                  description: State code.
                  type: string
                  example: CO
                  nullable: true
                zip:
                  description: Zip code.
                  type: string
                  example: '44000'
                country:
                  $ref: '#/components/schemas/CountryCode'
        employment:
          type: object
          required:
            - country
            - start_date
            - work_visa_required
          properties:
            country:
              $ref: '#/components/schemas/CountryCode'
            state:
              description: >-
                State code of the state/province where the this person will be
                employed.
              type: string
              nullable: true
            type:
              description: Is it a full-time contract or a part-time contract?
              type: string
              enum:
                - Full-time
                - Part-time
            work_visa_required:
              description: Do you require Deel to apply for work visa for this person?
              type: boolean
              default: false
            start_date:
              $ref: '#/components/schemas/DateStringRequired'
            end_date:
              $ref: '#/components/schemas/DateString'
            probation_period:
              description: Number of probation days.
              type: number
              nullable: true
            scope_of_work:
              description: Scope of work description.
              type: string
            time_off_type:
              description: >-
                If you want to use standard number of holidays for this
                employee, choose "STANDARD". If you want to enter a specific
                number of holidays, choose "SPECIFIC" and enter the number of
                days in the holidays field.
              type: string
              enum:
                - STANDARD
                - SPECIFIC
            holidays:
              description: >-
                Enter the number of holidays. Leave this field blank if you are
                chooseing "STANDARD" time_off_type.
              type: number
              nullable: true
        job_title:
          description: Employee's job title.
          type: string
        seniority:
          type: object
          properties:
            id:
              description: >-
                Enter the Id retrieved from the seniority lookup endpoint. Enter
                34 for "Not Applicable".
              $ref: '#/components/schemas/UniqueObjectIdentifier'
        client:
          type: object
          required:
            - team
          properties:
            legal_entity:
              type: object
              properties:
                id:
                  description: >-
                    Enter the Id of legal entity under which you want to hire
                    this person. Use /legal-entities endpoint to retrieve a list
                    of legal entities in your organization.
                  $ref: '#/components/schemas/UniqueObjectIdentifier'
            team:
              type: object
              required:
                - id
              properties:
                id:
                  description: >-
                    Enter the Id of team this person will be hired in. Use
                    /teams endpoint to retrieve a list of teams in your
                    organization.
                  $ref: '#/components/schemas/UniqueObjectIdentifier'
        compensation_details:
          type: object
          required:
            - currency
          properties:
            salary:
              description: Employee's gross annual salary.
              type: number
            currency:
              description: Salary currency.
              type: string
            variable_compensation:
              description: >-
                Variable compensation. For example, if the person will earn 5%
                of the gross annual salary as the variable compensation, enter
                5.
              type: number
              nullable: true
            variable_compensation_type:
              description: >-
                Should be set only if variable_compensation is set. It can be
                PERCENTAGE or FIXED.
              type: string
              nullable: true
              enum:
                - PERCENTAGE
                - FIXED
                - null
        quote_additional_fields:
          description: >-
            Some countries require additional employee information for
            employment contracts.
          type: object
          nullable: true
          properties:
            gender:
              description: Employee's gender.
              type: string
            worker_type:
              description: Type of worker.
              type: string
              enum:
                - Skilled
                - Unskilled
            dob:
              description: Employee's date of birth.
              type: string
        health_plan_id:
          description: >-
            Healthcare plan id. You can see available healthcare plans in the
            country guide endpoint.
          type: string
        pension:
          $ref: '#/components/schemas/PensionEORContractToCreate'
    PensionEORContractToCreate:
      description: Some countries required a pension benefit.
      type: object
      properties:
        id:
          description: >-
            Pension provider id. You can see available pension providers in the
            country guide endpoint.
          type: string
        contribution:
          description: >-
            Enter the value of pension contribution. You should send this value
            only if the contribution object is available in the country guide
            endpoint and the value should be there between minimum and maximum
            values indicated.
          type: string
    GPContractCreated:
      type: object
      properties:
        id:
          description: Id of the contract created.
          type: string
        type:
          $ref: '#/components/schemas/ContractTypeEnum'
        created_at:
          $ref: '#/components/schemas/DateTimeString'
        status:
          $ref: '#/components/schemas/ContractStatusEnum'
        job_title:
          description: Employee's job title.
          type: string
          example: Designer
        employment:
          type: object
          properties:
            start_date:
              description: Employment start date in Deel.
              $ref: '#/components/schemas/DateString'
            end_date:
              description: Employment end date in Deel.
              $ref: '#/components/schemas/DateString'
            country:
              description: Country of employment.
              type: string
            state:
              description: >-
                State code of the state/province where this person will be
                employed.
              type: string
              nullable: true
            type:
              description: Is it a full-time contract or a part-time contract?
              type: string
            work_visa_required:
              description: Do you require Deel to apply for a work visa for this person?
              type: boolean
            holidays:
              type: object
              properties:
                allowance:
                  description: Number of holidays.
                  type: number
                start_date:
                  $ref: '#/components/schemas/DateString'
        client:
          type: object
          properties:
            legal_entity:
              type: object
              properties:
                name:
                  description: Legal entity name.
                  type: string
        compensation_details:
          type: object
          properties:
            salary:
              description: Gross annual/month salary.
              type: number
            currency:
              description: Currency of gross annual/month salary.
              type: string
            scale:
              description: Scale at which the salary is paid.
              type: string
        employee:
          type: object
          properties:
            first_name:
              description: Employee's first name.
              type: string
            last_name:
              description: Employee's last name.
              type: string
            email:
              description: Employee's email address.
              type: string
            employee_number:
              description: Employee's number.
              type: string
    EorContractCreated:
      type: object
      properties:
        id:
          description: Id of the contract quote created
          type: string
          nullable: false
        type:
          $ref: '#/components/schemas/ContractTypeEnum'
        created_at:
          $ref: '#/components/schemas/DateTimeString'
        status:
          $ref: '#/components/schemas/ContractStatusEnum'
        job_title:
          description: Employee's job title.
          type: string
          example: Designer
        employment:
          type: object
          properties:
            scope_of_work:
              description: Scope of work description.
              type: string
              example: >-
                A designer works on the entire process of defining requirements,
                visualizing and creating graphics including illustrations or
                logos. Also, the designer works on shaping the visual aspects of
                websites, product packaging, and more.
            start_date:
              $ref: '#/components/schemas/DateString'
            end_date:
              $ref: '#/components/schemas/DateString'
            country:
              description: Country of employement.
              type: string
            state:
              description: >-
                State code of the state/province where the this person will be
                employed.
              type: string
              nullable: true
            work_visa_required:
              description: Do you require Deel to apply for work visa for this person?
              type: boolean
            time_off_type:
              description: >-
                If you want to use standard number of holidays for this
                employee, choose "STANDARD". If you want to enter a specific
                number of holidays, choose "SPECIFIC" and enter the number of
                days in the holidays field.
              type: string
            probation_period:
              description: Number of probation days.
              type: number
              nullable: true
            calculated_holidays:
              description: Number of calculate holidays for this contract.
              type: string
        client:
          type: object
          properties:
            legal_entity:
              type: object
              properties:
                name:
                  description: Legal entity name.
                  type: string
        compensation_details:
          type: object
          properties:
            salary:
              description: Gross annual salary.
              type: number
            currency:
              description: Currency of gross annual salary.
              type: string
            variable_compensation:
              description: Variable compensation acount or percentage.
              type: string
            variable_compensation_type:
              description: Type fo variable compensation.
              type: string
              nullable: true
        employee:
          type: object
          properties:
            legal_name:
              description: Employee's legal name.
              type: string
            first_name:
              description: Employee's first name.
              type: string
            last_name:
              description: Employee's last name.
              type: string
            email:
              description: Employee's email.
              type: string
        health_plan:
          type: object
          nullable: true
          properties:
            id:
              description: Health plan ID
              type: string
            name:
              description: Health plan name
              type: string
        seniority:
          $ref: '#/components/schemas/Seniority'
    EorEmployeeCostCalculationRequestBody:
      type: object
      required:
        - salary
        - country
        - currency
      properties:
        salary:
          description: The gross annual salary of the employee.
          type: number
          minimum: 1
          example: 50000
        country:
          description: The country of employment.
          type: string
          example: Germany
        currency:
          description: The currency that the salary is paid in.
          type: string
          example: EUR
        benefits:
          description: Benefits which should be included in the calculation.
          type: array
          nullable: true
          items:
            type: object
            required:
              - provider_id
            properties:
              provider_id:
                description: The ID of a benefits provider to include in the calculation.
                type: string
                example: 00000000-0000-0000-0000-000000000000
              plan_id:
                description: The ID of a benefits plan to include in the calculation.
                type: string
                example: 00000000-0000-0000-0000-000000000000
                nullable: true
    EorEmployeeCostCalculationResponse:
      type: object
      properties:
        salary:
          description: The gross annual salary of the employee.
          type: string
          example: 5000
        currency:
          description: The currency of the employee salary.
          type: string
          example: EUR
        country:
          description: The country of employment.
          type: string
          example: Germany
        country_code:
          description: The country code for the country of employment.
          type: string
          example: DE
        frequency:
          description: The frequency that the salary is paid out to the employee.
          type: string
          example: Monthly
        deel_fee:
          description: The monthly Deel fee.
          type: string
          example: 500
        severance_accrual:
          description: >-
            Monthly funds to cover future potential severance payments to the
            employee.
          type: string
          example: 1000
        total_costs:
          description: >-
            Total monthly cost including salary, Deel fee, severance accrual and
            employer costs.
          type: string
          example: 10000
        employer_costs:
          description: >-
            Total monthly employer costs. Does not include Deel fee, salary and
            severance accrual.
          type: string
          example: 1000
        costs:
          description: >-
            The various costs associated with employment in the specified
            country.
          type: array
          items:
            type: object
            properties:
              name:
                description: The name of the cost item.
                type: string
                example: Health Insurance Estimate
              amount:
                description: The amount or price of the cost item.
                type: string
                example: 500
              frequency:
                description: The frequency that the cost item must be paid.
                type: string
                example: Monthly
              country:
                description: The country that the cost item is associated with.
                type: string
                example: Germany
              country_code:
                description: >-
                  The country code for the country that the cost item is
                  associated with.
                type: string
                example: DE
        additional_data:
          description: >-
            Textual notes describing important additional data regarding the
            employement process or costs.
          type: object
          properties:
            additional_notes:
              type: array
              items:
                description: >-
                  A textual note describing important additional data regarding
                  the employement process.
                type: string
                example: >-
                  Kindly note that employment process X is mandatory for this
                  country.
        benefits_data:
          description: The various benefits costs involved in the calculation, if any.
          type: array
          items:
            type: object
            properties:
              name:
                description: The name of the benefit item.
                type: string
                example: Healthcare
              plan:
                description: The name of the benefit plan.
                type: string
              fee_amount:
                description: >-
                  The amount or price of the fee associated with the benefit
                  item.
                type: string
                example: 10
              amount:
                description: The amount or price of the benefit item.
                type: string
                example: 50
    EorCountryValidations:
      type: object
      properties:
        holiday:
          description: Range of the number of holidays.
          type: object
          properties:
            min:
              description: >-
                Minimum number of holidays required for a legally compliant
                contract.
              type: string
              example: '20'
        part_time_holiday:
          description: Holiday type and range for part-time contracts.
          type: object
          properties:
            type:
              type: string
              enum:
                - PRORATED
                - STANDARD
                - SPECIFIC
              example: SPECIFIC
            min:
              description: >-
                Minimum number of holidays required for a legally compliant
                contract.
              type: string
              example: '15'
        sick_days:
          type: object
          properties:
            min:
              description: >-
                Minimum number of sick days required for a legally compliant
                contract.
              type: string
              example: '0'
            max:
              description: >-
                Maximum number of sick days allowed for a legally compliant
                contract.
              type: string
              format: nullable
        salary:
          description: Salary range.
          type: object
          properties:
            min:
              description: Minimum wage for a legally compliant contract.
              type: string
              example: '14544.00'
            max:
              description: Maximum wage allowed for a legally compliant contract.
              type: string
              example: '2649300.00'
            frequency:
              type: string
              $ref: '#/components/schemas/SalaryFrequencyScaleEnum'
        probation:
          description: Probation period range.
          type: object
          properties:
            min:
              description: >-
                Minimum probation days required for a legally compliant
                contract.
              type: string
              format: nullable
            max:
              description: Maximum probation days allowed for a legally compliant contract.
              type: number
              example: 90
        part_time_probation:
          description: Probation period range for part-time contracts.
          type: object
          properties:
            min:
              description: >-
                Minimum probation days required for a legally compliant
                contract.
              type: number
              example: 30
            max:
              description: Maximum probation days allowed for a legally compliant contract.
              type: number
              example: 60
        work_schedule:
          description: Employee's Work schedule in days and hours.
          type: object
          properties:
            days:
              type: object
              properties:
                max:
                  type: string
                  example: '6'
            hours:
              type: object
              properties:
                max:
                  type: string
                  example: '10'
        insurance_fee:
          description: Insurance fee.
          type: string
          example: '15.00'
        currency:
          description: Country currency.
          type: string
          example: BRL
        hiring_guide_country_name:
          description: Country name.
          type: string
          example: brazil
        start_date_buffer:
          description: >-
            Calculate employee's minimum start date using the start date buffer.
            Today's date + (number of business days x start_date_buffer) =
            Minimum start date.
          type: number
          example: 5
        definite_contract:
          description: Conditions to make definitive contract.
          type: object
          properties:
            type:
              type: string
              enum:
                - ALLOWED_WITHOUT_LIMITATION
                - ALLOWED_WITH_MAXIMUM_LIMITATION
                - NOT_ALLOWED
              example: ALLOWED_WITH_MAXIMUM_LIMITATION
            maximum_limitation:
              type: number
              example: 36
        adjustments_information_box:
          description: Country specific notes and information.
          type: string
          example: Not allowed to contract people under 21.
        health_insurance:
          type: object
          nullable: true
          properties:
            status:
              description: Health insurance status.
              $ref: '#/components/schemas/BenefitStatusEnum'
            providers:
              type: array
              items:
                $ref: '#/components/schemas/HealthInsuranceProvider'
        pension:
          description: >-
            If it is there, you must specify the pension benefit when creating
            an EOR contract.
          type: object
          nullable: true
          properties:
            status:
              description: Pension benefit status.
              $ref: '#/components/schemas/BenefitStatusEnum'
            providers:
              type: array
              items:
                $ref: '#/components/schemas/PensionProvider'
        mandatory_fields:
          type: array
          items:
            $ref: '#/components/schemas/EorField'
    EorField:
      description: Mandatory EOR field.
      type: object
      properties:
        label:
          type: string
          example: Country of birth
        property_name:
          type: string
          example: countryOfBirth
        input_type:
          type: string
          example: select
        is_optional:
          type: boolean
          example: false
        options:
          type: array
          example:
            - Afghanistan (AF)
            - Canada (CA)
            - Zimbabwe (ZW)
          items:
            type: string
    PensionProvider:
      description: Pension provider.
      type: object
      properties:
        id:
          description: Unique identifier of a Pension provider.
          $ref: '#/components/schemas/UniqueObjectIdentifier'
        name:
          description: Name of pension provider.
          type: string
          example: US Pension
        home_page_url:
          description: Pension provider's home page url.
          type: string
          example: https://bit.ly/3uW72fp
        contribution:
          description: >-
            If it is there, you must specify the contribution property when
            creating an EOR contract.
          $ref: '#/components/schemas/Contribution'
    Contribution:
      description: Pension contribution.
      type: object
      x-internal: true
      properties:
        type:
          description: Contribution type.
          $ref: '#/components/schemas/BenefitContributionTypeEnum'
        minimum:
          description: Minimum pension contribution.
          type: string
          example: '5.00'
        maximum:
          description: Maximum pension contribution.
          type: string
          example: '10.00'
    HealthInsuranceProvider:
      description: Health insurance provider.
      type: object
      properties:
        id:
          description: Unique identifier of a health insurance provider.
          $ref: '#/components/schemas/UniqueObjectIdentifier'
        name:
          description: Name of insurance provider.
          type: string
          example: 'United Healthcare VSP Vision & Delta Dental: Singles Only'
        is_unisure:
          type: boolean
        home_page_url:
          description: Insurance provider's home page url.
          type: string
          example: https://bit.ly/3uW72fp
        currency:
          description: Payment currency.
          type: string
          example: USD
        type:
          description: Insurance type.
          type: string
          example: PLAN
        ending_rule:
          description: Insurance cycle ending rule.
          type: string
          example: END_OF_MONTH
        days_to_cancel:
          description: Days to cancel the insurance.
          type: string
          format: nullable
        pricing_info_link:
          description: URL to price info.
          type: string
          format: nullable
        fixed_price:
          description: URL to price info.
          type: boolean
        attachments:
          description: File attachments.
          type: array
          items:
            type: object
            properties:
              id:
                $ref: '#/components/schemas/UniqueObjectIdentifier'
              label:
                type: string
                example: Deel USA Health Care Packet.pdf
        client_info_banner:
          description: Health insurance info banner.
          type: string
          format: nullable
        is_available_for_new_quotes:
          type: boolean
        plans:
          type: array
          items:
            type: object
            properties:
              id:
                description: Insurance plan id.
                $ref: '#/components/schemas/UniqueObjectIdentifier'
              name:
                description: Insurance plan name.
                type: string
                example: USA Healthcare Plan
              price:
                description: Insurance price.
                type: string
                example: '570.00'
                nullable: true
              currency:
                description: Insurance payment currency.
                type: string
                example: USD
              is_enabled:
                type: boolean
    EorClientTimeoffs:
      required:
        - employees
        - total_requests
      properties:
        employees:
          description: List of employee time offs.
          type: array
          items:
            $ref: '#/components/schemas/EorTimeoffsEmployeeItem'
        total_requests:
          type: number
    EmployeeTimeoffsItem:
      type: object
      required:
        - time_off_id
        - reason
        - type
        - requested_at
        - reviewed_at
        - with_multiple_dates
        - created_at
        - updated_at
        - status
        - other_time_off_name
        - denial_reason
        - requester
        - reviewer
        - days_used_start_year
        - days_used_end_year
        - days_used
        - start_date
        - end_date
        - is_start_date_half_day
        - is_end_date_half_day
        - attachments
        - change_request
      properties:
        time_off_id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
          nullable: true
        reason:
          type: string
          example: I need to relax.
        type:
          description: Time off type.
          type: string
          enum:
            - VACATION
            - SICK_LEAVE
            - OTHER
          example: VACATION
        requested_at:
          type: string
          example: '2023-08-03T22:00:00.000Z'
        reviewed_at:
          type: string
          example: '2023-08-03T22:00:00.000Z'
        with_multiple_dates:
          type: boolean
          example: false
        created_at:
          type: string
          example: '2023-08-03T22:00:00.000Z'
        updated_at:
          type: string
          example: '2023-08-03T22:00:00.000Z'
        denial_reason:
          type: string
          nullable: true
          example: false
        requester:
          type: object
          properties:
            name:
              type: string
              example: Carlos from deel
        reviewer:
          type: object
          properties:
            name:
              type: string
              example: Rabia Arikdogan
        days_used_start_year:
          type: string
          example: '0.50'
        days_used_end_year:
          type: string
          example: '0.00'
        days_used:
          type: string
          example: '0.50'
        start_date:
          type: string
          example: '2024-02-23T23:00:00.000Z'
        end_date:
          type: string
          example: '2024-02-25T23:00:00.000Z'
        is_start_date_half_day:
          type: boolean
          example: false
        is_end_date_half_day:
          type: boolean
          example: true
        attachments:
          type: array
          items:
            type: object
            properties:
              attachment_id:
                type: string
                example: 3759767d-2737-4284-8263-65099896f7c3
              label:
                type: string
                example: 924177_SC_l73xijJk-Xn1xfeN4V.jpeg
              file_extension:
                type: string
                example: pdf
          example: []
        change_request:
          type: string
          nullable: true
          example: ''
    EmployeeTimeoffsItemResponse:
      type: object
      properties:
        time_off_id:
          type: string
          example: bca1738c-194a-48e7-a26d-89fddca5bff3
        time_off_type_id:
          type: string
          example: e0a91fd6-0646-41ae-84a9-ca3d2f761793
        policy_id:
          type: string
          example: 85cae186-c0b2-4b92-b554-d8eb1f0fdc1d
        policy_name:
          type: string
          example: Vacation - unlimited days
        policy_type_name:
          type: string
          example: Vacation
        reason:
          type: string
          example: I need to relax.
        type:
          description: Time off type.
          type: string
          enum:
            - VACATION
            - SICK_LEAVE
            - OTHER
          example: VACATION
        requested_at:
          type: string
          example: '2023-08-03T22:00:00.000Z'
        reviewed_at:
          type: string
          example: '2023-08-03T22:00:00.000Z'
        with_multiple_dates:
          type: boolean
          example: false
        single_date:
          type: string
          example: '2023-08-03T22:00:00.000Z'
        created_at:
          type: string
          example: '2023-08-03T22:00:00.000Z'
        updated_at:
          type: string
          example: '2023-08-03T22:00:00.000Z'
        denial_reason:
          type: boolean
          example: false
        requester:
          $ref: '#/components/schemas/RequesterTimeOff'
        days_used_start_year:
          type: string
          example: '0.50'
        days_used_end_year:
          type: string
          example: '0.00'
        days_used:
          type: string
          example: '0.50'
        start_date:
          type: string
          example: '2024-02-23T23:00:00.000Z'
        end_date:
          type: string
          example: '2024-02-25T23:00:00.000Z'
        is_start_date_half_day:
          type: boolean
          example: false
        is_end_date_half_day:
          type: boolean
          example: true
        attachments:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                example: 3759767d-2737-4284-8263-65099896f7c3
              time_off_id:
                type: string
                example: eb0b38d1-4851-4560-87fd-c57b7cf19e5f
              filename:
                type: string
                example: test.pdf
              created_at:
                type: string
                example: '2023-08-04T09:03:31.577Z'
              updated_at:
                type: string
                example: '2023-08-04T09:03:31.577Z'
          example: []
        change_request:
          type: string
          example: ''
        is_updated:
          type: boolean
          example: false
        applied_changes:
          type: array
          items: {}
          example: []
        can_request_changes:
          type: boolean
          example: false
    RequesterTimeOff:
      type: object
      properties:
        is_part_time:
          type: boolean
          example: false
        has_reached_end_date:
          type: boolean
          example: false
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
        uuid:
          type: string
          example: 8bf2ee9c-aa43-4d8e-9f6f-ee8b880b3607
        hris_profile_id:
          type: string
          example: 05ab39e5-1200-4cc1-90bf-0969e02bcf02
        client_profile_id:
          type: string
          example: 08462445-3a37-4d3e-8413-bf28a125dabd
        organization_id:
          type: number
          example: 306415
        country:
          type: string
          example: LB
        worker_type:
          type: string
          example: hris_direct_employee
        end_date:
          type: string
          example: '2023-08-04T09:03:31.577Z'
        part_time_percentage:
          type: string
          example: ''
        created_at:
          type: string
          example: '2023-08-04T09:03:31.577Z'
        updated_at:
          type: string
          example: '2023-08-04T09:03:31.577Z'
    EorTimeoffsEmployeeItem:
      type: object
      required:
        - id
        - name
        - eor_contract_id
        - contract_id
        - vacations
        - sick_leaves
        - others
        - time_zones
      properties:
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
        name:
          type: string
          example: Steve Timeoff
        eor_contract_id:
          type: number
          example: 110143
        contract_id:
          type: string
          example: 7WjJWdsJ113vocUN6Buwn
        vacations:
          description: List of employee vacation time offs.
          type: array
          items:
            $ref: '#/components/schemas/EorClientTimeoffRequests'
        sick_leaves:
          description: List of employee sick leave time offs.
          type: array
          items:
            $ref: '#/components/schemas/EorClientTimeoffRequests'
        others:
          description: List of all other employee time offs.
          type: array
          items:
            $ref: '#/components/schemas/EorClientTimeoffRequests'
        time_zones:
          type: string
    EorClientTimeoffRequests:
      type: object
      required:
        - requests
      properties:
        year:
          type: number
          example: 2022
        days_requested:
          description: Days off requested by employee.
          type: number
        current_approved:
          description: Days off approved.
          type: number
        yearly_limit:
          description: Total number of days off allowed per year.
          type: number
        over_annual_limit:
          description: Too many days off requested by employee.
          type: boolean
        yearly_requests:
          description: Total number of time off requests this year.
          type: number
        requests:
          description: List of time offs.
          type: array
          items:
            $ref: '#/components/schemas/EorTimeoffsBaseItem'
    EorTimeoffs:
      description: List of time offs.
      type: array
      items:
        $ref: '#/components/schemas/EorTimeoffsBaseItem'
    EorTimeoffsBaseItem:
      type: object
      required:
        - type
        - requested_at
        - status
      properties:
        reason:
          description: Reason for requesting time off.
          type: string
          nullable: true
          example: I have a doctors appointment
        type:
          $ref: '#/components/schemas/TimeoffsTypeEnum'
        requested_at:
          $ref: '#/components/schemas/DateTimeString'
        reviewed_at:
          description: Timestamp when time off was reviewed.
          allOf:
            - $ref: '#/components/schemas/DateTimeString'
          nullable: true
          example: '2022-08-25T12:09:34.695Z'
        denial_reason:
          description: Reason why time off was denied.
          type: string
          nullable: true
          example: No time off available
        has_multiple_dates:
          description: Indicates if multiple time off days are requested.
          type: boolean
          nullable: true
        status:
          $ref: '#/components/schemas/TimeoffsStatusEnum'
        other_timeoff_name:
          description: Custom title for the time off. Only specify if type is "OTHER".
          type: string
          nullable: true
          example: This is time off for a doctor's appointment
        requester:
          description: Employee who requested the time off.
          allOf:
            - $ref: '#/components/schemas/TimeoffsProfile'
          nullable: true
        reviewer:
          description: User who reviewed the time off.
          allOf:
            - $ref: '#/components/schemas/TimeoffsProfile'
          nullable: true
        days_used_start_year:
          description: Days used at the start year.
          type: string
          example: '2.00'
        days_used_end_year:
          description: Days used at the end year.
          type: string
          example: '2.00'
        total_days_used:
          description: Total number of time off days used.
          type: string
          example: '4.00'
        start_date_is_half_day:
          description: Indicates if the first day of time off is a half day.
          type: boolean
        end_date_is_half_day:
          description: Indicates if the last day of time off is a half day.
          type: boolean
        single_date:
          allOf:
            - $ref: '#/components/schemas/DateTimeString'
          nullable: true
          example: '2022-08-25T12:09:34.695Z'
        date_is_half_day:
          description: If true, only a single date was specified.
          type: boolean
          nullable: true
        attachments:
          allOf:
            - $ref: '#/components/schemas/TimeoffsAttachments'
          nullable: true
      x-konfig-properties:
        type:
          description: The type of time off.
          example: VACATION
        requested_at:
          description: Timestamp when time off was requested.
          example: '2022-08-25T12:09:34.695Z'
        status:
          description: Status of the time off request.
          example: USED
    TimeoffsAttachments:
      description: A list of attachments. 2022-09-08 FE only allows for "SICK LEAVE"
      type: array
      items:
        $ref: '#/components/schemas/TimeoffsAttachmentsItem'
    TimeoffsAttachmentsItem:
      description: A item in attachments array. 2022-09-08 FE only allows for "SICK LEAVE"
      type: object
      properties:
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
        label:
          description: The file name
          type: string
        file_extension:
          description: The file name extension
          type: string
    GPContractStatusTypeEnum:
      description: Is it a full-time contract or a part-time contract?
      type: string
      enum:
        - Full-time
        - Part-time
    TimeoffsStatusEnum:
      type: string
      enum:
        - REQUESTED
        - APPROVED
        - REJECTED
    TimeoffsTypeEnum:
      type: string
      enum:
        - VACATION
        - SICK_LEAVE
        - OTHER
    BenefitStatusEnum:
      type: string
      enum:
        - REQUIRED
        - ENABLED
        - DISABLED
    BenefitContributionTypeEnum:
      type: string
      enum:
        - PERCENTAGE
        - FIXED_AMOUNT
        - MATCH
    BenefitContributionStatusEnum:
      type: string
      enum:
        - MANDATORY
        - OPTIONAL
        - UNAVAILABLE
    InvoiceContractTypes:
      description: invoice's allowed contract types
      type: string
      nullable: false
      enum:
        - pending
        - paid
        - processing
        - canceled
        - skipped
        - failed
        - refunded
      example: pending
    GPContractSalaryScaleEnum:
      description: The scale to which a given salary applies.
      type: string
      example: YEAR
      enum:
        - YEAR
        - MONTH
        - HOUR
    GPContractSalaryStatusEnum:
      description: The status of a salary amendment.
      type: string
      example: ACTIVE
      enum:
        - ACTIVE
        - UPCOMING
        - OUTDATED
    InvoiceContract:
      type: object
      required:
        - id
        - contract_type
      properties:
        id:
          description: Unique identifier of a Deel contract.
          type: string
          example: rhCTiRd9Mad41RwjsFWw-
        name:
          description: Contract title.
          type: string
          example: Lisandro Shanahan-Dynamic Web Specialist
        contract_type:
          description: Type of Deel contract.
          type: string
          example: pay_as_you_go_time_based
    TimeoffsProfile:
      type: object
      required:
        - id
        - name
        - profile_type
      properties:
        id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
        name:
          type: string
          example: Mr. Rogers
        pic_url:
          description: Avatar or selfie.
          allOf:
            - $ref: '#/components/schemas/UrlType'
          nullable: true
          example: https://media.letsdeel.com/avatar/2ROng8m5?q=1648722955603
        profile_type:
          $ref: '#/components/schemas/ProfileTypeEnum'
        is_employee:
          description: Only valid for requester. True if requester is an employee.
          type: boolean
      x-konfig-properties:
        profile_type:
          example: employee
    TimeoffToReviewContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/TimeoffReview'
    TimeoffReview:
      type: object
      required:
        - is_approved
      properties:
        is_approved:
          description: Approve or decline employee's time off request.
          type: boolean
          example: true
        denial_reason:
          description: Denial reason for the time off requested.
          type: string
          example: Not allowed for this day.
    TimeoffToReviewInternalContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/TimeoffReviewInternal'
    TimeoffReviewInternal:
      type: object
      required:
        - recipientId
        - status
      properties:
        status:
          description: The review decision to review the time off request with
          type: string
          enum:
            - APPROVED
            - REJECTED
          example: APPROVED
        reason:
          description: The reason that the chosen status was chosen.
          type: string
          example: Approved because there are no conflicts.
    TimeoffTypeListContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/TimeoffTypeList'
    TimeoffTypeList:
      type: array
      items:
        type: string
      example:
        - VACATION
        - SICK_LEAVE
        - OTHER
    AdjustmentsContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/PayrollAdjustment'
    AdjustmentCreatedContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/PayrollAdjustment'
    ResponseBodyForAdjustmentById:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/PayrollAdjustment'
    AdjustmentsCategoriesContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/AdjustmentCategory'
    PayrollAdjustment:
      type: object
      properties:
        title:
          description: The title of the adjustment
          type: string
          example: Your title here
        description:
          description: The description of the adjustment
          type: string
          example: Your description here
        id:
          description: The unique identifier of the adjustment
          type: string
          example: 123e4567-e89b-12d3-a456-426614174000
        contract_id:
          description: The identifier of the contract associated with the adjustment
          type: string
          example: m3jk2j
        amount:
          description: The amount of the adjustment
          type: string
          example: '1234.56'
        date_of_adjustment:
          description: The date of the adjustment
          type: string
          format: date
          example: '2023-11-02T00:00:00.000Z'
        cycle_reference:
          description: The reference to the cycle associated with the adjustment
          type: string
          nullable: true
          example: your_cycle_reference
        status:
          description: The status of the adjustment
          $ref: '#/components/schemas/AdjustmentStatusEnum'
          example: open
        adjustment_category_id:
          description: >-
            The identifier of the adjustment category associated with the
            adjustment
          type: string
          example: c9cf4c2c0165f48f494415390c3b49
        actual_start_cycle_date:
          description: The date of the actual start cycle date
          type: string
          example: '2023-11-01T00:00:00.000Z'
        actual_end_cycle_date:
          description: The date of the actual end cycle date
          type: string
          example: '2023-11-15T00:00:00.000Z'
        move_next_cycle:
          description: If an adjustments can belong to another payroll cycle
          type: boolean
          example: true
        file:
          type: object
          nullable: true
          properties:
            id:
              description: The unique identifier of the file
              type: string
              example: 123e4567-e89b-12d3-a456-426614174000
            name:
              description: The name of the file
              type: string
              example: your_file_name
            fileType:
              description: The type of the file
              type: string
              example: pdf
        created_at:
          description: The date and time when the adjustment was created
          type: string
          format: date-time
          example: '2020-11-02T12:00:00.000Z'
        updated_at:
          description: The date and time when the adjustment was last updated
          type: string
          format: date-time
          example: '2020-11-02T12:00:00.000Z'
    AdjustmentCategory:
      type: object
      properties:
        id:
          description: Unique identifier of an adjustment category.
          type: string
          example: c0431543f64c448e5ba4b525a50291
        unit_type:
          description: The unit type of the adjustment category.
          type: string
          example: currency
        label:
          description: The label of the adjustment category.
          type: string
          example: Employee Dinner
    CreateTimeoffContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/CreateTimeoff'
    CreateTimeoff:
      type: object
      required:
        - type
        - with_multiple_dates
      properties:
        type:
          description: Time off type.
          type: string
          enum:
            - VACATION
            - SICK_LEAVE
            - OTHER
          example: VACATION
        start_date:
          description: Start date of employee's time off.
          type: string
          example: '2022-09-03T00:00:00.000Z'
        end_date:
          description: End date of employee's time off.
          type: string
          example: '2022-09-05T00:00:00.000Z'
        with_multiple_dates:
          description: >-
            If true, then multiple time off days were requested. You must supply
            a start and end date. If false, end date is ignored
          type: boolean
        reason:
          description: Description for employee's time off.
          type: string
          example: Holiday
        is_start_date_half_day:
          description: Is the start day a half day?
          type: boolean
          example: false
        is_end_date_half_day:
          description: Is the start day a half day?
          type: boolean
          example: false
        other_timeoff_name:
          description: Custom name for this time off.
          type: string
          example: Birthday
    CreatePeopleTimeoff:
      type: object
      required:
        - type
        - start_date
        - end_date
        - reason
      properties:
        type:
          description: Time off type.
          type: string
          enum:
            - VACATION
            - SICK_LEAVE
            - OTHER
          example: VACATION
        start_date:
          description: Start date of employee's time off.
          type: string
          example: '2022-09-03T00:00:00.000Z'
        end_date:
          description: End date of employee's time off.
          type: string
          example: '2022-09-05T00:00:00.000Z'
        reason:
          description: Description for employee's time off.
          type: string
          example: Holiday
        attachments:
          description: Attachments for employee's time off.
          type: string
          format: binary
    PeopleTimeOffContainer:
      type: object
      properties:
        type:
          description: Time off type.
          type: string
          enum:
            - VACATION
            - SICK_LEAVE
            - OTHER
          example: VACATION
        start_date:
          description: Start date of employee's time off.
          type: string
          example: '2022-09-03T00:00:00.000Z'
        end_date:
          description: End date of employee's time off.
          type: string
          example: '2022-09-05T00:00:00.000Z'
        reason:
          description: Description for employee's time off.
          type: string
          example: Holiday
        attachments:
          description: Attachments for employee's time off.
          type: string
          format: binary
    UpdateWorkerDepartmentContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/UpdateWorkerDepartment'
    UpdateWorkerWorkingLocationContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/UpdateWorkerWorkingLocation'
    UpdateWorkerDepartment:
      type: object
      required:
        - department_id
      properties:
        department_id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
    UpdateWorkerWorkingLocation:
      type: object
      required:
        - working_location_id
      properties:
        working_location_id:
          $ref: '#/components/schemas/UniqueObjectIdentifier'
    EmployeeListContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeList'
    EmployeeList:
      x-internal: true
      properties:
        id:
          type: string
          example: a7cc0404-0a13-442a-92d0-dfcbc7e6f1ad
        first_name:
          type: string
          example: John
        last_name:
          type: string
          example: Smith
        full_name:
          type: string
          example: John Smith
        email:
          type: string
          example: john@example.com
        timezone:
          type: string
          example: America/Sao_Paulo
        personal_email:
          type: string
          example: john@example.com
        country:
          type: string
          example: BR
        birth_date:
          type: string
          example: '1984-12-26T00:00:00.000Z'
        pic_url:
          type: string
          format: nullable
        hiring_type:
          type: string
          example: contractor
        start_date:
          type: string
          example: '2022-07-01T03:00:00.000Z'
        team:
          type: string
          example: John's Team
        team_id:
          type: number
          example: 245062
        job_title:
          type: string
          example: Director
        payments:
          type: array
          items:
            type: object
            properties:
              rate:
                type: number
                example: 4000
              scale:
                type: string
                example: monthly
              currency:
                type: string
                example: BRL
              contract_name:
                type: string
                example: Demo.1
        hourly_report_total:
          type: string
          example: '8017.8000'
        client_legal_entity:
          type: object
          properties:
            id:
              $ref: '#/components/schemas/UniqueObjectIdentifier'
            name:
              type: string
              example: John.test2
        state:
          type: string
          example: CO
        seniority:
          type: string
          example: Junior (Individual Contributor Level 1)
        completion_date:
          type: string
          example: '2023-11-12T02:59:59.999Z'
        hiring_status:
          type: string
          example: active
        monthly_payment:
          type: object
          properties:
            count:
              type: number
              example: 10
    WebhookItem:
      type: object
      properties:
        description:
          description: Webhook subscription description.
          type: string
          nullable: true
          example: My first webhook
        id:
          description: Webhook subscription's unique identifier.
          $ref: '#/components/schemas/UniqueObjectIdentifier'
        name:
          description: Webhook subscription name.
          type: string
          nullable: true
          example: My webhooks
        status:
          description: Status of webhook.
          type: string
          enum:
            - enabled
            - disabled
          example: enabled
        url:
          description: Endpoint to receive webhook.
          type: string
          example: https://mywebhook.com/listening
        signing_key:
          description: The webhook's signing key, used to generate webhook signatures.
          type: string
          nullable: true
          example: null
        api_version:
          description: Deel API version. Currently Deel accepts v1 or v2 version.
          type: string
          nullable: false
          example: v2
          default: v2
        events:
          description: The list of events to enable for this subscription.
          example:
            - contract.created
          type: array
          items:
            type: string
        created_at:
          description: Time at which the webhook was created.
          type: string
        updated_at:
          description: Time at which the webhook was updated.
          type: string
        hidden:
          description: >-
            Property to hide the webhook from frontend view. Commonly by Dell
            3rd party apps
          type: boolean
          nullable: true
          example: false
      required:
        - name
        - description
        - status
        - url
        - signing_key
        - api_version
        - events
        - id
        - created_at
        - updated_at
    WebhookListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/WebhookItem'
      required:
        - data
    CreateWebhookRequest:
      type: object
      properties:
        description:
          description: Webhook subscription description.
          type: string
          nullable: true
          example: I like it very much.
        name:
          description: Webhook subscription name.
          type: string
          nullable: true
          example: My first webhook.
        status:
          description: Status of webhook.
          type: string
          enum:
            - enabled
            - disabled
          example: enabled
        url:
          description: Endpoint to receive webhook.
          type: string
          example: https://mywebhook.com
        signing_key:
          description: The webhook's signing key, used to generate webhook signatures.
          type: string
          nullable: true
          example: null
        api_version:
          description: Deel API version. Currently Deel accepts v1 or v2 version.
          type: string
          nullable: false
          default: v2
          example: v2
        events:
          description: The list of events to enable for this subscription.
          example:
            - contract.created
          type: array
          items:
            type: string
      required:
        - name
        - description
        - status
        - url
        - signing_key
        - api_version
        - events
    WebhookItemResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/WebhookItem'
      required:
        - data
    PatchWebhookRequest:
      type: object
      properties:
        description:
          description: Webhook subscription description.
          type: string
          nullable: true
          example: My first webhook
        name:
          description: Webhook subscription name.
          type: string
          nullable: true
          example: Demo webhook
        status:
          description: Status of webhook.
          type: string
          enum:
            - enabled
            - disabled
          example: enabled
        url:
          description: Endpoint to receive webhook.
          type: string
          example: https://mywebhook.com/listening
        signing_key:
          description: The webhook's signing key, used to generate webhook signatures.
          type: string
          nullable: true
          example: null
        api_version:
          description: Deel API version. Currently Deel accepts v1 or v2 version.
          type: string
          nullable: false
          example: v2
          default: v2
        events:
          description: The list of events to enable for this subscription.
          example:
            - contract.created
          type: array
          items:
            type: string
      required:
        - name
        - description
        - status
        - url
        - signing_key
        - events
    WebhookEventTypeResponse:
      type: object
      properties:
        description:
          description: Describes the webhook event and other pertinent info.
          type: string
          example: Triggered when a contract status changes.
        id:
          description: Event type unique identifier.
          type: number
          nullable: false
        module_name:
          description: Name of the rabbit queue.
          type: string
          nullable: false
          example: contract
        module_label:
          description: Display name of the rabbit queue in Deel UI.
          type: string
          nullable: false
          example: Contracts
        name:
          description: Name of the webhook event.
          type: string
          nullable: false
          example: invoice-adjustment.reviewed
        payload_example:
          description: JSON payload example of the specific event.
          type: string
          nullable: true
          example: null
        created_at:
          description: Time at which the event type was created.
          type: string
        updated_at:
          description: Time at which the event type was updated.
          type: string
      required:
        - id
        - module_name
        - module_label
        - name
        - description
    WebhookEventTypeListResponse:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/WebhookEventTypeResponse'
    PaymentObject:
      type: object
      properties:
        rows:
          $ref: '#/components/schemas/PaymentList'
        total:
          type: number
          nullable: false
    PaymentListContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/PaymentObject'
    PaymentList:
      type: array
      items:
        $ref: '#/components/schemas/Payment'
    PaymentWorkerList:
      type: array
      items:
        $ref: '#/components/schemas/PaymentWorker'
    PaymentWorker:
      title: The worker for the payment
      type: object
      required:
        - name
        - picUrl
      properties:
        id:
          description: Worker's unique id.
          type: number
          example: 123456
        name:
          description: Worker's full name.
          type: string
          default: ''
          example: Jane Doe
        picUrl:
          description: URL to worker's Deel avatar.
          type: string
          default: null
          nullable: true
        contract_id:
          description: The worker's Deel contract Id.
          type: string
          nullable: true
    PaymentMethod:
      type: object
      required:
        - type
      properties:
        type:
          $ref: '#/components/schemas/PaymentMethodEnum'
    Payment:
      type: object
      required:
        - id
        - payment_method
        - status
        - payment_currency
        - label
        - paid_at
        - created_at
        - total
        - workers
      properties:
        id:
          description: Unique identifier of the payment.
          type: number
          example: 12345
          nullable: false
        payment_method:
          $ref: '#/components/schemas/PaymentMethod'
        status:
          $ref: '#/components/schemas/PaymentStatusEnum'
        payment_currency:
          $ref: '#/components/schemas/CurrencyCode'
        label:
          type: string
        paid_at:
          $ref: '#/components/schemas/DateTimeString'
        created_at:
          $ref: '#/components/schemas/DateTimeString'
        total:
          description: Total paid.
          type: string
          example: 1015
        workers:
          $ref: '#/components/schemas/PaymentWorkerList'
      x-konfig-properties:
        paid_at:
          description: Timestamp when payment was paid.
          example: '2022-08-25T12:09:34.695Z'
        created_at:
          description: Timestamp when the record was created.
          example: '2022-08-25T12:09:34.695Z'
    PaymentBreakDownContainer:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/PaymentBreakDown'
      required:
        - data
    DepartmentsContainer:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Departments'
      required:
        - data
    WorkingLocationsContainer:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/WorkingLocations'
      required:
        - data
    InternalPeopleContainer:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/InternalPeople'
      required:
        - data
    PeopleContainer:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Employee'
        page:
          $ref: '#/components/schemas/PageInfoWithoutCursorNew'
      required:
        - data
    PeopleByIdContainer:
      type: object
      properties:
        data:
          allOf:
            - $ref: '#/components/schemas/Employee'
            - type: object
              properties:
                custom_fields:
                  type: array
                  items:
                    $ref: '#/components/schemas/PeopleCustomField'
      required:
        - data
    BankAccountGuideContainer:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/BankAccountGuide'
    BankAccountUpdatedContainer:
      type: object
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/BankAccountUpdated'
    WorkerTerminationContainer:
      type: object
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/WorkerTermination'
    WorkerBankAccountsInfoContainer:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/WorkerBankAccountInfo'
    EmployeePayslipsListContainer:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeePayslipsList'
    GPPayslipsListContainer:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Payslips'
    EORPayslipsListContainer:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Payslips'
    EmployeeTaxDocumentsListContainer:
      type: object
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/EmployeeTaxDocumentsList'
    ContractDocumentContainer:
      type: object
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/FileAttachmentInfo'
    PaymentBreakDown:
      type: object
      nullable: false
      properties:
        date:
          type: string
          example: '2022-10-01T00:59:28.482Z'
        general_ledger_account:
          type: string
          example: ''
        team:
          type: string
          example: Deel Inc.
        contractor_unique_identifier:
          description: Worker's unique identifier.
          type: string
          example: '12345'
        contractor_employee_name:
          description: Worker's name.
          type: string
          example: Jane Doe
        contractor_email:
          description: Worker's email.
          type: string
          example: name@email.com
        invoice_number:
          description: Invoice number.
          type: string
          example: '5069872'
        currency:
          description: Currency code.
          type: string
          example: USD
        payment_currency:
          type: string
          example: USD
        receipt_number:
          type: string
          example: '5551621'
        work:
          type: string
          example: '0.00'
        bonus:
          type: string
          example: '0.00'
        expenses:
          type: string
          example: '0.00'
        commissions:
          type: string
          example: '0.00'
        deductions:
          type: string
          example: '0.00'
        overtime:
          type: string
          example: '0.00'
        pro_rata:
          type: string
          example: '0.00'
        others:
          type: string
          example: '0.00'
        processing_fee:
          type: string
          example: '0.00'
        adjustment:
          type: string
          example: '0.00'
        total:
          description: Total due.
          type: string
          example: '1000.00'
        total_payment_currency:
          description: Total in payment currency.
          type: string
          example: '1000.00'
        payment_date:
          description: Date of payment.
          type: string
          example: '2022-11-01T17:20:32.837Z'
        frequency:
          type: string
          example: ''
        contract_country:
          description: Country of the contract.
          type: string
          example: US
        contract_start_date:
          description: Contract start date.
          type: string
          example: '2020-03-31T10:58:49.780Z'
        approvers:
          type: string
        approve_date:
          type: string
    Departments:
      type: object
      required:
        - id
        - name
      nullable: false
      properties:
        id:
          type: number
          example: 25599
        name:
          type: string
          example: Marketing
        parent:
          type: string
          nullable: true
          example: Growth
    WorkingLocations:
      type: array
      items:
        type: object
        required:
          - id
          - name
        properties:
          id:
            $ref: '#/components/schemas/UniqueObjectIdentifier'
          name:
            type: string
            example: Some locations
    InvoiceObject:
      type: object
      properties:
        rows:
          $ref: '#/components/schemas/InvoiceList'
    EmployeeAgreementDownloadObject:
      type: object
      properties:
        url:
          description: URL to requested employee agreement to download.
          type: string
          example: https://s3URL/letsdeel.com/employee-agreement/12345.pdf
        expires_at:
          description: Expiration date time of download URL.
          type: string
          format: date-time
          example: '2020-03-31T10:58:49.780Z'
    HRDocumentInfo:
      type: object
      required:
        - id
        - name
      properties:
        id:
          description: Document Id.
          type: string
        name:
          description: Name of the document.
          type: string
          example: Standard verification letter
    InvoiceDownloadObject:
      type: object
      required:
        - url
      properties:
        url:
          description: URL to requested invoice to download.
          type: string
          nullable: true
          example: https://s3URL/letsdeel.com/invoices/12345.pdf
    InvoiceListContainer:
      type: object
      x-internal: true
      required:
        - data
        - page
      properties:
        data:
          $ref: '#/components/schemas/InvoiceList'
        page:
          $ref: '#/components/schemas/PageInfoWithoutCursorNew'
    DeelInvoiceListContainer:
      type: object
      x-internal: true
      required:
        - data
        - page
      properties:
        data:
          $ref: '#/components/schemas/DeelInvoiceList'
        page:
          $ref: '#/components/schemas/PageInfoWithoutCursorNew'
    EmployeeAgreementDownloadContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/EmployeeAgreementDownloadObject'
    HrVerificationLettersAndDocumentsListContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/HRDocumentInfo'
    InvoiceDownloadContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/InvoiceDownloadObject'
    InvoiceList:
      type: array
      items:
        $ref: '#/components/schemas/Invoice'
    DeelInvoiceList:
      type: array
      items:
        $ref: '#/components/schemas/DeelInvoice'
    ExchangeRates:
      type: object
      properties:
        risk:
          type: number
        rates:
          type: object
          example:
            USD: 1
    GPClient:
      type: object
      required:
        - legal_entity
        - team
      properties:
        legal_entity:
          type: object
          required:
            - id
          properties:
            id:
              description: >-
                Enter the Id of the legal entity under which you want to hire
                this person. Use /legal-entities endpoint to retrieve a list of
                legal entities in your organization.
              $ref: '#/components/schemas/UniqueObjectIdentifier'
        team:
          type: object
          required:
            - id
          properties:
            id:
              description: >-
                Enter the Id of the team this person will be hired in. Use
                /teams endpoint to retrieve a list of teams in your
                organization.
              $ref: '#/components/schemas/UniqueObjectIdentifier'
    Invoice:
      type: object
      required:
        - id
        - status
        - currency
        - created_at
        - total
        - label
        - paid_at
        - vat_total
        - vat_percentage
        - vat_id
        - is_overdue
        - issued_at
        - due_date
        - contract_id
      properties:
        id:
          description: Unique identifier of the invoice.
          type: string
          example: rhCTiRd9Mad41RwjsFWw-
        status:
          $ref: '#/components/schemas/InvoiceStatusEnum'
        currency:
          $ref: '#/components/schemas/CurrencyCode'
        created_at:
          $ref: '#/components/schemas/DateTimeString'
        total:
          description: Total invoice amount including Fee and VAT.
          type: string
          example: 1000
        label:
          description: Label of the invoice.
          type: string
          example: INV-2023-4
        paid_at:
          $ref: '#/components/schemas/DateTimeString'
        vat_total:
          description: Amount of VAT.
          type: string
          nullable: true
          example: 210
        vat_percentage:
          description: VAT percentage.
          type: string
          nullable: true
          example: 21
        is_overdue:
          description: Indicates if the invoice is overdue.
          type: boolean
          nullable: true
          example: true
        issued_at:
          description: Timestamp when the invoice was issued.
          $ref: '#/components/schemas/DateString'
        vat_id:
          description: VAT identification number.
          type: string
          nullable: true
        due_date:
          description: Due date for the invoice payment.
          $ref: '#/components/schemas/DateString'
        contract_id:
          description: Due date for the invoice payment.
          $ref: '#/components/schemas/DateString'
    DeelInvoice:
      type: object
      required:
        - id
        - label
        - status
        - currency
        - total
        - created_at
      properties:
        id:
          description: Unique identifier of the invoice.
          type: string
          example: rhCTiRd9Mad41RwjsFWw-
        label:
          description: Label of the invoice.
          type: string
          example: INV-2023-4
        status:
          $ref: '#/components/schemas/InvoiceStatusEnum'
        currency:
          $ref: '#/components/schemas/CurrencyCode'
        total:
          description: Total invoice amount including Fee and VAT.
          type: string
          example: 1000
        created_at:
          $ref: '#/components/schemas/DateTimeString'
    InvoiceContractor:
      title: Contractor
      type: object
      required:
        - name
      properties:
        name:
          type: string
          default: ''
    HrisDirectEmployeeDetails:
      type: object
      properties:
        first_name:
          type: string
          minLength: 3
          maxLength: 100
          example: John
        last_name:
          type: string
          minLength: 3
          maxLength: 100
          example: Doe
        email:
          type: string
          minLength: 3
          maxLength: 255
          example: john.doe@domain.com
        work_email:
          type: string
          minLength: 3
          maxLength: 255
          example: john.doe@domain.com
        nationality:
          type: string
          minLength: 2
          maxLength: 2
          example: CA
        country:
          type: string
          minLength: 2
          maxLength: 2
          example: BR
        state:
          type: string
          minLength: 1
          maxLength: 50
          example: AC
      required:
        - first_name
        - last_name
        - email
        - work_email
        - nationality
        - country
    HrisTeamInformation:
      type: object
      properties:
        team_id:
          type: number
        legal_entity_id:
          type: number
      required:
        - team_id
        - legal_entity_id
    HrisJobInformationBase:
      type: object
      properties:
        seniority_id:
          type: number
      required:
        - seniority_id
    HrisJobInformationTitleId:
      allOf:
        - $ref: '#/components/schemas/HrisJobInformationBase'
        - type: object
          properties:
            job_title_id:
              type: number
          required:
            - seniority_id
            - job_title_id
    HrisJobInformationTitleName:
      allOf:
        - $ref: '#/components/schemas/HrisJobInformationBase'
        - type: object
          properties:
            job_title_name:
              type: string
              example: BE Software Engineer
          required:
            - seniority_id
            - job_title_name
    HrisCompensation:
      type: object
      properties:
        gross_annual_salary:
          type: number
          format: float
        currency:
          type: string
          minLength: 3
          maxLength: 3
          example: USD
      required:
        - gross_annual_salary
        - currency
    HrisContractBase:
      type: object
      properties:
        contract_oid:
          description: The Hris Direct employee contract ID
          type: string
          example: pdcMQe0cXCCXWTkqkdytw
        start_date:
          $ref: '#/components/schemas/DateStringRequired'
        employee_number:
          type: number
        end_date:
          $ref: '#/components/schemas/DateString'
      required:
        - start_date
        - employment_type
        - contract_oid
    HrisDirectEmployee:
      type: object
      required:
        - employee_details
        - team_information
        - job_information
        - compensation
        - contract
      properties:
        employee_details:
          $ref: '#/components/schemas/HrisDirectEmployeeDetails'
        team_information:
          $ref: '#/components/schemas/HrisTeamInformation'
        job_information:
          oneOf:
            - $ref: '#/components/schemas/HrisJobInformationTitleId'
            - $ref: '#/components/schemas/HrisJobInformationTitleName'
        compensation:
          $ref: '#/components/schemas/HrisCompensation'
        contract:
          oneOf:
            - $ref: '#/components/schemas/HrisContractBase'
            - $ref: '#/components/schemas/HrisContractBase'
        vacation_info:
          type: object
          nullable: true
          properties:
            vacation_accrual_start_date:
              type: string
              format: date
            vacation_yearly_policy:
              type: number
              minimum: 1
              maximum: 365
          required:
            - vacation_accrual_start_date
            - vacation_yearly_policy
    HrisDirectEmployeeResponse:
      allOf:
        - $ref: '#/components/schemas/HrisDirectEmployee'
        - type: object
          properties:
            id:
              description: The Hris Direct employee ID
              type: string
              example: 6733c95b-df52-419e-906d-6904d3117dab
    HrisDirectEmployeeContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/HrisDirectEmployeeResponse'
    PeopleClientLegalEntity:
      type: object
      properties:
        id:
          description: The unique identifier for the client legal entity.
          $ref: '#/components/schemas/UniqueObjectIdentifier'
        name:
          description: The name of the client legal entity.
          type: string
    PeoplePayment:
      type: object
      properties:
        rate:
          description: The payment rate
          type: number
        scale:
          description: The payment scale (e.g., hourly, weekly, monthly, etc.)
          type: string
        currency:
          description: The currency code (ISO 4217) for the payment
          type: string
        contract_name:
          description: The name of the contract associated with the payment
          type: string
    Employment:
      type: object
      properties:
        id:
          description: Unique identifier for the employment.
          type: string
        name:
          description: The name of the employment.
          type: string
        team:
          description: The team associated with the employment.
          $ref: '#/components/schemas/Team'
        email:
          description: The email associated with the employment.
          type: string
        state:
          description: The state associated with the employment.
          type: string
        country:
          description: The country associated with the employment.
          type: string
        payment:
          description: The payment information associated with the employment.
          $ref: '#/components/schemas/PeoplePayment'
        is_ended:
          description: Indicates whether the employment has ended.
          type: boolean
        timezone:
          description: The timezone associated with the employment.
          type: string
        job_title:
          description: The job title associated with the employment.
          type: string
        seniority:
          description: The seniority level associated with the employment.
          type: string
        start_date:
          description: The start date of the employment.
          type: string
        work_email:
          description: The work email associated with the employment.
          type: string
        hiring_type:
          description: The hiring type associated with the employment.
          type: string
        hiring_status:
          description: The hiring status associated with the employment.
          type: string
        completion_date:
          description: The completion date of the employment.
          type: string
        contract_status:
          description: The contract status associated with the employment.
          type: string
        voluntarily_left:
          description: Indicates whether the employment was left voluntarily.
          type: boolean
        client_legal_entity:
          description: The client legal entity associated with the employment.
          $ref: '#/components/schemas/PeopleClientLegalEntity'
        has_eor_termination:
          description: Indicates whether the employment had an EOR termination.
          type: boolean
        contract_is_archived:
          description: Indicates whether the employment's contract is archived.
          type: boolean
    MonthlyPayment:
      description: Monthly payment details for the user
      type: object
      properties:
        count:
          description: The number of monthly payments
          type: integer
    Team:
      type: object
      properties:
        id:
          description: The unique identifier for the team.
          $ref: '#/components/schemas/UniqueObjectIdentifier'
        name:
          description: The name of the team.
          type: string
    InternalPeople:
      description: People object representing a Deel
      type: object
      properties:
        id:
          description: Unique identifier for the user
          type: string
        first_name:
          description: First name of the user
          type: string
        last_name:
          description: Last name of the user
          type: string
        full_name:
          description: Full name of the user
          type: string
        email:
          description: Email address of the user
          type: string
        work_email:
          description: Work email address of the user
          type: string
        personal_email:
          description: Personal email address of the user
          type: string
        country_name:
          description: Name of the country where the user is located
          type: string
        birth_date:
          description: Date of birth of the user in ISO format (yyyy-mm-dd)
          type: string
        pic_url:
          description: URL of the user's profile picture
          type: string
        start_date:
          description: >-
            Date when the user started their current employment in ISO format
            (yyyy-mm-dd)
          type: string
        payments:
          description: List of payment objects representing the user's payment history
          type: array
          items:
            $ref: '#/components/schemas/Payment'
        hourly_report_total:
          description: Total amount of hours worked by the user in ISO format (hh:mm:ss)
          type: string
        client_legal_entity:
          description: >-
            Object representing the client legal entity that the user is
            associated with
          $ref: '#/components/schemas/PeopleClientLegalEntity'
        state:
          description: State where the user is located
          type: string
        seniority:
          description: Seniority level of the user's role
          type: string
        completion_date:
          description: >-
            Date when the user's current employment is expected to end in ISO
            format (yyyy-mm-ddThh:mm:ss.sssZ)
          type: string
        monthly_payment:
          description: Object representing the user's monthly payment information
          $ref: '#/components/schemas/MonthlyPayment'
        direct_manager:
          description: Name of the user's direct manager
          type: string
        direct_reports:
          description: Names of the user's direct reports
          type: string
        direct_reports_count:
          description: Number of direct reports that the user has
          type: integer
        employments:
          description: >-
            List of employment objects representing the user's employment
            history
          type: array
          items:
            $ref: '#/components/schemas/Employment'
        hiring_status:
          description: Hiring status of the user
          type: string
        hiring_type:
          description: Type of employment contract that the user has
          type: string
        job_title:
          description: Title of the user's role
          type: string
        country:
          description: ISO 3166-1 alpha-2 code of the country where the user is located
          type: string
        team_id:
          description: Unique identifier for the team that the user belongs to
          type: integer
        team:
          description: Name of the team that the user belongs to
          type: string
        timezone:
          description: Time zone of the user's location
          type: string
        department:
          description: Name of the department that the user belongs to
          type: string
        work_location:
          description: Name of the user's work location
          type: string
        contract_types:
          description: >-
            List of contract types that the user has had in the past and/or
            currently has
          type: array
          items:
            type: string
        has_deel_user:
          description: Indicates whether the user has a Deel account or not
          type: boolean
    PeopleMe:
      description: People object representing a Deel
      type: object
      properties:
        id:
          description: Unique identifier for the user profile
          type: number
        user_id:
          description: Unique identifier for the user
          type: number
        username:
          description: Username of the user
          type: string
        first_name:
          description: First name of the user
          type: string
        middle_name:
          description: Middle name of the user
          type: string
          nullable: true
        last_name:
          description: Last name of the user
          type: string
        full_name:
          description: Full name of the user
          type: string
        email:
          description: Email address of the user
          type: string
        avatar_url:
          description: URL of the user's avatar
          type: string
          nullable: true
        profile_type:
          $ref: '#/components/schemas/ProfileTypeEnum'
        slack_user_id:
          description: User's slack id
          type: string
          nullable: true
        slack_team_id:
          description: User's team slack id
          type: string
          nullable: true
        organization_id:
          description: Unique identifier for the organization
          type: number
        organization_name:
          description: Name of the organization
          type: string
          nullable: true
        client_country:
          $ref: '#/components/schemas/CountryCodeNulleable'
        contractor_country:
          $ref: '#/components/schemas/CountryCodeNulleable'
        hris_enabled:
          description: HRIS feature enabled.
          type: boolean
          nullable: true
      x-konfig-properties: {}
    ContractPreview:
      type: string
    UniqueObjectIdentifier:
      description: Unique identifier of this resource.
      type: string
      example: 00000000-0000-0000-0000-000000000000
    PublicId:
      description: The public UUID of the object
      type: string
      format: uuid
      nullable: true
      example: 00000000-0000-0000-0000-000000000000
    InviteTeamMemberToSign:
      type: object
      required:
        - contract_oid
        - contract_name
        - invitee_id
        - invitee_name
      properties:
        contract_oid:
          type: string
          nullable: false
        contract_name:
          type: string
          nullable: false
        invitee_id:
          type: number
          nullable: false
        invitee_name:
          type: string
          nullable: false
    ContractAmendmentSentToClient:
      type: object
      required:
        - contract_oid
        - contract_name
        - client_id
        - client_name
      properties:
        contract_oid:
          type: string
          nullable: false
        contract_name:
          type: string
          nullable: false
        client_id:
          type: number
          nullable: false
        client_name:
          type: string
          nullable: false
    InvoiceAdjustmentPendingForApproval:
      type: object
      required:
        - contract_name
        - contract_oid
        - adjustment_id
        - adjustment_type
        - event_type
      properties:
        team_id:
          type: string
          nullable: false
        contract_name:
          type: string
          nullable: false
        contract_oid:
          type: string
          nullable: false
        adjustment_id:
          type: string
          nullable: false
        adjustment_type:
          type: string
          nullable: false
        approvers:
          type: array
          items:
            type: object
            required:
              - id
              - name
            properties:
              id:
                type: string
              name:
                type: string
        event_type:
          type: string
          nullable: false
    AdminUser:
      type: object
      required:
        - id
        - first_name
        - last_name
        - email
      properties:
        id:
          description: Admin user profile id.
          $ref: '#/components/schemas/UniqueObjectIdentifier'
          nullable: false
        first_name:
          description: User's first name
          type: string
          nullable: false
        last_name:
          description: User's last name
          nullable: false
          type: string
        email:
          description: User's email
          type: string
          format: email
    AdminUserCreateRequest:
      type: object
      required:
        - first_name
        - last_name
        - email
      properties:
        first_name:
          description: User's first name
          type: string
          nullable: false
          minLength: 1
        last_name:
          description: User's last name
          type: string
          nullable: false
          minLength: 1
        email:
          description: User's email
          type: string
          nullable: false
          format: email
    AdminUsersContainer:
      type: object
      x-internal: true
      required:
        - data
        - page
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/AdminUser'
        page:
          $ref: '#/components/schemas/PageInfoWithoutCursorNew'
    CreateAdminUserResponseContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/AdminUser'
    Address:
      type: object
      properties:
        streetAddress:
          description: Street and number.
          type: string
          example: Deel Street 500
        locality:
          description: Locality name.
          type: string
          example: Denver
        region:
          description: Region code.
          type: string
          example: CO
        postalCode:
          description: Postal code.
          type: string
          example: '44000'
        country:
          $ref: '#/components/schemas/CountryCode'
    Employee:
      type: object
      properties:
        id:
          description: Unique identifier for the employee.
          type: string
          example: 9b9fc43a-a90c-4615-ac50-baf1e314b53e
        created_at:
          description: The creation timestamp of the employee record.
          type: string
          format: date-time
          example: '2023-03-21T10:27:25.950Z'
        first_name:
          description: The first name of the employee.
          type: string
          example: John
        last_name:
          description: The last name of the employee.
          type: string
          example: Doe
        full_name:
          description: The full name of the employee.
          type: string
          example: John Doe
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Address'
        emails:
          description: An array of the employee's email addresses.
          type: array
          items:
            $ref: '#/components/schemas/Email'
        birth_date:
          description: The birth date of the employee.
          type: string
          example: '1990-01-01T00:00:00.000Z'
        start_date:
          description: The date the employee started working.
          type: string
          format: date
          example: '2023-03-20T00:00:00.000Z'
        nationality:
          description: The nationality of the employee.
          type: string
          example: American
        client_legal_entity:
          description: The legal entity of the client.
          $ref: '#/components/schemas/PeopleClientLegalEntity'
        state:
          description: The state of the employee.
          type: string
          example: Active
        seniority:
          description: The seniority level of the employee.
          type: string
          example: Junior (Individual Contributor Level 1)
        completion_date:
          description: The completion date of the task or project.
          nullable: true
          type: string
          example: '2023-06-20T00:00:00.000Z'
        direct_manager:
          description: The direct manager of the employee.
          type: object
          nullable: false
          properties:
            id:
              type: string
              example: 642b0547-9d80-4d35-a085-fd977ef209ef
            last_name:
              type: string
              example: John
            first_name:
              type: string
              example: Doe
            work_email:
              type: string
              example: john.doe@example.com
        direct_reports:
          description: The direct reports to the employee.
          type: array
          items:
            type: object
            nullable: false
            properties:
              id:
                type: string
                example: 642b0547-9d80-4d35-a085-fd977ef209ef
              last_name:
                type: string
                example: John
              first_name:
                type: string
                example: Doe
              work_email:
                type: string
                example: john.doe@example.com
        direct_reports_count:
          description: The count of direct reports to the employee.
          type: integer
          example: 0
        employments:
          description: An array of the employee's employment details.
          type: array
          items:
            $ref: '#/components/schemas/EmploymentDetail'
        hiring_status:
          description: The current hiring status of the employee.
          type: string
          example: onboarding
        new_hiring_status:
          description: The new hiring status of the employee.
          type: string
          example: onboarding_overdue
        hiring_type:
          description: The type of hiring of the employee.
          type: string
          example: contractor
        job_title:
          description: The job title of the employee.
          type: string
          example: Access Field Technician
        country:
          description: The country of the employee.
          type: string
          example: USA
        timezone:
          description: The timezone of the employee.
          type: string
          example: EST
        department:
          description: The department of the employee.
          type: object
          properties:
            id:
              $ref: '#/components/schemas/UniqueObjectIdentifier'
            name:
              type: string
              example: Delivery team
            parent:
              type: string
              example: Research and Development
        work_location:
          description: The work location of the employee.
          type: string
          example: Remote
        updated_at:
          description: Date time of the last update.
          $ref: '#/components/schemas/DateTimeString'
    Email:
      type: object
      properties:
        type:
          description: The type of email.
          type: string
          example: work
          enum:
            - work
        value:
          description: The email address.
          type: string
          example: work.email@example.com
        primary:
          type: boolean
          default: false
          example: true
      required:
        - type
        - value
    EmploymentDetail:
      type: object
      properties:
        id:
          description: Unique identifier for the employment.
          type: string
          example: mzj524j
        name:
          description: Name of the employee.
          type: string
          example: Khizar Naeem
        team:
          description: The team to which the employee belongs.
          type: object
          properties:
            id:
              $ref: '#/components/schemas/UniqueObjectIdentifier'
            name:
              description: The team name.
              type: string
        email:
          description: The work email of the employee.
          type: string
          example: some@example.com
        state:
          description: The state of employment.
          type: string
          example: Active
        country:
          description: The country of employment.
          type: string
          example: USA
        payment:
          description: The payment information associated with the employment.
          $ref: '#/components/schemas/PeoplePayment'
        is_ended:
          description: Whether the employment has ended.
          type: boolean
          example: false
        timezone:
          description: The timezone of the employment.
          type: string
          example: EST
        job_title:
          description: The job title of the employment.
          type: string
          example: Access Field Technician
        seniority:
          description: The seniority level of the employment.
          type: string
          example: Junior (Individual Contributor Level 1)
        start_date:
          description: The start date of the employment.
          type: string
          format: date
          example: '2023-03-20T00:00:00.000Z'
        work_email:
          description: The work email of the employment.
          type: string
          example: work.email@example.com
        hiring_type:
          description: The type of hiring of the employment.
          type: string
          example: contractor
        hiring_status:
          description: The current hiring status of the employment.
          type: string
          example: onboarding
        completion_date:
          description: The completion date of the employment contract.
          type: string
          example: '2023-06-20T00:00:00.000Z'
        contract_status:
          description: The status of the employment contract.
          type: string
          example: waiting_for_client_sign
        voluntarily_left:
          description: Whether the employee voluntarily left the employment.
          type: string
          example: 'No'
        contract_coverage:
          description: The coverage of the employment contract.
          type: array
          items:
            type: string
          example:
            - no_coverage
        new_hiring_status:
          description: The new hiring status of the employment.
          type: string
          example: onboarding_overdue
        client_legal_entity:
          description: The legal entity of the client in the employment.
          $ref: '#/components/schemas/PeopleClientLegalEntity'
        has_eor_termination:
          description: Whether the employment has an EOR termination.
          type: string
          example: 'No'
        contract_is_archived:
          description: Whether the employment contract is archived.
          type: boolean
          example: false
        contract_has_contractor:
          description: Whether the contract has a contractor.
          type: boolean
          example: true
        is_user_contract_deleted:
          description: Whether the user contract is deleted.
          type: boolean
          example: false
        hris_direct_employee_invitation:
          description: The HRIS direct employee invitation status.
          type: string
          example: Invited
    LetterRequest:
      type: object
      required:
        - description
        - type
      properties:
        description:
          description: Description of the letter (minimum 25 characters)
          type: string
          minLength: 25
        includeQRCode:
          description: Flag indicating whether to include a QR code
          type: boolean
        type:
          type: string
          enum:
            - VISA_APPLICATION_FOR_PERSONAL_TRIP
            - VISA_APPLICATION_FOR_BUSINESS_TRIP
            - VISA_RENEWAL_CERTIFICATE
            - NO_OBJECTION_CERTIFICATE_FOR_TRAVELLING
            - BANK_VERIFICATION_OR_SALARY_CERTIFICATE
            - CUSTOMISED
    FileAttachment:
      type: object
      properties:
        key:
          description: Unique key for the file
          type: string
        name:
          description: Name of the file
          type: string
    AdditionalEORInfo:
      description: >-
        Fields for country validation mandatory found at
        `/eor/validations/{country_code}`.
    BankGuide:
      type: object
      properties:
        key:
          type: string
        name:
          type: string
        type:
          type: string
        required:
          type: boolean
        values_allowed:
          type: array
          items:
            type: object
            properties:
              key:
                type: string
              name:
                type: string
        validations:
          type: object
          properties:
            regex:
              type: string
            minLength:
              type: integer
            maxLength:
              type: integer
    BankAccountUpdated:
      type: object
      required:
        - id
        - status
        - created_at
        - updated_at
      properties:
        id:
          type: string
        status:
          type: string
        created_at:
          $ref: '#/components/schemas/DateTimeStringRequired'
        updated_at:
          $ref: '#/components/schemas/DateTimeStringRequired'
    WorkerTermination:
      type: object
      required:
        - id
        - last_date_of_work
      properties:
        id:
          type: string
        last_date_of_work:
          $ref: '#/components/schemas/DateTimeStringRequired'
    CreatePublicTokenContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/CreatePublicToken'
    PublicTokenCreatedContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/PublicToken'
    CreatePublicToken:
      type: object
      properties:
        scope:
          description: Access scopes.
          type: array
          items:
            type: string
            example: contracts:read
    PublicToken:
      type: object
      required:
        - token
      properties:
        token:
          description: Public token.
          type: string
          example: eXampL3.t0Ken
    InvoiceDownloadLinkContainer:
      type: object
      x-internal: true
      required:
        - data
      properties:
        data:
          $ref: '#/components/schemas/InvoiceDownloadObject'
    UsersSearchForm:
      description: Convenient model to encapsulate query parameters to get a list of users.
      type: object
      properties:
        count:
          $ref: '#/components/schemas/UsersParamLimit'
        startIndex:
          $ref: '#/components/schemas/UsersParamOffset'
    UsersParamLimit:
      description: >-
        Maximum number of records to return. This is supposed to be an integer
        but query parameters are string. 1 to 100.
      type: string
      pattern: ^[0-9][0-9]?$|^100$
      nullable: false
      default: '50'
      minimum: 0
      maximum: 100
    UsersParamOffset:
      description: >-
        Offset/index of record for the next page of records to return (1 to
        999999999999999).
      type: string
      pattern: ^[1-9]\d{0,14}$
      nullable: false
      minimum: 1
      default: '1'
    AuthenticationScheme:
      type: object
      properties:
        description:
          type: string
        documentationUrl:
          type: string
        name:
          type: string
        specUrl:
          type: string
    AuthenticationSchemes:
      type: object
      properties:
        authenticationSchemes:
          type: array
          items:
            $ref: '#/components/schemas/AuthenticationScheme'
    BulkSupported:
      type: object
      properties:
        maxOperations:
          type: integer
          format: int32
        maxPayloadSize:
          type: integer
          format: int32
        supported:
          type: boolean
          default: false
    EnterpriseUser:
      type: object
      properties:
        department:
          description: Employee's department in Deel HR.
          type: string
          example: Engineering
        costCenter:
          description: Legal entity.
          type: string
          example: 12345
        organization:
          description: Organization name in Deel.
          type: string
          example: 45321
        manager:
          $ref: '#/components/schemas/Manager'
    ErrorResponse:
      type: object
      properties:
        detail:
          description: detail error message
          type: string
        schemas:
          type: array
          items:
            type: string
            enum:
              - urn:ietf:params:scim:api:messages:2.0:Error
        scimType:
          description: bad request type when status code is 400
          type: string
          enum:
            - uniqueness
            - tooMany
            - mutability
            - sensitive
            - invalidSyntax
            - invalidFilter
            - invalidPath
            - invalidValue
            - invalidVers
            - noTarget
        status:
          description: same as HTTP status code, e.g. 400, 401, etc.
          type: string
    FilterSupported:
      type: object
      properties:
        maxResults:
          type: integer
          format: int32
        supported:
          type: boolean
          default: false
    Meta:
      description: Resource metadata.
      type: object
      properties:
        created:
          type: string
          format: date-time
        lastModified:
          type: string
          format: date-time
        location:
          description: resource location URI
          type: string
        resourceType:
          type: string
          enum:
            - User
            - Group
    Name:
      required:
        - familyName
        - givenName
      type: object
      properties:
        familyName:
          description: User's family name.
          type: string
          example: Doe
        givenName:
          description: User's given name. Also known as first name.
          type: string
          example: Jane
    PatchOperation:
      required:
        - op
      type: object
      properties:
        op:
          type: string
          enum:
            - add
            - replace
            - remove
        path:
          type: string
        value:
          description: corresponding 'value' of that field specified by 'path'
          oneOf:
            - type: string
            - type: object
              properties: {}
    SearchRequest:
      type: object
      properties:
        count:
          description: page size
          type: integer
          format: int32
        filter:
          description: only support 'userName' or 'email' filter expressions for now
          type: string
        schemas:
          type: array
          items:
            type: string
            enum:
              - urn:ietf:params:scim:api:messages:2.0:SearchRequest
        startIndex:
          description: start index (1-based)
          type: integer
          format: int32
    ServiceProviderConfig:
      type: object
      properties:
        authenticationSchemes:
          $ref: '#/components/schemas/AuthenticationSchemes'
        bulk:
          $ref: '#/components/schemas/BulkSupported'
        changePassword:
          $ref: '#/components/schemas/Supported'
        etag:
          $ref: '#/components/schemas/Supported'
        filter:
          $ref: '#/components/schemas/FilterSupported'
        patch:
          $ref: '#/components/schemas/Supported'
        schemas:
          type: array
          items:
            type: string
            enum:
              - urn:ietf:params:scim:schemas:core:2.0:ServiceProviderConfig
        sort:
          $ref: '#/components/schemas/Supported'
        xmlDataFormat:
          $ref: '#/components/schemas/Supported'
    Supported:
      type: object
      properties:
        supported:
          type: boolean
          default: false
    User:
      required:
        - emails
        - name
        - schemas
        - userName
        - meta
      type: object
      properties:
        title:
          description: Job title.
          type: string
          example: Software Engineer
        active:
          description: >-
            Hiring status. True if user employment is active. False if
            employment is not active.
          type: boolean
          default: false
        emails:
          type: array
          items:
            $ref: '#/components/schemas/Email'
        userType:
          description: User type.
          type: string
          example: employee
        id:
          description: Unique resource id (UUID) defined by Deel.
          type: string
          example: 97b727b8-bdb5-11ed-afa1-0242ac120002
        name:
          $ref: '#/components/schemas/Name'
        schemas:
          type: array
          items:
            type: string
            enum:
              - urn:ietf:params:scim:schemas:core:2.0:User
        urn:ietf:params:scim:schemas:extension:enterprise:2.0:User:
          $ref: '#/components/schemas/EnterpriseUser'
        urn:ietf:params:scim:schemas:extension:2.0:User:
          $ref: '#/components/schemas/UserExtension'
        userName:
          description: User's work email.
          type: string
          example: work.email@example.com
        meta:
          type: object
          properties:
            version:
              description: Latest version of resource.
              type: string
              example: W/a330bc54f0671c9
            created:
              description: Time at which the resource was created.
              type: string
              example: '2023-02-04T18:03:18.796Z'
            lastModified:
              description: Time at which the resource was last modified.
              type: string
              example: '2023-02-04T18:03:18.796Z'
            resourceType:
              description: Resource type.
              type: string
              example: User
            location:
              description: API endpoint to retrieve resource.
              type: string
              example: >-
                https://api.letsdeel.com/scim/v2/Users/97b727b8-bdb5-11ed-afa1-0242ac120002
    UserPatch:
      required:
        - Operations
        - schemas
      type: object
      properties:
        Operations:
          description: patch operations list
          type: array
          items:
            $ref: '#/components/schemas/PatchOperation'
        schemas:
          type: array
          items:
            type: string
            enum:
              - urn:ietf:params:scim:api:messages:2.0:PatchOp
    CreateClientUser:
      required:
        - schemas
        - userName
        - name
        - userType
      type: object
      properties:
        schemas:
          description: Schema URNs.
          type: array
          items:
            type: string
            enum:
              - urn:ietf:params:scim:schemas:core:2.0:User
          example:
            - urn:ietf:params:scim:schemas:core:2.0:User
        userName:
          description: User's email.
          type: string
          example: work@email.com
        name:
          type: object
          properties:
            familyName:
              description: Family name of the user.
              type: string
              example: Jensen
            givenName:
              description: Given name of the user.
              type: string
              example: Barbara
        userType:
          description: Type of user.
          type: string
          enum:
            - client
          example: client
    UserResponse:
      allOf:
        - $ref: '#/components/schemas/User'
        - type: object
          properties:
            meta:
              $ref: '#/components/schemas/Meta'
    UserSearchResponse:
      type: object
      properties:
        Resources:
          description: User list.
          type: array
          items:
            $ref: '#/components/schemas/UserResponse'
        itemsPerPage:
          type: integer
          format: int64
        schemas:
          type: array
          items:
            type: string
            enum:
              - urn:ietf:params:scim:api:messages:2.0:ListResponse
        startIndex:
          description: Start index of the current page.
          type: integer
          format: int64
        totalResults:
          type: integer
          format: int64
    Manager:
      required:
        - value
      type: object
      properties:
        value:
          description: Manager's unique identifier.
          type: string
          example: b29a5ff0-bdb5-11ed-afa1-0242ac120002
    UserExtension:
      type: object
      properties:
        startDate:
          description: Start date of employment.
          type: string
          format: date-time
        endDate:
          description: End date of employment.
          type: string
          format: date-time
        state:
          description: State code.
          type: string
          nullable: true
          example: CO
        country:
          description: Country code.
          type: string
          nullable: true
          example: US
        employments:
          type: array
          nullable: true
          items:
            type: object
            nullable: true
            properties:
              title:
                description: Contract title
                type: string
                nullable: true
                example: International Factors Developer
              contractId:
                description: Contract identifier.
                type: string
                example: av4bt56
              startDate:
                description: Contract start date.
                type: string
                example: '2023-04-26'
                nullable: true
              contractType:
                description: Type of Deel contract
                type: string
                example: eor
                nullable: true
              active:
                description: Indicates if the contract is currently active.
                type: boolean
                example: true
                default: false
              state:
                description: State code.
                type: string
                nullable: true
                example: CO
              country:
                description: Country code.
                type: string
                example: US
                nullable: true
    GlobalPayrollDownloadGrossToNetGpReportResponse:
      type: string
    UserDeleteUserResponse:
      type: object
      properties: {}
      example: {}
  securitySchemes:
    deelToken:
      description: >
        ## Authentication


        Deel API uses API tokens to authenticate requests. A bearer token is
        required to authenticate all API requests.


        All API requests must be made over HTTPS. Calls made over plain HTTP
        will fail. API requests without authentication will also fail.


        ```

        curl -X GET 'api.letsdeel.com/rest/v2/contracts' \

        -H 'Authorization: Bearer YOUR-TOKEN-HERE'

        ```


        ### Generating Access Tokens

        1. Navigate to **Apps & Perks > Developer Center**.

        2. Click on the “Generate New Token” button.

        3. In the popup, click “Generate Token” button to generate a new token.
        Your newly generated token is visible on the screen.

        4. Make sure to copy and save your token once is generated. You won't be
        able to see it again!


        ![image](developers.png)
      type: http
      scheme: bearer
      bearerFormat: JWT
    oauth2:
      description: >-
        Standard OAuth2 security scheme based on
        https://swagger.io/docs/specification/authentication/
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://auth.deel.com/authorize
          tokenUrl: https://auth.deel.com/tokens
          scopes:
            accounting:read: View payments and invoices in your organization.
            accounting:write: Create and edit payments and invoices.
            candidates:read: View candidates in your organization.
            candidates:write: Create, edit and delete candidates in your organization.
            contracts:read: View contracts in your organization.
            contracts:write: Create and amend contracts.
            invoice-adjustments:read: View invoices of your workforce.
            invoice-adjustments:write: Create, edit, review, and delete invoice adjustments.
            milestones:read: View milestones of your contractors.
            milestones:write: Create, edit, review, and delete milestones.
            organizations:read: >-
              View basic information about your organizations, teams, legal
              entities and agreements.
            organizations:write: >-
              Modify information in your organization. Create, edit, delete
              admin users or managers.
            off-cycle-payments:read: View your off-cycle payments.
            off-cycle-payments:write: Create, edit, review your off-cycle payments.
            timesheets:read: View work submitted for time-based contracts.
            timesheets:write: Create, edit, review, and delete timesheets.
            tasks:read: View your pay-as-you-go tasks.
            tasks:write: Create, edit, review and delete your pay-as-you-go tasks.
            payslips:read: View employee payslips.
            payslips:write: Create, edit, review and delete employee payslips.
            public-token:write: Create, edit, review and delete public tokens.
            Users:read: View basic information about users.
            Users:write: Create and update users.
externalDocs:
  description: Find out more about Deel APIs.
  url: https://developer.letsdeel.com
x-readme:
  explorer-enabled: true
  proxy-enabled: true
_id: 65f2fdc201c6940013319730
