openapi: 3.0.3
info:
  title: Visier Permission Management APIs
  description: Visier APIs for managing permissions within an organization
  version: 22222222.99201.1256
  license:
    name: Apache License, Version 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  x-api-status-urls: false
servers:
  - url: https://{vanity-name}.api.visier.io
    variables:
      vanity-name:
        default: vanity
tags:
  - name: PermissionManagement
paths:
  /v1/admin/capabilities:
    get:
      tags:
        - PermissionManagement
      summary: Retrieve a list of all permission capabilities
      operationId: PermissionManagement_GetCapabilities
      description: >-
        This API allows you to retrieve all the permission capabilities in your
        tenant.
         You can use the returned capabilities in other API calls when creating or updating permissions to assign the capability to the permission.

         <br>**Note:** <em>This API is in **limited availability**. If you are interested in using it, please contact your Customer Success Manager (CSM).</em>
      parameters:
        - description: Specify the tenant to retrieve the capabilities from.
          name: tenantCode
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCapabilitiesAPIResponseDTO'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /v1/admin/capabilities/{capabilityId}:
    get:
      tags:
        - PermissionManagement
      summary: Retrieve a permission capability's details
      operationId: PermissionManagement_GetCapability
      description: |-
        This API allows you to retrieve the details of a specific capability.

         <br>**Note:** <em>This API is in **limited availability**. If you are interested in using it, please contact your Customer Success Manager (CSM).</em>
      parameters:
        - description: The unique identifier of the capability you want to retrieve.
          name: capabilityId
          in: path
          required: true
          schema:
            type: string
        - description: Specify the tenant to retrieve a capability from.
          name: tenantCode
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapabilityDTO'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /v1/admin/content-packages:
    get:
      tags:
        - PermissionManagement
      summary: Retrieve a list of all content packages
      operationId: PermissionManagement_GetContentPackages
      description: |-
        This API allows you to retrieve the list of available content packages.
         You can use the returned content packages in other API calls when creating or updating permissions to add the content package to the permission.

         <br>**Note:** <em>This API is in **limited availability**. If you are interested in using it, please contact your Customer Success Manager (CSM).</em>
      parameters:
        - description: Specify the tenant to retrieve the content packages from.
          name: tenantCode
          in: query
          schema:
            type: string
        - description: >-
            Optional search string to return only content packages whose display
            name or description contains that search string.
             If searchString is empty or not provided, the response returns a list of all content packages.
          name: searchString
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetContentPackagesAPIResponseDTO'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /v1/admin/content-packages/{contentPackageId}:
    get:
      tags:
        - PermissionManagement
      summary: Retrieve a content package's details
      operationId: PermissionManagement_GetContentPackage
      description: >-
        This API allows you to retrieve the details of a specific content
        package.

         <br>**Note:** <em>This API is in **limited availability**. If you are interested in using it, please contact your Customer Success Manager (CSM).</em>
      parameters:
        - description: The unique identifier of the content package you want to retrieve.
          name: contentPackageId
          in: path
          required: true
          schema:
            type: string
        - description: Specify the tenant to retrieve a content package from.
          name: tenantCode
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentPackageDTO'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /v1/admin/data-security-objects:
    get:
      tags:
        - PermissionManagement
      summary: Retrieve a list of data security objects
      operationId: PermissionManagement_GetDataSecurityObjects
      description: >-
        This API allows you to retrieve the list of available data security
        objects.
         Data security objects are analytic objects and their related objects that are available to define
         permissionsâ€™ data security profiles.

         <br>**Note:** <em>This API is in **limited availability**. If you are interested in using it, please contact your Customer Success Manager (CSM).</em>
      parameters:
        - description: >-
            The unique identifiers of the data security objects (analytic
            objects) to retrieve.
             Default is all data security objects.
          name: id
          in: query
          schema:
            type: array
            items:
              type: string
        - description: >-
            If `true`, the response includes the analytic objects (display name,
            ID, and object type), related objects,
             securable properties, and securable dimensions. If `false`, the response only includes analytic objects
             (display name, ID, and object type). Default is `false`.
          name: includeDetails
          in: query
          schema:
            type: boolean
        - description: Specify the tenant to retrieve data security objects from.
          name: tenantCode
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDataSecurityObjectsAPIResponseDTO'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /v1/admin/permissions:
    get:
      tags:
        - PermissionManagement
      summary: Retrieve a list of all permissions
      operationId: PermissionManagement_GetPermissions
      description: >-
        This API allows you to retrieve the full list of user permissions in
        your tenant.

         <br>**Note:** <em>This API is in **limited availability**. If you are interested in using it, please contact your Customer Success Manager (CSM).</em>
      parameters:
        - description: Specify the tenant to retrieve the permissions from.
          name: tenantCode
          in: query
          schema:
            type: string
        - description: >-
            If `true`, returns the permission's details. If `false`, only
            returns the permissions' ID, display name,
             and description. Default is `false`.
          name: includeDetails
          in: query
          schema:
            type: boolean
        - description: >-
            If `true`, returns the validity statuses for the permission's
            properties in data access sets and the
             permission's dimensions, dimension members, and hierarchy properties in member filters. If `false`,
             doesn't return validity status information. Default is `false`.
          name: includeDetailsWithStatus
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPermissionsAPIResponseDTO'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
    put:
      tags:
        - PermissionManagement
      summary: Update permissions
      operationId: PermissionManagement_UpdatePermissions
      description: |-
        This API allows you to update existing permissions.

         <br>**Note:** <em>This API is in **limited availability**. If you are interested in using it, please contact your Customer Success Manager (CSM).</em>
      parameters:
        - description: Specify the tenant to update permissions in.
          name: tenantCode
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionsListDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionBulkOperationResponseDTO'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
    post:
      tags:
        - PermissionManagement
      summary: Create permissions
      operationId: PermissionManagement_CreatePermissions
      description: >-
        This API allows you to create new permissions. Administrating tenant
        users can specify the tenant in which to add these permissions.

         <br>**Note:** <em>This API is in **limited availability**. If you are interested in using it, please contact your Customer Success Manager (CSM).</em>
      parameters:
        - description: Specify the tenant to create permissions in.
          name: tenantCode
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionsListDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionBulkOperationResponseDTO'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
    delete:
      tags:
        - PermissionManagement
      summary: Delete permissions
      operationId: PermissionManagement_DeletePermissions
      description: |-
        This API allows you to delete existing permissions.

         <br>**Note:** <em>This API is in **limited availability**. If you are interested in using it, please contact your Customer Success Manager (CSM).</em>
      parameters:
        - description: Specify the tenant to delete permissions from.
          name: tenantCode
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeletePermissionsRequestDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionBulkOperationResponseDTO'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /v1/admin/permissions/{permissionId}:
    get:
      tags:
        - PermissionManagement
      summary: Retrieve a permission's details
      operationId: PermissionManagement_GetPermission
      description: |-
        This API allows you to retrieve the details for a specified permission.

         <br>**Note:** <em>This API is in **limited availability**. If you are interested in using it, please contact your Customer Success Manager (CSM).</em>
      parameters:
        - description: The unique identifier of the permission you want to retrieve.
          name: permissionId
          in: path
          required: true
          schema:
            type: string
        - description: Specify the tenant to retrieve a permission from.
          name: tenantCode
          in: query
          schema:
            type: string
        - description: >-
            If `true`, returns the validity statuses for the permission's
            properties in data access sets and the
             permission's dimensions, dimension members, and hierarchy properties in member filters. If `false`,
             doesn't return validity status information. Default is `false`.
          name: includeDetailsWithStatus
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionDTO'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
components:
  schemas:
    AdminCapabilityConfigDTO:
      type: object
      properties:
        allCapabilitiesAccess:
          description: >-
            If true, this capability configuration grant access to all
            capabilities.
          type: boolean
        capabilities:
          description: A list of capabilities associated with the capability configuration.
          type: array
          items:
            type: string
    AnalyticObjectDTO:
      type: object
      properties:
        analyticObjectId:
          description: The unique ID of the analytic object.
          type: string
        displayName:
          description: An identifiable name to display in Visier, such as "Employee".
          type: string
        objectType:
          description: The analytic object type.
          enum:
            - Event
            - Subject
            - BusinessOutcomeOverlay
            - PlanOrBudgetOverlay
            - ExternalBenchmark
            - VisierBenchmark
            - UsageOverlay
            - OtherOverlay
            - InternalComparison
            - PlanAnalyticObject
          type: string
          format: enum
        relatedObjects:
          description: The analytic objects related to the data security object.
          type: array
          items:
            $ref: '#/components/schemas/RelatedAnalyticObjectDTO'
        securableProperties:
          description: >-
            All available properties from the data security object and its
            related analytic objects that you can configure data access for.
          type: array
          items:
            $ref: '#/components/schemas/SecurablePropertyDTO'
        securableDimensions:
          description: >-
            A list of dimensions that are available to define population access
            filters in the permission.
          type: array
          items:
            $ref: '#/components/schemas/SecurableDimensionDTO'
    CapabilityDTO:
      type: object
      properties:
        description:
          description: A description of the capability.
          type: string
        name:
          description: The unique name of the capability.
          type: string
        displayName:
          description: >-
            An identifiable capability name to display in Visier, such as
            "Schedule Analysis".
          type: string
    ContentPackageDTO:
      type: object
      properties:
        description:
          description: A description of the content package.
          type: string
        contentPackageId:
          description: The unique ID of the content package.
          type: string
        displayName:
          description: >-
            An identifiable content package name to display in Visier, such as
            "Talent Acquisition Core Content".
          type: string
    DataSecurityProfileDTO:
      type: object
      properties:
        analyticObjectId:
          description: The analytic object ID associated with the data security profile.
          type: string
        propertySetConfig:
          $ref: '#/components/schemas/PropertySetConfigDTO'
        allDataPointAccess:
          description: >-
            The flag for giving all access to data points when creating a
            population.
          type: boolean
        memberFilterConfigs:
          description: The member filter configurations that defines the population.
          type: array
          items:
            $ref: '#/components/schemas/MemberFilterConfigDTO'
        inheritedAccessConfigs:
          description: >-
            A list of objects representing the inherited access configurations
            associated with the data security profile.
             By default all related objects of a top level analytic object will inherit access.
             To remove access to a related analytic object, add it to the list of inherited access configurations with removeAccess: true.
             To add custom filters to a related analytic object, add the analytic object to the list of inherited access configurations and then add the custom filters to its list of member filter configurations.
          type: array
          items:
            $ref: '#/components/schemas/InheritedAccessConfigDTO'
      x-konfig-properties:
        propertySetConfig:
          description: >-
            The property set configuration that defines which properties and
            access level to allow for each filtered record.
    DeletePermissionsRequestDTO:
      type: object
      properties:
        permissionIds:
          description: The identifiers of the permissions to delete.
          type: array
          items:
            type: string
    DimensionFilterDTO:
      type: object
      properties:
        staticDimensionFilter:
          $ref: '#/components/schemas/StaticDimensionFilterDTO'
        dynamicDimensionFilter:
          $ref: '#/components/schemas/DynamicDimensionFilterDTO'
    DynamicDimensionFilterDTO:
      type: object
      properties:
        dimensionId:
          description: The dimension ID associated with the dynamic dimension filter.
          type: string
        subjectReferencePath:
          description: The subject reference path.
          type: array
          items:
            type: string
        dynamicPropertyMappings:
          description: >-
            A list of objects representing the dynamic property mappings
            associated with the dynamic dimension filter.
          type: array
          items:
            $ref: '#/components/schemas/DynamicPropertyMappingDTO'
        dimensionStatus:
          description: >-
            The dimension's validity status. Valid values: Valid, NoData,
            NotFound.
             * **Valid**: The object exists and has loaded data.
             * **NoData**: The object exists but doesn't have loaded data.
             * **NotFound**: The object doesn't exist.
          enum:
            - Unset
            - Valid
            - NoData
            - NotFound
          type: string
          format: enum
    DynamicPropertyMappingDTO:
      type: object
      properties:
        hierarchyPropertyId:
          description: The hierarchy property ID.
          type: string
        userProperty:
          $ref: '#/components/schemas/UserPropertyDTO'
        hierarchyPropertyStatus:
          description: >-
            The hierarchy property's validity status. Valid values: Valid,
            NotFound.
             * **Valid**: The object exists and has loaded data.
             * **NotFound**: The object doesn't exist.
          enum:
            - Unset
            - Valid
            - NoData
            - NotFound
          type: string
          format: enum
      x-konfig-properties:
        userProperty:
          description: The user property.
    GetCapabilitiesAPIResponseDTO:
      type: object
      properties:
        capabilities:
          description: A list of objects representing the available capabilities.
          type: array
          items:
            $ref: '#/components/schemas/CapabilityDTO'
    GetContentPackagesAPIResponseDTO:
      type: object
      properties:
        contentPackages:
          description: A list of objects representing the available content packages.
          type: array
          items:
            $ref: '#/components/schemas/ContentPackageDTO'
    GetDataSecurityObjectsAPIResponseDTO:
      type: object
      properties:
        analyticObjects:
          description: >-
            A list of analytic objects and their related objects that are
            available to define data access to.
          type: array
          items:
            $ref: '#/components/schemas/AnalyticObjectDTO'
    GetPermissionsAPIResponseDTO:
      description: List of available permissions
      type: object
      properties:
        permissions:
          description: A list of objects representing the available permissions.
          type: array
          items:
            $ref: '#/components/schemas/PermissionDTO'
    GoogleProtobufAny:
      description: >-
        Contains an arbitrary serialized message along with a @type that
        describes the type of the serialized message.
      type: object
      properties:
        '@type':
          description: The type of the serialized message.
          type: string
      additionalProperties: true
    HierarchyPropertyDTO:
      type: object
      properties:
        hierarchyPropertyId:
          description: The hierarchy property ID.
          type: string
        displayName:
          description: >-
            An identifiable hierarchy property name to display in Visier, such
            as "Name Property".
          type: string
    InheritedAccessConfigDTO:
      type: object
      properties:
        analyticObjectId:
          description: >-
            The analytic object ID associated with the inherited access
            configuration.
          type: string
        removeAccess:
          description: The flag for removing access to the inherited analytic object.
          type: boolean
        memberFilterConfigs:
          description: >-
            The member filter configurations that defines the population in the
            inherited analytic object.
          type: array
          items:
            $ref: '#/components/schemas/MemberFilterConfigDTO'
    MemberFilterConfigDTO:
      type: object
      properties:
        dimensionFilters:
          description: >-
            A list of objects representing the dimension filters associated with
            the member filter configuration.
             A dimension filter can be either a static or dynamic dimension filter.
          type: array
          items:
            $ref: '#/components/schemas/DimensionFilterDTO'
    MemberSelectionDTO:
      type: object
      properties:
        namePath:
          description: The member name path.
          type: array
          items:
            type: string
        excluded:
          description: The flag for excluding the member.
          type: boolean
        dimensionMemberStatus:
          description: >-
            The dimension member's validity status. Valid values: Valid,
            NotFound.
             * **Valid**: The object exists and has loaded data.
             * **NotFound**: The object doesn't exist.
          enum:
            - Unset
            - Valid
            - NoData
            - NotFound
          type: string
          format: enum
    PermissionBulkOperationResponseDTO:
      type: object
      properties:
        successes:
          description: The successfully processed permissions.
          type: array
          items:
            $ref: '#/components/schemas/PermissionSuccessDTO'
        failures:
          description: >-
            The permissions that did not process and any relevant error
            information.
          type: array
          items:
            $ref: '#/components/schemas/PermissionFailureDTO'
    PermissionDTO:
      type: object
      properties:
        description:
          description: A user-defined description of the permission.
          type: string
        permissionId:
          description: The unique identifier associated with the permission.
          type: string
        displayName:
          description: >-
            An identifiable permission name to display in Visier, such as
            "Diversity Access".
          type: string
        dataSecurityProfiles:
          description: >-
            A list of objects representing the data security profile
            configurations associated with the permission.
          type: array
          items:
            $ref: '#/components/schemas/DataSecurityProfileDTO'
        adminCapabilityConfig:
          $ref: '#/components/schemas/AdminCapabilityConfigDTO'
        roleModulesConfig:
          $ref: '#/components/schemas/RoleModulesConfigDTO'
      x-konfig-properties:
        adminCapabilityConfig:
          description: The capability configuration associated with the permission.
        roleModulesConfig:
          description: The role modules configuration associated with the permission.
    PermissionErrorDTO:
      type: object
      properties:
        message:
          description: Error message
          type: string
        rci:
          description: >-
            A root cause identifier that allows Visier to determine the source
            of the problem.
          type: string
    PermissionFailureDTO:
      type: object
      properties:
        permissionId:
          description: The unique identifier associated with the permission.
          type: string
        displayName:
          description: >-
            An identifiable permission name to display in Visier, such as
            "Diversity Access".
          type: string
        error:
          $ref: '#/components/schemas/PermissionErrorDTO'
      x-konfig-properties:
        error:
          description: The error associated with the failure.
    PermissionSuccessDTO:
      type: object
      properties:
        permissionId:
          description: The unique identifier associated with the permission.
          type: string
        displayName:
          description: >-
            An identifiable permission name to display in Visier, such as
            "Diversity Access".
          type: string
    PermissionsListDTO:
      type: object
      properties:
        permissions:
          description: The list of permissions that will be created or updated
          type: array
          items:
            $ref: '#/components/schemas/PermissionDTO'
    PropertyAccessConfigDTO:
      type: object
      properties:
        propertyId:
          description: The property ID associated with the property access configuration.
          type: string
        analyticObjectId:
          description: The analytic object ID of the property.
          type: string
        analyticObjectReferencePaths:
          description: >-
            The path to the analytic object reference or empty if the
            configuration is not a reference.
          type: array
          items:
            type: string
        accessLevel:
          description: >-
            The access level of the property. Valid values are: Aggregate,
            Sensitive
          enum:
            - None
            - Aggregate
            - Detailed
          type: string
          format: enum
        propertyStatus:
          description: >-
            The property's validity status. Valid values: Valid, NoData,
            NotFound.
             * **Valid**: The object exists and has loaded data.
             * **NoData**: The object exists but doesn't have loaded data.
             * **NotFound**: The object doesn't exist.
          enum:
            - Unset
            - Valid
            - NoData
            - NotFound
          type: string
          format: enum
    PropertySetConfigDTO:
      type: object
      properties:
        propertyAccessConfigs:
          description: >-
            A list of objects representing the property access configuration
            associated with the property set configuration.
          type: array
          items:
            $ref: '#/components/schemas/PropertyAccessConfigDTO'
    RelatedAnalyticObjectDTO:
      type: object
      properties:
        analyticObjectId:
          description: The analytic object ID.
          type: string
        displayName:
          description: >-
            An identifiable analytic object name to display in Visier, such as
            "Recognition".
          type: string
    RoleModulesConfigDTO:
      type: object
      properties:
        contentPackageIds:
          description: >-
            A list of content packages IDs associated with the role modules
            configuration.
          type: array
          items:
            type: string
    SecurableDimensionDTO:
      type: object
      properties:
        dimensionId:
          description: The dimension ID.
          type: string
        displayName:
          description: >-
            An identifiable dimension name to display in Visier, such as
            "Contract Type".
          type: string
        analyticObjectIds:
          description: A list of analytic object IDs.
          type: array
          items:
            type: string
        hierarchyProperties:
          description: >-
            The list of hierarchies you can map to a user in a permission's
            dynamic filter.
          type: array
          items:
            $ref: '#/components/schemas/HierarchyPropertyDTO'
    SecurablePropertyDTO:
      type: object
      properties:
        propertyId:
          description: The property ID.
          type: string
        displayName:
          description: >-
            An identifiable property name to display in Visier, such as "Job Pay
            Level".
          type: string
        analyticObjectId:
          description: The property's analytic object ID.
          type: string
        isPrimaryKey:
          description: If true, this property is the analytic object's primary key.
          type: boolean
        referenceSymbolName:
          description: The reference symbol name.
          type: string
    StaticDimensionFilterDTO:
      type: object
      properties:
        dimensionId:
          description: The dimension ID associated with the static dimension filter.
          type: string
        subjectReferencePath:
          description: The subject reference path.
          type: array
          items:
            type: string
        memberSelections:
          description: >-
            A list of objects representing the member selections associated with
            the static dimension filter.
          type: array
          items:
            $ref: '#/components/schemas/MemberSelectionDTO'
        dimensionStatus:
          description: >-
            The dimension's validity status. Valid values: Valid, NoData,
            NotFound.
             * **Valid**: The object exists and has loaded data.
             * **NoData**: The object exists but doesn't have loaded data.
             * **NotFound**: The object doesn't exist.
          enum:
            - Unset
            - Valid
            - NoData
            - NotFound
          type: string
          format: enum
    Status:
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
      properties:
        code:
          description: >-
            The status code, which should be an enum value of
            [google.rpc.Code][google.rpc.Code].
          type: integer
          format: int32
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            [google.rpc.Status.details][google.rpc.Status.details] field, or
            localized by the client.
          type: string
        details:
          description: >-
            A list of messages that carry the error details.  There is a common
            set of message types for APIs to use.
          type: array
          items:
            $ref: '#/components/schemas/GoogleProtobufAny'
    UserPropertyDTO:
      type: object
      properties:
        name:
          description: The user property name.
          type: string
  securitySchemes:
    CookieAuth:
      type: apiKey
      name: VisierASIDToken
      in: cookie
    ApiKeyAuth:
      type: apiKey
      name: apikey
      in: header
    BearerAuth:
      type: http
      scheme: bearer
    OAuth2Auth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: /v1/auth/oauth2/authorize
          tokenUrl: /v1/auth/oauth2/token
          scopes:
            read: Grants read access
            write: Grants write access
        password:
          tokenUrl: /v1/auth/oauth2/token
          scopes:
            read: Grants read access
            write: Grants write access
security:
  - ApiKeyAuth: []
    BearerAuth: []
  - ApiKeyAuth: []
    CookieAuth: []
  - ApiKeyAuth: []
    OAuth2Auth: []
