openapi: 3.0.3
info:
  title: Visier User Management APIs
  description: Visier APIs for managing users within an organization
  version: 22222222.99201.1256
  license:
    name: Apache License, Version 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  x-api-status-urls: false
  x-konfig-ignore:
    object-with-no-properties: true
servers:
  - url: https://{vanity-name}.api.visier.io
    variables:
      vanity-name:
        default: vanity
tags:
  - description: |-
      Use these APIs to manage users within an organization.

       <br>**Tip**: Visier recommends that administrating tenant users focus primarily on managing users at the administrating
       tenant level. These users likely belong directly to your organization, such as customer support, customer value
       managers, account executives, and customer success. These users work with clients to manage their day-to-day
       solution needs.
    name: UserManagement
  - description: |-
      Use these APIs to manage users within an organization.

       <br>**Note:** <em>These are version 2 of the User Management APIs and are released in **limited availability**.
       If you are interested in using them, please contact your Customer Success Manager (CSM).</em>

       <br>**Tip:** Visier recommends that administrating tenant users focus primarily on managing users at the administrating
       tenant level. These users likely belong directly to your organization, such as customer support, customer value
       managers, account executives, and customer success. These users work with clients to manage their day-to-day
       solution needs.
    name: UserManagementV2
paths:
  /v1/admin/permissions/users:
    put:
      tags:
        - UserManagement
      summary: Assign permissions to users
      operationId: UserManagement_AssignPermissions
      description: >-
        This API allows you to assign a permission to specific users.
        Administrating tenant users can assign permissions
         to users in the administrating tenant and in the analytic tenants those users belong to.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignRevokePermissionsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignRevokePermissionsResponseDTO'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
    delete:
      tags:
        - UserManagement
      summary: Remove permissions from users
      operationId: UserManagement_RemovePermissions
      description: >-
        This API allows you to remove a permission from specific users.
        Administrating tenant users can remove permissions
         from users in the administrating tenant and in the analytic tenants those users belong to.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssignRevokePermissionsRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssignRevokePermissionsResponseDTO'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /v1/admin/permissions/{permissionId}/users:
    get:
      tags:
        - UserManagement
      summary: Retrieve users that are assigned a specific permission
      operationId: UserManagement_GetPermissionAssignedUsers
      description: >-
        This API allows you to retrieve all the users that are assigned a
        specified permission. You must know the ID
         of the permission you want to retrieve users for.
      parameters:
        - description: >-
            The unique identifier of the permission you want to retrieve users
            for.
          name: permissionId
          in: path
          required: true
          schema:
            type: string
        - description: >-
            If true, the response returns a list of all users that are assigned
            the permission, including users that are
             assigned the permission through a user group.
            If false, the response returns a list of the users that are directly
            assigned the permission.
          name: includeUserGroups
          in: query
          schema:
            type: boolean
        - description: Specify the tenant to retrieve the list of users from.
          name: tenantFilter
          in: query
          schema:
            type: string
        - description: >-
            The number of results to return. The maximum number of tenants to
            retrieve is 100.
          name: limit
          in: query
          schema:
            type: integer
            format: int32
        - description: >-
            The index to start retrieving results from, also known as offset.
            The index begins at 0.
          name: start
          in: query
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionAssignedUsersDTO'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /v1/admin/user-groups:
    get:
      tags:
        - UserManagement
      summary: Retrieve a list of all user groups
      operationId: UserManagement_GetAllUserGroups
      description: >-
        This API allows you to retrieve the full list of user groups in a
        tenant.
      parameters:
        - description: Specify the tenant to retrieve the list of user groups from.
          name: tenantCode
          in: query
          schema:
            type: string
        - description: >-
            The number of results to return. The maximum number of users to
            retrieve is 1000.
          name: limit
          in: query
          schema:
            type: integer
            format: uint32
        - description: The index to start retrieving results from, also known as offset.
          name: start
          in: query
          schema:
            type: integer
            format: uint32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupsGetAPIResponseDTO'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /v1/admin/user-groups/permissions:
    put:
      tags:
        - UserManagement
      summary: Assign permissions to user groups
      operationId: UserManagement_AssignPermissionsToUserGroups
      description: >-
        This API allows you to assign a permission to specific user groups. This
        assigns the permission to all users in the user group.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionsToUserGroupsRequestDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionsToUserGroupForTenantDTO'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
    delete:
      tags:
        - UserManagement
      summary: Remove permissions from user groups
      operationId: UserManagement_RevokePermissionsFromUserGroups
      description: This API allows you to remove a permission from specific user groups.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PermissionsToUserGroupsRequestDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionsToUserGroupForTenantDTO'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /v1/admin/user-groups/users:
    put:
      tags:
        - UserManagement
      summary: Assign users to user groups
      operationId: UserManagement_AddUsersToUserGroup
      description: This API allows you to assign users to specific user groups.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersToUserGroupsRequestDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityAssignmentResponseDTO'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
    delete:
      tags:
        - UserManagement
      summary: Remove users from user groups
      operationId: UserManagement_RemoveUsersFromUserGroup
      description: This API allows you to remove users from specific user groups.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersToUserGroupsRequestDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityAssignmentResponseDTO'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /v1/admin/user-groups/{userGroupId}/users:
    get:
      tags:
        - UserManagement
      summary: Retrieve a list of user group users
      operationId: UserManagement_GetUserGroupUsers
      description: >-
        This API allows you to retrieve the list of users explicitly assigned to
        a user group. Users that are implicitly
         included in the user group through the user group's dynamic filters are not returned by this endpoint.
      parameters:
        - description: The ID of user group.
          name: userGroupId
          in: path
          required: true
          schema:
            type: string
        - description: Specifies the tenant to retrieve the list of users from.
          name: tenantFilter
          in: query
          schema:
            type: string
        - description: >-
            The number of results to return. The maximum number of tenants to
            retrieve is 100.
          name: limit
          in: query
          schema:
            type: integer
            format: uint32
        - description: >-
            The index to start retrieving results from, also known as offset.
            The index begins at 0.
          name: start
          in: query
          schema:
            type: integer
            format: uint32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupsUsersDTO'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /v1/admin/users:
    get:
      tags:
        - UserManagement
      summary: Retrieve a list of all users
      operationId: UserManagement_GetAllUsers
      description: >-
        This API allows you to retrieve the full list of users and their current
        states.
      parameters:
        - description: Specify the tenant to retrieve a list of users from.
          name: tenantCode
          in: query
          schema:
            type: string
        - description: >-
            If true, the response returns a list of the user's assigned
            profiles.
          name: assignedProfiles
          in: query
          schema:
            type: boolean
        - description: If true, the response returns the user's assigned permissions.
          name: assignedPermissions
          in: query
          schema:
            type: boolean
        - description: If true, the response returns the user's assigned user groups.
          name: assignedUserGroups
          in: query
          schema:
            type: boolean
        - description: >-
            The number of results to return. The maximum number of users to
            retrieve is 1000.
          name: limit
          in: query
          schema:
            type: integer
            format: uint32
        - description: >-
            The index to start retrieving results from, also known as offset.
            The index begins at 0.
          name: start
          in: query
          schema:
            type: integer
            format: uint32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllUsersGetAPIResponseDTO'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
    post:
      tags:
        - UserManagement
      summary: Add a user
      operationId: UserManagement_AddUser
      description: >-
        This API allows you to create a new user. Administrating tenant users
        can specify the tenant in which to add a user.
      parameters:
        - description: Specify the tenant to create a user in.
          name: tenantCode
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreationAPIRequestDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreationAPIResponseDTO'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /v1/admin/users/{userId}:
    get:
      tags:
        - UserManagement
      summary: Retrieve a user's details
      operationId: UserManagement_GetUserDetail
      description: This API allows you to retrieve all details for a specified user.
      parameters:
        - description: The ID of the user you want to retrieve.
          name: userId
          in: path
          required: true
          schema:
            type: string
        - description: Specify the tenant to retrieve a user from.
          name: tenantCode
          in: query
          schema:
            type: string
        - description: >-
            If true, the response returns a list of the user's assigned
            profiles.
          name: assignedProfiles
          in: query
          schema:
            type: boolean
        - description: If true, the response returns the user's assigned permissions.
          name: assignedPermissions
          in: query
          schema:
            type: boolean
        - description: If true, the response returns the user's assigned user groups.
          name: assignedUserGroups
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetAPIResponseDTO'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
    put:
      tags:
        - UserManagement
      summary: Update a user
      operationId: UserManagement_UpdateUser
      description: >-
        This API allows you to update an existing user's information, such as
        their display name or if the user is enabled in Visier.
      parameters:
        - description: The ID of the user you want to update.
          name: userId
          in: path
          required: true
          schema:
            type: string
        - description: Specify the tenant to update a user in.
          name: tenantCode
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateAPIRequestDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserUpdateAPIRequestDTO'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
    delete:
      tags:
        - UserManagement
      summary: Delete a user
      operationId: UserManagement_DeleteUser
      description: >-
        This API allows you to delete an existing user. Administrating tenant
        users can specify the tenant from which to delete a user.
      parameters:
        - description: The ID of the user you want to delete.
          name: userId
          in: path
          required: true
          schema:
            type: string
        - description: Specify the tenant to delete a user in.
          name: tenantCode
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteUserResponse'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /v2/admin/users:
    put:
      tags:
        - UserManagementV2
      summary: Update users
      operationId: UserManagementV2_UpdateUsers
      description: >-
        This API allows you to update an existing user's information, such as
        their display name or if the user is enabled in Visier.

         <br>**Note:** <em>This API is in **limited availability**. If you are interested in using it, please contact your Customer Success Manager (CSM).</em>
      parameters:
        - description: Specify the tenant to update a user in.
          name: tenantCode
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersUpdateAPIRequestDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersAPIResponseDTO'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
    post:
      tags:
        - UserManagementV2
      summary: Add users
      operationId: UserManagementV2_AddUsers
      description: >-
        This API allows you to create new users. Administrating tenant users can
        specify the tenant in which to add these users.

         <br>**Note:** <em>This API is in **limited availability**. If you are interested in using it, please contact your Customer Success Manager (CSM).</em>
      parameters:
        - description: Specify the tenant to create a user in.
          name: tenantCode
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersCreationAPIRequestDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersAPIResponseDTO'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
    delete:
      tags:
        - UserManagementV2
      summary: Delete users
      operationId: UserManagementV2_DeleteUsers
      description: >-
        This API allows you to delete an existing user. Administrating tenant
        users can specify the tenant from which to delete a user.

         <br>**Note:** <em>This API is in **limited availability**. If you are interested in using it, please contact your Customer Success Manager (CSM).</em>
      parameters:
        - description: Specify the tenant to delete a user in.
          name: tenantCode
          in: query
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsersDeleteAPIRequestDTO'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersAPIResponseDTO'
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /v1/admin/users/reports/application-logs:
    get:
      tags:
        - UserManagement
      summary: Retrieve the Application Logs
      operationId: UserManagement_GetApplicationLogsXLSX
      description: >-
        This API allows you to export the Application Logs for a tenant. The
        Application Logs track information about your
         users and how they are using the application. Performing regular audits will help you identify potential security
         issues and keep your data safe. As part of user management, download the Application Logs to monitor user activity
         and logon events to ensure your users are performing authorized activities.

         Administrating tenant users can export application logs for the administrating tenant and the analytic tenants
         those users belong to.
      parameters:
        - description: An inclusive date-time to start retrieving Application Logs from.
          name: startTime
          in: query
          schema:
            type: string
        - description: An exclusive date-time to stop retrieving Application Logs from.
          name: endTime
          in: query
          schema:
            type: string
        - description: Specify the tenant to retrieve Application Logs from.
          name: tenantCode
          in: query
          schema:
            type: string
      responses:
        '200':
          description: An XLSX file.
          content:
            application/vnd.ms-excel:
              schema:
                $ref: >-
                  #/components/schemas/UserManagementGetApplicationLogsXlsxResponse
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /v1/admin/users/{userId}/reports/data-security:
    get:
      tags:
        - UserManagement
      summary: Retrieve the Data Security Report
      operationId: UserManagement_GetDataSecurityReportXLSX
      description: >-
        This API allows you to export the data security report of a user. The
        Data Security Report provides information
         about a specific user to see which populations and properties that user has access to as a result of the
         permissions assigned to them.

         Administrating tenant users can export the report for users in the administrating tenant and the analytic
         tenants those users belong to.
      parameters:
        - description: The ID of the user to retrieve the report for.
          name: userId
          in: path
          required: true
          schema:
            type: string
        - description: Specify the tenant to retrieve the Data Security Report from.
          name: tenantCode
          in: query
          schema:
            type: string
      responses:
        '200':
          description: An XLSX file.
          content:
            application/vnd.ms-excel:
              schema:
                $ref: >-
                  #/components/schemas/UserManagementGetDataSecurityReportXlsxResponse
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /v1/admin/users/reports/profile-assignments:
    get:
      tags:
        - UserManagement
      summary: Retrieve user profile assignments in XLSX format
      operationId: UserManagement_GetProfileAssignmentsXLSX
      description: >-
        This API allows you to export the profiles assigned to each user. This
        report details the profiles assigned to
         each user and the profile validity period.

         Administrating tenant users can export profile assignments for the administrating tenant and the analytic tenants
         those users belong to.
      parameters:
        - description: Specify the tenant to retrieve profile assignments from.
          name: tenantCode
          in: query
          schema:
            type: string
      responses:
        '200':
          description: An XLSX file.
          content:
            application/vnd.ms-excel:
              schema:
                $ref: >-
                  #/components/schemas/UserManagementGetProfileAssignmentsXlsxResponse
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /v1/admin/users/reports/permission-assignments:
    get:
      tags:
        - UserManagement
      summary: Retrieve user permissions in XLSX format
      operationId: UserManagement_GetUserPermissionsXLSX
      description: >-
        This API allows you to export the user permission assignments for a
        tenant. The permission assignments report
         provides a summary of the permissions your users have been assigned and how each permission is being used across
         your user base, as well as the users that do not have any permissions assigned to them.

         Administrating tenant users can export permission assignments for the administrating tenant and the analytic
         tenants those users belong to.
      parameters:
        - description: >-
            Specify the tenant to retrieve the permission assignments report
            from.
          name: tenantCode
          in: query
          schema:
            type: string
      responses:
        '200':
          description: An XLSX file.
          content:
            application/vnd.ms-excel:
              schema:
                $ref: >-
                  #/components/schemas/UserManagementGetUserPermissionsXlsxResponse
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
  /v1/admin/users/reports/permissions-list:
    get:
      tags:
        - UserManagement
      summary: Retrieve a list of all permissions in XLSX format
      operationId: UserManagement_GetAllPermissionsXLSX
      description: >-
        This API allows you to export the list of permissions in a tenant. This
        report includes the permission name,
         permission description, and permission ID for all permissions in the tenant.

         Administrating tenant users can export permissions lists for the administrating tenant and the analytic tenants
         those users belong to.
      parameters:
        - description: Specify the tenant to retrieve permissions from.
          name: tenantCode
          in: query
          schema:
            type: string
      responses:
        '200':
          description: An XLSX file.
          content:
            application/vnd.ms-excel:
              schema:
                $ref: >-
                  #/components/schemas/UserManagementGetAllPermissionsXlsxResponse
        default:
          description: Default error response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
components:
  schemas:
    AdditionalCapabilitiesDTO:
      type: object
      properties:
        additionalCapabilities:
          description: The additional capabilities assigned to this profile.
          type: array
          items:
            type: string
    AllPermissionsAssignedForLocalTenantDTO:
      type: object
      properties:
        assignedPermissions:
          description: A list of objects representing the user's permissions.
          type: array
          items:
            $ref: '#/components/schemas/PermissionAssignedForLocalTenantDTO'
    AllProfileAssignedForLocalTenantDTO:
      type: object
      properties:
        assignedProfiles:
          description: >-
            A list of objects representing the user profiles assigned to the
            user and their validity range.
          type: array
          items:
            $ref: '#/components/schemas/ProfileAssignedForLocalTenantDTO'
    AllUserGroupsAssignedForLocalTenantDTO:
      type: object
      properties:
        assignedUserGroups:
          description: A list of objects representing the available user groups.
          type: array
          items:
            $ref: '#/components/schemas/UserGroupAssignedForLocalTenantDTO'
    AllUsersGetAPIResponseDTO:
      type: object
      properties:
        users:
          description: A list of available users.
          type: array
          items:
            $ref: '#/components/schemas/UserGetAPIResponseDTO'
        limit:
          description: >-
            The number of results to return. The maximum number of users to
            retrieve is 1000.
          type: integer
          format: uint32
        start:
          description: >-
            The index to start retrieving results from, also known as offset.
            The index begins at 0.
          type: integer
          format: uint32
    AssignRevokePermissionByPermissionDTO:
      description: The results of the permission assignment or removal.
      type: object
      properties:
        permission:
          $ref: '#/components/schemas/PermissionAssignedForLocalTenantDTO'
        users:
          description: >-
            A list of objects representing the users that was permission was
            assigned to or removed from.
          type: array
          items:
            $ref: '#/components/schemas/AssignRevokePermissionByUserDTO'
    AssignRevokePermissionByTenantDTO:
      description: The permissions organized by tenant.
      type: object
      properties:
        tenantCode:
          description: The unique identifier associated with the tenant.
          type: string
        permissions:
          description: A list of objects representing the assigned or removed permissions.
          type: array
          items:
            $ref: '#/components/schemas/AssignRevokePermissionByPermissionDTO'
        status:
          description: >-
            The state of the permission assignment. Valid values are Succeed or
            Failed.
          enum:
            - Unknown
            - Succeed
            - Failed
          type: string
          format: enum
        message:
          description: A detailed description of the request outcome, if available.
          type: string
    AssignRevokePermissionByUserDTO:
      description: The results of the permission assignment or removal by user.
      type: object
      properties:
        userId:
          description: The unique identifier associated with the user.
          type: string
        username:
          description: >-
            The user's username. This is typically the user's email, such as
            john@visier.com.
          type: string
        message:
          description: A meaningful message about the user permission.
          type: string
    AssignRevokePermissionsRequest:
      type: object
      properties:
        permissions:
          description: >-
            A list of objects representing the permissions to assign to or
            remove from users.
          type: array
          items:
            $ref: '#/components/schemas/Permission'
    AssignRevokePermissionsResponseDTO:
      description: The results of the permission assignment or removal.
      type: object
      properties:
        tenants:
          description: >-
            A list of objects representing the users that were assigned
            permissions, organized by the tenants the users belong to.
          type: array
          items:
            $ref: '#/components/schemas/AssignRevokePermissionByTenantDTO'
    CapabilitiesDTO:
      type: object
      properties:
        capability:
          description: The name of the capability.
          type: string
        accessLevel:
          description: The access level of the profile for the given capability.
          type: string
        viewLevel:
          description: The view level of the profile for the given capability.
          type: string
    DeleteUserResponse:
      type: object
      properties: {}
    GoogleProtobufAny:
      description: >-
        Contains an arbitrary serialized message along with a @type that
        describes the type of the serialized message.
      type: object
      properties:
        '@type':
          description: The type of the serialized message.
          type: string
      additionalProperties: true
    LastLoginDTO:
      type: object
      properties:
        timestamp:
          description: The time that the user last logged into Visier.
          type: string
    Permission:
      type: object
      properties:
        permissionId:
          description: The unique identifier associated with a permission.
          type: string
        userIds:
          description: A list of strings representing unique user IDs.
          type: array
          items:
            type: string
    PermissionAssignedByTenantDTO:
      description: The users assigned a specific permission, grouped by tenant.
      type: object
      properties:
        tenantCode:
          description: The unique identifier associated with the tenant.
          type: string
        users:
          description: >-
            A list of objects representing the users that the permission is
            assigned to.
          type: array
          items:
            $ref: '#/components/schemas/PermissionAssignedUserDTO'
    PermissionAssignedForLocalTenantDTO:
      type: object
      properties:
        description:
          description: A user-defined description of the permission.
          type: string
        permissionId:
          description: The unique identifier associated with the permission.
          type: string
        displayName:
          description: >-
            An identifiable permission name to display in Visier, such as
            "Diversity Access".
          type: string
    PermissionAssignedUserDTO:
      description: >-
        The user and the method through which the user was assigned the
        permission.
      type: object
      properties:
        userId:
          description: The unique identifier associated with the user.
          type: string
        username:
          description: >-
            The user's username. This is typically the user's email, such as
            john@visier.com.
          type: string
        permissionFrom:
          description: >-
            The method through which the user was assigned the permission. The
            permission may be assigned through
             the following options:
              - User: The permission was directly assigned to the user.
              - UserGroup: The permission was assigned because the user belongs to a user group that is assigned the permission.
              - UserAndUserGroup: The permission was directly assigned to the user and assigned because the user belongs to
                a user group that is assigned the permission.
          type: string
    PermissionAssignedUsersDTO:
      description: Users that are assigned a specific permission.
      type: object
      properties:
        tenants:
          description: >-
            A list of objects representing the users that are assigned the
            specific permission, organized by the tenants the users belong to.
          type: array
          items:
            $ref: '#/components/schemas/PermissionAssignedByTenantDTO'
        limit:
          description: >-
            The number of results to return. The maximum number of tenants to
            retrieve is 100.
          type: integer
          format: uint32
        start:
          description: >-
            The index to start retrieving results from, also known as offset.
            The index begins at 0.
          type: integer
          format: uint32
    PermissionResponseDTO:
      type: object
      properties:
        permissionId:
          description: The unique identifier associated with the permission.
          type: string
        displayName:
          description: >-
            An identifiable permission name to display in Visier, such as
            "Diversity Access".
          type: string
    PermissionsToUserGroupForTenantDTO:
      type: object
      properties:
        tenantCode:
          description: The unique identifier associated with the tenant.
          type: string
        status:
          description: >-
            The state of the permission assignment or removal. Valid values are
            Succeed or Failed.
          type: string
        message:
          description: A detailed description of the request outcome, if available.
          type: string
        userGroups:
          description: >-
            A list of objects representing user groups and the permissions to
            assign to or remove from them.
          type: array
          items:
            $ref: '#/components/schemas/UserGroupGetAPIResponseDTO'
    PermissionsToUserGroupRequestDTO:
      type: object
      properties:
        userGroupId:
          description: The unique identifier associated with the user group.
          type: string
        permissionsIds:
          description: A list of strings representing the unique permission IDs to assign.
          type: array
          items:
            type: string
    PermissionsToUserGroupsRequestDTO:
      type: object
      properties:
        userGroups:
          description: >-
            A list of objects representing the user groups and permissions to
            assign or remove.
          type: array
          items:
            $ref: '#/components/schemas/PermissionsToUserGroupRequestDTO'
    ProfileAssignedForLocalTenantDTO:
      type: object
      properties:
        profileId:
          description: The unique identifier associated with the profile.
          type: string
        displayName:
          description: >-
            An identifiable profile name to display in Visier, such as "Partner
            Service Manager".
          type: string
        validityStartTime:
          description: An inclusive date-time when this profile is active.
          type: string
        validityEndTime:
          description: An exclusive date-time when this profile is no longer active.
          type: string
        capabilities:
          description: >-
            A list of objects representing the access that this profile has for
            the capabilities of this profile.
          type: array
          items:
            $ref: '#/components/schemas/CapabilitiesDTO'
        additionalCapabilities:
          $ref: '#/components/schemas/AdditionalCapabilitiesDTO'
      x-konfig-properties:
        additionalCapabilities:
          description: >-
            A list of the additional capabilities that are assigned to this
            profile.
    SecurityAssignmentResponseDTO:
      type: object
      properties:
        tenants:
          description: >-
            A list of objects representing the tenants and users that were
            assigned to or removed from user groups.
          type: array
          items:
            $ref: '#/components/schemas/TenantAssignmentsDTO'
    SimpleUserDTO:
      type: object
      properties:
        userId:
          description: The unique identifier associated with the user.
          type: string
        username:
          description: >-
            The user's username. This is typically the user's email, such as
            john@visier.com.
          type: string
    Status:
      description: >-
        The `Status` type defines a logical error model that is suitable for
        different programming environments, including REST APIs and RPC APIs. It
        is used by [gRPC](https://github.com/grpc). Each `Status` message
        contains three pieces of data: error code, error message, and error
        details. You can find out more about this error model and how to work
        with it in the [API Design
        Guide](https://cloud.google.com/apis/design/errors).
      type: object
      properties:
        code:
          description: >-
            The status code, which should be an enum value of
            [google.rpc.Code][google.rpc.Code].
          type: integer
          format: int32
        message:
          description: >-
            A developer-facing error message, which should be in English. Any
            user-facing error message should be localized and sent in the
            [google.rpc.Status.details][google.rpc.Status.details] field, or
            localized by the client.
          type: string
        details:
          description: >-
            A list of messages that carry the error details.  There is a common
            set of message types for APIs to use.
          type: array
          items:
            $ref: '#/components/schemas/GoogleProtobufAny'
    TenantAssignmentsDTO:
      type: object
      properties:
        tenantCode:
          description: The unique identifier associated with the tenant.
          type: string
        status:
          description: >-
            The state of the user group assignment. Valid values are Succeed or
            Failed.
          enum:
            - Unknown
            - Succeed
            - Failed
          type: string
          format: enum
        message:
          description: A detailed description of the request outcome, if available.
          type: string
        assignments:
          description: A list of objects representing the user group and user assignments.
          type: array
          items:
            $ref: '#/components/schemas/UserSecurityAssignmentsDTO'
    UserCreationAPIRequestDTO:
      type: object
      properties:
        username:
          description: >-
            The user's username. This is typically the user's email, such as
            john@visier.com.
          type: string
        displayName:
          description: >-
            An identifiable name to display within Visier. For example, "John
            Smith".
          type: string
        employeeId:
          description: If applicable, and if available, the user employee ID in the data.
          type: string
        accountEnabled:
          description: If false, the user account is disabled.
          type: string
        email:
          description: >-
            The user's email. This is used if the user's email is different from
            their username. For example, "john.doe@visier.com".
          type: string
    UserCreationAPIResponseDTO:
      type: object
      properties:
        userId:
          description: The unique identifier associated with the user.
          type: string
        username:
          description: >-
            The user's username. This is typically the user's email, such as
            john@jupiter.com.
          type: string
        displayName:
          description: >-
            An identifiable name to display within Visier. For example, "John
            Smith".
          type: string
        employeeId:
          description: If applicable, and if available, the user employee ID in the data.
          type: string
        accountEnabled:
          description: If true, the user account is enabled.
          type: string
        email:
          description: The user's email address.
          type: string
    UserGetAPIResponseDTO:
      type: object
      properties:
        userId:
          description: The unique identifier associated with the user.
          type: string
        username:
          description: >-
            The user's username. This is typically the user's email, such as
            john@jupiter.com.
          type: string
        displayName:
          description: >-
            An identifiable name to display within Visier. For example, "John
            Smith".
          type: string
        employeeId:
          description: If applicable, and if available, the user employee ID in the data.
          type: string
        accountEnabled:
          description: If false, the user account is disabled.
          type: boolean
        profiles:
          $ref: '#/components/schemas/AllProfileAssignedForLocalTenantDTO'
        permissions:
          $ref: '#/components/schemas/AllPermissionsAssignedForLocalTenantDTO'
        userGroups:
          $ref: '#/components/schemas/AllUserGroupsAssignedForLocalTenantDTO'
        lastLogin:
          $ref: '#/components/schemas/LastLoginDTO'
        email:
          description: The user's email address.
          type: string
      x-konfig-properties:
        profiles:
          description: A list of objects representing the list of available profiles.
        permissions:
          description: A list of objects representing the user's permissions.
        userGroups:
          description: A list of objects representing the available user groups.
        lastLogin:
          description: >-
            An object that represents the time that the user last logged into
            Visier.
    UserGroupAssignedForLocalTenantDTO:
      type: object
      properties:
        userGroupId:
          description: The user group ID.
          type: string
        displayName:
          description: >-
            An identifiable user group name to display in Visier, such as
            "Leadership User Group".
          type: string
    UserGroupGetAPIResponseDTO:
      type: object
      properties:
        userGroupId:
          description: The unique identifier associated with the user group.
          type: string
        displayName:
          description: >-
            An identifiable user group name to display in Visier, such as
            "Leadership User Group".
          type: string
        permissions:
          description: A list of objects representing the user's permissions.
          type: array
          items:
            $ref: '#/components/schemas/PermissionResponseDTO'
    UserGroupsGetAPIResponseDTO:
      type: object
      properties:
        userGroups:
          description: A list of user groups.
          type: array
          items:
            $ref: '#/components/schemas/UserGroupGetAPIResponseDTO'
        limit:
          description: >-
            The number of results to return. The maximum number of users to
            retrieve is 1000.
          type: integer
          format: uint32
        start:
          description: The index to start retrieving results from, also known as offset.
          type: integer
          format: uint32
    UserGroupsUsersDTO:
      type: object
      properties:
        tenants:
          description: >-
            A list of objects representing the users that are explicitly
            assigned to the user group, organized by the tenants the users
            belong to.
          type: array
          items:
            $ref: '#/components/schemas/UserGroupsUsersForTenantDTO'
        limit:
          description: The limit of results to return. The maximum value is 1000.
          type: integer
          format: uint32
        start:
          description: >-
            The index to start retrieving values from, also known as offset. The
            index begins at 0.
          type: integer
          format: uint32
    UserGroupsUsersForTenantDTO:
      type: object
      properties:
        tenantCode:
          description: The unique identifier associated with the tenant.
          type: string
        users:
          description: A list of objects representing the users in the user group.
          type: array
          items:
            $ref: '#/components/schemas/SimpleUserDTO'
    UserSecurityAssignmentsDTO:
      type: object
      properties:
        id:
          description: The unique identifier associated with the user group.
          type: string
        name:
          description: The name of the user group.
          type: string
        users:
          description: >-
            A list of objects representing the users assigned to or removed from
            the user group.
          type: array
          items:
            $ref: '#/components/schemas/SimpleUserDTO'
    UserUpdateAPIRequestDTO:
      type: object
      properties:
        displayName:
          description: >-
            An identifiable name to display within Visier. For example, "John
            Smith".
          type: string
        employeeId:
          description: If applicable, and if available, the user employee ID in the data.
          type: string
        accountEnabled:
          description: If true, the user account is enabled.
          type: string
        email:
          description: The user's email address.
          type: string
    UsersAPIErrorMessageDTO:
      type: object
      properties:
        message:
          description: Error message
          type: string
        rci:
          description: The unique identifier associated to this error
          type: string
    UsersAPIFailureDTO:
      type: object
      properties:
        userId:
          description: The unique identifier associated with the user.
          type: string
        userName:
          description: >-
            The user's username. This is typically the user's email, such as
            john@jupiter.com.
          type: string
        displayName:
          description: >-
            An identifiable name to display within Visier. For example, "John
            Smith".
          type: string
        error:
          $ref: '#/components/schemas/UsersAPIErrorMessageDTO'
      x-konfig-properties:
        error:
          description: The error thrown during creation.
    UsersAPIResponseDTO:
      type: object
      properties:
        successes:
          description: The users for which the request succeeded.
          type: array
          items:
            $ref: '#/components/schemas/UsersAPISuccessDTO'
        failures:
          description: The users for which the request failed.
          type: array
          items:
            $ref: '#/components/schemas/UsersAPIFailureDTO'
    UsersAPISuccessDTO:
      type: object
      properties:
        userId:
          description: The unique identifier associated with the user.
          type: string
        username:
          description: >-
            The user's username. This is typically the user's email, such as
            john@jupiter.com.
          type: string
        displayName:
          description: >-
            An identifiable name to display within Visier. For example, "John
            Smith".
          type: string
        employeeId:
          description: If applicable, and if available, the user employee ID in the data.
          type: string
        accountEnabled:
          description: If true, the user account is enabled.
          type: string
        email:
          description: The user's email address.
          type: string
    UsersCreationAPIRequestDTO:
      type: object
      properties:
        users:
          description: >-
            A list of objects representing users to create. Maximum 100 users
            can be created in a single request.
          type: array
          items:
            $ref: '#/components/schemas/UserCreationAPIRequestDTO'
    UsersDeleteAPIRequestDTO:
      type: object
      properties:
        userIds:
          description: >-
            A list of objects representing users to delete. Maximum 100 users
            can be deleted in a single request.
          type: array
          items:
            type: string
    UsersToUserGroupRequestDTO:
      type: object
      properties:
        userGroupId:
          description: The unique identifier associated with the user group.
          type: string
        userIds:
          description: >-
            A list of strings representing unique user IDs to assign to or
            remove from the user group.
          type: array
          items:
            type: string
    UsersToUserGroupsRequestDTO:
      type: object
      properties:
        userGroups:
          description: >-
            A list of objects representing the user groups and users to assign
            or remove.
          type: array
          items:
            $ref: '#/components/schemas/UsersToUserGroupRequestDTO'
    UsersUpdateAPIRequestDTO:
      type: object
      properties:
        users:
          description: >-
            A list of objects representing users to update. Maximum 100 users
            can be updated in a single request.
          type: array
          items:
            $ref: '#/components/schemas/UsersUpdateAPIUserDTO'
    UsersUpdateAPIUserDTO:
      type: object
      properties:
        userId:
          description: The unique identifier associated with the user.
          type: string
        displayName:
          description: >-
            An identifiable name to display within Visier. For example, "John
            Smith".
          type: string
        employeeId:
          description: If applicable, and if available, the user employee ID in the data.
          type: string
        accountEnabled:
          description: If true, the user account is enabled.
          type: string
        email:
          description: The user's email address.
          type: string
    UserManagementGetApplicationLogsXlsxResponse:
      type: string
      format: binary
    UserManagementGetDataSecurityReportXlsxResponse:
      type: string
      format: binary
    UserManagementGetProfileAssignmentsXlsxResponse:
      type: string
      format: binary
    UserManagementGetUserPermissionsXlsxResponse:
      type: string
      format: binary
    UserManagementGetAllPermissionsXlsxResponse:
      type: string
      format: binary
  securitySchemes:
    CookieAuth:
      type: apiKey
      name: VisierASIDToken
      in: cookie
    ApiKeyAuth:
      type: apiKey
      name: apikey
      in: header
    BearerAuth:
      type: http
      scheme: bearer
    OAuth2Auth:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: /v1/auth/oauth2/authorize
          tokenUrl: /v1/auth/oauth2/token
          scopes:
            read: Grants read access
            write: Grants write access
        password:
          tokenUrl: /v1/auth/oauth2/token
          scopes:
            read: Grants read access
            write: Grants write access
security:
  - ApiKeyAuth: []
    BearerAuth: []
  - ApiKeyAuth: []
    CookieAuth: []
  - ApiKeyAuth: []
    OAuth2Auth: []
