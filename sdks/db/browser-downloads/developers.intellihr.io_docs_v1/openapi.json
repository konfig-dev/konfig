{
  "info": {
    "title": "intelliHR Public API",
    "version": "V1",
    "description": "You can find developer's guide and more documentation on [https://developers.intellihr.io](https://developers.intellihr.io)",
    "contact": {
      "name": "Customer Support",
      "email": "support@intellihr.co"
    },
    "x-logo": {
      "url": "https://production-assetsbucket-gdzw9b97vxr2.s3.amazonaws.com/images/logos/IntelliHR-on-White-RGB-border.png",
      "altText": "intelliHR logo",
      "href": "https://intellihr.com"
    }
  },
  "components": {
    "securitySchemes": {
      "ApiKey": {
        "type": "apiKey",
        "description": "You can generate and delete API keys through your intelliHR portal. API keys should be sent as `Authorization: Bearer <key>`",
        "in": "header",
        "name": "Authorization"
      }
    },
    "schemas": {
      "business-entities": {
        "type": "object",
        "title": "Single Business Entity",
        "properties": {
          "data": {
            "type": "object",
            "title": "Business Entity",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Business Entity](#tag/Business-Entities).",
                "type": "string"
              },
              "name": {
                "description": "Name given to this [Business Entity](#tag/Business-Entities). This name would normally be shown to users of the system.",
                "example": "IntelliHR",
                "type": "string"
              },
              "code": {
                "description": "Code given to this [Business Entity](#tag/Business-Entities)",
                "example": "BE001",
                "type": "string"
              },
              "legalName": {
                "description": "Legal name can be different from the name presented to a user. Usually used for administrative tasks.",
                "example": "IntelliHR Systems Limited",
                "type": "string"
              },
              "number": {
                "description": "Legally registered [Business Entity](#tag/Business-Entities) number, e.g. in Australia this might be the ABN, or in America the RN.",
                "example": "00 000 000 000",
                "type": "string"
              },
              "isEnabled": {
                "type": "boolean",
                "description": "Specifies whether users can select this [Business Entity](#tag/Business-Entities) in dropdowns."
              },
              "customFields": {
                "description": "The custom field values for this [Business Entity](#tag/Business-Entities)",
                "allOf": [
                  {
                    "$ref": "#/definitions/customFieldsResponse"
                  }
                ]
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "asAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The point in time for which this response is for. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          }
        }
      },
      "business-entities_create_request": {
        "type": "object",
        "title": "Business Entity",
        "properties": {
          "name": {
            "description": "Name given to this [Business Entity](#tag/Business-Entities). This name would normally be shown to users of the system.",
            "example": "IntelliHR",
            "type": "string"
          },
          "code": {
            "description": "Code given to this [Business Entity](#tag/Business-Entities)",
            "example": "BE001",
            "type": "string"
          },
          "legalName": {
            "description": "Legal name can be different from the name presented to a user. Usually used for administrative tasks.",
            "example": "IntelliHR Systems Limited",
            "type": "string"
          },
          "number": {
            "description": "Legally registered [Business Entity](#tag/Business-Entities) number, e.g. in Australia this might be the ABN, or in America the RN.",
            "example": "00 000 000 000",
            "type": "string"
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Specifies whether users can select this [Business Entity](#tag/Business-Entities) in dropdowns."
          },
          "customFields": {
            "description": "The custom field values for this [Business Entity](#tag/Business-Entities)",
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Custom fields will be keyed by their api_name. Custom fields are not required, and any existing model defined custom fields will default to having null values.",
              "properties": {
                "value": {
                  "description": "The value for this custom field. This value structure will depend upon the type of the custom field.",
                  "anyOf": [
                    {
                      "type": "null",
                      "description": "The value will be null when a custom field is not provided or is empty for a record. Null can be provided to delete a custom field value."
                    },
                    {
                      "type": "string",
                      "description": "For TEXT and NUMBER records, the value is stored as a string with the value of the record."
                    },
                    {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string",
                          "description": "For SINGLE_SELECT records, the value is stored as an object with the label of the dropdown option. NOTE: Only the label needs to be provided. `id` is not required."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "labels": {
                          "type": "array",
                          "minItems": 1,
                          "description": "For MULTI_SELECT records, the value is stored as an object with an array of labels for all selected options. NOTE: Only the labels need to be provided. `ids` is not required.",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "person": {
                            "type": "object",
                            "description": "For PEOPLE_DROPDOWN records, the value is an object with an array of the [Person](#tag/People) search object and their [Job](#tag/Jobs) search object. This [Person](#tags/people) is specified as a search object, which will match the person who best fits the keys for this object.\n      Multiple keys can be used together to further narrow search results (for example, if there are multiple people with the same name, email address\n      can be used as well to limit to a single person. A validation error will be thrown if this search is unable to be narrowed to a single [Person](#tags/people).",
                            "example": {
                              "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                              "name": "Bruce Wayne",
                              "primaryEmailAddress": "bruce.wayne@example.com",
                              "employeeNumber": "00001",
                              "autoIncrementIntellihrId": "1000"
                            },
                            "properties": {
                              "id": {
                                "title": "UUIDv4",
                                "maxLength": 36,
                                "minLength": 36,
                                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                "description": "The identifier string for the [Person](#tags/people) to locate in the system.",
                                "type": "string"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the [Person](#tags/people) in intelliHR to search for. Note that the search accounts for differences in name order automatically."
                              },
                              "primaryEmailAddress": {
                                "type": "string",
                                "description": "The email address flagged as primary for the [Person](#tags/people) within the system."
                              },
                              "employeeNumber": {
                                "type": "string",
                                "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
                              },
                              "autoIncrementIntellihrId": {
                                "type": "string",
                                "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
                              },
                              "autoIncrementingIntellihrId": {
                                "type": "string",
                                "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                                "deprecated": true
                              }
                            }
                          },
                          "job": {
                            "type": "object",
                            "description": "The [Job](#tag/Jobs) information of the [Person](#tag/People) is mandatory if the target PEOPLE_DROPDOWN custom field allows selecting individual jobs. If not, The [Job](#tag/Jobs) information is not mandatory.",
                            "properties": {
                              "id": {
                                "title": "UUIDv4",
                                "maxLength": 36,
                                "minLength": 36,
                                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                "description": "The identifier string for the [Job](#tag/Job) of this [Job](#tag/Jobs).",
                                "type": "string"
                              },
                              "name": {
                                "description": "The name/position title of the [Job](#tag/Jobs).",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            },
            "example": {
              "text_field_api_name": {
                "value": "Some text value"
              },
              "numeric_field_api_name": {
                "value": "50"
              },
              "single_select_api_name": {
                "value": {
                  "label": "Drama"
                }
              },
              "multi_select_api_name": {
                "value": {
                  "labels": [
                    "Bananas",
                    "Apples"
                  ]
                }
              },
              "people_dropdown_api_name": {
                "value": [
                  {
                    "person": {
                      "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "name": "Bruce Wayne",
                      "primaryEmailAddress": "bruce.wayne@example.com",
                      "employeeNumber": "00001",
                      "autoIncrementIntellihrId": "1000"
                    },
                    "job": {
                      "id": "569904c8-5d36-4c2f-afb0-525eeb8da32d",
                      "name": "Maintenance worker"
                    }
                  },
                  {
                    "person": {
                      "id": "313fde44-f24e-4ec9-9473-0d0f3527222d",
                      "name": "Batman",
                      "primaryEmailAddress": "batman@example.com",
                      "employeeNumber": "00002",
                      "autoIncrementIntellihrId": "1001"
                    },
                    "job": {
                      "id": "653304c8-5d36-4c2f-afb0-525eeb8da32d",
                      "name": "Janitor"
                    }
                  }
                ]
              }
            }
          }
        },
        "required": [
          "name"
        ]
      },
      "business-entities_patch_request": {
        "type": "object",
        "title": "Business Entity",
        "properties": {
          "name": {
            "description": "Name given to this [Business Entity](#tag/Business-Entities). This name would normally be shown to users of the system.",
            "example": "IntelliHR",
            "type": "string"
          },
          "code": {
            "description": "Code given to this [Business Entity](#tag/Business-Entities)",
            "example": "BE001",
            "type": "string"
          },
          "legalName": {
            "description": "Legal name can be different from the name presented to a user. Usually used for administrative tasks.",
            "example": "IntelliHR Systems Limited",
            "type": "string"
          },
          "number": {
            "description": "Legally registered [Business Entity](#tag/Business-Entities) number, e.g. in Australia this might be the ABN, or in America the RN.",
            "example": "00 000 000 000",
            "type": "string"
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Specifies whether users can select this [Business Entity](#tag/Business-Entities) in dropdowns."
          },
          "customFields": {
            "description": "The custom field values for this [Business Entity](#tag/Business-Entities)",
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Custom fields will be keyed by their api_name. Custom fields are not required, and only provided custom fields will be updated.",
              "properties": {
                "value": {
                  "description": "The value for this custom field. This value structure will depend upon the type of the custom field.",
                  "anyOf": [
                    {
                      "type": "null",
                      "description": "The value will be null when a custom field is not provided or is empty for a record. Null can be provided to delete a custom field value."
                    },
                    {
                      "type": "string",
                      "description": "For TEXT and NUMBER records, the value is stored as a string with the value of the record."
                    },
                    {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string",
                          "description": "For SINGLE_SELECT records, the value is stored as an object with the label of the dropdown option. NOTE: Only the label needs to be provided. `id` is not required."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "labels": {
                          "type": "array",
                          "minItems": 1,
                          "description": "For MULTI_SELECT records, the value is stored as an object with an array of labels for all selected options. NOTE: Only the labels need to be provided. `ids` is not required.",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "person": {
                            "type": "object",
                            "description": "For PEOPLE_DROPDOWN records, the value is an object with an array of the [Person](#tag/People) search object and their [Job](#tag/Jobs) search object. This [Person](#tags/people) is specified as a search object, which will match the person who best fits the keys for this object.\n      Multiple keys can be used together to further narrow search results (for example, if there are multiple people with the same name, email address\n      can be used as well to limit to a single person. A validation error will be thrown if this search is unable to be narrowed to a single [Person](#tags/people).",
                            "example": {
                              "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                              "name": "Bruce Wayne",
                              "primaryEmailAddress": "bruce.wayne@example.com",
                              "employeeNumber": "00001",
                              "autoIncrementIntellihrId": "1000"
                            },
                            "properties": {
                              "id": {
                                "title": "UUIDv4",
                                "maxLength": 36,
                                "minLength": 36,
                                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                "description": "The identifier string for the [Person](#tags/people) to locate in the system.",
                                "type": "string"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the [Person](#tags/people) in intelliHR to search for. Note that the search accounts for differences in name order automatically."
                              },
                              "primaryEmailAddress": {
                                "type": "string",
                                "description": "The email address flagged as primary for the [Person](#tags/people) within the system."
                              },
                              "employeeNumber": {
                                "type": "string",
                                "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
                              },
                              "autoIncrementIntellihrId": {
                                "type": "string",
                                "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
                              },
                              "autoIncrementingIntellihrId": {
                                "type": "string",
                                "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                                "deprecated": true
                              }
                            }
                          },
                          "job": {
                            "type": "object",
                            "description": "The [Job](#tag/Jobs) information of the [Person](#tag/People) is mandatory if the target PEOPLE_DROPDOWN custom field allows selecting individual jobs. If not, The [Job](#tag/Jobs) information is not mandatory.",
                            "properties": {
                              "id": {
                                "title": "UUIDv4",
                                "maxLength": 36,
                                "minLength": 36,
                                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                "description": "The identifier string for the [Job](#tag/Job) of this [Job](#tag/Jobs).",
                                "type": "string"
                              },
                              "name": {
                                "description": "The name/position title of the [Job](#tag/Jobs).",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            },
            "example": {
              "text_field_api_name": {
                "value": "Some text value"
              },
              "numeric_field_api_name": {
                "value": "50"
              },
              "single_select_api_name": {
                "value": {
                  "label": "Drama"
                }
              },
              "multi_select_api_name": {
                "value": {
                  "labels": [
                    "Bananas",
                    "Apples"
                  ]
                }
              },
              "people_dropdown_api_name": {
                "value": [
                  {
                    "person": {
                      "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "name": "Bruce Wayne",
                      "primaryEmailAddress": "bruce.wayne@example.com",
                      "employeeNumber": "00001",
                      "autoIncrementIntellihrId": "1000"
                    },
                    "job": {
                      "id": "569904c8-5d36-4c2f-afb0-525eeb8da32d",
                      "name": "Maintenance worker"
                    }
                  },
                  {
                    "person": {
                      "id": "313fde44-f24e-4ec9-9473-0d0f3527222d",
                      "name": "Batman",
                      "primaryEmailAddress": "batman@example.com",
                      "employeeNumber": "00002",
                      "autoIncrementIntellihrId": "1001"
                    },
                    "job": {
                      "id": "653304c8-5d36-4c2f-afb0-525eeb8da32d",
                      "name": "Janitor"
                    }
                  }
                ]
              }
            }
          }
        }
      },
      "business-entities_list": {
        "type": "object",
        "title": "List of Business Entities",
        "properties": {
          "data": {
            "type": "array",
            "title": "data",
            "items": {
              "type": "object",
              "title": "Business Entity",
              "properties": {
                "id": {
                  "title": "UUIDv4",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "description": "The identifier string for the [Business Entity](#tag/Business-Entities).",
                  "type": "string"
                },
                "name": {
                  "description": "Name given to this [Business Entity](#tag/Business-Entities). This name would normally be shown to users of the system.",
                  "example": "IntelliHR",
                  "type": "string"
                },
                "code": {
                  "description": "Code given to this [Business Entity](#tag/Business-Entities)",
                  "example": "BE001",
                  "type": "string"
                },
                "legalName": {
                  "description": "Legal name can be different from the name presented to a user. Usually used for administrative tasks.",
                  "example": "IntelliHR Systems Limited",
                  "type": "string"
                },
                "number": {
                  "description": "Legally registered [Business Entity](#tag/Business-Entities) number, e.g. in Australia this might be the ABN, or in America the RN.",
                  "example": "00 000 000 000",
                  "type": "string"
                },
                "isEnabled": {
                  "type": "boolean",
                  "description": "Specifies whether users can select this [Business Entity](#tag/Business-Entities) in dropdowns."
                },
                "customFields": {
                  "description": "The custom field values for this [Business Entity](#tag/Business-Entities)",
                  "allOf": [
                    {
                      "$ref": "#/definitions/customFieldsResponse"
                    }
                  ]
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "asAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The point in time for which this response is for. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "pagination": {
                "type": "object",
                "description": "Contains information related to the pagination of the response",
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total items count",
                    "minimum": 0,
                    "example": 50
                  },
                  "count": {
                    "type": "integer",
                    "description": "Number of items for current page",
                    "minimum": 0,
                    "example": 10
                  },
                  "per_page": {
                    "type": "integer",
                    "description": "Items per page limit",
                    "minimum": 0,
                    "example": 10
                  },
                  "current_page": {
                    "type": "integer",
                    "description": "Current page",
                    "minimum": 1,
                    "example": 3
                  },
                  "total_pages": {
                    "type": "integer",
                    "description": "Total number of pages",
                    "minimum": 1,
                    "example": 5
                  }
                }
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          },
          "links": {
            "type": "object",
            "description": "Links to other related resources.",
            "properties": {
              "self": {
                "type": "string",
                "description": "The current page URL",
                "example": "https://api.intellihr.io/v1/business-entities?limit=1&page=3"
              },
              "first": {
                "type": "string",
                "description": "The first page URL",
                "example": "https://api.intellihr.io/v1/business-entities?limit=1&page=1"
              },
              "prev": {
                "type": "string",
                "description": "The previous page URL",
                "example": "https://api.intellihr.io/v1/business-entities?limit=1&page=2"
              },
              "next": {
                "type": "string",
                "description": "The next page URL",
                "example": "https://api.intellihr.io/v1/business-entities?limit=1&page=4"
              },
              "last": {
                "type": "string",
                "description": "The last page URL",
                "example": "https://api.intellihr.io/v1/business-entities?limit=1&page=5"
              }
            }
          }
        }
      },
      "business-units": {
        "type": "object",
        "title": "Response",
        "properties": {
          "data": {
            "type": "object",
            "title": "Business Unit",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Business Unit](#tag/Business-Units).",
                "type": "string"
              },
              "identifier": {
                "description": "Optional identifier that can be used for administrative tasks.",
                "example": "",
                "type": "string"
              },
              "name": {
                "description": "Name given to this [Business Unit](#tag/Business-Units). This name would normally be shown to users of the system.",
                "example": "Engineering",
                "type": "string"
              },
              "code": {
                "description": "Code given to this [Business Unit](#tag/Business-Units)",
                "example": "BE001",
                "type": "string"
              },
              "notes": {
                "type": "string",
                "description": "Notes attached to a [Business Unit](#tag/Business-Units)",
                "example": ""
              },
              "parentId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the parent [Business Unit](#tag/Business-Units), or null if there is no parent (this is a top level business unit).",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "isEnabled": {
                "type": "boolean",
                "description": "Specifies whether users can select this [Business Unit](#tag/Business-Units) in dropdowns."
              },
              "customFields": {
                "description": "The custom field values for this [Business Unit](#tag/Business-Units)",
                "allOf": [
                  {
                    "$ref": "#/definitions/customFieldsResponse"
                  }
                ]
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "asAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The point in time for which this response is for. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          }
        }
      },
      "business-units_create_request": {
        "type": "object",
        "title": "Business Unit",
        "properties": {
          "identifier": {
            "description": "Optional identifier that can be used for administrative tasks.",
            "example": "",
            "type": "string"
          },
          "name": {
            "description": "Name given to this [Business Unit](#tag/Business-Units). This name would normally be shown to users of the system.",
            "example": "Engineering",
            "type": "string"
          },
          "code": {
            "description": "Code given to this [Business Unit](#tag/Business-Units)",
            "example": "BE001",
            "type": "string"
          },
          "notes": {
            "type": "string",
            "description": "Notes attached to a [Business Unit](#tag/Business-Units)",
            "example": ""
          },
          "parentId": {
            "title": "UUIDv4",
            "maxLength": 36,
            "minLength": 36,
            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
            "description": "The identifier string for the parent [Business Unit](#tag/Business-Units), or null if there is no parent (this is a top level business unit).",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Specifies whether users can select this [Business Unit](#tag/Business-Units) in dropdowns."
          },
          "customFields": {
            "description": "The custom field values for this Business Unit",
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Custom fields will be keyed by their api_name. Custom fields are not required, and only provided custom fields will be updated.",
              "properties": {
                "value": {
                  "description": "The value for this custom field. This value structure will depend upon the type of the custom field.",
                  "anyOf": [
                    {
                      "type": "null",
                      "description": "The value will be null when a custom field is not provided or is empty for a record. Null can be provided to delete a custom field value."
                    },
                    {
                      "type": "string",
                      "description": "For TEXT and NUMBER records, the value is stored as a string with the value of the record."
                    },
                    {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string",
                          "description": "For SINGLE_SELECT records, the value is stored as an object with the label of the dropdown option. NOTE: Only the label needs to be provided. `id` is not required."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "labels": {
                          "type": "array",
                          "minItems": 1,
                          "description": "For MULTI_SELECT records, the value is stored as an object with an array of labels for all selected options. NOTE: Only the labels need to be provided. `ids` is not required.",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "person": {
                            "type": "object",
                            "description": "For PEOPLE_DROPDOWN records, the value is an object with an array of the [Person](#tag/People) search object and their [Job](#tag/Jobs) search object. This [Person](#tags/people) is specified as a search object, which will match the person who best fits the keys for this object.\n      Multiple keys can be used together to further narrow search results (for example, if there are multiple people with the same name, email address\n      can be used as well to limit to a single person. A validation error will be thrown if this search is unable to be narrowed to a single [Person](#tags/people).",
                            "example": {
                              "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                              "name": "Bruce Wayne",
                              "primaryEmailAddress": "bruce.wayne@example.com",
                              "employeeNumber": "00001",
                              "autoIncrementIntellihrId": "1000"
                            },
                            "properties": {
                              "id": {
                                "title": "UUIDv4",
                                "maxLength": 36,
                                "minLength": 36,
                                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                "description": "The identifier string for the [Person](#tags/people) to locate in the system.",
                                "type": "string"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the [Person](#tags/people) in intelliHR to search for. Note that the search accounts for differences in name order automatically."
                              },
                              "primaryEmailAddress": {
                                "type": "string",
                                "description": "The email address flagged as primary for the [Person](#tags/people) within the system."
                              },
                              "employeeNumber": {
                                "type": "string",
                                "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
                              },
                              "autoIncrementIntellihrId": {
                                "type": "string",
                                "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
                              },
                              "autoIncrementingIntellihrId": {
                                "type": "string",
                                "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                                "deprecated": true
                              }
                            }
                          },
                          "job": {
                            "type": "object",
                            "description": "The [Job](#tag/Jobs) information of the [Person](#tag/People) is mandatory if the target PEOPLE_DROPDOWN custom field allows selecting individual jobs. If not, The [Job](#tag/Jobs) information is not mandatory.",
                            "properties": {
                              "id": {
                                "title": "UUIDv4",
                                "maxLength": 36,
                                "minLength": 36,
                                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                "description": "The identifier string for the [Job](#tag/Job) of this [Job](#tag/Jobs).",
                                "type": "string"
                              },
                              "name": {
                                "description": "The name/position title of the [Job](#tag/Jobs).",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            },
            "example": {
              "text_field_api_name": {
                "value": "Some text value"
              },
              "numeric_field_api_name": {
                "value": "50"
              },
              "single_select_api_name": {
                "value": {
                  "label": "Drama"
                }
              },
              "multi_select_api_name": {
                "value": {
                  "labels": [
                    "Bananas",
                    "Apples"
                  ]
                }
              },
              "people_dropdown_api_name": {
                "value": [
                  {
                    "person": {
                      "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "name": "Bruce Wayne",
                      "primaryEmailAddress": "bruce.wayne@example.com",
                      "employeeNumber": "00001",
                      "autoIncrementIntellihrId": "1000"
                    },
                    "job": {
                      "id": "569904c8-5d36-4c2f-afb0-525eeb8da32d",
                      "name": "Maintenance worker"
                    }
                  },
                  {
                    "person": {
                      "id": "313fde44-f24e-4ec9-9473-0d0f3527222d",
                      "name": "Batman",
                      "primaryEmailAddress": "batman@example.com",
                      "employeeNumber": "00002",
                      "autoIncrementIntellihrId": "1001"
                    },
                    "job": {
                      "id": "653304c8-5d36-4c2f-afb0-525eeb8da32d",
                      "name": "Janitor"
                    }
                  }
                ]
              }
            }
          }
        },
        "required": [
          "name"
        ]
      },
      "business-units_patch_request": {
        "type": "object",
        "title": "Business Unit",
        "properties": {
          "identifier": {
            "description": "Optional identifier that can be used for administrative tasks.",
            "example": "",
            "type": "string"
          },
          "name": {
            "description": "Name given to this [Business Unit](#tag/Business-Units). This name would normally be shown to users of the system.",
            "example": "Engineering",
            "type": "string"
          },
          "code": {
            "description": "Code given to this [Business Unit](#tag/Business-Units)",
            "example": "BE001",
            "type": "string"
          },
          "notes": {
            "type": "string",
            "description": "Notes attached to a [Business Unit](#tag/Business-Units)",
            "example": ""
          },
          "parentId": {
            "title": "UUIDv4",
            "maxLength": 36,
            "minLength": 36,
            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
            "description": "The identifier string for the parent [Business Unit](#tag/Business-Units), or null if there is no parent (this is a top level business unit).",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Specifies whether users can select this [Business Unit](#tag/Business-Units) in dropdowns."
          },
          "customFields": {
            "description": "The custom field values for this Business Unit",
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Custom fields will be keyed by their api_name. Custom fields are not required, and only provided custom fields will be updated.",
              "properties": {
                "value": {
                  "description": "The value for this custom field. This value structure will depend upon the type of the custom field.",
                  "anyOf": [
                    {
                      "type": "null",
                      "description": "The value will be null when a custom field is not provided or is empty for a record. Null can be provided to delete a custom field value."
                    },
                    {
                      "type": "string",
                      "description": "For TEXT and NUMBER records, the value is stored as a string with the value of the record."
                    },
                    {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string",
                          "description": "For SINGLE_SELECT records, the value is stored as an object with the label of the dropdown option. NOTE: Only the label needs to be provided. `id` is not required."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "labels": {
                          "type": "array",
                          "minItems": 1,
                          "description": "For MULTI_SELECT records, the value is stored as an object with an array of labels for all selected options. NOTE: Only the labels need to be provided. `ids` is not required.",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "person": {
                            "type": "object",
                            "description": "For PEOPLE_DROPDOWN records, the value is an object with an array of the [Person](#tag/People) search object and their [Job](#tag/Jobs) search object. This [Person](#tags/people) is specified as a search object, which will match the person who best fits the keys for this object.\n      Multiple keys can be used together to further narrow search results (for example, if there are multiple people with the same name, email address\n      can be used as well to limit to a single person. A validation error will be thrown if this search is unable to be narrowed to a single [Person](#tags/people).",
                            "example": {
                              "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                              "name": "Bruce Wayne",
                              "primaryEmailAddress": "bruce.wayne@example.com",
                              "employeeNumber": "00001",
                              "autoIncrementIntellihrId": "1000"
                            },
                            "properties": {
                              "id": {
                                "title": "UUIDv4",
                                "maxLength": 36,
                                "minLength": 36,
                                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                "description": "The identifier string for the [Person](#tags/people) to locate in the system.",
                                "type": "string"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the [Person](#tags/people) in intelliHR to search for. Note that the search accounts for differences in name order automatically."
                              },
                              "primaryEmailAddress": {
                                "type": "string",
                                "description": "The email address flagged as primary for the [Person](#tags/people) within the system."
                              },
                              "employeeNumber": {
                                "type": "string",
                                "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
                              },
                              "autoIncrementIntellihrId": {
                                "type": "string",
                                "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
                              },
                              "autoIncrementingIntellihrId": {
                                "type": "string",
                                "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                                "deprecated": true
                              }
                            }
                          },
                          "job": {
                            "type": "object",
                            "description": "The [Job](#tag/Jobs) information of the [Person](#tag/People) is mandatory if the target PEOPLE_DROPDOWN custom field allows selecting individual jobs. If not, The [Job](#tag/Jobs) information is not mandatory.",
                            "properties": {
                              "id": {
                                "title": "UUIDv4",
                                "maxLength": 36,
                                "minLength": 36,
                                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                "description": "The identifier string for the [Job](#tag/Job) of this [Job](#tag/Jobs).",
                                "type": "string"
                              },
                              "name": {
                                "description": "The name/position title of the [Job](#tag/Jobs).",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            },
            "example": {
              "text_field_api_name": {
                "value": "Some text value"
              },
              "numeric_field_api_name": {
                "value": "50"
              },
              "single_select_api_name": {
                "value": {
                  "label": "Drama"
                }
              },
              "multi_select_api_name": {
                "value": {
                  "labels": [
                    "Bananas",
                    "Apples"
                  ]
                }
              },
              "people_dropdown_api_name": {
                "value": [
                  {
                    "person": {
                      "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "name": "Bruce Wayne",
                      "primaryEmailAddress": "bruce.wayne@example.com",
                      "employeeNumber": "00001",
                      "autoIncrementIntellihrId": "1000"
                    },
                    "job": {
                      "id": "569904c8-5d36-4c2f-afb0-525eeb8da32d",
                      "name": "Maintenance worker"
                    }
                  },
                  {
                    "person": {
                      "id": "313fde44-f24e-4ec9-9473-0d0f3527222d",
                      "name": "Batman",
                      "primaryEmailAddress": "batman@example.com",
                      "employeeNumber": "00002",
                      "autoIncrementIntellihrId": "1001"
                    },
                    "job": {
                      "id": "653304c8-5d36-4c2f-afb0-525eeb8da32d",
                      "name": "Janitor"
                    }
                  }
                ]
              }
            }
          }
        },
        "required": [
          "name"
        ]
      },
      "business-units_list": {
        "type": "object",
        "title": "List of Business Units",
        "properties": {
          "data": {
            "type": "array",
            "title": "data",
            "items": {
              "type": "object",
              "title": "Business Unit",
              "properties": {
                "id": {
                  "title": "UUIDv4",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "description": "The identifier string for the [Business Unit](#tag/Business-Units).",
                  "type": "string"
                },
                "identifier": {
                  "description": "Optional identifier that can be used for administrative tasks.",
                  "example": "",
                  "type": "string"
                },
                "name": {
                  "description": "Name given to this [Business Unit](#tag/Business-Units). This name would normally be shown to users of the system.",
                  "example": "Engineering",
                  "type": "string"
                },
                "code": {
                  "description": "Code given to this [Business Unit](#tag/Business-Units)",
                  "example": "BE001",
                  "type": "string"
                },
                "notes": {
                  "type": "string",
                  "description": "Notes attached to a [Business Unit](#tag/Business-Units)",
                  "example": ""
                },
                "parentId": {
                  "title": "UUIDv4",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "description": "The identifier string for the parent [Business Unit](#tag/Business-Units), or null if there is no parent (this is a top level business unit).",
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "isEnabled": {
                  "type": "boolean",
                  "description": "Specifies whether users can select this [Business Unit](#tag/Business-Units) in dropdowns."
                },
                "customFields": {
                  "description": "The custom field values for this [Business Unit](#tag/Business-Units)",
                  "allOf": [
                    {
                      "$ref": "#/definitions/customFieldsResponse"
                    }
                  ]
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "asAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The point in time for which this response is for. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "pagination": {
                "type": "object",
                "description": "Contains information related to the pagination of the response",
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total items count",
                    "minimum": 0,
                    "example": 50
                  },
                  "count": {
                    "type": "integer",
                    "description": "Number of items for current page",
                    "minimum": 0,
                    "example": 10
                  },
                  "per_page": {
                    "type": "integer",
                    "description": "Items per page limit",
                    "minimum": 0,
                    "example": 10
                  },
                  "current_page": {
                    "type": "integer",
                    "description": "Current page",
                    "minimum": 1,
                    "example": 3
                  },
                  "total_pages": {
                    "type": "integer",
                    "description": "Total number of pages",
                    "minimum": 1,
                    "example": 5
                  }
                }
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          },
          "links": {
            "type": "object",
            "description": "Links to other related resources.",
            "properties": {
              "self": {
                "type": "string",
                "description": "The current page URL",
                "example": "https://api.intellihr.io/v1/business-units?limit=1&page=3"
              },
              "first": {
                "type": "string",
                "description": "The first page URL",
                "example": "https://api.intellihr.io/v1/business-units?limit=1&page=1"
              },
              "prev": {
                "type": "string",
                "description": "The previous page URL",
                "example": "https://api.intellihr.io/v1/business-units?limit=1&page=2"
              },
              "next": {
                "type": "string",
                "description": "The next page URL",
                "example": "https://api.intellihr.io/v1/business-units?limit=1&page=4"
              },
              "last": {
                "type": "string",
                "description": "The last page URL",
                "example": "https://api.intellihr.io/v1/business-units?limit=1&page=5"
              }
            }
          }
        }
      },
      "custom-field-definitions": {
        "type": "object",
        "title": "Single Custom Field Definition",
        "properties": {
          "data": {
            "type": "object",
            "title": "Custom Field Definition",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Custom Field Definition](#tag/Custom-Field-Definitions).",
                "type": "string"
              },
              "name": {
                "description": "Name given to this [Custom Field Definition](#tag/Custom-Field-Definitions). This name would normally be shown to users of the system.",
                "example": "Custom Field",
                "type": "string"
              },
              "apiName": {
                "description": "The api name given to this [Custom Field Definition](#tag/Custom-Field-Definitions). This name is used to uniquely identify the custom field in the api and is used as the key when modifying the custom field on a record.",
                "example": "custom_field",
                "type": "string"
              },
              "isEnabled": {
                "description": "Whether or not this [Custom Field Definition](#tag/Custom-Field-Definitions) is enabled to be used.",
                "example": "false",
                "type": "boolean"
              },
              "isSensitive": {
                "description": "Whether or not this [Custom Field Definition](#tag/Custom-Field-Definitions) is marked as sensitive information.",
                "example": "false",
                "type": "boolean"
              },
              "description": {
                "description": "The description of this [Custom Field Definition](#tag/Custom-Field-Definitions). This is used as a tooltip on the create and update pages.",
                "example": "This field is used to describe the custom field.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "modelType": {
                "description": "The model that this custom field relates to and can be attached to. Enum: `ADDRESS`, `BUSINESS_ENTITY`, `BUSINESS_UNIT`, `EMAIL_ADDRESS`, `JOB`, `LOCATION`, `PERSON`, `POSITION_TITLE`, `PHONE_NUMBER`, `REMUNERATION`, `TRAINING`.",
                "type": "string",
                "example": "PERSON"
              },
              "type": {
                "description": "The type of data this field records. Enum: `SINGLE_SELECT`, `MULTI_SELECT`, `TEXT`, `NUMBER`, `PEOPLE_DROPDOWN`.",
                "type": "string",
                "example": "TEXT"
              },
              "definitions": {
                "title": "Definitions",
                "type": "object",
                "description": "This key's values change depending on the \"type\" key. It is used to store additional information pertinent to that key. For more information on custom field configurations, see our [knowledge base article on custom fields](https://intellihr.zendesk.com/hc/en-us/articles/4402637180303-Custom-Fields)"
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          }
        }
      },
      "custom-field-definitions_list": {
        "type": "object",
        "title": "List of Custom Field Definitions",
        "properties": {
          "data": {
            "type": "array",
            "title": "data",
            "items": {
              "type": "object",
              "title": "Custom Field Definition",
              "properties": {
                "id": {
                  "title": "UUIDv4",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "description": "The identifier string for the [Custom Field Definition](#tag/Custom-Field-Definitions).",
                  "type": "string"
                },
                "name": {
                  "description": "Name given to this [Custom Field Definition](#tag/Custom-Field-Definitions). This name would normally be shown to users of the system.",
                  "example": "Custom Field",
                  "type": "string"
                },
                "apiName": {
                  "description": "The api name given to this [Custom Field Definition](#tag/Custom-Field-Definitions). This name is used to uniquely identify the custom field in the api and is used as the key when modifying the custom field on a record.",
                  "example": "custom_field",
                  "type": "string"
                },
                "isEnabled": {
                  "description": "Whether or not this [Custom Field Definition](#tag/Custom-Field-Definitions) is enabled to be used.",
                  "example": "false",
                  "type": "boolean"
                },
                "isSensitive": {
                  "description": "Whether or not this [Custom Field Definition](#tag/Custom-Field-Definitions) is marked as sensitive information.",
                  "example": "false",
                  "type": "boolean"
                },
                "description": {
                  "description": "The description of this [Custom Field Definition](#tag/Custom-Field-Definitions). This is used as a tooltip on the create and update pages.",
                  "example": "This field is used to describe the custom field.",
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "modelType": {
                  "description": "The model that this custom field relates to and can be attached to. Enum: `ADDRESS`, `BUSINESS_ENTITY`, `BUSINESS_UNIT`, `EMAIL_ADDRESS`, `JOB`, `LOCATION`, `PERSON`, `POSITION_TITLE`, `PHONE_NUMBER`, `REMUNERATION`, `TRAINING`.",
                  "type": "string",
                  "example": "PERSON"
                },
                "type": {
                  "description": "The type of data this field records. Enum: `SINGLE_SELECT`, `MULTI_SELECT`, `TEXT`, `NUMBER`, `PEOPLE_DROPDOWN`.",
                  "type": "string",
                  "example": "TEXT"
                },
                "definitions": {
                  "title": "Definitions",
                  "type": "object",
                  "description": "This key's values change depending on the \"type\" key. It is used to store additional information pertinent to that key. For more information on custom field configurations, see our [knowledge base article on custom fields](https://intellihr.zendesk.com/hc/en-us/articles/4402637180303-Custom-Fields)"
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "pagination": {
                "type": "object",
                "description": "Contains information related to the pagination of the response",
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total items count",
                    "minimum": 0,
                    "example": 50
                  },
                  "count": {
                    "type": "integer",
                    "description": "Number of items for current page",
                    "minimum": 0,
                    "example": 10
                  },
                  "per_page": {
                    "type": "integer",
                    "description": "Items per page limit",
                    "minimum": 0,
                    "example": 10
                  },
                  "current_page": {
                    "type": "integer",
                    "description": "Current page",
                    "minimum": 1,
                    "example": 3
                  },
                  "total_pages": {
                    "type": "integer",
                    "description": "Total number of pages",
                    "minimum": 1,
                    "example": 5
                  }
                }
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          },
          "links": {
            "type": "object",
            "description": "Links to other related resources.",
            "properties": {
              "self": {
                "type": "string",
                "description": "The current page URL",
                "example": "https://api.intellihr.io/v1/custom-field-definitions?limit=1&page=3"
              },
              "first": {
                "type": "string",
                "description": "The first page URL",
                "example": "https://api.intellihr.io/v1/custom-field-definitions?limit=1&page=1"
              },
              "prev": {
                "type": "string",
                "description": "The previous page URL",
                "example": "https://api.intellihr.io/v1/custom-field-definitions?limit=1&page=2"
              },
              "next": {
                "type": "string",
                "description": "The next page URL",
                "example": "https://api.intellihr.io/v1/custom-field-definitions?limit=1&page=4"
              },
              "last": {
                "type": "string",
                "description": "The last page URL",
                "example": "https://api.intellihr.io/v1/custom-field-definitions?limit=1&page=5"
              }
            }
          }
        }
      },
      "custom-field-definition_create_request": {
        "type": "object",
        "title": "Custom Field Definition",
        "properties": {
          "name": {
            "description": "Name given to this [Custom Field Definition](#tag/Custom-Field-Definitions). This name would normally be shown to users of the system.",
            "example": "Custom Field",
            "type": "string"
          },
          "apiName": {
            "description": "The api name given to this [Custom Field Definition](#tag/Custom-Field-Definitions). This name is used to uniquely identify the custom field in the api and is used as the key when modifying the custom field on a record.",
            "example": "custom_field",
            "type": "string"
          },
          "description": {
            "description": "The description of this [Custom Field Definition](#tag/Custom-Field-Definitions). This is used as a tooltip on the create and update pages.",
            "example": "This field is used to describe the custom field.",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "modelType": {
            "description": "The model that this custom field relates to and can be attached to. Enum: `ADDRESS`, `BUSINESS_ENTITY`, `BUSINESS_UNIT`, `EMAIL_ADDRESS`, `JOB`, `LOCATION`, `PERSON`, `POSITION_TITLE`, `PHONE_NUMBER`, `REMUNERATION`, `TRAINING`.",
            "type": "string",
            "example": "PERSON"
          },
          "type": {
            "description": "The type of data this field records. Enum: `SINGLE_SELECT`, `MULTI_SELECT`, `TEXT`, `NUMBER`, `PEOPLE_DROPDOWN`.",
            "type": "string",
            "example": "TEXT"
          },
          "isSensitive": {
            "description": "Whether or not this [Custom Field Definition](#tag/Custom-Field-Definitions) is marked as sensitive information.",
            "example": "false",
            "type": "boolean"
          },
          "selectDefinition": {
            "title": "The select definition of the custom field definition",
            "description": "This field is becomes `required` with type `MULTI_SELECT` or `SINGLE_SELECT`",
            "type": "object",
            "properties": {
              "options": {
                "type": "array",
                "description": "List of options",
                "title": "options",
                "items": {
                  "type": "object",
                  "properties": {
                    "label": {
                      "description": "The option name of the custom field",
                      "type": "string"
                    },
                    "isEnabled": {
                      "description": "If this option can be selected or not",
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "textDefinition": {
            "title": "Optionally add text validation of the custom field definition",
            "description": "This field is used in conjunction with type `TEXT`",
            "type": "object",
            "properties": {
              "regex": {
                "type": "string"
              },
              "validationError": {
                "type": "string"
              }
            }
          },
          "peopleDropdownDefinition": {
            "title": "The people dropdown definition of the custom field definition",
            "description": "This field is `required` when type `PEOPLE_DROPDOWN` is used",
            "properties": {
              "allowSelectingIndividualJobs": {
                "description": "Optionally include jobs as custom field",
                "type": "boolean"
              }
            }
          }
        },
        "required": [
          "name",
          "apiName",
          "modelType",
          "type"
        ]
      },
      "custom-field-definition_patch_request": {
        "type": "object",
        "title": "Custom Field Definition",
        "properties": {
          "name": {
            "description": "Name given to this [Custom Field Definition](#tag/Custom-Field-Definitions). This name would normally be shown to users of the system.",
            "example": "Custom Field",
            "type": "string"
          },
          "description": {
            "description": "The description of this [Custom Field Definition](#tag/Custom-Field-Definitions). This is used as a tooltip on the create and update pages.",
            "example": "This field is used to describe the custom field.",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "isEnabled": {
            "description": "Whether or not this [Custom Field Definition](#tag/Custom-Field-Definitions) is enabled to be used.",
            "example": "false",
            "type": "boolean"
          },
          "isSensitive": {
            "description": "Whether or not this [Custom Field Definition](#tag/Custom-Field-Definitions) is marked as sensitive information.",
            "example": "false",
            "type": "boolean"
          },
          "selectDefinition": {
            "title": "The select definition of the custom field definition",
            "description": "This field is becomes `required` with type `MULTI_SELECT` or `SINGLE_SELECT`",
            "type": "object",
            "properties": {
              "options": {
                "type": "array",
                "description": "List of options",
                "title": "options",
                "items": {
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "description": "The unique identifier of the option",
                      "type": "string",
                      "example": "2b6ba8ae-a10c-43a5-b786-f230f73f411a"
                    },
                    "label": {
                      "description": "The option name of the custom field",
                      "type": "string",
                      "example": "Favorite Pizza"
                    },
                    "isEnabled": {
                      "description": "If this option can be selected or not",
                      "type": "boolean",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "peopleDropdownDefinition": {
            "title": "The people dropdown definition of the custom field definition",
            "description": "This field is used in conjunction with type `PEOPLE_DROPDOWN`",
            "properties": {
              "allowSelectingIndividualJobs": {
                "description": "Optionally include jobs as custom field",
                "type": "boolean"
              }
            }
          }
        }
      },
      "default-remuneration-components": {
        "type": "object",
        "title": "Single Default Remuneration Component",
        "properties": {
          "data": {
            "type": "object",
            "title": "Default Remuneration Component",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Default Remuneration Component](#tag/Default-Remuneration-Components).",
                "type": "string"
              },
              "name": {
                "description": "Name given to this [Default Remuneration Component](#tag/Default-Remuneration-Components). This name would normally be shown to users of the system.",
                "example": "Superannuation",
                "type": "string"
              },
              "value": {
                "description": "The value of this remuneration component. For multipleOfBase this is the multiplier while for fixed amount this is the amount to directly add to the total.",
                "example": "0.09",
                "type": "string"
              },
              "isInUse": {
                "description": "Whether this [Default Remuneration Component](#tag/Default-Remuneration-Components) is used as any remuneration components.",
                "example": true,
                "type": "boolean"
              },
              "automaticallyAddToJobs": {
                "description": "Whether this [Default Remuneration Component](#tag/Default-Remuneration-Components) is automatically added to newly created/updated jobs.",
                "type": "boolean",
                "example": false
              },
              "isEnabled": {
                "description": "If this [Default Remuneration Component](#tag/Default-Remuneration-Components) is enabled for use in the system.",
                "type": "boolean",
                "example": true
              },
              "currency": {
                "title": "Currency code",
                "description": "The currency used for this [Default Remuneration Component](#tag/Default-Remuneration-Components). An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                "example": "AUD",
                "pattern": "^[A-Z]{3}$",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "type": {
                "description": "The type of this [Default Remuneration Component](#tag/Default-Remuneration-Components). Enum: `AdditionToBase`, `AdditionToTotal`, `DeductionToBase`, `Breakdown`.",
                "type": "string",
                "example": "AdditionToTotal"
              },
              "valueType": {
                "description": "The type of the value of this [Default Remuneration Component](#tag/Default-Remuneration-Components). Enum: `MultipleOfBase`, `FixedAmount`.",
                "type": "string",
                "example": "MultipleOfBase"
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          }
        }
      },
      "default-remuneration-components_list": {
        "type": "object",
        "title": "List of Default Remuneration Components",
        "properties": {
          "data": {
            "type": "array",
            "title": "data",
            "items": {
              "type": "object",
              "title": "Default Remuneration Component",
              "properties": {
                "id": {
                  "title": "UUIDv4",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "description": "The identifier string for the [Default Remuneration Component](#tag/Default-Remuneration-Components).",
                  "type": "string"
                },
                "name": {
                  "description": "Name given to this [Default Remuneration Component](#tag/Default-Remuneration-Components). This name would normally be shown to users of the system.",
                  "example": "Superannuation",
                  "type": "string"
                },
                "value": {
                  "description": "The value of this remuneration component. For multipleOfBase this is the multiplier while for fixed amount this is the amount to directly add to the total.",
                  "example": "0.09",
                  "type": "string"
                },
                "isInUse": {
                  "description": "Whether this [Default Remuneration Component](#tag/Default-Remuneration-Components) is used as any remuneration components.",
                  "example": true,
                  "type": "boolean"
                },
                "automaticallyAddToJobs": {
                  "description": "Whether this [Default Remuneration Component](#tag/Default-Remuneration-Components) is automatically added to newly created/updated jobs.",
                  "type": "boolean",
                  "example": false
                },
                "isEnabled": {
                  "description": "If this [Default Remuneration Component](#tag/Default-Remuneration-Components) is enabled for use in the system.",
                  "type": "boolean",
                  "example": true
                },
                "currency": {
                  "title": "Currency code",
                  "description": "The currency used for this [Default Remuneration Component](#tag/Default-Remuneration-Components). An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                  "example": "AUD",
                  "pattern": "^[A-Z]{3}$",
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "type": {
                  "description": "The type of this [Default Remuneration Component](#tag/Default-Remuneration-Components). Enum: `AdditionToBase`, `AdditionToTotal`, `DeductionToBase`, `Breakdown`.",
                  "type": "string",
                  "example": "AdditionToTotal"
                },
                "valueType": {
                  "description": "The type of the value of this [Default Remuneration Component](#tag/Default-Remuneration-Components). Enum: `MultipleOfBase`, `FixedAmount`.",
                  "type": "string",
                  "example": "MultipleOfBase"
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "pagination": {
                "type": "object",
                "description": "Contains information related to the pagination of the response",
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total items count",
                    "minimum": 0,
                    "example": 50
                  },
                  "count": {
                    "type": "integer",
                    "description": "Number of items for current page",
                    "minimum": 0,
                    "example": 10
                  },
                  "per_page": {
                    "type": "integer",
                    "description": "Items per page limit",
                    "minimum": 0,
                    "example": 10
                  },
                  "current_page": {
                    "type": "integer",
                    "description": "Current page",
                    "minimum": 1,
                    "example": 3
                  },
                  "total_pages": {
                    "type": "integer",
                    "description": "Total number of pages",
                    "minimum": 1,
                    "example": 5
                  }
                }
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          },
          "links": {
            "type": "object",
            "description": "Links to other related resources.",
            "properties": {
              "self": {
                "type": "string",
                "description": "The current page URL",
                "example": "https://api.intellihr.io/v1/default-remuneration-components?limit=1&page=3"
              },
              "first": {
                "type": "string",
                "description": "The first page URL",
                "example": "https://api.intellihr.io/v1/default-remuneration-components?limit=1&page=1"
              },
              "prev": {
                "type": "string",
                "description": "The previous page URL",
                "example": "https://api.intellihr.io/v1/default-remuneration-components?limit=1&page=2"
              },
              "next": {
                "type": "string",
                "description": "The next page URL",
                "example": "https://api.intellihr.io/v1/default-remuneration-components?limit=1&page=4"
              },
              "last": {
                "type": "string",
                "description": "The last page URL",
                "example": "https://api.intellihr.io/v1/default-remuneration-components?limit=1&page=5"
              }
            }
          }
        }
      },
      "employment-conditions": {
        "type": "object",
        "title": "Single Employment Condition",
        "properties": {
          "data": {
            "type": "object",
            "title": "Employment Condition",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Employment Condition](#tag/Employment-Conditions).",
                "type": "string"
              },
              "name": {
                "description": "Name given to this [Employment Condition](#tag/Employment-Conditions). This name would normally be shown to users of the system.",
                "example": "Professional Employees Award 2010",
                "type": "string"
              },
              "awardName": {
                "description": "Award name can be different from the name presented to a user. Usually used for the legal name of the award.",
                "example": "MA000065: Professional Employees Award 2010 - Fair Work Commission",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "isEnabled": {
                "type": "boolean",
                "description": "Specifies whether users can select this [Employment Condition](#tag/Employment-Conditions) in dropdowns."
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          }
        }
      },
      "employment-conditions_list": {
        "type": "object",
        "title": "List of Employment Conditions",
        "properties": {
          "data": {
            "type": "array",
            "title": "data",
            "items": {
              "type": "object",
              "title": "Employment Condition",
              "properties": {
                "id": {
                  "title": "UUIDv4",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "description": "The identifier string for the [Employment Condition](#tag/Employment-Conditions).",
                  "type": "string"
                },
                "name": {
                  "description": "Name given to this [Employment Condition](#tag/Employment-Conditions). This name would normally be shown to users of the system.",
                  "example": "Professional Employees Award 2010",
                  "type": "string"
                },
                "awardName": {
                  "description": "Award name can be different from the name presented to a user. Usually used for the legal name of the award.",
                  "example": "MA000065: Professional Employees Award 2010 - Fair Work Commission",
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "isEnabled": {
                  "type": "boolean",
                  "description": "Specifies whether users can select this [Employment Condition](#tag/Employment-Conditions) in dropdowns."
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "pagination": {
                "type": "object",
                "description": "Contains information related to the pagination of the response",
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total items count",
                    "minimum": 0,
                    "example": 50
                  },
                  "count": {
                    "type": "integer",
                    "description": "Number of items for current page",
                    "minimum": 0,
                    "example": 10
                  },
                  "per_page": {
                    "type": "integer",
                    "description": "Items per page limit",
                    "minimum": 0,
                    "example": 10
                  },
                  "current_page": {
                    "type": "integer",
                    "description": "Current page",
                    "minimum": 1,
                    "example": 3
                  },
                  "total_pages": {
                    "type": "integer",
                    "description": "Total number of pages",
                    "minimum": 1,
                    "example": 5
                  }
                }
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          },
          "links": {
            "type": "object",
            "description": "Links to other related resources.",
            "properties": {
              "self": {
                "type": "string",
                "description": "The current page URL",
                "example": "https://api.intellihr.io/v1/employment-conditions?limit=1&page=3"
              },
              "first": {
                "type": "string",
                "description": "The first page URL",
                "example": "https://api.intellihr.io/v1/employment-conditions?limit=1&page=1"
              },
              "prev": {
                "type": "string",
                "description": "The previous page URL",
                "example": "https://api.intellihr.io/v1/employment-conditions?limit=1&page=2"
              },
              "next": {
                "type": "string",
                "description": "The next page URL",
                "example": "https://api.intellihr.io/v1/employment-conditions?limit=1&page=4"
              },
              "last": {
                "type": "string",
                "description": "The last page URL",
                "example": "https://api.intellihr.io/v1/employment-conditions?limit=1&page=5"
              }
            }
          }
        }
      },
      "leave_create_request": {
        "type": "object",
        "required": [
          "jobId",
          "leaveType",
          "startDate",
          "endDate"
        ],
        "properties": {
          "jobId": {
            "title": "UUIDv4",
            "maxLength": 36,
            "minLength": 36,
            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
            "description": "The identifier string for the [Job](#tag/jobs) that this extended leave belongs to.",
            "type": "string"
          },
          "startDate": {
            "title": "RFC3339 datetime",
            "example": "2015-03-01T22:30:00+00:00",
            "description": "The date this [Extended Leave](#tag/extended-leave) started or will start. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
            "type": "string"
          },
          "endDate": {
            "title": "RFC3339 datetime",
            "example": "2015-03-01T22:30:00+00:00",
            "description": "The date this [Extended Leave](#tag/extended-leave) is expected to end. Leave is created without a finalised return date. In order to create more than one Extended Leave on a Job, the end date must be finalised on the most recent created Extended Leave. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
            "type": "string"
          },
          "leaveType": {
            "type": "object",
            "description": "[Extended Leave Type](#tag/extended-leave-types) of this Extended Leave. This [Extended Leave Type](#tag/extended-leave-types) is specified as a search object, which will match the leave type which best fits the keys for this object. Multiple keys can be used together to further narrow search results.",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Extended Leave Type](#tag/extended-leave-types).",
                "type": "string"
              },
              "name": {
                "type": "string",
                "description": "The name of the [Extended Leave Type](#tag/extended-leave-types).",
                "example": "Long Service"
              }
            }
          },
          "fte": {
            "type": "string",
            "description": "The full time equivalent for this [Job](#tag/jobs) if changing during this leave period.",
            "example": "1"
          }
        }
      },
      "leave_create_response": {
        "type": "object",
        "title": "Single Extended Leave",
        "properties": {
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "asAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The point in time for which this response is for. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "workflowEvent": {
                "type": "string",
                "description": "An link to fetch all [Workflows](#tags/workflows) that belong under the Workflow Event for this Extended Leave creation.",
                "example": "https://api.intellihr.io/v1/workflow-events/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
              },
              "workflowEventId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Workflow Event](#tags/workflow-events).",
                "type": "string"
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          },
          "data": {
            "type": "object",
            "title": "Extended Leave",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Extended Leave](#tag/extended-leave).",
                "type": "string"
              },
              "startDate": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The date this [Extended Leave](#tag/extended-leave) started or will start. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "endDate": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The date this [Extended Leave](#tag/extended-leave) started or will start. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "isEndDateConfirmed": {
                "type": "boolean",
                "description": "Whether the end date has been finalised for this [Extended Leave](#tag/extended-leave).",
                "example": false
              },
              "leaveType": {
                "type": "object",
                "title": "Extended Leave Type",
                "description": "The [Extended Leave Type](#tag/extended-leave-types) of Extended Leave.",
                "properties": {
                  "id": {
                    "title": "UUIDv4",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "description": "The identifier string for the [Extended Leave Type](#tag/extended-leave-types).",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name given to this [Extended Leave Type](#tag/extended-leave-types). This name would normally be shown to users of the system.",
                    "example": "Long Service",
                    "type": "string"
                  }
                }
              },
              "job": {
                "type": "object",
                "title": "Job",
                "description": "The [Job](#tag/jobs) that this Extended Leave belongs to.",
                "properties": {
                  "id": {
                    "title": "UUIDv4",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "description": "The identifier string for the [Job](#tag/jobs) that this Extended Leave belongs to.",
                    "type": "string"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name/position title of this [Job](#tags/jobs).",
                    "example": "Software Engineer"
                  },
                  "link": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/jobs/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              },
              "person": {
                "type": "object",
                "description": "The [Person](#tag/People) to whom this Extended Leave belongs to.",
                "properties": {
                  "id": {
                    "title": "UUIDv4",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "description": "The identifier string for the [Person](#tag/People) to whom this Extended Leave belongs to.",
                    "type": "string"
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Name to display throughout the system for this [Person](#tags/people). Generally follows the pattern preferredName (firstName) lastName, but can be configured on a tenant-wide basis to be a different format.",
                    "example": "Batman (Bruce) Wayne"
                  },
                  "employeeNumber": {
                    "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                    "example": "00001",
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "autoIncrementIntellihrId": {
                    "type": "number",
                    "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                    "example": 1000
                  },
                  "link": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/people/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              }
            }
          }
        }
      },
      "leave_update_request": {
        "type": "object",
        "required": [
          "jobId",
          "endDate"
        ],
        "properties": {
          "jobId": {
            "title": "UUIDv4",
            "maxLength": 36,
            "minLength": 36,
            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
            "description": "The identifier string for the [Job](#tag/jobs) that this extended leave belongs to.",
            "type": "string"
          },
          "shouldNotFinaliseEndDate": {
            "type": "boolean",
            "description": "Whether or not to finalise the end date for the [Extended Leave](#tag/extended-leave). This boolean will change the input variables required if you are finalising an Extended Leave or just updating it. Finalising the end date prevents any further changes to this Extended Leave.",
            "default": false,
            "example": false
          },
          "startDate": {
            "title": "RFC3339 datetime",
            "example": "2015-03-01T22:30:00+00:00",
            "description": "The date this [Extended Leave](#tag/extended-leave) started or will start. This field is only required if not finalising the Extended Leave end date, and will not be used if shouldNotFinaliseEndDate is not set or is set to false. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
            "type": "string"
          },
          "endDate": {
            "title": "RFC3339 datetime",
            "example": "2015-03-01T22:30:00+00:00",
            "description": "The date this [Extended Leave](#tag/extended-leave) is expected to end. Leave is created without a finalised return date. In order to create more than one Extended Leave on a Job, the end date must be finalised on the most recent created Extended Leave. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
            "type": "string"
          },
          "leaveType": {
            "type": "object",
            "description": "[Extended Leave Type](#tag/extended-leave-types) of this Extended Leave. This [Extended Leave Type](#tag/extended-leave-types) is specified as a search object, which will match the leave type which best fits the keys for this object. Multiple keys can be used together to further narrow search results. This field is only required if not finalising the Extended Leave end date, and will not be used if shouldNotFinaliseEndDate is not set or is set to false.",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Extended Leave Type](#tag/extended-leave-types).",
                "type": "string"
              },
              "name": {
                "type": "string",
                "description": "The name of the [Extended Leave Type](#tag/extended-leave-types).",
                "example": "Long Service"
              }
            }
          },
          "fte": {
            "type": "string",
            "description": "The full time equivalent for this [Job](#tag/jobs) upon returning from Extended Leave. This field is only required when finalising the Extended Leave end date, and will not be used if shouldNotFinaliseEndDate is set to true.",
            "example": "1"
          }
        }
      },
      "leave_update_response": {
        "type": "object",
        "title": "Single Extended Leave",
        "properties": {
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "asAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The point in time for which this response is for. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "workflowEvent": {
                "description": "This field will be returned when finalising the Extended Leave. If shouldNotFinaliseEndDate is set to true, no workflowEvent link will be returned.",
                "oneOf": [
                  {
                    "type": "string",
                    "description": "An link to fetch all [Workflows](#tags/workflows) that belong under the Workflow Event for this Extended Leave creation.",
                    "example": "https://api.intellihr.io/v1/workflow-events/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "workflowEventId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Workflow Event](#tags/workflow-events).",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          },
          "data": {
            "type": "object",
            "title": "Extended Leave",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Extended Leave](#tag/extended-leave).",
                "type": "string"
              },
              "startDate": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The date this [Extended Leave](#tag/extended-leave) started or will start. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "endDate": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The date this [Extended Leave](#tag/extended-leave) started or will start. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "isEndDateConfirmed": {
                "type": "boolean",
                "description": "Whether the end date has been finalised for this [Extended Leave](#tag/extended-leave).",
                "example": false
              },
              "leaveType": {
                "type": "object",
                "title": "Extended Leave Type",
                "description": "The [Extended Leave Type](#tag/extended-leave-types) of Extended Leave.",
                "properties": {
                  "id": {
                    "title": "UUIDv4",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "description": "The identifier string for the [Extended Leave Type](#tag/extended-leave-types).",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name given to this [Extended Leave Type](#tag/extended-leave-types). This name would normally be shown to users of the system.",
                    "example": "Long Service",
                    "type": "string"
                  }
                }
              },
              "job": {
                "type": "object",
                "title": "Job",
                "description": "The [Job](#tag/jobs) that this Extended Leave belongs to.",
                "properties": {
                  "id": {
                    "title": "UUIDv4",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "description": "The identifier string for the [Job](#tag/jobs) that this Extended Leave belongs to.",
                    "type": "string"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name/position title of this [Job](#tags/jobs).",
                    "example": "Software Engineer"
                  },
                  "link": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/jobs/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              },
              "person": {
                "type": "object",
                "description": "The [Person](#tag/People) to whom this Extended Leave belongs to.",
                "properties": {
                  "id": {
                    "title": "UUIDv4",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "description": "The identifier string for the [Person](#tag/People) to whom this Extended Leave belongs to.",
                    "type": "string"
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Name to display throughout the system for this [Person](#tags/people). Generally follows the pattern preferredName (firstName) lastName, but can be configured on a tenant-wide basis to be a different format.",
                    "example": "Batman (Bruce) Wayne"
                  },
                  "employeeNumber": {
                    "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                    "example": "00001",
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "autoIncrementIntellihrId": {
                    "type": "number",
                    "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                    "example": 1000
                  },
                  "link": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/people/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              }
            }
          }
        }
      },
      "extended-leave-types": {
        "type": "object",
        "title": "Single Extended Leave Type",
        "properties": {
          "data": {
            "type": "object",
            "title": "Extended Leave Type",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Extended Leave Type](#tag/extended-leave-types).",
                "type": "string"
              },
              "name": {
                "description": "Name given to this [Extended Leave Type](#tag/extended-leave-types). This name would normally be shown to users of the system.",
                "example": "Long Service",
                "type": "string"
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          }
        }
      },
      "extended-leave-types_list": {
        "type": "object",
        "title": "List of Extended Leave Types",
        "properties": {
          "data": {
            "type": "array",
            "title": "data",
            "items": {
              "type": "object",
              "title": "Extended Leave Type",
              "properties": {
                "id": {
                  "title": "UUIDv4",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "description": "The identifier string for the [Extended Leave Type](#tag/extended-leave-types).",
                  "type": "string"
                },
                "name": {
                  "description": "Name given to this [Extended Leave Type](#tag/extended-leave-types). This name would normally be shown to users of the system.",
                  "example": "Long Service",
                  "type": "string"
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "pagination": {
                "type": "object",
                "description": "Contains information related to the pagination of the response",
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total items count",
                    "minimum": 0,
                    "example": 50
                  },
                  "count": {
                    "type": "integer",
                    "description": "Number of items for current page",
                    "minimum": 0,
                    "example": 10
                  },
                  "per_page": {
                    "type": "integer",
                    "description": "Items per page limit",
                    "minimum": 0,
                    "example": 10
                  },
                  "current_page": {
                    "type": "integer",
                    "description": "Current page",
                    "minimum": 1,
                    "example": 3
                  },
                  "total_pages": {
                    "type": "integer",
                    "description": "Total number of pages",
                    "minimum": 1,
                    "example": 5
                  }
                }
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          },
          "links": {
            "type": "object",
            "description": "Links to other related resources.",
            "properties": {
              "self": {
                "type": "string",
                "description": "The current page URL",
                "example": "https://api.intellihr.io/v1/extended-leave-types?limit=1&page=3"
              },
              "first": {
                "type": "string",
                "description": "The first page URL",
                "example": "https://api.intellihr.io/v1/extended-leave-types?limit=1&page=1"
              },
              "prev": {
                "type": "string",
                "description": "The previous page URL",
                "example": "https://api.intellihr.io/v1/extended-leave-types?limit=1&page=2"
              },
              "next": {
                "type": "string",
                "description": "The next page URL",
                "example": "https://api.intellihr.io/v1/extended-leave-types?limit=1&page=4"
              },
              "last": {
                "type": "string",
                "description": "The last page URL",
                "example": "https://api.intellihr.io/v1/extended-leave-types?limit=1&page=5"
              }
            }
          }
        }
      },
      "forms": {
        "type": "object",
        "title": "Single Form",
        "properties": {
          "data": {
            "type": "object",
            "title": "Form",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Form](#tag/Forms).",
                "type": "string"
              },
              "issueDate": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The date this [Form](#tags/forms) was issued to the recipient. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "dueDate": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The due date for the recipient to complete this [Form](#tags/forms). This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "reminderDate": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The date a reminder notification will be sent out for this [Form](#tags/forms) if uncompleted. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "accessCode": {
                "type": "string",
                "description": "The authorization code required to access this form via a url.",
                "example": "ABCDE12345"
              },
              "completedAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The date this [Form](#tags/forms) was completed. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "formDesign": {
                "description": "The Form Design information for this [Form](#tag/Forms) instance",
                "type": "object",
                "properties": {
                  "id": {
                    "title": "UUIDv4",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "description": "The identifier string for the Form Design.",
                    "type": "string"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of this Form Design.",
                    "example": "Self Assessment"
                  }
                }
              },
              "subject": {
                "description": "The subject that this [Form](#tag/Forms) is about",
                "type": "object",
                "properties": {
                  "job": {
                    "type": "object",
                    "description": "The [Job](#tag/Jobs) of the respondent for this [Form](#tag/Forms)",
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the [Job](#tag/Jobs).",
                        "type": "string"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name/position title of this [Job](#tag/Jobs).",
                        "example": "Janitor"
                      },
                      "link": {
                        "type": "string",
                        "title": "URL",
                        "description": "Link on the public api to get more information on this piece of data.",
                        "example": "https://api.intellihr.io/v1/jobs/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                      }
                    }
                  },
                  "person": {
                    "type": "object",
                    "description": "The subject [Person](#tag/People) of this [Form](#tag/Forms)",
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the [Person](#tag/People).",
                        "type": "string"
                      },
                      "displayName": {
                        "type": "string",
                        "description": "Name to display throughout the system for this [Person](#tags/people). Generally follows the pattern preferredName (firstName) lastName, but can be configured on a tenant-wide basis to be a different format.",
                        "example": "Batman (Bruce) Wayne"
                      },
                      "employeeNumber": {
                        "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                        "example": "00001",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "autoIncrementIntellihrId": {
                        "type": "number",
                        "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                        "example": 1000
                      },
                      "link": {
                        "type": "string",
                        "title": "URL",
                        "description": "Link on the public api to get more information on this piece of data.",
                        "example": "https://api.intellihr.io/v1/people/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                      }
                    }
                  }
                }
              },
              "respondent": {
                "oneOf": [
                  {
                    "type": "object"
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "The expected respondent for this [Form](#tag/Forms)",
                "properties": {
                  "job": {
                    "type": "object",
                    "description": "The [Job](#tag/Jobs) of the respondent for this [Form](#tag/Forms)",
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the [Job](#tag/Jobs).",
                        "type": "string"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name/position title of this [Job](#tag/Jobs).",
                        "example": "Janitor"
                      },
                      "link": {
                        "type": "string",
                        "title": "URL",
                        "description": "Link on the public api to get more information on this piece of data.",
                        "example": "https://api.intellihr.io/v1/jobs/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                      }
                    }
                  },
                  "person": {
                    "type": "object",
                    "description": "The respondent [Person](#tag/People) for this [Form](#tag/Forms)",
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the [Person](#tag/People).",
                        "type": "string"
                      },
                      "displayName": {
                        "type": "string",
                        "description": "Name to display throughout the system for this [Person](#tags/people). Generally follows the pattern preferredName (firstName) lastName, but can be configured on a tenant-wide basis to be a different format.",
                        "example": "Batman (Bruce) Wayne"
                      },
                      "emailAddresses": {
                        "type": "array",
                        "description": "An array of email addresses that belong to this Person.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "description": "The actual email address.",
                              "oneOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "null",
                                  "example": null
                                }
                              ],
                              "example": "bruce.wayne@batman.org"
                            },
                            "isPrimary": {
                              "type": "boolean",
                              "description": "If this is a primary email address.",
                              "example": true
                            },
                            "isPersonal": {
                              "type": "boolean",
                              "description": "If this is a personal email address.",
                              "example": false
                            }
                          }
                        }
                      },
                      "employeeNumber": {
                        "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                        "example": "00001",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "autoIncrementIntellihrId": {
                        "type": "number",
                        "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                        "example": 1000
                      },
                      "link": {
                        "type": "string",
                        "title": "URL",
                        "description": "Link on the public api to get more information on this piece of data.",
                        "example": "https://api.intellihr.io/v1/people/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                      }
                    }
                  }
                }
              },
              "submitter": {
                "description": "The person who submitted this [Form](#tag/Forms), note that this can be different from the expected respondent. If this form has not been ccompleted, this will be null",
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "job": {
                        "description": "[Job](#tag/Jobs) to whom this [Form](#tag/Forms) expects a response from. This job value has been deprecated, you should now reference the job object within the respondent field.",
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "title": "UUIDv4",
                                "maxLength": 36,
                                "minLength": 36,
                                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                "description": "The identifier string for the [Job](#tag/Jobs) to whom this [Form](#tag/Forms) belongs.",
                                "type": "string"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name/position title of this [Job](#tag/Jobs).",
                                "example": "Janitor"
                              },
                              "link": {
                                "type": "string",
                                "title": "URL",
                                "description": "Link on the public api to get more information on this piece of data.",
                                "example": "https://api.intellihr.io/v1/jobs/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                              }
                            }
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "person": {
                        "type": "object",
                        "description": "[Person](#tag/People) to whom this [Form](#tag/Forms) expects a response from. Note that this person value has been deprecated, you should now reference the person object within the respondent field.",
                        "properties": {
                          "id": {
                            "title": "UUIDv4",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "description": "The identifier string for the [Person](#tag/People) to whom this [Form](#tag/Forms) belongs.",
                            "type": "string"
                          },
                          "displayName": {
                            "type": "string",
                            "description": "Name to display throughout the system for this [Person](#tags/people). Generally follows the pattern preferredName (firstName) lastName, but can be configured on a tenant-wide basis to be a different format.",
                            "example": "Batman (Bruce) Wayne"
                          },
                          "emailAddresses": {
                            "type": "array",
                            "description": "An array of email addresses that belong to this Person.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "email": {
                                  "description": "The actual email address.",
                                  "oneOf": [
                                    {
                                      "type": "string"
                                    },
                                    {
                                      "type": "null",
                                      "example": null
                                    }
                                  ],
                                  "example": "bruce.wayne@batman.org"
                                },
                                "isPrimary": {
                                  "type": "boolean",
                                  "description": "If this is a primary email address.",
                                  "example": true
                                },
                                "isPersonal": {
                                  "type": "boolean",
                                  "description": "If this is a personal email address.",
                                  "example": false
                                }
                              }
                            }
                          },
                          "employeeNumber": {
                            "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                            "example": "00001",
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "autoIncrementIntellihrId": {
                            "type": "number",
                            "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                            "example": 1000
                          },
                          "link": {
                            "type": "string",
                            "title": "URL",
                            "description": "Link on the public api to get more information on this piece of data.",
                            "example": "https://api.intellihr.io/v1/people/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "answers": {
                "description": "An array of answers for this [Form](#tag/forms).  If this form has not been completed, this field will be null.",
                "oneOf": [
                  {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "fieldId": {
                          "title": "UUIDv4",
                          "maxLength": 36,
                          "minLength": 36,
                          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                          "description": "The identifier string for the field item relating to this answer.",
                          "type": "string"
                        },
                        "question": {
                          "type": "string",
                          "description": "The question label relating to this field on the [Form](#tag/forms)",
                          "example": "Do you like intelliHR?"
                        },
                        "value": {
                          "description": "An array of strings containing the answer values for this question. If this field was optional and unanswered, this field will be null.",
                          "oneOf": [
                            {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "example": "My Answer"
                              }
                            },
                            {
                              "type": "null"
                            }
                          ]
                        },
                        "label": {
                          "description": "An array of strings containing the Labels associated to the value of the answers. This is particularly useful for selection based questions where the label may be more user-friendly to the value of the selection. For text based answers, the value will be used.  If this field was optional and unanswered, this field will be null.",
                          "oneOf": [
                            {
                              "type": "array",
                              "items": {
                                "type": "string",
                                "example": "bruce.wayne@batman.org"
                              }
                            },
                            {
                              "type": "null"
                            }
                          ]
                        }
                      }
                    },
                    "example": [
                      {
                        "fieldId": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "question": "Please answer this text based question",
                        "value": [
                          "My answer"
                        ],
                        "label": [
                          "My answer"
                        ]
                      },
                      {
                        "fieldId": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "question": "Please select multiple options",
                        "value": [
                          "0",
                          "1"
                        ],
                        "label": [
                          "Option 1",
                          "Option 2"
                        ]
                      }
                    ]
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "documentUploads": {
                "description": "A list of documents uploaded in this form.",
                "type": "array",
                "minItems": 0,
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "UUIDv4",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "description": "The identifier string for the Documents to which [Form](#tag/Forms) belongs.",
                      "type": "string"
                    },
                    "url": {
                      "description": "A downloadable Url of the document.",
                      "example": "http://{tenant}.internihr.ninja/api/domain/people/6ced7aed-adeb-4645-896a-5eaa21f4bf6e/attachments/0f1d4fb7-ef1b-4ca5-908f-1c73f489be04/download",
                      "type": "string"
                    }
                  }
                }
              },
              "job": {
                "deprecated": true,
                "description": "[Job](#tag/Jobs) to whom this [Form](#tag/Forms) expects a response from. This job value has been deprecated, you should now reference the job object within the respondent field.",
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the [Job](#tag/Jobs) to whom this [Form](#tag/Forms) belongs.",
                        "type": "string"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name/position title of this [Job](#tag/Jobs).",
                        "example": "Janitor"
                      },
                      "link": {
                        "type": "string",
                        "title": "URL",
                        "description": "Link on the public api to get more information on this piece of data.",
                        "example": "https://api.intellihr.io/v1/jobs/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                      }
                    }
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "person": {
                "deprecated": true,
                "description": "[Person](#tag/People) to whom this [Form](#tag/Forms) expects a response from. Note that this person value has been deprecated, you should now reference the person object within the respondent field.",
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the [Person](#tag/People) to whom this [Form](#tag/Forms) belongs.",
                        "type": "string"
                      },
                      "displayName": {
                        "type": "string",
                        "description": "Name to display throughout the system for this [Person](#tags/people). Generally follows the pattern preferredName (firstName) lastName, but can be configured on a tenant-wide basis to be a different format.",
                        "example": "Batman (Bruce) Wayne"
                      },
                      "emailAddresses": {
                        "type": "array",
                        "description": "An array of email addresses that belong to this Person.",
                        "items": {
                          "properties": {
                            "email": {
                              "description": "The actual email address.",
                              "oneOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "null"
                                }
                              ],
                              "example": "bruce.wayne@batman.org"
                            },
                            "isPrimary": {
                              "type": "boolean",
                              "description": "If this is a primary email address.",
                              "example": true
                            },
                            "isPersonal": {
                              "type": "boolean",
                              "description": "If this is a personal email address.",
                              "example": false
                            }
                          }
                        }
                      },
                      "employeeNumber": {
                        "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                        "example": "00001",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "autoIncrementIntellihrId": {
                        "type": "number",
                        "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                        "example": 1000
                      },
                      "link": {
                        "type": "string",
                        "title": "URL",
                        "description": "Link on the public api to get more information on this piece of data.",
                        "example": "https://api.intellihr.io/v1/people/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                      }
                    }
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "asAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The point in time for which this response is for. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          }
        }
      },
      "job-change-reasons": {
        "type": "object",
        "title": "Response",
        "properties": {
          "data": {
            "type": "object",
            "title": "Job Change Reason",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Job Change Reason](#tag/Job-Change-Reasons).",
                "type": "string"
              },
              "name": {
                "description": "Name given to this [Job Change Reason](#tag/Job-Change-Reasons). This name would normally be shown to users of the system.",
                "example": "Engineering",
                "type": "string"
              },
              "isEnabled": {
                "type": "boolean",
                "description": "Specifies whether users can select this [Job Change Reason](#tag/Job-Change-Reasons) in dropdowns."
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "asAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The point in time for which this response is for. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          }
        }
      },
      "job-change-reasons_create_request": {
        "type": "object",
        "title": "Job Change Reason",
        "properties": {
          "name": {
            "description": "Name given to this [Job Change Reason](#tag/Job-Change-Reasons). This name would normally be shown to users of the system.",
            "example": "Engineering",
            "type": "string"
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Specifies whether users can select this [Job Change Reason](#tag/Job-Change-Reasons) in dropdowns."
          }
        },
        "required": [
          "name"
        ]
      },
      "job-change-reasons_patch_request": {
        "type": "object",
        "title": "Job Change Reason",
        "properties": {
          "name": {
            "description": "Name given to this [Job Change Reason](#tag/Job-Change-Reasons). This name would normally be shown to users of the system.",
            "example": "Engineering",
            "type": "string"
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Specifies whether users can select this [Job Change Reason](#tag/Job-Change-Reasons) in dropdowns."
          }
        }
      },
      "job-change-reasons_list": {
        "type": "object",
        "title": "List of Job Change Reasons",
        "properties": {
          "data": {
            "type": "array",
            "title": "data",
            "items": {
              "type": "object",
              "title": "Job Change Reason",
              "properties": {
                "id": {
                  "title": "UUIDv4",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "description": "The identifier string for the [Job Change Reason](#tag/Job-Change-Reasons).",
                  "type": "string"
                },
                "name": {
                  "description": "Name given to this [Job Change Reason](#tag/Job-Change-Reasons). This name would normally be shown to users of the system.",
                  "example": "Engineering",
                  "type": "string"
                },
                "isEnabled": {
                  "type": "boolean",
                  "description": "Specifies whether users can select this [Job Change Reason](#tag/Job-Change-Reasons) in dropdowns."
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "asAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The point in time for which this response is for. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "pagination": {
                "type": "object",
                "description": "Contains information related to the pagination of the response",
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total items count",
                    "minimum": 0,
                    "example": 50
                  },
                  "count": {
                    "type": "integer",
                    "description": "Number of items for current page",
                    "minimum": 0,
                    "example": 10
                  },
                  "per_page": {
                    "type": "integer",
                    "description": "Items per page limit",
                    "minimum": 0,
                    "example": 10
                  },
                  "current_page": {
                    "type": "integer",
                    "description": "Current page",
                    "minimum": 1,
                    "example": 3
                  },
                  "total_pages": {
                    "type": "integer",
                    "description": "Total number of pages",
                    "minimum": 1,
                    "example": 5
                  }
                }
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          },
          "links": {
            "type": "object",
            "description": "Links to other related resources.",
            "properties": {
              "self": {
                "type": "string",
                "description": "The current page URL",
                "example": "https://api.intellihr.io/v1/business-units?limit=1&page=3"
              },
              "first": {
                "type": "string",
                "description": "The first page URL",
                "example": "https://api.intellihr.io/v1/business-units?limit=1&page=1"
              },
              "prev": {
                "type": "string",
                "description": "The previous page URL",
                "example": "https://api.intellihr.io/v1/business-units?limit=1&page=2"
              },
              "next": {
                "type": "string",
                "description": "The next page URL",
                "example": "https://api.intellihr.io/v1/business-units?limit=1&page=4"
              },
              "last": {
                "type": "string",
                "description": "The last page URL",
                "example": "https://api.intellihr.io/v1/business-units?limit=1&page=5"
              }
            }
          }
        }
      },
      "job-requirement-groups_create_request": {
        "type": "object",
        "title": "Job Requirement Group",
        "properties": {
          "name": {
            "description": "The issue date of the [Job Requirement Group](#tag/Job-Requirement-Groups)",
            "example": "ABCDE12345",
            "type": "string"
          },
          "libraryItemIds": {
            "type": "array",
            "description": "The [Qualification Library Item](#tag/Qualification-Library-Item) ids assigned to this [Job Requirement Group](#tag/Job-Requirement-Groups).",
            "items": {
              "title": "UUIDv4",
              "maxLength": 36,
              "minLength": 36,
              "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
              "description": "The identifier string for the Qualification Library Item.",
              "type": "string"
            }
          }
        },
        "required": [
          "name",
          "libraryItemIds"
        ]
      },
      "job-requirement-groups_patch_request": {
        "type": "object",
        "title": "Job Requirement Group",
        "properties": {
          "name": {
            "description": "The issue date of the [Job Requirement Group](#tag/Job-Requirement-Groups)",
            "example": "ABCDE12345",
            "type": "string"
          },
          "libraryItemIds": {
            "type": "array",
            "description": "The [Qualification Library Item](#tag/Qualification-Library-Item) ids assigned to this [Job Requirement Group](#tag/Job-Requirement-Groups).",
            "items": {
              "title": "UUIDv4",
              "maxLength": 36,
              "minLength": 36,
              "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
              "description": "The identifier string for the Qualification Library Item.",
              "type": "string"
            }
          }
        },
        "required": [
          "name",
          "libraryItemIds"
        ]
      },
      "job-requirement-groups": {
        "type": "object",
        "title": "Single [Job Requirement Group](#tag/Job-Requirement-Groups)",
        "properties": {
          "data": {
            "type": "object",
            "title": "Job Requirement Group",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Job Requirement Group](#tag/Job-Requirement-Groups).",
                "type": "string"
              },
              "name": {
                "description": "The issue date of the [Job Requirement Group](#tag/Job-Requirement-Groups)",
                "example": "ABCDE12345",
                "type": "string"
              },
              "libraryItems": {
                "type": "array",
                "description": "The library items assigned to this [Job Requirement Group](#tag/Job-Requirement-Groups).",
                "items": {
                  "type": "object",
                  "description": "A [Qualification Library Item](#tag/Qualification-Library-Item) of this [Job Requirement Group](#tag/Job-Requirement-Groups)",
                  "properties": {
                    "id": {
                      "title": "UUIDv4",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "description": "The identifier string for the Qualification Library Item.",
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "description": "Library Item name"
                    },
                    "link": {
                      "type": "string",
                      "title": "URL",
                      "description": "Link on the public api to get more information on this piece of data.",
                      "example": "https://api.intellihr.io/v1/qualification-library-items/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                    }
                  }
                }
              },
              "jobRequirementUsageCount": {
                "description": "The count of how many times this job requirement group is being used in job requirements",
                "type": "number"
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "asAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The point in time for which this response is for. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          }
        }
      },
      "job-requirement-groups_list": {
        "type": "object",
        "title": "List Job Requirement Groups",
        "properties": {
          "data": {
            "type": "array",
            "title": "data",
            "items": {
              "type": "object",
              "title": "Job Requirement Group",
              "properties": {
                "id": {
                  "title": "UUIDv4",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "description": "The identifier string for the [Job Requirement Group](#tag/Job-Requirement-Groups).",
                  "type": "string"
                },
                "name": {
                  "description": "The issue date of the [Job Requirement Group](#tag/Job-Requirement-Groups)",
                  "example": "ABCDE12345",
                  "type": "string"
                },
                "libraryItems": {
                  "type": "array",
                  "description": "The library items assigned to this [Job Requirement Group](#tag/Job-Requirement-Groups).",
                  "items": {
                    "type": "object",
                    "description": "A [Qualification Library Item](#tag/Qualification-Library-Item) of this [Job Requirement Group](#tag/Job-Requirement-Groups)",
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the Qualification Library Item.",
                        "type": "string"
                      },
                      "name": {
                        "type": "string",
                        "description": "Library Item name"
                      },
                      "link": {
                        "type": "string",
                        "title": "URL",
                        "description": "Link on the public api to get more information on this piece of data.",
                        "example": "https://api.intellihr.io/v1/qualification-library-items/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                      }
                    }
                  }
                },
                "jobRequirementUsageCount": {
                  "description": "The count of how many times this job requirement group is being used in job requirements",
                  "type": "number"
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "asAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The point in time at which the data in this response is accurate. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "pagination": {
                "type": "object",
                "description": "Contains information related to the pagination of the response",
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total items count",
                    "minimum": 0,
                    "example": 50
                  },
                  "count": {
                    "type": "integer",
                    "description": "Number of items for current page",
                    "minimum": 0,
                    "example": 10
                  },
                  "per_page": {
                    "type": "integer",
                    "description": "Items per page limit",
                    "minimum": 0,
                    "example": 10
                  },
                  "current_page": {
                    "type": "integer",
                    "description": "Current page",
                    "minimum": 1,
                    "example": 3
                  },
                  "total_pages": {
                    "type": "integer",
                    "description": "Total number of pages",
                    "minimum": 1,
                    "example": 5
                  }
                }
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          },
          "links": {
            "type": "object",
            "description": "Links to other related resources.",
            "properties": {
              "self": {
                "type": "string",
                "description": "The current page URL",
                "example": "https://api.intellihr.io/v1/job-requirement-groups?limit=1&page=3"
              },
              "first": {
                "type": "string",
                "description": "The first page URL",
                "example": "https://api.intellihr.io/v1/job-requirement-groups?limit=1&page=1"
              },
              "prev": {
                "type": "string",
                "description": "The previous page URL",
                "example": "https://api.intellihr.io/v1/job-requirement-groups?limit=1&page=2"
              },
              "next": {
                "type": "string",
                "description": "The next page URL",
                "example": "https://api.intellihr.io/v1/job-requirement-groups?limit=1&page=4"
              },
              "last": {
                "type": "string",
                "description": "The last page URL",
                "example": "https://api.intellihr.io/v1/job-requirement-groups?limit=1&page=5"
              }
            }
          }
        }
      },
      "job_end_patch_request": {
        "type": "object",
        "properties": {
          "endDate": {
            "title": "RFC3339 datetime",
            "example": "2015-03-01T22:30:00+00:00",
            "description": "The <b>exclusive</b> date this [Job](#tags/jobs) ended or will end within the organisation. For example, if the person's last working date is on 2025-04-23, the `endDate` should be set as 2025-04-24 to reflect the exclusive date. Required if not finalising an end date, or the job does not have an end date. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
            "type": "string"
          },
          "reassignDirectReportsTo": {
            "title": "UUIDv4",
            "maxLength": 36,
            "minLength": 36,
            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
            "description": "The identifier string for the [Job](#tag/Jobs) of the person that the direct report will be reassigned to.",
            "type": "string"
          },
          "turnoverType": {
            "type": "string",
            "description": "The type of turnover this end of job would be classified as: `voluntary`, `involuntary` or `unknown`. Required if finalising an end date.",
            "example": "involuntary"
          },
          "turnoverReason": {
            "type": "string",
            "description": "The name of the turnover reason.",
            "example": "Medical reasons"
          }
        }
      },
      "job_end_patch_response": {
        "type": "object",
        "properties": {
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "asAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The point in time for which this response is for. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "workflowEvent": {
                "description": "This field will be returned if the request does finalise the job end date. I.e. The query param shouldNotFinaliseEndDate is not set or is set to false",
                "oneOf": [
                  {
                    "type": "string",
                    "description": "An link to fetch all [Workflows](#tags/workflows) that belong under the Workflow Event for this Job creation.",
                    "example": "https://api.intellihr.io/v1/workflow-events/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "workflowEventId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Workflow Event](#tags/workflow-events).",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          },
          "data": {
            "type": "object",
            "properties": {
              "job": {
                "type": "object",
                "properties": {
                  "id": {
                    "title": "UUIDv4",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "description": "The identifier string for the [Job](#tag/Jobs).",
                    "type": "string"
                  },
                  "person": {
                    "type": "object",
                    "description": "The [Person](#tag/People) to whom this [Job](#tag/Jobs) belongs.",
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the [Person](#tag/People) to whom this [Job](#tag/Jobs) belongs.",
                        "type": "string"
                      },
                      "displayName": {
                        "type": "string",
                        "description": "Name to display throughout the system for this [Person](#tags/people). Generally follows the pattern preferredName (firstName) lastName, but can be configured on a tenant-wide basis to be a different format.",
                        "example": "Batman (Bruce) Wayne"
                      },
                      "employeeNumber": {
                        "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                        "example": "00001",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "autoIncrementIntellihrId": {
                        "type": "number",
                        "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                        "example": 1000
                      },
                      "link": {
                        "type": "string",
                        "title": "URL",
                        "description": "Link on the public api to get more information on this piece of data.",
                        "example": "https://api.intellihr.io/v1/people/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                      }
                    }
                  },
                  "recruitment": {
                    "type": "object",
                    "description": "The recruitment details stored for this [Job](#tag/Jobs).",
                    "properties": {
                      "cost": {
                        "description": "The cost to recruit this [Job](#tag/Jobs). If it is null the cost has not been recorded.",
                        "oneOf": [
                          {
                            "type": "number"
                          },
                          {
                            "type": "null"
                          }
                        ],
                        "example": 500
                      },
                      "currency": {
                        "title": "Currency code",
                        "description": "The currency used to recruit this [Job](#tag/Jobs). An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                        "example": "AUD",
                        "pattern": "^[A-Z]{3}$",
                        "type": "string"
                      },
                      "source": {
                        "description": "The [Recruitment Source](#tag/Recruitment-Sources) this job was sourced from or null if it was not recorded.",
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "title": "UUIDv4",
                                "maxLength": 36,
                                "minLength": 36,
                                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                "description": "The identifier string for the [Recruitment Source](#tag/Recruitment-Sources) of this [Job](#tag/Jobs).",
                                "type": "string"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name given to this [Recruitment Source](#tag/Recruitment-Sources).",
                                "example": "Unknown"
                              },
                              "link": {
                                "type": "string",
                                "title": "URL",
                                "description": "Link on the public api to get more information on this piece of data.",
                                "example": "https://api.intellihr.io/v1/recruitment-sources/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                              }
                            }
                          },
                          {
                            "type": "null"
                          }
                        ]
                      }
                    }
                  },
                  "extendedLeave": {
                    "description": "If this job has active extended leave, this will be populated, otherwise it will be null",
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "startDate": {
                            "title": "RFC3339 datetime",
                            "example": "2015-03-01T22:30:00+00:00",
                            "description": "The start date of the attribute, or null for start of job. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "endDate": {
                            "title": "RFC3339 datetime",
                            "example": "2015-03-01T22:30:00+00:00",
                            "description": "The end date of the attribute, or null for end of job/time. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "isEndDateConfirmed": {
                            "description": "If the end date is the expected or actual return date",
                            "example": true,
                            "type": "boolean"
                          },
                          "type": {
                            "description": "The [Extended Leave Type](#tag/extended-leave-types) for this leave record, or null if the person was not on leave for these dates",
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "title": "UUIDv4",
                                    "maxLength": 36,
                                    "minLength": 36,
                                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                    "description": "The identifier string for the [Extended Leave Type](#tag/extended-leave-types) of this [Job](#tag/Jobs).",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name given to this [Extended Leave Type](#tag/extended-leave-types). This name would normally be shown to users of the system.",
                                    "example": "Annual",
                                    "type": "string"
                                  },
                                  "link": {
                                    "type": "string",
                                    "title": "URL",
                                    "description": "Link on the public api to get more information on this piece of data.",
                                    "example": "https://api.intellihr.io/v1/extended-leave-types/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                                  }
                                }
                              },
                              {
                                "type": "null"
                              }
                            ]
                          }
                        }
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "location": {
                    "type": "object",
                    "description": "The geographical location of this [Job](#tag/Jobs).",
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the [Location](tag/Locations) of this [Job](#tag/Jobs).",
                        "type": "string"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name given to this [Location](#tag/Locations). This name would normally be shown to users of the system.",
                        "example": "Brisbane Office"
                      },
                      "address": {
                        "type": "string",
                        "description": "The address of this location.",
                        "example": "1234 Queen Street, Brisbane City QLD 4000"
                      },
                      "code": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "description": "Code given to this [Location](#tag/Locations).",
                        "example": "BE001"
                      },
                      "customFields": {
                        "description": "The custom field values for this [Location](#tag/Locations)",
                        "allOf": [
                          {
                            "$ref": "#/definitions/customFieldsResponse"
                          }
                        ]
                      },
                      "link": {
                        "type": "string",
                        "title": "URL",
                        "description": "Link on the public api to get more information on this piece of data.",
                        "example": "https://api.intellihr.io/v1/locations/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                      }
                    }
                  },
                  "payGrade": {
                    "type": "object",
                    "description": "The [Job's](#tag/Jobs) current [Pay Grade](#tag/Pay-Grades) in the system.",
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the [Pay Grade](#tag/Pay-Grades) of this [Job](#tag/Jobs).",
                        "type": "string"
                      },
                      "name": {
                        "description": "User friendly name given to the [Pay Grade](#tag/Pay-Grades).",
                        "example": "Founder",
                        "type": "string"
                      },
                      "code": {
                        "description": "Administrative, short code associated to the [Pay Grade](#tag/Pay-Grades).",
                        "default": "N/A",
                        "example": "L0",
                        "type": "string"
                      },
                      "payStep": {
                        "oneOf": [
                          {
                            "type": "object",
                            "default": null,
                            "description": "The pay step within this paygrade that applies to the employee",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "User friendly name for this pay step."
                              },
                              "id": {
                                "title": "UUIDv4",
                                "maxLength": 36,
                                "minLength": 36,
                                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                "description": "The identifier string for the Unique identifier for this pay step.",
                                "type": "string"
                              },
                              "annualSalary": {
                                "oneOf": [
                                  {
                                    "type": "number",
                                    "description": "The annual salary this pay step represents."
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "annualSalaryCurrency": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      },
                                      "code": {
                                        "type": "string"
                                      },
                                      "symbol": {
                                        "type": "string"
                                      }
                                    },
                                    "description": "The currency the annual salary is recorded within."
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "permanentHourlyRate": {
                                "oneOf": [
                                  {
                                    "type": "number",
                                    "description": "The permanent hourly rate this pay step represents."
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "permanentHourlyRateCurrency": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      },
                                      "code": {
                                        "type": "string"
                                      },
                                      "symbol": {
                                        "type": "string"
                                      }
                                    },
                                    "description": "The currency the permanent hourly rate is recorded within."
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "casualHourlyRate": {
                                "oneOf": [
                                  {
                                    "type": "number",
                                    "description": "The casual hourly rate this pay step represents."
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "casualHourlyRateCurrency": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      },
                                      "code": {
                                        "type": "string"
                                      },
                                      "symbol": {
                                        "type": "string"
                                      }
                                    },
                                    "description": "The currency the casual hourly rate is recorded within."
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "link": {
                        "type": "string",
                        "title": "URL",
                        "description": "Link on the public api to get more information on this piece of data.",
                        "example": "https://api.intellihr.io/v1/pay-grades/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                      }
                    }
                  },
                  "businessUnit": {
                    "type": "object",
                    "description": "The [Job's](#tag/Jobs) current [Business Unit](#tag/Business-Units) in the system.",
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the [Business Unit](#tag/Business-Units) of this [Job](#tag/Jobs).",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name given to this [Business Unit](#tag/Business-Units). This name would normally be shown to users of the system.",
                        "example": "Engineering",
                        "type": "string"
                      },
                      "code": {
                        "description": "Code given to this [Business Unit](#tag/Business-Units).",
                        "example": "BE001",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "link": {
                        "type": "string",
                        "title": "URL",
                        "description": "Link on the public api to get more information on this piece of data.",
                        "example": "https://api.intellihr.io/v1/business-units/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                      },
                      "customFields": {
                        "description": "The custom field values for this Business Unit",
                        "allOf": [
                          {
                            "$ref": "#/definitions/customFieldsResponse"
                          }
                        ]
                      }
                    }
                  },
                  "businessEntity": {
                    "type": "object",
                    "description": "The [Job's](#tag/Jobs) current [Business Entity](#tag/Business-Entities) in the system.",
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the [Business Entity](#tag/Business-Entities) of this [Job](#tag/Jobs).",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name given to this [Business Entity](#tag/Business-Entities). This name would normally be shown to users of the system.",
                        "example": "IntelliHR",
                        "type": "string"
                      },
                      "code": {
                        "description": "Code given to this [Business Entity](#tag/Business-Entities).",
                        "example": "BE001",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "link": {
                        "type": "string",
                        "title": "URL",
                        "description": "Link on the public api to get more information on this piece of data.",
                        "example": "https://api.intellihr.io/v1/business-entities/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                      },
                      "customFields": {
                        "description": "The custom field values for this Business Unit",
                        "allOf": [
                          {
                            "$ref": "#/definitions/customFieldsResponse"
                          }
                        ]
                      }
                    }
                  },
                  "establishment": {
                    "description": "The [Job's](#tag/Jobs) current [Establishment](#tag/Establishments) in the system.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the [Establishment](#tag/Establishments) of this [Job](#tag/Jobs).",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name given to this [Establishment](#tag/Establishments).",
                        "example": "NewCo Engineering Manager",
                        "type": "string"
                      },
                      "link": {
                        "type": "string",
                        "title": "URL",
                        "description": "Link on the public api to get more information on this piece of data.",
                        "example": "https://api.intellihr.io/v1/establishments/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                      }
                    }
                  },
                  "supervisorJob": {
                    "description": "The [Job](#tag/Jobs) information for the supervisor of this [Job](#tag/Jobs) or null if they have no supervisor.",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "UUIDv4",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "description": "The identifier string for the [Supervisor's Job](#tag/Job) of this [Job](#tag/Jobs).",
                            "type": "string"
                          },
                          "jobStatus": {
                            "type": "string",
                            "description": "The current status of this job within this organisation. Enum: `Past Job`, `Future Job`, `Ending Job`, `Current Job`.",
                            "example": "Current Job"
                          },
                          "name": {
                            "description": "The name of the [Supervisor's Job](#tag/Jobs).",
                            "example": "Janitor",
                            "type": "string"
                          },
                          "positionTitle": {
                            "type": "object",
                            "description": "Position Title that exist within the organisation. Position Title are assigned to [Jobs](#tag/jobs).",
                            "properties": {
                              "id": {
                                "title": "UUIDv4",
                                "maxLength": 36,
                                "minLength": 36,
                                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                "description": "The identifier string for the [Position Title](#tag/Position-Titles) of this [Job](#tag/Jobs).",
                                "type": "string"
                              },
                              "name": {
                                "description": "A name given to this [Position Title](#tag/Position-Titles)",
                                "type": "string",
                                "example": "Janitor"
                              },
                              "code": {
                                "description": "An optional code that relates to this [Position Title](#tag/Position-Titles)",
                                "type": [
                                  "string",
                                  "null"
                                ],
                                "example": "1234"
                              }
                            }
                          },
                          "link": {
                            "type": "string",
                            "title": "URL",
                            "description": "Link on the public api to get more information on this piece of data.",
                            "example": "https://api.intellihr.io/v1/jobs/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                          }
                        }
                      }
                    ]
                  },
                  "supervisorPerson": {
                    "description": "The [Person](#tag/People) information for the supervisor of this job or null if they have no supervisor.",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "UUIDv4",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "description": "The identifier string for the [Supervisor's Person](#tag/People) of this [Job](#tag/Jobs).",
                            "type": "string"
                          },
                          "displayName": {
                            "type": "string",
                            "description": "Name to display throughout the system for this [Person](#tags/people). Generally follows the pattern preferredName (firstName) lastName, but can be configured on a tenant-wide basis to be a different format.",
                            "example": "Batman (Bruce) Wayne"
                          },
                          "employeeNumber": {
                            "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                            "example": "00001",
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "autoIncrementIntellihrId": {
                            "type": "number",
                            "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                            "example": 1000
                          },
                          "link": {
                            "type": "string",
                            "title": "URL",
                            "description": "Link on the public api to get more information on this piece of data.",
                            "example": "https://api.intellihr.io/v1/people/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                          }
                        }
                      }
                    ]
                  },
                  "employmentCondition": {
                    "description": "An instance of the [Employment Condition](#tag/Employment-Conditions) that is attached to the job, contains the dates it is effective for.",
                    "oneOf": [
                      {
                        "type": "null",
                        "description": "An [Employment Condition](#tag/Employment-Conditions) is not set"
                      },
                      {
                        "type": "object",
                        "description": "The [Employment Condition](#tag/Employment-Conditions) this job is being paid under.",
                        "properties": {
                          "id": {
                            "title": "UUIDv4",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "description": "The identifier string for the [Employment Condition](#tag/Employment-Conditions) of this Remuneration Schedule.",
                            "type": "string"
                          },
                          "startDate": {
                            "title": "RFC3339 datetime",
                            "example": "2015-03-01T22:30:00+00:00",
                            "description": "The start date of the attribute, or null for start of job. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "endDate": {
                            "title": "RFC3339 datetime",
                            "example": "2015-03-01T22:30:00+00:00",
                            "description": "The end date of the attribute, or null for end of job/time. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "name": {
                            "description": "Name given to this [Employment Condition](#tag/Employment-Conditions). This name would normally be shown to users of the system.",
                            "example": "Professional Employees Award 2010",
                            "type": "string"
                          },
                          "awardName": {
                            "description": "Award name can be different from the name presented to a user. Usually used for the legal name of the award.",
                            "example": "MA000065: Professional Employees Award 2010 - Fair Work Commission",
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "link": {
                            "type": "string",
                            "title": "URL",
                            "description": "Link on the public api to get more information on this piece of data.",
                            "example": "https://api.intellihr.io/v1/employment-conditions/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                          }
                        }
                      }
                    ]
                  },
                  "remunerationSchedule": {
                    "type": "object",
                    "description": "The current remuneration details for this [Job](#tags/Jobs), including information such as salary and hourly pay, all [Jobs](#tags/Jobs) have a remuneration schedule but for unpaid employees they will have a special `No Remuneration Schedule` schedule.",
                    "properties": {
                      "type": {
                        "description": "The method in which this remuneration schedule is paid, if a person is unpaid then this will be `No Remuneration Schedule`. Enum: `Annual Salary`, `Hourly Rate`, `No Remuneration Schedule`.",
                        "type": "string"
                      },
                      "baseAnnualSalary": {
                        "description": "The Base Salary paid yearly, this is an approximation if they are paid hourly. Note that if both baseAnnualSalary and baseHourlyRate are provided in a create or patch request, the baseHourlyRate will be ignored.",
                        "example": 50000,
                        "type": "number"
                      },
                      "baseHourlyRate": {
                        "description": "The Base Rate paid hourly, this is an approximation if they are paid annually. Note that if both baseAnnualSalary and baseHourlyRate are provided in a create or patch request, the baseHourlyRate will be ignored.",
                        "example": 24,
                        "type": "number"
                      },
                      "currency": {
                        "title": "Currency code",
                        "description": "The currency that the base and total amounts that this job is being paid in. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                        "example": "AUD",
                        "pattern": "^[A-Z]{3}$",
                        "type": "string"
                      },
                      "hoursPerCycle": {
                        "description": "How many hours worked per payCycle. \n\n 0 (zero) signifies that the hours are variable per pay cycle",
                        "example": 80,
                        "type": "number"
                      },
                      "payCycle": {
                        "description": "The cycle that the job is paid on. Enum: `Weekly`, `Fortnightly`, `Monthly`, `Bi-Monthly`.",
                        "example": "Fortnightly",
                        "type": "string"
                      },
                      "annualPackage": {
                        "description": "The total package paid yearly including additions and deductions. This amount is calculated by adding the Base Annual Salary and additions minus the deductions.",
                        "example": 60000,
                        "type": "number"
                      },
                      "hourlyPackage": {
                        "description": "The total package paid hourly including additions and deductions. This amount is calculated by dividing the Annual Package by the total number of hours per annum.",
                        "example": 28,
                        "type": "number"
                      },
                      "currencyConversionOccurred": {
                        "description": "If any conversion had to be performed between addition and deduction currencies when calculating the annual package.",
                        "example": true,
                        "type": "boolean"
                      },
                      "employmentCondition": {
                        "type": "object",
                        "description": "The [Employment Condition](#tag/Employment-Conditions) this job is being paid under. **Deprecated** Please use the job-level employmentCondition field instead.",
                        "deprecated": true,
                        "properties": {
                          "id": {
                            "title": "UUIDv4",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "description": "The identifier string for the [Employment Condition](#tag/Employment-Conditions) of this Remuneration Schedule.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name given to this [Employment Condition](#tag/Employment-Conditions). This name would normally be shown to users of the system.",
                            "example": "Professional Employees Award 2010",
                            "type": "string"
                          },
                          "awardName": {
                            "description": "Award name can be different from the name presented to a user. Usually used for the legal name of the award.",
                            "example": "MA000065: Professional Employees Award 2010 - Fair Work Commission",
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "link": {
                            "type": "string",
                            "title": "URL",
                            "description": "Link on the public api to get more information on this piece of data.",
                            "example": "https://api.intellihr.io/v1/employment-conditions/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                          }
                        }
                      },
                      "additions": {
                        "type": "array",
                        "description": "An array of Additions for this Remuneration Schedule.",
                        "items": {
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of this Addition.",
                              "example": "Superannuation"
                            },
                            "type": {
                              "type": "string",
                              "description": "How this addition is calculated and applied to the base amount, multipleOfBase is multiplied by baseAnnualSalary and then added to the total while fixed amount is added directly to the total. Enum: `MultipleOfBase`, `FixedAmount`."
                            },
                            "value": {
                              "description": "For multipleOfBase this is the multiplier (e.g. 9 = 9%) while for fixed amount this is the amount to directly add to the total.",
                              "example": 9.5,
                              "type": "number"
                            },
                            "currency": {
                              "title": "Currency code",
                              "description": "The currency used for this Addition. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                              "example": "AUD",
                              "pattern": "^[A-Z]{3}$",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "deductions": {
                        "type": "array",
                        "description": "An array of Deductions for this Remuneration Schedule. Note that this deductions value has been deprecated, you should now use `breakdowns`",
                        "deprecated": true,
                        "items": {
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of this Deduction.",
                              "example": "salary sacrifice"
                            },
                            "type": {
                              "type": "string",
                              "description": "How this deduction is calculated and applied to the base amount, multipleOfBase is multiplied by baseAnnualSalary and then deducted from the total while fixed amount is deducted directly from the total. Enum: `MultipleOfBase`, `FixedAmount`."
                            },
                            "value": {
                              "description": "For multipleOfBase this is the multiplier while for fixed amount this is the amount to directly deduct from the total.",
                              "example": 5000,
                              "type": "number"
                            },
                            "currency": {
                              "title": "Currency code",
                              "description": "The currency used for this Deduction. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                              "example": "AUD",
                              "pattern": "^[A-Z]{3}$",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "additionsToTotal": {
                        "type": "array",
                        "description": "An array of Additions applied to the package after all other components for this Remuneration Schedule.",
                        "items": {
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of this Total Addition.",
                              "example": "Superannuation"
                            },
                            "type": {
                              "type": "string",
                              "description": "How this total addition is calculated and applied to the base amount, multipleOfBase is multiplied by baseAnnualSalary and then added to the total while fixed amount is added directly to the total. Enum: `MultipleOfBase`, `FixedAmount`."
                            },
                            "value": {
                              "description": "For multipleOfBase this is the multiplier (e.g. 9 = 9%) while for fixed amount this is the amount to directly add to the total.",
                              "example": 9.5,
                              "type": "number"
                            },
                            "currency": {
                              "title": "Currency code",
                              "description": "The currency used for this Addition. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                              "example": "AUD",
                              "pattern": "^[A-Z]{3}$",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "breakdowns": {
                        "type": "array",
                        "description": "An array of Breakdowns for this Remuneration Schedule. Breakdowns will not be used to calculate the total package.",
                        "items": {
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of this Addition.",
                              "example": "Superannuation"
                            },
                            "type": {
                              "type": "string",
                              "description": "How this addition is recorded, it is not used to compute the total package due unlike other remuneration components. Enum: `MultipleOfBase`, `FixedAmount`."
                            },
                            "value": {
                              "description": "For multipleOfBase this is the multiplier (e.g. 9 = 9%) while for fixed amount this is the amount to directly add to the total.",
                              "example": 9.5,
                              "type": "number"
                            },
                            "currency": {
                              "title": "Currency code",
                              "description": "The currency used for this Addition. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                              "example": "AUD",
                              "pattern": "^[A-Z]{3}$",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "customFields": {
                        "description": "The custom field values for this Remuneration Schedule",
                        "allOf": [
                          {
                            "$ref": "#/definitions/customFieldsResponse"
                          }
                        ]
                      }
                    }
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of this [Job](#tag/Jobs).",
                    "example": "Janitor"
                  },
                  "positionTitle": {
                    "type": "object",
                    "description": "Position Titles that exist within the organisation. Position Title are assigned to [Jobs](#tag/jobs).",
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the [Position Title](#tag/Position-Titles) of this [Job](#tag/Jobs).",
                        "type": "string"
                      },
                      "name": {
                        "description": "A name given to this [Position Title](#tag/Position-Titles)",
                        "type": "string",
                        "example": "Janitor"
                      },
                      "code": {
                        "description": "An optional code that relates to this [Position Title](#tag/Position-Titles)",
                        "type": [
                          "string",
                          "null"
                        ],
                        "example": "1234"
                      }
                    }
                  },
                  "fte": {
                    "description": "The full time equivalent of this [Job](#tag/Jobs). Indicating the workload of an employee that can be comparable across different contexts. This is null for people without an FTE.",
                    "example": 1,
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "type": "number"
                      }
                    ]
                  },
                  "comments": {
                    "type": "array",
                    "description": "An array of comment objects that annotate the reason for [Job](#tag/Jobs) changes. Will be an empty array when there has been no updates to the Job.",
                    "items": {
                      "properties": {
                        "id": {
                          "title": "UUIDv4",
                          "maxLength": 36,
                          "minLength": 36,
                          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                          "description": "The identifier string for the Job Comment.",
                          "type": "string"
                        },
                        "date": {
                          "title": "RFC3339 datetime",
                          "example": "2015-03-01T22:30:00+00:00",
                          "description": "The date this Job Comment was created. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "description": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "A further description of the Job Change Reason.",
                          "example": "Completed MBA."
                        },
                        "jobChangeReason": {
                          "type": "object",
                          "description": "The [Job Change Reason](#tag/Job-Change-Reasons) used in the system to document the reason for the change.",
                          "properties": {
                            "id": {
                              "title": "UUIDv4",
                              "maxLength": 36,
                              "minLength": 36,
                              "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                              "description": "The identifier string for the [Job Change Reason](#tag/Job-Change-Reasons) to which this Job Comment belongs.",
                              "type": "string"
                            },
                            "name": {
                              "type": "string",
                              "description": "Name given to this [Job Change Reason](#tag/Job-Change-Reasons).",
                              "example": "Promotion"
                            },
                            "link": {
                              "type": "string",
                              "title": "URL",
                              "description": "Link on the public api to get more information on this piece of data.",
                              "example": "https://api.intellihr.io/v1/job-change-reasons/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                            }
                          }
                        }
                      }
                    }
                  },
                  "lastestJobChangeComment": {
                    "description": "The latest comment that annotates the reason for a [Job's](#tag/Jobs) change. It will return the latest comment based on the asAt value or null if none exist.",
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "UUIDv4",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "description": "The identifier string for the Job Comment.",
                            "type": "string"
                          },
                          "date": {
                            "title": "RFC3339 datetime",
                            "example": "2015-03-01T22:30:00+00:00",
                            "description": "The date this Job Comment was created. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "description": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "A further description of the Job Change Reason.",
                            "example": "Completed MBA."
                          },
                          "jobChangeReason": {
                            "type": "object",
                            "description": "The [Job Change Reason](#tag/Job-Change-Reasons) used in the system to document the reason for the change.",
                            "properties": {
                              "id": {
                                "title": "UUIDv4",
                                "maxLength": 36,
                                "minLength": 36,
                                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                "description": "The identifier string for the [Job Change Reason](#tag/Job-Change-Reasons) to which this Job Comment belongs.",
                                "type": "string"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name given to this [Job Change Reason](#tag/Job-Change-Reasons).",
                                "example": "Promotion"
                              },
                              "link": {
                                "type": "string",
                                "title": "URL",
                                "description": "Link on the public api to get more information on this piece of data.",
                                "example": "https://api.intellihr.io/v1/job-change-reasons/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                              }
                            }
                          }
                        }
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "workClass": {
                    "type": "string",
                    "description": "The [Work Class](#tag/Work-Classes) of this [Job](#tag/Jobs). This is extra details about the [Work Type](#tag/Work-Types).",
                    "example": "Full-Time"
                  },
                  "workType": {
                    "type": "string",
                    "description": "This is the [Work Classification](#tag/Work-Types) for this [Job](#tag/Jobs), it is used to differentiate between full-time and part time employees vs unpaid volunteers. Enum: `Permanent`, `Fixed Contract`, `Unpaid`, `Temporary/Casual`, `Independent Contract`.",
                    "example": "Permanent"
                  },
                  "isPrimaryJob": {
                    "type": "boolean",
                    "description": "Whether this job is the primary job on the [Person](#tag/People). Only one job on a [Person](#tag/People) can be primary at a time.",
                    "default": false,
                    "example": false
                  },
                  "jobStatus": {
                    "type": "string",
                    "description": "The current status of this job within this organisation. Enum: `Past Job`, `Future Job`, `Ending Job`, `Current Job`.",
                    "example": "Current Job"
                  },
                  "createdBy": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "UUIDv4",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "description": "The identifier string for the Id of this [user](#tag/Users).",
                            "type": "string"
                          },
                          "link": {
                            "type": "string",
                            "title": "URL",
                            "description": "Link on the public api to get more information on this piece of data.",
                            "example": "https://api.intellihr.io/v1/users/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                          }
                        }
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "The [User](#tags/users) who created this job. May be null for old [Jobs](#tags/jobs). This field will remain null for API created jobs."
                  },
                  "updatedBy": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "UUIDv4",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "description": "The identifier string for the Id of this [user](#tag/Users).",
                            "type": "string"
                          },
                          "link": {
                            "type": "string",
                            "title": "URL",
                            "description": "Link on the public api to get more information on this piece of data.",
                            "example": "https://api.intellihr.io/v1/users/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                          }
                        }
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "The last [User](#tags/users) who updated this job. May be null for old [Jobs](#tags/jobs). This field will remain null if the last update was performed by the API."
                  },
                  "positionStartDate": {
                    "title": "RFC3339 datetime",
                    "example": "2015-03-01T22:30:00+00:00",
                    "description": "The start date of the current position the person is in. The gap between the `companyStartDate` and `positionStartDate` will be filled with \"Previous position title\" historical records, to correctly depict the person as having no information recorded for old job positions. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
                    "type": "string"
                  },
                  "companyStartDate": {
                    "title": "RFC3339 datetime",
                    "example": "2015-03-01T22:30:00+00:00",
                    "description": "The date this [Job](#tags/jobs) started or will start within the organisation. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                    "type": "string"
                  },
                  "companyEndDate": {
                    "title": "RFC3339 datetime",
                    "example": "2015-03-01T22:30:00+00:00",
                    "description": "The <b>exclusive</b> date this [Job](#tags/jobs) ended or will end within the organisation. For example, if the person's last working date is on 2025-04-23, the `companyEndDate` should be set as 2025-04-24 to reflect the exclusive date. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "isEndDateConfirmed": {
                    "type": "boolean",
                    "description": "Whether the end date has been finalised within the intelliHR application.",
                    "default": false,
                    "example": false
                  },
                  "turnoverType": {
                    "description": "The type of turnover this end of job is classified as.",
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "example": "INVOLUNTARY"
                  },
                  "turnoverReason": {
                    "description": "The name of the turnover reason.",
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "example": "Medical reasons"
                  },
                  "customFields": {
                    "description": "The custom field values for this Job",
                    "allOf": [
                      {
                        "$ref": "#/definitions/customFieldsResponse"
                      }
                    ]
                  },
                  "createdAt": {
                    "title": "RFC3339 datetime",
                    "example": "2015-03-01T22:30:00+00:00",
                    "description": "When this record was created. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "job_end_remove_response": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "job": {
                "type": "object",
                "properties": {
                  "id": {
                    "title": "UUIDv4",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "description": "The identifier string for the [Job](#tag/Jobs).",
                    "type": "string"
                  },
                  "person": {
                    "type": "object",
                    "description": "The [Person](#tag/People) to whom this [Job](#tag/Jobs) belongs.",
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the [Person](#tag/People) to whom this [Job](#tag/Jobs) belongs.",
                        "type": "string"
                      },
                      "displayName": {
                        "type": "string",
                        "description": "Name to display throughout the system for this [Person](#tags/people). Generally follows the pattern preferredName (firstName) lastName, but can be configured on a tenant-wide basis to be a different format.",
                        "example": "Batman (Bruce) Wayne"
                      },
                      "employeeNumber": {
                        "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                        "example": "00001",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "autoIncrementIntellihrId": {
                        "type": "number",
                        "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                        "example": 1000
                      },
                      "link": {
                        "type": "string",
                        "title": "URL",
                        "description": "Link on the public api to get more information on this piece of data.",
                        "example": "https://api.intellihr.io/v1/people/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                      }
                    }
                  },
                  "recruitment": {
                    "type": "object",
                    "description": "The recruitment details stored for this [Job](#tag/Jobs).",
                    "properties": {
                      "cost": {
                        "description": "The cost to recruit this [Job](#tag/Jobs). If it is null the cost has not been recorded.",
                        "oneOf": [
                          {
                            "type": "number"
                          },
                          {
                            "type": "null"
                          }
                        ],
                        "example": 500
                      },
                      "currency": {
                        "title": "Currency code",
                        "description": "The currency used to recruit this [Job](#tag/Jobs). An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                        "example": "AUD",
                        "pattern": "^[A-Z]{3}$",
                        "type": "string"
                      },
                      "source": {
                        "description": "The [Recruitment Source](#tag/Recruitment-Sources) this job was sourced from or null if it was not recorded.",
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "title": "UUIDv4",
                                "maxLength": 36,
                                "minLength": 36,
                                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                "description": "The identifier string for the [Recruitment Source](#tag/Recruitment-Sources) of this [Job](#tag/Jobs).",
                                "type": "string"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name given to this [Recruitment Source](#tag/Recruitment-Sources).",
                                "example": "Unknown"
                              },
                              "link": {
                                "type": "string",
                                "title": "URL",
                                "description": "Link on the public api to get more information on this piece of data.",
                                "example": "https://api.intellihr.io/v1/recruitment-sources/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                              }
                            }
                          },
                          {
                            "type": "null"
                          }
                        ]
                      }
                    }
                  },
                  "extendedLeave": {
                    "description": "If this job has active extended leave, this will be populated, otherwise it will be null",
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "startDate": {
                            "title": "RFC3339 datetime",
                            "example": "2015-03-01T22:30:00+00:00",
                            "description": "The start date of the attribute, or null for start of job. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "endDate": {
                            "title": "RFC3339 datetime",
                            "example": "2015-03-01T22:30:00+00:00",
                            "description": "The end date of the attribute, or null for end of job/time. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "isEndDateConfirmed": {
                            "description": "If the end date is the expected or actual return date",
                            "example": true,
                            "type": "boolean"
                          },
                          "type": {
                            "description": "The [Extended Leave Type](#tag/extended-leave-types) for this leave record, or null if the person was not on leave for these dates",
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "title": "UUIDv4",
                                    "maxLength": 36,
                                    "minLength": 36,
                                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                    "description": "The identifier string for the [Extended Leave Type](#tag/extended-leave-types) of this [Job](#tag/Jobs).",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name given to this [Extended Leave Type](#tag/extended-leave-types). This name would normally be shown to users of the system.",
                                    "example": "Annual",
                                    "type": "string"
                                  },
                                  "link": {
                                    "type": "string",
                                    "title": "URL",
                                    "description": "Link on the public api to get more information on this piece of data.",
                                    "example": "https://api.intellihr.io/v1/extended-leave-types/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                                  }
                                }
                              },
                              {
                                "type": "null"
                              }
                            ]
                          }
                        }
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "location": {
                    "type": "object",
                    "description": "The geographical location of this [Job](#tag/Jobs).",
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the [Location](tag/Locations) of this [Job](#tag/Jobs).",
                        "type": "string"
                      },
                      "name": {
                        "type": "string",
                        "description": "Name given to this [Location](#tag/Locations). This name would normally be shown to users of the system.",
                        "example": "Brisbane Office"
                      },
                      "address": {
                        "type": "string",
                        "description": "The address of this location.",
                        "example": "1234 Queen Street, Brisbane City QLD 4000"
                      },
                      "code": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "description": "Code given to this [Location](#tag/Locations).",
                        "example": "BE001"
                      },
                      "customFields": {
                        "description": "The custom field values for this [Location](#tag/Locations)",
                        "allOf": [
                          {
                            "$ref": "#/definitions/customFieldsResponse"
                          }
                        ]
                      },
                      "link": {
                        "type": "string",
                        "title": "URL",
                        "description": "Link on the public api to get more information on this piece of data.",
                        "example": "https://api.intellihr.io/v1/locations/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                      }
                    }
                  },
                  "payGrade": {
                    "type": "object",
                    "description": "The [Job's](#tag/Jobs) current [Pay Grade](#tag/Pay-Grades) in the system.",
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the [Pay Grade](#tag/Pay-Grades) of this [Job](#tag/Jobs).",
                        "type": "string"
                      },
                      "name": {
                        "description": "User friendly name given to the [Pay Grade](#tag/Pay-Grades).",
                        "example": "Founder",
                        "type": "string"
                      },
                      "code": {
                        "description": "Administrative, short code associated to the [Pay Grade](#tag/Pay-Grades).",
                        "default": "N/A",
                        "example": "L0",
                        "type": "string"
                      },
                      "payStep": {
                        "oneOf": [
                          {
                            "type": "object",
                            "default": null,
                            "description": "The pay step within this paygrade that applies to the employee",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "User friendly name for this pay step."
                              },
                              "id": {
                                "title": "UUIDv4",
                                "maxLength": 36,
                                "minLength": 36,
                                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                "description": "The identifier string for the Unique identifier for this pay step.",
                                "type": "string"
                              },
                              "annualSalary": {
                                "oneOf": [
                                  {
                                    "type": "number",
                                    "description": "The annual salary this pay step represents."
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "annualSalaryCurrency": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      },
                                      "code": {
                                        "type": "string"
                                      },
                                      "symbol": {
                                        "type": "string"
                                      }
                                    },
                                    "description": "The currency the annual salary is recorded within."
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "permanentHourlyRate": {
                                "oneOf": [
                                  {
                                    "type": "number",
                                    "description": "The permanent hourly rate this pay step represents."
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "permanentHourlyRateCurrency": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      },
                                      "code": {
                                        "type": "string"
                                      },
                                      "symbol": {
                                        "type": "string"
                                      }
                                    },
                                    "description": "The currency the permanent hourly rate is recorded within."
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "casualHourlyRate": {
                                "oneOf": [
                                  {
                                    "type": "number",
                                    "description": "The casual hourly rate this pay step represents."
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "casualHourlyRateCurrency": {
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string"
                                      },
                                      "code": {
                                        "type": "string"
                                      },
                                      "symbol": {
                                        "type": "string"
                                      }
                                    },
                                    "description": "The currency the casual hourly rate is recorded within."
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              }
                            }
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "link": {
                        "type": "string",
                        "title": "URL",
                        "description": "Link on the public api to get more information on this piece of data.",
                        "example": "https://api.intellihr.io/v1/pay-grades/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                      }
                    }
                  },
                  "businessUnit": {
                    "type": "object",
                    "description": "The [Job's](#tag/Jobs) current [Business Unit](#tag/Business-Units) in the system.",
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the [Business Unit](#tag/Business-Units) of this [Job](#tag/Jobs).",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name given to this [Business Unit](#tag/Business-Units). This name would normally be shown to users of the system.",
                        "example": "Engineering",
                        "type": "string"
                      },
                      "code": {
                        "description": "Code given to this [Business Unit](#tag/Business-Units).",
                        "example": "BE001",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "link": {
                        "type": "string",
                        "title": "URL",
                        "description": "Link on the public api to get more information on this piece of data.",
                        "example": "https://api.intellihr.io/v1/business-units/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                      },
                      "customFields": {
                        "description": "The custom field values for this Business Unit",
                        "allOf": [
                          {
                            "$ref": "#/definitions/customFieldsResponse"
                          }
                        ]
                      }
                    }
                  },
                  "businessEntity": {
                    "type": "object",
                    "description": "The [Job's](#tag/Jobs) current [Business Entity](#tag/Business-Entities) in the system.",
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the [Business Entity](#tag/Business-Entities) of this [Job](#tag/Jobs).",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name given to this [Business Entity](#tag/Business-Entities). This name would normally be shown to users of the system.",
                        "example": "IntelliHR",
                        "type": "string"
                      },
                      "code": {
                        "description": "Code given to this [Business Entity](#tag/Business-Entities).",
                        "example": "BE001",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "link": {
                        "type": "string",
                        "title": "URL",
                        "description": "Link on the public api to get more information on this piece of data.",
                        "example": "https://api.intellihr.io/v1/business-entities/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                      },
                      "customFields": {
                        "description": "The custom field values for this Business Unit",
                        "allOf": [
                          {
                            "$ref": "#/definitions/customFieldsResponse"
                          }
                        ]
                      }
                    }
                  },
                  "establishment": {
                    "description": "The [Job's](#tag/Jobs) current [Establishment](#tag/Establishments) in the system.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the [Establishment](#tag/Establishments) of this [Job](#tag/Jobs).",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name given to this [Establishment](#tag/Establishments).",
                        "example": "NewCo Engineering Manager",
                        "type": "string"
                      },
                      "link": {
                        "type": "string",
                        "title": "URL",
                        "description": "Link on the public api to get more information on this piece of data.",
                        "example": "https://api.intellihr.io/v1/establishments/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                      }
                    }
                  },
                  "supervisorJob": {
                    "description": "The [Job](#tag/Jobs) information for the supervisor of this [Job](#tag/Jobs) or null if they have no supervisor.",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "UUIDv4",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "description": "The identifier string for the [Supervisor's Job](#tag/Job) of this [Job](#tag/Jobs).",
                            "type": "string"
                          },
                          "jobStatus": {
                            "type": "string",
                            "description": "The current status of this job within this organisation. Enum: `Past Job`, `Future Job`, `Ending Job`, `Current Job`.",
                            "example": "Current Job"
                          },
                          "name": {
                            "description": "The name of the [Supervisor's Job](#tag/Jobs).",
                            "example": "Janitor",
                            "type": "string"
                          },
                          "positionTitle": {
                            "type": "object",
                            "description": "Position Title that exist within the organisation. Position Title are assigned to [Jobs](#tag/jobs).",
                            "properties": {
                              "id": {
                                "title": "UUIDv4",
                                "maxLength": 36,
                                "minLength": 36,
                                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                "description": "The identifier string for the [Position Title](#tag/Position-Titles) of this [Job](#tag/Jobs).",
                                "type": "string"
                              },
                              "name": {
                                "description": "A name given to this [Position Title](#tag/Position-Titles)",
                                "type": "string",
                                "example": "Janitor"
                              },
                              "code": {
                                "description": "An optional code that relates to this [Position Title](#tag/Position-Titles)",
                                "type": [
                                  "string",
                                  "null"
                                ],
                                "example": "1234"
                              }
                            }
                          },
                          "link": {
                            "type": "string",
                            "title": "URL",
                            "description": "Link on the public api to get more information on this piece of data.",
                            "example": "https://api.intellihr.io/v1/jobs/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                          }
                        }
                      }
                    ]
                  },
                  "supervisorPerson": {
                    "description": "The [Person](#tag/People) information for the supervisor of this job or null if they have no supervisor.",
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "UUIDv4",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "description": "The identifier string for the [Supervisor's Person](#tag/People) of this [Job](#tag/Jobs).",
                            "type": "string"
                          },
                          "displayName": {
                            "type": "string",
                            "description": "Name to display throughout the system for this [Person](#tags/people). Generally follows the pattern preferredName (firstName) lastName, but can be configured on a tenant-wide basis to be a different format.",
                            "example": "Batman (Bruce) Wayne"
                          },
                          "employeeNumber": {
                            "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                            "example": "00001",
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "autoIncrementIntellihrId": {
                            "type": "number",
                            "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                            "example": 1000
                          },
                          "link": {
                            "type": "string",
                            "title": "URL",
                            "description": "Link on the public api to get more information on this piece of data.",
                            "example": "https://api.intellihr.io/v1/people/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                          }
                        }
                      }
                    ]
                  },
                  "employmentCondition": {
                    "description": "An instance of the [Employment Condition](#tag/Employment-Conditions) that is attached to the job, contains the dates it is effective for.",
                    "oneOf": [
                      {
                        "type": "null",
                        "description": "An [Employment Condition](#tag/Employment-Conditions) is not set"
                      },
                      {
                        "type": "object",
                        "description": "The [Employment Condition](#tag/Employment-Conditions) this job is being paid under.",
                        "properties": {
                          "id": {
                            "title": "UUIDv4",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "description": "The identifier string for the [Employment Condition](#tag/Employment-Conditions) of this Remuneration Schedule.",
                            "type": "string"
                          },
                          "startDate": {
                            "title": "RFC3339 datetime",
                            "example": "2015-03-01T22:30:00+00:00",
                            "description": "The start date of the attribute, or null for start of job. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "endDate": {
                            "title": "RFC3339 datetime",
                            "example": "2015-03-01T22:30:00+00:00",
                            "description": "The end date of the attribute, or null for end of job/time. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "name": {
                            "description": "Name given to this [Employment Condition](#tag/Employment-Conditions). This name would normally be shown to users of the system.",
                            "example": "Professional Employees Award 2010",
                            "type": "string"
                          },
                          "awardName": {
                            "description": "Award name can be different from the name presented to a user. Usually used for the legal name of the award.",
                            "example": "MA000065: Professional Employees Award 2010 - Fair Work Commission",
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "link": {
                            "type": "string",
                            "title": "URL",
                            "description": "Link on the public api to get more information on this piece of data.",
                            "example": "https://api.intellihr.io/v1/employment-conditions/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                          }
                        }
                      }
                    ]
                  },
                  "remunerationSchedule": {
                    "type": "object",
                    "description": "The current remuneration details for this [Job](#tags/Jobs), including information such as salary and hourly pay, all [Jobs](#tags/Jobs) have a remuneration schedule but for unpaid employees they will have a special `No Remuneration Schedule` schedule.",
                    "properties": {
                      "type": {
                        "description": "The method in which this remuneration schedule is paid, if a person is unpaid then this will be `No Remuneration Schedule`. Enum: `Annual Salary`, `Hourly Rate`, `No Remuneration Schedule`.",
                        "type": "string"
                      },
                      "baseAnnualSalary": {
                        "description": "The Base Salary paid yearly, this is an approximation if they are paid hourly. Note that if both baseAnnualSalary and baseHourlyRate are provided in a create or patch request, the baseHourlyRate will be ignored.",
                        "example": 50000,
                        "type": "number"
                      },
                      "baseHourlyRate": {
                        "description": "The Base Rate paid hourly, this is an approximation if they are paid annually. Note that if both baseAnnualSalary and baseHourlyRate are provided in a create or patch request, the baseHourlyRate will be ignored.",
                        "example": 24,
                        "type": "number"
                      },
                      "currency": {
                        "title": "Currency code",
                        "description": "The currency that the base and total amounts that this job is being paid in. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                        "example": "AUD",
                        "pattern": "^[A-Z]{3}$",
                        "type": "string"
                      },
                      "hoursPerCycle": {
                        "description": "How many hours worked per payCycle. \n\n 0 (zero) signifies that the hours are variable per pay cycle",
                        "example": 80,
                        "type": "number"
                      },
                      "payCycle": {
                        "description": "The cycle that the job is paid on. Enum: `Weekly`, `Fortnightly`, `Monthly`, `Bi-Monthly`.",
                        "example": "Fortnightly",
                        "type": "string"
                      },
                      "annualPackage": {
                        "description": "The total package paid yearly including additions and deductions. This amount is calculated by adding the Base Annual Salary and additions minus the deductions.",
                        "example": 60000,
                        "type": "number"
                      },
                      "hourlyPackage": {
                        "description": "The total package paid hourly including additions and deductions. This amount is calculated by dividing the Annual Package by the total number of hours per annum.",
                        "example": 28,
                        "type": "number"
                      },
                      "currencyConversionOccurred": {
                        "description": "If any conversion had to be performed between addition and deduction currencies when calculating the annual package.",
                        "example": true,
                        "type": "boolean"
                      },
                      "employmentCondition": {
                        "type": "object",
                        "description": "The [Employment Condition](#tag/Employment-Conditions) this job is being paid under. **Deprecated** Please use the job-level employmentCondition field instead.",
                        "deprecated": true,
                        "properties": {
                          "id": {
                            "title": "UUIDv4",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "description": "The identifier string for the [Employment Condition](#tag/Employment-Conditions) of this Remuneration Schedule.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name given to this [Employment Condition](#tag/Employment-Conditions). This name would normally be shown to users of the system.",
                            "example": "Professional Employees Award 2010",
                            "type": "string"
                          },
                          "awardName": {
                            "description": "Award name can be different from the name presented to a user. Usually used for the legal name of the award.",
                            "example": "MA000065: Professional Employees Award 2010 - Fair Work Commission",
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "link": {
                            "type": "string",
                            "title": "URL",
                            "description": "Link on the public api to get more information on this piece of data.",
                            "example": "https://api.intellihr.io/v1/employment-conditions/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                          }
                        }
                      },
                      "additions": {
                        "type": "array",
                        "description": "An array of Additions for this Remuneration Schedule.",
                        "items": {
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of this Addition.",
                              "example": "Superannuation"
                            },
                            "type": {
                              "type": "string",
                              "description": "How this addition is calculated and applied to the base amount, multipleOfBase is multiplied by baseAnnualSalary and then added to the total while fixed amount is added directly to the total. Enum: `MultipleOfBase`, `FixedAmount`."
                            },
                            "value": {
                              "description": "For multipleOfBase this is the multiplier (e.g. 9 = 9%) while for fixed amount this is the amount to directly add to the total.",
                              "example": 9.5,
                              "type": "number"
                            },
                            "currency": {
                              "title": "Currency code",
                              "description": "The currency used for this Addition. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                              "example": "AUD",
                              "pattern": "^[A-Z]{3}$",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "deductions": {
                        "type": "array",
                        "description": "An array of Deductions for this Remuneration Schedule. Note that this deductions value has been deprecated, you should now use `breakdowns`",
                        "deprecated": true,
                        "items": {
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of this Deduction.",
                              "example": "salary sacrifice"
                            },
                            "type": {
                              "type": "string",
                              "description": "How this deduction is calculated and applied to the base amount, multipleOfBase is multiplied by baseAnnualSalary and then deducted from the total while fixed amount is deducted directly from the total. Enum: `MultipleOfBase`, `FixedAmount`."
                            },
                            "value": {
                              "description": "For multipleOfBase this is the multiplier while for fixed amount this is the amount to directly deduct from the total.",
                              "example": 5000,
                              "type": "number"
                            },
                            "currency": {
                              "title": "Currency code",
                              "description": "The currency used for this Deduction. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                              "example": "AUD",
                              "pattern": "^[A-Z]{3}$",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "additionsToTotal": {
                        "type": "array",
                        "description": "An array of Additions applied to the package after all other components for this Remuneration Schedule.",
                        "items": {
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of this Total Addition.",
                              "example": "Superannuation"
                            },
                            "type": {
                              "type": "string",
                              "description": "How this total addition is calculated and applied to the base amount, multipleOfBase is multiplied by baseAnnualSalary and then added to the total while fixed amount is added directly to the total. Enum: `MultipleOfBase`, `FixedAmount`."
                            },
                            "value": {
                              "description": "For multipleOfBase this is the multiplier (e.g. 9 = 9%) while for fixed amount this is the amount to directly add to the total.",
                              "example": 9.5,
                              "type": "number"
                            },
                            "currency": {
                              "title": "Currency code",
                              "description": "The currency used for this Addition. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                              "example": "AUD",
                              "pattern": "^[A-Z]{3}$",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "breakdowns": {
                        "type": "array",
                        "description": "An array of Breakdowns for this Remuneration Schedule. Breakdowns will not be used to calculate the total package.",
                        "items": {
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of this Addition.",
                              "example": "Superannuation"
                            },
                            "type": {
                              "type": "string",
                              "description": "How this addition is recorded, it is not used to compute the total package due unlike other remuneration components. Enum: `MultipleOfBase`, `FixedAmount`."
                            },
                            "value": {
                              "description": "For multipleOfBase this is the multiplier (e.g. 9 = 9%) while for fixed amount this is the amount to directly add to the total.",
                              "example": 9.5,
                              "type": "number"
                            },
                            "currency": {
                              "title": "Currency code",
                              "description": "The currency used for this Addition. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                              "example": "AUD",
                              "pattern": "^[A-Z]{3}$",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "customFields": {
                        "description": "The custom field values for this Remuneration Schedule",
                        "allOf": [
                          {
                            "$ref": "#/definitions/customFieldsResponse"
                          }
                        ]
                      }
                    }
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of this [Job](#tag/Jobs).",
                    "example": "Janitor"
                  },
                  "positionTitle": {
                    "type": "object",
                    "description": "Position Titles that exist within the organisation. Position Title are assigned to [Jobs](#tag/jobs).",
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the [Position Title](#tag/Position-Titles) of this [Job](#tag/Jobs).",
                        "type": "string"
                      },
                      "name": {
                        "description": "A name given to this [Position Title](#tag/Position-Titles)",
                        "type": "string",
                        "example": "Janitor"
                      },
                      "code": {
                        "description": "An optional code that relates to this [Position Title](#tag/Position-Titles)",
                        "type": [
                          "string",
                          "null"
                        ],
                        "example": "1234"
                      }
                    }
                  },
                  "fte": {
                    "description": "The full time equivalent of this [Job](#tag/Jobs). Indicating the workload of an employee that can be comparable across different contexts. This is null for people without an FTE.",
                    "example": 1,
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "type": "number"
                      }
                    ]
                  },
                  "comments": {
                    "type": "array",
                    "description": "An array of comment objects that annotate the reason for [Job](#tag/Jobs) changes. Will be an empty array when there has been no updates to the Job.",
                    "items": {
                      "properties": {
                        "id": {
                          "title": "UUIDv4",
                          "maxLength": 36,
                          "minLength": 36,
                          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                          "description": "The identifier string for the Job Comment.",
                          "type": "string"
                        },
                        "date": {
                          "title": "RFC3339 datetime",
                          "example": "2015-03-01T22:30:00+00:00",
                          "description": "The date this Job Comment was created. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "description": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "A further description of the Job Change Reason.",
                          "example": "Completed MBA."
                        },
                        "jobChangeReason": {
                          "type": "object",
                          "description": "The [Job Change Reason](#tag/Job-Change-Reasons) used in the system to document the reason for the change.",
                          "properties": {
                            "id": {
                              "title": "UUIDv4",
                              "maxLength": 36,
                              "minLength": 36,
                              "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                              "description": "The identifier string for the [Job Change Reason](#tag/Job-Change-Reasons) to which this Job Comment belongs.",
                              "type": "string"
                            },
                            "name": {
                              "type": "string",
                              "description": "Name given to this [Job Change Reason](#tag/Job-Change-Reasons).",
                              "example": "Promotion"
                            },
                            "link": {
                              "type": "string",
                              "title": "URL",
                              "description": "Link on the public api to get more information on this piece of data.",
                              "example": "https://api.intellihr.io/v1/job-change-reasons/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                            }
                          }
                        }
                      }
                    }
                  },
                  "lastestJobChangeComment": {
                    "description": "The latest comment that annotates the reason for a [Job's](#tag/Jobs) change. It will return the latest comment based on the asAt value or null if none exist.",
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "UUIDv4",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "description": "The identifier string for the Job Comment.",
                            "type": "string"
                          },
                          "date": {
                            "title": "RFC3339 datetime",
                            "example": "2015-03-01T22:30:00+00:00",
                            "description": "The date this Job Comment was created. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "description": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "A further description of the Job Change Reason.",
                            "example": "Completed MBA."
                          },
                          "jobChangeReason": {
                            "type": "object",
                            "description": "The [Job Change Reason](#tag/Job-Change-Reasons) used in the system to document the reason for the change.",
                            "properties": {
                              "id": {
                                "title": "UUIDv4",
                                "maxLength": 36,
                                "minLength": 36,
                                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                "description": "The identifier string for the [Job Change Reason](#tag/Job-Change-Reasons) to which this Job Comment belongs.",
                                "type": "string"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name given to this [Job Change Reason](#tag/Job-Change-Reasons).",
                                "example": "Promotion"
                              },
                              "link": {
                                "type": "string",
                                "title": "URL",
                                "description": "Link on the public api to get more information on this piece of data.",
                                "example": "https://api.intellihr.io/v1/job-change-reasons/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                              }
                            }
                          }
                        }
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "workClass": {
                    "type": "string",
                    "description": "The [Work Class](#tag/Work-Classes) of this [Job](#tag/Jobs). This is extra details about the [Work Type](#tag/Work-Types).",
                    "example": "Full-Time"
                  },
                  "workType": {
                    "type": "string",
                    "description": "This is the [Work Classification](#tag/Work-Types) for this [Job](#tag/Jobs), it is used to differentiate between full-time and part time employees vs unpaid volunteers. Enum: `Permanent`, `Fixed Contract`, `Unpaid`, `Temporary/Casual`, `Independent Contract`.",
                    "example": "Permanent"
                  },
                  "isPrimaryJob": {
                    "type": "boolean",
                    "description": "Whether this job is the primary job on the [Person](#tag/People). Only one job on a [Person](#tag/People) can be primary at a time.",
                    "default": false,
                    "example": false
                  },
                  "jobStatus": {
                    "type": "string",
                    "description": "The current status of this job within this organisation. Enum: `Past Job`, `Future Job`, `Ending Job`, `Current Job`.",
                    "example": "Current Job"
                  },
                  "createdBy": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "UUIDv4",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "description": "The identifier string for the Id of this [user](#tag/Users).",
                            "type": "string"
                          },
                          "link": {
                            "type": "string",
                            "title": "URL",
                            "description": "Link on the public api to get more information on this piece of data.",
                            "example": "https://api.intellihr.io/v1/users/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                          }
                        }
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "The [User](#tags/users) who created this job. May be null for old [Jobs](#tags/jobs). This field will remain null for API created jobs."
                  },
                  "updatedBy": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "UUIDv4",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "description": "The identifier string for the Id of this [user](#tag/Users).",
                            "type": "string"
                          },
                          "link": {
                            "type": "string",
                            "title": "URL",
                            "description": "Link on the public api to get more information on this piece of data.",
                            "example": "https://api.intellihr.io/v1/users/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                          }
                        }
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "The last [User](#tags/users) who updated this job. May be null for old [Jobs](#tags/jobs). This field will remain null if the last update was performed by the API."
                  },
                  "positionStartDate": {
                    "title": "RFC3339 datetime",
                    "example": "2015-03-01T22:30:00+00:00",
                    "description": "The start date of the current position the person is in. The gap between the `companyStartDate` and `positionStartDate` will be filled with \"Previous position title\" historical records, to correctly depict the person as having no information recorded for old job positions. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
                    "type": "string"
                  },
                  "companyStartDate": {
                    "title": "RFC3339 datetime",
                    "example": "2015-03-01T22:30:00+00:00",
                    "description": "The date this [Job](#tags/jobs) started or will start within the organisation. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                    "type": "string"
                  },
                  "companyEndDate": {
                    "title": "RFC3339 datetime",
                    "example": "2015-03-01T22:30:00+00:00",
                    "description": "The <b>exclusive</b> date this [Job](#tags/jobs) ended or will end within the organisation. For example, if the person's last working date is on 2025-04-23, the `companyEndDate` should be set as 2025-04-24 to reflect the exclusive date. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "isEndDateConfirmed": {
                    "type": "boolean",
                    "description": "Whether the end date has been finalised within the intelliHR application.",
                    "default": false,
                    "example": false
                  },
                  "turnoverType": {
                    "description": "The type of turnover this end of job is classified as.",
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "example": "INVOLUNTARY"
                  },
                  "turnoverReason": {
                    "description": "The name of the turnover reason.",
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "example": "Medical reasons"
                  },
                  "customFields": {
                    "description": "The custom field values for this Job",
                    "allOf": [
                      {
                        "$ref": "#/definitions/customFieldsResponse"
                      }
                    ]
                  },
                  "createdAt": {
                    "title": "RFC3339 datetime",
                    "example": "2015-03-01T22:30:00+00:00",
                    "description": "When this record was created. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "jobs": {
        "type": "object",
        "title": "Single Job",
        "properties": {
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "asAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The point in time for which this response is for. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          },
          "data": {
            "type": "object",
            "title": "Job",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Job](#tag/Jobs).",
                "type": "string"
              },
              "person": {
                "type": "object",
                "description": "The [Person](#tag/People) to whom this [Job](#tag/Jobs) belongs.",
                "properties": {
                  "id": {
                    "title": "UUIDv4",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "description": "The identifier string for the [Person](#tag/People) to whom this [Job](#tag/Jobs) belongs.",
                    "type": "string"
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Name to display throughout the system for this [Person](#tags/people). Generally follows the pattern preferredName (firstName) lastName, but can be configured on a tenant-wide basis to be a different format.",
                    "example": "Batman (Bruce) Wayne"
                  },
                  "employeeNumber": {
                    "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                    "example": "00001",
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "autoIncrementIntellihrId": {
                    "type": "number",
                    "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                    "example": 1000
                  },
                  "link": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/people/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              },
              "recruitment": {
                "type": "object",
                "description": "The recruitment details stored for this [Job](#tag/Jobs).",
                "properties": {
                  "cost": {
                    "description": "The cost to recruit this [Job](#tag/Jobs). If it is null the cost has not been recorded.",
                    "oneOf": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "example": 500
                  },
                  "currency": {
                    "title": "Currency code",
                    "description": "The currency used to recruit this [Job](#tag/Jobs). An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                    "example": "AUD",
                    "pattern": "^[A-Z]{3}$",
                    "type": "string"
                  },
                  "source": {
                    "description": "The [Recruitment Source](#tag/Recruitment-Sources) this job was sourced from or null if it was not recorded.",
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "UUIDv4",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "description": "The identifier string for the [Recruitment Source](#tag/Recruitment-Sources) of this [Job](#tag/Jobs).",
                            "type": "string"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name given to this [Recruitment Source](#tag/Recruitment-Sources).",
                            "example": "Unknown"
                          },
                          "link": {
                            "type": "string",
                            "title": "URL",
                            "description": "Link on the public api to get more information on this piece of data.",
                            "example": "https://api.intellihr.io/v1/recruitment-sources/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                          }
                        }
                      },
                      {
                        "type": "null"
                      }
                    ]
                  }
                }
              },
              "extendedLeave": {
                "description": "If this job has active extended leave, this will be populated, otherwise it will be null",
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "startDate": {
                        "title": "RFC3339 datetime",
                        "example": "2015-03-01T22:30:00+00:00",
                        "description": "The start date of the attribute, or null for start of job. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "endDate": {
                        "title": "RFC3339 datetime",
                        "example": "2015-03-01T22:30:00+00:00",
                        "description": "The end date of the attribute, or null for end of job/time. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "isEndDateConfirmed": {
                        "description": "If the end date is the expected or actual return date",
                        "example": true,
                        "type": "boolean"
                      },
                      "type": {
                        "description": "The [Extended Leave Type](#tag/extended-leave-types) for this leave record, or null if the person was not on leave for these dates",
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "title": "UUIDv4",
                                "maxLength": 36,
                                "minLength": 36,
                                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                "description": "The identifier string for the [Extended Leave Type](#tag/extended-leave-types) of this [Job](#tag/Jobs).",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name given to this [Extended Leave Type](#tag/extended-leave-types). This name would normally be shown to users of the system.",
                                "example": "Annual",
                                "type": "string"
                              },
                              "link": {
                                "type": "string",
                                "title": "URL",
                                "description": "Link on the public api to get more information on this piece of data.",
                                "example": "https://api.intellihr.io/v1/extended-leave-types/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                              }
                            }
                          },
                          {
                            "type": "null"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "location": {
                "type": "object",
                "description": "The geographical location of this [Job](#tag/Jobs).",
                "properties": {
                  "id": {
                    "title": "UUIDv4",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "description": "The identifier string for the [Location](tag/Locations) of this [Job](#tag/Jobs).",
                    "type": "string"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name given to this [Location](#tag/Locations). This name would normally be shown to users of the system.",
                    "example": "Brisbane Office"
                  },
                  "address": {
                    "type": "string",
                    "description": "The address of this location.",
                    "example": "1234 Queen Street, Brisbane City QLD 4000"
                  },
                  "code": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Code given to this [Location](#tag/Locations).",
                    "example": "BE001"
                  },
                  "customFields": {
                    "description": "The custom field values for this [Location](#tag/Locations)",
                    "allOf": [
                      {
                        "$ref": "#/definitions/customFieldsResponse"
                      }
                    ]
                  },
                  "link": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/locations/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              },
              "payGrade": {
                "type": "object",
                "description": "The [Job's](#tag/Jobs) current [Pay Grade](#tag/Pay-Grades) in the system.",
                "properties": {
                  "id": {
                    "title": "UUIDv4",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "description": "The identifier string for the [Pay Grade](#tag/Pay-Grades) of this [Job](#tag/Jobs).",
                    "type": "string"
                  },
                  "name": {
                    "description": "User friendly name given to the [Pay Grade](#tag/Pay-Grades).",
                    "example": "Founder",
                    "type": "string"
                  },
                  "code": {
                    "description": "Administrative, short code associated to the [Pay Grade](#tag/Pay-Grades).",
                    "default": "N/A",
                    "example": "L0",
                    "type": "string"
                  },
                  "payStep": {
                    "oneOf": [
                      {
                        "type": "object",
                        "default": null,
                        "description": "The pay step within this paygrade that applies to the employee",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "User friendly name for this pay step."
                          },
                          "id": {
                            "title": "UUIDv4",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "description": "The identifier string for the Unique identifier for this pay step.",
                            "type": "string"
                          },
                          "annualSalary": {
                            "oneOf": [
                              {
                                "type": "number",
                                "description": "The annual salary this pay step represents."
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "annualSalaryCurrency": {
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "code": {
                                    "type": "string"
                                  },
                                  "symbol": {
                                    "type": "string"
                                  }
                                },
                                "description": "The currency the annual salary is recorded within."
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "permanentHourlyRate": {
                            "oneOf": [
                              {
                                "type": "number",
                                "description": "The permanent hourly rate this pay step represents."
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "permanentHourlyRateCurrency": {
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "code": {
                                    "type": "string"
                                  },
                                  "symbol": {
                                    "type": "string"
                                  }
                                },
                                "description": "The currency the permanent hourly rate is recorded within."
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "casualHourlyRate": {
                            "oneOf": [
                              {
                                "type": "number",
                                "description": "The casual hourly rate this pay step represents."
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "casualHourlyRateCurrency": {
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "code": {
                                    "type": "string"
                                  },
                                  "symbol": {
                                    "type": "string"
                                  }
                                },
                                "description": "The currency the casual hourly rate is recorded within."
                              },
                              {
                                "type": "null"
                              }
                            ]
                          }
                        }
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "link": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/pay-grades/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              },
              "businessUnit": {
                "type": "object",
                "description": "The [Job's](#tag/Jobs) current [Business Unit](#tag/Business-Units) in the system.",
                "properties": {
                  "id": {
                    "title": "UUIDv4",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "description": "The identifier string for the [Business Unit](#tag/Business-Units) of this [Job](#tag/Jobs).",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name given to this [Business Unit](#tag/Business-Units). This name would normally be shown to users of the system.",
                    "example": "Engineering",
                    "type": "string"
                  },
                  "code": {
                    "description": "Code given to this [Business Unit](#tag/Business-Units).",
                    "example": "BE001",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "link": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/business-units/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  },
                  "customFields": {
                    "description": "The custom field values for this Business Unit",
                    "allOf": [
                      {
                        "$ref": "#/definitions/customFieldsResponse"
                      }
                    ]
                  }
                }
              },
              "businessEntity": {
                "type": "object",
                "description": "The [Job's](#tag/Jobs) current [Business Entity](#tag/Business-Entities) in the system.",
                "properties": {
                  "id": {
                    "title": "UUIDv4",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "description": "The identifier string for the [Business Entity](#tag/Business-Entities) of this [Job](#tag/Jobs).",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name given to this [Business Entity](#tag/Business-Entities). This name would normally be shown to users of the system.",
                    "example": "IntelliHR",
                    "type": "string"
                  },
                  "code": {
                    "description": "Code given to this [Business Entity](#tag/Business-Entities).",
                    "example": "BE001",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "link": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/business-entities/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  },
                  "customFields": {
                    "description": "The custom field values for this Business Unit",
                    "allOf": [
                      {
                        "$ref": "#/definitions/customFieldsResponse"
                      }
                    ]
                  }
                }
              },
              "establishment": {
                "description": "The [Job's](#tag/Jobs) current [Establishment](#tag/Establishments) in the system.",
                "type": "object",
                "properties": {
                  "id": {
                    "title": "UUIDv4",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "description": "The identifier string for the [Establishment](#tag/Establishments) of this [Job](#tag/Jobs).",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name given to this [Establishment](#tag/Establishments).",
                    "example": "NewCo Engineering Manager",
                    "type": "string"
                  },
                  "link": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/establishments/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              },
              "supervisorJob": {
                "description": "The [Job](#tag/Jobs) information for the supervisor of this [Job](#tag/Jobs) or null if they have no supervisor.",
                "oneOf": [
                  {
                    "type": "null"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the [Supervisor's Job](#tag/Job) of this [Job](#tag/Jobs).",
                        "type": "string"
                      },
                      "jobStatus": {
                        "type": "string",
                        "description": "The current status of this job within this organisation. Enum: `Past Job`, `Future Job`, `Ending Job`, `Current Job`.",
                        "example": "Current Job"
                      },
                      "name": {
                        "description": "The name of the [Supervisor's Job](#tag/Jobs).",
                        "example": "Janitor",
                        "type": "string"
                      },
                      "positionTitle": {
                        "type": "object",
                        "description": "Position Title that exist within the organisation. Position Title are assigned to [Jobs](#tag/jobs).",
                        "properties": {
                          "id": {
                            "title": "UUIDv4",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "description": "The identifier string for the [Position Title](#tag/Position-Titles) of this [Job](#tag/Jobs).",
                            "type": "string"
                          },
                          "name": {
                            "description": "A name given to this [Position Title](#tag/Position-Titles)",
                            "type": "string",
                            "example": "Janitor"
                          },
                          "code": {
                            "description": "An optional code that relates to this [Position Title](#tag/Position-Titles)",
                            "type": [
                              "string",
                              "null"
                            ],
                            "example": "1234"
                          }
                        }
                      },
                      "link": {
                        "type": "string",
                        "title": "URL",
                        "description": "Link on the public api to get more information on this piece of data.",
                        "example": "https://api.intellihr.io/v1/jobs/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                      }
                    }
                  }
                ]
              },
              "supervisorPerson": {
                "description": "The [Person](#tag/People) information for the supervisor of this job or null if they have no supervisor.",
                "oneOf": [
                  {
                    "type": "null"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the [Supervisor's Person](#tag/People) of this [Job](#tag/Jobs).",
                        "type": "string"
                      },
                      "displayName": {
                        "type": "string",
                        "description": "Name to display throughout the system for this [Person](#tags/people). Generally follows the pattern preferredName (firstName) lastName, but can be configured on a tenant-wide basis to be a different format.",
                        "example": "Batman (Bruce) Wayne"
                      },
                      "employeeNumber": {
                        "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                        "example": "00001",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "autoIncrementIntellihrId": {
                        "type": "number",
                        "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                        "example": 1000
                      },
                      "link": {
                        "type": "string",
                        "title": "URL",
                        "description": "Link on the public api to get more information on this piece of data.",
                        "example": "https://api.intellihr.io/v1/people/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                      }
                    }
                  }
                ]
              },
              "employmentCondition": {
                "description": "An instance of the [Employment Condition](#tag/Employment-Conditions) that is attached to the job, contains the dates it is effective for.",
                "oneOf": [
                  {
                    "type": "null",
                    "description": "An [Employment Condition](#tag/Employment-Conditions) is not set"
                  },
                  {
                    "type": "object",
                    "description": "The [Employment Condition](#tag/Employment-Conditions) this job is being paid under.",
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the [Employment Condition](#tag/Employment-Conditions) of this Remuneration Schedule.",
                        "type": "string"
                      },
                      "startDate": {
                        "title": "RFC3339 datetime",
                        "example": "2015-03-01T22:30:00+00:00",
                        "description": "The start date of the attribute, or null for start of job. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "endDate": {
                        "title": "RFC3339 datetime",
                        "example": "2015-03-01T22:30:00+00:00",
                        "description": "The end date of the attribute, or null for end of job/time. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "name": {
                        "description": "Name given to this [Employment Condition](#tag/Employment-Conditions). This name would normally be shown to users of the system.",
                        "example": "Professional Employees Award 2010",
                        "type": "string"
                      },
                      "awardName": {
                        "description": "Award name can be different from the name presented to a user. Usually used for the legal name of the award.",
                        "example": "MA000065: Professional Employees Award 2010 - Fair Work Commission",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "link": {
                        "type": "string",
                        "title": "URL",
                        "description": "Link on the public api to get more information on this piece of data.",
                        "example": "https://api.intellihr.io/v1/employment-conditions/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                      }
                    }
                  }
                ]
              },
              "remunerationSchedule": {
                "type": "object",
                "description": "The current remuneration details for this [Job](#tags/Jobs), including information such as salary and hourly pay, all [Jobs](#tags/Jobs) have a remuneration schedule but for unpaid employees they will have a special `No Remuneration Schedule` schedule.",
                "properties": {
                  "type": {
                    "description": "The method in which this remuneration schedule is paid, if a person is unpaid then this will be `No Remuneration Schedule`. Enum: `Annual Salary`, `Hourly Rate`, `No Remuneration Schedule`.",
                    "type": "string"
                  },
                  "baseAnnualSalary": {
                    "description": "The Base Salary paid yearly, this is an approximation if they are paid hourly. Note that if both baseAnnualSalary and baseHourlyRate are provided in a create or patch request, the baseHourlyRate will be ignored.",
                    "example": 50000,
                    "type": "number"
                  },
                  "baseHourlyRate": {
                    "description": "The Base Rate paid hourly, this is an approximation if they are paid annually. Note that if both baseAnnualSalary and baseHourlyRate are provided in a create or patch request, the baseHourlyRate will be ignored.",
                    "example": 24,
                    "type": "number"
                  },
                  "currency": {
                    "title": "Currency code",
                    "description": "The currency that the base and total amounts that this job is being paid in. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                    "example": "AUD",
                    "pattern": "^[A-Z]{3}$",
                    "type": "string"
                  },
                  "hoursPerCycle": {
                    "description": "How many hours worked per payCycle. \n\n 0 (zero) signifies that the hours are variable per pay cycle",
                    "example": 80,
                    "type": "number"
                  },
                  "payCycle": {
                    "description": "The cycle that the job is paid on. Enum: `Weekly`, `Fortnightly`, `Monthly`, `Bi-Monthly`.",
                    "example": "Fortnightly",
                    "type": "string"
                  },
                  "annualPackage": {
                    "description": "The total package paid yearly including additions and deductions. This amount is calculated by adding the Base Annual Salary and additions minus the deductions.",
                    "example": 60000,
                    "type": "number"
                  },
                  "hourlyPackage": {
                    "description": "The total package paid hourly including additions and deductions. This amount is calculated by dividing the Annual Package by the total number of hours per annum.",
                    "example": 28,
                    "type": "number"
                  },
                  "currencyConversionOccurred": {
                    "description": "If any conversion had to be performed between addition and deduction currencies when calculating the annual package.",
                    "example": true,
                    "type": "boolean"
                  },
                  "employmentCondition": {
                    "type": "object",
                    "description": "The [Employment Condition](#tag/Employment-Conditions) this job is being paid under. **Deprecated** Please use the job-level employmentCondition field instead.",
                    "deprecated": true,
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the [Employment Condition](#tag/Employment-Conditions) of this Remuneration Schedule.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name given to this [Employment Condition](#tag/Employment-Conditions). This name would normally be shown to users of the system.",
                        "example": "Professional Employees Award 2010",
                        "type": "string"
                      },
                      "awardName": {
                        "description": "Award name can be different from the name presented to a user. Usually used for the legal name of the award.",
                        "example": "MA000065: Professional Employees Award 2010 - Fair Work Commission",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "link": {
                        "type": "string",
                        "title": "URL",
                        "description": "Link on the public api to get more information on this piece of data.",
                        "example": "https://api.intellihr.io/v1/employment-conditions/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                      }
                    }
                  },
                  "additions": {
                    "type": "array",
                    "description": "An array of Additions for this Remuneration Schedule.",
                    "items": {
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of this Addition.",
                          "example": "Superannuation"
                        },
                        "type": {
                          "type": "string",
                          "description": "How this addition is calculated and applied to the base amount, multipleOfBase is multiplied by baseAnnualSalary and then added to the total while fixed amount is added directly to the total. Enum: `MultipleOfBase`, `FixedAmount`."
                        },
                        "value": {
                          "description": "For multipleOfBase this is the multiplier (e.g. 9 = 9%) while for fixed amount this is the amount to directly add to the total.",
                          "example": 9.5,
                          "type": "number"
                        },
                        "currency": {
                          "title": "Currency code",
                          "description": "The currency used for this Addition. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                          "example": "AUD",
                          "pattern": "^[A-Z]{3}$",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "deductions": {
                    "type": "array",
                    "description": "An array of Deductions for this Remuneration Schedule. Note that this deductions value has been deprecated, you should now use `breakdowns`",
                    "deprecated": true,
                    "items": {
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of this Deduction.",
                          "example": "salary sacrifice"
                        },
                        "type": {
                          "type": "string",
                          "description": "How this deduction is calculated and applied to the base amount, multipleOfBase is multiplied by baseAnnualSalary and then deducted from the total while fixed amount is deducted directly from the total. Enum: `MultipleOfBase`, `FixedAmount`."
                        },
                        "value": {
                          "description": "For multipleOfBase this is the multiplier while for fixed amount this is the amount to directly deduct from the total.",
                          "example": 5000,
                          "type": "number"
                        },
                        "currency": {
                          "title": "Currency code",
                          "description": "The currency used for this Deduction. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                          "example": "AUD",
                          "pattern": "^[A-Z]{3}$",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "additionsToTotal": {
                    "type": "array",
                    "description": "An array of Additions applied to the package after all other components for this Remuneration Schedule.",
                    "items": {
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of this Total Addition.",
                          "example": "Superannuation"
                        },
                        "type": {
                          "type": "string",
                          "description": "How this total addition is calculated and applied to the base amount, multipleOfBase is multiplied by baseAnnualSalary and then added to the total while fixed amount is added directly to the total. Enum: `MultipleOfBase`, `FixedAmount`."
                        },
                        "value": {
                          "description": "For multipleOfBase this is the multiplier (e.g. 9 = 9%) while for fixed amount this is the amount to directly add to the total.",
                          "example": 9.5,
                          "type": "number"
                        },
                        "currency": {
                          "title": "Currency code",
                          "description": "The currency used for this Addition. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                          "example": "AUD",
                          "pattern": "^[A-Z]{3}$",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "breakdowns": {
                    "type": "array",
                    "description": "An array of Breakdowns for this Remuneration Schedule. Breakdowns will not be used to calculate the total package.",
                    "items": {
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of this Addition.",
                          "example": "Superannuation"
                        },
                        "type": {
                          "type": "string",
                          "description": "How this addition is recorded, it is not used to compute the total package due unlike other remuneration components. Enum: `MultipleOfBase`, `FixedAmount`."
                        },
                        "value": {
                          "description": "For multipleOfBase this is the multiplier (e.g. 9 = 9%) while for fixed amount this is the amount to directly add to the total.",
                          "example": 9.5,
                          "type": "number"
                        },
                        "currency": {
                          "title": "Currency code",
                          "description": "The currency used for this Addition. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                          "example": "AUD",
                          "pattern": "^[A-Z]{3}$",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "customFields": {
                    "description": "The custom field values for this Remuneration Schedule",
                    "allOf": [
                      {
                        "$ref": "#/definitions/customFieldsResponse"
                      }
                    ]
                  }
                }
              },
              "name": {
                "type": "string",
                "description": "The name of this [Job](#tag/Jobs).",
                "example": "Janitor"
              },
              "positionTitle": {
                "type": "object",
                "description": "Position Titles that exist within the organisation. Position Title are assigned to [Jobs](#tag/jobs).",
                "properties": {
                  "id": {
                    "title": "UUIDv4",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "description": "The identifier string for the [Position Title](#tag/Position-Titles) of this [Job](#tag/Jobs).",
                    "type": "string"
                  },
                  "name": {
                    "description": "A name given to this [Position Title](#tag/Position-Titles)",
                    "type": "string",
                    "example": "Janitor"
                  },
                  "code": {
                    "description": "An optional code that relates to this [Position Title](#tag/Position-Titles)",
                    "type": [
                      "string",
                      "null"
                    ],
                    "example": "1234"
                  }
                }
              },
              "fte": {
                "description": "The full time equivalent of this [Job](#tag/Jobs). Indicating the workload of an employee that can be comparable across different contexts. This is null for people without an FTE.",
                "example": 1,
                "oneOf": [
                  {
                    "type": "null"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              "comments": {
                "type": "array",
                "description": "An array of comment objects that annotate the reason for [Job](#tag/Jobs) changes. Will be an empty array when there has been no updates to the Job.",
                "items": {
                  "properties": {
                    "id": {
                      "title": "UUIDv4",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "description": "The identifier string for the Job Comment.",
                      "type": "string"
                    },
                    "date": {
                      "title": "RFC3339 datetime",
                      "example": "2015-03-01T22:30:00+00:00",
                      "description": "The date this Job Comment was created. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "description": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "A further description of the Job Change Reason.",
                      "example": "Completed MBA."
                    },
                    "jobChangeReason": {
                      "type": "object",
                      "description": "The [Job Change Reason](#tag/Job-Change-Reasons) used in the system to document the reason for the change.",
                      "properties": {
                        "id": {
                          "title": "UUIDv4",
                          "maxLength": 36,
                          "minLength": 36,
                          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                          "description": "The identifier string for the [Job Change Reason](#tag/Job-Change-Reasons) to which this Job Comment belongs.",
                          "type": "string"
                        },
                        "name": {
                          "type": "string",
                          "description": "Name given to this [Job Change Reason](#tag/Job-Change-Reasons).",
                          "example": "Promotion"
                        },
                        "link": {
                          "type": "string",
                          "title": "URL",
                          "description": "Link on the public api to get more information on this piece of data.",
                          "example": "https://api.intellihr.io/v1/job-change-reasons/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                        }
                      }
                    }
                  }
                }
              },
              "lastestJobChangeComment": {
                "description": "The latest comment that annotates the reason for a [Job's](#tag/Jobs) change. It will return the latest comment based on the asAt value or null if none exist.",
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the Job Comment.",
                        "type": "string"
                      },
                      "date": {
                        "title": "RFC3339 datetime",
                        "example": "2015-03-01T22:30:00+00:00",
                        "description": "The date this Job Comment was created. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "description": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "description": "A further description of the Job Change Reason.",
                        "example": "Completed MBA."
                      },
                      "jobChangeReason": {
                        "type": "object",
                        "description": "The [Job Change Reason](#tag/Job-Change-Reasons) used in the system to document the reason for the change.",
                        "properties": {
                          "id": {
                            "title": "UUIDv4",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "description": "The identifier string for the [Job Change Reason](#tag/Job-Change-Reasons) to which this Job Comment belongs.",
                            "type": "string"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name given to this [Job Change Reason](#tag/Job-Change-Reasons).",
                            "example": "Promotion"
                          },
                          "link": {
                            "type": "string",
                            "title": "URL",
                            "description": "Link on the public api to get more information on this piece of data.",
                            "example": "https://api.intellihr.io/v1/job-change-reasons/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "workClass": {
                "type": "string",
                "description": "The [Work Class](#tag/Work-Classes) of this [Job](#tag/Jobs). This is extra details about the [Work Type](#tag/Work-Types).",
                "example": "Full-Time"
              },
              "workType": {
                "type": "string",
                "description": "This is the [Work Classification](#tag/Work-Types) for this [Job](#tag/Jobs), it is used to differentiate between full-time and part time employees vs unpaid volunteers. Enum: `Permanent`, `Fixed Contract`, `Unpaid`, `Temporary/Casual`, `Independent Contract`.",
                "example": "Permanent"
              },
              "isPrimaryJob": {
                "type": "boolean",
                "description": "Whether this job is the primary job on the [Person](#tag/People). Only one job on a [Person](#tag/People) can be primary at a time.",
                "default": false,
                "example": false
              },
              "jobStatus": {
                "type": "string",
                "description": "The current status of this job within this organisation. Enum: `Past Job`, `Future Job`, `Ending Job`, `Current Job`.",
                "example": "Current Job"
              },
              "createdBy": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the Id of this [user](#tag/Users).",
                        "type": "string"
                      },
                      "link": {
                        "type": "string",
                        "title": "URL",
                        "description": "Link on the public api to get more information on this piece of data.",
                        "example": "https://api.intellihr.io/v1/users/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                      }
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "The [User](#tags/users) who created this job. May be null for old [Jobs](#tags/jobs). This field will remain null for API created jobs."
              },
              "updatedBy": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the Id of this [user](#tag/Users).",
                        "type": "string"
                      },
                      "link": {
                        "type": "string",
                        "title": "URL",
                        "description": "Link on the public api to get more information on this piece of data.",
                        "example": "https://api.intellihr.io/v1/users/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                      }
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "The last [User](#tags/users) who updated this job. May be null for old [Jobs](#tags/jobs). This field will remain null if the last update was performed by the API."
              },
              "positionStartDate": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The start date of the current position the person is in. The gap between the `companyStartDate` and `positionStartDate` will be filled with \"Previous position title\" historical records, to correctly depict the person as having no information recorded for old job positions. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
                "type": "string"
              },
              "companyStartDate": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The date this [Job](#tags/jobs) started or will start within the organisation. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "companyEndDate": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The <b>exclusive</b> date this [Job](#tags/jobs) ended or will end within the organisation. For example, if the person's last working date is on 2025-04-23, the `companyEndDate` should be set as 2025-04-24 to reflect the exclusive date. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "isEndDateConfirmed": {
                "type": "boolean",
                "description": "Whether the end date has been finalised within the intelliHR application.",
                "default": false,
                "example": false
              },
              "turnoverType": {
                "description": "The type of turnover this end of job is classified as.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "example": "INVOLUNTARY"
              },
              "turnoverReason": {
                "description": "The name of the turnover reason.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "example": "Medical reasons"
              },
              "customFields": {
                "description": "The custom field values for this Job",
                "allOf": [
                  {
                    "$ref": "#/definitions/customFieldsResponse"
                  }
                ]
              },
              "createdAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "When this record was created. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              }
            }
          }
        }
      },
      "jobs_list": {
        "type": "object",
        "title": "List Jobs",
        "properties": {
          "data": {
            "type": "array",
            "title": "data",
            "items": {
              "type": "object",
              "title": "Job",
              "properties": {
                "id": {
                  "title": "UUIDv4",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "description": "The identifier string for the [Job](#tag/Jobs).",
                  "type": "string"
                },
                "person": {
                  "type": "object",
                  "description": "The [Person](#tag/People) to whom this [Job](#tag/Jobs) belongs.",
                  "properties": {
                    "id": {
                      "title": "UUIDv4",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "description": "The identifier string for the [Person](#tag/People) to whom this [Job](#tag/Jobs) belongs.",
                      "type": "string"
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Name to display throughout the system for this [Person](#tags/people). Generally follows the pattern preferredName (firstName) lastName, but can be configured on a tenant-wide basis to be a different format.",
                      "example": "Batman (Bruce) Wayne"
                    },
                    "employeeNumber": {
                      "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                      "example": "00001",
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "autoIncrementIntellihrId": {
                      "type": "number",
                      "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                      "example": 1000
                    },
                    "link": {
                      "type": "string",
                      "title": "URL",
                      "description": "Link on the public api to get more information on this piece of data.",
                      "example": "https://api.intellihr.io/v1/people/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                    }
                  }
                },
                "recruitment": {
                  "type": "object",
                  "description": "The recruitment details stored for this [Job](#tag/Jobs).",
                  "properties": {
                    "cost": {
                      "description": "The cost to recruit this [Job](#tag/Jobs). If it is null the cost has not been recorded.",
                      "oneOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "null"
                        }
                      ],
                      "example": 500
                    },
                    "currency": {
                      "title": "Currency code",
                      "description": "The currency used to recruit this [Job](#tag/Jobs). An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                      "example": "AUD",
                      "pattern": "^[A-Z]{3}$",
                      "type": "string"
                    },
                    "source": {
                      "description": "The [Recruitment Source](#tag/Recruitment-Sources) this job was sourced from or null if it was not recorded.",
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "title": "UUIDv4",
                              "maxLength": 36,
                              "minLength": 36,
                              "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                              "description": "The identifier string for the [Recruitment Source](#tag/Recruitment-Sources) of this [Job](#tag/Jobs).",
                              "type": "string"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name given to this [Recruitment Source](#tag/Recruitment-Sources).",
                              "example": "Unknown"
                            },
                            "link": {
                              "type": "string",
                              "title": "URL",
                              "description": "Link on the public api to get more information on this piece of data.",
                              "example": "https://api.intellihr.io/v1/recruitment-sources/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                            }
                          }
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "extendedLeave": {
                  "description": "If this job has active extended leave, this will be populated, otherwise it will be null",
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "startDate": {
                          "title": "RFC3339 datetime",
                          "example": "2015-03-01T22:30:00+00:00",
                          "description": "The start date of the attribute, or null for start of job. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "endDate": {
                          "title": "RFC3339 datetime",
                          "example": "2015-03-01T22:30:00+00:00",
                          "description": "The end date of the attribute, or null for end of job/time. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "isEndDateConfirmed": {
                          "description": "If the end date is the expected or actual return date",
                          "example": true,
                          "type": "boolean"
                        },
                        "type": {
                          "description": "The [Extended Leave Type](#tag/extended-leave-types) for this leave record, or null if the person was not on leave for these dates",
                          "oneOf": [
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "title": "UUIDv4",
                                  "maxLength": 36,
                                  "minLength": 36,
                                  "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                  "description": "The identifier string for the [Extended Leave Type](#tag/extended-leave-types) of this [Job](#tag/Jobs).",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name given to this [Extended Leave Type](#tag/extended-leave-types). This name would normally be shown to users of the system.",
                                  "example": "Annual",
                                  "type": "string"
                                },
                                "link": {
                                  "type": "string",
                                  "title": "URL",
                                  "description": "Link on the public api to get more information on this piece of data.",
                                  "example": "https://api.intellihr.io/v1/extended-leave-types/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                                }
                              }
                            },
                            {
                              "type": "null"
                            }
                          ]
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "location": {
                  "type": "object",
                  "description": "The geographical location of this [Job](#tag/Jobs).",
                  "properties": {
                    "id": {
                      "title": "UUIDv4",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "description": "The identifier string for the [Location](tag/Locations) of this [Job](#tag/Jobs).",
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name given to this [Location](#tag/Locations). This name would normally be shown to users of the system.",
                      "example": "Brisbane Office"
                    },
                    "address": {
                      "type": "string",
                      "description": "The address of this location.",
                      "example": "1234 Queen Street, Brisbane City QLD 4000"
                    },
                    "code": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "Code given to this [Location](#tag/Locations).",
                      "example": "BE001"
                    },
                    "customFields": {
                      "description": "The custom field values for this [Location](#tag/Locations)",
                      "allOf": [
                        {
                          "$ref": "#/definitions/customFieldsResponse"
                        }
                      ]
                    },
                    "link": {
                      "type": "string",
                      "title": "URL",
                      "description": "Link on the public api to get more information on this piece of data.",
                      "example": "https://api.intellihr.io/v1/locations/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                    }
                  }
                },
                "payGrade": {
                  "type": "object",
                  "description": "The [Job's](#tag/Jobs) current [Pay Grade](#tag/Pay-Grades) in the system.",
                  "properties": {
                    "id": {
                      "title": "UUIDv4",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "description": "The identifier string for the [Pay Grade](#tag/Pay-Grades) of this [Job](#tag/Jobs).",
                      "type": "string"
                    },
                    "name": {
                      "description": "User friendly name given to the [Pay Grade](#tag/Pay-Grades).",
                      "example": "Founder",
                      "type": "string"
                    },
                    "code": {
                      "description": "Administrative, short code associated to the [Pay Grade](#tag/Pay-Grades).",
                      "default": "N/A",
                      "example": "L0",
                      "type": "string"
                    },
                    "payStep": {
                      "oneOf": [
                        {
                          "type": "object",
                          "default": null,
                          "description": "The pay step within this paygrade that applies to the employee",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "User friendly name for this pay step."
                            },
                            "id": {
                              "title": "UUIDv4",
                              "maxLength": 36,
                              "minLength": 36,
                              "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                              "description": "The identifier string for the Unique identifier for this pay step.",
                              "type": "string"
                            },
                            "annualSalary": {
                              "oneOf": [
                                {
                                  "type": "number",
                                  "description": "The annual salary this pay step represents."
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "annualSalaryCurrency": {
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "code": {
                                      "type": "string"
                                    },
                                    "symbol": {
                                      "type": "string"
                                    }
                                  },
                                  "description": "The currency the annual salary is recorded within."
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "permanentHourlyRate": {
                              "oneOf": [
                                {
                                  "type": "number",
                                  "description": "The permanent hourly rate this pay step represents."
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "permanentHourlyRateCurrency": {
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "code": {
                                      "type": "string"
                                    },
                                    "symbol": {
                                      "type": "string"
                                    }
                                  },
                                  "description": "The currency the permanent hourly rate is recorded within."
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "casualHourlyRate": {
                              "oneOf": [
                                {
                                  "type": "number",
                                  "description": "The casual hourly rate this pay step represents."
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "casualHourlyRateCurrency": {
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string"
                                    },
                                    "code": {
                                      "type": "string"
                                    },
                                    "symbol": {
                                      "type": "string"
                                    }
                                  },
                                  "description": "The currency the casual hourly rate is recorded within."
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            }
                          }
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "link": {
                      "type": "string",
                      "title": "URL",
                      "description": "Link on the public api to get more information on this piece of data.",
                      "example": "https://api.intellihr.io/v1/pay-grades/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                    }
                  }
                },
                "businessUnit": {
                  "type": "object",
                  "description": "The [Job's](#tag/Jobs) current [Business Unit](#tag/Business-Units) in the system.",
                  "properties": {
                    "id": {
                      "title": "UUIDv4",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "description": "The identifier string for the [Business Unit](#tag/Business-Units) of this [Job](#tag/Jobs).",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name given to this [Business Unit](#tag/Business-Units). This name would normally be shown to users of the system.",
                      "example": "Engineering",
                      "type": "string"
                    },
                    "code": {
                      "description": "Code given to this [Business Unit](#tag/Business-Units).",
                      "example": "BE001",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "link": {
                      "type": "string",
                      "title": "URL",
                      "description": "Link on the public api to get more information on this piece of data.",
                      "example": "https://api.intellihr.io/v1/business-units/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                    },
                    "customFields": {
                      "description": "The custom field values for this Business Unit",
                      "allOf": [
                        {
                          "$ref": "#/definitions/customFieldsResponse"
                        }
                      ]
                    }
                  }
                },
                "businessEntity": {
                  "type": "object",
                  "description": "The [Job's](#tag/Jobs) current [Business Entity](#tag/Business-Entities) in the system.",
                  "properties": {
                    "id": {
                      "title": "UUIDv4",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "description": "The identifier string for the [Business Entity](#tag/Business-Entities) of this [Job](#tag/Jobs).",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name given to this [Business Entity](#tag/Business-Entities). This name would normally be shown to users of the system.",
                      "example": "IntelliHR",
                      "type": "string"
                    },
                    "code": {
                      "description": "Code given to this [Business Entity](#tag/Business-Entities).",
                      "example": "BE001",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "link": {
                      "type": "string",
                      "title": "URL",
                      "description": "Link on the public api to get more information on this piece of data.",
                      "example": "https://api.intellihr.io/v1/business-entities/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                    },
                    "customFields": {
                      "description": "The custom field values for this Business Unit",
                      "allOf": [
                        {
                          "$ref": "#/definitions/customFieldsResponse"
                        }
                      ]
                    }
                  }
                },
                "establishment": {
                  "description": "The [Job's](#tag/Jobs) current [Establishment](#tag/Establishments) in the system.",
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "UUIDv4",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "description": "The identifier string for the [Establishment](#tag/Establishments) of this [Job](#tag/Jobs).",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name given to this [Establishment](#tag/Establishments).",
                      "example": "NewCo Engineering Manager",
                      "type": "string"
                    },
                    "link": {
                      "type": "string",
                      "title": "URL",
                      "description": "Link on the public api to get more information on this piece of data.",
                      "example": "https://api.intellihr.io/v1/establishments/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                    }
                  }
                },
                "supervisorJob": {
                  "description": "The [Job](#tag/Jobs) information for the supervisor of this [Job](#tag/Jobs) or null if they have no supervisor.",
                  "oneOf": [
                    {
                      "type": "null"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "title": "UUIDv4",
                          "maxLength": 36,
                          "minLength": 36,
                          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                          "description": "The identifier string for the [Supervisor's Job](#tag/Job) of this [Job](#tag/Jobs).",
                          "type": "string"
                        },
                        "jobStatus": {
                          "type": "string",
                          "description": "The current status of this job within this organisation. Enum: `Past Job`, `Future Job`, `Ending Job`, `Current Job`.",
                          "example": "Current Job"
                        },
                        "name": {
                          "description": "The name of the [Supervisor's Job](#tag/Jobs).",
                          "example": "Janitor",
                          "type": "string"
                        },
                        "positionTitle": {
                          "type": "object",
                          "description": "Position Title that exist within the organisation. Position Title are assigned to [Jobs](#tag/jobs).",
                          "properties": {
                            "id": {
                              "title": "UUIDv4",
                              "maxLength": 36,
                              "minLength": 36,
                              "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                              "description": "The identifier string for the [Position Title](#tag/Position-Titles) of this [Job](#tag/Jobs).",
                              "type": "string"
                            },
                            "name": {
                              "description": "A name given to this [Position Title](#tag/Position-Titles)",
                              "type": "string",
                              "example": "Janitor"
                            },
                            "code": {
                              "description": "An optional code that relates to this [Position Title](#tag/Position-Titles)",
                              "type": [
                                "string",
                                "null"
                              ],
                              "example": "1234"
                            }
                          }
                        },
                        "link": {
                          "type": "string",
                          "title": "URL",
                          "description": "Link on the public api to get more information on this piece of data.",
                          "example": "https://api.intellihr.io/v1/jobs/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                        }
                      }
                    }
                  ]
                },
                "supervisorPerson": {
                  "description": "The [Person](#tag/People) information for the supervisor of this job or null if they have no supervisor.",
                  "oneOf": [
                    {
                      "type": "null"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "title": "UUIDv4",
                          "maxLength": 36,
                          "minLength": 36,
                          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                          "description": "The identifier string for the [Supervisor's Person](#tag/People) of this [Job](#tag/Jobs).",
                          "type": "string"
                        },
                        "displayName": {
                          "type": "string",
                          "description": "Name to display throughout the system for this [Person](#tags/people). Generally follows the pattern preferredName (firstName) lastName, but can be configured on a tenant-wide basis to be a different format.",
                          "example": "Batman (Bruce) Wayne"
                        },
                        "employeeNumber": {
                          "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                          "example": "00001",
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "null"
                            }
                          ]
                        },
                        "autoIncrementIntellihrId": {
                          "type": "number",
                          "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                          "example": 1000
                        },
                        "link": {
                          "type": "string",
                          "title": "URL",
                          "description": "Link on the public api to get more information on this piece of data.",
                          "example": "https://api.intellihr.io/v1/people/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                        }
                      }
                    }
                  ]
                },
                "employmentCondition": {
                  "description": "An instance of the [Employment Condition](#tag/Employment-Conditions) that is attached to the job, contains the dates it is effective for.",
                  "oneOf": [
                    {
                      "type": "null",
                      "description": "An [Employment Condition](#tag/Employment-Conditions) is not set"
                    },
                    {
                      "type": "object",
                      "description": "The [Employment Condition](#tag/Employment-Conditions) this job is being paid under.",
                      "properties": {
                        "id": {
                          "title": "UUIDv4",
                          "maxLength": 36,
                          "minLength": 36,
                          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                          "description": "The identifier string for the [Employment Condition](#tag/Employment-Conditions) of this Remuneration Schedule.",
                          "type": "string"
                        },
                        "startDate": {
                          "title": "RFC3339 datetime",
                          "example": "2015-03-01T22:30:00+00:00",
                          "description": "The start date of the attribute, or null for start of job. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "endDate": {
                          "title": "RFC3339 datetime",
                          "example": "2015-03-01T22:30:00+00:00",
                          "description": "The end date of the attribute, or null for end of job/time. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "name": {
                          "description": "Name given to this [Employment Condition](#tag/Employment-Conditions). This name would normally be shown to users of the system.",
                          "example": "Professional Employees Award 2010",
                          "type": "string"
                        },
                        "awardName": {
                          "description": "Award name can be different from the name presented to a user. Usually used for the legal name of the award.",
                          "example": "MA000065: Professional Employees Award 2010 - Fair Work Commission",
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "null"
                            }
                          ]
                        },
                        "link": {
                          "type": "string",
                          "title": "URL",
                          "description": "Link on the public api to get more information on this piece of data.",
                          "example": "https://api.intellihr.io/v1/employment-conditions/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                        }
                      }
                    }
                  ]
                },
                "remunerationSchedule": {
                  "type": "object",
                  "description": "The current remuneration details for this [Job](#tags/Jobs), including information such as salary and hourly pay, all [Jobs](#tags/Jobs) have a remuneration schedule but for unpaid employees they will have a special `No Remuneration Schedule` schedule.",
                  "properties": {
                    "type": {
                      "description": "The method in which this remuneration schedule is paid, if a person is unpaid then this will be `No Remuneration Schedule`. Enum: `Annual Salary`, `Hourly Rate`, `No Remuneration Schedule`.",
                      "type": "string"
                    },
                    "baseAnnualSalary": {
                      "description": "The Base Salary paid yearly, this is an approximation if they are paid hourly. Note that if both baseAnnualSalary and baseHourlyRate are provided in a create or patch request, the baseHourlyRate will be ignored.",
                      "example": 50000,
                      "type": "number"
                    },
                    "baseHourlyRate": {
                      "description": "The Base Rate paid hourly, this is an approximation if they are paid annually. Note that if both baseAnnualSalary and baseHourlyRate are provided in a create or patch request, the baseHourlyRate will be ignored.",
                      "example": 24,
                      "type": "number"
                    },
                    "currency": {
                      "title": "Currency code",
                      "description": "The currency that the base and total amounts that this job is being paid in. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                      "example": "AUD",
                      "pattern": "^[A-Z]{3}$",
                      "type": "string"
                    },
                    "hoursPerCycle": {
                      "description": "How many hours worked per payCycle. \n\n 0 (zero) signifies that the hours are variable per pay cycle",
                      "example": 80,
                      "type": "number"
                    },
                    "payCycle": {
                      "description": "The cycle that the job is paid on. Enum: `Weekly`, `Fortnightly`, `Monthly`, `Bi-Monthly`.",
                      "example": "Fortnightly",
                      "type": "string"
                    },
                    "annualPackage": {
                      "description": "The total package paid yearly including additions and deductions. This amount is calculated by adding the Base Annual Salary and additions minus the deductions.",
                      "example": 60000,
                      "type": "number"
                    },
                    "hourlyPackage": {
                      "description": "The total package paid hourly including additions and deductions. This amount is calculated by dividing the Annual Package by the total number of hours per annum.",
                      "example": 28,
                      "type": "number"
                    },
                    "currencyConversionOccurred": {
                      "description": "If any conversion had to be performed between addition and deduction currencies when calculating the annual package.",
                      "example": true,
                      "type": "boolean"
                    },
                    "employmentCondition": {
                      "type": "object",
                      "description": "The [Employment Condition](#tag/Employment-Conditions) this job is being paid under. **Deprecated** Please use the job-level employmentCondition field instead.",
                      "deprecated": true,
                      "properties": {
                        "id": {
                          "title": "UUIDv4",
                          "maxLength": 36,
                          "minLength": 36,
                          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                          "description": "The identifier string for the [Employment Condition](#tag/Employment-Conditions) of this Remuneration Schedule.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name given to this [Employment Condition](#tag/Employment-Conditions). This name would normally be shown to users of the system.",
                          "example": "Professional Employees Award 2010",
                          "type": "string"
                        },
                        "awardName": {
                          "description": "Award name can be different from the name presented to a user. Usually used for the legal name of the award.",
                          "example": "MA000065: Professional Employees Award 2010 - Fair Work Commission",
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "null"
                            }
                          ]
                        },
                        "link": {
                          "type": "string",
                          "title": "URL",
                          "description": "Link on the public api to get more information on this piece of data.",
                          "example": "https://api.intellihr.io/v1/employment-conditions/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                        }
                      }
                    },
                    "additions": {
                      "type": "array",
                      "description": "An array of Additions for this Remuneration Schedule.",
                      "items": {
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of this Addition.",
                            "example": "Superannuation"
                          },
                          "type": {
                            "type": "string",
                            "description": "How this addition is calculated and applied to the base amount, multipleOfBase is multiplied by baseAnnualSalary and then added to the total while fixed amount is added directly to the total. Enum: `MultipleOfBase`, `FixedAmount`."
                          },
                          "value": {
                            "description": "For multipleOfBase this is the multiplier (e.g. 9 = 9%) while for fixed amount this is the amount to directly add to the total.",
                            "example": 9.5,
                            "type": "number"
                          },
                          "currency": {
                            "title": "Currency code",
                            "description": "The currency used for this Addition. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                            "example": "AUD",
                            "pattern": "^[A-Z]{3}$",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "deductions": {
                      "type": "array",
                      "description": "An array of Deductions for this Remuneration Schedule. Note that this deductions value has been deprecated, you should now use `breakdowns`",
                      "deprecated": true,
                      "items": {
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of this Deduction.",
                            "example": "salary sacrifice"
                          },
                          "type": {
                            "type": "string",
                            "description": "How this deduction is calculated and applied to the base amount, multipleOfBase is multiplied by baseAnnualSalary and then deducted from the total while fixed amount is deducted directly from the total. Enum: `MultipleOfBase`, `FixedAmount`."
                          },
                          "value": {
                            "description": "For multipleOfBase this is the multiplier while for fixed amount this is the amount to directly deduct from the total.",
                            "example": 5000,
                            "type": "number"
                          },
                          "currency": {
                            "title": "Currency code",
                            "description": "The currency used for this Deduction. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                            "example": "AUD",
                            "pattern": "^[A-Z]{3}$",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "additionsToTotal": {
                      "type": "array",
                      "description": "An array of Additions applied to the package after all other components for this Remuneration Schedule.",
                      "items": {
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of this Total Addition.",
                            "example": "Superannuation"
                          },
                          "type": {
                            "type": "string",
                            "description": "How this total addition is calculated and applied to the base amount, multipleOfBase is multiplied by baseAnnualSalary and then added to the total while fixed amount is added directly to the total. Enum: `MultipleOfBase`, `FixedAmount`."
                          },
                          "value": {
                            "description": "For multipleOfBase this is the multiplier (e.g. 9 = 9%) while for fixed amount this is the amount to directly add to the total.",
                            "example": 9.5,
                            "type": "number"
                          },
                          "currency": {
                            "title": "Currency code",
                            "description": "The currency used for this Addition. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                            "example": "AUD",
                            "pattern": "^[A-Z]{3}$",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "breakdowns": {
                      "type": "array",
                      "description": "An array of Breakdowns for this Remuneration Schedule. Breakdowns will not be used to calculate the total package.",
                      "items": {
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of this Addition.",
                            "example": "Superannuation"
                          },
                          "type": {
                            "type": "string",
                            "description": "How this addition is recorded, it is not used to compute the total package due unlike other remuneration components. Enum: `MultipleOfBase`, `FixedAmount`."
                          },
                          "value": {
                            "description": "For multipleOfBase this is the multiplier (e.g. 9 = 9%) while for fixed amount this is the amount to directly add to the total.",
                            "example": 9.5,
                            "type": "number"
                          },
                          "currency": {
                            "title": "Currency code",
                            "description": "The currency used for this Addition. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                            "example": "AUD",
                            "pattern": "^[A-Z]{3}$",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "customFields": {
                      "description": "The custom field values for this Remuneration Schedule",
                      "allOf": [
                        {
                          "$ref": "#/definitions/customFieldsResponse"
                        }
                      ]
                    }
                  }
                },
                "name": {
                  "type": "string",
                  "description": "The name of this [Job](#tag/Jobs).",
                  "example": "Janitor"
                },
                "positionTitle": {
                  "type": "object",
                  "description": "Position Titles that exist within the organisation. Position Title are assigned to [Jobs](#tag/jobs).",
                  "properties": {
                    "id": {
                      "title": "UUIDv4",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "description": "The identifier string for the [Position Title](#tag/Position-Titles) of this [Job](#tag/Jobs).",
                      "type": "string"
                    },
                    "name": {
                      "description": "A name given to this [Position Title](#tag/Position-Titles)",
                      "type": "string",
                      "example": "Janitor"
                    },
                    "code": {
                      "description": "An optional code that relates to this [Position Title](#tag/Position-Titles)",
                      "type": [
                        "string",
                        "null"
                      ],
                      "example": "1234"
                    }
                  }
                },
                "fte": {
                  "description": "The full time equivalent of this [Job](#tag/Jobs). Indicating the workload of an employee that can be comparable across different contexts. This is null for people without an FTE.",
                  "example": 1,
                  "oneOf": [
                    {
                      "type": "null"
                    },
                    {
                      "type": "number"
                    }
                  ]
                },
                "comments": {
                  "type": "array",
                  "description": "An array of comment objects that annotate the reason for [Job](#tag/Jobs) changes. Will be an empty array when there has been no updates to the Job.",
                  "items": {
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the Job Comment.",
                        "type": "string"
                      },
                      "date": {
                        "title": "RFC3339 datetime",
                        "example": "2015-03-01T22:30:00+00:00",
                        "description": "The date this Job Comment was created. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "description": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "description": "A further description of the Job Change Reason.",
                        "example": "Completed MBA."
                      },
                      "jobChangeReason": {
                        "type": "object",
                        "description": "The [Job Change Reason](#tag/Job-Change-Reasons) used in the system to document the reason for the change.",
                        "properties": {
                          "id": {
                            "title": "UUIDv4",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "description": "The identifier string for the [Job Change Reason](#tag/Job-Change-Reasons) to which this Job Comment belongs.",
                            "type": "string"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name given to this [Job Change Reason](#tag/Job-Change-Reasons).",
                            "example": "Promotion"
                          },
                          "link": {
                            "type": "string",
                            "title": "URL",
                            "description": "Link on the public api to get more information on this piece of data.",
                            "example": "https://api.intellihr.io/v1/job-change-reasons/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                          }
                        }
                      }
                    }
                  }
                },
                "lastestJobChangeComment": {
                  "description": "The latest comment that annotates the reason for a [Job's](#tag/Jobs) change. It will return the latest comment based on the asAt value or null if none exist.",
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "title": "UUIDv4",
                          "maxLength": 36,
                          "minLength": 36,
                          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                          "description": "The identifier string for the Job Comment.",
                          "type": "string"
                        },
                        "date": {
                          "title": "RFC3339 datetime",
                          "example": "2015-03-01T22:30:00+00:00",
                          "description": "The date this Job Comment was created. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
                          "type": [
                            "string",
                            "null"
                          ]
                        },
                        "description": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "A further description of the Job Change Reason.",
                          "example": "Completed MBA."
                        },
                        "jobChangeReason": {
                          "type": "object",
                          "description": "The [Job Change Reason](#tag/Job-Change-Reasons) used in the system to document the reason for the change.",
                          "properties": {
                            "id": {
                              "title": "UUIDv4",
                              "maxLength": 36,
                              "minLength": 36,
                              "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                              "description": "The identifier string for the [Job Change Reason](#tag/Job-Change-Reasons) to which this Job Comment belongs.",
                              "type": "string"
                            },
                            "name": {
                              "type": "string",
                              "description": "Name given to this [Job Change Reason](#tag/Job-Change-Reasons).",
                              "example": "Promotion"
                            },
                            "link": {
                              "type": "string",
                              "title": "URL",
                              "description": "Link on the public api to get more information on this piece of data.",
                              "example": "https://api.intellihr.io/v1/job-change-reasons/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "workClass": {
                  "type": "string",
                  "description": "The [Work Class](#tag/Work-Classes) of this [Job](#tag/Jobs). This is extra details about the [Work Type](#tag/Work-Types).",
                  "example": "Full-Time"
                },
                "workType": {
                  "type": "string",
                  "description": "This is the [Work Classification](#tag/Work-Types) for this [Job](#tag/Jobs), it is used to differentiate between full-time and part time employees vs unpaid volunteers. Enum: `Permanent`, `Fixed Contract`, `Unpaid`, `Temporary/Casual`, `Independent Contract`.",
                  "example": "Permanent"
                },
                "isPrimaryJob": {
                  "type": "boolean",
                  "description": "Whether this job is the primary job on the [Person](#tag/People). Only one job on a [Person](#tag/People) can be primary at a time.",
                  "default": false,
                  "example": false
                },
                "jobStatus": {
                  "type": "string",
                  "description": "The current status of this job within this organisation. Enum: `Past Job`, `Future Job`, `Ending Job`, `Current Job`.",
                  "example": "Current Job"
                },
                "createdBy": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "title": "UUIDv4",
                          "maxLength": 36,
                          "minLength": 36,
                          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                          "description": "The identifier string for the Id of this [user](#tag/Users).",
                          "type": "string"
                        },
                        "link": {
                          "type": "string",
                          "title": "URL",
                          "description": "Link on the public api to get more information on this piece of data.",
                          "example": "https://api.intellihr.io/v1/users/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The [User](#tags/users) who created this job. May be null for old [Jobs](#tags/jobs). This field will remain null for API created jobs."
                },
                "updatedBy": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "title": "UUIDv4",
                          "maxLength": 36,
                          "minLength": 36,
                          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                          "description": "The identifier string for the Id of this [user](#tag/Users).",
                          "type": "string"
                        },
                        "link": {
                          "type": "string",
                          "title": "URL",
                          "description": "Link on the public api to get more information on this piece of data.",
                          "example": "https://api.intellihr.io/v1/users/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The last [User](#tags/users) who updated this job. May be null for old [Jobs](#tags/jobs). This field will remain null if the last update was performed by the API."
                },
                "positionStartDate": {
                  "title": "RFC3339 datetime",
                  "example": "2015-03-01T22:30:00+00:00",
                  "description": "The start date of the current position the person is in. The gap between the `companyStartDate` and `positionStartDate` will be filled with \"Previous position title\" historical records, to correctly depict the person as having no information recorded for old job positions. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
                  "type": "string"
                },
                "companyStartDate": {
                  "title": "RFC3339 datetime",
                  "example": "2015-03-01T22:30:00+00:00",
                  "description": "The date this [Job](#tags/jobs) started or will start within the organisation. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                  "type": "string"
                },
                "companyEndDate": {
                  "title": "RFC3339 datetime",
                  "example": "2015-03-01T22:30:00+00:00",
                  "description": "The <b>exclusive</b> date this [Job](#tags/jobs) ended or will end within the organisation. For example, if the person's last working date is on 2025-04-23, the `companyEndDate` should be set as 2025-04-24 to reflect the exclusive date. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "isEndDateConfirmed": {
                  "type": "boolean",
                  "description": "Whether the end date has been finalised within the intelliHR application.",
                  "default": false,
                  "example": false
                },
                "turnoverType": {
                  "description": "The type of turnover this end of job is classified as.",
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": "INVOLUNTARY"
                },
                "turnoverReason": {
                  "description": "The name of the turnover reason.",
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": "Medical reasons"
                },
                "customFields": {
                  "description": "The custom field values for this Job",
                  "allOf": [
                    {
                      "$ref": "#/definitions/customFieldsResponse"
                    }
                  ]
                },
                "createdAt": {
                  "title": "RFC3339 datetime",
                  "example": "2015-03-01T22:30:00+00:00",
                  "description": "When this record was created. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                  "type": "string"
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "asAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The point in time at which the data in this response is accurate. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "pagination": {
                "type": "object",
                "description": "Contains information related to the pagination of the response",
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total items count",
                    "minimum": 0,
                    "example": 50
                  },
                  "count": {
                    "type": "integer",
                    "description": "Number of items for current page",
                    "minimum": 0,
                    "example": 10
                  },
                  "per_page": {
                    "type": "integer",
                    "description": "Items per page limit",
                    "minimum": 0,
                    "example": 10
                  },
                  "current_page": {
                    "type": "integer",
                    "description": "Current page",
                    "minimum": 1,
                    "example": 3
                  },
                  "total_pages": {
                    "type": "integer",
                    "description": "Total number of pages",
                    "minimum": 1,
                    "example": 5
                  }
                }
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          },
          "links": {
            "type": "object",
            "description": "Links to other related resources.",
            "properties": {
              "self": {
                "type": "string",
                "description": "The current page URL",
                "example": "https://api.intellihr.io/v1/jobs?limit=1&page=3"
              },
              "first": {
                "type": "string",
                "description": "The first page URL",
                "example": "https://api.intellihr.io/v1/jobs?limit=1&page=1"
              },
              "prev": {
                "type": "string",
                "description": "The previous page URL",
                "example": "https://api.intellihr.io/v1/jobs?limit=1&page=2"
              },
              "next": {
                "type": "string",
                "description": "The next page URL",
                "example": "https://api.intellihr.io/v1/jobs?limit=1&page=4"
              },
              "last": {
                "type": "string",
                "description": "The last page URL",
                "example": "https://api.intellihr.io/v1/jobs?limit=1&page=5"
              }
            }
          }
        }
      },
      "job_create_request": {
        "type": "object",
        "required": [
          "person",
          "companyStartDate",
          "name",
          "businessEntity",
          "businessUnit",
          "workClass"
        ],
        "properties": {
          "person": {
            "type": "object",
            "description": "[Person](#tag/People) to whom this [Job](#tag/Jobs) belongs. This [Person](#tags/people) is specified as a search object, which will match the person who best fits the keys for this object.\n      Multiple keys can be used together to further narrow search results (for example, if there are multiple people with the same name, email address\n      can be used as well to limit to a single person. A validation error will be thrown if this search is unable to be narrowed to a single [Person](#tags/people).",
            "example": {
              "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
              "name": "Bruce Wayne",
              "primaryEmailAddress": "bruce.wayne@example.com",
              "employeeNumber": "00001",
              "autoIncrementIntellihrId": "1000"
            },
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Person](#tags/people) to locate in the system.",
                "type": "string"
              },
              "name": {
                "type": "string",
                "description": "The name of the [Person](#tags/people) in intelliHR to search for. Note that the search accounts for differences in name order automatically."
              },
              "primaryEmailAddress": {
                "type": "string",
                "description": "The email address flagged as primary for the [Person](#tags/people) within the system."
              },
              "employeeNumber": {
                "type": "string",
                "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
              },
              "autoIncrementIntellihrId": {
                "type": "string",
                "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
              },
              "autoIncrementingIntellihrId": {
                "type": "string",
                "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                "deprecated": true
              }
            }
          },
          "companyStartDate": {
            "title": "RFC3339 datetime",
            "example": "2015-03-01T22:30:00+00:00",
            "description": "The date this [Job](#tags/jobs) started or will start within the organisation. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
            "type": "string"
          },
          "companyEndDate": {
            "title": "RFC3339 datetime",
            "example": "2015-03-01T22:30:00+00:00",
            "description": "The <b>exclusive</b> date this [Job](#tags/jobs) ended or will end within the organisation. For example, if the person's last working date is on 2025-04-23, the `companyEndDate` should be set as 2025-04-24 to reflect the exclusive date. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
            "type": "string"
          },
          "startDate": {
            "title": "RFC3339 datetime",
            "example": "2015-03-01T22:30:00+00:00",
            "description": "The date this [Job](#tags/jobs) started or will start within the organisation. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
            "type": "string",
            "deprecated": true
          },
          "endDate": {
            "title": "RFC3339 datetime",
            "example": "2015-03-01T22:30:00+00:00",
            "description": "The <b>exclusive</b> date this [Job](#tags/jobs) ended or will end within the organisation. For example, if the person's last working date is on 2025-04-23, the `endDate` should be set as 2025-04-24 to reflect the exclusive date. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
            "type": "string",
            "deprecated": true
          },
          "name": {
            "description": "The job name assigned to this [Job](#tags/jobs). Will attempt to match to an existing [Position Title](#tag/Position-Titles), otherwise creates a new [Position Title](#tag/Position-Titles).",
            "example": "Food Scientist",
            "type": "string"
          },
          "businessEntity": {
            "type": "object",
            "description": "[Business Entity](#tag/Business-Entities) to which this [Job](#tag/Jobs) belongs. This [Business Entity](#tag/Business-Entities) is specified as a search object, which will match the business entity which best fits the keys for this object. Multiple keys can be used together to further narrow search results.",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Business Entity](#tag/Business-Entities) to which this [Job](#tag/Jobs) belongs.",
                "type": "string"
              },
              "name": {
                "type": "string",
                "description": "Name given to this [Business Entity](#tag/Business-Entities). This name would normally be shown to users of the system.",
                "example": "IntelliHR"
              },
              "legalName": {
                "type": "string",
                "description": "Legal name of [Business Entity](#tag/Business-Entities). Usually used for administrative tasks.",
                "example": "IntelliHR Systems Limited"
              },
              "number": {
                "description": "Legally registered [Business Entity](#tag/Business-Entities) number, e.g. in Australia this might be the ABN, or in America the RN.",
                "example": "00 000 000 000",
                "type": "string"
              }
            }
          },
          "businessUnit": {
            "type": "object",
            "description": "[Business Unit](#tag/Business-Units) to which this [Job](#tag/Jobs) belongs. This [Business Unit](#tag/Business-Units) is specified as a search object, which will match the business unit which best fits the keys for this object. Multiple keys can be used together to further narrow search results.",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Business Unit](#tag/Business-Units) to which this [Job](#tag/Jobs) belongs.",
                "type": "string"
              },
              "name": {
                "description": "Name given to this [Business Unit](#tag/Business-Units). This name would normally be shown to users of the system.",
                "example": "Engineering",
                "type": "string"
              }
            }
          },
          "establishment": {
            "type": "object",
            "default": "{ 'name': 'No Establishment' }",
            "description": "[Establishment](#tag/Establishments) to which this [Job](#tag/Jobs) belongs. A required field if `No Establishment` has been deleted from the system. Establishment is specified as a search object, which will match the Establishment which best fits the keys for this object. Multiple keys can be used together to further narrow search results.",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Establishment](#tag/Establishments) to which this [Job](#tag/Jobs) belongs.",
                "type": "string"
              },
              "name": {
                "description": "Name given to this [Establishment](#tag/Establishments).",
                "example": "NewCo Software Engineer",
                "type": "string"
              }
            }
          },
          "supervisorPerson": {
            "type": "object",
            "description": "The [Person](#tag/People) who supervises this [Job](#tag/Jobs). This [Person](#tags/people) is specified as a search object, which will match the person who best fits the keys for this object.\n      Multiple keys can be used together to further narrow search results (for example, if there are multiple people with the same name, email address\n      can be used as well to limit to a single person. A validation error will be thrown if this search is unable to be narrowed to a single [Person](#tags/people).",
            "example": {
              "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
              "name": "Bruce Wayne",
              "primaryEmailAddress": "bruce.wayne@example.com",
              "employeeNumber": "00001",
              "autoIncrementIntellihrId": "1000"
            },
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Person](#tags/people) to locate in the system.",
                "type": "string"
              },
              "name": {
                "type": "string",
                "description": "The name of the [Person](#tags/people) in intelliHR to search for. Note that the search accounts for differences in name order automatically."
              },
              "primaryEmailAddress": {
                "type": "string",
                "description": "The email address flagged as primary for the [Person](#tags/people) within the system."
              },
              "employeeNumber": {
                "type": "string",
                "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
              },
              "autoIncrementIntellihrId": {
                "type": "string",
                "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
              },
              "autoIncrementingIntellihrId": {
                "type": "string",
                "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                "deprecated": true
              }
            }
          },
          "supervisorJob": {
            "type": "object",
            "description": "The [Job](#tag/Jobs) information for the supervisor of this [Job](#tag/Jobs) or null if they have no supervisor.",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Supervisor's Job](#tag/Job) of this [Job](#tag/Jobs).",
                "type": "string"
              },
              "name": {
                "description": "The name/position title of the [Supervisor's Job](#tag/Jobs).",
                "example": "Janitor",
                "type": "string"
              }
            }
          },
          "location": {
            "type": "object",
            "description": "[Location](#tag/Locations) to which this [Job](#tag/Jobs) belongs. This [Location](#tag/Locations) is specified as a search object, which will match the location which best fits the keys for this object. Multiple keys can be used together to further narrow search results.",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Location](#tag/Locations).",
                "type": "string"
              },
              "name": {
                "type": "string",
                "description": "Name given to this [Location](#tag/Locations). This name would normally be shown to users of the system.",
                "example": "Brisbane Office"
              },
              "address": {
                "type": "string",
                "description": "The address of this location.",
                "example": "1234 Queen Street, Brisbane City QLD 4000"
              }
            }
          },
          "workClass": {
            "type": "object",
            "description": "[Work Class](#tag/Work-Classes) to which this [Job](#tag/Jobs) belongs. This [Work Class](#tag/Work-Classes) is specified as a search object, which will match the work class which best fits the keys for this object. Multiple keys can be used together to further narrow search results.",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Work Class](#tag/Work-Classes) to which this [Job](#tag/Jobs) belongs.",
                "type": "string"
              },
              "name": {
                "type": "string",
                "description": "The name of the [Work Class](#tag/Work-Classes).",
                "example": "Casual"
              }
            }
          },
          "workType": {
            "type": "object",
            "description": "[Work Type](#tag/Work-Types) to which this [Job](#tag/Jobs) belongs. This [Work Type](#tag/Work-Types) is specified as a search object, which will match the work type which best fits the keys for this object. Multiple keys can be used together to further narrow search results.",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Work Type](#tag/Work-Types) to which this [Job](#tag/Jobs) belongs.",
                "type": "string"
              },
              "name": {
                "type": "string",
                "description": "The name of the [Work Type](#tag/Work-Types). Enum: `Permanent`, `Fixed Contract`, `Unpaid`, `Temporary/Casual`, `Independent Contract`.",
                "example": "Permanent"
              }
            }
          },
          "fte": {
            "type": "string",
            "description": "The full time equivalent of this [Job](#tag/Jobs). Indicating the workload of an employee that can be comparable across different contexts. This is null for people without an FTE.",
            "example": "1"
          },
          "payGrade": {
            "type": "object",
            "default": "{ 'name': 'No Pay Grade' }",
            "description": "[Pay Grade](#tag/Pay-Grades) to which this [Job](#tag/Jobs) belongs. This [Pay Grade](#tag/Pay-Grades) is specified as a search object, which will match the pay grade which best fits the keys for this object.\n         Multiple keys can be used together to further narrow search results.",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Pay Grade](#tag/Pay-Grades).",
                "type": "string"
              },
              "code": {
                "description": "Administrative, short code associated to the [Pay Grade](#tag/Pay-Grades).",
                "example": "L0",
                "type": "string"
              },
              "name": {
                "description": "User friendly name given to the [Pay Grade](#tag/Pay-Grades).",
                "example": "Founder",
                "type": "string"
              }
            }
          },
          "employmentCondition": {
            "type": "object",
            "default": "{ 'name': 'No Employment Condition' }",
            "description": "The [Employment Condition](#tag/Employment-Conditions) this job is being paid under.\n         This [Employment Condition](#tag/Employment-Conditions) is specified as a search object, which will match the employment condition which best fits the keys for this object. Multiple keys can be used together to further narrow search results.",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Employment Condition](#tag/Employment-Conditions) of this Remuneration Schedule.",
                "type": "string"
              },
              "name": {
                "description": "Name given to this [Employment Condition](#tag/Employment-Conditions).",
                "example": "Professional Employees Award 2010",
                "type": "string"
              },
              "awardName": {
                "description": "Award name can be different from the name presented to a user. Usually used for the legal name of the award.",
                "example": "MA000065: Professional Employees Award 2010 - Fair Work Commission",
                "type": "string"
              }
            }
          },
          "remunerationSchedule": {
            "type": "object",
            "description": "remuneration schedule",
            "required": [
              "payCycle",
              "hoursPerCycle"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "The method in which this remuneration schedule is paid. Enum: `Annual Salary`, `Hourly Rate`, `No Remuneration Schedule`.",
                "example": "Annual Salary",
                "default": "No Remuneration Schedule"
              },
              "payCycle": {
                "description": "The cycle that the job is paid on. Enum: `Weekly`, `Fortnightly`, `Monthly`, `Bi-Monthly`.",
                "example": "Fortnightly",
                "type": "string"
              },
              "currency": {
                "title": "Currency code",
                "description": "The currency that the base and total amounts that this job is being paid in. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                "example": "AUD",
                "pattern": "^[A-Z]{3}$",
                "type": "string"
              },
              "employmentCondition": {
                "type": "object",
                "deprecated": true,
                "default": "{ 'name': 'No Employment Condition' }",
                "description": "The [Employment Condition](#tag/Employment-Conditions) this job is being paid under.\n            This [Employment Condition](#tag/Employment-Conditions) is specified as a search object, which will match the employment condition which best fits the keys for this object. Multiple keys can be used together to further narrow search results.\n            **Deprecated** Please use the job-level employmentCondition field instead.",
                "properties": {
                  "id": {
                    "title": "UUIDv4",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "description": "The identifier string for the [Employment Condition](#tag/Employment-Conditions) of this Remuneration Schedule.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name given to this [Employment Condition](#tag/Employment-Conditions).",
                    "example": "Professional Employees Award 2010",
                    "type": "string"
                  },
                  "awardName": {
                    "description": "Award name can be different from the name presented to a user. Usually used for the legal name of the award.",
                    "example": "MA000065: Professional Employees Award 2010 - Fair Work Commission",
                    "type": "string"
                  }
                }
              },
              "hoursPerCycle": {
                "description": "How many hours worked per payCycle. \n\n Setting hours to 0 (zero) signifies that the hours are variable per pay cycle",
                "example": 80,
                "type": "number"
              },
              "baseAnnualSalary": {
                "description": "The Base Salary paid yearly, this is only required if the Remuneration Schedule Type is \"Annual Salary\". Any number exceeding 8 decimal places will be rounded up.",
                "example": 50000,
                "type": "number"
              },
              "baseHourlyRate": {
                "description": "The Base Rate paid hourly, this is only required if the Remuneration Schedule Type is \"Hourly Rate\". Any number exceeding 8 decimal places will be rounded up.",
                "example": 24,
                "type": "number"
              },
              "additions": {
                "type": "array",
                "description": "An array of Additions for the base salary.",
                "items": {
                  "required": [
                    "name",
                    "type",
                    "value"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of this Addition."
                    },
                    "type": {
                      "type": "string",
                      "description": "How this addition is calculated and applied to the base amount, MultipleOfBase is multiplied by baseAnnualSalary and then added to the total while FixedAmount is added directly to the total. Enum: `MultipleOfBase`, `FixedAmount`."
                    },
                    "value": {
                      "description": "For MultipleOfBase this is the multiplier (e.g. 9 = 9%) while for fixed amount this is the amount to directly add to the total. Any number exceeding 8 decimal places will be rounded up.",
                      "type": "string"
                    },
                    "currency": {
                      "title": "Currency code",
                      "description": "The currency used for this Addition. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                      "example": "AUD",
                      "pattern": "^[A-Z]{3}$",
                      "type": "string"
                    },
                    "defaultRemunerationComponent": {
                      "type": "object",
                      "description": "The default remuneration component this addition is based on. This is specified as a search object, which will match the remuneration component which best fits the keys for this object. Multiple keys can be used together to further narrow search results.",
                      "properties": {
                        "id": {
                          "title": "UUIDv4",
                          "maxLength": 36,
                          "minLength": 36,
                          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                          "description": "The identifier string for the default remuneration component.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the default remuneration component.",
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": [
                  {
                    "name": "Referral Bonus",
                    "type": "FixedAmount",
                    "value": "200",
                    "defaultRemunerationComponent": {
                      "name": "Referral Bonus"
                    }
                  }
                ]
              },
              "additionsToTotal": {
                "type": "array",
                "description": "an array of Additions for the total salary.",
                "items": {
                  "required": [
                    "name",
                    "type",
                    "value",
                    "defaultRemunerationComponent"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of this Addition."
                    },
                    "type": {
                      "type": "string",
                      "description": "How this addition is calculated and applied to the base amount, MultipleOfBase is multiplied by baseAnnualSalary and then added to the total while FixedAmount is added directly to the total. Enum: `MultipleOfBase`, `FixedAmount`."
                    },
                    "value": {
                      "description": "For MultipleOfBase this is the multiplier (e.g. 9 = 9%) while for fixed amount this is the amount to directly add to the total.  Any number exceeding 8 decimal places will be rounded up.",
                      "type": "string"
                    },
                    "currency": {
                      "title": "Currency code",
                      "description": "The currency used for this Addition. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                      "example": "AUD",
                      "pattern": "^[A-Z]{3}$",
                      "type": "string"
                    },
                    "defaultRemunerationComponent": {
                      "type": "object",
                      "description": "The default remuneration component this addition is based on. This is specified as a search object, which will match the remuneration component which best fits the keys for this object. Multiple keys can be used together to further narrow search results.",
                      "properties": {
                        "id": {
                          "title": "UUIDv4",
                          "maxLength": 36,
                          "minLength": 36,
                          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                          "description": "The identifier string for the default remuneration component.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the default remuneration component.",
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": [
                  {
                    "name": "Superannuation",
                    "type": "MultipleOfBase",
                    "value": "9.5",
                    "defaultRemunerationComponent": {
                      "name": "Superannuation"
                    }
                  }
                ]
              },
              "breakdowns": {
                "type": "array",
                "description": "an array of Breakdowns.",
                "items": {
                  "required": [
                    "name",
                    "type",
                    "value"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of this Breakdowns."
                    },
                    "type": {
                      "type": "string",
                      "description": "How this breakdown is calculated and applied to the base amount, MultipleOfBase is multiplied by baseAnnualSalary and then added to the total while FixedAmount is added directly to the total. Enum: `MultipleOfBase`, `FixedAmount`."
                    },
                    "value": {
                      "description": "For MultipleOfBase this is the multiplier (e.g. 9 = 9%) while for fixed amount this is the amount to directly add to the total.",
                      "type": "string"
                    },
                    "currency": {
                      "title": "Currency code",
                      "description": "The currency used for this breakdown. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                      "example": "AUD",
                      "pattern": "^[A-Z]{3}$",
                      "type": "string"
                    },
                    "defaultRemunerationComponent": {
                      "type": "object",
                      "description": "The default remuneration component this breakdown is based on. This is specified as a search object, which will match the remuneration component which best fits the keys for this object. Multiple keys can be used together to further narrow search results.",
                      "properties": {
                        "id": {
                          "title": "UUIDv4",
                          "maxLength": 36,
                          "minLength": 36,
                          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                          "description": "The identifier string for the default remuneration component.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the default remuneration component.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "customFields": {
                "description": "The custom field values for this Remuneration Schedule",
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "description": "Custom fields will be keyed by their api_name. Custom fields are not required, and any existing model defined custom fields will default to having null values.",
                  "properties": {
                    "value": {
                      "description": "The value for this custom field. This value structure will depend upon the type of the custom field.",
                      "anyOf": [
                        {
                          "type": "null",
                          "description": "The value will be null when a custom field is not provided or is empty for a record. Null can be provided to delete a custom field value."
                        },
                        {
                          "type": "string",
                          "description": "For TEXT and NUMBER records, the value is stored as a string with the value of the record."
                        },
                        {
                          "type": "object",
                          "properties": {
                            "label": {
                              "type": "string",
                              "description": "For SINGLE_SELECT records, the value is stored as an object with the label of the dropdown option. NOTE: Only the label needs to be provided. `id` is not required."
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "labels": {
                              "type": "array",
                              "minItems": 1,
                              "description": "For MULTI_SELECT records, the value is stored as an object with an array of labels for all selected options. NOTE: Only the labels need to be provided. `ids` is not required.",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "person": {
                                "type": "object",
                                "description": "For PEOPLE_DROPDOWN records, the value is an object with an array of the [Person](#tag/People) search object and their [Job](#tag/Jobs) search object. This [Person](#tags/people) is specified as a search object, which will match the person who best fits the keys for this object.\n      Multiple keys can be used together to further narrow search results (for example, if there are multiple people with the same name, email address\n      can be used as well to limit to a single person. A validation error will be thrown if this search is unable to be narrowed to a single [Person](#tags/people).",
                                "example": {
                                  "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                  "name": "Bruce Wayne",
                                  "primaryEmailAddress": "bruce.wayne@example.com",
                                  "employeeNumber": "00001",
                                  "autoIncrementIntellihrId": "1000"
                                },
                                "properties": {
                                  "id": {
                                    "title": "UUIDv4",
                                    "maxLength": 36,
                                    "minLength": 36,
                                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                    "description": "The identifier string for the [Person](#tags/people) to locate in the system.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the [Person](#tags/people) in intelliHR to search for. Note that the search accounts for differences in name order automatically."
                                  },
                                  "primaryEmailAddress": {
                                    "type": "string",
                                    "description": "The email address flagged as primary for the [Person](#tags/people) within the system."
                                  },
                                  "employeeNumber": {
                                    "type": "string",
                                    "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
                                  },
                                  "autoIncrementIntellihrId": {
                                    "type": "string",
                                    "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
                                  },
                                  "autoIncrementingIntellihrId": {
                                    "type": "string",
                                    "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                                    "deprecated": true
                                  }
                                }
                              },
                              "job": {
                                "type": "object",
                                "description": "The [Job](#tag/Jobs) information of the [Person](#tag/People) is mandatory if the target PEOPLE_DROPDOWN custom field allows selecting individual jobs. If not, The [Job](#tag/Jobs) information is not mandatory.",
                                "properties": {
                                  "id": {
                                    "title": "UUIDv4",
                                    "maxLength": 36,
                                    "minLength": 36,
                                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                    "description": "The identifier string for the [Job](#tag/Job) of this [Job](#tag/Jobs).",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "The name/position title of the [Job](#tag/Jobs).",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                "example": {
                  "text_field_api_name": {
                    "value": "Some text value"
                  },
                  "numeric_field_api_name": {
                    "value": "50"
                  },
                  "single_select_api_name": {
                    "value": {
                      "label": "Drama"
                    }
                  },
                  "multi_select_api_name": {
                    "value": {
                      "labels": [
                        "Bananas",
                        "Apples"
                      ]
                    }
                  },
                  "people_dropdown_api_name": {
                    "value": [
                      {
                        "person": {
                          "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                          "name": "Bruce Wayne",
                          "primaryEmailAddress": "bruce.wayne@example.com",
                          "employeeNumber": "00001",
                          "autoIncrementIntellihrId": "1000"
                        },
                        "job": {
                          "id": "569904c8-5d36-4c2f-afb0-525eeb8da32d",
                          "name": "Maintenance worker"
                        }
                      },
                      {
                        "person": {
                          "id": "313fde44-f24e-4ec9-9473-0d0f3527222d",
                          "name": "Batman",
                          "primaryEmailAddress": "batman@example.com",
                          "employeeNumber": "00002",
                          "autoIncrementIntellihrId": "1001"
                        },
                        "job": {
                          "id": "653304c8-5d36-4c2f-afb0-525eeb8da32d",
                          "name": "Janitor"
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "recruitment": {
            "type": "object",
            "description": "The recruitment details for this [Job](#tag/Jobs).",
            "properties": {
              "source": {
                "type": "object",
                "description": "[Recruitment Source](#tag/Recruitment-Sources) to which this [Job](#tag/Jobs) belongs. This [Recruitment Source](#tag/Recruitment-Sources) is specified as a search object, which will match the recruitment source which best fits the keys for this object. Multiple keys can be used together to further narrow search results.",
                "properties": {
                  "id": {
                    "title": "UUIDv4",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "description": "The identifier string for the [Recruitment Source](#tag/Recruitment-Sources).",
                    "type": "string"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name given to this recruitment source.",
                    "example": "Direct"
                  }
                }
              },
              "cost": {
                "type": "number",
                "description": "The cost of the recruitment. Any number exceeding 8 decimal places will be rounded up.",
                "example": 5000
              },
              "currency": {
                "title": "Currency code",
                "description": "The currency used to recruit this [Job](#tag/Jobs). An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                "example": "AUD",
                "pattern": "^[A-Z]{3}$",
                "type": "string"
              }
            }
          },
          "customFields": {
            "description": "The custom field values for this Job",
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Custom fields will be keyed by their api_name. Custom fields are not required, and any existing model defined custom fields will default to having null values.",
              "properties": {
                "value": {
                  "description": "The value for this custom field. This value structure will depend upon the type of the custom field.",
                  "anyOf": [
                    {
                      "type": "null",
                      "description": "The value will be null when a custom field is not provided or is empty for a record. Null can be provided to delete a custom field value."
                    },
                    {
                      "type": "string",
                      "description": "For TEXT and NUMBER records, the value is stored as a string with the value of the record."
                    },
                    {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string",
                          "description": "For SINGLE_SELECT records, the value is stored as an object with the label of the dropdown option. NOTE: Only the label needs to be provided. `id` is not required."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "labels": {
                          "type": "array",
                          "minItems": 1,
                          "description": "For MULTI_SELECT records, the value is stored as an object with an array of labels for all selected options. NOTE: Only the labels need to be provided. `ids` is not required.",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "person": {
                            "type": "object",
                            "description": "For PEOPLE_DROPDOWN records, the value is an object with an array of the [Person](#tag/People) search object and their [Job](#tag/Jobs) search object. This [Person](#tags/people) is specified as a search object, which will match the person who best fits the keys for this object.\n      Multiple keys can be used together to further narrow search results (for example, if there are multiple people with the same name, email address\n      can be used as well to limit to a single person. A validation error will be thrown if this search is unable to be narrowed to a single [Person](#tags/people).",
                            "example": {
                              "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                              "name": "Bruce Wayne",
                              "primaryEmailAddress": "bruce.wayne@example.com",
                              "employeeNumber": "00001",
                              "autoIncrementIntellihrId": "1000"
                            },
                            "properties": {
                              "id": {
                                "title": "UUIDv4",
                                "maxLength": 36,
                                "minLength": 36,
                                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                "description": "The identifier string for the [Person](#tags/people) to locate in the system.",
                                "type": "string"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the [Person](#tags/people) in intelliHR to search for. Note that the search accounts for differences in name order automatically."
                              },
                              "primaryEmailAddress": {
                                "type": "string",
                                "description": "The email address flagged as primary for the [Person](#tags/people) within the system."
                              },
                              "employeeNumber": {
                                "type": "string",
                                "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
                              },
                              "autoIncrementIntellihrId": {
                                "type": "string",
                                "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
                              },
                              "autoIncrementingIntellihrId": {
                                "type": "string",
                                "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                                "deprecated": true
                              }
                            }
                          },
                          "job": {
                            "type": "object",
                            "description": "The [Job](#tag/Jobs) information of the [Person](#tag/People) is mandatory if the target PEOPLE_DROPDOWN custom field allows selecting individual jobs. If not, The [Job](#tag/Jobs) information is not mandatory.",
                            "properties": {
                              "id": {
                                "title": "UUIDv4",
                                "maxLength": 36,
                                "minLength": 36,
                                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                "description": "The identifier string for the [Job](#tag/Job) of this [Job](#tag/Jobs).",
                                "type": "string"
                              },
                              "name": {
                                "description": "The name/position title of the [Job](#tag/Jobs).",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            },
            "example": {
              "text_field_api_name": {
                "value": "Some text value"
              },
              "numeric_field_api_name": {
                "value": "50"
              },
              "single_select_api_name": {
                "value": {
                  "label": "Drama"
                }
              },
              "multi_select_api_name": {
                "value": {
                  "labels": [
                    "Bananas",
                    "Apples"
                  ]
                }
              },
              "people_dropdown_api_name": {
                "value": [
                  {
                    "person": {
                      "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "name": "Bruce Wayne",
                      "primaryEmailAddress": "bruce.wayne@example.com",
                      "employeeNumber": "00001",
                      "autoIncrementIntellihrId": "1000"
                    },
                    "job": {
                      "id": "569904c8-5d36-4c2f-afb0-525eeb8da32d",
                      "name": "Maintenance worker"
                    }
                  },
                  {
                    "person": {
                      "id": "313fde44-f24e-4ec9-9473-0d0f3527222d",
                      "name": "Batman",
                      "primaryEmailAddress": "batman@example.com",
                      "employeeNumber": "00002",
                      "autoIncrementIntellihrId": "1001"
                    },
                    "job": {
                      "id": "653304c8-5d36-4c2f-afb0-525eeb8da32d",
                      "name": "Janitor"
                    }
                  }
                ]
              }
            }
          }
        }
      },
      "job_create_response": {
        "type": "object",
        "title": "Single Job",
        "properties": {
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "asAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The point in time for which this response is for. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "workflowEvent": {
                "type": "string",
                "description": "A link to fetch all [Workflows](#tags/workflows) that belong under the Workflow Event for this Job creation.",
                "example": "https://api.intellihr.io/v1/workflow-events/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
              },
              "workflowEventId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Workflow Event](#tags/workflow-events).",
                "type": "string"
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          },
          "data": {
            "type": "object",
            "title": "Job",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Job](#tag/Jobs).",
                "type": "string"
              },
              "person": {
                "type": "object",
                "description": "The [Person](#tag/People) to whom this [Job](#tag/Jobs) belongs.",
                "properties": {
                  "id": {
                    "title": "UUIDv4",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "description": "The identifier string for the [Person](#tag/People) to whom this [Job](#tag/Jobs) belongs.",
                    "type": "string"
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Name to display throughout the system for this [Person](#tags/people). Generally follows the pattern preferredName (firstName) lastName, but can be configured on a tenant-wide basis to be a different format.",
                    "example": "Batman (Bruce) Wayne"
                  },
                  "employeeNumber": {
                    "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                    "example": "00001",
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "autoIncrementIntellihrId": {
                    "type": "number",
                    "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                    "example": 1000
                  },
                  "link": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/people/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              },
              "recruitment": {
                "type": "object",
                "description": "The recruitment details stored for this [Job](#tag/Jobs).",
                "properties": {
                  "cost": {
                    "description": "The cost to recruit this [Job](#tag/Jobs). If it is null the cost has not been recorded.",
                    "oneOf": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "example": 500
                  },
                  "currency": {
                    "title": "Currency code",
                    "description": "The currency used to recruit this [Job](#tag/Jobs). An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                    "example": "AUD",
                    "pattern": "^[A-Z]{3}$",
                    "type": "string"
                  },
                  "source": {
                    "description": "The [Recruitment Source](#tag/Recruitment-Sources) this job was sourced from or null if it was not recorded.",
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "UUIDv4",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "description": "The identifier string for the [Recruitment Source](#tag/Recruitment-Sources) of this [Job](#tag/Jobs).",
                            "type": "string"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name given to this [Recruitment Source](#tag/Recruitment-Sources).",
                            "example": "Unknown"
                          },
                          "link": {
                            "type": "string",
                            "title": "URL",
                            "description": "Link on the public api to get more information on this piece of data.",
                            "example": "https://api.intellihr.io/v1/recruitment-sources/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                          }
                        }
                      },
                      {
                        "type": "null"
                      }
                    ]
                  }
                }
              },
              "extendedLeave": {
                "description": "If this job has active extended leave, this will be populated, otherwise it will be null",
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "startDate": {
                        "title": "RFC3339 datetime",
                        "example": "2015-03-01T22:30:00+00:00",
                        "description": "The start date of the attribute, or null for start of job. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "endDate": {
                        "title": "RFC3339 datetime",
                        "example": "2015-03-01T22:30:00+00:00",
                        "description": "The end date of the attribute, or null for end of job/time. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "isEndDateConfirmed": {
                        "description": "If the end date is the expected or actual return date",
                        "example": true,
                        "type": "boolean"
                      },
                      "type": {
                        "description": "The [Extended Leave Type](#tag/extended-leave-types) for this leave record, or null if the person was not on leave for these dates",
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "title": "UUIDv4",
                                "maxLength": 36,
                                "minLength": 36,
                                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                "description": "The identifier string for the [Extended Leave Type](#tag/extended-leave-types) of this [Job](#tag/Jobs).",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name given to this [Extended Leave Type](#tag/extended-leave-types). This name would normally be shown to users of the system.",
                                "example": "Annual",
                                "type": "string"
                              },
                              "link": {
                                "type": "string",
                                "title": "URL",
                                "description": "Link on the public api to get more information on this piece of data.",
                                "example": "https://api.intellihr.io/v1/extended-leave-types/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                              }
                            }
                          },
                          {
                            "type": "null"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "location": {
                "type": "object",
                "description": "The geographical location of this [Job](#tag/Jobs).",
                "properties": {
                  "id": {
                    "title": "UUIDv4",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "description": "The identifier string for the [Location](tag/Locations) of this [Job](#tag/Jobs).",
                    "type": "string"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name given to this [Location](#tag/Locations). This name would normally be shown to users of the system.",
                    "example": "Brisbane Office"
                  },
                  "address": {
                    "type": "string",
                    "description": "The address of this location.",
                    "example": "1234 Queen Street, Brisbane City QLD 4000"
                  },
                  "code": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Code given to this [Location](#tag/Locations).",
                    "example": "BE001"
                  },
                  "customFields": {
                    "description": "The custom field values for this [Location](#tag/Locations)",
                    "allOf": [
                      {
                        "$ref": "#/definitions/customFieldsResponse"
                      }
                    ]
                  },
                  "link": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/locations/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              },
              "payGrade": {
                "type": "object",
                "description": "The [Job's](#tag/Jobs) current [Pay Grade](#tag/Pay-Grades) in the system.",
                "properties": {
                  "id": {
                    "title": "UUIDv4",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "description": "The identifier string for the [Pay Grade](#tag/Pay-Grades) of this [Job](#tag/Jobs).",
                    "type": "string"
                  },
                  "name": {
                    "description": "User friendly name given to the [Pay Grade](#tag/Pay-Grades).",
                    "example": "Founder",
                    "type": "string"
                  },
                  "code": {
                    "description": "Administrative, short code associated to the [Pay Grade](#tag/Pay-Grades).",
                    "default": "N/A",
                    "example": "L0",
                    "type": "string"
                  },
                  "payStep": {
                    "oneOf": [
                      {
                        "type": "object",
                        "default": null,
                        "description": "The pay step within this paygrade that applies to the employee",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "User friendly name for this pay step."
                          },
                          "id": {
                            "title": "UUIDv4",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "description": "The identifier string for the Unique identifier for this pay step.",
                            "type": "string"
                          },
                          "annualSalary": {
                            "oneOf": [
                              {
                                "type": "number",
                                "description": "The annual salary this pay step represents."
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "annualSalaryCurrency": {
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "code": {
                                    "type": "string"
                                  },
                                  "symbol": {
                                    "type": "string"
                                  }
                                },
                                "description": "The currency the annual salary is recorded within."
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "permanentHourlyRate": {
                            "oneOf": [
                              {
                                "type": "number",
                                "description": "The permanent hourly rate this pay step represents."
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "permanentHourlyRateCurrency": {
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "code": {
                                    "type": "string"
                                  },
                                  "symbol": {
                                    "type": "string"
                                  }
                                },
                                "description": "The currency the permanent hourly rate is recorded within."
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "casualHourlyRate": {
                            "oneOf": [
                              {
                                "type": "number",
                                "description": "The casual hourly rate this pay step represents."
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "casualHourlyRateCurrency": {
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "code": {
                                    "type": "string"
                                  },
                                  "symbol": {
                                    "type": "string"
                                  }
                                },
                                "description": "The currency the casual hourly rate is recorded within."
                              },
                              {
                                "type": "null"
                              }
                            ]
                          }
                        }
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "link": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/pay-grades/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              },
              "businessUnit": {
                "type": "object",
                "description": "The [Job's](#tag/Jobs) current [Business Unit](#tag/Business-Units) in the system.",
                "properties": {
                  "id": {
                    "title": "UUIDv4",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "description": "The identifier string for the [Business Unit](#tag/Business-Units) of this [Job](#tag/Jobs).",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name given to this [Business Unit](#tag/Business-Units). This name would normally be shown to users of the system.",
                    "example": "Engineering",
                    "type": "string"
                  },
                  "code": {
                    "description": "Code given to this [Business Unit](#tag/Business-Units).",
                    "example": "BE001",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "link": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/business-units/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  },
                  "customFields": {
                    "description": "The custom field values for this Business Unit",
                    "allOf": [
                      {
                        "$ref": "#/definitions/customFieldsResponse"
                      }
                    ]
                  }
                }
              },
              "businessEntity": {
                "type": "object",
                "description": "The [Job's](#tag/Jobs) current [Business Entity](#tag/Business-Entities) in the system.",
                "properties": {
                  "id": {
                    "title": "UUIDv4",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "description": "The identifier string for the [Business Entity](#tag/Business-Entities) of this [Job](#tag/Jobs).",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name given to this [Business Entity](#tag/Business-Entities). This name would normally be shown to users of the system.",
                    "example": "IntelliHR",
                    "type": "string"
                  },
                  "code": {
                    "description": "Code given to this [Business Entity](#tag/Business-Entities).",
                    "example": "BE001",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "link": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/business-entities/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  },
                  "customFields": {
                    "description": "The custom field values for this Business Unit",
                    "allOf": [
                      {
                        "$ref": "#/definitions/customFieldsResponse"
                      }
                    ]
                  }
                }
              },
              "establishment": {
                "description": "The [Job's](#tag/Jobs) current [Establishment](#tag/Establishments) in the system.",
                "type": "object",
                "properties": {
                  "id": {
                    "title": "UUIDv4",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "description": "The identifier string for the [Establishment](#tag/Establishments) of this [Job](#tag/Jobs).",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name given to this [Establishment](#tag/Establishments).",
                    "example": "NewCo Engineering Manager",
                    "type": "string"
                  },
                  "link": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/establishments/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              },
              "supervisorJob": {
                "description": "The [Job](#tag/Jobs) information for the supervisor of this [Job](#tag/Jobs) or null if they have no supervisor.",
                "oneOf": [
                  {
                    "type": "null"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the [Supervisor's Job](#tag/Job) of this [Job](#tag/Jobs).",
                        "type": "string"
                      },
                      "jobStatus": {
                        "type": "string",
                        "description": "The current status of this job within this organisation. Enum: `Past Job`, `Future Job`, `Ending Job`, `Current Job`.",
                        "example": "Current Job"
                      },
                      "name": {
                        "description": "The name of the [Supervisor's Job](#tag/Jobs).",
                        "example": "Janitor",
                        "type": "string"
                      },
                      "positionTitle": {
                        "type": "object",
                        "description": "Position Title that exist within the organisation. Position Title are assigned to [Jobs](#tag/jobs).",
                        "properties": {
                          "id": {
                            "title": "UUIDv4",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "description": "The identifier string for the [Position Title](#tag/Position-Titles) of this [Job](#tag/Jobs).",
                            "type": "string"
                          },
                          "name": {
                            "description": "A name given to this [Position Title](#tag/Position-Titles)",
                            "type": "string",
                            "example": "Janitor"
                          },
                          "code": {
                            "description": "An optional code that relates to this [Position Title](#tag/Position-Titles)",
                            "type": [
                              "string",
                              "null"
                            ],
                            "example": "1234"
                          }
                        }
                      },
                      "link": {
                        "type": "string",
                        "title": "URL",
                        "description": "Link on the public api to get more information on this piece of data.",
                        "example": "https://api.intellihr.io/v1/jobs/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                      }
                    }
                  }
                ]
              },
              "supervisorPerson": {
                "description": "The [Person](#tag/People) information for the supervisor of this job or null if they have no supervisor.",
                "oneOf": [
                  {
                    "type": "null"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the [Supervisor's Person](#tag/People) of this [Job](#tag/Jobs).",
                        "type": "string"
                      },
                      "displayName": {
                        "type": "string",
                        "description": "Name to display throughout the system for this [Person](#tags/people). Generally follows the pattern preferredName (firstName) lastName, but can be configured on a tenant-wide basis to be a different format.",
                        "example": "Batman (Bruce) Wayne"
                      },
                      "employeeNumber": {
                        "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                        "example": "00001",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "autoIncrementIntellihrId": {
                        "type": "number",
                        "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                        "example": 1000
                      },
                      "link": {
                        "type": "string",
                        "title": "URL",
                        "description": "Link on the public api to get more information on this piece of data.",
                        "example": "https://api.intellihr.io/v1/people/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                      }
                    }
                  }
                ]
              },
              "employmentCondition": {
                "description": "An instance of the [Employment Condition](#tag/Employment-Conditions) that is attached to the job, contains the dates it is effective for.",
                "oneOf": [
                  {
                    "type": "null",
                    "description": "An [Employment Condition](#tag/Employment-Conditions) is not set"
                  },
                  {
                    "type": "object",
                    "description": "The [Employment Condition](#tag/Employment-Conditions) this job is being paid under.",
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the [Employment Condition](#tag/Employment-Conditions) of this Remuneration Schedule.",
                        "type": "string"
                      },
                      "startDate": {
                        "title": "RFC3339 datetime",
                        "example": "2015-03-01T22:30:00+00:00",
                        "description": "The start date of the attribute, or null for start of job. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "endDate": {
                        "title": "RFC3339 datetime",
                        "example": "2015-03-01T22:30:00+00:00",
                        "description": "The end date of the attribute, or null for end of job/time. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "name": {
                        "description": "Name given to this [Employment Condition](#tag/Employment-Conditions). This name would normally be shown to users of the system.",
                        "example": "Professional Employees Award 2010",
                        "type": "string"
                      },
                      "awardName": {
                        "description": "Award name can be different from the name presented to a user. Usually used for the legal name of the award.",
                        "example": "MA000065: Professional Employees Award 2010 - Fair Work Commission",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "link": {
                        "type": "string",
                        "title": "URL",
                        "description": "Link on the public api to get more information on this piece of data.",
                        "example": "https://api.intellihr.io/v1/employment-conditions/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                      }
                    }
                  }
                ]
              },
              "remunerationSchedule": {
                "type": "object",
                "description": "The current remuneration details for this [Job](#tags/Jobs), including information such as salary and hourly pay, all [Jobs](#tags/Jobs) have a remuneration schedule but for unpaid employees they will have a special `No Remuneration Schedule` schedule.",
                "properties": {
                  "type": {
                    "description": "The method in which this remuneration schedule is paid, if a person is unpaid then this will be `No Remuneration Schedule`. Enum: `Annual Salary`, `Hourly Rate`, `No Remuneration Schedule`.",
                    "type": "string"
                  },
                  "baseAnnualSalary": {
                    "description": "The Base Salary paid yearly, this is an approximation if they are paid hourly. Note that if both baseAnnualSalary and baseHourlyRate are provided in a create or patch request, the baseHourlyRate will be ignored.",
                    "example": 50000,
                    "type": "number"
                  },
                  "baseHourlyRate": {
                    "description": "The Base Rate paid hourly, this is an approximation if they are paid annually. Note that if both baseAnnualSalary and baseHourlyRate are provided in a create or patch request, the baseHourlyRate will be ignored.",
                    "example": 24,
                    "type": "number"
                  },
                  "currency": {
                    "title": "Currency code",
                    "description": "The currency that the base and total amounts that this job is being paid in. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                    "example": "AUD",
                    "pattern": "^[A-Z]{3}$",
                    "type": "string"
                  },
                  "hoursPerCycle": {
                    "description": "How many hours worked per payCycle. \n\n 0 (zero) signifies that the hours are variable per pay cycle",
                    "example": 80,
                    "type": "number"
                  },
                  "payCycle": {
                    "description": "The cycle that the job is paid on. Enum: `Weekly`, `Fortnightly`, `Monthly`, `Bi-Monthly`.",
                    "example": "Fortnightly",
                    "type": "string"
                  },
                  "annualPackage": {
                    "description": "The total package paid yearly including additions and deductions. This amount is calculated by adding the Base Annual Salary and additions minus the deductions.",
                    "example": 60000,
                    "type": "number"
                  },
                  "hourlyPackage": {
                    "description": "The total package paid hourly including additions and deductions. This amount is calculated by dividing the Annual Package by the total number of hours per annum.",
                    "example": 28,
                    "type": "number"
                  },
                  "currencyConversionOccurred": {
                    "description": "If any conversion had to be performed between addition and deduction currencies when calculating the annual package.",
                    "example": true,
                    "type": "boolean"
                  },
                  "employmentCondition": {
                    "type": "object",
                    "description": "The [Employment Condition](#tag/Employment-Conditions) this job is being paid under. **Deprecated** Please use the job-level employmentCondition field instead.",
                    "deprecated": true,
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the [Employment Condition](#tag/Employment-Conditions) of this Remuneration Schedule.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name given to this [Employment Condition](#tag/Employment-Conditions). This name would normally be shown to users of the system.",
                        "example": "Professional Employees Award 2010",
                        "type": "string"
                      },
                      "awardName": {
                        "description": "Award name can be different from the name presented to a user. Usually used for the legal name of the award.",
                        "example": "MA000065: Professional Employees Award 2010 - Fair Work Commission",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "link": {
                        "type": "string",
                        "title": "URL",
                        "description": "Link on the public api to get more information on this piece of data.",
                        "example": "https://api.intellihr.io/v1/employment-conditions/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                      }
                    }
                  },
                  "additions": {
                    "type": "array",
                    "description": "An array of Additions for this Remuneration Schedule.",
                    "items": {
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of this Addition.",
                          "example": "Superannuation"
                        },
                        "type": {
                          "type": "string",
                          "description": "How this addition is calculated and applied to the base amount, multipleOfBase is multiplied by baseAnnualSalary and then added to the total while fixed amount is added directly to the total. Enum: `MultipleOfBase`, `FixedAmount`."
                        },
                        "value": {
                          "description": "For multipleOfBase this is the multiplier (e.g. 9 = 9%) while for fixed amount this is the amount to directly add to the total.",
                          "example": 9.5,
                          "type": "number"
                        },
                        "currency": {
                          "title": "Currency code",
                          "description": "The currency used for this Addition. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                          "example": "AUD",
                          "pattern": "^[A-Z]{3}$",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "deductions": {
                    "type": "array",
                    "description": "An array of Deductions for this Remuneration Schedule. Note that this deductions value has been deprecated, you should now use `breakdowns`",
                    "deprecated": true,
                    "items": {
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of this Deduction.",
                          "example": "salary sacrifice"
                        },
                        "type": {
                          "type": "string",
                          "description": "How this deduction is calculated and applied to the base amount, multipleOfBase is multiplied by baseAnnualSalary and then deducted from the total while fixed amount is deducted directly from the total. Enum: `MultipleOfBase`, `FixedAmount`."
                        },
                        "value": {
                          "description": "For multipleOfBase this is the multiplier while for fixed amount this is the amount to directly deduct from the total.",
                          "example": 5000,
                          "type": "number"
                        },
                        "currency": {
                          "title": "Currency code",
                          "description": "The currency used for this Deduction. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                          "example": "AUD",
                          "pattern": "^[A-Z]{3}$",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "additionsToTotal": {
                    "type": "array",
                    "description": "An array of Additions applied to the package after all other components for this Remuneration Schedule.",
                    "items": {
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of this Total Addition.",
                          "example": "Superannuation"
                        },
                        "type": {
                          "type": "string",
                          "description": "How this total addition is calculated and applied to the base amount, multipleOfBase is multiplied by baseAnnualSalary and then added to the total while fixed amount is added directly to the total. Enum: `MultipleOfBase`, `FixedAmount`."
                        },
                        "value": {
                          "description": "For multipleOfBase this is the multiplier (e.g. 9 = 9%) while for fixed amount this is the amount to directly add to the total.",
                          "example": 9.5,
                          "type": "number"
                        },
                        "currency": {
                          "title": "Currency code",
                          "description": "The currency used for this Addition. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                          "example": "AUD",
                          "pattern": "^[A-Z]{3}$",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "breakdowns": {
                    "type": "array",
                    "description": "An array of Breakdowns for this Remuneration Schedule. Breakdowns will not be used to calculate the total package.",
                    "items": {
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of this Addition.",
                          "example": "Superannuation"
                        },
                        "type": {
                          "type": "string",
                          "description": "How this addition is recorded, it is not used to compute the total package due unlike other remuneration components. Enum: `MultipleOfBase`, `FixedAmount`."
                        },
                        "value": {
                          "description": "For multipleOfBase this is the multiplier (e.g. 9 = 9%) while for fixed amount this is the amount to directly add to the total.",
                          "example": 9.5,
                          "type": "number"
                        },
                        "currency": {
                          "title": "Currency code",
                          "description": "The currency used for this Addition. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                          "example": "AUD",
                          "pattern": "^[A-Z]{3}$",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "customFields": {
                    "description": "The custom field values for this Remuneration Schedule",
                    "allOf": [
                      {
                        "$ref": "#/definitions/customFieldsResponse"
                      }
                    ]
                  }
                }
              },
              "name": {
                "type": "string",
                "description": "The name of this [Job](#tag/Jobs).",
                "example": "Janitor"
              },
              "positionTitle": {
                "type": "object",
                "description": "Position Titles that exist within the organisation. Position Title are assigned to [Jobs](#tag/jobs).",
                "properties": {
                  "id": {
                    "title": "UUIDv4",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "description": "The identifier string for the [Position Title](#tag/Position-Titles) of this [Job](#tag/Jobs).",
                    "type": "string"
                  },
                  "name": {
                    "description": "A name given to this [Position Title](#tag/Position-Titles)",
                    "type": "string",
                    "example": "Janitor"
                  },
                  "code": {
                    "description": "An optional code that relates to this [Position Title](#tag/Position-Titles)",
                    "type": [
                      "string",
                      "null"
                    ],
                    "example": "1234"
                  }
                }
              },
              "fte": {
                "description": "The full time equivalent of this [Job](#tag/Jobs). Indicating the workload of an employee that can be comparable across different contexts. This is null for people without an FTE.",
                "example": 1,
                "oneOf": [
                  {
                    "type": "null"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              "comments": {
                "type": "array",
                "maxItems": 0,
                "description": "An array of comment objects that annotate the reason for [Job](#tag/Jobs) changes. Will be an empty array when there has been no updates to the Job."
              },
              "lastestJobChangeComment": {
                "description": "The latest comment that annotates the reason for a [Job's](#tag/Jobs) change. It will return the latest comment based on the asAt value or null if none exist.",
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the Job Comment.",
                        "type": "string"
                      },
                      "date": {
                        "title": "RFC3339 datetime",
                        "example": "2015-03-01T22:30:00+00:00",
                        "description": "The date this Job Comment was created. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "description": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "description": "A further description of the Job Change Reason.",
                        "example": "Completed MBA."
                      },
                      "jobChangeReason": {
                        "type": "object",
                        "description": "The [Job Change Reason](#tag/Job-Change-Reasons) used in the system to document the reason for the change.",
                        "properties": {
                          "id": {
                            "title": "UUIDv4",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "description": "The identifier string for the [Job Change Reason](#tag/Job-Change-Reasons) to which this Job Comment belongs.",
                            "type": "string"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name given to this [Job Change Reason](#tag/Job-Change-Reasons).",
                            "example": "Promotion"
                          },
                          "link": {
                            "type": "string",
                            "title": "URL",
                            "description": "Link on the public api to get more information on this piece of data.",
                            "example": "https://api.intellihr.io/v1/job-change-reasons/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "workClass": {
                "type": "string",
                "description": "The [Work Class](#tag/Work-Classes) of this [Job](#tag/Jobs). This is extra details about the [Work Type](#tag/Work-Types).",
                "example": "Full-Time"
              },
              "workType": {
                "type": "string",
                "description": "This is the [Work Classification](#tag/Work-Types) for this [Job](#tag/Jobs), it is used to differentiate between full-time and part time employees vs unpaid volunteers. Enum: `Permanent`, `Fixed Contract`, `Unpaid`, `Temporary/Casual`, `Independent Contract`.",
                "example": "Permanent"
              },
              "isPrimaryJob": {
                "type": "boolean",
                "description": "Whether this job is the primary job on the [Person](#tag/People). Only one job on a [Person](#tag/People) can be primary at a time.",
                "default": false,
                "example": false
              },
              "jobStatus": {
                "type": "string",
                "description": "The current status of this job within this organisation. Enum: `Past Job`, `Future Job`, `Ending Job`, `Current Job`.",
                "example": "Current Job"
              },
              "createdBy": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the Id of this [user](#tag/Users).",
                        "type": "string"
                      },
                      "link": {
                        "type": "string",
                        "title": "URL",
                        "description": "Link on the public api to get more information on this piece of data.",
                        "example": "https://api.intellihr.io/v1/users/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                      }
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "The [User](#tags/users) who created this job. May be null for old [Jobs](#tags/jobs). This field will remain null for API created jobs."
              },
              "updatedBy": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the Id of this [user](#tag/Users).",
                        "type": "string"
                      },
                      "link": {
                        "type": "string",
                        "title": "URL",
                        "description": "Link on the public api to get more information on this piece of data.",
                        "example": "https://api.intellihr.io/v1/users/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                      }
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "The last [User](#tags/users) who updated this job. May be null for old [Jobs](#tags/jobs). This field will remain null if the last update was performed by the API."
              },
              "positionStartDate": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The start date of the current position the person is in. The gap between the `companyStartDate` and `positionStartDate` will be filled with \"Previous position title\" historical records, to correctly depict the person as having no information recorded for old job positions. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
                "type": "string"
              },
              "companyStartDate": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The date this [Job](#tags/jobs) started or will start within the organisation. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "companyEndDate": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The <b>exclusive</b> date this [Job](#tags/jobs) ended or will end within the organisation. For example, if the person's last working date is on 2025-04-23, the `companyEndDate` should be set as 2025-04-24 to reflect the exclusive date. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "isEndDateConfirmed": {
                "type": "boolean",
                "description": "Whether the end date has been finalised within the intelliHR application.",
                "default": false,
                "example": false
              },
              "turnoverType": {
                "description": "The type of turnover this end of job is classified as.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "example": "INVOLUNTARY"
              },
              "turnoverReason": {
                "description": "The name of the turnover reason.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "example": "Medical reasons"
              },
              "customFields": {
                "description": "The custom field values for this Job",
                "allOf": [
                  {
                    "$ref": "#/definitions/customFieldsResponse"
                  }
                ]
              },
              "createdAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "When this record was created. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              }
            }
          }
        }
      },
      "job_patch_request": {
        "type": "object",
        "required": [
          "effectiveFrom"
        ],
        "properties": {
          "effectiveFrom": {
            "title": "RFC3339 datetime",
            "example": "2015-03-01T22:30:00+00:00",
            "description": "The date this [Job](#tags/jobs) Update is effective from within the organisation. Note that this doesn't affect the start date of the overall job itself. A `null` value will indicate that this Update is effective from the start of the [Job](#tags/jobs). This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "effectiveTo": {
            "title": "RFC3339 datetime",
            "example": "2015-03-01T22:30:00+00:00",
            "description": "The date this [Job](#tags/jobs) Update is effective to within the organisation. Note that this doesn't affect the end date of the overall job itself. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
            "type": "string"
          },
          "name": {
            "description": "The job name to be updated. Will attempt to match to an existing [Position Title](#tag/Position-Titles), otherwise creates a new [Position Title](#tag/Position-Titles).",
            "example": "Food Scientist",
            "type": "string"
          },
          "businessEntity": {
            "type": "object",
            "description": "[Business Entity](#tag/Business-Entities) to which this [Job](#tag/Jobs) belongs. This [Business Entity](#tag/Business-Entities) is specified as a search object, which will match the business entity which best fits the keys for this object. Multiple keys can be used together to further narrow search results.",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Business Entity](#tag/Business-Entities) to which this [Job](#tag/Jobs) belongs.",
                "type": "string"
              },
              "name": {
                "type": "string",
                "description": "Name given to this [Business Entity](#tag/Business-Entities). This name would normally be shown to users of the system.",
                "example": "IntelliHR"
              },
              "legalName": {
                "type": "string",
                "description": "Legal name of [Business Entity](#tag/Business-Entities). Usually used for administrative tasks.",
                "example": "IntelliHR Systems Limited"
              },
              "number": {
                "description": "Legally registered [Business Entity](#tag/Business-Entities) number, e.g. in Australia this might be the ABN, or in America the RN.",
                "example": "00 000 000 000",
                "type": "string"
              }
            }
          },
          "businessUnit": {
            "type": "object",
            "description": "[Business Unit](#tag/Business-Units) to which this [Job](#tag/Jobs) belongs. This [Business Unit](#tag/Business-Units) is specified as a search object, which will match the business unit which best fits the keys for this object. Multiple keys can be used together to further narrow search results.",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Business Unit](#tag/Business-Units) to which this [Job](#tag/Jobs) belongs.",
                "type": "string"
              },
              "name": {
                "description": "Name given to this [Business Unit](#tag/Business-Units). This name would normally be shown to users of the system.",
                "example": "Engineering",
                "type": "string"
              }
            }
          },
          "establishment": {
            "type": "object",
            "description": "[Establishment](#tag/Establishments) to which this [Job](#tag/Jobs) belongs. This [Establishment](#tag/Establishments) is specified as a search object, which will match the Establishment which best fits the keys for this object. Multiple keys can be used together to further narrow search results.",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Establishment](#tag/Establishments) to which this [Job](#tag/Jobs) belongs.",
                "type": "string"
              },
              "name": {
                "description": "Name given to this [Establishment](#tag/Establishments).",
                "example": "NewCo Software Engineer",
                "type": "string"
              }
            }
          },
          "jobChangeReason": {
            "type": "object",
            "description": "The [Job Change Reason](#tag/Job-Change-Reasons) used in the system to document the reason for the change.",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Job Change Reason](#tag/Job-Change-Reasons) to which this Job Comment belongs.",
                "type": "string"
              }
            }
          },
          "supervisorPerson": {
            "type": "object",
            "description": "The [Person](#tag/People) who supervises this [Job](#tag/Jobs). This [Person](#tags/people) is specified as a search object, which will match the person who best fits the keys for this object.\n      Multiple keys can be used together to further narrow search results (for example, if there are multiple people with the same name, email address\n      can be used as well to limit to a single person. A validation error will be thrown if this search is unable to be narrowed to a single [Person](#tags/people).",
            "example": {
              "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
              "name": "Bruce Wayne",
              "primaryEmailAddress": "bruce.wayne@example.com",
              "employeeNumber": "00001",
              "autoIncrementIntellihrId": "1000"
            },
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Person](#tags/people) to locate in the system.",
                "type": "string"
              },
              "name": {
                "type": "string",
                "description": "The name of the [Person](#tags/people) in intelliHR to search for. Note that the search accounts for differences in name order automatically."
              },
              "primaryEmailAddress": {
                "type": "string",
                "description": "The email address flagged as primary for the [Person](#tags/people) within the system."
              },
              "employeeNumber": {
                "type": "string",
                "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
              },
              "autoIncrementIntellihrId": {
                "type": "string",
                "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
              },
              "autoIncrementingIntellihrId": {
                "type": "string",
                "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                "deprecated": true
              }
            }
          },
          "supervisorJob": {
            "type": "object",
            "description": "The [Job](#tag/Jobs) information for the supervisor of this [Job](#tag/Jobs) or null if they have no supervisor.",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Supervisor's Job](#tag/Job) of this [Job](#tag/Jobs).",
                "type": "string"
              },
              "name": {
                "description": "The name/position title of the [Supervisor's Job](#tag/Jobs).",
                "example": "Janitor",
                "type": "string"
              }
            }
          },
          "location": {
            "type": "object",
            "description": "[Location](#tag/Locations) to which this [Job](#tag/Jobs) belongs. This [Location](#tag/Locations) is specified as a search object, which will match the location which best fits the keys for this object. Multiple keys can be used together to further narrow search results.",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Location](#tag/Locations).",
                "type": "string"
              },
              "name": {
                "type": "string",
                "description": "Name given to this [Location](#tag/Locations). This name would normally be shown to users of the system.",
                "example": "Brisbane Office"
              },
              "address": {
                "type": "string",
                "description": "The address of this location.",
                "example": "1234 Queen Street, Brisbane City QLD 4000"
              }
            }
          },
          "workClass": {
            "type": "object",
            "description": "[Work Class](#tag/Work-Classes) to which this [Job](#tag/Jobs) belongs. This [Work Class](#tag/Work-Classes) is specified as a search object, which will match the work class which best fits the keys for this object. Multiple keys can be used together to further narrow search results.",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Work Class](#tag/Work-Classes) to which this [Job](#tag/Jobs) belongs.",
                "type": "string"
              },
              "name": {
                "type": "string",
                "description": "The name of the [Work Class](#tag/Work-Classes).",
                "example": "Casual"
              }
            }
          },
          "workType": {
            "type": "object",
            "description": "[Work Type](#tag/Work-Types) to which this [Job](#tag/Jobs) belongs. This [Work Type](#tag/Work-Types) is specified as a search object, which will match the work type which best fits the keys for this object. Multiple keys can be used together to further narrow search results.",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Work Type](#tag/Work-Types) to which this [Job](#tag/Jobs) belongs.",
                "type": "string"
              },
              "name": {
                "type": "string",
                "description": "The name of the [Work Type](#tag/Work-Types). Enum: `Permanent`, `Fixed Contract`, `Unpaid`, `Temporary/Casual`, `Independent Contract`.",
                "example": "Permanent"
              }
            }
          },
          "fte": {
            "type": "string",
            "description": "The full time equivalent of this [Job](#tag/Jobs). Indicating the workload of an employee that can be comparable across different contexts. This is null for people without an FTE.",
            "example": "1"
          },
          "payGrade": {
            "type": "object",
            "default": "{ 'name': 'No Pay Grade' }",
            "description": "[Pay Grade](#tag/Pay-Grades) to which this [Job](#tag/Jobs) belongs. This [Pay Grade](#tag/Pay-Grades) is specified as a search object, which will match the pay grade which best fits the keys for this object.\n         Multiple keys can be used together to further narrow search results.",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Pay Grade](#tag/Pay-Grades).",
                "type": "string"
              },
              "code": {
                "description": "Administrative, short code associated to the [Pay Grade](#tag/Pay-Grades).",
                "example": "L0",
                "type": "string"
              },
              "name": {
                "description": "User friendly name given to the [Pay Grade](#tag/Pay-Grades).",
                "example": "Founder",
                "type": "string"
              }
            }
          },
          "employmentCondition": {
            "type": "object",
            "default": "{ 'name': 'No Employment Condition' }",
            "description": "The [Employment Condition](#tag/Employment-Conditions) this job is being paid under.\n         This [Employment Condition](#tag/Employment-Conditions) is specified as a search object, which will match the employment condition which best fits the keys for this object. Multiple keys can be used together to further narrow search results.",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Employment Condition](#tag/Employment-Conditions) of this Remuneration Schedule.",
                "type": "string"
              },
              "name": {
                "description": "Name given to this [Employment Condition](#tag/Employment-Conditions).",
                "example": "Professional Employees Award 2010",
                "type": "string"
              },
              "awardName": {
                "description": "Award name can be different from the name presented to a user. Usually used for the legal name of the award.",
                "example": "MA000065: Professional Employees Award 2010 - Fair Work Commission",
                "type": "string"
              }
            }
          },
          "remunerationSchedule": {
            "type": "object",
            "description": "remuneration schedule. This will replace the current schedule with a new schedule. Please include all fields of which to replace the current remuneration schedule with, any fields / items that are not provided will not be included.",
            "required": [
              "payCycle",
              "hoursPerCycle"
            ],
            "properties": {
              "type": {
                "type": "string",
                "description": "The method in which this remuneration schedule is paid. Enum: `Annual Salary`, `Hourly Rate`, `No Remuneration Schedule`.",
                "example": "Annual Salary",
                "default": "No Remuneration Schedule"
              },
              "payCycle": {
                "description": "The cycle that the job is paid on. Enum: `Weekly`, `Fortnightly`, `Monthly`, `Bi-Monthly`.",
                "example": "Fortnightly",
                "type": "string"
              },
              "currency": {
                "title": "Currency code",
                "description": "The currency that the base and total amounts that this job is being paid in. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                "example": "AUD",
                "pattern": "^[A-Z]{3}$",
                "type": "string"
              },
              "employmentCondition": {
                "type": "object",
                "deprecated": true,
                "default": "{ 'name': 'No Employment Condition' }",
                "description": "The [Employment Condition](#tag/Employment-Conditions) this job is being paid under.\n             This [Employment Condition](#tag/Employment-Conditions) is specified as a search object, which will match the employment condition which best fits the keys for this object. Multiple keys can be used together to further narrow search results.\n             **Deprecated** Please use the job-level employmentCondition field instead.",
                "properties": {
                  "id": {
                    "title": "UUIDv4",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "description": "The identifier string for the [Employment Condition](#tag/Employment-Conditions) of this Remuneration Schedule.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name given to this [Employment Condition](#tag/Employment-Conditions).",
                    "example": "Professional Employees Award 2010",
                    "type": "string"
                  },
                  "awardName": {
                    "description": "Award name can be different from the name presented to a user. Usually used for the legal name of the award.",
                    "example": "MA000065: Professional Employees Award 2010 - Fair Work Commission",
                    "type": "string"
                  }
                }
              },
              "hoursPerCycle": {
                "description": "How many hours worked per payCycle. \n\n Setting hours to 0 (zero) signifies that the hours are variable per pay cycle",
                "example": 80,
                "type": "number"
              },
              "baseAnnualSalary": {
                "description": "The Base Salary paid yearly, this is only required if the Remuneration Schedule Type is \"Annual Salary\". Any number exceeding 8 decimal places will be rounded up.",
                "example": 50000,
                "type": "number"
              },
              "baseHourlyRate": {
                "description": "The Base Rate paid hourly, this is only required if the Remuneration Schedule Type is \"Hourly Rate\". Any number exceeding 8 decimal places will be rounded up.",
                "example": 24,
                "type": "number"
              },
              "additions": {
                "type": "array",
                "description": "An array of Additions for the base salary.",
                "items": {
                  "required": [
                    "name",
                    "type",
                    "value",
                    "defaultRemunerationComponent"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of this Addition."
                    },
                    "type": {
                      "type": "string",
                      "description": "How this addition is calculated and applied to the base amount, MultipleOfBase is multiplied by baseAnnualSalary and then added to the total while FixedAmount is added directly to the total. Enum: `MultipleOfBase`, `FixedAmount`."
                    },
                    "value": {
                      "description": "For MultipleOfBase this is the multiplier (e.g. 9 = 9%) while for fixed amount this is the amount to directly add to the total. Any number exceeding 8 decimal places will be rounded up.",
                      "type": "string"
                    },
                    "currency": {
                      "title": "Currency code",
                      "description": "The currency used for this Addition. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                      "example": "AUD",
                      "pattern": "^[A-Z]{3}$",
                      "type": "string"
                    },
                    "defaultRemunerationComponent": {
                      "type": "object",
                      "description": "The default remuneration component this addition is based on. This is specified as a search object, which will match the remuneration component which best fits the keys for this object. Multiple keys can be used together to further narrow search results.",
                      "properties": {
                        "id": {
                          "title": "UUIDv4",
                          "maxLength": 36,
                          "minLength": 36,
                          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                          "description": "The identifier string for the default remuneration component.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the default remuneration component.",
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": [
                  {
                    "name": "Referral Bonus",
                    "type": "FixedAmount",
                    "value": "200",
                    "defaultRemunerationComponent": {
                      "name": "Referral Bonus"
                    }
                  }
                ]
              },
              "additionsToTotal": {
                "type": "array",
                "description": "an array of Additions for the total salary.",
                "items": {
                  "required": [
                    "name",
                    "type",
                    "value"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of this Addition."
                    },
                    "type": {
                      "type": "string",
                      "description": "How this addition is calculated and applied to the base amount, MultipleOfBase is multiplied by baseAnnualSalary and then added to the total while FixedAmount is added directly to the total. Enum: `MultipleOfBase`, `FixedAmount`."
                    },
                    "value": {
                      "description": "For MultipleOfBase this is the multiplier (e.g. 9 = 9%) while for fixed amount this is the amount to directly add to the total. Any number exceeding 8 decimal places will be rounded up.",
                      "type": "string"
                    },
                    "currency": {
                      "title": "Currency code",
                      "description": "The currency used for this Addition. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                      "example": "AUD",
                      "pattern": "^[A-Z]{3}$",
                      "type": "string"
                    },
                    "defaultRemunerationComponent": {
                      "type": "object",
                      "description": "The default remuneration component this addition is based on. This is specified as a search object, which will match the remuneration component which best fits the keys for this object. Multiple keys can be used together to further narrow search results.",
                      "properties": {
                        "id": {
                          "title": "UUIDv4",
                          "maxLength": 36,
                          "minLength": 36,
                          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                          "description": "The identifier string for the default remuneration component.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the default remuneration component.",
                          "type": "string"
                        }
                      }
                    }
                  }
                },
                "example": [
                  {
                    "name": "Superannuation",
                    "type": "MultipleOfBase",
                    "value": "9.5",
                    "defaultRemunerationComponent": {
                      "name": "Superannuation"
                    }
                  }
                ]
              },
              "breakdowns": {
                "type": "array",
                "description": "an array of Breakdowns.",
                "items": {
                  "required": [
                    "name",
                    "type",
                    "value"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of this Breakdowns."
                    },
                    "type": {
                      "type": "string",
                      "description": "How this breakdown is calculated and applied to the base amount, MultipleOfBase is multiplied by baseAnnualSalary and then added to the total while FixedAmount is added directly to the total. Enum: `MultipleOfBase`, `FixedAmount`."
                    },
                    "value": {
                      "description": "For MultipleOfBase this is the multiplier (e.g. 9 = 9%) while for fixed amount this is the amount to directly add to the total. Any number exceeding 8 decimal places will be rounded up.",
                      "type": "string"
                    },
                    "currency": {
                      "title": "Currency code",
                      "description": "The currency used for this breakdown. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                      "example": "AUD",
                      "pattern": "^[A-Z]{3}$",
                      "type": "string"
                    },
                    "defaultRemunerationComponent": {
                      "type": "object",
                      "description": "The default remuneration component this breakdown is based on. This is specified as a search object, which will match the remuneration component which best fits the keys for this object. Multiple keys can be used together to further narrow search results.",
                      "properties": {
                        "id": {
                          "title": "UUIDv4",
                          "maxLength": 36,
                          "minLength": 36,
                          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                          "description": "The identifier string for the default remuneration component.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name of the default remuneration component.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "customFields": {
                "description": "The custom field values for this Remuneration Schedule",
                "type": "object",
                "additionalProperties": {
                  "type": "object",
                  "description": "Custom fields will be keyed by their api_name. Custom fields are not required, and only provided custom fields will be updated.",
                  "properties": {
                    "value": {
                      "description": "The value for this custom field. This value structure will depend upon the type of the custom field.",
                      "anyOf": [
                        {
                          "type": "null",
                          "description": "The value will be null when a custom field is not provided or is empty for a record. Null can be provided to delete a custom field value."
                        },
                        {
                          "type": "string",
                          "description": "For TEXT and NUMBER records, the value is stored as a string with the value of the record."
                        },
                        {
                          "type": "object",
                          "properties": {
                            "label": {
                              "type": "string",
                              "description": "For SINGLE_SELECT records, the value is stored as an object with the label of the dropdown option. NOTE: Only the label needs to be provided. `id` is not required."
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "labels": {
                              "type": "array",
                              "minItems": 1,
                              "description": "For MULTI_SELECT records, the value is stored as an object with an array of labels for all selected options. NOTE: Only the labels need to be provided. `ids` is not required.",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "person": {
                                "type": "object",
                                "description": "For PEOPLE_DROPDOWN records, the value is an object with an array of the [Person](#tag/People) search object and their [Job](#tag/Jobs) search object. This [Person](#tags/people) is specified as a search object, which will match the person who best fits the keys for this object.\n      Multiple keys can be used together to further narrow search results (for example, if there are multiple people with the same name, email address\n      can be used as well to limit to a single person. A validation error will be thrown if this search is unable to be narrowed to a single [Person](#tags/people).",
                                "example": {
                                  "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                  "name": "Bruce Wayne",
                                  "primaryEmailAddress": "bruce.wayne@example.com",
                                  "employeeNumber": "00001",
                                  "autoIncrementIntellihrId": "1000"
                                },
                                "properties": {
                                  "id": {
                                    "title": "UUIDv4",
                                    "maxLength": 36,
                                    "minLength": 36,
                                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                    "description": "The identifier string for the [Person](#tags/people) to locate in the system.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The name of the [Person](#tags/people) in intelliHR to search for. Note that the search accounts for differences in name order automatically."
                                  },
                                  "primaryEmailAddress": {
                                    "type": "string",
                                    "description": "The email address flagged as primary for the [Person](#tags/people) within the system."
                                  },
                                  "employeeNumber": {
                                    "type": "string",
                                    "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
                                  },
                                  "autoIncrementIntellihrId": {
                                    "type": "string",
                                    "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
                                  },
                                  "autoIncrementingIntellihrId": {
                                    "type": "string",
                                    "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                                    "deprecated": true
                                  }
                                }
                              },
                              "job": {
                                "type": "object",
                                "description": "The [Job](#tag/Jobs) information of the [Person](#tag/People) is mandatory if the target PEOPLE_DROPDOWN custom field allows selecting individual jobs. If not, The [Job](#tag/Jobs) information is not mandatory.",
                                "properties": {
                                  "id": {
                                    "title": "UUIDv4",
                                    "maxLength": 36,
                                    "minLength": 36,
                                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                    "description": "The identifier string for the [Job](#tag/Job) of this [Job](#tag/Jobs).",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "The name/position title of the [Job](#tag/Jobs).",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                },
                "example": {
                  "text_field_api_name": {
                    "value": "Some text value"
                  },
                  "numeric_field_api_name": {
                    "value": "50"
                  },
                  "single_select_api_name": {
                    "value": {
                      "label": "Drama"
                    }
                  },
                  "multi_select_api_name": {
                    "value": {
                      "labels": [
                        "Bananas",
                        "Apples"
                      ]
                    }
                  },
                  "people_dropdown_api_name": {
                    "value": [
                      {
                        "person": {
                          "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                          "name": "Bruce Wayne",
                          "primaryEmailAddress": "bruce.wayne@example.com",
                          "employeeNumber": "00001",
                          "autoIncrementIntellihrId": "1000"
                        },
                        "job": {
                          "id": "569904c8-5d36-4c2f-afb0-525eeb8da32d",
                          "name": "Maintenance worker"
                        }
                      },
                      {
                        "person": {
                          "id": "313fde44-f24e-4ec9-9473-0d0f3527222d",
                          "name": "Batman",
                          "primaryEmailAddress": "batman@example.com",
                          "employeeNumber": "00002",
                          "autoIncrementIntellihrId": "1001"
                        },
                        "job": {
                          "id": "653304c8-5d36-4c2f-afb0-525eeb8da32d",
                          "name": "Janitor"
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "customFields": {
            "description": "The custom field values for this Job",
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Custom fields will be keyed by their api_name. Custom fields are not required, and only provided custom fields will be updated.",
              "properties": {
                "value": {
                  "description": "The value for this custom field. This value structure will depend upon the type of the custom field.",
                  "anyOf": [
                    {
                      "type": "null",
                      "description": "The value will be null when a custom field is not provided or is empty for a record. Null can be provided to delete a custom field value."
                    },
                    {
                      "type": "string",
                      "description": "For TEXT and NUMBER records, the value is stored as a string with the value of the record."
                    },
                    {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string",
                          "description": "For SINGLE_SELECT records, the value is stored as an object with the label of the dropdown option. NOTE: Only the label needs to be provided. `id` is not required."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "labels": {
                          "type": "array",
                          "minItems": 1,
                          "description": "For MULTI_SELECT records, the value is stored as an object with an array of labels for all selected options. NOTE: Only the labels need to be provided. `ids` is not required.",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "person": {
                            "type": "object",
                            "description": "For PEOPLE_DROPDOWN records, the value is an object with an array of the [Person](#tag/People) search object and their [Job](#tag/Jobs) search object. This [Person](#tags/people) is specified as a search object, which will match the person who best fits the keys for this object.\n      Multiple keys can be used together to further narrow search results (for example, if there are multiple people with the same name, email address\n      can be used as well to limit to a single person. A validation error will be thrown if this search is unable to be narrowed to a single [Person](#tags/people).",
                            "example": {
                              "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                              "name": "Bruce Wayne",
                              "primaryEmailAddress": "bruce.wayne@example.com",
                              "employeeNumber": "00001",
                              "autoIncrementIntellihrId": "1000"
                            },
                            "properties": {
                              "id": {
                                "title": "UUIDv4",
                                "maxLength": 36,
                                "minLength": 36,
                                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                "description": "The identifier string for the [Person](#tags/people) to locate in the system.",
                                "type": "string"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the [Person](#tags/people) in intelliHR to search for. Note that the search accounts for differences in name order automatically."
                              },
                              "primaryEmailAddress": {
                                "type": "string",
                                "description": "The email address flagged as primary for the [Person](#tags/people) within the system."
                              },
                              "employeeNumber": {
                                "type": "string",
                                "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
                              },
                              "autoIncrementIntellihrId": {
                                "type": "string",
                                "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
                              },
                              "autoIncrementingIntellihrId": {
                                "type": "string",
                                "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                                "deprecated": true
                              }
                            }
                          },
                          "job": {
                            "type": "object",
                            "description": "The [Job](#tag/Jobs) information of the [Person](#tag/People) is mandatory if the target PEOPLE_DROPDOWN custom field allows selecting individual jobs. If not, The [Job](#tag/Jobs) information is not mandatory.",
                            "properties": {
                              "id": {
                                "title": "UUIDv4",
                                "maxLength": 36,
                                "minLength": 36,
                                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                "description": "The identifier string for the [Job](#tag/Job) of this [Job](#tag/Jobs).",
                                "type": "string"
                              },
                              "name": {
                                "description": "The name/position title of the [Job](#tag/Jobs).",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            },
            "example": {
              "text_field_api_name": {
                "value": "Some text value"
              },
              "numeric_field_api_name": {
                "value": "50"
              },
              "single_select_api_name": {
                "value": {
                  "label": "Drama"
                }
              },
              "multi_select_api_name": {
                "value": {
                  "labels": [
                    "Bananas",
                    "Apples"
                  ]
                }
              },
              "people_dropdown_api_name": {
                "value": [
                  {
                    "person": {
                      "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "name": "Bruce Wayne",
                      "primaryEmailAddress": "bruce.wayne@example.com",
                      "employeeNumber": "00001",
                      "autoIncrementIntellihrId": "1000"
                    },
                    "job": {
                      "id": "569904c8-5d36-4c2f-afb0-525eeb8da32d",
                      "name": "Maintenance worker"
                    }
                  },
                  {
                    "person": {
                      "id": "313fde44-f24e-4ec9-9473-0d0f3527222d",
                      "name": "Batman",
                      "primaryEmailAddress": "batman@example.com",
                      "employeeNumber": "00002",
                      "autoIncrementIntellihrId": "1001"
                    },
                    "job": {
                      "id": "653304c8-5d36-4c2f-afb0-525eeb8da32d",
                      "name": "Janitor"
                    }
                  }
                ]
              }
            }
          }
        }
      },
      "job_patch_response": {
        "type": "object",
        "title": "Single Job",
        "properties": {
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "asAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The point in time for which this response is for. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "workflowEvent": {
                "deprecated": true,
                "description": "A link to fetch all [Workflows](#tags/workflows) that belong under the Workflow Event for this Job update. To be **deprecated**, it is recommended to use **workflowEventIds** to construct links.",
                "oneOf": [
                  {
                    "type": "string",
                    "description": "An link to fetch all [Workflows](#tags/workflows) that belong under the Workflow Event for this Job creation.",
                    "example": "https://api.intellihr.io/v1/workflow-events/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "workflowEventId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "deprecated": true,
                "description": "The identifier string for the [Workflow Event](#tags/workflow-events). To be **deprecated**, it is recommended to use **workflowEventIds**.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "workflowEventIds": {
                "type": [
                  "array",
                  "undefined"
                ],
                "description": "List of string identifiers for [Workflow Events](#tags/workflow-events). This will not be defined if there is no workflowEvents in the response",
                "items": {
                  "title": "UUIDv4",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "description": "The identifier string for the [Workflow Event](#tags/workflow-events).",
                  "type": "string"
                }
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          },
          "data": {
            "type": "object",
            "title": "Job",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Job](#tag/Jobs).",
                "type": "string"
              },
              "person": {
                "type": "object",
                "description": "The [Person](#tag/People) to whom this [Job](#tag/Jobs) belongs.",
                "properties": {
                  "id": {
                    "title": "UUIDv4",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "description": "The identifier string for the [Person](#tag/People) to whom this [Job](#tag/Jobs) belongs.",
                    "type": "string"
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Name to display throughout the system for this [Person](#tags/people). Generally follows the pattern preferredName (firstName) lastName, but can be configured on a tenant-wide basis to be a different format.",
                    "example": "Batman (Bruce) Wayne"
                  },
                  "employeeNumber": {
                    "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                    "example": "00001",
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "autoIncrementIntellihrId": {
                    "type": "number",
                    "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                    "example": 1000
                  },
                  "link": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/people/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              },
              "recruitment": {
                "type": "object",
                "description": "The recruitment details stored for this [Job](#tag/Jobs).",
                "properties": {
                  "cost": {
                    "description": "The cost to recruit this [Job](#tag/Jobs). If it is null the cost has not been recorded.",
                    "oneOf": [
                      {
                        "type": "number"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "example": 500
                  },
                  "currency": {
                    "title": "Currency code",
                    "description": "The currency used to recruit this [Job](#tag/Jobs). An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                    "example": "AUD",
                    "pattern": "^[A-Z]{3}$",
                    "type": "string"
                  },
                  "source": {
                    "description": "The [Recruitment Source](#tag/Recruitment-Sources) this job was sourced from or null if it was not recorded.",
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "UUIDv4",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "description": "The identifier string for the [Recruitment Source](#tag/Recruitment-Sources) of this [Job](#tag/Jobs).",
                            "type": "string"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name given to this [Recruitment Source](#tag/Recruitment-Sources).",
                            "example": "Unknown"
                          },
                          "link": {
                            "type": "string",
                            "title": "URL",
                            "description": "Link on the public api to get more information on this piece of data.",
                            "example": "https://api.intellihr.io/v1/recruitment-sources/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                          }
                        }
                      },
                      {
                        "type": "null"
                      }
                    ]
                  }
                }
              },
              "extendedLeave": {
                "description": "If this job has active extended leave, this will be populated, otherwise it will be null",
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "startDate": {
                        "title": "RFC3339 datetime",
                        "example": "2015-03-01T22:30:00+00:00",
                        "description": "The start date of the attribute, or null for start of job. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "endDate": {
                        "title": "RFC3339 datetime",
                        "example": "2015-03-01T22:30:00+00:00",
                        "description": "The end date of the attribute, or null for end of job/time. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "isEndDateConfirmed": {
                        "description": "If the end date is the expected or actual return date",
                        "example": true,
                        "type": "boolean"
                      },
                      "type": {
                        "description": "The [Extended Leave Type](#tag/extended-leave-types) for this leave record, or null if the person was not on leave for these dates",
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "title": "UUIDv4",
                                "maxLength": 36,
                                "minLength": 36,
                                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                "description": "The identifier string for the [Extended Leave Type](#tag/extended-leave-types) of this [Job](#tag/Jobs).",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name given to this [Extended Leave Type](#tag/extended-leave-types). This name would normally be shown to users of the system.",
                                "example": "Annual",
                                "type": "string"
                              },
                              "link": {
                                "type": "string",
                                "title": "URL",
                                "description": "Link on the public api to get more information on this piece of data.",
                                "example": "https://api.intellihr.io/v1/extended-leave-types/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                              }
                            }
                          },
                          {
                            "type": "null"
                          }
                        ]
                      }
                    }
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "location": {
                "type": "object",
                "description": "The geographical location of this [Job](#tag/Jobs).",
                "properties": {
                  "id": {
                    "title": "UUIDv4",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "description": "The identifier string for the [Location](tag/Locations) of this [Job](#tag/Jobs).",
                    "type": "string"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name given to this [Location](#tag/Locations). This name would normally be shown to users of the system.",
                    "example": "Brisbane Office"
                  },
                  "address": {
                    "type": "string",
                    "description": "The address of this location.",
                    "example": "1234 Queen Street, Brisbane City QLD 4000"
                  },
                  "code": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "Code given to this [Location](#tag/Locations).",
                    "example": "BE001"
                  },
                  "customFields": {
                    "description": "The custom field values for this [Location](#tag/Locations)",
                    "allOf": [
                      {
                        "$ref": "#/definitions/customFieldsResponse"
                      }
                    ]
                  },
                  "link": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/locations/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              },
              "payGrade": {
                "type": "object",
                "description": "The [Job's](#tag/Jobs) current [Pay Grade](#tag/Pay-Grades) in the system.",
                "properties": {
                  "id": {
                    "title": "UUIDv4",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "description": "The identifier string for the [Pay Grade](#tag/Pay-Grades) of this [Job](#tag/Jobs).",
                    "type": "string"
                  },
                  "name": {
                    "description": "User friendly name given to the [Pay Grade](#tag/Pay-Grades).",
                    "example": "Founder",
                    "type": "string"
                  },
                  "code": {
                    "description": "Administrative, short code associated to the [Pay Grade](#tag/Pay-Grades).",
                    "default": "N/A",
                    "example": "L0",
                    "type": "string"
                  },
                  "payStep": {
                    "oneOf": [
                      {
                        "type": "object",
                        "default": null,
                        "description": "The pay step within this paygrade that applies to the employee",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "User friendly name for this pay step."
                          },
                          "id": {
                            "title": "UUIDv4",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "description": "The identifier string for the Unique identifier for this pay step.",
                            "type": "string"
                          },
                          "annualSalary": {
                            "oneOf": [
                              {
                                "type": "number",
                                "description": "The annual salary this pay step represents."
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "annualSalaryCurrency": {
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "code": {
                                    "type": "string"
                                  },
                                  "symbol": {
                                    "type": "string"
                                  }
                                },
                                "description": "The currency the annual salary is recorded within."
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "permanentHourlyRate": {
                            "oneOf": [
                              {
                                "type": "number",
                                "description": "The permanent hourly rate this pay step represents."
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "permanentHourlyRateCurrency": {
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "code": {
                                    "type": "string"
                                  },
                                  "symbol": {
                                    "type": "string"
                                  }
                                },
                                "description": "The currency the permanent hourly rate is recorded within."
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "casualHourlyRate": {
                            "oneOf": [
                              {
                                "type": "number",
                                "description": "The casual hourly rate this pay step represents."
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "casualHourlyRateCurrency": {
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "code": {
                                    "type": "string"
                                  },
                                  "symbol": {
                                    "type": "string"
                                  }
                                },
                                "description": "The currency the casual hourly rate is recorded within."
                              },
                              {
                                "type": "null"
                              }
                            ]
                          }
                        }
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "link": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/pay-grades/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              },
              "businessUnit": {
                "type": "object",
                "description": "The [Job's](#tag/Jobs) current [Business Unit](#tag/Business-Units) in the system.",
                "properties": {
                  "id": {
                    "title": "UUIDv4",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "description": "The identifier string for the [Business Unit](#tag/Business-Units) of this [Job](#tag/Jobs).",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name given to this [Business Unit](#tag/Business-Units). This name would normally be shown to users of the system.",
                    "example": "Engineering",
                    "type": "string"
                  },
                  "code": {
                    "description": "Code given to this [Business Unit](#tag/Business-Units).",
                    "example": "BE001",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "link": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/business-units/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  },
                  "customFields": {
                    "description": "The custom field values for this Business Unit",
                    "allOf": [
                      {
                        "$ref": "#/definitions/customFieldsResponse"
                      }
                    ]
                  }
                }
              },
              "businessEntity": {
                "type": "object",
                "description": "The [Job's](#tag/Jobs) current [Business Entity](#tag/Business-Entities) in the system.",
                "properties": {
                  "id": {
                    "title": "UUIDv4",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "description": "The identifier string for the [Business Entity](#tag/Business-Entities) of this [Job](#tag/Jobs).",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name given to this [Business Entity](#tag/Business-Entities). This name would normally be shown to users of the system.",
                    "example": "IntelliHR",
                    "type": "string"
                  },
                  "code": {
                    "description": "Code given to this [Business Entity](#tag/Business-Entities).",
                    "example": "BE001",
                    "type": [
                      "string",
                      "null"
                    ]
                  },
                  "link": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/business-entities/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  },
                  "customFields": {
                    "description": "The custom field values for this Business Unit",
                    "allOf": [
                      {
                        "$ref": "#/definitions/customFieldsResponse"
                      }
                    ]
                  }
                }
              },
              "establishment": {
                "description": "The [Job's](#tag/Jobs) current [Establishment](#tag/Establishments) in the system.",
                "type": "object",
                "properties": {
                  "id": {
                    "title": "UUIDv4",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "description": "The identifier string for the [Establishment](#tag/Establishments) of this [Job](#tag/Jobs).",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name given to this [Establishment](#tag/Establishments).",
                    "example": "NewCo Engineering Manager",
                    "type": "string"
                  },
                  "link": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/establishments/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              },
              "supervisorJob": {
                "description": "The [Job](#tag/Jobs) information for the supervisor of this [Job](#tag/Jobs) or null if they have no supervisor.",
                "oneOf": [
                  {
                    "type": "null"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the [Supervisor's Job](#tag/Job) of this [Job](#tag/Jobs).",
                        "type": "string"
                      },
                      "jobStatus": {
                        "type": "string",
                        "description": "The current status of this job within this organisation. Enum: `Past Job`, `Future Job`, `Ending Job`, `Current Job`.",
                        "example": "Current Job"
                      },
                      "name": {
                        "description": "The name of the [Supervisor's Job](#tag/Jobs).",
                        "example": "Janitor",
                        "type": "string"
                      },
                      "positionTitle": {
                        "type": "object",
                        "description": "Position Title that exist within the organisation. Position Title are assigned to [Jobs](#tag/jobs).",
                        "properties": {
                          "id": {
                            "title": "UUIDv4",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "description": "The identifier string for the [Position Title](#tag/Position-Titles) of this [Job](#tag/Jobs).",
                            "type": "string"
                          },
                          "name": {
                            "description": "A name given to this [Position Title](#tag/Position-Titles)",
                            "type": "string",
                            "example": "Janitor"
                          },
                          "code": {
                            "description": "An optional code that relates to this [Position Title](#tag/Position-Titles)",
                            "type": [
                              "string",
                              "null"
                            ],
                            "example": "1234"
                          }
                        }
                      },
                      "link": {
                        "type": "string",
                        "title": "URL",
                        "description": "Link on the public api to get more information on this piece of data.",
                        "example": "https://api.intellihr.io/v1/jobs/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                      }
                    }
                  }
                ]
              },
              "supervisorPerson": {
                "description": "The [Person](#tag/People) information for the supervisor of this job or null if they have no supervisor.",
                "oneOf": [
                  {
                    "type": "null"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the [Supervisor's Person](#tag/People) of this [Job](#tag/Jobs).",
                        "type": "string"
                      },
                      "displayName": {
                        "type": "string",
                        "description": "Name to display throughout the system for this [Person](#tags/people). Generally follows the pattern preferredName (firstName) lastName, but can be configured on a tenant-wide basis to be a different format.",
                        "example": "Batman (Bruce) Wayne"
                      },
                      "employeeNumber": {
                        "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                        "example": "00001",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "autoIncrementIntellihrId": {
                        "type": "number",
                        "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                        "example": 1000
                      },
                      "link": {
                        "type": "string",
                        "title": "URL",
                        "description": "Link on the public api to get more information on this piece of data.",
                        "example": "https://api.intellihr.io/v1/people/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                      }
                    }
                  }
                ]
              },
              "employmentCondition": {
                "description": "An instance of the [Employment Condition](#tag/Employment-Conditions) that is attached to the job, contains the dates it is effective for.",
                "oneOf": [
                  {
                    "type": "null",
                    "description": "An [Employment Condition](#tag/Employment-Conditions) is not set"
                  },
                  {
                    "type": "object",
                    "description": "The [Employment Condition](#tag/Employment-Conditions) this job is being paid under.",
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the [Employment Condition](#tag/Employment-Conditions) of this Remuneration Schedule.",
                        "type": "string"
                      },
                      "startDate": {
                        "title": "RFC3339 datetime",
                        "example": "2015-03-01T22:30:00+00:00",
                        "description": "The start date of the attribute, or null for start of job. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "endDate": {
                        "title": "RFC3339 datetime",
                        "example": "2015-03-01T22:30:00+00:00",
                        "description": "The end date of the attribute, or null for end of job/time. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "name": {
                        "description": "Name given to this [Employment Condition](#tag/Employment-Conditions). This name would normally be shown to users of the system.",
                        "example": "Professional Employees Award 2010",
                        "type": "string"
                      },
                      "awardName": {
                        "description": "Award name can be different from the name presented to a user. Usually used for the legal name of the award.",
                        "example": "MA000065: Professional Employees Award 2010 - Fair Work Commission",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "link": {
                        "type": "string",
                        "title": "URL",
                        "description": "Link on the public api to get more information on this piece of data.",
                        "example": "https://api.intellihr.io/v1/employment-conditions/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                      }
                    }
                  }
                ]
              },
              "remunerationSchedule": {
                "type": "object",
                "description": "The current remuneration details for this [Job](#tags/Jobs), including information such as salary and hourly pay, all [Jobs](#tags/Jobs) have a remuneration schedule but for unpaid employees they will have a special `No Remuneration Schedule` schedule.",
                "properties": {
                  "type": {
                    "description": "The method in which this remuneration schedule is paid, if a person is unpaid then this will be `No Remuneration Schedule`. Enum: `Annual Salary`, `Hourly Rate`, `No Remuneration Schedule`.",
                    "type": "string"
                  },
                  "baseAnnualSalary": {
                    "description": "The Base Salary paid yearly, this is an approximation if they are paid hourly. Note that if both baseAnnualSalary and baseHourlyRate are provided in a create or patch request, the baseHourlyRate will be ignored.",
                    "example": 50000,
                    "type": "number"
                  },
                  "baseHourlyRate": {
                    "description": "The Base Rate paid hourly, this is an approximation if they are paid annually. Note that if both baseAnnualSalary and baseHourlyRate are provided in a create or patch request, the baseHourlyRate will be ignored.",
                    "example": 24,
                    "type": "number"
                  },
                  "currency": {
                    "title": "Currency code",
                    "description": "The currency that the base and total amounts that this job is being paid in. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                    "example": "AUD",
                    "pattern": "^[A-Z]{3}$",
                    "type": "string"
                  },
                  "hoursPerCycle": {
                    "description": "How many hours worked per payCycle. \n\n 0 (zero) signifies that the hours are variable per pay cycle",
                    "example": 80,
                    "type": "number"
                  },
                  "payCycle": {
                    "description": "The cycle that the job is paid on. Enum: `Weekly`, `Fortnightly`, `Monthly`, `Bi-Monthly`.",
                    "example": "Fortnightly",
                    "type": "string"
                  },
                  "annualPackage": {
                    "description": "The total package paid yearly including additions and deductions. This amount is calculated by adding the Base Annual Salary and additions minus the deductions.",
                    "example": 60000,
                    "type": "number"
                  },
                  "hourlyPackage": {
                    "description": "The total package paid hourly including additions and deductions. This amount is calculated by dividing the Annual Package by the total number of hours per annum.",
                    "example": 28,
                    "type": "number"
                  },
                  "currencyConversionOccurred": {
                    "description": "If any conversion had to be performed between addition and deduction currencies when calculating the annual package.",
                    "example": true,
                    "type": "boolean"
                  },
                  "employmentCondition": {
                    "type": "object",
                    "description": "The [Employment Condition](#tag/Employment-Conditions) this job is being paid under. **Deprecated** Please use the job-level employmentCondition field instead.",
                    "deprecated": true,
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the [Employment Condition](#tag/Employment-Conditions) of this Remuneration Schedule.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name given to this [Employment Condition](#tag/Employment-Conditions). This name would normally be shown to users of the system.",
                        "example": "Professional Employees Award 2010",
                        "type": "string"
                      },
                      "awardName": {
                        "description": "Award name can be different from the name presented to a user. Usually used for the legal name of the award.",
                        "example": "MA000065: Professional Employees Award 2010 - Fair Work Commission",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "link": {
                        "type": "string",
                        "title": "URL",
                        "description": "Link on the public api to get more information on this piece of data.",
                        "example": "https://api.intellihr.io/v1/employment-conditions/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                      }
                    }
                  },
                  "additions": {
                    "type": "array",
                    "description": "An array of Additions for this Remuneration Schedule.",
                    "items": {
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of this Addition.",
                          "example": "Superannuation"
                        },
                        "type": {
                          "type": "string",
                          "description": "How this addition is calculated and applied to the base amount, multipleOfBase is multiplied by baseAnnualSalary and then added to the total while fixed amount is added directly to the total. Enum: `MultipleOfBase`, `FixedAmount`."
                        },
                        "value": {
                          "description": "For multipleOfBase this is the multiplier (e.g. 9 = 9%) while for fixed amount this is the amount to directly add to the total.",
                          "example": 9.5,
                          "type": "number"
                        },
                        "currency": {
                          "title": "Currency code",
                          "description": "The currency used for this Addition. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                          "example": "AUD",
                          "pattern": "^[A-Z]{3}$",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "deductions": {
                    "type": "array",
                    "description": "An array of Deductions for this Remuneration Schedule. Note that this deductions value has been deprecated, you should now use `breakdowns`",
                    "deprecated": true,
                    "items": {
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of this Deduction.",
                          "example": "salary sacrifice"
                        },
                        "type": {
                          "type": "string",
                          "description": "How this deduction is calculated and applied to the base amount, multipleOfBase is multiplied by baseAnnualSalary and then deducted from the total while fixed amount is deducted directly from the total. Enum: `MultipleOfBase`, `FixedAmount`."
                        },
                        "value": {
                          "description": "For multipleOfBase this is the multiplier while for fixed amount this is the amount to directly deduct from the total.",
                          "example": 5000,
                          "type": "number"
                        },
                        "currency": {
                          "title": "Currency code",
                          "description": "The currency used for this Deduction. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                          "example": "AUD",
                          "pattern": "^[A-Z]{3}$",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "additionsToTotal": {
                    "type": "array",
                    "description": "An array of Additions applied to the package after all other components for this Remuneration Schedule.",
                    "items": {
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of this Total Addition.",
                          "example": "Superannuation"
                        },
                        "type": {
                          "type": "string",
                          "description": "How this total addition is calculated and applied to the base amount, multipleOfBase is multiplied by baseAnnualSalary and then added to the total while fixed amount is added directly to the total. Enum: `MultipleOfBase`, `FixedAmount`."
                        },
                        "value": {
                          "description": "For multipleOfBase this is the multiplier (e.g. 9 = 9%) while for fixed amount this is the amount to directly add to the total.",
                          "example": 9.5,
                          "type": "number"
                        },
                        "currency": {
                          "title": "Currency code",
                          "description": "The currency used for this Addition. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                          "example": "AUD",
                          "pattern": "^[A-Z]{3}$",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "breakdowns": {
                    "type": "array",
                    "description": "An array of Breakdowns for this Remuneration Schedule. Breakdowns will not be used to calculate the total package.",
                    "items": {
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of this Addition.",
                          "example": "Superannuation"
                        },
                        "type": {
                          "type": "string",
                          "description": "How this addition is recorded, it is not used to compute the total package due unlike other remuneration components. Enum: `MultipleOfBase`, `FixedAmount`."
                        },
                        "value": {
                          "description": "For multipleOfBase this is the multiplier (e.g. 9 = 9%) while for fixed amount this is the amount to directly add to the total.",
                          "example": 9.5,
                          "type": "number"
                        },
                        "currency": {
                          "title": "Currency code",
                          "description": "The currency used for this Addition. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                          "example": "AUD",
                          "pattern": "^[A-Z]{3}$",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "customFields": {
                    "description": "The custom field values for this Remuneration Schedule",
                    "allOf": [
                      {
                        "$ref": "#/definitions/customFieldsResponse"
                      }
                    ]
                  }
                }
              },
              "name": {
                "type": "string",
                "description": "The name of this [Job](#tag/Jobs).",
                "example": "Janitor"
              },
              "positionTitle": {
                "type": "object",
                "description": "Position Titles that exist within the organisation. Position Title are assigned to [Jobs](#tag/jobs).",
                "properties": {
                  "id": {
                    "title": "UUIDv4",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "description": "The identifier string for the [Position Title](#tag/Position-Titles) of this [Job](#tag/Jobs).",
                    "type": "string"
                  },
                  "name": {
                    "description": "A name given to this [Position Title](#tag/Position-Titles)",
                    "type": "string",
                    "example": "Janitor"
                  },
                  "code": {
                    "description": "An optional code that relates to this [Position Title](#tag/Position-Titles)",
                    "type": [
                      "string",
                      "null"
                    ],
                    "example": "1234"
                  }
                }
              },
              "fte": {
                "description": "The full time equivalent of this [Job](#tag/Jobs). Indicating the workload of an employee that can be comparable across different contexts. This is null for people without an FTE.",
                "example": 1,
                "oneOf": [
                  {
                    "type": "null"
                  },
                  {
                    "type": "number"
                  }
                ]
              },
              "comments": {
                "type": "array",
                "description": "An array of comment objects that annotate the reason for [Job](#tag/Jobs) changes. Will be an empty array when there has been no updates to the Job.",
                "items": {
                  "properties": {
                    "id": {
                      "title": "UUIDv4",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "description": "The identifier string for the Job Comment.",
                      "type": "string"
                    },
                    "date": {
                      "title": "RFC3339 datetime",
                      "example": "2015-03-01T22:30:00+00:00",
                      "description": "The date this Job Comment was created. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "description": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "A further description of the Job Change Reason.",
                      "example": "Completed MBA."
                    },
                    "jobChangeReason": {
                      "type": "object",
                      "description": "The [Job Change Reason](#tag/Job-Change-Reasons) used in the system to document the reason for the change.",
                      "properties": {
                        "id": {
                          "title": "UUIDv4",
                          "maxLength": 36,
                          "minLength": 36,
                          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                          "description": "The identifier string for the [Job Change Reason](#tag/Job-Change-Reasons) to which this Job Comment belongs.",
                          "type": "string"
                        },
                        "name": {
                          "type": "string",
                          "description": "Name given to this [Job Change Reason](#tag/Job-Change-Reasons).",
                          "example": "Promotion"
                        },
                        "link": {
                          "type": "string",
                          "title": "URL",
                          "description": "Link on the public api to get more information on this piece of data.",
                          "example": "https://api.intellihr.io/v1/job-change-reasons/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                        }
                      }
                    }
                  }
                }
              },
              "lastestJobChangeComment": {
                "description": "The latest comment that annotates the reason for a [Job's](#tag/Jobs) change. It will return the latest comment based on the asAt value or null if none exist.",
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the Job Comment.",
                        "type": "string"
                      },
                      "date": {
                        "title": "RFC3339 datetime",
                        "example": "2015-03-01T22:30:00+00:00",
                        "description": "The date this Job Comment was created. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "description": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "description": "A further description of the Job Change Reason.",
                        "example": "Completed MBA."
                      },
                      "jobChangeReason": {
                        "type": "object",
                        "description": "The [Job Change Reason](#tag/Job-Change-Reasons) used in the system to document the reason for the change.",
                        "properties": {
                          "id": {
                            "title": "UUIDv4",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "description": "The identifier string for the [Job Change Reason](#tag/Job-Change-Reasons) to which this Job Comment belongs.",
                            "type": "string"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name given to this [Job Change Reason](#tag/Job-Change-Reasons).",
                            "example": "Promotion"
                          },
                          "link": {
                            "type": "string",
                            "title": "URL",
                            "description": "Link on the public api to get more information on this piece of data.",
                            "example": "https://api.intellihr.io/v1/job-change-reasons/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "workClass": {
                "type": "string",
                "description": "The [Work Class](#tag/Work-Classes) of this [Job](#tag/Jobs). This is extra details about the [Work Type](#tag/Work-Types).",
                "example": "Full-Time"
              },
              "workType": {
                "type": "string",
                "description": "This is the [Work Classification](#tag/Work-Types) for this [Job](#tag/Jobs), it is used to differentiate between full-time and part time employees vs unpaid volunteers. Enum: `Permanent`, `Fixed Contract`, `Unpaid`, `Temporary/Casual`, `Independent Contract`.",
                "example": "Permanent"
              },
              "isPrimaryJob": {
                "type": "boolean",
                "description": "Whether this job is the primary job on the [Person](#tag/People). Only one job on a [Person](#tag/People) can be primary at a time.",
                "default": false,
                "example": false
              },
              "jobStatus": {
                "type": "string",
                "description": "The current status of this job within this organisation. Enum: `Past Job`, `Future Job`, `Ending Job`, `Current Job`.",
                "example": "Current Job"
              },
              "createdBy": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the Id of this [user](#tag/Users).",
                        "type": "string"
                      },
                      "link": {
                        "type": "string",
                        "title": "URL",
                        "description": "Link on the public api to get more information on this piece of data.",
                        "example": "https://api.intellihr.io/v1/users/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                      }
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "The [User](#tags/users) who created this job. May be null for old [Jobs](#tags/jobs). This field will remain null for API created jobs."
              },
              "updatedBy": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the Id of this [user](#tag/Users).",
                        "type": "string"
                      },
                      "link": {
                        "type": "string",
                        "title": "URL",
                        "description": "Link on the public api to get more information on this piece of data.",
                        "example": "https://api.intellihr.io/v1/users/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                      }
                    }
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "The last [User](#tags/users) who updated this job. May be null for old [Jobs](#tags/jobs). This field will remain null if the last update was performed by the API."
              },
              "positionStartDate": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The start date of the current position the person is in. The gap between the `companyStartDate` and `positionStartDate` will be filled with \"Previous position title\" historical records, to correctly depict the person as having no information recorded for old job positions. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
                "type": "string"
              },
              "companyStartDate": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The date this [Job](#tags/jobs) started or will start within the organisation. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "companyEndDate": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The <b>exclusive</b> date this [Job](#tags/jobs) ended or will end within the organisation. For example, if the person's last working date is on 2025-04-23, the `companyEndDate` should be set as 2025-04-24 to reflect the exclusive date. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "isEndDateConfirmed": {
                "type": "boolean",
                "description": "Whether the end date has been finalised within the intelliHR application.",
                "default": false,
                "example": false
              },
              "turnoverType": {
                "description": "The type of turnover this end of job is classified as.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "example": "INVOLUNTARY"
              },
              "turnoverReason": {
                "description": "The name of the turnover reason.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "example": "Medical reasons"
              },
              "customFields": {
                "description": "The custom field values for this Job",
                "allOf": [
                  {
                    "$ref": "#/definitions/customFieldsResponse"
                  }
                ]
              },
              "createdAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "When this record was created. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              }
            }
          }
        }
      },
      ":jobId_timeline_get_response": {
        "type": "object",
        "title": "Job Timeline Events",
        "properties": {
          "data": {
            "type": "array",
            "title": "data",
            "description": "The array will be ordered with the most recent change group ordered at the 0 index. \n The start of the job changes will be at the last index.",
            "items": {
              "type": "object",
              "title": "Job Timeline Event",
              "properties": {
                "groupTime": {
                  "title": "RFC3339 datetime",
                  "example": "2015-03-01T22:30:00+00:00",
                  "description": "The timestamp of the group of timeline events. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                  "type": "string"
                },
                "businessUnits": {
                  "type": [
                    "null",
                    "array"
                  ],
                  "description": "The array is in the following format: [From, To, From, To] every even index is the From record, odd the To record.",
                  "items": {
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "UUIDv4",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "description": "The identifier string for the Object ID.",
                            "type": "string"
                          },
                          "link": {
                            "type": "string",
                            "title": "URL",
                            "description": "Link on the public api to get more information on this piece of data.",
                            "example": "https://api.intellihr.io/v1/business-units/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                          }
                        }
                      }
                    ]
                  },
                  "example": [
                    null,
                    {
                      "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "link": "https://api.intellihr.io/v1/business-units/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                    }
                  ],
                  "default": []
                },
                "businessEntities": {
                  "type": [
                    "null",
                    "array"
                  ],
                  "description": "The array is in the following format: [From, To, From, To] every even index is the From record, odd the To record.",
                  "items": {
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "UUIDv4",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "description": "The identifier string for the Object ID.",
                            "type": "string"
                          },
                          "link": {
                            "type": "string",
                            "title": "URL",
                            "description": "Link on the public api to get more information on this piece of data.",
                            "example": "https://api.intellihr.io/v1/business-entities/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                          }
                        }
                      }
                    ]
                  },
                  "example": [
                    null,
                    {
                      "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "link": "https://api.intellihr.io/v1/business-units/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                    }
                  ],
                  "default": []
                },
                "ftes": {
                  "type": [
                    "null",
                    "array"
                  ],
                  "description": "The array is in the following format: [From, To, From, To] every even index is the From record, odd the To record.",
                  "items": {
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "value": {
                            "description": "The full time equivalent of this [Job](#tag/Jobs). Indicating the workload of an employee that can be comparable across different contexts. This is null for people without an FTE.",
                            "example": 1,
                            "oneOf": [
                              {
                                "type": "null"
                              },
                              {
                                "type": "number"
                              }
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "example": [
                    null,
                    {
                      "value": 1
                    }
                  ],
                  "default": []
                },
                "locations": {
                  "type": [
                    "null",
                    "array"
                  ],
                  "description": "The array is in the following format: [From, To, From, To] every even index is the From record, odd the To record.",
                  "items": {
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "UUIDv4",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "description": "The identifier string for the Object ID.",
                            "type": "string"
                          },
                          "link": {
                            "type": "string",
                            "title": "URL",
                            "description": "Link on the public api to get more information on this piece of data.",
                            "example": "https://api.intellihr.io/v1/locations/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                          }
                        }
                      }
                    ]
                  },
                  "example": [
                    null,
                    {
                      "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "link": "https://api.intellihr.io/v1/business-units/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                    }
                  ],
                  "default": []
                },
                "positionTitles": {
                  "type": [
                    "null",
                    "array"
                  ],
                  "items": {
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "UUIDv4",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "description": "The identifier string for the [Position Title](#tag/Position-Titles).",
                            "type": "string"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name given to this [Position Title](#tag/Position-Titles). This name would normally be shown to users of the system.",
                            "example": "Engineering Manager"
                          },
                          "isEnabled": {
                            "type": "boolean",
                            "description": "Specifies whether users can select this [Position Title](#tag/Position-Titles) in dropdowns."
                          },
                          "code": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "Code given to this [Position Title](#tag/Position-Titles)."
                          }
                        }
                      }
                    ]
                  }
                },
                "payGrades": {
                  "type": [
                    "null",
                    "array"
                  ],
                  "description": "The array is in the following format: [From, To, From, To] every even index is the From record, odd the To record.",
                  "items": {
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "UUIDv4",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "description": "The identifier string for the Object ID.",
                            "type": "string"
                          },
                          "link": {
                            "type": "string",
                            "title": "URL",
                            "description": "Link on the public api to get more information on this piece of data.",
                            "example": "https://api.intellihr.io/v1/pay-grades/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                          }
                        }
                      }
                    ]
                  },
                  "example": [
                    null,
                    {
                      "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "link": "https://api.intellihr.io/v1/business-units/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                    }
                  ],
                  "default": []
                },
                "renamedPayGrades": {
                  "type": [
                    "null",
                    "array"
                  ],
                  "description": "The array is in the following format: [From, To, From, To] every even index is the From record, odd the To record.",
                  "items": {
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "UUIDv4",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "description": "The identifier string for the Object ID.",
                            "type": "string"
                          },
                          "link": {
                            "type": "string",
                            "title": "URL",
                            "description": "Link on the public api to get more information on this piece of data.",
                            "example": "https://api.intellihr.io/v1/pay-grades/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                          }
                        }
                      }
                    ]
                  },
                  "example": [
                    null,
                    {
                      "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "link": "https://api.intellihr.io/v1/business-units/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                    }
                  ],
                  "default": []
                },
                "remunerationSchedules": {
                  "type": [
                    "null",
                    "array"
                  ],
                  "description": "The array is in the following format: [From, To, From, To] every even index is the From record, odd the To record.",
                  "items": {
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "type": "object",
                        "description": "The current remuneration details for this [Job](#tags/Jobs), including information such as salary and hourly pay, all [Jobs](#tags/Jobs) have a remuneration schedule but for unpaid employees they will have a special `No Remuneration Schedule` schedule.",
                        "properties": {
                          "type": {
                            "description": "The method in which this remuneration schedule is paid, if a person is unpaid then this will be `No Remuneration Schedule`. Enum: `Annual Salary`, `Hourly Rate`, `No Remuneration Schedule`.",
                            "type": "string"
                          },
                          "baseAnnualSalary": {
                            "description": "The Base Salary paid yearly, this is an approximation if they are paid hourly. Note that if both baseAnnualSalary and baseHourlyRate are provided in a create or patch request, the baseHourlyRate will be ignored.",
                            "example": 50000,
                            "type": "number"
                          },
                          "baseHourlyRate": {
                            "description": "The Base Rate paid hourly, this is an approximation if they are paid annually. Note that if both baseAnnualSalary and baseHourlyRate are provided in a create or patch request, the baseHourlyRate will be ignored.",
                            "example": 24,
                            "type": "number"
                          },
                          "currency": {
                            "title": "Currency code",
                            "description": "The currency that the base and total amounts that this job is being paid in. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                            "example": "AUD",
                            "pattern": "^[A-Z]{3}$",
                            "type": "string"
                          },
                          "hoursPerCycle": {
                            "description": "How many hours worked per payCycle. \n\n 0 (zero) signifies that the hours are variable per pay cycle",
                            "example": 80,
                            "type": "number"
                          },
                          "payCycle": {
                            "description": "The cycle that the job is paid on. Enum: `Weekly`, `Fortnightly`, `Monthly`, `Bi-Monthly`.",
                            "example": "Fortnightly",
                            "type": "string"
                          },
                          "annualPackage": {
                            "description": "The total package paid yearly including additions and deductions. This amount is calculated by adding the Base Annual Salary and additions minus the deductions.",
                            "example": 60000,
                            "type": "number"
                          },
                          "hourlyPackage": {
                            "description": "The total package paid hourly including additions and deductions. This amount is calculated by dividing the Annual Package by the total number of hours per annum.",
                            "example": 28,
                            "type": "number"
                          },
                          "currencyConversionOccurred": {
                            "description": "If any conversion had to be performed between addition and deduction currencies when calculating the annual package.",
                            "example": true,
                            "type": "boolean"
                          },
                          "employmentCondition": {
                            "type": "object",
                            "description": "The [Employment Condition](#tag/Employment-Conditions) this job is being paid under. **Deprecated** Please use the job-level employmentCondition field instead.",
                            "deprecated": true,
                            "properties": {
                              "id": {
                                "title": "UUIDv4",
                                "maxLength": 36,
                                "minLength": 36,
                                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                "description": "The identifier string for the [Employment Condition](#tag/Employment-Conditions) of this Remuneration Schedule.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name given to this [Employment Condition](#tag/Employment-Conditions). This name would normally be shown to users of the system.",
                                "example": "Professional Employees Award 2010",
                                "type": "string"
                              },
                              "awardName": {
                                "description": "Award name can be different from the name presented to a user. Usually used for the legal name of the award.",
                                "example": "MA000065: Professional Employees Award 2010 - Fair Work Commission",
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "link": {
                                "type": "string",
                                "title": "URL",
                                "description": "Link on the public api to get more information on this piece of data.",
                                "example": "https://api.intellihr.io/v1/employment-conditions/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                              }
                            }
                          },
                          "additions": {
                            "type": "array",
                            "description": "An array of Additions for this Remuneration Schedule.",
                            "items": {
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name of this Addition.",
                                  "example": "Superannuation"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "How this addition is calculated and applied to the base amount, multipleOfBase is multiplied by baseAnnualSalary and then added to the total while fixed amount is added directly to the total. Enum: `MultipleOfBase`, `FixedAmount`."
                                },
                                "value": {
                                  "description": "For multipleOfBase this is the multiplier (e.g. 9 = 9%) while for fixed amount this is the amount to directly add to the total.",
                                  "example": 9.5,
                                  "type": "number"
                                },
                                "currency": {
                                  "title": "Currency code",
                                  "description": "The currency used for this Addition. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                                  "example": "AUD",
                                  "pattern": "^[A-Z]{3}$",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "deductions": {
                            "type": "array",
                            "description": "An array of Deductions for this Remuneration Schedule. Note that this deductions value has been deprecated, you should now use `breakdowns`",
                            "deprecated": true,
                            "items": {
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name of this Deduction.",
                                  "example": "salary sacrifice"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "How this deduction is calculated and applied to the base amount, multipleOfBase is multiplied by baseAnnualSalary and then deducted from the total while fixed amount is deducted directly from the total. Enum: `MultipleOfBase`, `FixedAmount`."
                                },
                                "value": {
                                  "description": "For multipleOfBase this is the multiplier while for fixed amount this is the amount to directly deduct from the total.",
                                  "example": 5000,
                                  "type": "number"
                                },
                                "currency": {
                                  "title": "Currency code",
                                  "description": "The currency used for this Deduction. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                                  "example": "AUD",
                                  "pattern": "^[A-Z]{3}$",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "additionsToTotal": {
                            "type": "array",
                            "description": "An array of Additions applied to the package after all other components for this Remuneration Schedule.",
                            "items": {
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name of this Total Addition.",
                                  "example": "Superannuation"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "How this total addition is calculated and applied to the base amount, multipleOfBase is multiplied by baseAnnualSalary and then added to the total while fixed amount is added directly to the total. Enum: `MultipleOfBase`, `FixedAmount`."
                                },
                                "value": {
                                  "description": "For multipleOfBase this is the multiplier (e.g. 9 = 9%) while for fixed amount this is the amount to directly add to the total.",
                                  "example": 9.5,
                                  "type": "number"
                                },
                                "currency": {
                                  "title": "Currency code",
                                  "description": "The currency used for this Addition. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                                  "example": "AUD",
                                  "pattern": "^[A-Z]{3}$",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "breakdowns": {
                            "type": "array",
                            "description": "An array of Breakdowns for this Remuneration Schedule. Breakdowns will not be used to calculate the total package.",
                            "items": {
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name of this Addition.",
                                  "example": "Superannuation"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "How this addition is recorded, it is not used to compute the total package due unlike other remuneration components. Enum: `MultipleOfBase`, `FixedAmount`."
                                },
                                "value": {
                                  "description": "For multipleOfBase this is the multiplier (e.g. 9 = 9%) while for fixed amount this is the amount to directly add to the total.",
                                  "example": 9.5,
                                  "type": "number"
                                },
                                "currency": {
                                  "title": "Currency code",
                                  "description": "The currency used for this Addition. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                                  "example": "AUD",
                                  "pattern": "^[A-Z]{3}$",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "customFields": {
                            "description": "The custom field values for this Remuneration Schedule",
                            "allOf": [
                              {
                                "$ref": "#/definitions/customFieldsResponse"
                              }
                            ]
                          }
                        }
                      }
                    ]
                  },
                  "example": [
                    null,
                    {
                      "type": "Annual Salary",
                      "baseAnnualSalary": 115000,
                      "baseHourlyRate": 58.2,
                      "currency": "AUD",
                      "hoursPerCycle": 76,
                      "payCycle": "Fortnightly",
                      "annualPackage": 127075,
                      "hourlyPackage": 64.31,
                      "currencyConversionOccurred": false,
                      "employmentCondition": {
                        "id": "62b697c7-72a8-42e9-b0ec-47e63fd59969",
                        "name": "No Employment Condition",
                        "awardName": null,
                        "link": "https://api.intellihr.io/v1/employment-conditions/62b697c7-72a8-42e9-b0ec-47e63fd59969"
                      },
                      "additions": [],
                      "deductions": [],
                      "additionsToTotal": [
                        {
                          "name": "Superannuation",
                          "type": "MultipleOfBase",
                          "value": 10.5,
                          "currency": "AUD",
                          "defaultRemunerationComponent": {
                            "id": "8b765642-e33e-49c7-bce8-f53e528e6d33",
                            "name": "Superannuation",
                            "link": "https://api.intellihr.io/v1/default-remuneration-components/8b765642-e33e-49c7-bce8-f53e528e6d33"
                          }
                        }
                      ],
                      "breakdowns": [],
                      "customFields": {
                        "review_cycle": {
                          "definitionId": "40e49b08-fd68-48d2-8fd6-849d993e42ef",
                          "name": "Review Cycle",
                          "type": "SINGLE_SELECT",
                          "value": {
                            "id": "92fa68be-17bb-4399-90fa-ba29ee27f97d",
                            "label": "Start date anniversary"
                          }
                        }
                      }
                    }
                  ],
                  "default": []
                },
                "supervisors": {
                  "type": [
                    "null",
                    "array"
                  ],
                  "description": "The array is in the following format: [From, To, From, To] every even index is the From record, odd the To record.",
                  "items": {
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "UUIDv4",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "description": "The identifier string for the Object ID.",
                            "type": "string"
                          },
                          "link": {
                            "type": "string",
                            "title": "URL",
                            "description": "Link on the public api to get more information on this piece of data.",
                            "example": "https://api.intellihr.io/v1/people/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                          }
                        }
                      }
                    ]
                  },
                  "example": [
                    null,
                    {
                      "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "link": "https://api.intellihr.io/v1/business-units/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                    }
                  ],
                  "default": []
                },
                "workClasses": {
                  "type": [
                    "null",
                    "array"
                  ],
                  "description": "The array is in the following format: [From, To, From, To] every even index is the From record, odd the To record.",
                  "items": {
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "UUIDv4",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "description": "The identifier string for the Object ID.",
                            "type": "string"
                          },
                          "link": {
                            "type": "string",
                            "title": "URL",
                            "description": "Link on the public api to get more information on this piece of data.",
                            "example": "https://api.intellihr.io/v1/work-classes/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                          }
                        }
                      }
                    ]
                  },
                  "example": [
                    null,
                    {
                      "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "link": "https://api.intellihr.io/v1/business-units/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                    }
                  ],
                  "default": []
                },
                "workTypes": {
                  "type": [
                    "null",
                    "array"
                  ],
                  "description": "The array is in the following format: [From, To, From, To] every even index is the From record, odd the To record.",
                  "items": {
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "UUIDv4",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "description": "The identifier string for the Object ID.",
                            "type": "string"
                          },
                          "link": {
                            "type": "string",
                            "title": "URL",
                            "description": "Link on the public api to get more information on this piece of data.",
                            "example": "https://api.intellihr.io/v1/work-types/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                          }
                        }
                      }
                    ]
                  },
                  "example": [
                    null,
                    {
                      "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "link": "https://api.intellihr.io/v1/business-units/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                    }
                  ],
                  "default": []
                },
                "directReportsRemoved": {
                  "type": [
                    "null",
                    "array"
                  ],
                  "description": "The array is in the following format: [From, To, From, To] every even index is the From record, odd the To record.",
                  "items": {
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "UUIDv4",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "description": "The identifier string for the Object ID.",
                            "type": "string"
                          },
                          "link": {
                            "type": "string",
                            "title": "URL",
                            "description": "Link on the public api to get more information on this piece of data.",
                            "example": "https://api.intellihr.io/v1/people/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                          }
                        }
                      }
                    ]
                  },
                  "example": [
                    null,
                    {
                      "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "link": "https://api.intellihr.io/v1/business-units/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                    }
                  ],
                  "default": []
                },
                "directReportsAssigned": {
                  "type": [
                    "null",
                    "array"
                  ],
                  "description": "The array is in the following format: [From, To, From, To] every even index is the From record, odd the To record.",
                  "items": {
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "UUIDv4",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "description": "The identifier string for the Object ID.",
                            "type": "string"
                          },
                          "link": {
                            "type": "string",
                            "title": "URL",
                            "description": "Link on the public api to get more information on this piece of data.",
                            "example": "https://api.intellihr.io/v1/people/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                          }
                        }
                      }
                    ]
                  },
                  "example": [
                    null,
                    {
                      "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "link": "https://api.intellihr.io/v1/business-units/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                    }
                  ],
                  "default": []
                },
                "extendedLeaveStarted": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "title": "UUIDv4",
                          "maxLength": 36,
                          "minLength": 36,
                          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                          "description": "The identifier string for the Extended leave id.",
                          "type": "string"
                        },
                        "leaveType": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "title": "UUIDv4",
                              "maxLength": 36,
                              "minLength": 36,
                              "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                              "description": "The identifier string for the Extended leave type id.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of this extended leave type",
                              "example": "Long Service",
                              "type": "string"
                            },
                            "link": {
                              "type": "string",
                              "title": "URL",
                              "description": "Link on the public api to get more information on this piece of data.",
                              "example": "https://api.intellihr.io/v1/extended-leave-types/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                            }
                          }
                        },
                        "isEndDateConfirmed": {
                          "description": "If the end date is the expected or actual return date",
                          "example": true,
                          "type": "boolean"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "extendedLeaveEnded": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "title": "UUIDv4",
                          "maxLength": 36,
                          "minLength": 36,
                          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                          "description": "The identifier string for the Extended leave id.",
                          "type": "string"
                        },
                        "leaveType": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "title": "UUIDv4",
                              "maxLength": 36,
                              "minLength": 36,
                              "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                              "description": "The identifier string for the Extended leave type id.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name of this extended leave type",
                              "example": "Long Service",
                              "type": "string"
                            },
                            "link": {
                              "type": "string",
                              "title": "URL",
                              "description": "Link on the public api to get more information on this piece of data.",
                              "example": "https://api.intellihr.io/v1/extended-leave-types/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                            }
                          }
                        },
                        "isEndDateConfirmed": {
                          "description": "If the end date is the expected or actual return date",
                          "example": true,
                          "type": "boolean"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "isFirstChange": {
                  "description": "If this event group contains the first change of job attributes (e.g. when a job starts)",
                  "example": true,
                  "type": "boolean"
                },
                "comments": {
                  "description": "An array of comment objects that annotate the reason for [Job](#tag/Jobs) changes. Will be an empty array when there has been no updates to the Job.",
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "properties": {
                          "id": {
                            "title": "UUIDv4",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "description": "The identifier string for the Job Comment.",
                            "type": "string"
                          },
                          "date": {
                            "title": "RFC3339 datetime",
                            "example": "2015-03-01T22:30:00+00:00",
                            "description": "The date this Job Comment was created. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "description": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "A further description of the Job Change Reason.",
                            "example": "Completed MBA."
                          },
                          "jobChangeReason": {
                            "type": "object",
                            "description": "The [Job Change Reason](#tag/Job-Change-Reasons) used in the system to document the reason for the change.",
                            "properties": {
                              "id": {
                                "title": "UUIDv4",
                                "maxLength": 36,
                                "minLength": 36,
                                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                "description": "The identifier string for the [Job Change Reason](#tag/Job-Change-Reasons) to which this Job Comment belongs.",
                                "type": "string"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name given to this [Job Change Reason](#tag/Job-Change-Reasons).",
                                "example": "Promotion"
                              },
                              "link": {
                                "type": "string",
                                "title": "URL",
                                "description": "Link on the public api to get more information on this piece of data.",
                                "example": "https://api.intellihr.io/v1/job-change-reasons/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "isStartOfJob": {
                  "description": "If this event group is the start of the given job",
                  "example": true,
                  "type": "boolean"
                },
                "isEndOfProbation": {
                  "description": "If this event group is the end of the jobs probation period",
                  "example": true,
                  "type": "boolean"
                },
                "isEndOfJob": {
                  "description": "If this event group is the end of the given job",
                  "example": true,
                  "type": "boolean"
                },
                "turnoverType": {
                  "description": "The type of turnover this end of job is classified as.",
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": "INVOLUNTARY"
                },
                "turnoverReason": {
                  "description": "The name of the turnover reason.",
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": "Medical reasons"
                },
                "customFields": {
                  "type": [
                    "null",
                    "array"
                  ],
                  "description": "The array is in the following format: [From, To, From, To] every even index is the From record, odd the To record.",
                  "items": {
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "from": {
                            "$ref": "#/definitions/customFieldsResponse"
                          },
                          "to": {
                            "$ref": "#/definitions/customFieldsResponse"
                          }
                        }
                      }
                    ]
                  },
                  "example": [
                    {
                      "from": {},
                      "to": {
                        "testing_test": {
                          "definitionId": "13698427-50bf-4a93-97c6-b17e7706148e",
                          "name": "testing test",
                          "type": "SINGLE_SELECT",
                          "value": {
                            "id": "c5e0e7c5-c9f1-4713-b977-a37af5a2f08b",
                            "label": "2"
                          }
                        }
                      }
                    }
                  ],
                  "default": []
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "asAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The point in time for which this response is for. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          }
        }
      },
      "locations": {
        "type": "object",
        "title": "Single Location",
        "properties": {
          "data": {
            "type": "object",
            "title": "location",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Location](#tag/Locations).",
                "type": "string"
              },
              "parentId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the parent [Location](#tag/Locations), or null if there is no parent (this is a top level location).",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "name": {
                "type": "string",
                "description": "Name given to this [Location](#tag/Locations). This name would normally be shown to users of the system.",
                "example": "Brisbane Office"
              },
              "code": {
                "description": "Code given to this [Location](#tag/Locations)",
                "example": "BE001",
                "type": "string"
              },
              "address": {
                "type": "string",
                "description": "The address of this location.",
                "example": "1234 Queen Street, Brisbane City QLD 4000"
              },
              "isEnabled": {
                "type": "boolean",
                "description": "Specifies whether users can select this [Location](#tag/Locations) in dropdowns."
              },
              "representatives": {
                "type": "array",
                "items": {
                  "type": "object",
                  "description": "Representative model",
                  "properties": {
                    "id": {
                      "title": "UUIDv4",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "description": "The identifier string for the Representative.",
                      "type": "string"
                    },
                    "person": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "title": "UUIDv4",
                          "maxLength": 36,
                          "minLength": 36,
                          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                          "description": "The identifier string for the The [Persons](#tag/People) internal id.",
                          "type": "string"
                        },
                        "displayName": {
                          "type": "string",
                          "description": "Name to display throughout the system for this [Person](#tags/people). Generally follows the pattern preferredName (firstName) lastName, but can be configured on a tenant-wide basis to be a different format.",
                          "example": "Batman (Bruce) Wayne"
                        },
                        "employeeNumber": {
                          "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                          "example": "00001",
                          "oneOf": [
                            {
                              "type": "string"
                            },
                            {
                              "type": "null"
                            }
                          ]
                        },
                        "autoIncrementIntellihrId": {
                          "type": "number",
                          "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                          "example": 1000
                        },
                        "link": {
                          "type": "string",
                          "title": "URL",
                          "description": "Link on the public api to get more information on this piece of data.",
                          "example": "https://api.intellihr.io/v1/people/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                        }
                      }
                    },
                    "representativeType": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "title": "UUIDv4",
                          "maxLength": 36,
                          "minLength": 36,
                          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                          "description": "The identifier string for the The [Representative's Type](#tag/Representative-Types) id.",
                          "type": "string"
                        },
                        "link": {
                          "type": "string",
                          "title": "URL",
                          "description": "Link on the public api to get more information on this piece of data.",
                          "example": "https://api.intellihr.io/v1/people/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                        }
                      }
                    }
                  }
                }
              },
              "customFields": {
                "description": "The custom field values for this [Location](#tag/Locations)",
                "allOf": [
                  {
                    "$ref": "#/definitions/customFieldsResponse"
                  }
                ]
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "asAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The point in time for which this response is for. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          }
        }
      },
      "locations_create_request": {
        "type": "object",
        "title": "location",
        "properties": {
          "parentId": {
            "title": "UUIDv4",
            "maxLength": 36,
            "minLength": 36,
            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
            "description": "The identifier string for the parent [Location](#tag/Locations), or null if there is no parent (this is a top level location).",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "name": {
            "type": "string",
            "description": "Name given to this [Location](#tag/Locations). This name would normally be shown to users of the system.",
            "example": "Brisbane Office"
          },
          "code": {
            "description": "Code given to this [Location](#tag/Locations)",
            "example": "BE001",
            "type": "string"
          },
          "address": {
            "type": "string",
            "description": "The address of this location.",
            "example": "1234 Queen Street, Brisbane City QLD 4000"
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Specifies whether users can select this [Location](#tag/Locations) in dropdowns."
          },
          "customFields": {
            "description": "The custom field values for this Location",
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Custom fields will be keyed by their api_name. Custom fields are not required, and only provided custom fields will be updated.",
              "properties": {
                "value": {
                  "description": "The value for this custom field. This value structure will depend upon the type of the custom field.",
                  "anyOf": [
                    {
                      "type": "null",
                      "description": "The value will be null when a custom field is not provided or is empty for a record. Null can be provided to delete a custom field value."
                    },
                    {
                      "type": "string",
                      "description": "For TEXT and NUMBER records, the value is stored as a string with the value of the record."
                    },
                    {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string",
                          "description": "For SINGLE_SELECT records, the value is stored as an object with the label of the dropdown option. NOTE: Only the label needs to be provided. `id` is not required."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "labels": {
                          "type": "array",
                          "minItems": 1,
                          "description": "For MULTI_SELECT records, the value is stored as an object with an array of labels for all selected options. NOTE: Only the labels need to be provided. `ids` is not required.",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "person": {
                            "type": "object",
                            "description": "For PEOPLE_DROPDOWN records, the value is an object with an array of the [Person](#tag/People) search object and their [Job](#tag/Jobs) search object. This [Person](#tags/people) is specified as a search object, which will match the person who best fits the keys for this object.\n      Multiple keys can be used together to further narrow search results (for example, if there are multiple people with the same name, email address\n      can be used as well to limit to a single person. A validation error will be thrown if this search is unable to be narrowed to a single [Person](#tags/people).",
                            "example": {
                              "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                              "name": "Bruce Wayne",
                              "primaryEmailAddress": "bruce.wayne@example.com",
                              "employeeNumber": "00001",
                              "autoIncrementIntellihrId": "1000"
                            },
                            "properties": {
                              "id": {
                                "title": "UUIDv4",
                                "maxLength": 36,
                                "minLength": 36,
                                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                "description": "The identifier string for the [Person](#tags/people) to locate in the system.",
                                "type": "string"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the [Person](#tags/people) in intelliHR to search for. Note that the search accounts for differences in name order automatically."
                              },
                              "primaryEmailAddress": {
                                "type": "string",
                                "description": "The email address flagged as primary for the [Person](#tags/people) within the system."
                              },
                              "employeeNumber": {
                                "type": "string",
                                "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
                              },
                              "autoIncrementIntellihrId": {
                                "type": "string",
                                "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
                              },
                              "autoIncrementingIntellihrId": {
                                "type": "string",
                                "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                                "deprecated": true
                              }
                            }
                          },
                          "job": {
                            "type": "object",
                            "description": "The [Job](#tag/Jobs) information of the [Person](#tag/People) is mandatory if the target PEOPLE_DROPDOWN custom field allows selecting individual jobs. If not, The [Job](#tag/Jobs) information is not mandatory.",
                            "properties": {
                              "id": {
                                "title": "UUIDv4",
                                "maxLength": 36,
                                "minLength": 36,
                                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                "description": "The identifier string for the [Job](#tag/Job) of this [Job](#tag/Jobs).",
                                "type": "string"
                              },
                              "name": {
                                "description": "The name/position title of the [Job](#tag/Jobs).",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            },
            "example": {
              "text_field_api_name": {
                "value": "Some text value"
              },
              "numeric_field_api_name": {
                "value": "50"
              },
              "single_select_api_name": {
                "value": {
                  "label": "Drama"
                }
              },
              "multi_select_api_name": {
                "value": {
                  "labels": [
                    "Bananas",
                    "Apples"
                  ]
                }
              },
              "people_dropdown_api_name": {
                "value": [
                  {
                    "person": {
                      "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "name": "Bruce Wayne",
                      "primaryEmailAddress": "bruce.wayne@example.com",
                      "employeeNumber": "00001",
                      "autoIncrementIntellihrId": "1000"
                    },
                    "job": {
                      "id": "569904c8-5d36-4c2f-afb0-525eeb8da32d",
                      "name": "Maintenance worker"
                    }
                  },
                  {
                    "person": {
                      "id": "313fde44-f24e-4ec9-9473-0d0f3527222d",
                      "name": "Batman",
                      "primaryEmailAddress": "batman@example.com",
                      "employeeNumber": "00002",
                      "autoIncrementIntellihrId": "1001"
                    },
                    "job": {
                      "id": "653304c8-5d36-4c2f-afb0-525eeb8da32d",
                      "name": "Janitor"
                    }
                  }
                ]
              }
            }
          }
        },
        "required": [
          "name"
        ]
      },
      "locations_patch_request": {
        "type": "object",
        "title": "location",
        "properties": {
          "parentId": {
            "title": "UUIDv4",
            "maxLength": 36,
            "minLength": 36,
            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
            "description": "The identifier string for the parent [Location](#tag/Locations), or null if there is no parent (this is a top level location).",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "name": {
            "type": "string",
            "description": "Name given to this [Location](#tag/Locations). This name would normally be shown to users of the system.",
            "example": "Brisbane Office"
          },
          "code": {
            "description": "Code given to this [Location](#tag/Locations)",
            "example": "BE001",
            "type": "string"
          },
          "address": {
            "type": "string",
            "description": "The address of this location.",
            "example": "1234 Queen Street, Brisbane City QLD 4000"
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Specifies whether users can select this [Location](#tag/Locations) in dropdowns."
          },
          "customFields": {
            "description": "The custom field values for this Location",
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Custom fields will be keyed by their api_name. Custom fields are not required, and only provided custom fields will be updated.",
              "properties": {
                "value": {
                  "description": "The value for this custom field. This value structure will depend upon the type of the custom field.",
                  "anyOf": [
                    {
                      "type": "null",
                      "description": "The value will be null when a custom field is not provided or is empty for a record. Null can be provided to delete a custom field value."
                    },
                    {
                      "type": "string",
                      "description": "For TEXT and NUMBER records, the value is stored as a string with the value of the record."
                    },
                    {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string",
                          "description": "For SINGLE_SELECT records, the value is stored as an object with the label of the dropdown option. NOTE: Only the label needs to be provided. `id` is not required."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "labels": {
                          "type": "array",
                          "minItems": 1,
                          "description": "For MULTI_SELECT records, the value is stored as an object with an array of labels for all selected options. NOTE: Only the labels need to be provided. `ids` is not required.",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "person": {
                            "type": "object",
                            "description": "For PEOPLE_DROPDOWN records, the value is an object with an array of the [Person](#tag/People) search object and their [Job](#tag/Jobs) search object. This [Person](#tags/people) is specified as a search object, which will match the person who best fits the keys for this object.\n      Multiple keys can be used together to further narrow search results (for example, if there are multiple people with the same name, email address\n      can be used as well to limit to a single person. A validation error will be thrown if this search is unable to be narrowed to a single [Person](#tags/people).",
                            "example": {
                              "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                              "name": "Bruce Wayne",
                              "primaryEmailAddress": "bruce.wayne@example.com",
                              "employeeNumber": "00001",
                              "autoIncrementIntellihrId": "1000"
                            },
                            "properties": {
                              "id": {
                                "title": "UUIDv4",
                                "maxLength": 36,
                                "minLength": 36,
                                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                "description": "The identifier string for the [Person](#tags/people) to locate in the system.",
                                "type": "string"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the [Person](#tags/people) in intelliHR to search for. Note that the search accounts for differences in name order automatically."
                              },
                              "primaryEmailAddress": {
                                "type": "string",
                                "description": "The email address flagged as primary for the [Person](#tags/people) within the system."
                              },
                              "employeeNumber": {
                                "type": "string",
                                "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
                              },
                              "autoIncrementIntellihrId": {
                                "type": "string",
                                "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
                              },
                              "autoIncrementingIntellihrId": {
                                "type": "string",
                                "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                                "deprecated": true
                              }
                            }
                          },
                          "job": {
                            "type": "object",
                            "description": "The [Job](#tag/Jobs) information of the [Person](#tag/People) is mandatory if the target PEOPLE_DROPDOWN custom field allows selecting individual jobs. If not, The [Job](#tag/Jobs) information is not mandatory.",
                            "properties": {
                              "id": {
                                "title": "UUIDv4",
                                "maxLength": 36,
                                "minLength": 36,
                                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                "description": "The identifier string for the [Job](#tag/Job) of this [Job](#tag/Jobs).",
                                "type": "string"
                              },
                              "name": {
                                "description": "The name/position title of the [Job](#tag/Jobs).",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            },
            "example": {
              "text_field_api_name": {
                "value": "Some text value"
              },
              "numeric_field_api_name": {
                "value": "50"
              },
              "single_select_api_name": {
                "value": {
                  "label": "Drama"
                }
              },
              "multi_select_api_name": {
                "value": {
                  "labels": [
                    "Bananas",
                    "Apples"
                  ]
                }
              },
              "people_dropdown_api_name": {
                "value": [
                  {
                    "person": {
                      "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "name": "Bruce Wayne",
                      "primaryEmailAddress": "bruce.wayne@example.com",
                      "employeeNumber": "00001",
                      "autoIncrementIntellihrId": "1000"
                    },
                    "job": {
                      "id": "569904c8-5d36-4c2f-afb0-525eeb8da32d",
                      "name": "Maintenance worker"
                    }
                  },
                  {
                    "person": {
                      "id": "313fde44-f24e-4ec9-9473-0d0f3527222d",
                      "name": "Batman",
                      "primaryEmailAddress": "batman@example.com",
                      "employeeNumber": "00002",
                      "autoIncrementIntellihrId": "1001"
                    },
                    "job": {
                      "id": "653304c8-5d36-4c2f-afb0-525eeb8da32d",
                      "name": "Janitor"
                    }
                  }
                ]
              }
            }
          }
        }
      },
      "locations_list": {
        "type": "object",
        "title": "List locations",
        "properties": {
          "data": {
            "type": "array",
            "title": "data",
            "items": {
              "type": "object",
              "title": "location",
              "properties": {
                "id": {
                  "title": "UUIDv4",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "description": "The identifier string for the [Location](#tag/Locations).",
                  "type": "string"
                },
                "parentId": {
                  "title": "UUIDv4",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "description": "The identifier string for the parent [Location](#tag/Locations), or null if there is no parent (this is a top level location).",
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "name": {
                  "type": "string",
                  "description": "Name given to this [Location](#tag/Locations). This name would normally be shown to users of the system.",
                  "example": "Brisbane Office"
                },
                "code": {
                  "description": "Code given to this [Location](#tag/Locations)",
                  "example": "BE001",
                  "type": "string"
                },
                "address": {
                  "type": "string",
                  "description": "The address of this location.",
                  "example": "1234 Queen Street, Brisbane City QLD 4000"
                },
                "isEnabled": {
                  "type": "boolean",
                  "description": "Specifies whether users can select this [Location](#tag/Locations) in dropdowns."
                },
                "representatives": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Representative model",
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the Representative.",
                        "type": "string"
                      },
                      "person": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "UUIDv4",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "description": "The identifier string for the The [Persons](#tag/People) internal id.",
                            "type": "string"
                          },
                          "displayName": {
                            "type": "string",
                            "description": "Name to display throughout the system for this [Person](#tags/people). Generally follows the pattern preferredName (firstName) lastName, but can be configured on a tenant-wide basis to be a different format.",
                            "example": "Batman (Bruce) Wayne"
                          },
                          "employeeNumber": {
                            "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                            "example": "00001",
                            "oneOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "null"
                              }
                            ]
                          },
                          "autoIncrementIntellihrId": {
                            "type": "number",
                            "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                            "example": 1000
                          },
                          "link": {
                            "type": "string",
                            "title": "URL",
                            "description": "Link on the public api to get more information on this piece of data.",
                            "example": "https://api.intellihr.io/v1/people/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                          }
                        }
                      },
                      "representativeType": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "UUIDv4",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "description": "The identifier string for the The [Representative's Type](#tag/Representative-Types) id.",
                            "type": "string"
                          },
                          "link": {
                            "type": "string",
                            "title": "URL",
                            "description": "Link on the public api to get more information on this piece of data.",
                            "example": "https://api.intellihr.io/v1/people/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                          }
                        }
                      }
                    }
                  }
                },
                "customFields": {
                  "description": "The custom field values for this [Location](#tag/Locations)",
                  "allOf": [
                    {
                      "$ref": "#/definitions/customFieldsResponse"
                    }
                  ]
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "asAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The point in time for which this response is for. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "pagination": {
                "type": "object",
                "description": "Contains information related to the pagination of the response",
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total items count",
                    "minimum": 0,
                    "example": 50
                  },
                  "count": {
                    "type": "integer",
                    "description": "Number of items for current page",
                    "minimum": 0,
                    "example": 10
                  },
                  "per_page": {
                    "type": "integer",
                    "description": "Items per page limit",
                    "minimum": 0,
                    "example": 10
                  },
                  "current_page": {
                    "type": "integer",
                    "description": "Current page",
                    "minimum": 1,
                    "example": 3
                  },
                  "total_pages": {
                    "type": "integer",
                    "description": "Total number of pages",
                    "minimum": 1,
                    "example": 5
                  }
                }
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          },
          "links": {
            "type": "object",
            "description": "Links to other related resources.",
            "properties": {
              "self": {
                "type": "string",
                "description": "The current page URL",
                "example": "https://api.intellihr.io/v1/locations?limit=1&page=3"
              },
              "first": {
                "type": "string",
                "description": "The first page URL",
                "example": "https://api.intellihr.io/v1/locations?limit=1&page=1"
              },
              "prev": {
                "type": "string",
                "description": "The previous page URL",
                "example": "https://api.intellihr.io/v1/locations?limit=1&page=2"
              },
              "next": {
                "type": "string",
                "description": "The next page URL",
                "example": "https://api.intellihr.io/v1/locations?limit=1&page=4"
              },
              "last": {
                "type": "string",
                "description": "The last page URL",
                "example": "https://api.intellihr.io/v1/locations?limit=1&page=5"
              }
            }
          }
        }
      },
      "pay-grades": {
        "type": "object",
        "title": "Single Pay Grade",
        "properties": {
          "data": {
            "type": "object",
            "title": "payGrade",
            "description": "PayGrade Model",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Pay Grade](#tag/Pay-Grades).",
                "type": "string"
              },
              "code": {
                "description": "Administrative, short code associated to the [Pay Grade](#tag/Pay-Grades).",
                "example": "L0",
                "type": "string"
              },
              "name": {
                "description": "User friendly name given to the [Pay Grade](#tag/Pay-Grades).",
                "example": "Founder",
                "type": "string"
              },
              "description": {
                "description": "Description of the [Pay Grade](#tag/Pay-Grades).",
                "type": "string",
                "example": "The founder pay grade"
              },
              "startDate": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The date this [Pay Grade](#tag/Pay-Grades) started or will start within the organisation. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "endDate": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The date this [Pay Grade](#tag/Pay-Grades) ended or will end within the organisation.. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "isEnabled": {
                "description": "Specifies whether users can select this [Pay Grade](#tag/Pay-Grades) in dropdowns.",
                "type": "boolean",
                "default": true
              },
              "activeJobs": {
                "description": "Number of [Jobs](#tag/Jobs) that have been assigned this [Pay Grade](#tag/Pay-Grades) in dropdowns.",
                "type": "integer",
                "example": 0
              },
              "isOverridable": {
                "description": "Allow this [Pay Grade](#tag/Pay-Grades) value to be overwritten.",
                "type": "boolean",
                "default": true
              },
              "permanentHourlyRate": {
                "description": "Stores the hourly rate for permanent [Jobs](#tag/Jobs).",
                "oneOf": [
                  {
                    "type": "number",
                    "example": 25.5
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "permanentHourlyRateCurrency": {
                "description": "PayGrade Currency Object Model",
                "oneOf": [
                  {
                    "type": "object",
                    "title": "payGradeCurrency",
                    "properties": {
                      "code": {
                        "description": "Administrative, short code associated to the Currency.",
                        "example": "AUD",
                        "type": "string"
                      },
                      "name": {
                        "description": "User friendly name given to the Currency.",
                        "example": "Australian Dollar",
                        "type": "string"
                      }
                    }
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "casualHourlyRate": {
                "description": "Stores the hourly rate for casual [Jobs](#tag/Jobs).",
                "oneOf": [
                  {
                    "type": "number",
                    "example": 25.5
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "casualHourlyRateCurrency": {
                "description": "PayGrade Currency Object Model",
                "oneOf": [
                  {
                    "type": "object",
                    "title": "payGradeCurrency",
                    "properties": {
                      "code": {
                        "description": "Administrative, short code associated to the Currency.",
                        "example": "AUD",
                        "type": "string"
                      },
                      "name": {
                        "description": "User friendly name given to the Currency.",
                        "example": "Australian Dollar",
                        "type": "string"
                      }
                    }
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "annualSalary": {
                "description": "Stores the annual salary for [Jobs](#tag/Jobs).",
                "oneOf": [
                  {
                    "type": "number",
                    "example": 25.5
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "annualSalaryCurrency": {
                "description": "PayGrade Currency Object Model",
                "oneOf": [
                  {
                    "type": "object",
                    "title": "payGradeCurrency",
                    "properties": {
                      "code": {
                        "description": "Administrative, short code associated to the Currency.",
                        "example": "AUD",
                        "type": "string"
                      },
                      "name": {
                        "description": "User friendly name given to the Currency.",
                        "example": "Australian Dollar",
                        "type": "string"
                      }
                    }
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "payGradeType": {
                "type": "string",
                "description": "The type of this [Pay Grade](#tag/Pay-Grades)",
                "enum": [
                  "FIXED",
                  "STEP"
                ]
              },
              "payGradeValues": {
                "type": "array",
                "description": "The current and historical paysteps of this [Pay Grade](#tag/Pay-Grades), if any.",
                "oneOf": [
                  {
                    "items": {
                      "properties": {
                        "id": {
                          "title": "UUIDv4",
                          "maxLength": 36,
                          "minLength": 36,
                          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                          "description": "The identifier string for the Unique identifier for this pay step.",
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "activeJobs": {
                          "type": "integer"
                        },
                        "values": {
                          "type": "array",
                          "description": "All of the historical values for this pay step.",
                          "items": {
                            "startDate": {
                              "title": "RFC3339 datetime",
                              "example": "2015-03-01T22:30:00+00:00",
                              "description": "At this date, the adjacent values for this pay step became effective.. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                              "oneOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "endDate": {
                              "title": "RFC3339 datetime",
                              "example": "2015-03-01T22:30:00+00:00",
                              "description": "At this date, the adjacent values for this pay step stopped being effective.. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                              "oneOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "permanentHourlyRate": {
                              "description": "The permanent hourly rate",
                              "oneOf": [
                                {
                                  "type": "number",
                                  "example": 27.5
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "permanentHourlyRateCurrency": {
                              "description": "PayGrade Currency Object Model",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "title": "payGradeCurrency",
                                  "properties": {
                                    "code": {
                                      "description": "Administrative, short code associated to the Currency.",
                                      "example": "AUD",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "User friendly name given to the Currency.",
                                      "example": "Australian Dollar",
                                      "type": "string"
                                    }
                                  }
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "casualHourlyRate": {
                              "description": "The casual hourly rate",
                              "oneOf": [
                                {
                                  "type": "number",
                                  "example": 27.5
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "casualHourlyRateCurrency": {
                              "description": "PayGrade Currency Object Model",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "title": "payGradeCurrency",
                                  "properties": {
                                    "code": {
                                      "description": "Administrative, short code associated to the Currency.",
                                      "example": "AUD",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "User friendly name given to the Currency.",
                                      "example": "Australian Dollar",
                                      "type": "string"
                                    }
                                  }
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "annualSalary": {
                              "description": "The annual salary",
                              "oneOf": [
                                {
                                  "type": "number",
                                  "example": 65000
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            },
                            "annualSalaryCurrency": {
                              "description": "PayGrade Currency Object Model",
                              "oneOf": [
                                {
                                  "type": "object",
                                  "title": "payGradeCurrency",
                                  "properties": {
                                    "code": {
                                      "description": "Administrative, short code associated to the Currency.",
                                      "example": "AUD",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "User friendly name given to the Currency.",
                                      "example": "Australian Dollar",
                                      "type": "string"
                                    }
                                  }
                                },
                                {
                                  "type": "null"
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "changeUser": {
                "description": "The [User](#tag/User) who last changed this [Pay Grade](#tag/Pay-Grades)",
                "oneOf": [
                  {
                    "type": "object",
                    "title": "payGradeChangeUser",
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the [User](#tag/Users).",
                        "type": "string"
                      },
                      "link": {
                        "type": "string",
                        "title": "URL",
                        "description": "Link on the public api to get more information on this piece of data.",
                        "example": "https://api.intellihr.io/v1/users/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                      }
                    }
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "employmentCondition": {
                "description": "The [Employment Condition](#tag/Employment-Conditions) of this [Pay Grade](#tag/Pay-Grades)",
                "oneOf": [
                  {
                    "type": "object",
                    "title": "payGradeEmploymentCondition",
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the [Employment Condition](#tag/Employment-Conditions).",
                        "type": "string"
                      },
                      "link": {
                        "type": "string",
                        "title": "URL",
                        "description": "Link on the public api to get more information on this piece of data.",
                        "example": "https://api.intellihr.io/v1/employment-conditions/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                      }
                    }
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "asAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The point in time for which this response is for. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          }
        }
      },
      "pay-grades_list": {
        "type": "object",
        "title": "List of Pay Grades",
        "properties": {
          "data": {
            "type": "array",
            "title": "data",
            "items": {
              "type": "object",
              "title": "payGrade",
              "description": "PayGrade Model",
              "properties": {
                "id": {
                  "title": "UUIDv4",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "description": "The identifier string for the [Pay Grade](#tag/Pay-Grades).",
                  "type": "string"
                },
                "code": {
                  "description": "Administrative, short code associated to the [Pay Grade](#tag/Pay-Grades).",
                  "example": "L0",
                  "type": "string"
                },
                "name": {
                  "description": "User friendly name given to the [Pay Grade](#tag/Pay-Grades).",
                  "example": "Founder",
                  "type": "string"
                },
                "description": {
                  "description": "Description of the [Pay Grade](#tag/Pay-Grades).",
                  "type": "string",
                  "example": "The founder pay grade"
                },
                "startDate": {
                  "title": "RFC3339 datetime",
                  "example": "2015-03-01T22:30:00+00:00",
                  "description": "The date this [Pay Grade](#tag/Pay-Grades) started or will start within the organisation. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "endDate": {
                  "title": "RFC3339 datetime",
                  "example": "2015-03-01T22:30:00+00:00",
                  "description": "The date this [Pay Grade](#tag/Pay-Grades) ended or will end within the organisation.. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "isEnabled": {
                  "description": "Specifies whether users can select this [Pay Grade](#tag/Pay-Grades) in dropdowns.",
                  "type": "boolean",
                  "default": true
                },
                "activeJobs": {
                  "description": "Number of [Jobs](#tag/Jobs) that have been assigned this [Pay Grade](#tag/Pay-Grades) in dropdowns.",
                  "type": "integer",
                  "example": 0
                },
                "isOverridable": {
                  "description": "Allow this [Pay Grade](#tag/Pay-Grades) value to be overwritten.",
                  "type": "boolean",
                  "default": true
                },
                "permanentHourlyRate": {
                  "description": "Stores the hourly rate for permanent [Jobs](#tag/Jobs).",
                  "oneOf": [
                    {
                      "type": "number",
                      "example": 25.5
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "permanentHourlyRateCurrency": {
                  "description": "PayGrade Currency Object Model",
                  "oneOf": [
                    {
                      "type": "object",
                      "title": "payGradeCurrency",
                      "properties": {
                        "code": {
                          "description": "Administrative, short code associated to the Currency.",
                          "example": "AUD",
                          "type": "string"
                        },
                        "name": {
                          "description": "User friendly name given to the Currency.",
                          "example": "Australian Dollar",
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "casualHourlyRate": {
                  "description": "Stores the hourly rate for casual [Jobs](#tag/Jobs).",
                  "oneOf": [
                    {
                      "type": "number",
                      "example": 25.5
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "casualHourlyRateCurrency": {
                  "description": "PayGrade Currency Object Model",
                  "oneOf": [
                    {
                      "type": "object",
                      "title": "payGradeCurrency",
                      "properties": {
                        "code": {
                          "description": "Administrative, short code associated to the Currency.",
                          "example": "AUD",
                          "type": "string"
                        },
                        "name": {
                          "description": "User friendly name given to the Currency.",
                          "example": "Australian Dollar",
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "annualSalary": {
                  "description": "Stores the annual salary for [Jobs](#tag/Jobs).",
                  "oneOf": [
                    {
                      "type": "number",
                      "example": 25.5
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "annualSalaryCurrency": {
                  "description": "PayGrade Currency Object Model",
                  "oneOf": [
                    {
                      "type": "object",
                      "title": "payGradeCurrency",
                      "properties": {
                        "code": {
                          "description": "Administrative, short code associated to the Currency.",
                          "example": "AUD",
                          "type": "string"
                        },
                        "name": {
                          "description": "User friendly name given to the Currency.",
                          "example": "Australian Dollar",
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "payGradeType": {
                  "type": "string",
                  "description": "The type of this [Pay Grade](#tag/Pay-Grades)",
                  "enum": [
                    "FIXED",
                    "STEP"
                  ]
                },
                "payGradeValues": {
                  "type": "array",
                  "description": "The current and historical paysteps of this [Pay Grade](#tag/Pay-Grades), if any.",
                  "oneOf": [
                    {
                      "items": {
                        "properties": {
                          "id": {
                            "title": "UUIDv4",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "description": "The identifier string for the Unique identifier for this pay step.",
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "activeJobs": {
                            "type": "integer"
                          },
                          "values": {
                            "type": "array",
                            "description": "All of the historical values for this pay step.",
                            "items": {
                              "startDate": {
                                "title": "RFC3339 datetime",
                                "example": "2015-03-01T22:30:00+00:00",
                                "description": "At this date, the adjacent values for this pay step became effective.. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "endDate": {
                                "title": "RFC3339 datetime",
                                "example": "2015-03-01T22:30:00+00:00",
                                "description": "At this date, the adjacent values for this pay step stopped being effective.. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                                "oneOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "permanentHourlyRate": {
                                "description": "The permanent hourly rate",
                                "oneOf": [
                                  {
                                    "type": "number",
                                    "example": 27.5
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "permanentHourlyRateCurrency": {
                                "description": "PayGrade Currency Object Model",
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "title": "payGradeCurrency",
                                    "properties": {
                                      "code": {
                                        "description": "Administrative, short code associated to the Currency.",
                                        "example": "AUD",
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "User friendly name given to the Currency.",
                                        "example": "Australian Dollar",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "casualHourlyRate": {
                                "description": "The casual hourly rate",
                                "oneOf": [
                                  {
                                    "type": "number",
                                    "example": 27.5
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "casualHourlyRateCurrency": {
                                "description": "PayGrade Currency Object Model",
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "title": "payGradeCurrency",
                                    "properties": {
                                      "code": {
                                        "description": "Administrative, short code associated to the Currency.",
                                        "example": "AUD",
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "User friendly name given to the Currency.",
                                        "example": "Australian Dollar",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "annualSalary": {
                                "description": "The annual salary",
                                "oneOf": [
                                  {
                                    "type": "number",
                                    "example": 65000
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              },
                              "annualSalaryCurrency": {
                                "description": "PayGrade Currency Object Model",
                                "oneOf": [
                                  {
                                    "type": "object",
                                    "title": "payGradeCurrency",
                                    "properties": {
                                      "code": {
                                        "description": "Administrative, short code associated to the Currency.",
                                        "example": "AUD",
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "User friendly name given to the Currency.",
                                        "example": "Australian Dollar",
                                        "type": "string"
                                      }
                                    }
                                  },
                                  {
                                    "type": "null"
                                  }
                                ]
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "changeUser": {
                  "description": "The [User](#tag/User) who last changed this [Pay Grade](#tag/Pay-Grades)",
                  "oneOf": [
                    {
                      "type": "object",
                      "title": "payGradeChangeUser",
                      "properties": {
                        "id": {
                          "title": "UUIDv4",
                          "maxLength": 36,
                          "minLength": 36,
                          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                          "description": "The identifier string for the [User](#tag/Users).",
                          "type": "string"
                        },
                        "link": {
                          "type": "string",
                          "title": "URL",
                          "description": "Link on the public api to get more information on this piece of data.",
                          "example": "https://api.intellihr.io/v1/users/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "employmentCondition": {
                  "description": "The [Employment Condition](#tag/Employment-Conditions) of this [Pay Grade](#tag/Pay-Grades)",
                  "oneOf": [
                    {
                      "type": "object",
                      "title": "payGradeEmploymentCondition",
                      "properties": {
                        "id": {
                          "title": "UUIDv4",
                          "maxLength": 36,
                          "minLength": 36,
                          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                          "description": "The identifier string for the [Employment Condition](#tag/Employment-Conditions).",
                          "type": "string"
                        },
                        "link": {
                          "type": "string",
                          "title": "URL",
                          "description": "Link on the public api to get more information on this piece of data.",
                          "example": "https://api.intellihr.io/v1/employment-conditions/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "asAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The point in time for which this response is for. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "pagination": {
                "type": "object",
                "description": "Contains information related to the pagination of the response",
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total items count",
                    "minimum": 0,
                    "example": 50
                  },
                  "count": {
                    "type": "integer",
                    "description": "Number of items for current page",
                    "minimum": 0,
                    "example": 10
                  },
                  "per_page": {
                    "type": "integer",
                    "description": "Items per page limit",
                    "minimum": 0,
                    "example": 10
                  },
                  "current_page": {
                    "type": "integer",
                    "description": "Current page",
                    "minimum": 1,
                    "example": 3
                  },
                  "total_pages": {
                    "type": "integer",
                    "description": "Total number of pages",
                    "minimum": 1,
                    "example": 5
                  }
                }
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          },
          "links": {
            "type": "object",
            "description": "Links to other related resources.",
            "properties": {
              "self": {
                "type": "string",
                "description": "The current page URL",
                "example": "https://api.intellihr.io/v1/pay-grades?limit=1&page=3"
              },
              "first": {
                "type": "string",
                "description": "The first page URL",
                "example": "https://api.intellihr.io/v1/pay-grades?limit=1&page=1"
              },
              "prev": {
                "type": "string",
                "description": "The previous page URL",
                "example": "https://api.intellihr.io/v1/pay-grades?limit=1&page=2"
              },
              "next": {
                "type": "string",
                "description": "The next page URL",
                "example": "https://api.intellihr.io/v1/pay-grades?limit=1&page=4"
              },
              "last": {
                "type": "string",
                "description": "The last page URL",
                "example": "https://api.intellihr.io/v1/pay-grades?limit=1&page=5"
              }
            }
          }
        }
      },
      "pay_grade_create_request": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "description": "The name assigned to this [Pay Grade](#tags/Pay-Grades).",
            "example": "Founder",
            "type": "string"
          },
          "code": {
            "description": "Administrative, short code associated to the [Pay Grade](#tag/Pay-Grades).",
            "example": "L0",
            "type": "string"
          },
          "description": {
            "description": "Description of the [Pay Grade](#tag/Pay-Grades).",
            "example": "The founder pay grade",
            "type": "string"
          },
          "employmentCondition": {
            "type": "object",
            "default": "{ 'name': 'No Employment Condition' }",
            "description": "The [Employment Condition](#tag/Employment-Conditions) this job is being paid under.\n         This [Employment Condition](#tag/Employment-Conditions) is specified as a search object, which will match the employment condition which best fits the keys for this object. Multiple keys can be used together to further narrow search results.",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Employment Condition](#tag/Employment-Conditions) of this Remuneration Schedule.",
                "type": "string"
              },
              "name": {
                "description": "Name given to this [Employment Condition](#tag/Employment-Conditions).",
                "example": "Professional Employees Award 2010",
                "type": "string"
              },
              "awardName": {
                "description": "Award name can be different from the name presented to a user. Usually used for the legal name of the award.",
                "example": "MA000065: Professional Employees Award 2010 - Fair Work Commission",
                "type": "string"
              }
            }
          },
          "payGradeType": {
            "description": "The type of this [Pay Grade](#tag/Pay-Grades). Enum: `FIXED` or `STEP`.",
            "example": "FIXED",
            "default": "FIXED",
            "type": "string"
          },
          "isOverridable": {
            "description": "Allow this [Pay Grade](#tag/Pay-Grades) value to be overwritten.",
            "type": "boolean",
            "default": false
          },
          "permanentHourlyRate": {
            "description": "Stores the hourly rate for permanent [Jobs](#tag/Jobs). These inputs will be ignored if you also pass in pay Step values.",
            "type": "number",
            "example": 25.5
          },
          "permanentHourlyRateCurrency": {
            "title": "Currency code",
            "description": "The currency that the permanentHourlyRate is being paid in. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
            "example": "AUD",
            "pattern": "^[A-Z]{3}$",
            "type": "string"
          },
          "casualHourlyRate": {
            "description": "Stores the hourly rate for casual [Jobs](#tag/Jobs). These inputs will be ignored if you also pass in pay Step values.",
            "type": "number",
            "example": 25.5
          },
          "casualHourlyRateCurrency": {
            "title": "Currency code",
            "description": "The currency that the casualHourlyRate is being paid in. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
            "example": "AUD",
            "pattern": "^[A-Z]{3}$",
            "type": "string"
          },
          "annualSalary": {
            "description": "Stores the annual salary for [Jobs](#tag/Jobs). These inputs will be ignored if you also pass in pay Step values.",
            "type": "number",
            "example": 25.5
          },
          "annualSalaryCurrency": {
            "title": "Currency code",
            "description": "The currency that the annualSalary is being paid in. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
            "example": "AUD",
            "pattern": "^[A-Z]{3}$",
            "type": "string"
          },
          "paySteps": {
            "type": "array",
            "description": "An array of Paygrade Step Rates. This array is to be used when payGradeType of \"Step\" is used.",
            "items": {
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "The name assigned to this [Pay Grade](#tags/Pay-Grades) Step.",
                  "example": "Level 1",
                  "type": "string"
                },
                "permanentHourlyRate": {
                  "description": "Stores the hourly rate for permanent [Jobs](#tag/Jobs) for this Step.",
                  "type": "number",
                  "example": 25.5
                },
                "permanentHourlyRateCurrency": {
                  "title": "Currency code",
                  "description": "The currency that the permanentHourlyRate is being paid in. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                  "example": "AUD",
                  "pattern": "^[A-Z]{3}$",
                  "type": "string"
                },
                "casualHourlyRate": {
                  "description": "Stores the hourly rate for casual [Jobs](#tag/Jobs) for this Step.",
                  "type": "number",
                  "example": 25.5
                },
                "casualHourlyRateCurrency": {
                  "title": "Currency code",
                  "description": "The currency that the casualHourlyRate is being paid in. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                  "example": "AUD",
                  "pattern": "^[A-Z]{3}$",
                  "type": "string"
                },
                "annualSalary": {
                  "description": "Stores the annual salary for [Jobs](#tag/Jobs) for this Step.",
                  "type": "number",
                  "example": 25.5
                },
                "annualSalaryCurrency": {
                  "title": "Currency code",
                  "description": "The currency that the annualSalary is being paid in. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                  "example": "AUD",
                  "pattern": "^[A-Z]{3}$",
                  "type": "string"
                }
              },
              "example": {
                "name": "Level 1",
                "permanentHourlyRate": 25.5,
                "permanentHourlyRateCurrency": "AUD",
                "casualHourlyRate": 25.5,
                "casualHourlyRateCurrency": "AUD",
                "annualSalary": 25.5,
                "annualSalaryCurrency": "AUD"
              }
            }
          }
        }
      },
      "pay_grade_update_request": {
        "type": "object",
        "required": [
          "effectiveFrom"
        ],
        "properties": {
          "effectiveFrom": {
            "title": "RFC3339 datetime",
            "example": "2015-03-01T22:30:00+00:00",
            "description": "The date this [Pay Grade](#tags/Pay-Grades) Update is effective from within the organisation. Note that this doesn't affect the availableFrom date of the overall Pay Grade itself.  Not providing an effectiveFrom will apply the changes from the beggining of time.. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
            "type": "string"
          },
          "effectiveTo": {
            "title": "RFC3339 datetime",
            "example": "2015-03-01T22:30:00+00:00",
            "description": "The date this [Pay Grade](#tags/Pay-Grades) Update is effective to within the organisation.. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
            "type": "string"
          },
          "isEnabled": {
            "description": "Toggle the availability of the [Pay Grade](#tag/Pay-Grades) on or off within the organisation.",
            "type": "boolean"
          },
          "name": {
            "description": "The name assigned to this [Pay Grade](#tags/Pay-Grades).",
            "example": "Founder",
            "type": "string"
          },
          "code": {
            "description": "Administrative, short code associated to the [Pay Grade](#tag/Pay-Grades).",
            "example": "L0",
            "type": "string"
          },
          "description": {
            "description": "Description of the [Pay Grade](#tag/Pay-Grades).",
            "example": "The founder pay grade",
            "type": "string"
          },
          "employmentCondition": {
            "type": "object",
            "description": "The [Employment Condition](#tag/Employment-Conditions) this job is being paid under.\n         This [Employment Condition](#tag/Employment-Conditions) is specified as a search object, which will match the employment condition which best fits the keys for this object. Multiple keys can be used together to further narrow search results.",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Employment Condition](#tag/Employment-Conditions) of this Remuneration Schedule.",
                "type": "string"
              },
              "name": {
                "description": "Name given to this [Employment Condition](#tag/Employment-Conditions).",
                "example": "Professional Employees Award 2010",
                "type": "string"
              },
              "awardName": {
                "description": "Award name can be different from the name presented to a user. Usually used for the legal name of the award.",
                "example": "MA000065: Professional Employees Award 2010 - Fair Work Commission",
                "type": "string"
              }
            }
          },
          "payGradeType": {
            "description": "The type of this [Pay Grade](#tag/Pay-Grades). Enum: `FIXED` or `STEP`.",
            "example": "FIXED",
            "type": "string"
          },
          "isOverridable": {
            "description": "Allow this [Pay Grade](#tag/Pay-Grades) value to be overwritten.",
            "type": "boolean"
          },
          "permanentHourlyRate": {
            "description": "Stores the hourly rate for permanent [Jobs](#tag/Jobs). These inputs will be ignored if you also pass in pay Step values.",
            "type": "number",
            "example": 25.5
          },
          "permanentHourlyRateCurrency": {
            "title": "Currency code",
            "description": "The currency that the permanentHourlyRate is being paid in. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
            "example": "AUD",
            "pattern": "^[A-Z]{3}$",
            "type": "string"
          },
          "casualHourlyRate": {
            "description": "Stores the hourly rate for casual [Jobs](#tag/Jobs). These inputs will be ignored if you also pass in pay Step values.",
            "type": "number",
            "example": 25.5
          },
          "casualHourlyRateCurrency": {
            "title": "Currency code",
            "description": "The currency that the casualHourlyRate is being paid in. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
            "example": "AUD",
            "pattern": "^[A-Z]{3}$",
            "type": "string"
          },
          "annualSalary": {
            "description": "Stores the annual salary for [Jobs](#tag/Jobs). These inputs will be ignored if you also pass in pay Step values.",
            "type": "number",
            "example": 25.5
          },
          "annualSalaryCurrency": {
            "title": "Currency code",
            "description": "The currency that the annualSalary is being paid in. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
            "example": "AUD",
            "pattern": "^[A-Z]{3}$",
            "type": "string"
          },
          "paySteps": {
            "type": "array",
            "description": "An array of Paygrade Step Rates. This will replace the current Pay Steps with a new list.  Providing an `id` for an existing Pay Step will update that record instead of createing a new Pay Step.",
            "items": {
              "properties": {
                "id": {
                  "title": "UUIDv4",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "description": "The identifier string for the Pay Grade Step.  Providing an `id` will update an existing step.  Not providing an `id` will create a new step under the Pay Grade..",
                  "type": "string"
                },
                "name": {
                  "description": "The name assigned to this [Pay Grade](#tags/Pay-Grades) Step.",
                  "example": "Level 1",
                  "type": "string"
                },
                "permanentHourlyRate": {
                  "description": "Stores the hourly rate for permanent [Jobs](#tag/Jobs) for this Step.",
                  "type": "number",
                  "example": 25.5
                },
                "permanentHourlyRateCurrency": {
                  "title": "Currency code",
                  "description": "The currency that the permanentHourlyRate is being paid in. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                  "example": "AUD",
                  "pattern": "^[A-Z]{3}$",
                  "type": "string"
                },
                "casualHourlyRate": {
                  "description": "Stores the hourly rate for casual [Jobs](#tag/Jobs) for this Step.",
                  "type": "number",
                  "example": 25.5
                },
                "casualHourlyRateCurrency": {
                  "title": "Currency code",
                  "description": "The currency that the casualHourlyRate is being paid in. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                  "example": "AUD",
                  "pattern": "^[A-Z]{3}$",
                  "type": "string"
                },
                "annualSalary": {
                  "description": "Stores the annual salary for [Jobs](#tag/Jobs) for this Step.",
                  "type": "number",
                  "example": 25.5
                },
                "annualSalaryCurrency": {
                  "title": "Currency code",
                  "description": "The currency that the annualSalary is being paid in. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                  "example": "AUD",
                  "pattern": "^[A-Z]{3}$",
                  "type": "string"
                }
              },
              "example": {
                "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "name": "Level 1",
                "permanentHourlyRate": 25.5,
                "permanentHourlyRateCurrency": "AUD",
                "casualHourlyRate": 25.5,
                "casualHourlyRateCurrency": "AUD",
                "annualSalary": 25.5,
                "annualSalaryCurrency": "AUD"
              }
            }
          }
        }
      },
      "people_create_request": {
        "type": "object",
        "required": [
          "lastName"
        ],
        "properties": {
          "firstName": {
            "description": "The [Person's](#tags/people) First Name.",
            "example": "Bruce",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "middleName": {
            "description": "The [Person's](#tags/people) Middle Name.",
            "example": "Thomas",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "lastName": {
            "type": "string",
            "description": "The [Person's](#tags/people) Last Name.",
            "example": "Wayne"
          },
          "preferredName": {
            "description": "The [Person's](#tags/people) Preferred Name. Can generally be configured by employees for themselves.",
            "example": "Batman",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "dateOfBirth": {
            "description": "Date of Birth (YYYY-MM-DD).",
            "example": "1939-07-23",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "gender": {
            "description": "Human readable string for the [Person's](#tags/people) gender, e.g. `Male`. Searching is done case-insensitively and 'starts-with' e.g. passing `male` will match with a [Gender](#tags/genders) called \"Male\" as will \"m\" or \"M\". If multiple [Genders](#tags/genders) match the first will be chosen. The gender options available are: `Female`, `Male`, `Non-binary`, `Other`, `Undisclosed`.",
            "type": "string",
            "default": "Other",
            "example": "Other"
          },
          "employeeNumber": {
            "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
            "example": "00001",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "title": {
            "description": "The title to refer to this [Person](#tags/people) as, for example \"Mr\". This is null if not provided and is case insensitive.",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "example": "Mr"
          },
          "emergencyContact": {
            "type": "object",
            "description": "The details for this [Person's](#tags/people) emergency contact.",
            "properties": {
              "name": {
                "description": "The name of the emergency contact.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "relationship": {
                "description": "The relationship this emergency contact has with the [Person](#tags/people).",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "phone": {
                "description": "Phone number of the emergency contact.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "email": {
                "description": "Email of the emergency contact.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            },
            "example": {
              "name": "John Doe",
              "relationship": "Sibling",
              "phone": "0451 234 234",
              "email": "johndoe@example.com"
            }
          },
          "primaryEmailAddress": {
            "description": "Information about this [Person's](#tags/people) primary email address, or null if they have no email information.  The provided email address will be converted to lowercase. The field is also required when creating a user alongside with the person.",
            "deprecated": true,
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "The actual email address. This will be automatically converted to lowercase."
                  },
                  "isPersonal": {
                    "type": "boolean",
                    "title": "Is Personal",
                    "description": "Denotes whether this email is personal or a work email."
                  }
                }
              },
              {
                "type": "null"
              }
            ],
            "example": {
              "email": "bruce.wayne@batman.org",
              "isPersonal": false
            }
          },
          "primaryPhoneNumber": {
            "description": "Information about this [Person's](#tags/people) primary phone number, or null if they have no phone information.",
            "deprecated": true,
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "phone": {
                    "type": "string",
                    "description": "The actual phone number. This number can be prefixed with an area code. When this happens, the system will automatically try to determine the origin country for the phone number",
                    "deprecated": true
                  },
                  "number": {
                    "type": "string",
                    "description": "The actual phone number. This number can be prefixed with an area code. When this happens, the system will automatically try to determine the origin country for the phone number"
                  },
                  "isPersonal": {
                    "type": "boolean",
                    "title": "Is Personal",
                    "description": "Denotes whether this phone is personal or a work phone number.",
                    "default": false,
                    "example": true
                  }
                }
              },
              {
                "type": "null"
              }
            ],
            "example": {
              "number": "0491 570 156",
              "isPersonal": false
            }
          },
          "emailAddresses": {
            "description": "Information about this [Person's](#tags/people) email addresses. This will replace all of their current emails. The provided email addresses will be converted to lowercase. Note that a [Person](#tags/people) must have at least one primary email address.",
            "type": "array",
            "required": [
              "email"
            ],
            "items": {
              "properties": {
                "email": {
                  "type": "string",
                  "description": "The email address associated with this person. This will be automatically converted to lowercase."
                },
                "isPersonal": {
                  "type": "boolean",
                  "title": "Is Personal",
                  "description": "Denotes whether this email is personal or a work email.",
                  "default": false,
                  "example": true
                },
                "isPrimary": {
                  "type": "boolean",
                  "description": "Denotes whether this email is the primary contact email.",
                  "default": false,
                  "example": true
                },
                "customFields": {
                  "description": "The custom field values for this email address",
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "description": "Custom fields will be keyed by their api_name. Custom fields are not required, and any existing model defined custom fields will default to having null values.",
                    "properties": {
                      "value": {
                        "description": "The value for this custom field. This value structure will depend upon the type of the custom field.",
                        "anyOf": [
                          {
                            "type": "null",
                            "description": "The value will be null when a custom field is not provided or is empty for a record. Null can be provided to delete a custom field value."
                          },
                          {
                            "type": "string",
                            "description": "For TEXT and NUMBER records, the value is stored as a string with the value of the record."
                          },
                          {
                            "type": "object",
                            "properties": {
                              "label": {
                                "type": "string",
                                "description": "For SINGLE_SELECT records, the value is stored as an object with the label of the dropdown option. NOTE: Only the label needs to be provided. `id` is not required."
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "labels": {
                                "type": "array",
                                "minItems": 1,
                                "description": "For MULTI_SELECT records, the value is stored as an object with an array of labels for all selected options. NOTE: Only the labels need to be provided. `ids` is not required.",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "person": {
                                  "type": "object",
                                  "description": "For PEOPLE_DROPDOWN records, the value is an object with an array of the [Person](#tag/People) search object and their [Job](#tag/Jobs) search object. This [Person](#tags/people) is specified as a search object, which will match the person who best fits the keys for this object.\n      Multiple keys can be used together to further narrow search results (for example, if there are multiple people with the same name, email address\n      can be used as well to limit to a single person. A validation error will be thrown if this search is unable to be narrowed to a single [Person](#tags/people).",
                                  "example": {
                                    "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                    "name": "Bruce Wayne",
                                    "primaryEmailAddress": "bruce.wayne@example.com",
                                    "employeeNumber": "00001",
                                    "autoIncrementIntellihrId": "1000"
                                  },
                                  "properties": {
                                    "id": {
                                      "title": "UUIDv4",
                                      "maxLength": 36,
                                      "minLength": 36,
                                      "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                      "description": "The identifier string for the [Person](#tags/people) to locate in the system.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the [Person](#tags/people) in intelliHR to search for. Note that the search accounts for differences in name order automatically."
                                    },
                                    "primaryEmailAddress": {
                                      "type": "string",
                                      "description": "The email address flagged as primary for the [Person](#tags/people) within the system."
                                    },
                                    "employeeNumber": {
                                      "type": "string",
                                      "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
                                    },
                                    "autoIncrementIntellihrId": {
                                      "type": "string",
                                      "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
                                    },
                                    "autoIncrementingIntellihrId": {
                                      "type": "string",
                                      "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                                      "deprecated": true
                                    }
                                  }
                                },
                                "job": {
                                  "type": "object",
                                  "description": "The [Job](#tag/Jobs) information of the [Person](#tag/People) is mandatory if the target PEOPLE_DROPDOWN custom field allows selecting individual jobs. If not, The [Job](#tag/Jobs) information is not mandatory.",
                                  "properties": {
                                    "id": {
                                      "title": "UUIDv4",
                                      "maxLength": 36,
                                      "minLength": 36,
                                      "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                      "description": "The identifier string for the [Job](#tag/Job) of this [Job](#tag/Jobs).",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "The name/position title of the [Job](#tag/Jobs).",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  "example": {
                    "text_field_api_name": {
                      "value": "Some text value"
                    },
                    "numeric_field_api_name": {
                      "value": "50"
                    },
                    "single_select_api_name": {
                      "value": {
                        "label": "Drama"
                      }
                    },
                    "multi_select_api_name": {
                      "value": {
                        "labels": [
                          "Bananas",
                          "Apples"
                        ]
                      }
                    },
                    "people_dropdown_api_name": {
                      "value": [
                        {
                          "person": {
                            "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "name": "Bruce Wayne",
                            "primaryEmailAddress": "bruce.wayne@example.com",
                            "employeeNumber": "00001",
                            "autoIncrementIntellihrId": "1000"
                          },
                          "job": {
                            "id": "569904c8-5d36-4c2f-afb0-525eeb8da32d",
                            "name": "Maintenance worker"
                          }
                        },
                        {
                          "person": {
                            "id": "313fde44-f24e-4ec9-9473-0d0f3527222d",
                            "name": "Batman",
                            "primaryEmailAddress": "batman@example.com",
                            "employeeNumber": "00002",
                            "autoIncrementIntellihrId": "1001"
                          },
                          "job": {
                            "id": "653304c8-5d36-4c2f-afb0-525eeb8da32d",
                            "name": "Janitor"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            },
            "example": [
              {
                "email": "bruce.wayne@batman.org",
                "isPersonal": false,
                "isPrimary": true,
                "customFields": {
                  "text_field_api_name": {
                    "value": "Some text value"
                  },
                  "numeric_field_api_name": {
                    "value": "50"
                  },
                  "single_select_api_name": {
                    "value": {
                      "label": "Drama"
                    }
                  },
                  "multi_select_api_name": {
                    "value": {
                      "labels": [
                        "Bananas",
                        "Apples"
                      ]
                    }
                  },
                  "people_dropdown_api_name": {
                    "value": [
                      {
                        "person": {
                          "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                          "name": "Bruce Wayne",
                          "primaryEmailAddress": "bruce.wayne@example.com",
                          "employeeNumber": "00001",
                          "autoIncrementIntellihrId": "1000"
                        },
                        "job": {
                          "id": "569904c8-5d36-4c2f-afb0-525eeb8da32d",
                          "name": "Maintenance worker"
                        }
                      },
                      {
                        "person": {
                          "id": "313fde44-f24e-4ec9-9473-0d0f3527222d",
                          "name": "Batman",
                          "primaryEmailAddress": "batman@example.com",
                          "employeeNumber": "00002",
                          "autoIncrementIntellihrId": "1001"
                        },
                        "job": {
                          "id": "653304c8-5d36-4c2f-afb0-525eeb8da32d",
                          "name": "Janitor"
                        }
                      }
                    ]
                  }
                }
              }
            ]
          },
          "phoneNumbers": {
            "description": "Information about this [Person's](#tags/people) phone numbers. This will replace all of their current phone numbers. Note that a [Person](#tags/people) must have at least one primary phone number.",
            "type": "array",
            "items": {
              "properties": {
                "number": {
                  "type": "string",
                  "description": "The phone number. This number can be prefixed with an area code. When this happens, the system will automatically try to determine the origin country for the phone number"
                },
                "isPersonal": {
                  "type": "boolean",
                  "title": "Is Personal",
                  "description": "Denotes whether this phone is personal or a work phone number.",
                  "default": false,
                  "example": true
                },
                "isPrimary": {
                  "type": "boolean",
                  "description": "Denotes whether this phone is the primary contact phone number.",
                  "default": false,
                  "example": true
                },
                "customFields": {
                  "description": "The custom field values for this phone number",
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "description": "Custom fields will be keyed by their api_name. Custom fields are not required, and any existing model defined custom fields will default to having null values.",
                    "properties": {
                      "value": {
                        "description": "The value for this custom field. This value structure will depend upon the type of the custom field.",
                        "anyOf": [
                          {
                            "type": "null",
                            "description": "The value will be null when a custom field is not provided or is empty for a record. Null can be provided to delete a custom field value."
                          },
                          {
                            "type": "string",
                            "description": "For TEXT and NUMBER records, the value is stored as a string with the value of the record."
                          },
                          {
                            "type": "object",
                            "properties": {
                              "label": {
                                "type": "string",
                                "description": "For SINGLE_SELECT records, the value is stored as an object with the label of the dropdown option. NOTE: Only the label needs to be provided. `id` is not required."
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "labels": {
                                "type": "array",
                                "minItems": 1,
                                "description": "For MULTI_SELECT records, the value is stored as an object with an array of labels for all selected options. NOTE: Only the labels need to be provided. `ids` is not required.",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "person": {
                                  "type": "object",
                                  "description": "For PEOPLE_DROPDOWN records, the value is an object with an array of the [Person](#tag/People) search object and their [Job](#tag/Jobs) search object. This [Person](#tags/people) is specified as a search object, which will match the person who best fits the keys for this object.\n      Multiple keys can be used together to further narrow search results (for example, if there are multiple people with the same name, email address\n      can be used as well to limit to a single person. A validation error will be thrown if this search is unable to be narrowed to a single [Person](#tags/people).",
                                  "example": {
                                    "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                    "name": "Bruce Wayne",
                                    "primaryEmailAddress": "bruce.wayne@example.com",
                                    "employeeNumber": "00001",
                                    "autoIncrementIntellihrId": "1000"
                                  },
                                  "properties": {
                                    "id": {
                                      "title": "UUIDv4",
                                      "maxLength": 36,
                                      "minLength": 36,
                                      "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                      "description": "The identifier string for the [Person](#tags/people) to locate in the system.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the [Person](#tags/people) in intelliHR to search for. Note that the search accounts for differences in name order automatically."
                                    },
                                    "primaryEmailAddress": {
                                      "type": "string",
                                      "description": "The email address flagged as primary for the [Person](#tags/people) within the system."
                                    },
                                    "employeeNumber": {
                                      "type": "string",
                                      "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
                                    },
                                    "autoIncrementIntellihrId": {
                                      "type": "string",
                                      "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
                                    },
                                    "autoIncrementingIntellihrId": {
                                      "type": "string",
                                      "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                                      "deprecated": true
                                    }
                                  }
                                },
                                "job": {
                                  "type": "object",
                                  "description": "The [Job](#tag/Jobs) information of the [Person](#tag/People) is mandatory if the target PEOPLE_DROPDOWN custom field allows selecting individual jobs. If not, The [Job](#tag/Jobs) information is not mandatory.",
                                  "properties": {
                                    "id": {
                                      "title": "UUIDv4",
                                      "maxLength": 36,
                                      "minLength": 36,
                                      "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                      "description": "The identifier string for the [Job](#tag/Job) of this [Job](#tag/Jobs).",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "The name/position title of the [Job](#tag/Jobs).",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  "example": {
                    "text_field_api_name": {
                      "value": "Some text value"
                    },
                    "numeric_field_api_name": {
                      "value": "50"
                    },
                    "single_select_api_name": {
                      "value": {
                        "label": "Drama"
                      }
                    },
                    "multi_select_api_name": {
                      "value": {
                        "labels": [
                          "Bananas",
                          "Apples"
                        ]
                      }
                    },
                    "people_dropdown_api_name": {
                      "value": [
                        {
                          "person": {
                            "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "name": "Bruce Wayne",
                            "primaryEmailAddress": "bruce.wayne@example.com",
                            "employeeNumber": "00001",
                            "autoIncrementIntellihrId": "1000"
                          },
                          "job": {
                            "id": "569904c8-5d36-4c2f-afb0-525eeb8da32d",
                            "name": "Maintenance worker"
                          }
                        },
                        {
                          "person": {
                            "id": "313fde44-f24e-4ec9-9473-0d0f3527222d",
                            "name": "Batman",
                            "primaryEmailAddress": "batman@example.com",
                            "employeeNumber": "00002",
                            "autoIncrementIntellihrId": "1001"
                          },
                          "job": {
                            "id": "653304c8-5d36-4c2f-afb0-525eeb8da32d",
                            "name": "Janitor"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            },
            "example": [
              {
                "number": "0491 570 156",
                "isPersonal": false,
                "isPrimary": true,
                "customFields": {
                  "text_field_api_name": {
                    "value": "Some text value"
                  },
                  "numeric_field_api_name": {
                    "value": "50"
                  },
                  "single_select_api_name": {
                    "value": {
                      "label": "Drama"
                    }
                  },
                  "multi_select_api_name": {
                    "value": {
                      "labels": [
                        "Bananas",
                        "Apples"
                      ]
                    }
                  },
                  "people_dropdown_api_name": {
                    "value": [
                      {
                        "person": {
                          "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                          "name": "Bruce Wayne",
                          "primaryEmailAddress": "bruce.wayne@example.com",
                          "employeeNumber": "00001",
                          "autoIncrementIntellihrId": "1000"
                        },
                        "job": {
                          "id": "569904c8-5d36-4c2f-afb0-525eeb8da32d",
                          "name": "Maintenance worker"
                        }
                      },
                      {
                        "person": {
                          "id": "313fde44-f24e-4ec9-9473-0d0f3527222d",
                          "name": "Batman",
                          "primaryEmailAddress": "batman@example.com",
                          "employeeNumber": "00002",
                          "autoIncrementIntellihrId": "1001"
                        },
                        "job": {
                          "id": "653304c8-5d36-4c2f-afb0-525eeb8da32d",
                          "name": "Janitor"
                        }
                      }
                    ]
                  }
                }
              }
            ]
          },
          "addresses": {
            "description": "Information about this [Person's](#tags/people) addresses. This will insert all of their current addresses.",
            "type": "array",
            "items": {
              "required": [
                "addressType",
                "country"
              ],
              "properties": {
                "addressType": {
                  "type": "string",
                  "description": "Enum: `Home`, `Postal`.\nThe type of address."
                },
                "fullAddress": {
                  "type": "string",
                  "description": "The full readable address, minus the postcode and country.  This value will be resolved against Google maps api and will populate the state, suburb and street if a match is found.  You can override these results if you also pass the corresponding fields you wish to set."
                },
                "country": {
                  "type": "string",
                  "description": "The country the address is in."
                },
                "postcode": {
                  "type": "string",
                  "description": "The postcode of the address."
                },
                "state": {
                  "type": "string",
                  "description": "The state the address is in. This field is required if the fullAddress field is not provided."
                },
                "street": {
                  "type": "string",
                  "description": "The street the address is on. This field is required if the fullAddress field is not provided."
                },
                "suburb": {
                  "type": "string",
                  "description": "The suburb the address is in. This field is required if the fullAddress field is not provided."
                },
                "isPrimary": {
                  "type": "boolean",
                  "description": "Denotes whether this address is the primary. By default, the first address in the array \n              will be set as the primary if all addresses are set with isPrimary: false.",
                  "default": false,
                  "example": true
                },
                "customFields": {
                  "description": "The custom field values for this address",
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "description": "Custom fields will be keyed by their api_name. Custom fields are not required, and any existing model defined custom fields will default to having null values.",
                    "properties": {
                      "value": {
                        "description": "The value for this custom field. This value structure will depend upon the type of the custom field.",
                        "anyOf": [
                          {
                            "type": "null",
                            "description": "The value will be null when a custom field is not provided or is empty for a record. Null can be provided to delete a custom field value."
                          },
                          {
                            "type": "string",
                            "description": "For TEXT and NUMBER records, the value is stored as a string with the value of the record."
                          },
                          {
                            "type": "object",
                            "properties": {
                              "label": {
                                "type": "string",
                                "description": "For SINGLE_SELECT records, the value is stored as an object with the label of the dropdown option. NOTE: Only the label needs to be provided. `id` is not required."
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "labels": {
                                "type": "array",
                                "minItems": 1,
                                "description": "For MULTI_SELECT records, the value is stored as an object with an array of labels for all selected options. NOTE: Only the labels need to be provided. `ids` is not required.",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "person": {
                                  "type": "object",
                                  "description": "For PEOPLE_DROPDOWN records, the value is an object with an array of the [Person](#tag/People) search object and their [Job](#tag/Jobs) search object. This [Person](#tags/people) is specified as a search object, which will match the person who best fits the keys for this object.\n      Multiple keys can be used together to further narrow search results (for example, if there are multiple people with the same name, email address\n      can be used as well to limit to a single person. A validation error will be thrown if this search is unable to be narrowed to a single [Person](#tags/people).",
                                  "example": {
                                    "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                    "name": "Bruce Wayne",
                                    "primaryEmailAddress": "bruce.wayne@example.com",
                                    "employeeNumber": "00001",
                                    "autoIncrementIntellihrId": "1000"
                                  },
                                  "properties": {
                                    "id": {
                                      "title": "UUIDv4",
                                      "maxLength": 36,
                                      "minLength": 36,
                                      "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                      "description": "The identifier string for the [Person](#tags/people) to locate in the system.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the [Person](#tags/people) in intelliHR to search for. Note that the search accounts for differences in name order automatically."
                                    },
                                    "primaryEmailAddress": {
                                      "type": "string",
                                      "description": "The email address flagged as primary for the [Person](#tags/people) within the system."
                                    },
                                    "employeeNumber": {
                                      "type": "string",
                                      "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
                                    },
                                    "autoIncrementIntellihrId": {
                                      "type": "string",
                                      "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
                                    },
                                    "autoIncrementingIntellihrId": {
                                      "type": "string",
                                      "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                                      "deprecated": true
                                    }
                                  }
                                },
                                "job": {
                                  "type": "object",
                                  "description": "The [Job](#tag/Jobs) information of the [Person](#tag/People) is mandatory if the target PEOPLE_DROPDOWN custom field allows selecting individual jobs. If not, The [Job](#tag/Jobs) information is not mandatory.",
                                  "properties": {
                                    "id": {
                                      "title": "UUIDv4",
                                      "maxLength": 36,
                                      "minLength": 36,
                                      "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                      "description": "The identifier string for the [Job](#tag/Job) of this [Job](#tag/Jobs).",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "The name/position title of the [Job](#tag/Jobs).",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  "example": {
                    "text_field_api_name": {
                      "value": "Some text value"
                    },
                    "numeric_field_api_name": {
                      "value": "50"
                    },
                    "single_select_api_name": {
                      "value": {
                        "label": "Drama"
                      }
                    },
                    "multi_select_api_name": {
                      "value": {
                        "labels": [
                          "Bananas",
                          "Apples"
                        ]
                      }
                    },
                    "people_dropdown_api_name": {
                      "value": [
                        {
                          "person": {
                            "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "name": "Bruce Wayne",
                            "primaryEmailAddress": "bruce.wayne@example.com",
                            "employeeNumber": "00001",
                            "autoIncrementIntellihrId": "1000"
                          },
                          "job": {
                            "id": "569904c8-5d36-4c2f-afb0-525eeb8da32d",
                            "name": "Maintenance worker"
                          }
                        },
                        {
                          "person": {
                            "id": "313fde44-f24e-4ec9-9473-0d0f3527222d",
                            "name": "Batman",
                            "primaryEmailAddress": "batman@example.com",
                            "employeeNumber": "00002",
                            "autoIncrementIntellihrId": "1001"
                          },
                          "job": {
                            "id": "653304c8-5d36-4c2f-afb0-525eeb8da32d",
                            "name": "Janitor"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            },
            "example": [
              {
                "addressType": "Home",
                "fullAddress": "Queen Street, Brisbane QLD",
                "country": "Australia",
                "postcode": "4000",
                "state": "Queensland",
                "street": "Queen Street",
                "suburb": "Brisbane",
                "isPrimary": true,
                "customFields": {
                  "text_field_api_name": {
                    "value": "Some text value"
                  },
                  "numeric_field_api_name": {
                    "value": "50"
                  },
                  "single_select_api_name": {
                    "value": {
                      "label": "Drama"
                    }
                  },
                  "multi_select_api_name": {
                    "value": {
                      "labels": [
                        "Bananas",
                        "Apples"
                      ]
                    }
                  },
                  "people_dropdown_api_name": {
                    "value": [
                      {
                        "person": {
                          "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                          "name": "Bruce Wayne",
                          "primaryEmailAddress": "bruce.wayne@example.com",
                          "employeeNumber": "00001",
                          "autoIncrementIntellihrId": "1000"
                        },
                        "job": {
                          "id": "569904c8-5d36-4c2f-afb0-525eeb8da32d",
                          "name": "Maintenance worker"
                        }
                      },
                      {
                        "person": {
                          "id": "313fde44-f24e-4ec9-9473-0d0f3527222d",
                          "name": "Batman",
                          "primaryEmailAddress": "batman@example.com",
                          "employeeNumber": "00002",
                          "autoIncrementIntellihrId": "1001"
                        },
                        "job": {
                          "id": "653304c8-5d36-4c2f-afb0-525eeb8da32d",
                          "name": "Janitor"
                        }
                      }
                    ]
                  }
                }
              }
            ]
          },
          "customFields": {
            "description": "The custom field values for this [Person](#tags/people)",
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Custom fields will be keyed by their api_name. Custom fields are not required, and any existing model defined custom fields will default to having null values.",
              "properties": {
                "value": {
                  "description": "The value for this custom field. This value structure will depend upon the type of the custom field.",
                  "anyOf": [
                    {
                      "type": "null",
                      "description": "The value will be null when a custom field is not provided or is empty for a record. Null can be provided to delete a custom field value."
                    },
                    {
                      "type": "string",
                      "description": "For TEXT and NUMBER records, the value is stored as a string with the value of the record."
                    },
                    {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string",
                          "description": "For SINGLE_SELECT records, the value is stored as an object with the label of the dropdown option. NOTE: Only the label needs to be provided. `id` is not required."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "labels": {
                          "type": "array",
                          "minItems": 1,
                          "description": "For MULTI_SELECT records, the value is stored as an object with an array of labels for all selected options. NOTE: Only the labels need to be provided. `ids` is not required.",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "person": {
                            "type": "object",
                            "description": "For PEOPLE_DROPDOWN records, the value is an object with an array of the [Person](#tag/People) search object and their [Job](#tag/Jobs) search object. This [Person](#tags/people) is specified as a search object, which will match the person who best fits the keys for this object.\n      Multiple keys can be used together to further narrow search results (for example, if there are multiple people with the same name, email address\n      can be used as well to limit to a single person. A validation error will be thrown if this search is unable to be narrowed to a single [Person](#tags/people).",
                            "example": {
                              "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                              "name": "Bruce Wayne",
                              "primaryEmailAddress": "bruce.wayne@example.com",
                              "employeeNumber": "00001",
                              "autoIncrementIntellihrId": "1000"
                            },
                            "properties": {
                              "id": {
                                "title": "UUIDv4",
                                "maxLength": 36,
                                "minLength": 36,
                                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                "description": "The identifier string for the [Person](#tags/people) to locate in the system.",
                                "type": "string"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the [Person](#tags/people) in intelliHR to search for. Note that the search accounts for differences in name order automatically."
                              },
                              "primaryEmailAddress": {
                                "type": "string",
                                "description": "The email address flagged as primary for the [Person](#tags/people) within the system."
                              },
                              "employeeNumber": {
                                "type": "string",
                                "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
                              },
                              "autoIncrementIntellihrId": {
                                "type": "string",
                                "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
                              },
                              "autoIncrementingIntellihrId": {
                                "type": "string",
                                "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                                "deprecated": true
                              }
                            }
                          },
                          "job": {
                            "type": "object",
                            "description": "The [Job](#tag/Jobs) information of the [Person](#tag/People) is mandatory if the target PEOPLE_DROPDOWN custom field allows selecting individual jobs. If not, The [Job](#tag/Jobs) information is not mandatory.",
                            "properties": {
                              "id": {
                                "title": "UUIDv4",
                                "maxLength": 36,
                                "minLength": 36,
                                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                "description": "The identifier string for the [Job](#tag/Job) of this [Job](#tag/Jobs).",
                                "type": "string"
                              },
                              "name": {
                                "description": "The name/position title of the [Job](#tag/Jobs).",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            },
            "example": {
              "text_field_api_name": {
                "value": "Some text value"
              },
              "numeric_field_api_name": {
                "value": "50"
              },
              "single_select_api_name": {
                "value": {
                  "label": "Drama"
                }
              },
              "multi_select_api_name": {
                "value": {
                  "labels": [
                    "Bananas",
                    "Apples"
                  ]
                }
              },
              "people_dropdown_api_name": {
                "value": [
                  {
                    "person": {
                      "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "name": "Bruce Wayne",
                      "primaryEmailAddress": "bruce.wayne@example.com",
                      "employeeNumber": "00001",
                      "autoIncrementIntellihrId": "1000"
                    },
                    "job": {
                      "id": "569904c8-5d36-4c2f-afb0-525eeb8da32d",
                      "name": "Maintenance worker"
                    }
                  },
                  {
                    "person": {
                      "id": "313fde44-f24e-4ec9-9473-0d0f3527222d",
                      "name": "Batman",
                      "primaryEmailAddress": "batman@example.com",
                      "employeeNumber": "00002",
                      "autoIncrementIntellihrId": "1001"
                    },
                    "job": {
                      "id": "653304c8-5d36-4c2f-afb0-525eeb8da32d",
                      "name": "Janitor"
                    }
                  }
                ]
              }
            }
          },
          "medicalConditions": {
            "description": "The medical conditions that this person has",
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "body"
              ],
              "properties": {
                "body": {
                  "type": "string",
                  "description": "The name and description of the medical condition",
                  "example": "Mild Insomnia"
                },
                "isPublic": {
                  "type": "boolean",
                  "description": "If the medical condition is visible to anyone with permission to view this person's profile. Defaults to false.",
                  "default": false,
                  "example": false
                }
              }
            }
          },
          "workRight": {
            "type": "object",
            "description": "[Work Right](#tag/Work-Rights) to whom this [Person](#tag/Person) belongs. This [Work Right](#tag/Work-Rights) is specified as a search object, which will match the work right which best fits the keys for this object. Multiple keys can be used together to further narrow search results.",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Work Right](#tag/Work-Rights) to whom this [Person](#tag/Person) belongs.",
                "type": "string"
              },
              "name": {
                "type": "string",
                "description": "The name of the [Work Right](#tag/Work-Rights).",
                "example": "Australian Citizen"
              }
            }
          },
          "workRightExpiryDate": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "The date this [Work Right](#tag/Work-Rights) will expire for this [Person](#tag/Person) (YYYY-MM-DD).",
            "example": "2022-06-23"
          },
          "userAccount": {
            "description": "Details about this [Person's](#tags/people) linked user account. Including this object will create a user account linked to this person, allowing them to login to the platform. If excluded the person will be created without an accompanying user account.",
            "oneOf": [
              {
                "type": "object",
                "required": [
                  "username"
                ],
                "properties": {
                  "isEnabled": {
                    "type": "boolean",
                    "default": false,
                    "description": "Denotes whether this account will be active after creation. This will default to false if no value passed."
                  },
                  "username": {
                    "type": "string",
                    "description": "The unique name of this user. The user creation will fail if another user account with the same username is found."
                  },
                  "sendWelcomeEmail": {
                    "type": "boolean",
                    "default": false,
                    "description": "Denotes whether this account is will receive a welcome email."
                  },
                  "permissionGroups": {
                    "description": "The id's(UUIDv4) of the permission groups to assign this user to.",
                    "oneOf": [
                      {
                        "type": "array",
                        "items": {
                          "type": "string",
                          "format": "uuid"
                        }
                      },
                      {
                        "type": "null"
                      }
                    ]
                  }
                }
              },
              {
                "type": "null"
              }
            ],
            "example": {
              "isEnabled": true,
              "username": "BruceWayne",
              "sendWelcomeEmail": true,
              "permissionGroups": [
                "fd652f39-db15-4a12-8c71-a48358ee9709"
              ]
            }
          }
        }
      },
      "people_list": {
        "type": "object",
        "title": "List People",
        "properties": {
          "data": {
            "type": "array",
            "title": "data",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "title": "UUIDv4",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "description": "The identifier string for the [Person](#tags/people).",
                  "type": "string"
                },
                "displayName": {
                  "type": "string",
                  "description": "Name to display throughout the system for this [Person](#tags/people). Generally follows the pattern preferredName (firstName) lastName, but can be configured on a tenant-wide basis to be a different format.",
                  "example": "Batman (Bruce) Wayne"
                },
                "firstName": {
                  "description": "The [Person's](#tags/people) First Name.",
                  "example": "Bruce",
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "middleName": {
                  "description": "The [Person's](#tags/people) Middle Name.",
                  "example": "Thomas",
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "lastName": {
                  "type": "string",
                  "description": "The [Person's](#tags/people) Last Name.",
                  "example": "Wayne"
                },
                "preferredName": {
                  "description": "The [Person's](#tags/people) Preferred Name. Can generally be configured by employees for themselves.",
                  "example": "Batman",
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "dateOfBirth": {
                  "description": "Date of Birth (YYYY-MM-DD).",
                  "example": "1939-07-23",
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "gender": {
                  "type": "string",
                  "description": "Human readable string for the [Person's](#tags/people) gender. Enum: `Female`, `Male`, `Non-binary`, `Other`, `Undisclosed`.",
                  "example": "Male"
                },
                "isSupervisor": {
                  "type": "boolean",
                  "description": "If this [Person](#tags/people) is currently a supervisor or not",
                  "example": false
                },
                "employeeNumber": {
                  "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                  "example": "00001",
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "autoIncrementIntellihrId": {
                  "type": "number",
                  "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                  "example": 1000
                },
                "title": {
                  "description": "The title to refer to this [Person](#tags/people) as, for example \"Mr\". This is null if not provided.",
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "example": "Mr"
                },
                "medicalConditions": {
                  "type": "array",
                  "description": "An array of medical conditions that belong to this Person.",
                  "items": {
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the Person Medical Condition.",
                        "type": "string"
                      },
                      "body": {
                        "type": "string",
                        "description": "The name/description of the medical condition",
                        "example": "Mild Insomnia"
                      },
                      "isPublic": {
                        "type": "boolean",
                        "description": "If the medical condition is public or private.",
                        "example": false
                      }
                    }
                  }
                },
                "emailAddresses": {
                  "type": "array",
                  "description": "An array of email addresses that belong to this Person.",
                  "items": {
                    "properties": {
                      "email": {
                        "description": "The actual email address.",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "null"
                          }
                        ],
                        "example": "bruce.wayne@batman.org"
                      },
                      "isPrimary": {
                        "type": "boolean",
                        "description": "If this is a primary email address.",
                        "example": true
                      },
                      "isPersonal": {
                        "type": "boolean",
                        "description": "If this is a personal email address.",
                        "example": false
                      },
                      "customFields": {
                        "description": "The custom field values of this [Person](#tags/people) email address.",
                        "allOf": [
                          {
                            "$ref": "#/definitions/customFieldsResponse"
                          }
                        ]
                      }
                    }
                  }
                },
                "emergencyContact": {
                  "type": "object",
                  "description": "The details for this [Person's](#tags/people) emergency contact.",
                  "properties": {
                    "name": {
                      "description": "The name of the emergency contact.",
                      "example": "Selina Kyle",
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "relationship": {
                      "description": "The relationship this emergency contact has with the [Person](#tags/people).",
                      "example": "Colleague",
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "phone": {
                      "description": "Phone number of the emergency contact.",
                      "example": "00 0000 0000",
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "email": {
                      "description": "Email of the emergency contact.",
                      "example": "selena.kyle@batman.org",
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  }
                },
                "employmentStatus": {
                  "description": "The current status of this [Persons](#tags/people) within the organisation. Enum: `Current Staff`, `Exiting Staff`, `No Job Records`, `Past Staff`, `Returning Staff`, `Upcoming Staff`.",
                  "example": "Current Staff",
                  "type": "string"
                },
                "jobs": {
                  "type": "array",
                  "description": "An array of simple [Job](#tags/jobs) entries associated with this Person in reverse chronological order of start date.",
                  "items": {
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the [Job](#tags/jobs).",
                        "type": "string"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name/position title of this [Job](#tags/jobs).",
                        "example": "Software Engineer"
                      },
                      "startDate": {
                        "title": "RFC3339 datetime",
                        "example": "2015-03-01T22:30:00+00:00",
                        "description": "The date this [Job](#tags/jobs) started or will start within the organisation. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "endDate": {
                        "title": "RFC3339 datetime",
                        "example": "2015-03-01T22:30:00+00:00",
                        "description": "The date this [Job](#tags/jobs) ended or will end within the organisation or null if there is no end date. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                        "oneOf": [
                          {
                            "type": "string"
                          },
                          {
                            "type": "null"
                          }
                        ]
                      },
                      "jobStatus": {
                        "type": "string",
                        "description": "The current status of this [Job](#tags/jobs) within this organisation. Enum: `Past Job`, `Future Job`, `Ending Job`, `Current Job`.",
                        "example": "Current Job"
                      },
                      "isOnExtendedLeave": {
                        "type": "boolean",
                        "description": "The current leave status of this [Job](#tags/jobs).",
                        "example": true
                      },
                      "isPrimaryJob": {
                        "type": "boolean",
                        "description": "Whether this job is the primary job",
                        "example": true
                      },
                      "link": {
                        "type": "string",
                        "title": "URL",
                        "description": "Link on the public api to get more information on this piece of data.",
                        "example": "https://api.intellihr.io/v1/jobs/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                      }
                    }
                  }
                },
                "workRights": {
                  "type": "object",
                  "description": "Show the working rights of the person",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The type of the working rights",
                      "example": "Permanent Resident"
                    },
                    "country": {
                      "type": "string",
                      "description": "The country where the working rights are valid",
                      "example": "New Zealand"
                    },
                    "expirationDate": {
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "null"
                        }
                      ],
                      "description": "The date the working rights are expiring",
                      "example": "2022-12-31"
                    }
                  }
                },
                "primaryEmailAddress": {
                  "description": "Information about this Person's primary email address, or null if they have no email information.",
                  "oneOf": [
                    {
                      "type": "null"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "description": "The actual email address."
                        },
                        "isPersonal": {
                          "type": "boolean",
                          "description": "Denotes whether this email is personal or a work email."
                        }
                      }
                    }
                  ],
                  "example": {
                    "email": "bruce.wayne@batman.org",
                    "isPersonal": false
                  }
                },
                "primaryPhoneNumber": {
                  "description": "Information about this Person's primary phone number, or null if they have no phone numbers.",
                  "oneOf": [
                    {
                      "type": "null"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "number": {
                          "type": "string",
                          "description": "The actual phone number."
                        },
                        "fullNumber": {
                          "type": "string",
                          "description": "The actual phone number with the area code (if registered)."
                        },
                        "isPersonal": {
                          "type": "boolean",
                          "description": "Denotes whether this phone number is a personal or work number."
                        }
                      }
                    }
                  ],
                  "example": {
                    "number": "0491 570 156",
                    "fullNumber": "+61 491 570 156",
                    "isPersonal": false
                  }
                },
                "addresses": {
                  "type": "array",
                  "description": "An array of addresses that belong to this Person.",
                  "items": {
                    "properties": {
                      "addressType": {
                        "type": "string",
                        "description": "The type of address.",
                        "example": "Home"
                      },
                      "fullAddress": {
                        "type": "string",
                        "description": "The full address.",
                        "example": "Queen Street, Brisbane QLD"
                      },
                      "country": {
                        "type": "string",
                        "description": "The country of the address.",
                        "example": "Australia"
                      },
                      "postcode": {
                        "type": "string",
                        "description": "The postal code for the address.",
                        "example": "4000"
                      },
                      "state": {
                        "type": "string",
                        "description": "The state of the address.",
                        "example": "Queensland"
                      },
                      "street": {
                        "type": "string",
                        "description": "The street that the address is on.",
                        "example": "Queen Street"
                      },
                      "suburb": {
                        "type": "string",
                        "description": "The suburb of the address.",
                        "example": "Brisbane"
                      },
                      "isPrimary": {
                        "type": "boolean",
                        "description": "If this is a primary address.",
                        "example": true
                      },
                      "customFields": {
                        "description": "The custom field values of this [Person](#tags/people) address.",
                        "allOf": [
                          {
                            "$ref": "#/definitions/customFieldsResponse"
                          }
                        ]
                      }
                    }
                  }
                },
                "phoneNumbers": {
                  "type": "array",
                  "description": "An array of phone numbers that belong to this Person.",
                  "items": {
                    "properties": {
                      "number": {
                        "type": "string",
                        "description": "The actual phone number.",
                        "example": "0491 570 156"
                      },
                      "fullNumber": {
                        "type": "string",
                        "description": "The actual phone number with the area code (if registered).",
                        "example": "+61 491 570 156"
                      },
                      "isPrimary": {
                        "type": "boolean",
                        "description": "If this is a primary phone number.",
                        "example": true
                      },
                      "isPersonal": {
                        "type": "boolean",
                        "description": "If this is a personal phone number.",
                        "example": false
                      },
                      "customFields": {
                        "description": "The custom field values of this [Person](#tags/people) phone number.",
                        "allOf": [
                          {
                            "$ref": "#/definitions/customFieldsResponse"
                          }
                        ]
                      }
                    }
                  }
                },
                "userAccount": {
                  "description": "Details about this [Person's](#tags/people) linked user account. Including this object will create a user account linked to this person, allowing them to login to the platform. If excluded the person will be created without an accompanying user account.",
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "title": "UUIDv4",
                          "maxLength": 36,
                          "minLength": 36,
                          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                          "description": "The identifier string for the [User](#tags/users).",
                          "type": "string"
                        },
                        "username": {
                          "type": "string",
                          "description": "The unique name of this user."
                        },
                        "isEnabled": {
                          "type": "boolean",
                          "description": "Specifies whether this [User](#tags/users) account is active. When disabled, you can no longer sign in using this account."
                        },
                        "userPermissionGroups": {
                          "type": "array",
                          "description": "The array of user permission groups containing the [Permission Group's](#tags/permission-groups) assigned to this user.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "title": "UUIDv4",
                                "maxLength": 36,
                                "minLength": 36,
                                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                "description": "The identifier string for the User Permission Group.",
                                "type": "string"
                              },
                              "permissionGroup": {
                                "type": "object",
                                "description": "The [Permission Group](#tags/permission-groups) assigned to this user.",
                                "properties": {
                                  "id": {
                                    "title": "UUIDv4",
                                    "maxLength": 36,
                                    "minLength": 36,
                                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                    "description": "The identifier string for the [Permission Group](#tags/permission-groups).",
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "customFields": {
                  "description": "The custom field values for this [Person](#tags/people)",
                  "allOf": [
                    {
                      "$ref": "#/definitions/customFieldsResponse"
                    }
                  ]
                },
                "createdAt": {
                  "title": "RFC3339 datetime",
                  "example": "2015-03-01T22:30:00+00:00",
                  "description": "When this record was created. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                  "type": "string"
                },
                "updatedAt": {
                  "title": "RFC3339 datetime",
                  "example": "2015-03-01T22:30:00+00:00",
                  "description": "When this record was last updated. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                  "type": "string"
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "pagination": {
                "type": "object",
                "description": "Contains information related to the pagination of the response",
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total items count",
                    "minimum": 0,
                    "example": 50
                  },
                  "count": {
                    "type": "integer",
                    "description": "Number of items for current page",
                    "minimum": 0,
                    "example": 10
                  },
                  "per_page": {
                    "type": "integer",
                    "description": "Items per page limit",
                    "minimum": 0,
                    "example": 10
                  },
                  "current_page": {
                    "type": "integer",
                    "description": "Current page",
                    "minimum": 1,
                    "example": 3
                  },
                  "total_pages": {
                    "type": "integer",
                    "description": "Total number of pages",
                    "minimum": 1,
                    "example": 5
                  }
                }
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          },
          "links": {
            "type": "object",
            "description": "Links to other related resources.",
            "properties": {
              "self": {
                "type": "string",
                "description": "The current page URL",
                "example": "https://api.intellihr.io/v1/people?limit=1&page=3"
              },
              "first": {
                "type": "string",
                "description": "The first page URL",
                "example": "https://api.intellihr.io/v1/people?limit=1&page=1"
              },
              "prev": {
                "type": "string",
                "description": "The previous page URL",
                "example": "https://api.intellihr.io/v1/people?limit=1&page=2"
              },
              "next": {
                "type": "string",
                "description": "The next page URL",
                "example": "https://api.intellihr.io/v1/people?limit=1&page=4"
              },
              "last": {
                "type": "string",
                "description": "The last page URL",
                "example": "https://api.intellihr.io/v1/people?limit=1&page=5"
              }
            }
          }
        }
      },
      "people": {
        "type": "object",
        "title": "Single Person",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Person](#tags/people).",
                "type": "string"
              },
              "displayName": {
                "type": "string",
                "description": "Name to display throughout the system for this [Person](#tags/people). Generally follows the pattern preferredName (firstName) lastName, but can be configured on a tenant-wide basis to be a different format.",
                "example": "Batman (Bruce) Wayne"
              },
              "firstName": {
                "description": "The [Person's](#tags/people) First Name.",
                "example": "Bruce",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "middleName": {
                "description": "The [Person's](#tags/people) Middle Name.",
                "example": "Thomas",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "lastName": {
                "type": "string",
                "description": "The [Person's](#tags/people) Last Name.",
                "example": "Wayne"
              },
              "preferredName": {
                "description": "The [Person's](#tags/people) Preferred Name. Can generally be configured by employees for themselves.",
                "example": "Batman",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "dateOfBirth": {
                "description": "Date of Birth (YYYY-MM-DD).",
                "example": "1939-07-23",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "gender": {
                "type": "string",
                "description": "Human readable string for the [Person's](#tags/people) gender. Enum: `Female`, `Male`, `Non-binary`, `Other`, `Undisclosed`.",
                "example": "Male"
              },
              "isSupervisor": {
                "type": "boolean",
                "description": "If this [Person](#tags/people) is currently a supervisor or not",
                "example": false
              },
              "employeeNumber": {
                "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                "example": "00001",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "autoIncrementIntellihrId": {
                "type": "number",
                "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                "example": 1000
              },
              "title": {
                "description": "The title to refer to this [Person](#tags/people) as, for example \"Mr\". This is null if not provided.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "example": "Mr"
              },
              "medicalConditions": {
                "type": "array",
                "description": "An array of medical conditions that belong to this Person.",
                "items": {
                  "properties": {
                    "id": {
                      "title": "UUIDv4",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "description": "The identifier string for the Person Medical Condition.",
                      "type": "string"
                    },
                    "body": {
                      "type": "string",
                      "description": "The name/description of the medical condition",
                      "example": "Mild Insomnia"
                    },
                    "isPublic": {
                      "type": "boolean",
                      "description": "If the medical condition is public or private.",
                      "example": false
                    }
                  }
                }
              },
              "emailAddresses": {
                "type": "array",
                "description": "An array of email addresses that belong to this Person.",
                "items": {
                  "properties": {
                    "email": {
                      "description": "The actual email address.",
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "null"
                        }
                      ],
                      "example": "bruce.wayne@batman.org"
                    },
                    "isPrimary": {
                      "type": "boolean",
                      "description": "If this is a primary email address.",
                      "example": true
                    },
                    "isPersonal": {
                      "type": "boolean",
                      "description": "If this is a personal email address.",
                      "example": false
                    },
                    "customFields": {
                      "description": "The custom field values of this [Person](#tags/people) email address.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/customFieldsResponse"
                        }
                      ]
                    }
                  }
                }
              },
              "emergencyContact": {
                "type": "object",
                "description": "The details for this [Person's](#tags/people) emergency contact.",
                "properties": {
                  "name": {
                    "description": "The name of the emergency contact.",
                    "example": "Selina Kyle",
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "relationship": {
                    "description": "The relationship this emergency contact has with the [Person](#tags/people).",
                    "example": "Colleague",
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "phone": {
                    "description": "Phone number of the emergency contact.",
                    "example": "00 0000 0000",
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "email": {
                    "description": "Email of the emergency contact.",
                    "example": "selena.kyle@batman.org",
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  }
                }
              },
              "employmentStatus": {
                "description": "The current status of this [Persons](#tags/people) within the organisation. Enum: `Current Staff`, `Exiting Staff`, `No Job Records`, `Past Staff`, `Returning Staff`, `Upcoming Staff`.",
                "example": "Current Staff",
                "type": "string"
              },
              "jobs": {
                "type": "array",
                "description": "An array of simple [Job](#tags/jobs) entries associated with this Person in reverse chronological order of start date.",
                "items": {
                  "properties": {
                    "id": {
                      "title": "UUIDv4",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "description": "The identifier string for the [Job](#tags/jobs).",
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name/position title of this [Job](#tags/jobs).",
                      "example": "Software Engineer"
                    },
                    "startDate": {
                      "title": "RFC3339 datetime",
                      "example": "2015-03-01T22:30:00+00:00",
                      "description": "The date this [Job](#tags/jobs) started or will start within the organisation. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "endDate": {
                      "title": "RFC3339 datetime",
                      "example": "2015-03-01T22:30:00+00:00",
                      "description": "The date this [Job](#tags/jobs) ended or will end within the organisation or null if there is no end date. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "jobStatus": {
                      "type": "string",
                      "description": "The current status of this [Job](#tags/jobs) within this organisation. Enum: `Past Job`, `Future Job`, `Ending Job`, `Current Job`.",
                      "example": "Current Job"
                    },
                    "isOnExtendedLeave": {
                      "type": "boolean",
                      "description": "The current leave status of this [Job](#tags/jobs).",
                      "example": true
                    },
                    "isPrimaryJob": {
                      "type": "boolean",
                      "description": "Whether this job is the primary job",
                      "example": true
                    },
                    "link": {
                      "type": "string",
                      "title": "URL",
                      "description": "Link on the public api to get more information on this piece of data.",
                      "example": "https://api.intellihr.io/v1/jobs/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                    }
                  }
                }
              },
              "workRights": {
                "type": "object",
                "description": "Show the working rights of the person",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The type of the working rights",
                    "example": "Permanent Resident"
                  },
                  "country": {
                    "type": "string",
                    "description": "The country where the working rights are valid",
                    "example": "New Zealand"
                  },
                  "expirationDate": {
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ],
                    "description": "The date the working rights are expiring",
                    "example": "2022-12-31"
                  }
                }
              },
              "primaryEmailAddress": {
                "description": "Information about this Person's primary email address, or null if they have no email information.",
                "oneOf": [
                  {
                    "type": "null"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "description": "The actual email address."
                      },
                      "isPersonal": {
                        "type": "boolean",
                        "description": "Denotes whether this email is personal or a work email."
                      }
                    }
                  }
                ],
                "example": {
                  "email": "bruce.wayne@batman.org",
                  "isPersonal": false
                }
              },
              "primaryPhoneNumber": {
                "description": "Information about this Person's primary phone number, or null if they have no phone numbers.",
                "oneOf": [
                  {
                    "type": "null"
                  },
                  {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "description": "The actual phone number."
                      },
                      "fullNumber": {
                        "type": "string",
                        "description": "The actual phone number with the area code (if registered)."
                      },
                      "isPersonal": {
                        "type": "boolean",
                        "description": "Denotes whether this phone number is a personal or work number."
                      }
                    }
                  }
                ],
                "example": {
                  "number": "0491 570 156",
                  "fullNumber": "+61 491 570 156",
                  "isPersonal": false
                }
              },
              "addresses": {
                "type": "array",
                "description": "An array of addresses that belong to this Person.",
                "items": {
                  "properties": {
                    "addressType": {
                      "type": "string",
                      "description": "The type of address.",
                      "example": "Home"
                    },
                    "fullAddress": {
                      "type": "string",
                      "description": "The full address.",
                      "example": "Queen Street, Brisbane QLD"
                    },
                    "country": {
                      "type": "string",
                      "description": "The country of the address.",
                      "example": "Australia"
                    },
                    "postcode": {
                      "type": "string",
                      "description": "The postal code for the address.",
                      "example": "4000"
                    },
                    "state": {
                      "type": "string",
                      "description": "The state of the address.",
                      "example": "Queensland"
                    },
                    "street": {
                      "type": "string",
                      "description": "The street that the address is on.",
                      "example": "Queen Street"
                    },
                    "suburb": {
                      "type": "string",
                      "description": "The suburb of the address.",
                      "example": "Brisbane"
                    },
                    "isPrimary": {
                      "type": "boolean",
                      "description": "If this is a primary address.",
                      "example": true
                    },
                    "customFields": {
                      "description": "The custom field values of this [Person](#tags/people) address.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/customFieldsResponse"
                        }
                      ]
                    }
                  }
                }
              },
              "phoneNumbers": {
                "type": "array",
                "description": "An array of phone numbers that belong to this Person.",
                "items": {
                  "properties": {
                    "number": {
                      "type": "string",
                      "description": "The actual phone number.",
                      "example": "0491 570 156"
                    },
                    "fullNumber": {
                      "type": "string",
                      "description": "The actual phone number with the area code (if registered).",
                      "example": "+61 491 570 156"
                    },
                    "isPrimary": {
                      "type": "boolean",
                      "description": "If this is a primary phone number.",
                      "example": true
                    },
                    "isPersonal": {
                      "type": "boolean",
                      "description": "If this is a personal phone number.",
                      "example": false
                    },
                    "customFields": {
                      "description": "The custom field values of this [Person](#tags/people) phone number.",
                      "allOf": [
                        {
                          "$ref": "#/definitions/customFieldsResponse"
                        }
                      ]
                    }
                  }
                }
              },
              "userAccount": {
                "description": "Details about this [Person's](#tags/people) linked user account. Including this object will create a user account linked to this person, allowing them to login to the platform. If excluded the person will be created without an accompanying user account.",
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the [User](#tags/users).",
                        "type": "string"
                      },
                      "username": {
                        "type": "string",
                        "description": "The unique name of this user."
                      },
                      "isEnabled": {
                        "type": "boolean",
                        "description": "Specifies whether this [User](#tags/users) account is active. When disabled, you can no longer sign in using this account."
                      },
                      "userPermissionGroups": {
                        "type": "array",
                        "description": "The array of user permission groups containing the [Permission Group's](#tags/permission-groups) assigned to this user.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "title": "UUIDv4",
                              "maxLength": 36,
                              "minLength": 36,
                              "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                              "description": "The identifier string for the User Permission Group.",
                              "type": "string"
                            },
                            "permissionGroup": {
                              "type": "object",
                              "description": "The [Permission Group](#tags/permission-groups) assigned to this user.",
                              "properties": {
                                "id": {
                                  "title": "UUIDv4",
                                  "maxLength": 36,
                                  "minLength": 36,
                                  "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                  "description": "The identifier string for the [Permission Group](#tags/permission-groups).",
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "customFields": {
                "description": "The custom field values for this [Person](#tags/people)",
                "allOf": [
                  {
                    "$ref": "#/definitions/customFieldsResponse"
                  }
                ]
              },
              "createdAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "When this record was created. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "updatedAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "When this record was last updated. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          }
        }
      },
      "people_update_request": {
        "type": "object",
        "properties": {
          "firstName": {
            "description": "The [Person's](#tags/people) First Name.",
            "example": "Bruce",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "middleName": {
            "description": "The [Person's](#tags/people) Middle Name.",
            "example": "Thomas",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "lastName": {
            "type": "string",
            "description": "The [Person's](#tags/people) Last Name.",
            "example": "Wayne"
          },
          "preferredName": {
            "description": "The [Person's](#tags/people) Preferred Name. Can generally be configured by employees for themselves.",
            "example": "Batman",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "dateOfBirth": {
            "description": "Date of Birth (YYYY-MM-DD).",
            "example": "1939-07-23",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "gender": {
            "description": "Human readable string for the [Person's](#tags/people) gender, e.g. `Male`. Searching is done case-insensitively and 'starts-with' e.g. passing `male` will match with a [Gender](#tags/genders) called \"Male\" as will \"m\" or \"M\". If multiple [Genders](#tags/genders) match the first will be chosen. The gender options available are: `Female`, `Male`, `Non-binary`, `Other`, `Undisclosed`.",
            "type": "string",
            "default": "Other",
            "example": "Other"
          },
          "employeeNumber": {
            "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
            "example": "00001",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "title": {
            "description": "The title to refer to this [Person](#tags/people) as, for example \"Mr\". This is null if not provided and is case insensitive.",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "example": "Mr"
          },
          "emergencyContact": {
            "type": "object",
            "description": "The details for this [Person's](#tags/people) emergency contact.",
            "properties": {
              "name": {
                "description": "The name of the emergency contact.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "relationship": {
                "description": "The relationship this emergency contact has with the [Person](#tags/people).",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "phone": {
                "description": "Phone number of the emergency contact.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "email": {
                "description": "Email of the emergency contact.",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ]
              }
            },
            "example": {
              "name": "John Doe",
              "relationship": "Sibling",
              "phone": "0451 234 234",
              "email": "johndoe@example.com"
            }
          },
          "emailAddresses": {
            "description": "Information about this [Person's](#tags/people) email addresses. This will replace all of their current emails. The provided email addresses will be converted to lowercase. Note that a [Person](#tags/people) must have at least one primary email address.",
            "type": "array",
            "required": [
              "email"
            ],
            "items": {
              "properties": {
                "email": {
                  "type": "string",
                  "description": "The email address associated with this person. This will be automatically converted to lowercase."
                },
                "isPersonal": {
                  "type": "boolean",
                  "title": "Is Personal",
                  "description": "Denotes whether this email is personal or a work email.",
                  "default": false,
                  "example": true
                },
                "isPrimary": {
                  "type": "boolean",
                  "description": "Denotes whether this email is the primary contact email.",
                  "default": false,
                  "example": true
                },
                "customFields": {
                  "description": "The custom field values for this email address",
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "description": "Custom fields will be keyed by their api_name. Custom fields are not required, and only provided custom fields will be updated.",
                    "properties": {
                      "value": {
                        "description": "The value for this custom field. This value structure will depend upon the type of the custom field.",
                        "anyOf": [
                          {
                            "type": "null",
                            "description": "The value will be null when a custom field is not provided or is empty for a record. Null can be provided to delete a custom field value."
                          },
                          {
                            "type": "string",
                            "description": "For TEXT and NUMBER records, the value is stored as a string with the value of the record."
                          },
                          {
                            "type": "object",
                            "properties": {
                              "label": {
                                "type": "string",
                                "description": "For SINGLE_SELECT records, the value is stored as an object with the label of the dropdown option. NOTE: Only the label needs to be provided. `id` is not required."
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "labels": {
                                "type": "array",
                                "minItems": 1,
                                "description": "For MULTI_SELECT records, the value is stored as an object with an array of labels for all selected options. NOTE: Only the labels need to be provided. `ids` is not required.",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "person": {
                                  "type": "object",
                                  "description": "For PEOPLE_DROPDOWN records, the value is an object with an array of the [Person](#tag/People) search object and their [Job](#tag/Jobs) search object. This [Person](#tags/people) is specified as a search object, which will match the person who best fits the keys for this object.\n      Multiple keys can be used together to further narrow search results (for example, if there are multiple people with the same name, email address\n      can be used as well to limit to a single person. A validation error will be thrown if this search is unable to be narrowed to a single [Person](#tags/people).",
                                  "example": {
                                    "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                    "name": "Bruce Wayne",
                                    "primaryEmailAddress": "bruce.wayne@example.com",
                                    "employeeNumber": "00001",
                                    "autoIncrementIntellihrId": "1000"
                                  },
                                  "properties": {
                                    "id": {
                                      "title": "UUIDv4",
                                      "maxLength": 36,
                                      "minLength": 36,
                                      "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                      "description": "The identifier string for the [Person](#tags/people) to locate in the system.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the [Person](#tags/people) in intelliHR to search for. Note that the search accounts for differences in name order automatically."
                                    },
                                    "primaryEmailAddress": {
                                      "type": "string",
                                      "description": "The email address flagged as primary for the [Person](#tags/people) within the system."
                                    },
                                    "employeeNumber": {
                                      "type": "string",
                                      "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
                                    },
                                    "autoIncrementIntellihrId": {
                                      "type": "string",
                                      "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
                                    },
                                    "autoIncrementingIntellihrId": {
                                      "type": "string",
                                      "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                                      "deprecated": true
                                    }
                                  }
                                },
                                "job": {
                                  "type": "object",
                                  "description": "The [Job](#tag/Jobs) information of the [Person](#tag/People) is mandatory if the target PEOPLE_DROPDOWN custom field allows selecting individual jobs. If not, The [Job](#tag/Jobs) information is not mandatory.",
                                  "properties": {
                                    "id": {
                                      "title": "UUIDv4",
                                      "maxLength": 36,
                                      "minLength": 36,
                                      "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                      "description": "The identifier string for the [Job](#tag/Job) of this [Job](#tag/Jobs).",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "The name/position title of the [Job](#tag/Jobs).",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  "example": {
                    "text_field_api_name": {
                      "value": "Some text value"
                    },
                    "numeric_field_api_name": {
                      "value": "50"
                    },
                    "single_select_api_name": {
                      "value": {
                        "label": "Drama"
                      }
                    },
                    "multi_select_api_name": {
                      "value": {
                        "labels": [
                          "Bananas",
                          "Apples"
                        ]
                      }
                    },
                    "people_dropdown_api_name": {
                      "value": [
                        {
                          "person": {
                            "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "name": "Bruce Wayne",
                            "primaryEmailAddress": "bruce.wayne@example.com",
                            "employeeNumber": "00001",
                            "autoIncrementIntellihrId": "1000"
                          },
                          "job": {
                            "id": "569904c8-5d36-4c2f-afb0-525eeb8da32d",
                            "name": "Maintenance worker"
                          }
                        },
                        {
                          "person": {
                            "id": "313fde44-f24e-4ec9-9473-0d0f3527222d",
                            "name": "Batman",
                            "primaryEmailAddress": "batman@example.com",
                            "employeeNumber": "00002",
                            "autoIncrementIntellihrId": "1001"
                          },
                          "job": {
                            "id": "653304c8-5d36-4c2f-afb0-525eeb8da32d",
                            "name": "Janitor"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            },
            "example": [
              {
                "email": "bruce.wayne@batman.org",
                "isPersonal": false,
                "isPrimary": true,
                "customFields": {
                  "text_field_api_name": {
                    "value": "Some text value"
                  },
                  "numeric_field_api_name": {
                    "value": "50"
                  },
                  "single_select_api_name": {
                    "value": {
                      "label": "Drama"
                    }
                  },
                  "multi_select_api_name": {
                    "value": {
                      "labels": [
                        "Bananas",
                        "Apples"
                      ]
                    }
                  },
                  "people_dropdown_api_name": {
                    "value": [
                      {
                        "person": {
                          "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                          "name": "Bruce Wayne",
                          "primaryEmailAddress": "bruce.wayne@example.com",
                          "employeeNumber": "00001",
                          "autoIncrementIntellihrId": "1000"
                        },
                        "job": {
                          "id": "569904c8-5d36-4c2f-afb0-525eeb8da32d",
                          "name": "Maintenance worker"
                        }
                      },
                      {
                        "person": {
                          "id": "313fde44-f24e-4ec9-9473-0d0f3527222d",
                          "name": "Batman",
                          "primaryEmailAddress": "batman@example.com",
                          "employeeNumber": "00002",
                          "autoIncrementIntellihrId": "1001"
                        },
                        "job": {
                          "id": "653304c8-5d36-4c2f-afb0-525eeb8da32d",
                          "name": "Janitor"
                        }
                      }
                    ]
                  }
                }
              }
            ]
          },
          "phoneNumbers": {
            "description": "Information about this [Person's](#tags/people) phone numbers. This will replace all of their current phone numbers. Note that a [Person](#tags/people) must have at least one primary phone number.",
            "type": "array",
            "items": {
              "properties": {
                "number": {
                  "type": "string",
                  "description": "The phone number. This number can be prefixed with an area code. When this happens, the system will automatically try to determine the origin country for the phone number"
                },
                "isPersonal": {
                  "type": "boolean",
                  "title": "Is Personal",
                  "description": "Denotes whether this phone is personal or a work phone number.",
                  "default": false,
                  "example": true
                },
                "isPrimary": {
                  "type": "boolean",
                  "description": "Denotes whether this phone is the primary contact phone number.",
                  "default": false,
                  "example": true
                },
                "customFields": {
                  "description": "The custom field values for this phone number",
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "description": "Custom fields will be keyed by their api_name. Custom fields are not required, and only provided custom fields will be updated.",
                    "properties": {
                      "value": {
                        "description": "The value for this custom field. This value structure will depend upon the type of the custom field.",
                        "anyOf": [
                          {
                            "type": "null",
                            "description": "The value will be null when a custom field is not provided or is empty for a record. Null can be provided to delete a custom field value."
                          },
                          {
                            "type": "string",
                            "description": "For TEXT and NUMBER records, the value is stored as a string with the value of the record."
                          },
                          {
                            "type": "object",
                            "properties": {
                              "label": {
                                "type": "string",
                                "description": "For SINGLE_SELECT records, the value is stored as an object with the label of the dropdown option. NOTE: Only the label needs to be provided. `id` is not required."
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "labels": {
                                "type": "array",
                                "minItems": 1,
                                "description": "For MULTI_SELECT records, the value is stored as an object with an array of labels for all selected options. NOTE: Only the labels need to be provided. `ids` is not required.",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "person": {
                                  "type": "object",
                                  "description": "For PEOPLE_DROPDOWN records, the value is an object with an array of the [Person](#tag/People) search object and their [Job](#tag/Jobs) search object. This [Person](#tags/people) is specified as a search object, which will match the person who best fits the keys for this object.\n      Multiple keys can be used together to further narrow search results (for example, if there are multiple people with the same name, email address\n      can be used as well to limit to a single person. A validation error will be thrown if this search is unable to be narrowed to a single [Person](#tags/people).",
                                  "example": {
                                    "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                    "name": "Bruce Wayne",
                                    "primaryEmailAddress": "bruce.wayne@example.com",
                                    "employeeNumber": "00001",
                                    "autoIncrementIntellihrId": "1000"
                                  },
                                  "properties": {
                                    "id": {
                                      "title": "UUIDv4",
                                      "maxLength": 36,
                                      "minLength": 36,
                                      "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                      "description": "The identifier string for the [Person](#tags/people) to locate in the system.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the [Person](#tags/people) in intelliHR to search for. Note that the search accounts for differences in name order automatically."
                                    },
                                    "primaryEmailAddress": {
                                      "type": "string",
                                      "description": "The email address flagged as primary for the [Person](#tags/people) within the system."
                                    },
                                    "employeeNumber": {
                                      "type": "string",
                                      "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
                                    },
                                    "autoIncrementIntellihrId": {
                                      "type": "string",
                                      "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
                                    },
                                    "autoIncrementingIntellihrId": {
                                      "type": "string",
                                      "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                                      "deprecated": true
                                    }
                                  }
                                },
                                "job": {
                                  "type": "object",
                                  "description": "The [Job](#tag/Jobs) information of the [Person](#tag/People) is mandatory if the target PEOPLE_DROPDOWN custom field allows selecting individual jobs. If not, The [Job](#tag/Jobs) information is not mandatory.",
                                  "properties": {
                                    "id": {
                                      "title": "UUIDv4",
                                      "maxLength": 36,
                                      "minLength": 36,
                                      "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                      "description": "The identifier string for the [Job](#tag/Job) of this [Job](#tag/Jobs).",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "The name/position title of the [Job](#tag/Jobs).",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  "example": {
                    "text_field_api_name": {
                      "value": "Some text value"
                    },
                    "numeric_field_api_name": {
                      "value": "50"
                    },
                    "single_select_api_name": {
                      "value": {
                        "label": "Drama"
                      }
                    },
                    "multi_select_api_name": {
                      "value": {
                        "labels": [
                          "Bananas",
                          "Apples"
                        ]
                      }
                    },
                    "people_dropdown_api_name": {
                      "value": [
                        {
                          "person": {
                            "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "name": "Bruce Wayne",
                            "primaryEmailAddress": "bruce.wayne@example.com",
                            "employeeNumber": "00001",
                            "autoIncrementIntellihrId": "1000"
                          },
                          "job": {
                            "id": "569904c8-5d36-4c2f-afb0-525eeb8da32d",
                            "name": "Maintenance worker"
                          }
                        },
                        {
                          "person": {
                            "id": "313fde44-f24e-4ec9-9473-0d0f3527222d",
                            "name": "Batman",
                            "primaryEmailAddress": "batman@example.com",
                            "employeeNumber": "00002",
                            "autoIncrementIntellihrId": "1001"
                          },
                          "job": {
                            "id": "653304c8-5d36-4c2f-afb0-525eeb8da32d",
                            "name": "Janitor"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            },
            "example": [
              {
                "number": "0491 570 156",
                "isPersonal": false,
                "isPrimary": true,
                "customFields": {
                  "text_field_api_name": {
                    "value": "Some text value"
                  },
                  "numeric_field_api_name": {
                    "value": "50"
                  },
                  "single_select_api_name": {
                    "value": {
                      "label": "Drama"
                    }
                  },
                  "multi_select_api_name": {
                    "value": {
                      "labels": [
                        "Bananas",
                        "Apples"
                      ]
                    }
                  },
                  "people_dropdown_api_name": {
                    "value": [
                      {
                        "person": {
                          "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                          "name": "Bruce Wayne",
                          "primaryEmailAddress": "bruce.wayne@example.com",
                          "employeeNumber": "00001",
                          "autoIncrementIntellihrId": "1000"
                        },
                        "job": {
                          "id": "569904c8-5d36-4c2f-afb0-525eeb8da32d",
                          "name": "Maintenance worker"
                        }
                      },
                      {
                        "person": {
                          "id": "313fde44-f24e-4ec9-9473-0d0f3527222d",
                          "name": "Batman",
                          "primaryEmailAddress": "batman@example.com",
                          "employeeNumber": "00002",
                          "autoIncrementIntellihrId": "1001"
                        },
                        "job": {
                          "id": "653304c8-5d36-4c2f-afb0-525eeb8da32d",
                          "name": "Janitor"
                        }
                      }
                    ]
                  }
                }
              }
            ]
          },
          "addresses": {
            "description": "Information about this [Person's](#tags/people) addresses. This will replace all of their current addresses.",
            "type": "array",
            "items": {
              "required": [
                "addressType",
                "country"
              ],
              "properties": {
                "addressType": {
                  "type": "string",
                  "description": "Enum: `Home`, `Postal`.\nThe type of address."
                },
                "fullAddress": {
                  "type": "string",
                  "description": "The full readable address, minus the postcode and country.  This value will be resolved against Google maps api and will populate the state, suburb and street if a match is found.  You can override these results if you also pass the corresponding fields you wish to set."
                },
                "country": {
                  "type": "string",
                  "description": "The country the address is in."
                },
                "postcode": {
                  "type": "string",
                  "description": "The postcode of the address."
                },
                "state": {
                  "type": "string",
                  "description": "The state the address is in. This field is required if the fullAddress field is not provided."
                },
                "street": {
                  "type": "string",
                  "description": "The street the address is on. This field is required if the fullAddress field is not provided."
                },
                "suburb": {
                  "type": "string",
                  "description": "The suburb the address is in. This field is required if the fullAddress field is not provided."
                },
                "isPrimary": {
                  "type": "boolean",
                  "description": "Denotes whether this address is the primary. By default, the first address in the array\n              will be set as the primary if all addresses are set with isPrimary: false.",
                  "default": false,
                  "example": true
                },
                "customFields": {
                  "description": "The custom field values for this address",
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "description": "Custom fields will be keyed by their api_name. Custom fields are not required, and only provided custom fields will be updated.",
                    "properties": {
                      "value": {
                        "description": "The value for this custom field. This value structure will depend upon the type of the custom field.",
                        "anyOf": [
                          {
                            "type": "null",
                            "description": "The value will be null when a custom field is not provided or is empty for a record. Null can be provided to delete a custom field value."
                          },
                          {
                            "type": "string",
                            "description": "For TEXT and NUMBER records, the value is stored as a string with the value of the record."
                          },
                          {
                            "type": "object",
                            "properties": {
                              "label": {
                                "type": "string",
                                "description": "For SINGLE_SELECT records, the value is stored as an object with the label of the dropdown option. NOTE: Only the label needs to be provided. `id` is not required."
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "labels": {
                                "type": "array",
                                "minItems": 1,
                                "description": "For MULTI_SELECT records, the value is stored as an object with an array of labels for all selected options. NOTE: Only the labels need to be provided. `ids` is not required.",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "person": {
                                  "type": "object",
                                  "description": "For PEOPLE_DROPDOWN records, the value is an object with an array of the [Person](#tag/People) search object and their [Job](#tag/Jobs) search object. This [Person](#tags/people) is specified as a search object, which will match the person who best fits the keys for this object.\n      Multiple keys can be used together to further narrow search results (for example, if there are multiple people with the same name, email address\n      can be used as well to limit to a single person. A validation error will be thrown if this search is unable to be narrowed to a single [Person](#tags/people).",
                                  "example": {
                                    "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                    "name": "Bruce Wayne",
                                    "primaryEmailAddress": "bruce.wayne@example.com",
                                    "employeeNumber": "00001",
                                    "autoIncrementIntellihrId": "1000"
                                  },
                                  "properties": {
                                    "id": {
                                      "title": "UUIDv4",
                                      "maxLength": 36,
                                      "minLength": 36,
                                      "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                      "description": "The identifier string for the [Person](#tags/people) to locate in the system.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The name of the [Person](#tags/people) in intelliHR to search for. Note that the search accounts for differences in name order automatically."
                                    },
                                    "primaryEmailAddress": {
                                      "type": "string",
                                      "description": "The email address flagged as primary for the [Person](#tags/people) within the system."
                                    },
                                    "employeeNumber": {
                                      "type": "string",
                                      "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
                                    },
                                    "autoIncrementIntellihrId": {
                                      "type": "string",
                                      "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
                                    },
                                    "autoIncrementingIntellihrId": {
                                      "type": "string",
                                      "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                                      "deprecated": true
                                    }
                                  }
                                },
                                "job": {
                                  "type": "object",
                                  "description": "The [Job](#tag/Jobs) information of the [Person](#tag/People) is mandatory if the target PEOPLE_DROPDOWN custom field allows selecting individual jobs. If not, The [Job](#tag/Jobs) information is not mandatory.",
                                  "properties": {
                                    "id": {
                                      "title": "UUIDv4",
                                      "maxLength": 36,
                                      "minLength": 36,
                                      "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                      "description": "The identifier string for the [Job](#tag/Job) of this [Job](#tag/Jobs).",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "The name/position title of the [Job](#tag/Jobs).",
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  "example": {
                    "text_field_api_name": {
                      "value": "Some text value"
                    },
                    "numeric_field_api_name": {
                      "value": "50"
                    },
                    "single_select_api_name": {
                      "value": {
                        "label": "Drama"
                      }
                    },
                    "multi_select_api_name": {
                      "value": {
                        "labels": [
                          "Bananas",
                          "Apples"
                        ]
                      }
                    },
                    "people_dropdown_api_name": {
                      "value": [
                        {
                          "person": {
                            "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "name": "Bruce Wayne",
                            "primaryEmailAddress": "bruce.wayne@example.com",
                            "employeeNumber": "00001",
                            "autoIncrementIntellihrId": "1000"
                          },
                          "job": {
                            "id": "569904c8-5d36-4c2f-afb0-525eeb8da32d",
                            "name": "Maintenance worker"
                          }
                        },
                        {
                          "person": {
                            "id": "313fde44-f24e-4ec9-9473-0d0f3527222d",
                            "name": "Batman",
                            "primaryEmailAddress": "batman@example.com",
                            "employeeNumber": "00002",
                            "autoIncrementIntellihrId": "1001"
                          },
                          "job": {
                            "id": "653304c8-5d36-4c2f-afb0-525eeb8da32d",
                            "name": "Janitor"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            },
            "example": [
              {
                "addressType": "Home",
                "fullAddress": "Queen Street, Brisbane QLD",
                "country": "Australia",
                "postcode": "4000",
                "state": "Queensland",
                "street": "Queen Street",
                "suburb": "Brisbane",
                "isPrimary": true,
                "customFields": {
                  "text_field_api_name": {
                    "value": "Some text value"
                  },
                  "numeric_field_api_name": {
                    "value": "50"
                  },
                  "single_select_api_name": {
                    "value": {
                      "label": "Drama"
                    }
                  },
                  "multi_select_api_name": {
                    "value": {
                      "labels": [
                        "Bananas",
                        "Apples"
                      ]
                    }
                  },
                  "people_dropdown_api_name": {
                    "value": [
                      {
                        "person": {
                          "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                          "name": "Bruce Wayne",
                          "primaryEmailAddress": "bruce.wayne@example.com",
                          "employeeNumber": "00001",
                          "autoIncrementIntellihrId": "1000"
                        },
                        "job": {
                          "id": "569904c8-5d36-4c2f-afb0-525eeb8da32d",
                          "name": "Maintenance worker"
                        }
                      },
                      {
                        "person": {
                          "id": "313fde44-f24e-4ec9-9473-0d0f3527222d",
                          "name": "Batman",
                          "primaryEmailAddress": "batman@example.com",
                          "employeeNumber": "00002",
                          "autoIncrementIntellihrId": "1001"
                        },
                        "job": {
                          "id": "653304c8-5d36-4c2f-afb0-525eeb8da32d",
                          "name": "Janitor"
                        }
                      }
                    ]
                  }
                }
              }
            ]
          },
          "customFields": {
            "description": "The custom field values for this [Person](#tags/people)",
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Custom fields will be keyed by their api_name. Custom fields are not required, and only provided custom fields will be updated.",
              "properties": {
                "value": {
                  "description": "The value for this custom field. This value structure will depend upon the type of the custom field.",
                  "anyOf": [
                    {
                      "type": "null",
                      "description": "The value will be null when a custom field is not provided or is empty for a record. Null can be provided to delete a custom field value."
                    },
                    {
                      "type": "string",
                      "description": "For TEXT and NUMBER records, the value is stored as a string with the value of the record."
                    },
                    {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string",
                          "description": "For SINGLE_SELECT records, the value is stored as an object with the label of the dropdown option. NOTE: Only the label needs to be provided. `id` is not required."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "labels": {
                          "type": "array",
                          "minItems": 1,
                          "description": "For MULTI_SELECT records, the value is stored as an object with an array of labels for all selected options. NOTE: Only the labels need to be provided. `ids` is not required.",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "person": {
                            "type": "object",
                            "description": "For PEOPLE_DROPDOWN records, the value is an object with an array of the [Person](#tag/People) search object and their [Job](#tag/Jobs) search object. This [Person](#tags/people) is specified as a search object, which will match the person who best fits the keys for this object.\n      Multiple keys can be used together to further narrow search results (for example, if there are multiple people with the same name, email address\n      can be used as well to limit to a single person. A validation error will be thrown if this search is unable to be narrowed to a single [Person](#tags/people).",
                            "example": {
                              "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                              "name": "Bruce Wayne",
                              "primaryEmailAddress": "bruce.wayne@example.com",
                              "employeeNumber": "00001",
                              "autoIncrementIntellihrId": "1000"
                            },
                            "properties": {
                              "id": {
                                "title": "UUIDv4",
                                "maxLength": 36,
                                "minLength": 36,
                                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                "description": "The identifier string for the [Person](#tags/people) to locate in the system.",
                                "type": "string"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the [Person](#tags/people) in intelliHR to search for. Note that the search accounts for differences in name order automatically."
                              },
                              "primaryEmailAddress": {
                                "type": "string",
                                "description": "The email address flagged as primary for the [Person](#tags/people) within the system."
                              },
                              "employeeNumber": {
                                "type": "string",
                                "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
                              },
                              "autoIncrementIntellihrId": {
                                "type": "string",
                                "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
                              },
                              "autoIncrementingIntellihrId": {
                                "type": "string",
                                "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                                "deprecated": true
                              }
                            }
                          },
                          "job": {
                            "type": "object",
                            "description": "The [Job](#tag/Jobs) information of the [Person](#tag/People) is mandatory if the target PEOPLE_DROPDOWN custom field allows selecting individual jobs. If not, The [Job](#tag/Jobs) information is not mandatory.",
                            "properties": {
                              "id": {
                                "title": "UUIDv4",
                                "maxLength": 36,
                                "minLength": 36,
                                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                "description": "The identifier string for the [Job](#tag/Job) of this [Job](#tag/Jobs).",
                                "type": "string"
                              },
                              "name": {
                                "description": "The name/position title of the [Job](#tag/Jobs).",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            },
            "example": {
              "text_field_api_name": {
                "value": "Some text value"
              },
              "numeric_field_api_name": {
                "value": "50"
              },
              "single_select_api_name": {
                "value": {
                  "label": "Drama"
                }
              },
              "multi_select_api_name": {
                "value": {
                  "labels": [
                    "Bananas",
                    "Apples"
                  ]
                }
              },
              "people_dropdown_api_name": {
                "value": [
                  {
                    "person": {
                      "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "name": "Bruce Wayne",
                      "primaryEmailAddress": "bruce.wayne@example.com",
                      "employeeNumber": "00001",
                      "autoIncrementIntellihrId": "1000"
                    },
                    "job": {
                      "id": "569904c8-5d36-4c2f-afb0-525eeb8da32d",
                      "name": "Maintenance worker"
                    }
                  },
                  {
                    "person": {
                      "id": "313fde44-f24e-4ec9-9473-0d0f3527222d",
                      "name": "Batman",
                      "primaryEmailAddress": "batman@example.com",
                      "employeeNumber": "00002",
                      "autoIncrementIntellihrId": "1001"
                    },
                    "job": {
                      "id": "653304c8-5d36-4c2f-afb0-525eeb8da32d",
                      "name": "Janitor"
                    }
                  }
                ]
              }
            }
          },
          "medicalConditions": {
            "description": "The medical conditions that this person has",
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "body"
              ],
              "properties": {
                "body": {
                  "type": "string",
                  "description": "The name and description of the medical condition",
                  "example": "Mild Insomnia"
                },
                "isPublic": {
                  "type": "boolean",
                  "description": "If the medical condition is visible to anyone with permission to view this person's profile. Defaults to false.",
                  "default": false,
                  "example": false
                }
              }
            }
          },
          "workRight": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "id": {
                    "title": "UUIDv4",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "description": "The identifier string for the [Work Right](#tag/Work-Rights) to whom this [Person](#tag/Person) belongs.",
                    "type": "string"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the [Work Right](#tag/Work-Rights)."
                  }
                }
              },
              {
                "type": "null"
              }
            ],
            "description": "[Work Right](#tag/Work-Rights) to whom this [Person](#tag/Person) belongs. This [Work Right](#tag/Work-Rights) is specified as a search object, which will match the work right which best fits the keys for this object. Multiple keys can be used together to further narrow search results. Null can be provided to remove a person's work right.",
            "example": {
              "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
              "name": "Australian Citizen"
            }
          },
          "workRightExpiryDate": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "The date this [Work Right](#tag/Work-Rights) will expire for this [Person](#tag/Person) (YYYY-MM-DD).",
            "example": "2022-06-23"
          }
        }
      },
      ":personId_image_find_response": {
        "type": "object",
        "title": "Find Image Object",
        "properties": {
          "data": {
            "type": "object",
            "title": "Assigned Image",
            "properties": {
              "url": {
                "description": "The requested image url",
                "example": "https://<example-bucket-name>.s3.ap-southeast-2.amazonaws.com/<your-tenant>/...",
                "type": "string"
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "asAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The point in time for which this response is for. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          }
        }
      },
      ":personId_image_create_request": {
        "type": "object",
        "properties": {
          "imageType": {
            "description": "The Image Type. Enum: `PERSON_PROFILE`, `PROFILE_COVER`.",
            "example": "PERSON_PROFILE",
            "type": "string",
            "default": "PERSON_PROFILE"
          },
          "extension": {
            "description": "The extension of the image, not including the dot",
            "example": "png",
            "type": "string"
          }
        }
      },
      ":personId_image_create_response": {
        "type": "object",
        "title": "Generate Image URL Object",
        "properties": {
          "data": {
            "type": "object",
            "title": "Assigned Image",
            "description": "Instructions on how to upload an object with a presigned S3 URL can be found [here](https://docs.aws.amazon.com/AmazonS3/latest/dev/PresignedUrlUploadObject.html)",
            "properties": {
              "url": {
                "example": "https://<example-bucket-name>.s3.ap-southeast-2.amazonaws.com",
                "type": "string"
              },
              "fields": {
                "type": "object",
                "properties": {
                  "x-amz-server-side-encryption": {
                    "type": "string",
                    "example": "AES256"
                  },
                  "key": {
                    "type": "string",
                    "example": "<your-tenant>/cfe2f82b-fb9f-4044-b77b-1a44612d5fa9-original"
                  },
                  "AWSAccessKeyId": {
                    "type": "string",
                    "example": "ASIA6HLWGVLAJALKDSOK"
                  },
                  "x-amz-security-token": {
                    "type": "string",
                    "example": "IQoJb3JpZ2luX2VjEKT//////////wEaDmFwLXNvdXRoZWFzdC0yIkcwRQIgNjODBis3wNGYA93luB198gh4gNyViSJC0Hu8UChgMXECIQCXqthkPAGOX+UMMy2vdyOE30EBkV6rGPu8AgPt9OvlLyqxAghtEAIaDDk3Nzg4OTgzMTYzNiIMuFb9qo8aAjQ0rvHZKo4CVo1zxNbD9FHRLUnBtXH5YTF/q9F/wqsTf02upu6WUBriaPsqbJGwDBti/UKbZ8q8yMADOTTe7T/CW8bs4BvClOXVoCo1b7KrjI7MYR8BEWQBqVQ3YB2m4rH0q1oIfZSwAFHUs7+13yyUZ8zPsRrYsU9e4XQEfqK3eeCu+TDlCDXG+SVnjPvZrlpHylLDLurpDquh8MV5CwtPl2SaHFbkLAuUQ/uJY3UHA6gkcjcmAQ8vGHM3pgs4Z0QvZJtWOQsz4xoUIumkBpoThxX6TLyks90P+ctR1ckjFsAqgkUWYSPDPHNAUDA1sXg//P506UxD9xESGKyfsIbU8k5Wc3uoIxWkn/wrHonzrxTwdbMKMPvnxdwajadwWDAGOpoBNf/+h3+7dTvDXEXXrIh044fnKqFQXgCYJTx7lp8xVP20o4QnJXQKVBIL6GN1H2VGxKQ6s7jRCwgDCID1R3QR55UENLgRu85FGOGf9Rt+f+cIUk/VsjIJZov9CcTK6DytLFI102eFcKAGmwN/sM/pIYXgq0X/qXfyduBAwdrRhSGnzvsXznuiQBMic0cQ/buIrrDmVw=="
                  },
                  "policy": {
                    "type": "string",
                    "example": "eyJleHBpcmF1aW9uIjogIjIwMqItMDUtMDRUMDQ2MzK6MTZaIiwgImNvbmRpdGlvbnMiOiBbWyJjb250ZW50LWxlbmd0aC1yYW5nZSIsIDAsIDIwMDAwMDAwXSwgeyJ4LWFtei1zZXJ2ZXItc2lkZS1lbmNyeXB0aW9uIjogIkFFUzI1NiJ9LCB7ImJ1Y2tldCI6ICJpaHItaW1hZ2Utc2VydmljZS1leHBlcmltZW50YWwtaW1nLXN0YWdpbmcifSwgeyJrZXkiOiAibWFzdGVyX2xhcmdlX2RlbW8vY2ZlMmY4MmItZmI5Zi00MDQ0LWI3N2ItMWE0NDYxMmQ1ZmE5LW9yaWdpbmFsIn0sIHsieC1hbXotc2VjdXJpdHktdG9rZW4iOiAiSVFvSmIzSnBaMmx1WDJWakVLVC8vLy8vLy8vLy93RWFEbUZ3TFhOdmRYUm9aV0Z6ZEMweUlrY3dSUUlnTmpPREJpczN3TkdZQTkzbHVCMTk4Z2g0Z055VmlTSkMwSHU4VUNoZ01YRUNJUUNYcXRoa1BBR09YK1VNTXkydmR5T0UzMEVCa1Y2ckdQdThBZ1B0OU92bEx5cXhBZ2h0RUFJYUREazNOemc0T1Rnek1UWXpOaUlNdUZiOXFvOGFBalEwcnZIWktvNENWbzF6eE5iRDlGSFJMVW5CdFhINVlURi9xOUYvd3FzVGYwMnVwdTZXVUJyaWFQc3FiSkd3REJ0aS9VS2JaOHE4eU1BRE9UVGU3VC9DVzhiczRCdkNsT1hWb0NvMWI3S3JqSTdNWVI4QkVXUUJxVlEzWUIybTRySDBxMW9JZlpTd0FGSFVzNysxM3l5VVo4elBzUnJZc1U5ZTRYUUVmcUszZWVDdStURGxDRFhHK1NWbmpQdlpybHBIeWxMREx1cnBEcXVoOE1WNUN3dFBsMlNhSEZia0xBdVVRL3VKWTNVSEE2Z2tjamNtQVE4dkdITTNwZ3M0WjBRdlpKdFdPUXN6NHhvVUl1bWtCcG9UaHhYNlRMeWtzOTBQK2N0UjFja2pGc0FxZ2tVV1lTUERQSE5BVURBMXNYZy8vUDUwNlV4RDl4RVNHS3lmc0liVThrNVdjM3VvSXhXa24vd3JIb256cnhUd2RiTUtNUHZueDVNR09wb0JOZi8raDMrN2RUdkRYRVhYckloMGVXa3A5ak5oNDRmbktxRlFYZ0NZSlR4N2xwOHhWUDIwbzRRbkpYUUtWQklMNkdOMUgyVkd4S1E2czdqUkN3Z0RDSUQxUjNRUjU1VUVOTGdSdTg1RkdPR2Y5UnQrZitjSVVrL1ZzaklKWm92OUNjVEs2RHl0TEZJMTAyZUZjS0FHbXdOL3NNL3BJWVhncTBYL3FYZnlkdUJBd2RyUmhTR256dnNYem51aVFCTWljMGNRL2J1SXJyRG1Wdz09In1dfQ=="
                  },
                  "signature": {
                    "type": "string",
                    "example": "JGX8ztYJqB+Kkr/m7dzYzzEZPlI="
                  }
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "asAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The point in time for which this response is for. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          }
        }
      },
      ":personId_image_patch_request": {
        "type": "object",
        "properties": {
          "imageType": {
            "description": "The Image Type. Enum: `PERSON_PROFILE`, `PROFILE_COVER`.",
            "example": "PERSON_PROFILE",
            "type": "string",
            "default": "PERSON_PROFILE"
          },
          "rotation": {
            "description": "the degree to rotate the image from 0-359",
            "example": 0,
            "default": 0,
            "minimum": 0,
            "maximum": 359,
            "type": "integer"
          },
          "coordinates": {
            "description": "The coordinates to crop the image.<p>If `PERSON_PROFILE` is selected, the image will be stretched to an aspect ratio of 1:1 in IHR platform. Hence it is recommended to crop the image with an aspect ratio of 1:1 to avoid distortions. As an example for a `3000x4000` image to cropped to 1:1, the height can be modified to a value of 3000px which corresponds to the ratio `height=widthpx/heightpx=3000/4000=0.75`. For the height of image to be cropped in the center, vertical offset can be defined as `y=(1-height)/2=0.125`. With the following example, coordinates of `{ x: 0, y: 0.125, width: 1, height: 0.75}` will result in a square image that is cropped from the center.</p><p>If `PROFILE_COVER` is selected, the image will be stretched to an aspect ratio of 3:1 in IHR platform. As an example to avoid distortions, we can use the following formula for the new height `newHeightpx=widthpx/3`. The new height ratio will be defined as `height=newHeightpx/heightpx`. The vertical offset can be adjusted using `y=(1-height)/2` for the image height to be cropped from the center.</p>",
            "type": "object",
            "properties": {
              "height": {
                "description": "the multiple to crop the height of the image to (e.g. 0.5 will half the height)",
                "example": 0,
                "default": 1,
                "type": "integer"
              },
              "width": {
                "description": "the multiple to crop the width of the image to (e.g. 0.5 will half the width)",
                "example": 0,
                "default": 1,
                "type": "integer"
              },
              "x": {
                "description": "the multiple to offset the x crop (e.g. 0.5 will crop to show the right side of the image if the width is also 0.5)",
                "example": 0,
                "default": 0,
                "type": "integer"
              },
              "y": {
                "description": "the multiple to offset the y crop (e.g. 0.5 will crop to show the bottom of the image if the height is also 0.5)",
                "example": 0,
                "default": 0,
                "type": "integer"
              }
            },
            "required": [
              "height",
              "width",
              "x",
              "y"
            ]
          }
        }
      },
      ":personId_image_patch_response": {
        "type": "object",
        "title": "Promote Image Object",
        "properties": {
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "asAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The point in time for which this response is for. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          }
        }
      },
      ":personId": {
        "type": "object",
        "title": "Single Assigned Skill",
        "properties": {
          "data": {
            "type": "object",
            "title": "Assigned Skill",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Skill](#tag/Skills).",
                "type": "string"
              },
              "name": {
                "type": "string",
                "description": "User friendly name given to this [Skill](#tag/Skills).",
                "example": "Campaign Management"
              },
              "skillLevel": {
                "type": "string",
                "description": "User friendly name given to this Skill Level.",
                "example": "Proficient"
              },
              "skillDiscipline": {
                "type": "object",
                "description": "The [Skill Discipline](#tag/Skill-Disciplines) to which this [Skill](#tag/Skills) belongs.",
                "properties": {
                  "id": {
                    "title": "UUIDv4",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "description": "The identifier string for the [Skill Discipline](#tag/Skill-Disciplines) of this [Skill](#tag/Skills).",
                    "type": "string"
                  },
                  "name": {
                    "description": "User friendly name given to this [Skill Discipline](#tag/Skill-Disciplines).",
                    "example": "Marketing",
                    "type": "string"
                  },
                  "link": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/skill-disciplines/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "asAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The point in time for which this response is for. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          }
        }
      },
      ":personId_list": {
        "type": "object",
        "title": "List Assigned Skills",
        "properties": {
          "data": {
            "type": "array",
            "title": "data",
            "description": "Array of Skills assigned to this person.",
            "items": {
              "type": "object",
              "title": "Assigned Skill",
              "properties": {
                "id": {
                  "title": "UUIDv4",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "description": "The identifier string for the [Skill](#tag/Skills).",
                  "type": "string"
                },
                "name": {
                  "type": "string",
                  "description": "User friendly name given to this [Skill](#tag/Skills).",
                  "example": "Campaign Management"
                },
                "skillLevel": {
                  "type": "string",
                  "description": "User friendly name given to this Skill Level.",
                  "example": "Proficient"
                },
                "skillDiscipline": {
                  "type": "object",
                  "description": "The [Skill Discipline](#tag/Skill-Disciplines) to which this [Skill](#tag/Skills) belongs.",
                  "properties": {
                    "id": {
                      "title": "UUIDv4",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "description": "The identifier string for the [Skill Discipline](#tag/Skill-Disciplines) of this [Skill](#tag/Skills).",
                      "type": "string"
                    },
                    "name": {
                      "description": "User friendly name given to this [Skill Discipline](#tag/Skill-Disciplines).",
                      "example": "Marketing",
                      "type": "string"
                    },
                    "link": {
                      "type": "string",
                      "title": "URL",
                      "description": "Link on the public api to get more information on this piece of data.",
                      "example": "https://api.intellihr.io/v1/skill-disciplines/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                    }
                  }
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "asAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The point in time for which this response is for. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          }
        }
      },
      ":personId_create_request": {
        "type": "object",
        "properties": {
          "skillId": {
            "title": "UUIDv4",
            "maxLength": 36,
            "minLength": 36,
            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
            "description": "The identifier string for the [Skill](#tag/Skill).",
            "type": "string"
          },
          "skillLevel": {
            "description": "The Skill Level you wish to apply to this Skill. Enum: `Expert`, `Proficient`, `Interested`, `Basic`.",
            "example": "Fortnightly",
            "type": "string"
          }
        },
        "required": [
          "skillId",
          "skillLevel"
        ]
      },
      ":personId_patch_request": {
        "type": "object",
        "properties": {
          "skillLevel": {
            "description": "The Skill Level you wish to apply to this Skill. Enum: `Expert`, `Proficient`, `Interested`, `Basic`.",
            "example": "Fortnightly",
            "type": "string"
          }
        }
      },
      "permission-groups": {
        "type": "object",
        "title": "Response",
        "properties": {
          "data": {
            "type": "object",
            "title": "Permission Group",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Permission Group](#tag/Permission-Groups).",
                "type": "string"
              },
              "name": {
                "description": "Name given to this [Permission Group](#tag/Permission-Groups). This name would normally be shown to users of the system.",
                "example": "Engineering",
                "type": "string"
              },
              "isEnabled": {
                "type": "boolean",
                "description": "Specifies whether users can select this [Permission Group](#tag/Permission-Groups) in dropdowns."
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "asAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The point in time for which this response is for. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          }
        }
      },
      "permission-groups_list": {
        "type": "object",
        "title": "List of [Permission Groups](#tag/Permission-Groups)",
        "properties": {
          "data": {
            "type": "array",
            "title": "data",
            "items": {
              "type": "object",
              "title": "Permission Group",
              "properties": {
                "id": {
                  "title": "UUIDv4",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "description": "The identifier string for the [Permission Group](#tag/Permission-Groups).",
                  "type": "string"
                },
                "name": {
                  "description": "Name given to this [Permission Group](#tag/Permission-Groups). This name would normally be shown to users of the system.",
                  "example": "Engineering",
                  "type": "string"
                },
                "isEnabled": {
                  "type": "boolean",
                  "description": "Specifies whether users can select this [Permission Group](#tag/Permission-Groups) in dropdowns."
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "asAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The point in time for which this response is for. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "pagination": {
                "type": "object",
                "description": "Contains information related to the pagination of the response",
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total items count",
                    "minimum": 0,
                    "example": 50
                  },
                  "count": {
                    "type": "integer",
                    "description": "Number of items for current page",
                    "minimum": 0,
                    "example": 10
                  },
                  "per_page": {
                    "type": "integer",
                    "description": "Items per page limit",
                    "minimum": 0,
                    "example": 10
                  },
                  "current_page": {
                    "type": "integer",
                    "description": "Current page",
                    "minimum": 1,
                    "example": 3
                  },
                  "total_pages": {
                    "type": "integer",
                    "description": "Total number of pages",
                    "minimum": 1,
                    "example": 5
                  }
                }
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          },
          "links": {
            "type": "object",
            "description": "Links to other related resources.",
            "properties": {
              "self": {
                "type": "string",
                "description": "The current page URL",
                "example": "https://api.intellihr.io/v1/permission-groups?limit=1&page=3"
              },
              "first": {
                "type": "string",
                "description": "The first page URL",
                "example": "https://api.intellihr.io/v1/permission-groups?limit=1&page=1"
              },
              "prev": {
                "type": "string",
                "description": "The previous page URL",
                "example": "https://api.intellihr.io/v1/permission-groups?limit=1&page=2"
              },
              "next": {
                "type": "string",
                "description": "The next page URL",
                "example": "https://api.intellihr.io/v1/permission-groups?limit=1&page=4"
              },
              "last": {
                "type": "string",
                "description": "The last page URL",
                "example": "https://api.intellihr.io/v1/permission-groups?limit=1&page=5"
              }
            }
          }
        }
      },
      "people_documents_create_request": {
        "type": "object",
        "required": [
          "filename",
          "mime",
          "size",
          "extension"
        ],
        "properties": {
          "filename": {
            "description": "The filename of the document. This will be used for display name. Includes extension.",
            "example": "OfferLetter.pdf",
            "type": "string"
          },
          "mime": {
            "description": "The mime type of the document",
            "example": "application/pdf",
            "type": "string"
          },
          "size": {
            "description": "The size in bytes. We use this to validate the upload was successful so must match the actual file size",
            "example": 300,
            "type": "integer"
          },
          "extension": {
            "description": "The extension of the document, not including the dot",
            "example": "pdf",
            "type": "string"
          }
        }
      },
      "people_documents_create_response": {
        "type": "object",
        "title": "Single Person Document",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Person Document](#tag/Person-Documents).",
                "type": "string"
              },
              "presignedUploadUrl": {
                "description": "The presigned upload URL which enables you to upload a [Person Document](#tag/Person-Documents) to S3. This link will expire 20 minutes after creation. Instructions on how to upload an object with a presigned S3 URL can be found [here](https://docs.aws.amazon.com/AmazonS3/latest/dev/PresignedUrlUploadObject.html)",
                "example": "https://<example-bucket-name>.s3.ap-southeast-2.amazonaws.com/<your-tenant>/...",
                "type": "string"
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          }
        }
      },
      "people_documents_patch_request": {
        "type": "object",
        "properties": {
          "filename": {
            "description": "The filename of the document. This will be used for display name. Includes extension.",
            "example": "OfferLetter.pdf",
            "type": "string"
          },
          "uploadStatus": {
            "description": "The upload status of this [Document](#tag/Person-Documents). Enum: `SUCCESS`, `PENDING`, `FAILED`.",
            "example": "SUCCESS"
          }
        }
      },
      "people_documents_patch_response": {
        "type": "object",
        "title": "Patch a Person Document",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Person Document](#tag/Person-Documents).",
                "type": "string"
              },
              "filename": {
                "description": "The filename of the document. This will be used for display name. Includes extension.",
                "example": "OfferLetter.pdf",
                "type": "string"
              },
              "uploadStatus": {
                "description": "The upload status of this [Document](#tag/Person-Documents). Enum: `SUCCESS`, `PENDING`, `FAILED`.",
                "example": "SUCCESS"
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          }
        }
      },
      "people_documents_find_response": {
        "type": "object",
        "title": "List of Person's Documents",
        "properties": {
          "data": {
            "type": "array",
            "title": "data",
            "items": {
              "type": "object",
              "title": "Person's Document",
              "properties": {
                "id": {
                  "title": "UUIDv4",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "description": "The identifier string for the [People Document](#tag/People-Documents).",
                  "type": "string"
                },
                "filename": {
                  "description": "The filename of the document. This will be used for display name. Includes extension.",
                  "example": "OfferLetter.pdf",
                  "type": "string"
                },
                "downloadUrlAbsolute": {
                  "description": "A downloadable Url of the document.",
                  "example": "http://{tenant}.internihr.ninja/api/domain/people/6ced7aed-adeb-4645-896a-5eaa21f4bf6e/attachments/0f1d4fb7-ef1b-4ca5-908f-1c73f489be04/download",
                  "type": "string"
                },
                "extension": {
                  "description": "The extension of the document, not including the dot",
                  "example": "pdf",
                  "type": "string"
                },
                "size": {
                  "description": "The size in bytes. We use this to validate the upload was successful so must match the actual file size",
                  "example": 300,
                  "type": "integer"
                },
                "humanReadableSize": {
                  "description": "The size in bytes. We use this to validate the upload was successful so must match the actual file size",
                  "example": "300 bytes",
                  "type": "string"
                },
                "uploadStatus": {
                  "description": "The upload status of this [Document](#tag/Person-Documents). Enum: `SUCCESS`, `PENDING`, `FAILED`.",
                  "example": "SUCCESS"
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "asAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The point in time for which this response is for. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "pagination": {
                "type": "object",
                "description": "Contains information related to the pagination of the response",
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total items count",
                    "minimum": 0,
                    "example": 50
                  },
                  "count": {
                    "type": "integer",
                    "description": "Number of items for current page",
                    "minimum": 0,
                    "example": 10
                  },
                  "per_page": {
                    "type": "integer",
                    "description": "Items per page limit",
                    "minimum": 0,
                    "example": 10
                  },
                  "current_page": {
                    "type": "integer",
                    "description": "Current page",
                    "minimum": 1,
                    "example": 3
                  },
                  "total_pages": {
                    "type": "integer",
                    "description": "Total number of pages",
                    "minimum": 1,
                    "example": 5
                  }
                }
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          },
          "links": {
            "type": "object",
            "description": "Links to other related resources.",
            "properties": {
              "self": {
                "type": "string",
                "description": "The current page URL",
                "example": "https://api.intellihr.io/v1/people/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9/documents?limit=1&page=3"
              },
              "first": {
                "type": "string",
                "description": "The first page URL",
                "example": "https://api.intellihr.io/v1/people/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9/documents?limit=1&page=1"
              },
              "prev": {
                "type": "string",
                "description": "The previous page URL",
                "example": "https://api.intellihr.io/v1/people/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9/documents?limit=1&page=2"
              },
              "next": {
                "type": "string",
                "description": "The next page URL",
                "example": "https://api.intellihr.io/v1/people/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9/documents?limit=1&page=4"
              },
              "last": {
                "type": "string",
                "description": "The last page URL",
                "example": "https://api.intellihr.io/v1/people/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9/documents?limit=1&page=5"
              }
            }
          }
        }
      },
      "person_documents_create_request": {
        "type": "object",
        "required": [
          "person",
          "filename",
          "mime",
          "size",
          "extension"
        ],
        "properties": {
          "person": {
            "type": "object",
            "description": "[Person](#tag/People) to whom this [Document](#tag/Person-Documents) belongs. This [Person](#tags/people) is specified as a search object, which will match the person who best fits the keys for this object.\n      Multiple keys can be used together to further narrow search results (for example, if there are multiple people with the same name, email address\n      can be used as well to limit to a single person. A validation error will be thrown if this search is unable to be narrowed to a single [Person](#tags/people).",
            "example": {
              "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
              "name": "Bruce Wayne",
              "primaryEmailAddress": "bruce.wayne@example.com",
              "employeeNumber": "00001",
              "autoIncrementIntellihrId": "1000"
            },
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Person](#tags/people) to locate in the system.",
                "type": "string"
              },
              "name": {
                "type": "string",
                "description": "The name of the [Person](#tags/people) in intelliHR to search for. Note that the search accounts for differences in name order automatically."
              },
              "primaryEmailAddress": {
                "type": "string",
                "description": "The email address flagged as primary for the [Person](#tags/people) within the system."
              },
              "employeeNumber": {
                "type": "string",
                "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
              },
              "autoIncrementIntellihrId": {
                "type": "string",
                "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
              },
              "autoIncrementingIntellihrId": {
                "type": "string",
                "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                "deprecated": true
              }
            }
          },
          "filename": {
            "description": "The filename of the document. This will be used for display name. Includes extension.",
            "example": "OfferLetter.pdf",
            "type": "string"
          },
          "mime": {
            "description": "The mime type of the document",
            "example": "application/pdf",
            "type": "string"
          },
          "size": {
            "description": "The size in bytes. We use this to validate the upload was successful so must match the actual file size",
            "example": 300,
            "type": "integer"
          },
          "extension": {
            "description": "The extension of the document, not including the dot",
            "example": "pdf",
            "type": "string"
          }
        }
      },
      "person_documents_create_response": {
        "type": "object",
        "title": "Single Person Document",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Person Document](#tag/Person-Documents).",
                "type": "string"
              },
              "personId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Person](#tag/People) to whom this [Document](#tag/Person-Documents) belongs.",
                "type": "string"
              },
              "presignedUploadUrl": {
                "description": "The presigned upload URL which enables you to upload a [Person Document](#tag/Person-Documents) to S3. This link will expire 20 minutes after creation. Instructions on how to upload an object with a presigned S3 URL can be found [here](https://docs.aws.amazon.com/AmazonS3/latest/dev/PresignedUrlUploadObject.html)",
                "example": "https://<example-bucket-name>.s3.ap-southeast-2.amazonaws.com/<your-tenant>/...",
                "type": "string"
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          }
        }
      },
      "person_documents_patch_request": {
        "type": "object",
        "required": [
          "personId",
          "documentId"
        ],
        "properties": {
          "personId": {
            "title": "UUIDv4",
            "maxLength": 36,
            "minLength": 36,
            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
            "description": "The identifier string for the [Person](#tag/People) to whom this [Document](#tag/Person-Documents) belongs.",
            "type": "string"
          },
          "filename": {
            "description": "The filename of the document. This will be used for display name. Includes extension.",
            "example": "OfferLetter.pdf",
            "type": "string"
          },
          "uploadStatus": {
            "description": "The upload status of this [Document](#tag/Person-Documents). Enum: `SUCCESS`, `PENDING`, `FAILED`.",
            "example": "SUCCESS"
          }
        }
      },
      "person_documents_patch_response": {
        "type": "object",
        "title": "Patch a Person Document",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Person Document](#tag/Person-Documents).",
                "type": "string"
              },
              "personId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Person](#tag/People) to whom this [Document](#tag/Person-Documents) belongs.",
                "type": "string"
              },
              "filename": {
                "description": "The filename of the document. This will be used for display name. Includes extension.",
                "example": "OfferLetter.pdf",
                "type": "string"
              },
              "uploadStatus": {
                "description": "The upload status of this [Document](#tag/Person-Documents). Enum: `SUCCESS`, `PENDING`, `FAILED`.",
                "example": "SUCCESS"
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          }
        }
      },
      "position-titles": {
        "type": "object",
        "title": "Position Title",
        "properties": {
          "data": {
            "type": "object",
            "title": "Position Title Schema",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Position Title](#tag/Position-Titles).",
                "type": "string"
              },
              "name": {
                "type": "string",
                "description": "Name given to this [Position Title](#tag/Position-Titles). This name would normally be shown to users of the system.",
                "example": "Engineering Manager"
              },
              "isEnabled": {
                "type": "boolean",
                "description": "Specifies whether users can select this [Position Title](#tag/Position-Titles) in dropdowns."
              },
              "code": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "Code given to this [Position Title](#tag/Position-Titles)."
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          }
        }
      },
      "position-titles_list": {
        "type": "object",
        "title": "List Position Titles",
        "properties": {
          "data": {
            "type": "array",
            "title": "data",
            "items": {
              "type": "object",
              "title": "Position Title Schema",
              "properties": {
                "id": {
                  "title": "UUIDv4",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "description": "The identifier string for the [Position Title](#tag/Position-Titles).",
                  "type": "string"
                },
                "name": {
                  "type": "string",
                  "description": "Name given to this [Position Title](#tag/Position-Titles). This name would normally be shown to users of the system.",
                  "example": "Engineering Manager"
                },
                "isEnabled": {
                  "type": "boolean",
                  "description": "Specifies whether users can select this [Position Title](#tag/Position-Titles) in dropdowns."
                },
                "code": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "description": "Code given to this [Position Title](#tag/Position-Titles)."
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "pagination": {
                "type": "object",
                "description": "Contains information related to the pagination of the response",
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total items count",
                    "minimum": 0,
                    "example": 50
                  },
                  "count": {
                    "type": "integer",
                    "description": "Number of items for current page",
                    "minimum": 0,
                    "example": 10
                  },
                  "per_page": {
                    "type": "integer",
                    "description": "Items per page limit",
                    "minimum": 0,
                    "example": 10
                  },
                  "current_page": {
                    "type": "integer",
                    "description": "Current page",
                    "minimum": 1,
                    "example": 3
                  },
                  "total_pages": {
                    "type": "integer",
                    "description": "Total number of pages",
                    "minimum": 1,
                    "example": 5
                  }
                }
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          },
          "links": {
            "type": "object",
            "description": "Links to other related resources.",
            "properties": {
              "self": {
                "type": "string",
                "description": "The current page URL",
                "example": "https://api.intellihr.io/v1/position-titles?limit=1&page=3"
              },
              "first": {
                "type": "string",
                "description": "The first page URL",
                "example": "https://api.intellihr.io/v1/position-titles?limit=1&page=1"
              },
              "prev": {
                "type": "string",
                "description": "The previous page URL",
                "example": "https://api.intellihr.io/v1/position-titles?limit=1&page=2"
              },
              "next": {
                "type": "string",
                "description": "The next page URL",
                "example": "https://api.intellihr.io/v1/position-titles?limit=1&page=4"
              },
              "last": {
                "type": "string",
                "description": "The last page URL",
                "example": "https://api.intellihr.io/v1/position-titles?limit=1&page=5"
              }
            }
          }
        }
      },
      "positionTitles_create_request": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name given to this [Position Title](#tag/Position-Titles). This name would normally be shown to users of the system.",
            "example": "Engineering Manager"
          },
          "code": {
            "type": [
              "string",
              "null"
            ],
            "description": "Code given to this [Position Title](#tag/Position-Titles)."
          }
        },
        "required": [
          "name"
        ]
      },
      "positionTitles_patch_request": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name given to this [Position Title](#tag/Position-Titles). This name would normally be shown to users of the system.",
            "example": "Engineering Manager"
          },
          "code": {
            "type": [
              "string",
              "null"
            ],
            "description": "Code given to this [Position Title](#tag/Position-Titles)."
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Specifies whether users can select this [Position Title](#tag/Position-Titles) in dropdowns."
          }
        }
      },
      "qualification-instances_create_request": {
        "type": "object",
        "title": "Qualification Instance",
        "properties": {
          "personId": {
            "title": "UUIDv4",
            "maxLength": 36,
            "minLength": 36,
            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
            "description": "The identifier string for the Person Id.",
            "type": "string"
          },
          "qualificationLibraryItemId": {
            "title": "UUIDv4",
            "maxLength": 36,
            "minLength": 36,
            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
            "description": "The identifier string for the Qualification Library Item Id.",
            "type": "string"
          },
          "status": {
            "type": "string",
            "description": "The status of this [Qualification Instance](#tag/Qualification-Instances)",
            "enum": [
              "DRAFT",
              "AWAITING_APPROVAL",
              "DECLINED",
              "APPROVED",
              "REVOKED",
              "EXPIRED",
              "EXPIRING_SOON",
              "CURRENT",
              "FUTURE",
              "RENEWING",
              "NON_COMPLIANT"
            ]
          },
          "issuingOrganisation": {
            "description": "The organisation that issued this qualification [Qualification Instance](#tag/Qualification-Instances)",
            "example": "ABCDE12345",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "registrationNumber": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "The registration number of the [Qualification Instance](#tag/Qualification-Instances)",
            "example": "ABCDE12345"
          },
          "issueDate": {
            "title": "RFC3339 datetime",
            "example": "2015-03-01T22:30:00+00:00",
            "description": "The issue date of the [Qualification Instance](#tag/Qualification-Instances). This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "expiryDate": {
            "title": "RFC3339 datetime",
            "example": "2015-03-01T22:30:00+00:00",
            "description": "The expiry date of this Qualification. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "expiryNotificationQueuedAt": {
            "title": "RFC3339 datetime",
            "example": "2015-03-01T22:30:00+00:00",
            "description": "The due date for the recipient to complete this [Qualification Instance](#tag/Qualification-Instances). This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "notes": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "The notes stored on the [Qualification Instance](#tag/Qualification-Instances)"
          }
        },
        "required": [
          "qualificationLibraryItemId",
          "personId",
          "status"
        ]
      },
      "qualification-instances_patch_request": {
        "type": "object",
        "title": "Qualification Instance",
        "properties": {
          "status": {
            "type": "string",
            "description": "The status of this [Qualification Instance](#tag/Qualification-Instances)",
            "enum": [
              "DRAFT",
              "AWAITING_APPROVAL",
              "DECLINED",
              "APPROVED",
              "REVOKED",
              "EXPIRED",
              "EXPIRING_SOON",
              "CURRENT",
              "FUTURE",
              "RENEWING",
              "NON_COMPLIANT"
            ]
          },
          "issuingOrganisation": {
            "description": "The organisation that issued this qualification [Qualification Instance](#tag/Qualification-Instances)",
            "example": "ABCDE12345",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "registrationNumber": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "The registration number of the [Qualification Instance](#tag/Qualification-Instances)",
            "example": "ABCDE12345"
          },
          "issueDate": {
            "title": "RFC3339 datetime",
            "example": "2015-03-01T22:30:00+00:00",
            "description": "The issue date of the [Qualification Instance](#tag/Qualification-Instances). This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "expiryDate": {
            "title": "RFC3339 datetime",
            "example": "2015-03-01T22:30:00+00:00",
            "description": "The expiry date of this Qualification. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "expiryNotificationQueuedAt": {
            "title": "RFC3339 datetime",
            "example": "2015-03-01T22:30:00+00:00",
            "description": "The due date for the recipient to complete this [Qualification Instance](#tag/Qualification-Instances). This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "notes": {
            "oneOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "The notes stored on the [Qualification Instance](#tag/Qualification-Instances)"
          }
        },
        "required": [
          "id"
        ]
      },
      "qualifications": {
        "type": "object",
        "title": "Single [Qualification Instance](#tag/Qualification-Instances)",
        "properties": {
          "data": {
            "type": "object",
            "title": "Qualification Instance",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Qualification Instance](#tag/Qualification-Instances).",
                "type": "string"
              },
              "expiryDate": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The expiry date of this Qualification. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "expiryNotificationQueuedAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The due date for the recipient to complete this [Qualification Instance](#tag/Qualification-Instances). This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "issueDate": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The issue date of the [Qualification Instance](#tag/Qualification-Instances). This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "issuingOrganisation": {
                "description": "The organisation that issued this qualification [Qualification Instance](#tag/Qualification-Instances)",
                "example": "ABCDE12345",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "notes": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "The notes stored on the [Qualification Instance](#tag/Qualification-Instances)"
              },
              "person": {
                "type": "object",
                "description": "The subject [Person](#tag/People) of this [Qualification Instance](#tag/Qualification-Instances)",
                "properties": {
                  "id": {
                    "title": "UUIDv4",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "description": "The identifier string for the [Person](#tag/People).",
                    "type": "string"
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Name to display throughout the system for this [Person](#tags/people). Generally follows the pattern preferredName (firstName) lastName, but can be configured on a tenant-wide basis to be a different format.",
                    "example": "Batman (Bruce) Wayne"
                  },
                  "employeeNumber": {
                    "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                    "example": "00001",
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "autoIncrementIntellihrId": {
                    "type": "number",
                    "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                    "example": 1000
                  },
                  "link": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/people/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              },
              "qualificationStatus": {
                "type": "object",
                "deprecated": true,
                "description": "The [Qualification Status](#tag/Qualification-Statuses) of this [Qualification Instance](#tag/Qualification-Instances)",
                "properties": {
                  "id": {
                    "title": "UUIDv4",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "description": "The identifier string for the Qualification Status.",
                    "type": "string"
                  },
                  "name": {
                    "type": "string",
                    "description": "Qualification Status name"
                  },
                  "link": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/qualification-statuses/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              },
              "status": {
                "type": "string",
                "description": "The status of this [Qualification Instance](#tag/Qualification-Instances)",
                "enum": [
                  "DRAFT",
                  "AWAITING_APPROVAL",
                  "DECLINED",
                  "APPROVED",
                  "REVOKED",
                  "EXPIRED",
                  "EXPIRING_SOON",
                  "CURRENT",
                  "FUTURE",
                  "RENEWING",
                  "NON_COMPLIANT"
                ]
              },
              "libraryItem": {
                "type": "object",
                "description": "The [Qualification Library Item](#tag/Qualification-Library-Item) of this [Qualification Instance](#tag/Qualification-Instances)",
                "properties": {
                  "id": {
                    "title": "UUIDv4",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "description": "The identifier string for the Qualification Library Item.",
                    "type": "string"
                  },
                  "name": {
                    "type": "string",
                    "description": "Library Item name"
                  },
                  "qualificationType": {
                    "type": "object",
                    "description": "The type of qualification this [Qualification Library Item](#tag/Qualification-Library-Item) is for",
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the Qualification Type.",
                        "type": "string"
                      },
                      "name": {
                        "type": "string",
                        "description": "Library Item name"
                      }
                    }
                  },
                  "link": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/qualification-library-items/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              },
              "registrationNumber": {
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "The registration number of the [Qualification Instance](#tag/Qualification-Instances)",
                "example": "ABCDE12345"
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "asAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The point in time for which this response is for. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          }
        }
      },
      "qualifications_list": {
        "type": "object",
        "title": "List Qualification Instances",
        "properties": {
          "data": {
            "type": "array",
            "title": "data",
            "items": {
              "type": "object",
              "title": "Qualification Instance",
              "properties": {
                "id": {
                  "title": "UUIDv4",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "description": "The identifier string for the [Qualification Instance](#tag/Qualification-Instances).",
                  "type": "string"
                },
                "expiryDate": {
                  "title": "RFC3339 datetime",
                  "example": "2015-03-01T22:30:00+00:00",
                  "description": "The expiry date of this Qualification. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "expiryNotificationQueuedAt": {
                  "title": "RFC3339 datetime",
                  "example": "2015-03-01T22:30:00+00:00",
                  "description": "The due date for the recipient to complete this [Qualification Instance](#tag/Qualification-Instances). This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "issueDate": {
                  "title": "RFC3339 datetime",
                  "example": "2015-03-01T22:30:00+00:00",
                  "description": "The issue date of the [Qualification Instance](#tag/Qualification-Instances). This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "issuingOrganisation": {
                  "description": "The organisation that issued this qualification [Qualification Instance](#tag/Qualification-Instances)",
                  "example": "ABCDE12345",
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "notes": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The notes stored on the [Qualification Instance](#tag/Qualification-Instances)"
                },
                "person": {
                  "type": "object",
                  "description": "The subject [Person](#tag/People) of this [Qualification Instance](#tag/Qualification-Instances)",
                  "properties": {
                    "id": {
                      "title": "UUIDv4",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "description": "The identifier string for the [Person](#tag/People).",
                      "type": "string"
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Name to display throughout the system for this [Person](#tags/people). Generally follows the pattern preferredName (firstName) lastName, but can be configured on a tenant-wide basis to be a different format.",
                      "example": "Batman (Bruce) Wayne"
                    },
                    "employeeNumber": {
                      "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                      "example": "00001",
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "autoIncrementIntellihrId": {
                      "type": "number",
                      "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                      "example": 1000
                    },
                    "link": {
                      "type": "string",
                      "title": "URL",
                      "description": "Link on the public api to get more information on this piece of data.",
                      "example": "https://api.intellihr.io/v1/people/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                    }
                  }
                },
                "qualificationStatus": {
                  "type": "object",
                  "deprecated": true,
                  "description": "The [Qualification Status](#tag/Qualification-Statuses) of this [Qualification Instance](#tag/Qualification-Instances)",
                  "properties": {
                    "id": {
                      "title": "UUIDv4",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "description": "The identifier string for the Qualification Status.",
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "description": "Qualification Status name"
                    },
                    "link": {
                      "type": "string",
                      "title": "URL",
                      "description": "Link on the public api to get more information on this piece of data.",
                      "example": "https://api.intellihr.io/v1/qualification-statuses/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                    }
                  }
                },
                "status": {
                  "type": "string",
                  "description": "The status of this [Qualification Instance](#tag/Qualification-Instances)",
                  "enum": [
                    "DRAFT",
                    "AWAITING_APPROVAL",
                    "DECLINED",
                    "APPROVED",
                    "REVOKED",
                    "EXPIRED",
                    "EXPIRING_SOON",
                    "CURRENT",
                    "FUTURE",
                    "RENEWING",
                    "NON_COMPLIANT"
                  ]
                },
                "libraryItem": {
                  "type": "object",
                  "description": "The [Qualification Library Item](#tag/Qualification-Library-Item) of this [Qualification Instance](#tag/Qualification-Instances)",
                  "properties": {
                    "id": {
                      "title": "UUIDv4",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "description": "The identifier string for the Qualification Library Item.",
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "description": "Library Item name"
                    },
                    "qualificationType": {
                      "type": "object",
                      "description": "The type of qualification this [Qualification Library Item](#tag/Qualification-Library-Item) is for",
                      "properties": {
                        "id": {
                          "title": "UUIDv4",
                          "maxLength": 36,
                          "minLength": 36,
                          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                          "description": "The identifier string for the Qualification Type.",
                          "type": "string"
                        },
                        "name": {
                          "type": "string",
                          "description": "Library Item name"
                        }
                      }
                    },
                    "link": {
                      "type": "string",
                      "title": "URL",
                      "description": "Link on the public api to get more information on this piece of data.",
                      "example": "https://api.intellihr.io/v1/qualification-library-items/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                    }
                  }
                },
                "registrationNumber": {
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "description": "The registration number of the [Qualification Instance](#tag/Qualification-Instances)",
                  "example": "ABCDE12345"
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "asAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The point in time at which the data in this response is accurate. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "pagination": {
                "type": "object",
                "description": "Contains information related to the pagination of the response",
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total items count",
                    "minimum": 0,
                    "example": 50
                  },
                  "count": {
                    "type": "integer",
                    "description": "Number of items for current page",
                    "minimum": 0,
                    "example": 10
                  },
                  "per_page": {
                    "type": "integer",
                    "description": "Items per page limit",
                    "minimum": 0,
                    "example": 10
                  },
                  "current_page": {
                    "type": "integer",
                    "description": "Current page",
                    "minimum": 1,
                    "example": 3
                  },
                  "total_pages": {
                    "type": "integer",
                    "description": "Total number of pages",
                    "minimum": 1,
                    "example": 5
                  }
                }
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          },
          "links": {
            "type": "object",
            "description": "Links to other related resources.",
            "properties": {
              "self": {
                "type": "string",
                "description": "The current page URL",
                "example": "https://api.intellihr.io/v1/qualifications?limit=1&page=3"
              },
              "first": {
                "type": "string",
                "description": "The first page URL",
                "example": "https://api.intellihr.io/v1/qualifications?limit=1&page=1"
              },
              "prev": {
                "type": "string",
                "description": "The previous page URL",
                "example": "https://api.intellihr.io/v1/qualifications?limit=1&page=2"
              },
              "next": {
                "type": "string",
                "description": "The next page URL",
                "example": "https://api.intellihr.io/v1/qualifications?limit=1&page=4"
              },
              "last": {
                "type": "string",
                "description": "The last page URL",
                "example": "https://api.intellihr.io/v1/qualifications?limit=1&page=5"
              }
            }
          }
        }
      },
      "qualification-statuses": {
        "type": "object",
        "title": "Single [Qualification Status](#tag/Qualification-Statuses)",
        "properties": {
          "data": {
            "type": "object",
            "title": "Qualification Status",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Qualification Status](#tag/Qualification-Statuses).",
                "type": "string"
              },
              "name": {
                "description": "The name of this [Qualification Status](#tag/Qualification-Statuses)",
                "type": "string"
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "asAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The point in time for which this response is for. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          }
        }
      },
      "qualification-library-items_create_request": {
        "type": "object",
        "title": "Qualification Library Item",
        "properties": {
          "name": {
            "description": "The name of this [Qualification Library Item](#tag/Qualification-Library-Items)",
            "type": "string"
          },
          "qualificationTypeId": {
            "title": "UUIDv4",
            "maxLength": 36,
            "minLength": 36,
            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
            "description": "The identifier string for the Qualification Type Id.",
            "type": "string"
          },
          "qualificationExpiryType": {
            "type": "string",
            "description": "The expiry type for this library item",
            "enum": [
              "EXPIRY_INAPPLICABLE",
              "EXPIRY_OPTIONAL",
              "EXPIRY_REQUIRED"
            ]
          },
          "qualificationRegistrationNumberVisibilityType": {
            "type": "string",
            "description": "The expiry type for this library item",
            "enum": [
              "REGISTRATION_NUMBER_INAPPLICABLE",
              "REGISTRATION_NUMBER_OPTIONAL",
              "REGISTRATION_NUMBER_REQUIRED"
            ]
          },
          "qualificationAttachmentRequirementType": {
            "type": "string",
            "description": "If documents are required for this library item",
            "enum": [
              "DOCUMENTS_OPTIONAL",
              "DOCUMENTS_REQUIRED"
            ]
          },
          "expiryWarningPeriod": {
            "description": "Period in days, that there is a warning before the expiry of the qualification. If qualificationExpiryType is set to EXPIRY_INAPPLICABLE, this value will be ignored.",
            "type": "number"
          },
          "sendExpiryWarning": {
            "description": "If this [Qualification Library Item](#tag/Qualification-Library-Items) will send expiry warning/s using the periods defined. If qualificationExpiryType is set to EXPIRY_INAPPLICABLE, this value will be ignored.",
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "qualificationTypeId",
          "qualificationExpiryType",
          "qualificationRegistrationNumberVisibilityType",
          "qualificationAttachmentRequirementType"
        ]
      },
      "qualification-library-items_patch_request": {
        "type": "object",
        "title": "Qualification Library Item",
        "properties": {
          "name": {
            "description": "The name of this [Qualification Library Item](#tag/Qualification-Library-Items)",
            "type": "string"
          },
          "qualificationTypeId": {
            "title": "UUIDv4",
            "maxLength": 36,
            "minLength": 36,
            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
            "description": "The identifier string for the Qualification Type Id.",
            "type": "string"
          },
          "qualificationExpiryType": {
            "type": "string",
            "description": "The expiry type for this library item",
            "enum": [
              "EXPIRY_INAPPLICABLE",
              "EXPIRY_OPTIONAL",
              "EXPIRY_REQUIRED"
            ]
          },
          "qualificationRegistrationNumberVisibilityType": {
            "type": "string",
            "description": "The expiry type for this library item",
            "enum": [
              "REGISTRATION_NUMBER_INAPPLICABLE",
              "REGISTRATION_NUMBER_OPTIONAL",
              "REGISTRATION_NUMBER_REQUIRED"
            ]
          },
          "qualificationAttachmentRequirementType": {
            "type": "string",
            "description": "If documents are required for this library item",
            "enum": [
              "DOCUMENTS_OPTIONAL",
              "DOCUMENTS_REQUIRED"
            ]
          },
          "expiryWarningPeriod": {
            "description": "Period in days, that there is a warning before the expiry of the qualification. If qualificationExpiryType is set to EXPIRY_INAPPLICABLE, this value will be ignored.",
            "type": "number"
          },
          "sendExpiryWarning": {
            "description": "If this [Qualification Library Item](#tag/Qualification-Library-Items) will send expiry warning/s using the periods defined. If qualificationExpiryType is set to EXPIRY_INAPPLICABLE, this value will be ignored.",
            "type": "boolean"
          }
        }
      },
      "qualification-library-items": {
        "type": "object",
        "title": "Single [Qualification Library Item](#tag/Qualification-Library-Items)",
        "properties": {
          "data": {
            "type": "object",
            "title": "Qualification Library Item",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Qualification Library Item](#tag/Qualification-Library-Items).",
                "type": "string"
              },
              "name": {
                "description": "The name of this [Qualification Library Item](#tag/Qualification-Library-Items)",
                "type": "string"
              },
              "qualificationType": {
                "type": "object",
                "description": "The type of this [Qualification Library Item](#tag/Qualification-Library-Items)",
                "properties": {
                  "id": {
                    "title": "UUIDv4",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "description": "The identifier string for the Qualification Type id.",
                    "type": "string"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of this Qualification Type"
                  }
                }
              },
              "qualificationExpiryType": {
                "type": "string",
                "description": "The expiry type for this library item",
                "enum": [
                  "EXPIRY_INAPPLICABLE",
                  "EXPIRY_OPTIONAL",
                  "EXPIRY_REQUIRED"
                ]
              },
              "qualificationRegistrationNumberVisibilityType": {
                "type": "string",
                "description": "The expiry type for this library item",
                "enum": [
                  "REGISTRATION_NUMBER_INAPPLICABLE",
                  "REGISTRATION_NUMBER_OPTIONAL",
                  "REGISTRATION_NUMBER_REQUIRED"
                ]
              },
              "qualificationAttachmentRequirementType": {
                "type": "string",
                "description": "If documents are required for this library item",
                "enum": [
                  "DOCUMENTS_OPTIONAL",
                  "DOCUMENTS_REQUIRED"
                ]
              },
              "expiryWarningPeriod": {
                "description": "Period in days, that there is a warning before the expiry of the qualification. If qualificationExpiryType is set to EXPIRY_INAPPLICABLE, this value will be ignored.",
                "type": "number"
              },
              "expiryPeriods": {
                "description": "The expiry periods set for this [Qualification Library Item](#tag/Qualification-Library-Items)",
                "deprecated": true,
                "oneOf": [
                  {
                    "type": "array",
                    "description": "An array of expiry periods set for this [Qualification Library Item](#tag/Qualification-Library-Items)",
                    "items": {
                      "properties": {
                        "id": {
                          "title": "UUIDv4",
                          "maxLength": 36,
                          "minLength": 36,
                          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                          "description": "The identifier string for the Warning Period id.",
                          "type": "string"
                        },
                        "notificationEventType": {
                          "title": "UUIDv4",
                          "maxLength": 36,
                          "minLength": 36,
                          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                          "description": "The identifier string for the Notification event type id.",
                          "type": "string"
                        },
                        "expiryWarningPeriod": {
                          "description": "Period in days, that there is a warning before the expiry of the qualification",
                          "type": "number"
                        }
                      }
                    }
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "sendExpiryWarning": {
                "description": "If this [Qualification Library Item](#tag/Qualification-Library-Items) will send expiry warning/s using the periods defined. If qualificationExpiryType is set to EXPIRY_INAPPLICABLE, this value will be ignored.",
                "type": "boolean"
              },
              "qualificationInstanceUsageCount": {
                "description": "Number of qualification instances currently being used with this qualification library item",
                "type": "number"
              },
              "jobRequirementGroupUsageCount": {
                "description": "Number of job requirement groups currently being used with this qualification library item",
                "type": "number"
              },
              "jobRequirementUsageCount": {
                "description": "Number of job requirements currently being used with this qualification library item",
                "type": "number"
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "asAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The point in time for which this response is for. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          }
        }
      },
      "qualification-library-items_list": {
        "type": "object",
        "title": "List Qualification Library Items",
        "properties": {
          "data": {
            "type": "array",
            "title": "data",
            "items": {
              "type": "object",
              "title": "Qualification Library Item",
              "properties": {
                "id": {
                  "title": "UUIDv4",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "description": "The identifier string for the [Qualification Library Item](#tag/Qualification-Library-Items).",
                  "type": "string"
                },
                "name": {
                  "description": "The name of this [Qualification Library Item](#tag/Qualification-Library-Items)",
                  "type": "string"
                },
                "qualificationType": {
                  "type": "object",
                  "description": "The type of this [Qualification Library Item](#tag/Qualification-Library-Items)",
                  "properties": {
                    "id": {
                      "title": "UUIDv4",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "description": "The identifier string for the Qualification Type id.",
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of this Qualification Type"
                    }
                  }
                },
                "qualificationExpiryType": {
                  "type": "string",
                  "description": "The expiry type for this library item",
                  "enum": [
                    "EXPIRY_INAPPLICABLE",
                    "EXPIRY_OPTIONAL",
                    "EXPIRY_REQUIRED"
                  ]
                },
                "qualificationRegistrationNumberVisibilityType": {
                  "type": "string",
                  "description": "The expiry type for this library item",
                  "enum": [
                    "REGISTRATION_NUMBER_INAPPLICABLE",
                    "REGISTRATION_NUMBER_OPTIONAL",
                    "REGISTRATION_NUMBER_REQUIRED"
                  ]
                },
                "qualificationAttachmentRequirementType": {
                  "type": "string",
                  "description": "If documents are required for this library item",
                  "enum": [
                    "DOCUMENTS_OPTIONAL",
                    "DOCUMENTS_REQUIRED"
                  ]
                },
                "expiryWarningPeriod": {
                  "description": "Period in days, that there is a warning before the expiry of the qualification. If qualificationExpiryType is set to EXPIRY_INAPPLICABLE, this value will be ignored.",
                  "type": "number"
                },
                "expiryPeriods": {
                  "description": "The expiry periods set for this [Qualification Library Item](#tag/Qualification-Library-Items)",
                  "deprecated": true,
                  "oneOf": [
                    {
                      "type": "array",
                      "description": "An array of expiry periods set for this [Qualification Library Item](#tag/Qualification-Library-Items)",
                      "items": {
                        "properties": {
                          "id": {
                            "title": "UUIDv4",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "description": "The identifier string for the Warning Period id.",
                            "type": "string"
                          },
                          "notificationEventType": {
                            "title": "UUIDv4",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "description": "The identifier string for the Notification event type id.",
                            "type": "string"
                          },
                          "expiryWarningPeriod": {
                            "description": "Period in days, that there is a warning before the expiry of the qualification",
                            "type": "number"
                          }
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "sendExpiryWarning": {
                  "description": "If this [Qualification Library Item](#tag/Qualification-Library-Items) will send expiry warning/s using the periods defined. If qualificationExpiryType is set to EXPIRY_INAPPLICABLE, this value will be ignored.",
                  "type": "boolean"
                },
                "qualificationInstanceUsageCount": {
                  "description": "Number of qualification instances currently being used with this qualification library item",
                  "type": "number"
                },
                "jobRequirementGroupUsageCount": {
                  "description": "Number of job requirement groups currently being used with this qualification library item",
                  "type": "number"
                },
                "jobRequirementUsageCount": {
                  "description": "Number of job requirements currently being used with this qualification library item",
                  "type": "number"
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "asAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The point in time at which the data in this response is accurate. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "pagination": {
                "type": "object",
                "description": "Contains information related to the pagination of the response",
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total items count",
                    "minimum": 0,
                    "example": 50
                  },
                  "count": {
                    "type": "integer",
                    "description": "Number of items for current page",
                    "minimum": 0,
                    "example": 10
                  },
                  "per_page": {
                    "type": "integer",
                    "description": "Items per page limit",
                    "minimum": 0,
                    "example": 10
                  },
                  "current_page": {
                    "type": "integer",
                    "description": "Current page",
                    "minimum": 1,
                    "example": 3
                  },
                  "total_pages": {
                    "type": "integer",
                    "description": "Total number of pages",
                    "minimum": 1,
                    "example": 5
                  }
                }
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          },
          "links": {
            "type": "object",
            "description": "Links to other related resources.",
            "properties": {
              "self": {
                "type": "string",
                "description": "The current page URL",
                "example": "https://api.intellihr.io/v1/qualification-library-items?limit=1&page=3"
              },
              "first": {
                "type": "string",
                "description": "The first page URL",
                "example": "https://api.intellihr.io/v1/qualification-library-items?limit=1&page=1"
              },
              "prev": {
                "type": "string",
                "description": "The previous page URL",
                "example": "https://api.intellihr.io/v1/qualification-library-items?limit=1&page=2"
              },
              "next": {
                "type": "string",
                "description": "The next page URL",
                "example": "https://api.intellihr.io/v1/qualification-library-items?limit=1&page=4"
              },
              "last": {
                "type": "string",
                "description": "The last page URL",
                "example": "https://api.intellihr.io/v1/qualification-library-items?limit=1&page=5"
              }
            }
          }
        }
      },
      "qualification-types": {
        "type": "object",
        "title": "Single [Qualification Type](#tag/Qualification-Types)",
        "properties": {
          "data": {
            "type": "object",
            "title": "Qualification Type",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Qualification Type](#tag/Qualification-Types).",
                "type": "string"
              },
              "name": {
                "description": "The issue date of the [Qualification Type](#tag/Qualification-Types)",
                "type": "string"
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "asAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The point in time for which this response is for. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          }
        }
      },
      "qualification-types_list": {
        "type": "object",
        "title": "List Qualification Types",
        "properties": {
          "data": {
            "type": "array",
            "title": "data",
            "items": {
              "type": "object",
              "title": "Qualification Type",
              "properties": {
                "id": {
                  "title": "UUIDv4",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "description": "The identifier string for the [Qualification Type](#tag/Qualification-Types).",
                  "type": "string"
                },
                "name": {
                  "description": "The issue date of the [Qualification Type](#tag/Qualification-Types)",
                  "type": "string"
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "asAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The point in time at which the data in this response is accurate. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "pagination": {
                "type": "object",
                "description": "Contains information related to the pagination of the response",
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total items count",
                    "minimum": 0,
                    "example": 50
                  },
                  "count": {
                    "type": "integer",
                    "description": "Number of items for current page",
                    "minimum": 0,
                    "example": 10
                  },
                  "per_page": {
                    "type": "integer",
                    "description": "Items per page limit",
                    "minimum": 0,
                    "example": 10
                  },
                  "current_page": {
                    "type": "integer",
                    "description": "Current page",
                    "minimum": 1,
                    "example": 3
                  },
                  "total_pages": {
                    "type": "integer",
                    "description": "Total number of pages",
                    "minimum": 1,
                    "example": 5
                  }
                }
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          },
          "links": {
            "type": "object",
            "description": "Links to other related resources.",
            "properties": {
              "self": {
                "type": "string",
                "description": "The current page URL",
                "example": "https://api.intellihr.io/v1/qualification-types?limit=1&page=3"
              },
              "first": {
                "type": "string",
                "description": "The first page URL",
                "example": "https://api.intellihr.io/v1/qualification-types?limit=1&page=1"
              },
              "prev": {
                "type": "string",
                "description": "The previous page URL",
                "example": "https://api.intellihr.io/v1/qualification-types?limit=1&page=2"
              },
              "next": {
                "type": "string",
                "description": "The next page URL",
                "example": "https://api.intellihr.io/v1/qualification-types?limit=1&page=4"
              },
              "last": {
                "type": "string",
                "description": "The last page URL",
                "example": "https://api.intellihr.io/v1/qualification-types?limit=1&page=5"
              }
            }
          }
        }
      },
      "recruitment-sources": {
        "type": "object",
        "title": "Single Recruitment Source",
        "properties": {
          "data": {
            "type": "object",
            "title": "recruitmentSource",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Recruitment Source](#tag/Recruitment-Sources).",
                "type": "string"
              },
              "name": {
                "type": "string",
                "description": "The name given to this recruitment source.",
                "example": "Direct"
              },
              "parentId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the parent [Recruitment Source](#tag/Recruitment-Sources), or null if there is no parent (this is a top level recruitment source).",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "isEnabled": {
                "type": "boolean",
                "example": true,
                "description": "Specifies whether users can select this [Recruitment Source](#tag/Recruitment-Sources) in dropdowns."
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          }
        }
      },
      "recruitment-sources_list": {
        "type": "object",
        "title": "List of Recruitment Sources",
        "properties": {
          "data": {
            "type": "array",
            "title": "recruitmentSource",
            "description": "Recruitment source details.",
            "items": {
              "type": "object",
              "title": "recruitmentSource",
              "properties": {
                "id": {
                  "title": "UUIDv4",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "description": "The identifier string for the [Recruitment Source](#tag/Recruitment-Sources).",
                  "type": "string"
                },
                "name": {
                  "type": "string",
                  "description": "The name given to this recruitment source.",
                  "example": "Direct"
                },
                "parentId": {
                  "title": "UUIDv4",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "description": "The identifier string for the parent [Recruitment Source](#tag/Recruitment-Sources), or null if there is no parent (this is a top level recruitment source).",
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "isEnabled": {
                  "type": "boolean",
                  "example": true,
                  "description": "Specifies whether users can select this [Recruitment Source](#tag/Recruitment-Sources) in dropdowns."
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "pagination": {
                "type": "object",
                "description": "Contains information related to the pagination of the response",
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total items count",
                    "minimum": 0,
                    "example": 50
                  },
                  "count": {
                    "type": "integer",
                    "description": "Number of items for current page",
                    "minimum": 0,
                    "example": 10
                  },
                  "per_page": {
                    "type": "integer",
                    "description": "Items per page limit",
                    "minimum": 0,
                    "example": 10
                  },
                  "current_page": {
                    "type": "integer",
                    "description": "Current page",
                    "minimum": 1,
                    "example": 3
                  },
                  "total_pages": {
                    "type": "integer",
                    "description": "Total number of pages",
                    "minimum": 1,
                    "example": 5
                  }
                }
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          },
          "links": {
            "type": "object",
            "description": "Links to other related resources.",
            "properties": {
              "self": {
                "type": "string",
                "description": "The current page URL",
                "example": "https://api.intellihr.io/v1/recruitment-sources?limit=1&page=3"
              },
              "first": {
                "type": "string",
                "description": "The first page URL",
                "example": "https://api.intellihr.io/v1/recruitment-sources?limit=1&page=1"
              },
              "prev": {
                "type": "string",
                "description": "The previous page URL",
                "example": "https://api.intellihr.io/v1/recruitment-sources?limit=1&page=2"
              },
              "next": {
                "type": "string",
                "description": "The next page URL",
                "example": "https://api.intellihr.io/v1/recruitment-sources?limit=1&page=4"
              },
              "last": {
                "type": "string",
                "description": "The last page URL",
                "example": "https://api.intellihr.io/v1/recruitment-sources?limit=1&page=5"
              }
            }
          }
        }
      },
      "representative-types": {
        "type": "object",
        "title": "Single [Representative Type](#tag/Representative-Types)",
        "properties": {
          "data": {
            "type": "object",
            "title": "Representative Type",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Representative Type](#tag/Representative-Types).",
                "type": "string"
              },
              "name": {
                "description": "Name of this [Representative Type](#tag/Representative-Types)",
                "type": "string"
              },
              "modelType": {
                "type": "string",
                "description": "Type of Object this [Representative Type](#tag/Representative-Types) relates to.",
                "enum": [
                  "BUSINESS_UNIT",
                  "LOCATION"
                ]
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "asAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The point in time for which this response is for. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          }
        }
      },
      "representative-types_list": {
        "type": "object",
        "title": "List Representative Types",
        "properties": {
          "data": {
            "type": "array",
            "title": "data",
            "items": {
              "type": "object",
              "title": "Representative Type",
              "properties": {
                "id": {
                  "title": "UUIDv4",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "description": "The identifier string for the [Representative Type](#tag/Representative-Types).",
                  "type": "string"
                },
                "name": {
                  "description": "Name of this [Representative Type](#tag/Representative-Types)",
                  "type": "string"
                },
                "modelType": {
                  "type": "string",
                  "description": "Type of Object this [Representative Type](#tag/Representative-Types) relates to.",
                  "enum": [
                    "BUSINESS_UNIT",
                    "LOCATION"
                  ]
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "asAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The point in time at which the data in this response is accurate. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "pagination": {
                "type": "object",
                "description": "Contains information related to the pagination of the response",
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total items count",
                    "minimum": 0,
                    "example": 50
                  },
                  "count": {
                    "type": "integer",
                    "description": "Number of items for current page",
                    "minimum": 0,
                    "example": 10
                  },
                  "per_page": {
                    "type": "integer",
                    "description": "Items per page limit",
                    "minimum": 0,
                    "example": 10
                  },
                  "current_page": {
                    "type": "integer",
                    "description": "Current page",
                    "minimum": 1,
                    "example": 3
                  },
                  "total_pages": {
                    "type": "integer",
                    "description": "Total number of pages",
                    "minimum": 1,
                    "example": 5
                  }
                }
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          },
          "links": {
            "type": "object",
            "description": "Links to other related resources.",
            "properties": {
              "self": {
                "type": "string",
                "description": "The current page URL",
                "example": "https://api.intellihr.io/v1/representative-types?limit=1&page=3"
              },
              "first": {
                "type": "string",
                "description": "The first page URL",
                "example": "https://api.intellihr.io/v1/representative-types?limit=1&page=1"
              },
              "prev": {
                "type": "string",
                "description": "The previous page URL",
                "example": "https://api.intellihr.io/v1/representative-types?limit=1&page=2"
              },
              "next": {
                "type": "string",
                "description": "The next page URL",
                "example": "https://api.intellihr.io/v1/representative-types?limit=1&page=4"
              },
              "last": {
                "type": "string",
                "description": "The last page URL",
                "example": "https://api.intellihr.io/v1/representative-types?limit=1&page=5"
              }
            }
          }
        }
      },
      "skills": {
        "type": "object",
        "title": "Single Skill",
        "properties": {
          "data": {
            "type": "object",
            "title": "Skill",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Skill](#tag/Skills).",
                "type": "string"
              },
              "name": {
                "type": "string",
                "description": "User friendly name given to this [Skill](#tag/Skills).",
                "example": "Campaign Management"
              },
              "description": {
                "type": "string",
                "description": "A description of the [Skill](#tag/Skills).",
                "example": "The planning, execution, tracking, and analysis of a marketing initiative; sometimes centered around a new product launch or an event."
              },
              "isBusinessCritical": {
                "type": "boolean",
                "description": "Whether this [Skill](#tag/Skills) is business critical.",
                "example": "true"
              },
              "skillDiscipline": {
                "type": "object",
                "description": "The [Skill Discipline](#tag/Skill-Disciplines) to which this [Skill](#tag/Skills) belongs.",
                "properties": {
                  "id": {
                    "title": "UUIDv4",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "description": "The identifier string for the [Skill Discipline](#tag/Skill-Disciplines) of this [Skill](#tag/Skills).",
                    "type": "string"
                  },
                  "name": {
                    "description": "User friendly name given to this [Skill Discipline](#tag/Skill-Disciplines).",
                    "example": "Marketing",
                    "type": "string"
                  },
                  "link": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/skill-disciplines/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "asAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The point in time for which this response is for. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          }
        }
      },
      "skills_create_request": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User friendly name given to this [Skill](#tag/Skills).",
            "example": "Campaign Management"
          },
          "description": {
            "type": "string",
            "description": "A description of the [Skill](#tag/Skills).",
            "example": "The planning, execution, tracking, and analysis of a marketing initiative; sometimes centered around a new product launch or an event."
          },
          "isBusinessCritical": {
            "type": "boolean",
            "description": "Whether this [Skill](#tag/Skill) is business critical.",
            "example": "true"
          },
          "skillDisciplineId": {
            "title": "UUIDv4",
            "maxLength": 36,
            "minLength": 36,
            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
            "description": "The identifier string for the [Skill Discipline](#tag/Skill-Disciplines) to which this [Skill](#tag/Skills) belongs.",
            "type": "string"
          }
        },
        "required": [
          "name",
          "description",
          "isBusinessCritical",
          "skillDisciplineId"
        ]
      },
      "skills_patch_request": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User friendly name given to this [Skill](#tag/Skills).",
            "example": "Campaign Management"
          },
          "description": {
            "type": "string",
            "description": "A description of the [Skill](#tag/Skills).",
            "example": "The planning, execution, tracking, and analysis of a marketing initiative; sometimes centered around a new product launch or an event."
          },
          "isBusinessCritical": {
            "type": "boolean",
            "description": "Whether this [Skill](#tag/Skill) is business critical.",
            "example": "true"
          },
          "skillDisciplineId": {
            "title": "UUIDv4",
            "maxLength": 36,
            "minLength": 36,
            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
            "description": "The identifier string for the [Skill Discipline](#tag/Skill-Disciplines) to which this [Skill](#tag/Skills) belongs.",
            "type": "string"
          }
        }
      },
      "skills_list": {
        "type": "object",
        "title": "List of Skills",
        "properties": {
          "data": {
            "type": "array",
            "title": "data",
            "items": {
              "type": "object",
              "title": "Skill",
              "properties": {
                "id": {
                  "title": "UUIDv4",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "description": "The identifier string for the [Skill](#tag/Skills).",
                  "type": "string"
                },
                "name": {
                  "type": "string",
                  "description": "User friendly name given to this [Skill](#tag/Skills).",
                  "example": "Campaign Management"
                },
                "description": {
                  "type": "string",
                  "description": "A description of the [Skill](#tag/Skills).",
                  "example": "The planning, execution, tracking, and analysis of a marketing initiative; sometimes centered around a new product launch or an event."
                },
                "isBusinessCritical": {
                  "type": "boolean",
                  "description": "Whether this [Skill](#tag/Skills) is business critical.",
                  "example": "true"
                },
                "skillDiscipline": {
                  "type": "object",
                  "description": "The [Skill Discipline](#tag/Skill-Disciplines) to which this [Skill](#tag/Skills) belongs.",
                  "properties": {
                    "id": {
                      "title": "UUIDv4",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "description": "The identifier string for the [Skill Discipline](#tag/Skill-Disciplines) of this [Skill](#tag/Skills).",
                      "type": "string"
                    },
                    "name": {
                      "description": "User friendly name given to this [Skill Discipline](#tag/Skill-Disciplines).",
                      "example": "Marketing",
                      "type": "string"
                    },
                    "link": {
                      "type": "string",
                      "title": "URL",
                      "description": "Link on the public api to get more information on this piece of data.",
                      "example": "https://api.intellihr.io/v1/skill-disciplines/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                    }
                  }
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "asAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The point in time for which this response is for. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "pagination": {
                "type": "object",
                "description": "Contains information related to the pagination of the response",
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total items count",
                    "minimum": 0,
                    "example": 50
                  },
                  "count": {
                    "type": "integer",
                    "description": "Number of items for current page",
                    "minimum": 0,
                    "example": 10
                  },
                  "per_page": {
                    "type": "integer",
                    "description": "Items per page limit",
                    "minimum": 0,
                    "example": 10
                  },
                  "current_page": {
                    "type": "integer",
                    "description": "Current page",
                    "minimum": 1,
                    "example": 3
                  },
                  "total_pages": {
                    "type": "integer",
                    "description": "Total number of pages",
                    "minimum": 1,
                    "example": 5
                  }
                }
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          },
          "links": {
            "type": "object",
            "description": "Links to other related resources.",
            "properties": {
              "self": {
                "type": "string",
                "description": "The current page URL",
                "example": "https://api.intellihr.io/v1/trainings?limit=1&page=3"
              },
              "first": {
                "type": "string",
                "description": "The first page URL",
                "example": "https://api.intellihr.io/v1/trainings?limit=1&page=1"
              },
              "prev": {
                "type": "string",
                "description": "The previous page URL",
                "example": "https://api.intellihr.io/v1/trainings?limit=1&page=2"
              },
              "next": {
                "type": "string",
                "description": "The next page URL",
                "example": "https://api.intellihr.io/v1/trainings?limit=1&page=4"
              },
              "last": {
                "type": "string",
                "description": "The last page URL",
                "example": "https://api.intellihr.io/v1/trainings?limit=1&page=5"
              }
            }
          }
        }
      },
      "skill-disciplines": {
        "type": "object",
        "title": "Single Skill Discipline",
        "properties": {
          "data": {
            "type": "object",
            "title": "Skill Discipline Schema",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Skill Discipline](#tag/Skill-Disciplines).",
                "type": "string"
              },
              "name": {
                "type": "string",
                "description": "The name of this [Skill Discipline](#tags/skill-disciplines).",
                "example": "Accounting"
              },
              "skills": {
                "type": "array",
                "description": "An array of Skills belonging to this Skill Discipline.",
                "items": {
                  "properties": {
                    "id": {
                      "title": "UUIDv4",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "description": "The identifier string for the [Skills](#tag/skills).",
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name/position title of this [Skills](#tag/skills).",
                      "example": "Payroll"
                    },
                    "link": {
                      "type": "string",
                      "title": "URL",
                      "description": "Link on the public api to get more information on this piece of data.",
                      "example": "https://api.intellihr.io/v1/skills/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                    }
                  }
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          }
        }
      },
      "skill-disciplines_list": {
        "type": "object",
        "title": "List Skill Disciplines",
        "properties": {
          "data": {
            "type": "array",
            "title": "data",
            "items": {
              "type": "object",
              "title": "Skill Discipline Schema",
              "properties": {
                "id": {
                  "title": "UUIDv4",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "description": "The identifier string for the [Skill Discipline](#tag/Skill-Disciplines).",
                  "type": "string"
                },
                "name": {
                  "type": "string",
                  "description": "The name of this [Skill Discipline](#tags/skill-disciplines).",
                  "example": "Accounting"
                },
                "skills": {
                  "type": "array",
                  "description": "An array of Skills belonging to this Skill Discipline.",
                  "items": {
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the [Skills](#tag/skills).",
                        "type": "string"
                      },
                      "name": {
                        "type": "string",
                        "description": "The name/position title of this [Skills](#tag/skills).",
                        "example": "Payroll"
                      },
                      "link": {
                        "type": "string",
                        "title": "URL",
                        "description": "Link on the public api to get more information on this piece of data.",
                        "example": "https://api.intellihr.io/v1/skills/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                      }
                    }
                  }
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "pagination": {
                "type": "object",
                "description": "Contains information related to the pagination of the response",
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total items count",
                    "minimum": 0,
                    "example": 50
                  },
                  "count": {
                    "type": "integer",
                    "description": "Number of items for current page",
                    "minimum": 0,
                    "example": 10
                  },
                  "per_page": {
                    "type": "integer",
                    "description": "Items per page limit",
                    "minimum": 0,
                    "example": 10
                  },
                  "current_page": {
                    "type": "integer",
                    "description": "Current page",
                    "minimum": 1,
                    "example": 3
                  },
                  "total_pages": {
                    "type": "integer",
                    "description": "Total number of pages",
                    "minimum": 1,
                    "example": 5
                  }
                }
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          },
          "links": {
            "type": "object",
            "description": "Links to other related resources.",
            "properties": {
              "self": {
                "type": "string",
                "description": "The current page URL",
                "example": "https://api.intellihr.io/v1/skill-disciplines?limit=1&page=3"
              },
              "first": {
                "type": "string",
                "description": "The first page URL",
                "example": "https://api.intellihr.io/v1/skill-disciplines?limit=1&page=1"
              },
              "prev": {
                "type": "string",
                "description": "The previous page URL",
                "example": "https://api.intellihr.io/v1/skill-disciplines?limit=1&page=2"
              },
              "next": {
                "type": "string",
                "description": "The next page URL",
                "example": "https://api.intellihr.io/v1/skill-disciplines?limit=1&page=4"
              },
              "last": {
                "type": "string",
                "description": "The last page URL",
                "example": "https://api.intellihr.io/v1/skill-disciplines?limit=1&page=5"
              }
            }
          }
        }
      },
      "skill-disciplines_create": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of this [Skill Discipline](#tags/skill-disciplines).",
            "example": "Accounting"
          }
        }
      },
      "skill-disciplines_patch": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of this [Skill Discipline](#tags/skill-disciplines).",
            "example": "Accounting"
          }
        }
      },
      "training-providers": {
        "type": "object",
        "title": "Single Training Provider",
        "properties": {
          "data": {
            "type": "object",
            "title": "trainingProviders",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Training Provider](#tag/Training-Providers).",
                "type": "string"
              },
              "name": {
                "description": "User friendly name given to the [Training Provider](#tag/Training-Providers).",
                "example": "HR Training Team",
                "type": "string"
              },
              "isDefault": {
                "description": "Indicates if this [Training Provider](#tag/Training-Providers) will be used as a default when creating a [Training](#tag/Trainings) record.",
                "example": false,
                "type": "boolean"
              },
              "isEnabled": {
                "description": "Specifies whether users can select this Training Type in dropdowns",
                "example": false,
                "type": "boolean"
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          }
        }
      },
      "training-providers_list": {
        "type": "object",
        "title": "List all Training Providers",
        "properties": {
          "data": {
            "type": "array",
            "title": "data",
            "items": {
              "type": "object",
              "title": "trainingProviders",
              "properties": {
                "id": {
                  "title": "UUIDv4",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "description": "The identifier string for the [Training Provider](#tag/Training-Providers).",
                  "type": "string"
                },
                "name": {
                  "description": "User friendly name given to the [Training Provider](#tag/Training-Providers).",
                  "example": "HR Training Team",
                  "type": "string"
                },
                "isDefault": {
                  "description": "Indicates if this [Training Provider](#tag/Training-Providers) will be used as a default when creating a [Training](#tag/Trainings) record.",
                  "example": false,
                  "type": "boolean"
                },
                "isEnabled": {
                  "description": "Specifies whether users can select this Training Type in dropdowns",
                  "example": false,
                  "type": "boolean"
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "pagination": {
                "type": "object",
                "description": "Contains information related to the pagination of the response",
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total items count",
                    "minimum": 0,
                    "example": 50
                  },
                  "count": {
                    "type": "integer",
                    "description": "Number of items for current page",
                    "minimum": 0,
                    "example": 10
                  },
                  "per_page": {
                    "type": "integer",
                    "description": "Items per page limit",
                    "minimum": 0,
                    "example": 10
                  },
                  "current_page": {
                    "type": "integer",
                    "description": "Current page",
                    "minimum": 1,
                    "example": 3
                  },
                  "total_pages": {
                    "type": "integer",
                    "description": "Total number of pages",
                    "minimum": 1,
                    "example": 5
                  }
                }
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          },
          "links": {
            "type": "object",
            "description": "Links to other related resources.",
            "properties": {
              "self": {
                "type": "string",
                "description": "The current page URL",
                "example": "https://api.intellihr.io/v1/training-providers?limit=1&page=3"
              },
              "first": {
                "type": "string",
                "description": "The first page URL",
                "example": "https://api.intellihr.io/v1/training-providers?limit=1&page=1"
              },
              "prev": {
                "type": "string",
                "description": "The previous page URL",
                "example": "https://api.intellihr.io/v1/training-providers?limit=1&page=2"
              },
              "next": {
                "type": "string",
                "description": "The next page URL",
                "example": "https://api.intellihr.io/v1/training-providers?limit=1&page=4"
              },
              "last": {
                "type": "string",
                "description": "The last page URL",
                "example": "https://api.intellihr.io/v1/training-providers?limit=1&page=5"
              }
            }
          }
        }
      },
      "trainings": {
        "type": "object",
        "title": "Single Training",
        "properties": {
          "data": {
            "type": "object",
            "title": "Training",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Training](#tag/Training).",
                "type": "string"
              },
              "name": {
                "type": "string",
                "description": "User friendly name given to this [Training](#tag/Trainings).",
                "example": "Accounting Compliance 101"
              },
              "status": {
                "type": "object",
                "description": "The [Training Status](#tag/Training-Statuses) of the [Training](#tag/Training).",
                "properties": {
                  "id": {
                    "title": "UUIDv4",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "description": "The identifier string for the [Training Status](#tag/Training-Statuses) of the [Training](#tag/Training).",
                    "type": "string"
                  },
                  "name": {
                    "description": "User friendly name given to the [Training Status](#tag/Training-Statuses) of the [Training](#tag/Training).",
                    "example": "Completed",
                    "type": "string"
                  }
                }
              },
              "person": {
                "type": "object",
                "description": "The [Person](#tag/People) who did the [Training](#tag/Trainings).",
                "properties": {
                  "id": {
                    "title": "UUIDv4",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "description": "The identifier string for the [Person](#tag/People) of the [Training](#tag/Training).",
                    "type": "string"
                  },
                  "displayName": {
                    "type": "string",
                    "description": "The name of the [Person](#tag/People) who did the [Training](#tag/Trainings).",
                    "example": "Batman (Bruce) Wayne"
                  },
                  "employeeNumber": {
                    "description": "A manually entered employee number that identifies a [Person](#tag/People) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                    "default": null,
                    "oneOf": [
                      {
                        "type": "null"
                      },
                      {
                        "type": "string"
                      }
                    ]
                  },
                  "autoIncrementIntellihrId": {
                    "type": "number",
                    "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                    "example": 1000
                  },
                  "link": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/people/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              },
              "job": {
                "type": "object",
                "description": "The [Job](#tag/Jobs) of the [Person](#tag/People) who did the [Training](#tag/Trainings).",
                "properties": {
                  "id": {
                    "title": "UUIDv4",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "description": "The identifier string for the [Job](#tag/Jobs) of the [Training](#tag/Training).",
                    "type": "string"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the [Persons](#tag/People) [Job](#tag/Jobs) who did the [Training](#tag/Trainings).",
                    "example": "Software Engineer"
                  },
                  "startDate": {
                    "title": "RFC3339 datetime",
                    "example": "2015-03-01T22:30:00+00:00",
                    "description": "The [Jobs](#tag/Jobs) effective start date. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                    "type": "string"
                  },
                  "endDate": {
                    "title": "RFC3339 datetime",
                    "example": "2015-03-01T22:30:00+00:00",
                    "description": "The [Jobs](#tag/Jobs) effective end date. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "jobStatus": {
                    "type": "string",
                    "description": "The Status Schema. Enum: `Past Job`, `Future Job`, `Ending Job`, `Current Job`.",
                    "example": "Current Job"
                  },
                  "link": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/jobs/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              },
              "coordinator": {
                "description": "The [Coordinator](#tag/People) who did the [Training](#tag/Trainings). This data is optional and will be null when not stored.",
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the [Coordinator](#tag/People) of the [Training](#tag/Training).",
                        "type": "string"
                      },
                      "displayName": {
                        "type": "string",
                        "description": "The name of the [Person](#tag/People) who coordinated the [Training](#tag/Trainings).",
                        "example": "Batman (Bruce) Wayne"
                      },
                      "employeeNumber": {
                        "description": "A manually entered employee number that identifies a [Person](#tag/People) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                        "default": null,
                        "oneOf": [
                          {
                            "type": "null"
                          },
                          {
                            "type": "string"
                          }
                        ]
                      },
                      "autoIncrementIntellihrId": {
                        "type": "number",
                        "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                        "example": 1000
                      },
                      "link": {
                        "type": "string",
                        "title": "URL",
                        "description": "Link on the public api to get more information on this piece of data.",
                        "example": "https://api.intellihr.io/v1/people/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                      }
                    }
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "hours": {
                "description": "How many hours were spent on this [Training](#tag/Trainings).",
                "oneOf": [
                  {
                    "type": "null"
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "currency": {
                "title": "Currency code",
                "description": "The currency used for this [Training](#tag/Trainings. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                "example": "AUD",
                "pattern": "^[A-Z]{3}$",
                "type": "string"
              },
              "cost": {
                "description": "The cost of this [Training](#tag/Trainings).",
                "oneOf": [
                  {
                    "type": "null"
                  },
                  {
                    "type": "string"
                  }
                ]
              },
              "provider": {
                "type": "object",
                "description": "The [Training Provider](#tag/Training-Providers) of the [Training](#tag/Training).",
                "properties": {
                  "id": {
                    "title": "UUIDv4",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "description": "The identifier string for the [Training Provider](#tag/Training-Providers) of the [Training](#tag/Training).",
                    "type": "string"
                  },
                  "name": {
                    "description": "User friendly name given to the [Training Provider](#tag/Training-Providers) of the [Training](#tag/Training).",
                    "example": "HR Training Team",
                    "type": "string"
                  },
                  "link": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/training-providers/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              },
              "type": {
                "type": "object",
                "description": "The [Training Type](#tag/Training-Types) of the [Training](#tag/Training).",
                "properties": {
                  "id": {
                    "title": "UUIDv4",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "description": "The identifier string for the [Training Type](#tag/Training-Types) of the [Training](#tag/Training).",
                    "type": "string"
                  },
                  "name": {
                    "description": "User friendly name given to the [Training Type](#tag/Training-Types) of the [Training](#tag/Training).",
                    "example": "Soft Skills",
                    "type": "string"
                  },
                  "link": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/training-types/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              },
              "completionDate": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The timestamp the [Training](#tag/Trainings) was completed. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "oneOf": [
                  {
                    "type": "string"
                  },
                  {
                    "type": "null"
                  }
                ]
              },
              "createdAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "When this record was created. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "updatedAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "When this record was last updated. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "customFields": {
                "description": "Custom Fields defined on this training with their values.",
                "allOf": [
                  {
                    "$ref": "#/definitions/customFieldsResponse"
                  }
                ]
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          }
        }
      },
      "trainings_create_request": {
        "type": "object",
        "properties": {
          "coordinatorPerson": {
            "type": "object",
            "description": "The [Person](#tag/People) who coordinated the [Training](#tag/Trainings). This [Person](#tags/people) is specified as a search object, which will match the person who best fits the keys for this object.\n      Multiple keys can be used together to further narrow search results (for example, if there are multiple people with the same name, email address\n      can be used as well to limit to a single person. A validation error will be thrown if this search is unable to be narrowed to a single [Person](#tags/people).",
            "example": {
              "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
              "name": "Bruce Wayne",
              "primaryEmailAddress": "bruce.wayne@example.com",
              "employeeNumber": "00001",
              "autoIncrementIntellihrId": "1000"
            },
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Person](#tags/people) to locate in the system.",
                "type": "string"
              },
              "name": {
                "type": "string",
                "description": "The name of the [Person](#tags/people) in intelliHR to search for. Note that the search accounts for differences in name order automatically."
              },
              "primaryEmailAddress": {
                "type": "string",
                "description": "The email address flagged as primary for the [Person](#tags/people) within the system."
              },
              "employeeNumber": {
                "type": "string",
                "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
              },
              "autoIncrementIntellihrId": {
                "type": "string",
                "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
              },
              "autoIncrementingIntellihrId": {
                "type": "string",
                "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                "deprecated": true
              }
            }
          },
          "completionDate": {
            "title": "RFC3339 datetime",
            "example": "2015-03-01T22:30:00+00:00",
            "description": "The timestamp the [Training](#tag/Trainings) was completed. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
            "type": "string"
          },
          "cost": {
            "description": "The cost of this [Training](#tag/Trainings).",
            "type": "string",
            "example": "600"
          },
          "currency": {
            "title": "Currency code",
            "description": "The currency used for this [Training](#tag/Trainings). Will default to the tenant default currency when not provided. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
            "example": "AUD",
            "pattern": "^[A-Z]{3}$",
            "type": "string"
          },
          "hours": {
            "description": "How many hours were spent on this [Training](#tag/Trainings)",
            "type": "string",
            "example": "12"
          },
          "job": {
            "description": "The [Job](#tag/Jobs) that this [Training](#tag/Trainings) was completed for. This is optional if the person only has one active job in the system.",
            "type": "object",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Job](#tag/Jobs) that this [Training](#tag/Trainings) was completed for.",
                "type": "string"
              }
            }
          },
          "name": {
            "type": "string",
            "description": "User friendly name given to this [Training](#tag/Trainings) to identify it in the system.",
            "example": "Accounting Compliance 101"
          },
          "person": {
            "type": "object",
            "description": "The [Person](#tag/People) who did the [Training](#tag/Trainings). This [Person](#tags/people) is specified as a search object, which will match the person who best fits the keys for this object.\n      Multiple keys can be used together to further narrow search results (for example, if there are multiple people with the same name, email address\n      can be used as well to limit to a single person. A validation error will be thrown if this search is unable to be narrowed to a single [Person](#tags/people).",
            "example": {
              "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
              "name": "Bruce Wayne",
              "primaryEmailAddress": "bruce.wayne@example.com",
              "employeeNumber": "00001",
              "autoIncrementIntellihrId": "1000"
            },
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Person](#tags/people) to locate in the system.",
                "type": "string"
              },
              "name": {
                "type": "string",
                "description": "The name of the [Person](#tags/people) in intelliHR to search for. Note that the search accounts for differences in name order automatically."
              },
              "primaryEmailAddress": {
                "type": "string",
                "description": "The email address flagged as primary for the [Person](#tags/people) within the system."
              },
              "employeeNumber": {
                "type": "string",
                "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
              },
              "autoIncrementIntellihrId": {
                "type": "string",
                "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
              },
              "autoIncrementingIntellihrId": {
                "type": "string",
                "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                "deprecated": true
              }
            }
          },
          "provider": {
            "description": "A search object for [Training Provider](#tag/Training-Providers) for this [Training](#tag/Trainings). The provider can be specified via id or via name. The default [Training Provider](#tag/Training-Providers) will be used if none is provided.",
            "type": "object",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Training Provider](#tag/Training-Providers) of the [Training](#tag/Training).",
                "type": "string"
              },
              "name": {
                "description": "User friendly name given to the [Training Provider](#tag/Training-Providers) of the [Training](#tag/Training).",
                "example": "HR Training Team",
                "type": "string"
              }
            }
          },
          "type": {
            "description": "A search object for [Training Type](#tag/Training-Types) for this [Training](#tag/Trainings). The type can be specified via id or via name. The default [Training Type](#tag/Training-Types) will be used if none is provided.",
            "type": "object",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Training Type](#tag/Training-Types) of the [Training](#tag/Training).",
                "type": "string"
              },
              "name": {
                "description": "User friendly name given to the [Training Type](#tag/Training-Types) of the [Training](#tag/Training).",
                "example": "Soft Skills",
                "type": "string"
              }
            }
          },
          "customFields": {
            "description": "The custom field values for this [Training](#tag/Trainings)",
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Custom fields will be keyed by their api_name. Custom fields are not required, and any existing model defined custom fields will default to having null values.",
              "properties": {
                "value": {
                  "description": "The value for this custom field. This value structure will depend upon the type of the custom field.",
                  "anyOf": [
                    {
                      "type": "null",
                      "description": "The value will be null when a custom field is not provided or is empty for a record. Null can be provided to delete a custom field value."
                    },
                    {
                      "type": "string",
                      "description": "For TEXT and NUMBER records, the value is stored as a string with the value of the record."
                    },
                    {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string",
                          "description": "For SINGLE_SELECT records, the value is stored as an object with the label of the dropdown option. NOTE: Only the label needs to be provided. `id` is not required."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "labels": {
                          "type": "array",
                          "minItems": 1,
                          "description": "For MULTI_SELECT records, the value is stored as an object with an array of labels for all selected options. NOTE: Only the labels need to be provided. `ids` is not required.",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "person": {
                            "type": "object",
                            "description": "For PEOPLE_DROPDOWN records, the value is an object with an array of the [Person](#tag/People) search object and their [Job](#tag/Jobs) search object. This [Person](#tags/people) is specified as a search object, which will match the person who best fits the keys for this object.\n      Multiple keys can be used together to further narrow search results (for example, if there are multiple people with the same name, email address\n      can be used as well to limit to a single person. A validation error will be thrown if this search is unable to be narrowed to a single [Person](#tags/people).",
                            "example": {
                              "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                              "name": "Bruce Wayne",
                              "primaryEmailAddress": "bruce.wayne@example.com",
                              "employeeNumber": "00001",
                              "autoIncrementIntellihrId": "1000"
                            },
                            "properties": {
                              "id": {
                                "title": "UUIDv4",
                                "maxLength": 36,
                                "minLength": 36,
                                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                "description": "The identifier string for the [Person](#tags/people) to locate in the system.",
                                "type": "string"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the [Person](#tags/people) in intelliHR to search for. Note that the search accounts for differences in name order automatically."
                              },
                              "primaryEmailAddress": {
                                "type": "string",
                                "description": "The email address flagged as primary for the [Person](#tags/people) within the system."
                              },
                              "employeeNumber": {
                                "type": "string",
                                "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
                              },
                              "autoIncrementIntellihrId": {
                                "type": "string",
                                "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
                              },
                              "autoIncrementingIntellihrId": {
                                "type": "string",
                                "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                                "deprecated": true
                              }
                            }
                          },
                          "job": {
                            "type": "object",
                            "description": "The [Job](#tag/Jobs) information of the [Person](#tag/People) is mandatory if the target PEOPLE_DROPDOWN custom field allows selecting individual jobs. If not, The [Job](#tag/Jobs) information is not mandatory.",
                            "properties": {
                              "id": {
                                "title": "UUIDv4",
                                "maxLength": 36,
                                "minLength": 36,
                                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                "description": "The identifier string for the [Job](#tag/Job) of this [Job](#tag/Jobs).",
                                "type": "string"
                              },
                              "name": {
                                "description": "The name/position title of the [Job](#tag/Jobs).",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            },
            "example": {
              "text_field_api_name": {
                "value": "Some text value"
              },
              "numeric_field_api_name": {
                "value": "50"
              },
              "single_select_api_name": {
                "value": {
                  "label": "Drama"
                }
              },
              "multi_select_api_name": {
                "value": {
                  "labels": [
                    "Bananas",
                    "Apples"
                  ]
                }
              },
              "people_dropdown_api_name": {
                "value": [
                  {
                    "person": {
                      "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "name": "Bruce Wayne",
                      "primaryEmailAddress": "bruce.wayne@example.com",
                      "employeeNumber": "00001",
                      "autoIncrementIntellihrId": "1000"
                    },
                    "job": {
                      "id": "569904c8-5d36-4c2f-afb0-525eeb8da32d",
                      "name": "Maintenance worker"
                    }
                  },
                  {
                    "person": {
                      "id": "313fde44-f24e-4ec9-9473-0d0f3527222d",
                      "name": "Batman",
                      "primaryEmailAddress": "batman@example.com",
                      "employeeNumber": "00002",
                      "autoIncrementIntellihrId": "1001"
                    },
                    "job": {
                      "id": "653304c8-5d36-4c2f-afb0-525eeb8da32d",
                      "name": "Janitor"
                    }
                  }
                ]
              }
            }
          },
          "status": {
            "description": "The search object for [Training Statuses](#tag/Training-Statuses) of the [Training](#tag/Training). Defaults to `Enrolled` if undefined",
            "type": "object",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Training Statuses](#tag/Training-Statuses) of the [Training](#tag/Training).",
                "type": "string"
              },
              "name": {
                "description": "User friendly name given to the [Training Statuses](#tag/Training-Statuses) of the [Training](#tag/Training).",
                "example": "Completed",
                "type": "string"
              }
            }
          }
        },
        "required": [
          "name",
          "person"
        ]
      },
      "trainings_patch_request": {
        "type": "object",
        "properties": {
          "coordinatorPerson": {
            "type": "object",
            "description": "The [Person](#tag/People) who coordinated the [Training](#tag/Trainings). This [Person](#tags/people) is specified as a search object, which will match the person who best fits the keys for this object.\n      Multiple keys can be used together to further narrow search results (for example, if there are multiple people with the same name, email address\n      can be used as well to limit to a single person. A validation error will be thrown if this search is unable to be narrowed to a single [Person](#tags/people).",
            "example": {
              "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
              "name": "Bruce Wayne",
              "primaryEmailAddress": "bruce.wayne@example.com",
              "employeeNumber": "00001",
              "autoIncrementIntellihrId": "1000"
            },
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Person](#tags/people) to locate in the system.",
                "type": "string"
              },
              "name": {
                "type": "string",
                "description": "The name of the [Person](#tags/people) in intelliHR to search for. Note that the search accounts for differences in name order automatically."
              },
              "primaryEmailAddress": {
                "type": "string",
                "description": "The email address flagged as primary for the [Person](#tags/people) within the system."
              },
              "employeeNumber": {
                "type": "string",
                "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
              },
              "autoIncrementIntellihrId": {
                "type": "string",
                "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
              },
              "autoIncrementingIntellihrId": {
                "type": "string",
                "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                "deprecated": true
              }
            }
          },
          "completionDate": {
            "title": "RFC3339 datetime",
            "example": "2015-03-01T22:30:00+00:00",
            "description": "The timestamp the [Training](#tag/Trainings) was completed. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).\n\n YYYY-MM-DD date formatting is also supported, although by using this format the date will be stored as the start of day in UTC time, not the requesting tenants timezone.",
            "type": "string"
          },
          "cost": {
            "description": "The cost of this [Training](#tag/Trainings).",
            "type": "string",
            "example": "600"
          },
          "currency": {
            "title": "Currency code",
            "description": "The currency used for this [Training](#tag/Trainings). Will default to the tenant default currency when not provided. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
            "example": "AUD",
            "pattern": "^[A-Z]{3}$",
            "type": "string"
          },
          "hours": {
            "description": "How many hours were spent on this [Training](#tag/Trainings)",
            "type": "string",
            "example": "12"
          },
          "job": {
            "description": "The [Job](#tag/Jobs) that this [Training](#tag/Trainings) was completed for. This is optional if the person only has one active job in the system.",
            "type": "object",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Job](#tag/Jobs) that this [Training](#tag/Trainings) was completed for.",
                "type": "string"
              }
            }
          },
          "name": {
            "type": "string",
            "description": "User friendly name given to this [Training](#tag/Trainings) to identify it in the system.",
            "example": "Accounting Compliance 101"
          },
          "person": {
            "type": "object",
            "description": "The [Person](#tag/People) who did the [Training](#tag/Trainings). This [Person](#tags/people) is specified as a search object, which will match the person who best fits the keys for this object.\n      Multiple keys can be used together to further narrow search results (for example, if there are multiple people with the same name, email address\n      can be used as well to limit to a single person. A validation error will be thrown if this search is unable to be narrowed to a single [Person](#tags/people).",
            "example": {
              "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
              "name": "Bruce Wayne",
              "primaryEmailAddress": "bruce.wayne@example.com",
              "employeeNumber": "00001",
              "autoIncrementIntellihrId": "1000"
            },
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Person](#tags/people) to locate in the system.",
                "type": "string"
              },
              "name": {
                "type": "string",
                "description": "The name of the [Person](#tags/people) in intelliHR to search for. Note that the search accounts for differences in name order automatically."
              },
              "primaryEmailAddress": {
                "type": "string",
                "description": "The email address flagged as primary for the [Person](#tags/people) within the system."
              },
              "employeeNumber": {
                "type": "string",
                "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
              },
              "autoIncrementIntellihrId": {
                "type": "string",
                "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
              },
              "autoIncrementingIntellihrId": {
                "type": "string",
                "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                "deprecated": true
              }
            }
          },
          "provider": {
            "description": "A search object for [Training Provider](#tag/Training-Providers) for this [Training](#tag/Trainings). The provider can be specified via id or via name.",
            "type": "object",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Training Provider](#tag/Training-Providers) of the [Training](#tag/Training).",
                "type": "string"
              },
              "name": {
                "description": "User friendly name given to the [Training Provider](#tag/Training-Providers) of the [Training](#tag/Training).",
                "example": "HR Training Team",
                "type": "string"
              }
            }
          },
          "type": {
            "description": "A search object for [Training Type](#tag/Training-Types) for this [Training](#tag/Trainings). The type can be specified via id or via name.",
            "type": "object",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Training Type](#tag/Training-Types) of the [Training](#tag/Training).",
                "type": "string"
              },
              "name": {
                "description": "User friendly name given to the [Training Type](#tag/Training-Types) of the [Training](#tag/Training).",
                "example": "Soft Skills",
                "type": "string"
              }
            }
          },
          "customFields": {
            "description": "The custom field values for this [Training](#tag/Trainings)",
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Custom fields will be keyed by their api_name. Custom fields are not required, and only provided custom fields will be updated.",
              "properties": {
                "value": {
                  "description": "The value for this custom field. This value structure will depend upon the type of the custom field.",
                  "anyOf": [
                    {
                      "type": "null",
                      "description": "The value will be null when a custom field is not provided or is empty for a record. Null can be provided to delete a custom field value."
                    },
                    {
                      "type": "string",
                      "description": "For TEXT and NUMBER records, the value is stored as a string with the value of the record."
                    },
                    {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string",
                          "description": "For SINGLE_SELECT records, the value is stored as an object with the label of the dropdown option. NOTE: Only the label needs to be provided. `id` is not required."
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "labels": {
                          "type": "array",
                          "minItems": 1,
                          "description": "For MULTI_SELECT records, the value is stored as an object with an array of labels for all selected options. NOTE: Only the labels need to be provided. `ids` is not required.",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "person": {
                            "type": "object",
                            "description": "For PEOPLE_DROPDOWN records, the value is an object with an array of the [Person](#tag/People) search object and their [Job](#tag/Jobs) search object. This [Person](#tags/people) is specified as a search object, which will match the person who best fits the keys for this object.\n      Multiple keys can be used together to further narrow search results (for example, if there are multiple people with the same name, email address\n      can be used as well to limit to a single person. A validation error will be thrown if this search is unable to be narrowed to a single [Person](#tags/people).",
                            "example": {
                              "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                              "name": "Bruce Wayne",
                              "primaryEmailAddress": "bruce.wayne@example.com",
                              "employeeNumber": "00001",
                              "autoIncrementIntellihrId": "1000"
                            },
                            "properties": {
                              "id": {
                                "title": "UUIDv4",
                                "maxLength": 36,
                                "minLength": 36,
                                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                "description": "The identifier string for the [Person](#tags/people) to locate in the system.",
                                "type": "string"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the [Person](#tags/people) in intelliHR to search for. Note that the search accounts for differences in name order automatically."
                              },
                              "primaryEmailAddress": {
                                "type": "string",
                                "description": "The email address flagged as primary for the [Person](#tags/people) within the system."
                              },
                              "employeeNumber": {
                                "type": "string",
                                "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
                              },
                              "autoIncrementIntellihrId": {
                                "type": "string",
                                "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
                              },
                              "autoIncrementingIntellihrId": {
                                "type": "string",
                                "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                                "deprecated": true
                              }
                            }
                          },
                          "job": {
                            "type": "object",
                            "description": "The [Job](#tag/Jobs) information of the [Person](#tag/People) is mandatory if the target PEOPLE_DROPDOWN custom field allows selecting individual jobs. If not, The [Job](#tag/Jobs) information is not mandatory.",
                            "properties": {
                              "id": {
                                "title": "UUIDv4",
                                "maxLength": 36,
                                "minLength": 36,
                                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                "description": "The identifier string for the [Job](#tag/Job) of this [Job](#tag/Jobs).",
                                "type": "string"
                              },
                              "name": {
                                "description": "The name/position title of the [Job](#tag/Jobs).",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            },
            "example": {
              "text_field_api_name": {
                "value": "Some text value"
              },
              "numeric_field_api_name": {
                "value": "50"
              },
              "single_select_api_name": {
                "value": {
                  "label": "Drama"
                }
              },
              "multi_select_api_name": {
                "value": {
                  "labels": [
                    "Bananas",
                    "Apples"
                  ]
                }
              },
              "people_dropdown_api_name": {
                "value": [
                  {
                    "person": {
                      "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "name": "Bruce Wayne",
                      "primaryEmailAddress": "bruce.wayne@example.com",
                      "employeeNumber": "00001",
                      "autoIncrementIntellihrId": "1000"
                    },
                    "job": {
                      "id": "569904c8-5d36-4c2f-afb0-525eeb8da32d",
                      "name": "Maintenance worker"
                    }
                  },
                  {
                    "person": {
                      "id": "313fde44-f24e-4ec9-9473-0d0f3527222d",
                      "name": "Batman",
                      "primaryEmailAddress": "batman@example.com",
                      "employeeNumber": "00002",
                      "autoIncrementIntellihrId": "1001"
                    },
                    "job": {
                      "id": "653304c8-5d36-4c2f-afb0-525eeb8da32d",
                      "name": "Janitor"
                    }
                  }
                ]
              }
            }
          },
          "status": {
            "description": "The search object for [Training Statuses](#tag/Training-Statuses) of the [Training](#tag/Training).",
            "type": "object",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Training Statuses](#tag/Training-Statuses) of the [Training](#tag/Training).",
                "type": "string"
              },
              "name": {
                "description": "User friendly name given to the [Training Statuses](#tag/Training-Statuses) of the [Training](#tag/Training).",
                "example": "Completed",
                "type": "string"
              }
            }
          }
        }
      },
      "trainings_list": {
        "type": "object",
        "title": "List of Trainings",
        "properties": {
          "data": {
            "type": "array",
            "title": "data",
            "items": {
              "type": "object",
              "title": "Training",
              "properties": {
                "id": {
                  "title": "UUIDv4",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "description": "The identifier string for the [Training](#tag/Training).",
                  "type": "string"
                },
                "name": {
                  "type": "string",
                  "description": "User friendly name given to this [Training](#tag/Trainings).",
                  "example": "Accounting Compliance 101"
                },
                "status": {
                  "type": "object",
                  "description": "The [Training Status](#tag/Training-Statuses) of the [Training](#tag/Training).",
                  "properties": {
                    "id": {
                      "title": "UUIDv4",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "description": "The identifier string for the [Training Status](#tag/Training-Statuses) of the [Training](#tag/Training).",
                      "type": "string"
                    },
                    "name": {
                      "description": "User friendly name given to the [Training Status](#tag/Training-Statuses) of the [Training](#tag/Training).",
                      "example": "Completed",
                      "type": "string"
                    }
                  }
                },
                "person": {
                  "type": "object",
                  "description": "The [Person](#tag/People) who did the [Training](#tag/Trainings).",
                  "properties": {
                    "id": {
                      "title": "UUIDv4",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "description": "The identifier string for the [Person](#tag/People) of the [Training](#tag/Training).",
                      "type": "string"
                    },
                    "displayName": {
                      "type": "string",
                      "description": "The name of the [Person](#tag/People) who did the [Training](#tag/Trainings).",
                      "example": "Batman (Bruce) Wayne"
                    },
                    "employeeNumber": {
                      "description": "A manually entered employee number that identifies a [Person](#tag/People) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                      "default": null,
                      "oneOf": [
                        {
                          "type": "null"
                        },
                        {
                          "type": "string"
                        }
                      ]
                    },
                    "autoIncrementIntellihrId": {
                      "type": "number",
                      "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                      "example": 1000
                    },
                    "link": {
                      "type": "string",
                      "title": "URL",
                      "description": "Link on the public api to get more information on this piece of data.",
                      "example": "https://api.intellihr.io/v1/people/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                    }
                  }
                },
                "job": {
                  "type": "object",
                  "description": "The [Job](#tag/Jobs) of the [Person](#tag/People) who did the [Training](#tag/Trainings).",
                  "properties": {
                    "id": {
                      "title": "UUIDv4",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "description": "The identifier string for the [Job](#tag/Jobs) of the [Training](#tag/Training).",
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the [Persons](#tag/People) [Job](#tag/Jobs) who did the [Training](#tag/Trainings).",
                      "example": "Software Engineer"
                    },
                    "startDate": {
                      "title": "RFC3339 datetime",
                      "example": "2015-03-01T22:30:00+00:00",
                      "description": "The [Jobs](#tag/Jobs) effective start date. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                      "type": "string"
                    },
                    "endDate": {
                      "title": "RFC3339 datetime",
                      "example": "2015-03-01T22:30:00+00:00",
                      "description": "The [Jobs](#tag/Jobs) effective end date. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "jobStatus": {
                      "type": "string",
                      "description": "The Status Schema. Enum: `Past Job`, `Future Job`, `Ending Job`, `Current Job`.",
                      "example": "Current Job"
                    },
                    "link": {
                      "type": "string",
                      "title": "URL",
                      "description": "Link on the public api to get more information on this piece of data.",
                      "example": "https://api.intellihr.io/v1/jobs/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                    }
                  }
                },
                "coordinator": {
                  "description": "The [Coordinator](#tag/People) who did the [Training](#tag/Trainings). This data is optional and will be null when not stored.",
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "title": "UUIDv4",
                          "maxLength": 36,
                          "minLength": 36,
                          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                          "description": "The identifier string for the [Coordinator](#tag/People) of the [Training](#tag/Training).",
                          "type": "string"
                        },
                        "displayName": {
                          "type": "string",
                          "description": "The name of the [Person](#tag/People) who coordinated the [Training](#tag/Trainings).",
                          "example": "Batman (Bruce) Wayne"
                        },
                        "employeeNumber": {
                          "description": "A manually entered employee number that identifies a [Person](#tag/People) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                          "default": null,
                          "oneOf": [
                            {
                              "type": "null"
                            },
                            {
                              "type": "string"
                            }
                          ]
                        },
                        "autoIncrementIntellihrId": {
                          "type": "number",
                          "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                          "example": 1000
                        },
                        "link": {
                          "type": "string",
                          "title": "URL",
                          "description": "Link on the public api to get more information on this piece of data.",
                          "example": "https://api.intellihr.io/v1/people/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                        }
                      }
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "hours": {
                  "description": "How many hours were spent on this [Training](#tag/Trainings).",
                  "oneOf": [
                    {
                      "type": "null"
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "currency": {
                  "title": "Currency code",
                  "description": "The currency used for this [Training](#tag/Trainings. An international currency code. Typically AUD for Australian dollar, USD for American dollar etc. See [Official list of codes](https://www.iban.com/currency-codes).",
                  "example": "AUD",
                  "pattern": "^[A-Z]{3}$",
                  "type": "string"
                },
                "cost": {
                  "description": "The cost of this [Training](#tag/Trainings).",
                  "oneOf": [
                    {
                      "type": "null"
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "provider": {
                  "type": "object",
                  "description": "The [Training Provider](#tag/Training-Providers) of the [Training](#tag/Training).",
                  "properties": {
                    "id": {
                      "title": "UUIDv4",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "description": "The identifier string for the [Training Provider](#tag/Training-Providers) of the [Training](#tag/Training).",
                      "type": "string"
                    },
                    "name": {
                      "description": "User friendly name given to the [Training Provider](#tag/Training-Providers) of the [Training](#tag/Training).",
                      "example": "HR Training Team",
                      "type": "string"
                    },
                    "link": {
                      "type": "string",
                      "title": "URL",
                      "description": "Link on the public api to get more information on this piece of data.",
                      "example": "https://api.intellihr.io/v1/training-providers/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                    }
                  }
                },
                "type": {
                  "type": "object",
                  "description": "The [Training Type](#tag/Training-Types) of the [Training](#tag/Training).",
                  "properties": {
                    "id": {
                      "title": "UUIDv4",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "description": "The identifier string for the [Training Type](#tag/Training-Types) of the [Training](#tag/Training).",
                      "type": "string"
                    },
                    "name": {
                      "description": "User friendly name given to the [Training Type](#tag/Training-Types) of the [Training](#tag/Training).",
                      "example": "Soft Skills",
                      "type": "string"
                    },
                    "link": {
                      "type": "string",
                      "title": "URL",
                      "description": "Link on the public api to get more information on this piece of data.",
                      "example": "https://api.intellihr.io/v1/training-types/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                    }
                  }
                },
                "completionDate": {
                  "title": "RFC3339 datetime",
                  "example": "2015-03-01T22:30:00+00:00",
                  "description": "The timestamp the [Training](#tag/Trainings) was completed. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ]
                },
                "createdAt": {
                  "title": "RFC3339 datetime",
                  "example": "2015-03-01T22:30:00+00:00",
                  "description": "When this record was created. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                  "type": "string"
                },
                "updatedAt": {
                  "title": "RFC3339 datetime",
                  "example": "2015-03-01T22:30:00+00:00",
                  "description": "When this record was last updated. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                  "type": "string"
                },
                "customFields": {
                  "description": "Custom Fields defined on this training with their values.",
                  "allOf": [
                    {
                      "$ref": "#/definitions/customFieldsResponse"
                    }
                  ]
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "pagination": {
                "type": "object",
                "description": "Contains information related to the pagination of the response",
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total items count",
                    "minimum": 0,
                    "example": 50
                  },
                  "count": {
                    "type": "integer",
                    "description": "Number of items for current page",
                    "minimum": 0,
                    "example": 10
                  },
                  "per_page": {
                    "type": "integer",
                    "description": "Items per page limit",
                    "minimum": 0,
                    "example": 10
                  },
                  "current_page": {
                    "type": "integer",
                    "description": "Current page",
                    "minimum": 1,
                    "example": 3
                  },
                  "total_pages": {
                    "type": "integer",
                    "description": "Total number of pages",
                    "minimum": 1,
                    "example": 5
                  }
                }
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          },
          "links": {
            "type": "object",
            "description": "Links to other related resources.",
            "properties": {
              "self": {
                "type": "string",
                "description": "The current page URL",
                "example": "https://api.intellihr.io/v1/trainings?limit=1&page=3"
              },
              "first": {
                "type": "string",
                "description": "The first page URL",
                "example": "https://api.intellihr.io/v1/trainings?limit=1&page=1"
              },
              "prev": {
                "type": "string",
                "description": "The previous page URL",
                "example": "https://api.intellihr.io/v1/trainings?limit=1&page=2"
              },
              "next": {
                "type": "string",
                "description": "The next page URL",
                "example": "https://api.intellihr.io/v1/trainings?limit=1&page=4"
              },
              "last": {
                "type": "string",
                "description": "The last page URL",
                "example": "https://api.intellihr.io/v1/trainings?limit=1&page=5"
              }
            }
          }
        }
      },
      "training-statuses_list": {
        "type": "object",
        "title": "List of Training Statuses",
        "properties": {
          "data": {
            "type": "array",
            "title": "data",
            "items": {
              "type": "object",
              "title": "trainingStatuses",
              "properties": {
                "id": {
                  "title": "UUIDv4",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "description": "The identifier string for the [Training Statuses](#tag/Training-Statuses).",
                  "type": "string"
                },
                "name": {
                  "description": "The name given to describe the status of [Training](#tag/Training).",
                  "example": "Completed",
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "training-types": {
        "type": "object",
        "title": "Single Training Types",
        "properties": {
          "data": {
            "type": "object",
            "title": "trainingTypes",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Training Type](#tag/Training-Types).",
                "type": "string"
              },
              "name": {
                "description": "User friendly name given to the [Training Type](#tag/Training-Types).",
                "example": "Soft Skills",
                "type": "string"
              },
              "isDefault": {
                "description": "Indicates if this [Training Type](#tag/Training-Types) will be used as a default when creating a [Training](#tag/Trainings) record.",
                "example": false,
                "type": "boolean"
              },
              "isEnabled": {
                "description": "Specifies whether users can select this Training Type in dropdowns",
                "example": false,
                "type": "boolean"
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          }
        }
      },
      "training-types_list": {
        "type": "object",
        "title": "List all Training Types",
        "properties": {
          "data": {
            "type": "array",
            "title": "data",
            "items": {
              "type": "object",
              "title": "trainingTypes",
              "properties": {
                "id": {
                  "title": "UUIDv4",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "description": "The identifier string for the [Training Type](#tag/Training-Types).",
                  "type": "string"
                },
                "name": {
                  "description": "User friendly name given to the [Training Type](#tag/Training-Types).",
                  "example": "Soft Skills",
                  "type": "string"
                },
                "isDefault": {
                  "description": "Indicates if this [Training Type](#tag/Training-Types) will be used as a default when creating a [Training](#tag/Trainings) record.",
                  "example": false,
                  "type": "boolean"
                },
                "isEnabled": {
                  "description": "Specifies whether users can select this Training Type in dropdowns",
                  "example": false,
                  "type": "boolean"
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "pagination": {
                "type": "object",
                "description": "Contains information related to the pagination of the response",
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total items count",
                    "minimum": 0,
                    "example": 50
                  },
                  "count": {
                    "type": "integer",
                    "description": "Number of items for current page",
                    "minimum": 0,
                    "example": 10
                  },
                  "per_page": {
                    "type": "integer",
                    "description": "Items per page limit",
                    "minimum": 0,
                    "example": 10
                  },
                  "current_page": {
                    "type": "integer",
                    "description": "Current page",
                    "minimum": 1,
                    "example": 3
                  },
                  "total_pages": {
                    "type": "integer",
                    "description": "Total number of pages",
                    "minimum": 1,
                    "example": 5
                  }
                }
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          },
          "links": {
            "type": "object",
            "description": "Links to other related resources.",
            "properties": {
              "self": {
                "type": "string",
                "description": "The current page URL",
                "example": "https://api.intellihr.io/v1/training-types?limit=1&page=3"
              },
              "first": {
                "type": "string",
                "description": "The first page URL",
                "example": "https://api.intellihr.io/v1/training-types?limit=1&page=1"
              },
              "prev": {
                "type": "string",
                "description": "The previous page URL",
                "example": "https://api.intellihr.io/v1/training-types?limit=1&page=2"
              },
              "next": {
                "type": "string",
                "description": "The next page URL",
                "example": "https://api.intellihr.io/v1/training-types?limit=1&page=4"
              },
              "last": {
                "type": "string",
                "description": "The last page URL",
                "example": "https://api.intellihr.io/v1/training-types?limit=1&page=5"
              }
            }
          }
        }
      },
      "users_list": {
        "type": "object",
        "description": "List Users.",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "title": "UUIDv4",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "description": "The identifier string for the [User](#tags/users).",
                  "type": "string"
                },
                "username": {
                  "type": "string",
                  "description": "The unique name of this user.",
                  "example": "BruceWayne"
                },
                "isEnabled": {
                  "type": "boolean",
                  "description": "Specifies whether this [User](#tags/users) account is active. When disabled, you can no longer sign in using this account."
                },
                "createdAt": {
                  "title": "RFC3339 datetime",
                  "example": "2015-03-01T22:30:00+00:00",
                  "description": "When this record was created. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                  "type": "string"
                },
                "updatedAt": {
                  "title": "RFC3339 datetime",
                  "example": "2015-03-01T22:30:00+00:00",
                  "description": "When this record was last updated. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                  "type": "string"
                },
                "userPermissionGroups": {
                  "type": "array",
                  "description": "The array of user permission groups containing the [Permission Group's](#tags/permission-groups) assigned to this user.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "title": "UUIDv4",
                        "maxLength": 36,
                        "minLength": 36,
                        "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "description": "The identifier string for the User Permission Group.",
                        "type": "string"
                      },
                      "permissionGroup": {
                        "type": "object",
                        "description": "The [Permission Group](#tags/permission-groups) assigned to this user.",
                        "properties": {
                          "id": {
                            "title": "UUIDv4",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "description": "The identifier string for the [Permission Group](#tag/Permission-Groups).",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name given to this [Permission Group](#tag/Permission-Groups). This name would normally be shown to users of the system.",
                            "example": "Engineering",
                            "type": "string"
                          },
                          "isEnabled": {
                            "type": "boolean",
                            "description": "Specifies whether users can select this [Permission Group](#tag/Permission-Groups) in dropdowns."
                          }
                        }
                      }
                    }
                  }
                },
                "person": {
                  "type": "object",
                  "description": "The [Person](#tag/People) to whom this [User](#tag/users) belongs.",
                  "properties": {
                    "id": {
                      "title": "UUIDv4",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "description": "The identifier string for the [Person](#tag/People) to whom this [User](#tag/users) belongs.",
                      "type": "string"
                    },
                    "displayName": {
                      "type": "string",
                      "description": "Name to display throughout the system for this [Person](#tags/people). Generally follows the pattern preferredName (firstName) lastName, but can be configured on a tenant-wide basis to be a different format.",
                      "example": "Batman (Bruce) Wayne"
                    },
                    "employeeNumber": {
                      "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                      "example": "00001",
                      "oneOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "autoIncrementIntellihrId": {
                      "type": "number",
                      "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                      "example": 1000
                    },
                    "link": {
                      "type": "string",
                      "title": "URL",
                      "description": "Link on the public api to get more information on this piece of data.",
                      "example": "https://api.intellihr.io/v1/people/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                    }
                  }
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "pagination": {
                "type": "object",
                "description": "Contains information related to the pagination of the response",
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total items count",
                    "minimum": 0,
                    "example": 50
                  },
                  "count": {
                    "type": "integer",
                    "description": "Number of items for current page",
                    "minimum": 0,
                    "example": 10
                  },
                  "per_page": {
                    "type": "integer",
                    "description": "Items per page limit",
                    "minimum": 0,
                    "example": 10
                  },
                  "current_page": {
                    "type": "integer",
                    "description": "Current page",
                    "minimum": 1,
                    "example": 3
                  },
                  "total_pages": {
                    "type": "integer",
                    "description": "Total number of pages",
                    "minimum": 1,
                    "example": 5
                  }
                }
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          },
          "links": {
            "type": "object",
            "description": "Links to other related resources.",
            "properties": {
              "self": {
                "type": "string",
                "description": "The current page URL",
                "example": "https://api.intellihr.io/v1/users?limit=1&page=3"
              },
              "first": {
                "type": "string",
                "description": "The first page URL",
                "example": "https://api.intellihr.io/v1/users?limit=1&page=1"
              },
              "prev": {
                "type": "string",
                "description": "The previous page URL",
                "example": "https://api.intellihr.io/v1/users?limit=1&page=2"
              },
              "next": {
                "type": "string",
                "description": "The next page URL",
                "example": "https://api.intellihr.io/v1/users?limit=1&page=4"
              },
              "last": {
                "type": "string",
                "description": "The last page URL",
                "example": "https://api.intellihr.io/v1/users?limit=1&page=5"
              }
            }
          }
        }
      },
      "users": {
        "type": "object",
        "description": "Single User.",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [User](#tags/users).",
                "type": "string"
              },
              "username": {
                "type": "string",
                "description": "The unique name of this user.",
                "example": "BruceWayne"
              },
              "isEnabled": {
                "type": "boolean",
                "description": "Specifies whether this [User](#tags/users) account is active. When disabled, you can no longer sign in using this account."
              },
              "createdAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "When this record was created. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "updatedAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "When this record was last updated. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "userPermissionGroups": {
                "type": "array",
                "description": "The array of user permission groups containing the [Permission Group's](#tags/permission-groups) assigned to this user.",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "title": "UUIDv4",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "description": "The identifier string for the User Permission Group.",
                      "type": "string"
                    },
                    "permissionGroup": {
                      "type": "object",
                      "description": "The [Permission Group](#tags/permission-groups) assigned to this user.",
                      "properties": {
                        "id": {
                          "title": "UUIDv4",
                          "maxLength": 36,
                          "minLength": 36,
                          "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                          "description": "The identifier string for the [Permission Group](#tag/Permission-Groups).",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name given to this [Permission Group](#tag/Permission-Groups). This name would normally be shown to users of the system.",
                          "example": "Engineering",
                          "type": "string"
                        },
                        "isEnabled": {
                          "type": "boolean",
                          "description": "Specifies whether users can select this [Permission Group](#tag/Permission-Groups) in dropdowns."
                        }
                      }
                    }
                  }
                }
              },
              "person": {
                "type": "object",
                "description": "The [Person](#tag/People) to whom this [User](#tag/users) belongs.",
                "properties": {
                  "id": {
                    "title": "UUIDv4",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "description": "The identifier string for the [Person](#tag/People) to whom this [User](#tag/users) belongs.",
                    "type": "string"
                  },
                  "displayName": {
                    "type": "string",
                    "description": "Name to display throughout the system for this [Person](#tags/people). Generally follows the pattern preferredName (firstName) lastName, but can be configured on a tenant-wide basis to be a different format.",
                    "example": "Batman (Bruce) Wayne"
                  },
                  "employeeNumber": {
                    "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                    "example": "00001",
                    "oneOf": [
                      {
                        "type": "string"
                      },
                      {
                        "type": "null"
                      }
                    ]
                  },
                  "autoIncrementIntellihrId": {
                    "type": "number",
                    "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.",
                    "example": 1000
                  },
                  "link": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/people/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          }
        }
      },
      "users_create": {
        "type": "object",
        "required": [
          "username",
          "person"
        ],
        "properties": {
          "isEnabled": {
            "type": "boolean",
            "description": "Specifies whether this [User](#tags/users) account is active. When disabled, you can no longer sign in using this account. Defaults to `false`."
          },
          "username": {
            "type": "string",
            "description": "The unique name of this user."
          },
          "person": {
            "type": "object",
            "description": "[Person](#tag/People) to whom this [User](#tag/Users) belongs. This [Person](#tags/people) is specified as a search object, which will match the person who best fits the keys for this object.\n        Multiple keys can be used together to further narrow search results (for example, if there are multiple people with the same name, email address\n        can be used as well to limit to a single person. A validation error will be thrown if this search is unable to be narrowed to a single [Person](#tags/people).",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Person](#tags/people) to locate in the system.",
                "type": "string"
              },
              "name": {
                "type": "string",
                "description": "The name of the [Person](#tags/people) in intelliHR to search for. Note that the search accounts for differences in name order automatically."
              },
              "primaryEmailAddress": {
                "type": "string",
                "description": "The email address flagged as primary for the [Person](#tags/people) within the system."
              },
              "employeeNumber": {
                "type": "string",
                "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
              },
              "autoIncrementIntellihrId": {
                "type": "string",
                "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration."
              }
            }
          },
          "permissionGroups": {
            "description": "The id's(UUIDv4) of the permission groups to assign this user to.",
            "oneOf": [
              {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "users_patch": {
        "type": "object",
        "properties": {
          "isEnabled": {
            "type": "boolean",
            "description": "Specifies whether this [User](#tags/users) account is active. When disabled, you can no longer sign in using this account."
          },
          "username": {
            "type": "string",
            "description": "The unique name of this user."
          }
        }
      },
      "work-classes": {
        "type": "object",
        "title": "Single Work Class",
        "properties": {
          "data": {
            "type": "object",
            "title": "Work Classes Schema",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Work Class](#tag/Work-Classes).",
                "type": "string"
              },
              "name": {
                "type": "string",
                "description": "Name given to this [Work Class](#tag/Work-Classes). This name would normally be shown to users of the system.",
                "example": "Casual"
              },
              "workType": {
                "type": "object",
                "description": "The parent [Work Type](#tag/Work-Types) of this [Work Class](#tag/Work-Classes).",
                "properties": {
                  "id": {
                    "title": "UUIDv4",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "description": "The identifier string for the [Work Type](#tag/Work-Type) of this [Work Class](#tag/Work-Classes).",
                    "type": "string"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the [Work Type](#tag/Work-Types). Enum: `Permanent`, `Fixed Contract`, `Unpaid`, `Temporary/Casual`, `Independent Contract`.",
                    "example": "Permanent"
                  },
                  "link": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/work-types/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              },
              "isEnabled": {
                "type": "boolean",
                "description": "Specifies whether users can select this [Work Type](#tag/Work-Types) in dropdowns."
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          }
        }
      },
      "work-classes_list": {
        "type": "object",
        "title": "List Work Classes",
        "properties": {
          "data": {
            "type": "array",
            "title": "data",
            "items": {
              "type": "object",
              "title": "Work Classes Schema",
              "properties": {
                "id": {
                  "title": "UUIDv4",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "description": "The identifier string for the [Work Class](#tag/Work-Classes).",
                  "type": "string"
                },
                "name": {
                  "type": "string",
                  "description": "Name given to this [Work Class](#tag/Work-Classes). This name would normally be shown to users of the system.",
                  "example": "Casual"
                },
                "workType": {
                  "type": "object",
                  "description": "The parent [Work Type](#tag/Work-Types) of this [Work Class](#tag/Work-Classes).",
                  "properties": {
                    "id": {
                      "title": "UUIDv4",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "description": "The identifier string for the [Work Type](#tag/Work-Type) of this [Work Class](#tag/Work-Classes).",
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the [Work Type](#tag/Work-Types). Enum: `Permanent`, `Fixed Contract`, `Unpaid`, `Temporary/Casual`, `Independent Contract`.",
                      "example": "Permanent"
                    },
                    "link": {
                      "type": "string",
                      "title": "URL",
                      "description": "Link on the public api to get more information on this piece of data.",
                      "example": "https://api.intellihr.io/v1/work-types/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                    }
                  }
                },
                "isEnabled": {
                  "type": "boolean",
                  "description": "Specifies whether users can select this [Work Type](#tag/Work-Types) in dropdowns."
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "pagination": {
                "type": "object",
                "description": "Contains information related to the pagination of the response",
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total items count",
                    "minimum": 0,
                    "example": 50
                  },
                  "count": {
                    "type": "integer",
                    "description": "Number of items for current page",
                    "minimum": 0,
                    "example": 10
                  },
                  "per_page": {
                    "type": "integer",
                    "description": "Items per page limit",
                    "minimum": 0,
                    "example": 10
                  },
                  "current_page": {
                    "type": "integer",
                    "description": "Current page",
                    "minimum": 1,
                    "example": 3
                  },
                  "total_pages": {
                    "type": "integer",
                    "description": "Total number of pages",
                    "minimum": 1,
                    "example": 5
                  }
                }
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          },
          "links": {
            "type": "object",
            "description": "Links to other related resources.",
            "properties": {
              "self": {
                "type": "string",
                "description": "The current page URL",
                "example": "https://api.intellihr.io/v1/work-classes?limit=1&page=3"
              },
              "first": {
                "type": "string",
                "description": "The first page URL",
                "example": "https://api.intellihr.io/v1/work-classes?limit=1&page=1"
              },
              "prev": {
                "type": "string",
                "description": "The previous page URL",
                "example": "https://api.intellihr.io/v1/work-classes?limit=1&page=2"
              },
              "next": {
                "type": "string",
                "description": "The next page URL",
                "example": "https://api.intellihr.io/v1/work-classes?limit=1&page=4"
              },
              "last": {
                "type": "string",
                "description": "The last page URL",
                "example": "https://api.intellihr.io/v1/work-classes?limit=1&page=5"
              }
            }
          }
        }
      },
      "workflow-events": {
        "type": "object",
        "title": "Single Workflow Event",
        "properties": {
          "data": {
            "type": "object",
            "title": "WorkflowEvent",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Workflow Events](#tag/Workflow-events).",
                "type": "string"
              },
              "name": {
                "type": "string",
                "description": "Name given to this [Workflow Event](#tag/Workflow-events). This name would normally be shown to users of the system.",
                "example": "Onboarding (Permanent)"
              },
              "actionName": {
                "type": "string",
                "description": "Action name given to this [Workflow Event](#tag/Workflow-events). This name would normally be shown to users of the system.",
                "example": "First Day of Job"
              },
              "description": {
                "type": "string",
                "description": "Further descriptive text for this [Workflow Event](#tag/Workflow-events).",
                "example": "This event is triggered when a new job with the work type of Permanent is created for a person."
              },
              "workflows": {
                "type": "array",
                "description": "An array of [Workflows](#tag/Workflows) that exist under this Workflow Event.",
                "items": {
                  "properties": {
                    "id": {
                      "title": "UUIDv4",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "description": "The identifier string for the [Workflow](#tag/Workflows).",
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name given to this [Workflow](#tag/Workflows). This name would normally be shown to users of the system.",
                      "example": "New Permanent Onboarding"
                    },
                    "description": {
                      "type": "string",
                      "description": "The description of this [Workflow](#tag/Workflows). This description would normally be shown to users of the system.",
                      "example": "This workflow contains a series of checklists and employee feedback tasks"
                    },
                    "workflowFormDesigns": {
                      "type": "array",
                      "description": "An array of Workflow Form Designs that belong to this [Workflow](#tags/workflows).",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "title": "UUIDv4",
                            "maxLength": 36,
                            "minLength": 36,
                            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "description": "The identifier string for the Workflow Form Design.",
                            "type": "string"
                          },
                          "days": {
                            "type": "number",
                            "description": "A number representing the number of days from the event that the form should be sent.  This can be either positive to determine days from event, or negative to determine days before the event.",
                            "example": -14
                          },
                          "months": {
                            "type": "number",
                            "description": "A number representing the number of months from the event that the form should be sent.  This can be either positive to determine days from event, or negative to determine days before the event.",
                            "example": 0
                          },
                          "formDesign": {
                            "type": "object",
                            "description": "The Form Design attached to this Workflow",
                            "properties": {
                              "id": {
                                "title": "UUIDv4",
                                "maxLength": 36,
                                "minLength": 36,
                                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                                "description": "The identifier string for the Form Design.",
                                "type": "string"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of this Form Design.",
                                "example": "New Employee Checklist"
                              },
                              "description": {
                                "type": "string",
                                "description": "The description of this Form Design.",
                                "example": "Compliance task to check all necessary preparations before start date."
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          }
        }
      },
      "workflows_patch_request": {
        "type": "object",
        "required": [
          "jobId",
          "workflowFormDesigns"
        ],
        "properties": {
          "jobId": {
            "title": "UUIDv4",
            "maxLength": 36,
            "minLength": 36,
            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
            "description": "The identifier string for the [Job](#tag/Jobs) to trigger this Workflow for.",
            "type": "string"
          },
          "workflowFormDesigns": {
            "type": "array",
            "description": "Information about the Workflow Form Designs within this [Workflow](#tags/workflows).",
            "items": {
              "required": [
                "id"
              ],
              "type": "object",
              "properties": {
                "id": {
                  "title": "UUIDv4",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "description": "The identifier string for the Workflow Form Design.  Note that this is not the id of the Form Design.  The Form Design that you wish to send will be listed under a 'Workflow Form Design' in the response from [Workflow Events](#/workflow-events), it is the id of this Workflow Form Design that is required in this field, not the id of the Form Design itself.",
                  "type": "string"
                },
                "sendDate": {
                  "description": "Sending date for the Form Design (YYYY-MM-DD). \n\nIf this value is not passed, the workflow scheduled date will default to the configured date of the set form design.",
                  "example": "2015-03-02",
                  "oneOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "workflows_patch_response": {
        "type": "object",
        "title": "Scheduled Workflow Response",
        "properties": {
          "data": {
            "type": "object",
            "title": "WorkflowSchedule",
            "properties": {
              "workflow": {
                "type": "object",
                "title": "Workflow",
                "description": "Information on the [Workflow](#tags/workflows) that was triggered.",
                "properties": {
                  "id": {
                    "title": "UUIDv4",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "description": "The identifier string for the [Workflow](#tags/workflows).",
                    "type": "string"
                  },
                  "name": {
                    "type": "string",
                    "description": "Name given to this [Workflow](#tag/Workflows). This name would normally be shown to users of the system.",
                    "example": "New Permanent Onboarding"
                  },
                  "description": {
                    "type": "string",
                    "description": "The description of this [Workflow](#tag/Workflows). This description would normally be shown to users of the system.",
                    "example": "This workflow contains a series of checklists and employee feedback tasks"
                  }
                }
              },
              "formInstanceSchedule": {
                "deprecated": true,
                "type": "array",
                "title": "Scheduled Form Array",
                "description": "An array providing information on scheduled Form instances.",
                "items": {
                  "type": "object",
                  "title": "Workflow Schedule",
                  "properties": {
                    "id": {
                      "title": "UUIDv4",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "description": "The identifier string for the scheduled Form instance.",
                      "type": "string"
                    },
                    "issueDate": {
                      "title": "RFC3339 datetime",
                      "example": "2015-03-01T22:30:00+00:00",
                      "description": "The date this Form instance is scheduled to be sent. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                      "type": "string"
                    }
                  }
                }
              },
              "scheduledForms": {
                "type": "array",
                "title": "Scheduled Form Array",
                "description": "An array providing information on Scheduled Forms",
                "items": {
                  "type": "object",
                  "title": "Scheduled Forms",
                  "properties": {
                    "id": {
                      "title": "UUIDv4",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "description": "The identifier string for the Scheduled Form.",
                      "type": "string"
                    },
                    "issueDate": {
                      "title": "RFC3339 datetime",
                      "example": "2015-03-01T22:30:00+00:00",
                      "description": "The date this Scheduled Form is scheduled to be sent. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          }
        }
      },
      "work-rights": {
        "type": "object",
        "title": "Single Work Right",
        "properties": {
          "data": {
            "type": "object",
            "title": "Work Right",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Work Right](#tag/Work-Right).",
                "type": "string"
              },
              "name": {
                "description": "Name given to this [Work Right](#tag/Work-Right). This name would normally be shown to users of the system.",
                "example": "Australian Citizen",
                "type": "string"
              },
              "countryId": {
                "description": "The identifier string for the Country.",
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "type": "string"
              },
              "country": {
                "description": "The name value of the assigned Country.",
                "example": "Australia",
                "type": "string"
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          }
        }
      },
      "work-rights_list": {
        "type": "object",
        "title": "List of Work Rights",
        "properties": {
          "data": {
            "type": "array",
            "title": "data",
            "items": {
              "type": "object",
              "title": "Work Right",
              "properties": {
                "id": {
                  "title": "UUIDv4",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "description": "The identifier string for the [Work Right](#tag/Work-Right).",
                  "type": "string"
                },
                "name": {
                  "description": "Name given to this [Work Right](#tag/Work-Right). This name would normally be shown to users of the system.",
                  "example": "Australian Citizen",
                  "type": "string"
                },
                "countryId": {
                  "description": "The identifier string for the Country.",
                  "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "type": "string"
                },
                "country": {
                  "description": "The name value of the assigned Country.",
                  "example": "Australia",
                  "type": "string"
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "pagination": {
                "type": "object",
                "description": "Contains information related to the pagination of the response",
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total items count",
                    "minimum": 0,
                    "example": 50
                  },
                  "count": {
                    "type": "integer",
                    "description": "Number of items for current page",
                    "minimum": 0,
                    "example": 10
                  },
                  "per_page": {
                    "type": "integer",
                    "description": "Items per page limit",
                    "minimum": 0,
                    "example": 10
                  },
                  "current_page": {
                    "type": "integer",
                    "description": "Current page",
                    "minimum": 1,
                    "example": 3
                  },
                  "total_pages": {
                    "type": "integer",
                    "description": "Total number of pages",
                    "minimum": 1,
                    "example": 5
                  }
                }
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          },
          "links": {
            "type": "object",
            "description": "Links to other related resources.",
            "properties": {
              "self": {
                "type": "string",
                "description": "The current page URL",
                "example": "https://api.intellihr.io/v1/work-rights?limit=1&page=3"
              },
              "first": {
                "type": "string",
                "description": "The first page URL",
                "example": "https://api.intellihr.io/v1/work-rights?limit=1&page=1"
              },
              "prev": {
                "type": "string",
                "description": "The previous page URL",
                "example": "https://api.intellihr.io/v1/work-rights?limit=1&page=2"
              },
              "next": {
                "type": "string",
                "description": "The next page URL",
                "example": "https://api.intellihr.io/v1/work-rights?limit=1&page=4"
              },
              "last": {
                "type": "string",
                "description": "The last page URL",
                "example": "https://api.intellihr.io/v1/work-rights?limit=1&page=5"
              }
            }
          }
        }
      },
      "work-types": {
        "type": "object",
        "title": "Single Work Type",
        "properties": {
          "data": {
            "type": "object",
            "title": "workType",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Work Type](#tag/Work-Type).",
                "type": "string"
              },
              "name": {
                "type": "string",
                "description": "The name of the [Work Type](#tag/Work-Types). Enum: `Permanent`, `Fixed Contract`, `Unpaid`, `Temporary/Casual`, `Independent Contract`.",
                "example": "Permanent"
              },
              "isEnabled": {
                "type": "boolean",
                "description": "Specifies whether users can select this [Work Type](#tag/Work-Types) in dropdowns."
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          }
        }
      },
      "work-types_list": {
        "type": "object",
        "title": "List Work Types",
        "properties": {
          "data": {
            "type": "array",
            "title": "data",
            "items": {
              "type": "object",
              "title": "workType",
              "properties": {
                "id": {
                  "title": "UUIDv4",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "description": "The identifier string for the [Work Type](#tag/Work-Type).",
                  "type": "string"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the [Work Type](#tag/Work-Types). Enum: `Permanent`, `Fixed Contract`, `Unpaid`, `Temporary/Casual`, `Independent Contract`.",
                  "example": "Permanent"
                },
                "isEnabled": {
                  "type": "boolean",
                  "description": "Specifies whether users can select this [Work Type](#tag/Work-Types) in dropdowns."
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "pagination": {
                "type": "object",
                "description": "Contains information related to the pagination of the response",
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total items count",
                    "minimum": 0,
                    "example": 50
                  },
                  "count": {
                    "type": "integer",
                    "description": "Number of items for current page",
                    "minimum": 0,
                    "example": 10
                  },
                  "per_page": {
                    "type": "integer",
                    "description": "Items per page limit",
                    "minimum": 0,
                    "example": 10
                  },
                  "current_page": {
                    "type": "integer",
                    "description": "Current page",
                    "minimum": 1,
                    "example": 3
                  },
                  "total_pages": {
                    "type": "integer",
                    "description": "Total number of pages",
                    "minimum": 1,
                    "example": 5
                  }
                }
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          },
          "links": {
            "type": "object",
            "description": "Links to other related resources.",
            "properties": {
              "self": {
                "type": "string",
                "description": "The current page URL",
                "example": "https://api.intellihr.io/v1/work-types?limit=1&page=3"
              },
              "first": {
                "type": "string",
                "description": "The first page URL",
                "example": "https://api.intellihr.io/v1/work-types?limit=1&page=1"
              },
              "prev": {
                "type": "string",
                "description": "The previous page URL",
                "example": "https://api.intellihr.io/v1/work-types?limit=1&page=2"
              },
              "next": {
                "type": "string",
                "description": "The next page URL",
                "example": "https://api.intellihr.io/v1/work-types?limit=1&page=4"
              },
              "last": {
                "type": "string",
                "description": "The last page URL",
                "example": "https://api.intellihr.io/v1/work-types?limit=1&page=5"
              }
            }
          }
        }
      },
      "webhook-events_list": {
        "type": "object",
        "description": "List Webhook Events.",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "title": "UUIDv4",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "description": "The identifier string for the [Webhook Event](#tag/Webhook-Events).",
                  "type": "string"
                },
                "name": {
                  "type": "string",
                  "description": "The human readable unique event key for this [Webhook Event](#tag/Webhook-Events).",
                  "example": "Person Created Event"
                },
                "event": {
                  "type": "string",
                  "description": "The slug of the [Webhook Event](#tag/Webhook-Events).",
                  "example": "person.created"
                },
                "examplePayload": {
                  "type": "object",
                  "description": "An example of the payload which will be sent to [Webhooks](#tag/Webhooks) that subscribe to this particular [Webhook Event](#tag/Webhook-Events).",
                  "example": {
                    "payload_key": "payload_value"
                  }
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "pagination": {
                "type": "object",
                "description": "Contains information related to the pagination of the response",
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total items count",
                    "minimum": 0,
                    "example": 50
                  },
                  "count": {
                    "type": "integer",
                    "description": "Number of items for current page",
                    "minimum": 0,
                    "example": 10
                  },
                  "per_page": {
                    "type": "integer",
                    "description": "Items per page limit",
                    "minimum": 0,
                    "example": 10
                  },
                  "current_page": {
                    "type": "integer",
                    "description": "Current page",
                    "minimum": 1,
                    "example": 3
                  },
                  "total_pages": {
                    "type": "integer",
                    "description": "Total number of pages",
                    "minimum": 1,
                    "example": 5
                  }
                }
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          },
          "links": {
            "type": "object",
            "description": "Links to other related resources.",
            "properties": {
              "self": {
                "type": "string",
                "description": "The current page URL",
                "example": "https://api.intellihr.io/v1/webhook-events?limit=1&page=3"
              },
              "first": {
                "type": "string",
                "description": "The first page URL",
                "example": "https://api.intellihr.io/v1/webhook-events?limit=1&page=1"
              },
              "prev": {
                "type": "string",
                "description": "The previous page URL",
                "example": "https://api.intellihr.io/v1/webhook-events?limit=1&page=2"
              },
              "next": {
                "type": "string",
                "description": "The next page URL",
                "example": "https://api.intellihr.io/v1/webhook-events?limit=1&page=4"
              },
              "last": {
                "type": "string",
                "description": "The last page URL",
                "example": "https://api.intellihr.io/v1/webhook-events?limit=1&page=5"
              }
            }
          }
        }
      },
      "webhook-events": {
        "type": "object",
        "description": "Single Webhook Event.",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Webhook Event](#tag/Webhook-Events).",
                "type": "string"
              },
              "name": {
                "type": "string",
                "description": "The human readable unique event key for this [Webhook Event](#tag/Webhook-Events).",
                "example": "Person Created Event"
              },
              "event": {
                "type": "string",
                "description": "The slug of the [Webhook Event](#tag/Webhook-Events).",
                "example": "person.created"
              },
              "examplePayload": {
                "type": "object",
                "description": "An example of the payload which will be sent to [Webhooks](#tag/Webhooks) that subscribe to this particular [Webhook Event](#tag/Webhook-Events).",
                "example": {
                  "payload_key": "payload_value"
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          }
        }
      },
      "webhookJobCreated": {
        "allOf": [
          {
            "$ref": "#/components/schemas/webhookEventBasic"
          },
          {
            "type": "object",
            "properties": {
              "event": {
                "example": "job.created"
              },
              "links": {
                "properties": {
                  "self": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/jobs/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  },
                  "selfEncoded": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/jobs/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              }
            }
          }
        ]
      },
      "webhookJobDeleted": {
        "allOf": [
          {
            "$ref": "#/components/schemas/webhookEvent"
          },
          {
            "type": "object",
            "properties": {
              "event": {
                "example": "job.deleted"
              }
            }
          }
        ]
      },
      "webhookJobEnded": {
        "allOf": [
          {
            "$ref": "#/components/schemas/webhookEventBasic"
          },
          {
            "type": "object",
            "properties": {
              "event": {
                "example": "job.ended"
              },
              "links": {
                "properties": {
                  "self": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/jobs/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  },
                  "selfEncoded": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/jobs/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              }
            }
          }
        ]
      },
      "webhookJobEndDateAdjusted": {
        "allOf": [
          {
            "$ref": "#/components/schemas/webhookEventBasic"
          },
          {
            "type": "object",
            "properties": {
              "event": {
                "example": "job.end_date_adjusted"
              },
              "links": {
                "properties": {
                  "self": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/jobs/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  },
                  "selfEncoded": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/jobs/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              }
            }
          }
        ]
      },
      "webhookJobEndDateFinalised": {
        "allOf": [
          {
            "$ref": "#/components/schemas/webhookEventBasic"
          },
          {
            "type": "object",
            "properties": {
              "event": {
                "example": "job.end_date_finalised"
              },
              "start_date": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "When this job is be effective from. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "inclusive_end_date": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "The last day of work for the employee in this job. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "links": {
                "properties": {
                  "self": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/jobs/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  },
                  "selfEncoded": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/jobs/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              }
            }
          }
        ]
      },
      "webhookJobEndDateCancelled": {
        "allOf": [
          {
            "$ref": "#/components/schemas/webhookEventBasic"
          },
          {
            "type": "object",
            "properties": {
              "event": {
                "example": "job.end_date_cancelled"
              },
              "links": {
                "properties": {
                  "self": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/jobs/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  },
                  "selfEncoded": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/jobs/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              }
            }
          }
        ]
      },
      "webhookJobEffectiveDatesUpdated": {
        "allOf": [
          {
            "$ref": "#/components/schemas/webhookEventBasic"
          },
          {
            "type": "object",
            "properties": {
              "event": {
                "example": "job.effective_dates_updated"
              },
              "links": {
                "properties": {
                  "self": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/jobs/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  },
                  "selfEncoded": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/jobs/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              }
            }
          }
        ]
      },
      "webhookJobStartDateUpcoming": {
        "allOf": [
          {
            "$ref": "#/components/schemas/webhookEventBasic"
          },
          {
            "$ref": "#/components/schemas/webhookEventScheduled"
          },
          {
            "type": "object",
            "properties": {
              "event": {
                "example": "job.company_start_date_upcoming"
              },
              "links": {
                "properties": {
                  "self": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/jobs/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  },
                  "selfEncoded": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/jobs/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              }
            }
          }
        ]
      },
      "webhookJobTimelineUpdated": {
        "allOf": [
          {
            "$ref": "#/components/schemas/webhookEventBasic"
          },
          {
            "type": "object",
            "properties": {
              "event": {
                "example": "job.timeline_updated"
              },
              "links": {
                "properties": {
                  "self": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/jobs/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  },
                  "selfEncoded": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/jobs/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              }
            }
          }
        ]
      },
      "webhookPersonDeleted": {
        "allOf": [
          {
            "$ref": "#/components/schemas/webhookEvent"
          },
          {
            "type": "object",
            "properties": {
              "event": {
                "example": "person.deleted"
              }
            }
          }
        ]
      },
      "webhookTrainingCreated": {
        "allOf": [
          {
            "$ref": "#/components/schemas/webhookEventBasic"
          },
          {
            "type": "object",
            "properties": {
              "event": {
                "example": "training.created"
              },
              "links": {
                "properties": {
                  "self": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/trainings/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  },
                  "selfEncoded": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/trainings/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              }
            }
          }
        ]
      },
      "webhookTrainingDeleted": {
        "allOf": [
          {
            "$ref": "#/components/schemas/webhookEvent"
          },
          {
            "type": "object",
            "properties": {
              "event": {
                "example": "training.deleted"
              }
            }
          }
        ]
      },
      "webhookTrainingUpdated": {
        "allOf": [
          {
            "$ref": "#/components/schemas/webhookEventBasic"
          },
          {
            "type": "object",
            "properties": {
              "event": {
                "example": "training.updated"
              },
              "links": {
                "properties": {
                  "self": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/trainings/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  },
                  "selfEncoded": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/trainings/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              }
            }
          }
        ]
      },
      "webhookFormCreated": {
        "allOf": [
          {
            "$ref": "#/components/schemas/webhookEventBasic"
          },
          {
            "type": "object",
            "properties": {
              "event": {
                "example": "form.created"
              },
              "links": {
                "properties": {
                  "self": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/forms/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  },
                  "selfEncoded": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/forms/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              }
            }
          }
        ]
      },
      "webhookEventLinks": {
        "type": "object",
        "properties": {
          "links": {
            "type": "object",
            "description": "Object that contains the html encoded and non encoded links.",
            "properties": {
              "self": {
                "type": "string",
                "title": "URL",
                "description": "Link on the public api to get more information on this piece of data.",
                "example": "https://api.intellihr.io/v1/people/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
              },
              "selfEncoded": {
                "type": "string",
                "title": "URL",
                "description": "Link on the public api to get more information on this piece of data.",
                "example": "https://api.intellihr.io/v1/people/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
              }
            }
          }
        }
      },
      "webhookEvent": {
        "type": "object",
        "properties": {
          "id": {
            "title": "UUIDv4",
            "maxLength": 36,
            "minLength": 36,
            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
            "description": "The identifier that this event relates to.",
            "type": "string"
          },
          "event": {
            "type": "string",
            "description": "The slug of the [Webhook Event](#tag/Webhook-Events).",
            "example": "person.created"
          },
          "timestamp": {
            "title": "RFC3339 datetime",
            "example": "2015-03-01T22:30:00+00:00",
            "description": "When this event was fired, not necessarily the the time that the event occurred. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
            "type": "string"
          }
        }
      },
      "webhookEventBasic": {
        "allOf": [
          {
            "$ref": "#/components/schemas/webhookEvent"
          },
          {
            "$ref": "#/components/schemas/webhookEventLinks"
          }
        ]
      },
      "webhookEventScheduled": {
        "type": "object",
        "properties": {
          "scheduled_for": {
            "title": "RFC3339 datetime",
            "example": "2015-03-01T22:30:00+00:00",
            "description": "Date this event was scheduled for.. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
            "type": "string"
          },
          "scheduled_offset": {
            "type": "string",
            "description": "The current offset before the scheduled date. Enum: `-1 month`, `-14 days`, `-7 days`, `-3 days`, `-1 days`, `0 days`.",
            "example": "-7 days"
          }
        }
      },
      "webhookEventFormCompleted": {
        "allOf": [
          {
            "$ref": "#/components/schemas/webhookEvent"
          },
          {
            "$ref": "#/components/schemas/webhookEventLinks"
          },
          {
            "type": "object",
            "properties": {
              "event": {
                "example": "form.completed"
              },
              "links": {
                "properties": {
                  "self": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/forms/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  },
                  "selfEncoded": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/forms/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              },
              "formDesignId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the Form id.",
                "type": "string"
              }
            }
          }
        ]
      },
      "webhookEventUpdateAttributes": {
        "type": "object",
        "properties": {
          "updated_attributes": {
            "type": "array",
            "items": {
              "type": "string",
              "example": [
                "field_1"
              ]
            }
          }
        }
      },
      "webhookEventEffectiveDatesUpdate": {
        "type": "object",
        "properties": {
          "update_start_date": {
            "oneOf": [
              {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "When this update should be effective from. Please note that the date for this field is <b>inclusive</b>. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          },
          "update_end_date": {
            "oneOf": [
              {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "When this update should finish. Please note that the date for this field is <b>exclusive</b>. For example, if the person's `update_end_date` is on 2025-04-24, the person last day of work would be on 2025-04-23 which is a day before. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "webhookEventJobUpdatedScheduled": {
        "allOf": [
          {
            "$ref": "#/components/schemas/webhookEventBasic"
          },
          {
            "$ref": "#/components/schemas/webhookEventEffectiveDatesUpdate"
          },
          {
            "$ref": "#/components/schemas/webhookEventUpdateAttributes"
          },
          {
            "type": "object",
            "properties": {
              "event": {
                "example": "job.update_scheduled"
              },
              "links": {
                "properties": {
                  "self": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/jobs/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  },
                  "selfEncoded": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/jobs/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              },
              "updated_attributes": {
                "items": {
                  "example": [
                    "location_id",
                    "name"
                  ],
                  "enum": [
                    "business_entity_id",
                    "business_unit_id",
                    "fte",
                    "location_id",
                    "name",
                    "pay_grade_id",
                    "pay_package",
                    "supervisor_job_id",
                    "work_class_id",
                    "work_type_id"
                  ]
                }
              }
            }
          }
        ]
      },
      "webhookEventJobRemUpdatedScheduled": {
        "allOf": [
          {
            "$ref": "#/components/schemas/webhookEventBasic"
          },
          {
            "$ref": "#/components/schemas/webhookEventEffectiveDatesUpdate"
          },
          {
            "properties": {
              "event": {
                "example": "job_remuneration.update_scheduled"
              },
              "links": {
                "properties": {
                  "self": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/jobs/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  },
                  "selfEncoded": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/jobs/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              }
            }
          }
        ]
      },
      "webhookEventPersonBirthdayUpcoming": {
        "allOf": [
          {
            "$ref": "#/components/schemas/webhookEventBasic"
          },
          {
            "$ref": "#/components/schemas/webhookEventScheduled"
          },
          {
            "properties": {
              "event": {
                "example": "person.birthday_upcoming"
              },
              "links": {
                "properties": {
                  "self": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/people/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  },
                  "selfEncoded": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/people/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              }
            }
          }
        ]
      },
      "webhookEventPersonUpdated": {
        "allOf": [
          {
            "$ref": "#/components/schemas/webhookEventBasic"
          },
          {
            "$ref": "#/components/schemas/webhookEventUpdateAttributes"
          },
          {
            "type": "object",
            "properties": {
              "event": {
                "example": "person.updated"
              },
              "updated_attributes": {
                "items": {
                  "example": [
                    "first_name",
                    "gender_id"
                  ],
                  "enum": [
                    "first_name",
                    "middle_name",
                    "last_name",
                    "preferred_name",
                    "dob",
                    "gender_id",
                    "employee_number",
                    "title_id",
                    "emergency_contact_name",
                    "emergency_contact_relationship",
                    "emergency_contact_phone",
                    "emergency_contact_email",
                    "email_addresses",
                    "phone_numbers",
                    "addresses",
                    "custom_field_values",
                    "work_right_id",
                    "work_right_expiry_date"
                  ]
                }
              }
            }
          }
        ]
      },
      "webhookUserCreated": {
        "allOf": [
          {
            "$ref": "#/components/schemas/webhookEventBasic"
          },
          {
            "type": "object",
            "properties": {
              "event": {
                "example": "user.created"
              },
              "links": {
                "properties": {
                  "self": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/users/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  },
                  "selfEncoded": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/users/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              }
            }
          }
        ]
      },
      "webhookUserDeleted": {
        "allOf": [
          {
            "$ref": "#/components/schemas/webhookEvent"
          },
          {
            "type": "object",
            "properties": {
              "event": {
                "example": "user.deleted"
              }
            }
          }
        ]
      },
      "webhookUserDisabled": {
        "allOf": [
          {
            "$ref": "#/components/schemas/webhookEventBasic"
          },
          {
            "type": "object",
            "properties": {
              "event": {
                "example": "user.disabled"
              },
              "links": {
                "properties": {
                  "self": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/users/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  },
                  "selfEncoded": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/users/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              }
            }
          }
        ]
      },
      "webhookUserDisabledUpcoming": {
        "allOf": [
          {
            "$ref": "#/components/schemas/webhookEventBasic"
          },
          {
            "$ref": "#/components/schemas/webhookEventScheduled"
          },
          {
            "type": "object",
            "properties": {
              "event": {
                "example": "user.disabled_upcoming"
              },
              "links": {
                "properties": {
                  "self": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/users/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  },
                  "selfEncoded": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/users/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              }
            }
          }
        ]
      },
      "webhookUserUpdated": {
        "allOf": [
          {
            "$ref": "#/components/schemas/webhookEventBasic"
          },
          {
            "type": "object",
            "properties": {
              "event": {
                "example": "user.updated"
              },
              "links": {
                "properties": {
                  "self": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/users/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  },
                  "selfEncoded": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/users/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              },
              "updated_attributes": {
                "items": {
                  "example": [
                    "username",
                    "password"
                  ],
                  "enum": [
                    "username",
                    "person_id",
                    "is_enabled",
                    "disable_at",
                    "sso_id",
                    "password",
                    "roles",
                    "has_accepted_terms"
                  ]
                }
              }
            }
          }
        ]
      },
      "webhookQualificationCreated": {
        "allOf": [
          {
            "$ref": "#/components/schemas/webhookEventBasic"
          },
          {
            "type": "object",
            "properties": {
              "event": {
                "example": "qualification.instance_created"
              },
              "links": {
                "properties": {
                  "self": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/qualifications/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  },
                  "selfEncoded": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/qualifications/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              }
            }
          }
        ]
      },
      "webhookQualificationUpdated": {
        "allOf": [
          {
            "$ref": "#/components/schemas/webhookEventBasic"
          },
          {
            "type": "object",
            "properties": {
              "event": {
                "example": "qualification.instance_updated"
              },
              "links": {
                "properties": {
                  "self": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/qualifications/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  },
                  "selfEncoded": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/qualifications/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              }
            }
          }
        ]
      },
      "webhooks": {
        "type": "object",
        "title": "Single Webhook",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "id": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the [Webhook](#tag/Webhooks).",
                "type": "string"
              },
              "url": {
                "type": "string",
                "description": "The [Webhook](#tag/Webhooks) endpoint which the request will be sent to when the subscribed [Webhook Event](#tag/Webhook-Events) is triggered.",
                "example": "http://example.com"
              },
              "webhookEvent": {
                "type": "object",
                "description": "The [Webhook Event](#tag/Webhook-Events) that triggered this [Webhook](#tag/Webhooks).",
                "properties": {
                  "id": {
                    "title": "UUIDv4",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "description": "The identifier string for the [Webhook Event](#tag/Webhook-Events).",
                    "type": "string"
                  },
                  "name": {
                    "type": "string",
                    "description": "The human readable unique event key for this [Webhook Event](#tag/Webhook-Events).",
                    "example": "Person Created Event"
                  },
                  "event": {
                    "type": "string",
                    "description": "The slug of the [Webhook Event](#tag/Webhook-Events).",
                    "example": "person.created"
                  },
                  "link": {
                    "type": "string",
                    "title": "URL",
                    "description": "Link on the public api to get more information on this piece of data.",
                    "example": "https://api.intellihr.io/v1/webhook-events/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              },
              "isEnabled": {
                "description": "Specifies whether users can select this [Webhook](#tag/Webhooks). When disabled, this [Webhook](#tag/Webhooks) will not be sent.",
                "example": true,
                "type": "boolean"
              },
              "source": {
                "description": "A customizable string which can be used to identify what system created this [Webhook](#tag/Webhooks). [Webhooks](#tag/Webhooks) created through the intelliHR application will have source: 'custom'.",
                "example": "zapier",
                "type": "string"
              },
              "createdAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "When this record was created. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              },
              "updatedAt": {
                "title": "RFC3339 datetime",
                "example": "2015-03-01T22:30:00+00:00",
                "description": "When this record was last updated. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                "type": "string"
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          }
        }
      },
      "webhooks_create": {
        "type": "object",
        "required": [
          "url",
          "webhookEvent"
        ],
        "properties": {
          "url": {
            "type": "string",
            "description": "The [Webhook](#tag/Webhooks) endpoint which the request will be sent to when the subscribed [Webhook Event](#tag/Webhook-Events) is triggered."
          },
          "webhookEvent": {
            "description": "The slug of the [Webhook Event](#tag/Webhook-Events).",
            "type": "string"
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Specifies whether users can select this [Webhook](#tag/Webhooks). When disabled, this [Webhook](#tag/Webhooks) will not be sent.",
            "default": true
          },
          "source": {
            "type": "string",
            "description": "A customizable string which can be used to identify what system created this [Webhook](#tag/Webhooks). [Webhooks](#tag/Webhooks) created through the intelliHR application will have source: 'custom'.",
            "default": "custom"
          }
        }
      },
      "webhooks_patch": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "The [Webhook](#tag/Webhooks) endpoint which the request will be sent to when the subscribed [Webhook Event](#tag/Webhook-Events) is triggered."
          },
          "webhookEvent": {
            "description": "The slug of the [Webhook Event](#tag/Webhook-Events).",
            "type": "string"
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Specifies whether users can select this [Webhook](#tag/Webhooks). When disabled, this [Webhook](#tag/Webhooks) will not be sent."
          },
          "source": {
            "type": "string",
            "description": "A customizable string which can be used to identify what system created this [Webhook](#tag/Webhooks). [Webhooks](#tag/Webhooks) created through the intelliHR application will have source: 'custom'."
          }
        }
      },
      "webhooks_list": {
        "type": "object",
        "title": "List Webhooks",
        "properties": {
          "data": {
            "type": "array",
            "title": "data",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "title": "UUIDv4",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "description": "The identifier string for the [Webhook](#tag/Webhooks).",
                  "type": "string"
                },
                "url": {
                  "type": "string",
                  "description": "The [Webhook](#tag/Webhooks) endpoint which the request will be sent to when the subscribed [Webhook Event](#tag/Webhook-Events) is triggered.",
                  "example": "http://example.com"
                },
                "webhookEvent": {
                  "type": "object",
                  "description": "The [Webhook Event](#tag/Webhook-Events) that triggered this [Webhook](#tag/Webhooks).",
                  "properties": {
                    "id": {
                      "title": "UUIDv4",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "description": "The identifier string for the [Webhook Event](#tag/Webhook-Events).",
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "description": "The human readable unique event key for this [Webhook Event](#tag/Webhook-Events).",
                      "example": "Person Created Event"
                    },
                    "event": {
                      "type": "string",
                      "description": "The slug of the [Webhook Event](#tag/Webhook-Events).",
                      "example": "person.created"
                    },
                    "link": {
                      "type": "string",
                      "title": "URL",
                      "description": "Link on the public api to get more information on this piece of data.",
                      "example": "https://api.intellihr.io/v1/webhook-events/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                    }
                  }
                },
                "isEnabled": {
                  "description": "Specifies whether users can select this [Webhook](#tag/Webhooks). When disabled, this [Webhook](#tag/Webhooks) will not be sent.",
                  "example": true,
                  "type": "boolean"
                },
                "source": {
                  "description": "A customizable string which can be used to identify what system created this [Webhook](#tag/Webhooks). [Webhooks](#tag/Webhooks) created through the intelliHR application will have source: 'custom'.",
                  "example": "zapier",
                  "type": "string"
                },
                "createdAt": {
                  "title": "RFC3339 datetime",
                  "example": "2015-03-01T22:30:00+00:00",
                  "description": "When this record was created. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                  "type": "string"
                },
                "updatedAt": {
                  "title": "RFC3339 datetime",
                  "example": "2015-03-01T22:30:00+00:00",
                  "description": "When this record was last updated. This date will follow the format defined by [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6).",
                  "type": "string"
                }
              }
            }
          },
          "meta": {
            "type": "object",
            "description": "Contains miscellaneous meta information about the response.",
            "properties": {
              "pagination": {
                "type": "object",
                "description": "Contains information related to the pagination of the response",
                "properties": {
                  "total": {
                    "type": "integer",
                    "description": "Total items count",
                    "minimum": 0,
                    "example": 50
                  },
                  "count": {
                    "type": "integer",
                    "description": "Number of items for current page",
                    "minimum": 0,
                    "example": 10
                  },
                  "per_page": {
                    "type": "integer",
                    "description": "Items per page limit",
                    "minimum": 0,
                    "example": 10
                  },
                  "current_page": {
                    "type": "integer",
                    "description": "Current page",
                    "minimum": 1,
                    "example": 3
                  },
                  "total_pages": {
                    "type": "integer",
                    "description": "Total number of pages",
                    "minimum": 1,
                    "example": 5
                  }
                }
              },
              "requestId": {
                "title": "UUIDv4",
                "maxLength": 36,
                "minLength": 36,
                "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "description": "The identifier string for the api request.",
                "type": "string"
              }
            }
          },
          "links": {
            "type": "object",
            "description": "Links to other related resources.",
            "properties": {
              "self": {
                "type": "string",
                "description": "The current page URL",
                "example": "https://api.intellihr.io/v1/webhooks?limit=1&page=3"
              },
              "first": {
                "type": "string",
                "description": "The first page URL",
                "example": "https://api.intellihr.io/v1/webhooks?limit=1&page=1"
              },
              "prev": {
                "type": "string",
                "description": "The previous page URL",
                "example": "https://api.intellihr.io/v1/webhooks?limit=1&page=2"
              },
              "next": {
                "type": "string",
                "description": "The next page URL",
                "example": "https://api.intellihr.io/v1/webhooks?limit=1&page=4"
              },
              "last": {
                "type": "string",
                "description": "The last page URL",
                "example": "https://api.intellihr.io/v1/webhooks?limit=1&page=5"
              }
            }
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "https://api.intellihr.io/v1",
      "description": "Live Server"
    }
  ],
  "security": [
    {
      "ApiKey": []
    }
  ],
  "responses": {
    "errors": {
      "400": {
        "description": "Bad Request",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "title": "Bad Request",
              "properties": {
                "name": {
                  "type": "string",
                  "title": "Name"
                },
                "message": {
                  "type": "string",
                  "title": "Message"
                },
                "code": {
                  "type": "integer",
                  "title": "Code",
                  "description": "HTTP Status Code for the error."
                },
                "errors": {
                  "type": "array",
                  "title": "Errors",
                  "description": "List of errors identified by the server.",
                  "items": {
                    "properties": {
                      "code": {
                        "type": "integer",
                        "title": "Code",
                        "description": "HTTP Status Code for the error."
                      },
                      "detail": {
                        "type": "string",
                        "title": "Details",
                        "description": "A description of the problem encountered by the server."
                      }
                    }
                  }
                }
              }
            },
            "example": {
              "value": {
                "name": "BadRequest",
                "message": "error",
                "code": "400",
                "errors": [
                  {
                    "code": 400,
                    "detail": "An invalid UUID was provided"
                  },
                  {
                    "code": 400,
                    "detail": "An invalid email address was provided"
                  }
                ]
              }
            }
          }
        }
      },
      "403": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "title": "Forbidden",
              "properties": {
                "name": {
                  "type": "string",
                  "title": "Name"
                },
                "message": {
                  "type": "string",
                  "title": "Message"
                },
                "code": {
                  "type": "integer",
                  "title": "Code",
                  "description": "HTTP Status Code for the error."
                },
                "errors": {
                  "type": "object",
                  "title": "Errors"
                }
              }
            },
            "example": {
              "value": {
                "name": "Forbidden",
                "message": "Error",
                "code": 403,
                "errors": {}
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "title": "Internal Server Error",
              "description": "Unknown server error",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the error."
                },
                "message": {
                  "type": "string",
                  "title": "Message",
                  "description": "A brief information about what might have happened."
                },
                "code": {
                  "type": "integer",
                  "title": "Error Code",
                  "description": "HTTP Status Code for the error"
                },
                "errors": {
                  "type": "object",
                  "title": "Errors"
                }
              }
            },
            "example": {
              "value": {
                "name": "Internal Server Error",
                "message": "An internal server error occurred and has been recorded. Please try again later. If this does not resolve your issue, please contact support@intellihr.co for support and guidance.",
                "code": 500,
                "errors": {}
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "customFieldsResponse": {
      "type": "object",
      "additionalProperties": {
        "type": "object",
        "description": "Custom fields will be keyed by their api_name. Custom fields will always appear on an object if defined, and will default to having null values.",
        "properties": {
          "definitionId": {
            "title": "UUIDv4",
            "maxLength": 36,
            "minLength": 36,
            "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
            "description": "The identifier string for the Custom Field Definition for this custom field.",
            "type": "string"
          },
          "name": {
            "description": "The human readable name of the Custom Field Definition for this custom field",
            "type": "string"
          },
          "type": {
            "description": "The type of the Custom Field Definition for this custom field. Enum: `TEXT`, `NUMBER`, `SINGLE_SELECT`, `MULTI_SELECT`, `PEOPLE_DROPDOWN`.",
            "type": "string"
          },
          "value": {
            "description": "The value for this custom field. This value structure will depend upon the type of the custom field.",
            "anyOf": [
              {
                "type": "null",
                "description": "The value will be null when a custom field is not provided or is empty for a record."
              },
              {
                "type": "string",
                "description": "For TEXT and NUMBER records, the value is a string with the value of the record."
              },
              {
                "type": "object",
                "description": "For SINGLE_SELECT records, the value is an object with the id and label of the dropdown option",
                "properties": {
                  "id": {
                    "title": "UUIDv4",
                    "maxLength": 36,
                    "minLength": 36,
                    "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "description": "The identifier string for the Dropdown Option. For SINGLE_SELECT records, the value is an object with the id and label of the dropdown option.",
                    "type": "string"
                  },
                  "label": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "ids": {
                    "type": "array",
                    "description": "For MULTI_SELECT records, the value is an object with an array of ids and array of labels for all selected options.",
                    "minItems": 1,
                    "items": {
                      "title": "UUIDv4",
                      "maxLength": 36,
                      "minLength": 36,
                      "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "description": "The identifier string for the Dropdown Options..",
                      "type": "string"
                    }
                  },
                  "labels": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "options": {
                    "type": "array",
                    "description": "For PEOPLE_DROPDOWN records the value is an array of the person and job object for each selected person.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "job": {
                          "type": "object",
                          "description": "Job data returned for the selected person."
                        },
                        "person": {
                          "type": "object",
                          "description": "Person data returned for the selected person."
                        }
                      }
                    }
                  }
                }
              }
            ]
          }
        }
      },
      "example": {
        "text_field_api_name": {
          "definitionId": "e82690b4-caac-471e-94f9-9b76fa9df131",
          "name": "Description",
          "type": "TEXT",
          "value": "Some text value"
        },
        "numeric_field_api_name": {
          "definitionId": "e82690b4-caac-471e-94f9-9b76fa9df131",
          "name": "CPD Points",
          "type": "NUMBER",
          "value": "50"
        },
        "single_select_api_name": {
          "definitionId": "e82690b4-caac-471e-94f9-9b76fa9df131",
          "name": "Category",
          "type": "SINGLE_SELECT",
          "value": {
            "id": "df81d8bb-59d3-45be-a3e3-c1f8d1c0de36",
            "label": "Drama"
          }
        },
        "multi_select_api_name": {
          "definitionId": "e82690b4-caac-471e-94f9-9b76fa9df131",
          "name": "Favorite Foods",
          "type": "MULTI_SELECT",
          "value": {
            "ids": [
              "df81d8bb-59d3-45be-a3e3-c1f8d1c0de36",
              "6fda08b8-f5ca-4be5-8809-71e63bcf47dc"
            ],
            "labels": [
              "Bananas",
              "Apples"
            ]
          }
        },
        "people_dropdown_api_name": {
          "definitionId": "e82690b4-caac-471e-94f9-9b76fa9df131",
          "name": "Favorite Foods",
          "type": "PEOPLE_DROPDOWN",
          "value": {
            "options": {
              "job": {
                "id": "df81d8bb-59d3-45be-a3e3-c1f8d1c0de36",
                "jobName": {
                  "name": "CEO"
                },
                "startDate": "1900-01-01T00:00:00+00:00",
                "exclusiveEndDate": "1900-01-01T00:00:00+00:00",
                "jobStatus": "JOB_STATUS"
              },
              "person": {
                "id": "df81d8bb-59d3-45be-a3e3-c1f8d1c0de36",
                "displayName": "Pol Newman",
                "employeeNumber": "P0001",
                "autoIncrementIntellurhId": "0001"
              }
            }
          }
        },
        "field_not_provided_api_name": {
          "definitionId": "e82690b4-caac-471e-94f9-9b76fa9df131",
          "name": "Optional other text field",
          "type": "TEXT",
          "value": null
        }
      }
    }
  },
  "parameters": {
    "collectionPage": {
      "name": "page",
      "in": "query",
      "description": "The page number",
      "schema": {
        "type": "integer",
        "minimum": 1
      }
    },
    "collectionLimit": {
      "name": "limit",
      "in": "query",
      "description": "The number of items per page",
      "schema": {
        "type": "integer",
        "minimum": 1,
        "maximum": 100
      }
    },
    "resourceId": {
      "name": "id",
      "in": "path",
      "description": "The resource identifier string",
      "required": true,
      "schema": {
        "type": "string"
      }
    }
  },
  "paths": {
    "/business-entities": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/collectionLimit"
          },
          {
            "$ref": "#/parameters/collectionPage"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/business-entities_list"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a list of all [Business Entities](#tag/Business-Entities).",
        "summary": "List all Business Entities",
        "tags": [
          "Business Entities"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "post": {
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/business-entities"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns the created [Business Entity](#tag/Business-Entities).",
        "summary": "Create a new Business Entity",
        "tags": [
          "Business Entities"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/business-entities_create_request"
              },
              "example": {
                "name": "IntelliHR",
                "code": "BE001",
                "legalName": "IntelliHR Systems Limited",
                "number": "00 000 000 000",
                "isEnabled": true,
                "customFields": {
                  "text_field_api_name": {
                    "value": "Some text value"
                  },
                  "numeric_field_api_name": {
                    "value": "50"
                  },
                  "single_select_api_name": {
                    "value": {
                      "label": "Drama"
                    }
                  },
                  "multi_select_api_name": {
                    "value": {
                      "labels": [
                        "Bananas",
                        "Apples"
                      ]
                    }
                  },
                  "people_dropdown_api_name": {
                    "value": [
                      {
                        "person": {
                          "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                          "name": "Bruce Wayne",
                          "primaryEmailAddress": "bruce.wayne@example.com",
                          "employeeNumber": "00001",
                          "autoIncrementIntellihrId": "1000"
                        },
                        "job": {
                          "id": "569904c8-5d36-4c2f-afb0-525eeb8da32d",
                          "name": "Maintenance worker"
                        }
                      },
                      {
                        "person": {
                          "id": "313fde44-f24e-4ec9-9473-0d0f3527222d",
                          "name": "Batman",
                          "primaryEmailAddress": "batman@example.com",
                          "employeeNumber": "00002",
                          "autoIncrementIntellihrId": "1001"
                        },
                        "job": {
                          "id": "653304c8-5d36-4c2f-afb0-525eeb8da32d",
                          "name": "Janitor"
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/business-entities/{id}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/business-entities"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a single [Business Entity](#tag/Business-Entities) by its identifier.",
        "summary": "Find a Business Entity by ID",
        "tags": [
          "Business Entities"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/business-entities"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns the updated [Business Entity](#tag/Business-Entities).",
        "summary": "Update a Business Entity by ID",
        "tags": [
          "Business Entities"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/business-entities_patch_request"
              },
              "example": {
                "name": "IntelliHR",
                "code": "BE001",
                "legalName": "IntelliHR Systems Limited",
                "number": "00 000 000 000",
                "isEnabled": true,
                "customFields": {
                  "text_field_api_name": {
                    "value": "Some text value"
                  },
                  "numeric_field_api_name": {
                    "value": "50"
                  },
                  "single_select_api_name": {
                    "value": {
                      "label": "Drama"
                    }
                  },
                  "multi_select_api_name": {
                    "value": {
                      "labels": [
                        "Bananas",
                        "Apples"
                      ]
                    }
                  },
                  "people_dropdown_api_name": {
                    "value": [
                      {
                        "person": {
                          "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                          "name": "Bruce Wayne",
                          "primaryEmailAddress": "bruce.wayne@example.com",
                          "employeeNumber": "00001",
                          "autoIncrementIntellihrId": "1000"
                        },
                        "job": {
                          "id": "569904c8-5d36-4c2f-afb0-525eeb8da32d",
                          "name": "Maintenance worker"
                        }
                      },
                      {
                        "person": {
                          "id": "313fde44-f24e-4ec9-9473-0d0f3527222d",
                          "name": "Batman",
                          "primaryEmailAddress": "batman@example.com",
                          "employeeNumber": "00002",
                          "autoIncrementIntellihrId": "1001"
                        },
                        "job": {
                          "id": "653304c8-5d36-4c2f-afb0-525eeb8da32d",
                          "name": "Janitor"
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Deletes the [Business Entity](#tag/Business-Entities)'s by the given ID.",
        "summary": "Delete a Business Entity by ID",
        "tags": [
          "Business Entities"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/business-units": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/collectionLimit"
          },
          {
            "$ref": "#/parameters/collectionPage"
          },
          {
            "in": "query",
            "name": "filters",
            "description": "Filters can be applied in the query string to limit the data returned from this endpoint. Filters are provided in the format `filters[<filter_name>][<operation_type>]=<filter_value>`.For example, a filter to get items matching a specific filter value would be `filters[identifier][eq]=Engineering`\n\rBelow is a list of operation types available on filters, note that each filter may not support every type:\n\r• Equality `[eq]`: Checks for an exact match with the given filter value\n\rThe list of supported filters is given below.",
            "schema": {
              "type": "object",
              "properties": {
                "identifier": {
                  "type": "string",
                  "description": "The customer identifier given to a [Business Unit](#tags/Business-Units) in the system. This filter checks for an exact string match with any part of a [Business Units](#tags/Business-Units) identifier. If multiple [Business Units](#tags/Business-Units) match the `<filter_value>`, they will all be returned.\n\rExample filter: `filters[identifier][eq]=Engineering`\n\rThis filter supports the equality `[eq]` operation",
                  "example": "Engineering"
                },
                "name": {
                  "type": "string",
                  "description": "Name of a [Business Unit](#tags/Business-Units) in the system. This filter checks for an exact string match with any part of a [Business Units](#tags/Business-Units) name. If multiple [Business Units](#tags/Business-Units) match the `<filter_value>`, they will all be returned.\n\rExample filter: `filters[name][eq]=Engineering`\n\rThis filter supports the equality `[eq]` operation",
                  "example": "Engineering"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/business-units_list"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a list of all [Business Units](#tag/Business-Units) recorded in the system.",
        "summary": "List all Business Units",
        "tags": [
          "Business Units"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "post": {
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/business-units"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns the created [Business Unit](#tag/Business-Units).",
        "summary": "Create a new Business Unit",
        "tags": [
          "Business Units"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/business-units_create_request"
              },
              "example": {
                "name": "Engineering",
                "code": "BE001",
                "parentId": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "isEnabled": true,
                "customFields": {
                  "text_field_api_name": {
                    "value": "Some text value"
                  },
                  "numeric_field_api_name": {
                    "value": "50"
                  },
                  "single_select_api_name": {
                    "value": {
                      "label": "Drama"
                    }
                  },
                  "multi_select_api_name": {
                    "value": {
                      "labels": [
                        "Bananas",
                        "Apples"
                      ]
                    }
                  },
                  "people_dropdown_api_name": {
                    "value": [
                      {
                        "person": {
                          "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                          "name": "Bruce Wayne",
                          "primaryEmailAddress": "bruce.wayne@example.com",
                          "employeeNumber": "00001",
                          "autoIncrementIntellihrId": "1000"
                        },
                        "job": {
                          "id": "569904c8-5d36-4c2f-afb0-525eeb8da32d",
                          "name": "Maintenance worker"
                        }
                      },
                      {
                        "person": {
                          "id": "313fde44-f24e-4ec9-9473-0d0f3527222d",
                          "name": "Batman",
                          "primaryEmailAddress": "batman@example.com",
                          "employeeNumber": "00002",
                          "autoIncrementIntellihrId": "1001"
                        },
                        "job": {
                          "id": "653304c8-5d36-4c2f-afb0-525eeb8da32d",
                          "name": "Janitor"
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/business-units/{id}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/business-units"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a single [Business Unit](#tag/Business-Units).",
        "summary": "Find a Business Unit by ID",
        "tags": [
          "Business Units"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/business-units"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns the updated [Business Unit](#tag/Business-Units).",
        "summary": "Update a Business Unit by ID",
        "tags": [
          "Business Units"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/business-units_patch_request"
              },
              "example": {
                "name": "Engineering",
                "code": "BE001",
                "parentId": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "isEnabled": true,
                "customFields": {
                  "text_field_api_name": {
                    "value": "Some text value"
                  },
                  "numeric_field_api_name": {
                    "value": "50"
                  },
                  "single_select_api_name": {
                    "value": {
                      "label": "Drama"
                    }
                  },
                  "multi_select_api_name": {
                    "value": {
                      "labels": [
                        "Bananas",
                        "Apples"
                      ]
                    }
                  },
                  "people_dropdown_api_name": {
                    "value": [
                      {
                        "person": {
                          "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                          "name": "Bruce Wayne",
                          "primaryEmailAddress": "bruce.wayne@example.com",
                          "employeeNumber": "00001",
                          "autoIncrementIntellihrId": "1000"
                        },
                        "job": {
                          "id": "569904c8-5d36-4c2f-afb0-525eeb8da32d",
                          "name": "Maintenance worker"
                        }
                      },
                      {
                        "person": {
                          "id": "313fde44-f24e-4ec9-9473-0d0f3527222d",
                          "name": "Batman",
                          "primaryEmailAddress": "batman@example.com",
                          "employeeNumber": "00002",
                          "autoIncrementIntellihrId": "1001"
                        },
                        "job": {
                          "id": "653304c8-5d36-4c2f-afb0-525eeb8da32d",
                          "name": "Janitor"
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Deletes the [Business Unit](#tag/Business-Units)'s by the given ID.",
        "summary": "Delete a Business Unit by ID",
        "tags": [
          "Business Units"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/custom-field-definitions": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/collectionLimit"
          },
          {
            "$ref": "#/parameters/collectionPage"
          },
          {
            "in": "query",
            "name": "filters",
            "description": "Filters can be applied in the query string to limit the data returned from this endpoint. Filters are provided in the format `filters[<filter_name>][<operation_type>]=<filter_value>`.For example, a filter to get items matching a specific filter value would be `filters[modelType][eq]=TRAINING`\n\rBelow is a list of operation types available on filters, note that each filter may not support every type:\n\r• Equality `[eq]`: Checks for an exact match with the given filter value\n\rThe list of supported filters is given below.",
            "schema": {
              "type": "object",
              "properties": {
                "modelType": {
                  "description": "The model that this custom field relates to and can be attached to. Enum: `ADDRESS`, `BUSINESS_ENTITY`, `BUSINESS_UNIT`, `EMAIL_ADDRESS`, `JOB`, `LOCATION`, `PERSON`, `POSITION_TITLE`, `PHONE_NUMBER`, `REMUNERATION`, `TRAINING`.\n\rExample filter: `filters[modelType][eq]=TRAINING`\n\rThis filter supports the equality `[eq]` operation",
                  "type": "string",
                  "example": "TRAINING"
                },
                "isEnabled": {
                  "description": "If the custom field is disabled in the intelliHR platform or not\n\rExample filter: `filters[isEnabled][eq]=true`\n\rThis filter supports the equality `[eq]` operation",
                  "type": "boolean",
                  "example": "true"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/custom-field-definitions_list"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a list of all Custom Field Definitions.",
        "summary": "List all Custom Field Definitions",
        "tags": [
          "Custom Field Definitions"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "post": {
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/custom-field-definitions"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns the created [Custom Field Definition](#tag/Custom-Field-Definitions)",
        "summary": "Create a Custom Field Definition",
        "tags": [
          "Custom Field Definitions"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/custom-field-definition_create_request"
              }
            }
          }
        }
      }
    },
    "/custom-field-definitions/{id}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/custom-field-definitions"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a single Custom Field Definition.",
        "summary": "Find a Custom Field Definition by ID",
        "tags": [
          "Custom Field Definitions"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/custom-field-definitions"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns the updated [Custom Field Definition](#tag/Custom-Field-Definitions)",
        "summary": "Update a Custom Field Definition",
        "tags": [
          "Custom Field Definitions"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/custom-field-definition_patch_request"
              }
            }
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Deletes the [Custom Field Definition](#tag/Custom-Field-Definitions) by the given ID.",
        "summary": "Delete a Custom Field Definition by ID",
        "tags": [
          "Custom Field Definitions"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/default-remuneration-components": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/collectionLimit"
          },
          {
            "$ref": "#/parameters/collectionPage"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/default-remuneration-components_list"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a list of all [Default Remuneration Components](#tag/Default-Remuneration-Components) recorded in the system.",
        "summary": "List all Default Remuneration Components",
        "tags": [
          "Default Remuneration Components"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/default-remuneration-components/{id}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/default-remuneration-components"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a single default remuneration component.",
        "summary": "Find a Default Remuneration Component by ID",
        "tags": [
          "Default Remuneration Components"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/employment-conditions": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/collectionLimit"
          },
          {
            "$ref": "#/parameters/collectionPage"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/employment-conditions_list"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a list of all employment conditions.",
        "summary": "List all employment conditions",
        "tags": [
          "Employment Conditions"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/employment-conditions/{id}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/employment-conditions"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a single employment condition.",
        "summary": "Find an Employment Condition by ID",
        "tags": [
          "Employment Conditions"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/extended-leave": {
      "post": {
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/leave_create_response"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Create a new Extended Leave on an existing Job.",
        "summary": "Create Extended Leave",
        "tags": [
          "Extended Leave"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/leave_create_request"
              }
            }
          }
        }
      }
    },
    "/extended-leave/{id}": {
      "patch": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/leave_update_response"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Update or Finalise an existing Extended Leave.",
        "summary": "Update or Finalise Extended Leave",
        "tags": [
          "Extended Leave"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/leave_update_request"
              }
            }
          }
        }
      }
    },
    "/extended-leave-types": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/collectionLimit"
          },
          {
            "$ref": "#/parameters/collectionPage"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/extended-leave-types_list"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a list of all Extended Leave Types.",
        "summary": "List all Extended Leave Types",
        "tags": [
          "Extended Leave Types"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/extended-leave-types/{id}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/extended-leave-types"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a single Extended Leave Type.",
        "summary": "Find an Extended Leave Type by ID",
        "tags": [
          "Extended Leave Types"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/forms/{id}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/forms"
                },
                "example": {
                  "data": {
                    "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "issueDate": "2015-03-01T22:30:00+00:00",
                    "dueDate": "2015-03-01T22:30:00+00:00",
                    "reminderDate": "2015-03-01T22:30:00+00:00",
                    "accessCode": "ABCDE12345",
                    "completedAt": "2015-03-01T22:30:00+00:00",
                    "formDesign": {
                      "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "name": "Self Assessment"
                    },
                    "subject": {
                      "job": {
                        "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "name": "Janitor",
                        "link": "https://api.intellihr.io/v1/jobs/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                      },
                      "person": {
                        "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "displayName": "Batman (Bruce) Wayne",
                        "employeeNumber": "00001",
                        "autoIncrementIntellihrId": 1000,
                        "link": "https://api.intellihr.io/v1/people/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                      }
                    },
                    "respondent": null,
                    "submitter": {
                      "job": {
                        "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "name": "Janitor",
                        "link": "https://api.intellihr.io/v1/jobs/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                      },
                      "person": {
                        "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "displayName": "Batman (Bruce) Wayne",
                        "emailAddresses": [
                          {
                            "email": "bruce.wayne@batman.org",
                            "isPrimary": true,
                            "isPersonal": true
                          }
                        ],
                        "employeeNumber": "00001",
                        "autoIncrementIntellihrId": 1000,
                        "link": "https://api.intellihr.io/v1/people/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                      }
                    },
                    "answers": [
                      {
                        "fieldId": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "question": "Please answer this text based question",
                        "value": [
                          "My answer"
                        ],
                        "label": [
                          "My answer"
                        ]
                      },
                      {
                        "fieldId": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "question": "Please select multiple options",
                        "value": [
                          "0",
                          "1"
                        ],
                        "label": [
                          "Option 1",
                          "Option 2"
                        ]
                      }
                    ],
                    "documentUploads": [
                      {
                        "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "url": "http://{tenant}.internihr.ninja/api/domain/people/6ced7aed-adeb-4645-896a-5eaa21f4bf6e/attachments/0f1d4fb7-ef1b-4ca5-908f-1c73f489be04/download"
                      }
                    ]
                  },
                  "meta": {
                    "asAt": "2015-03-01T22:30:00+00:00",
                    "requestId": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a single [Form](#tag/Forms) instance by its identifier.",
        "summary": "Find a Form by ID",
        "tags": [
          "Forms"
        ],
        "security": []
      }
    },
    "/job-change-reasons": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/collectionLimit"
          },
          {
            "$ref": "#/parameters/collectionPage"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/job-change-reasons_list"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a list of all [Job Change Reasons](#tag/Job-Change-Reasons) recorded in the system.",
        "summary": "List all Job Change Reasons",
        "tags": [
          "Job Change Reasons"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "post": {
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/job-change-reasons"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns the created [Job Change Reason](#tag/Job-Change-Reasons).",
        "summary": "Create a new Job Change Reason",
        "tags": [
          "Job Change Reasons"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/job-change-reasons_create_request"
              },
              "example": {
                "name": "Engineering",
                "isEnabled": true
              }
            }
          }
        }
      }
    },
    "/job-change-reasons/{id}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/job-change-reasons"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a single [Job Change Reason](#tag/Job-Change-Reasons).",
        "summary": "Find a Job Change Reason by ID",
        "tags": [
          "Job Change Reasons"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/job-change-reasons"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns the updated [Job Change Reason](#tag/Job-Change-Reasons).",
        "summary": "Update a Job Change Reason by ID",
        "tags": [
          "Job Change Reasons"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/job-change-reasons_patch_request"
              },
              "example": {
                "name": "Engineering",
                "isEnabled": true
              }
            }
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Deletes the [Job Change Reason](#tag/Job-Change-Reasons)'s by the given ID.",
        "summary": "Delete a Job Change Reason by ID",
        "tags": [
          "Job Change Reasons"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/job-requirement-groups": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/collectionLimit"
          },
          {
            "$ref": "#/parameters/collectionPage"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/job-requirement-groups_list"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "",
        "summary": "List all Job Requirement Groups",
        "tags": [
          "Job Requirement Groups"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "post": {
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/job-requirement-groups"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Create a new [Job Requirement Group](#tag/Job-Requirement-Groups) record with the provided data.",
        "summary": "Create a new Job Requirement Group",
        "tags": [
          "Job Requirement Groups"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/job-requirement-groups_create_request"
              },
              "example": {
                "name": "ABCDE12345",
                "libraryItemIds": [
                  "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                ]
              }
            }
          }
        }
      }
    },
    "/job-requirement-groups/{id}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/job-requirement-groups"
                },
                "example": {
                  "data": {
                    "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "name": "ABCDE12345",
                    "libraryItems": [
                      {
                        "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                        "link": "https://api.intellihr.io/v1/qualification-library-items/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                      }
                    ]
                  },
                  "meta": {
                    "asAt": "2015-03-01T22:30:00+00:00",
                    "requestId": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a single [Job Requirement Group](#tag/Job-Requirement-Groups) by its identifier.",
        "summary": "Find a Job Requirement Group by ID",
        "tags": [
          "Job Requirement Groups"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/job-requirement-groups"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Patch attributes of an existing [Job Requirement Group](#tag/Job-Requirement-Groups) record with the provided data.",
        "summary": "Patch an existing Job Requirement Group",
        "tags": [
          "Job Requirement Groups"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/job-requirement-groups_patch_request"
              },
              "example": {
                "name": "ABCDE12345",
                "libraryItemIds": [
                  "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                ]
              }
            }
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Deletes the [Job Requirement Group](#tag/Job-Requirement-Groups) by the given ID.",
        "summary": "Delete a Job Requirement Group by ID",
        "tags": [
          "Job Requirement Groups"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/job-end/{id}": {
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          },
          {
            "type": "string",
            "description": "If true, do not finalise the job.",
            "in": "query",
            "name": "shouldNotFinaliseEndDate",
            "example": "true",
            "default": "false"
          },
          {
            "type": "string",
            "description": "If true, keeps the user account when finalising the job.",
            "in": "query",
            "name": "shouldRetainUserAccount",
            "example": "true",
            "default": "false"
          },
          {
            "type": "string",
            "description": "When true, no events will be fired from this action",
            "in": "query",
            "name": "suppressEvents",
            "example": "true",
            "default": "false"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/job_end_patch_response"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Set an end date, and finalise a job.",
        "summary": "End a job",
        "tags": [
          "End Job"
        ],
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/job_end_patch_request"
              },
              "example": {
                "endDate": "2015-03-01T22:30:00+00:00",
                "reassignDirectReportsTo": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "turnoverType": "involuntary",
                "turnoverReason": "Medical reasons"
              }
            }
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          },
          {
            "type": "string",
            "description": "Whether to cancel the disabling of the users account upon the job end date, if user doesn't exist the Boolean has no effect yet the request will still succeed.",
            "in": "query",
            "name": "cancelDisablingUserAccount",
            "example": "true",
            "default": "true"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/job_end_remove_response"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "If a job end date has been finalised, this will cancel the finalisation",
        "summary": "Cancel job end date",
        "tags": [
          "End Job"
        ],
        "security": []
      }
    },
    "/jobs": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/collectionLimit"
          },
          {
            "$ref": "#/parameters/collectionPage"
          },
          {
            "in": "query",
            "name": "filters",
            "description": "Filters can be applied in the query string to limit the data returned from this endpoint. Filters are provided in the format `filters[<filter_name>][<operation_type>]=<filter_value>`.For example, a filter to get items matching a specific filter value would be `filters[personId][eq]=dc996d73-a75e-499c-a96e-bd7d0df45f57,26d0ffc4-60f6-4672-a603-caaa4564af12`\n\rBelow is a list of operation types available on filters, note that each filter may not support every type:\n\r• Equality `[eq]`: Checks for an exact match with the given filter value\n\rThe list of supported filters is given below.",
            "schema": {
              "type": "object",
              "properties": {
                "personId": {
                  "title": "UUIDv4",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "dc996d73-a75e-499c-a96e-bd7d0df45f57,26d0ffc4-60f6-4672-a603-caaa4564af12",
                  "description": "The identifier string for the [Person](#tags/People). This can be chained by `,` to search for multiple jobs\n\rExample filter: `filters[personId][eq]=dc996d73-a75e-499c-a96e-bd7d0df45f57,26d0ffc4-60f6-4672-a603-caaa4564af12`\n\rThis filter supports the equality `[eq]` operation",
                  "type": "string"
                },
                "personName": {
                  "description": "The name for the [Person](#tags/People) to whom the [Job](#tags/Jobs) belongs.\n\rExample filter: `filters[personName][eq]=Batman`\n\rThis filter supports the equality `[eq]` operation",
                  "example": "Batman",
                  "type": "string"
                },
                "primaryEmail": {
                  "description": "The email address flagged as primary for the [Person](#tags/People) to whom the [Job](#tags/Jobs) belongs.\n\rExample filter: `filters[primaryEmail][eq]=bruce.wayne@example.com`\n\rThis filter supports the equality `[eq]` operation",
                  "example": "bruce.wayne@example.com",
                  "type": "string"
                },
                "employeeNumber": {
                  "description": "The employee number for the [Person](#tags/People) to whom the [Job](#tags/Jobs) belongs.\n\rExample filter: `filters[employeeNumber][eq]=00001`\n\rThis filter supports the equality `[eq]` operation",
                  "example": "00001",
                  "type": "string"
                },
                "autoIncrementIntellihrId": {
                  "description": "The autogenerated number that uniquely identifies [Person](#tags/People) in intelliHR to whom the [Job](#tags/Jobs) belongs.\n\rExample filter: `filters[autoIncrementIntellihrId][eq]=1000`\n\rThis filter supports the equality `[eq]` operation",
                  "example": "1000",
                  "type": "number"
                },
                "jobId": {
                  "description": "The identifier string for the [Job](#tag/Jobs). This can be chained by `,` to search for multiple jobs\n\rExample filter: `filters[jobId][eq]=dc996d73-a75e-499c-a96e-bd7d0df45f57,26d0ffc4-60f6-4672-a603-caaa4564af12`\n\rThis filter supports the equality `[eq]` operation",
                  "example": "dc996d73-a75e-499c-a96e-bd7d0df45f57,26d0ffc4-60f6-4672-a603-caaa4564af12",
                  "type": "string"
                },
                "jobName": {
                  "description": "The name/position title for the [Job](#tag/Jobs).\n\rExample filter: `filters[jobName][eq]=Food%20Scientist`\n\rThis filter supports the equality `[eq]` operation",
                  "example": "Food%20Scientist",
                  "type": "string"
                },
                "jobNameAsAt": {
                  "description": "The date to filter jobName. This filter should be used in conjunction with jobName filter above. If not provided, it defaults to today.\n\rExample filter: `filters[jobNameAsAt][eq]=2020-10-08T22%3A30%3A00%2B00%3A00`\n\rThis filter supports the equality `[eq]` operation",
                  "example": "2020-10-08T22%3A30%3A00%2B00%3A00",
                  "type": "string"
                },
                "jobStatus": {
                  "description": "The current status of this [Job](#tags/jobs) within this organisation. Enum: `Past Job`, `Future Job`, `Ending Job`, `Current Job`.\n\rExample filter: `filters[jobStatus][eq]=Current%20Job`\n\rThis filter supports the equality `[eq]` operation",
                  "example": "Current%20Job",
                  "type": "string"
                },
                "jobEndingWithin": {
                  "description": "The amount of days including today to filter jobs with an upcoming end date.\n\rExample filter: `filters[jobEndingWithin][eq]=14`\n\rThis filter supports the equality `[eq]` operation",
                  "example": "14",
                  "type": "string"
                },
                "jobEndedWithin": {
                  "description": "The amount of days including today to filter jobs that have already ended.\n\rExample filter: `filters[jobEndedWithin][eq]=14`\n\rThis filter supports the equality `[eq]` operation",
                  "example": "14",
                  "type": "string"
                },
                "updatedWithin": {
                  "description": "The amount of days including today to filter updated jobs.\n\rExample filter: `filters[updatedWithin][eq]=14`\n\rThis filter supports the equality `[eq]` operation",
                  "example": "14",
                  "type": "string"
                },
                "workType": {
                  "description": "The name of the current [Work Type](#tag/Work-Types) for the job.\n\rExample filter: `filters[workType][eq]=Fixed%20Contract`\n\rThis filter supports the equality `[eq]` operation",
                  "example": "Fixed%20Contract",
                  "type": "string"
                },
                "isPrimaryJob": {
                  "description": "Whether this job is the primary job on the [Person](#tag/People). Parse 'true' to filter primary job. Parse 'false' for non-primary job\n\rExample filter: `filters[isPrimaryJob][eq]=true`\n\rThis filter supports the equality `[eq]` operation",
                  "example": "true",
                  "type": "string"
                },
                "employmentConditionId": {
                  "title": "UUIDv4",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "description": "The identifier string for the current [Employment Condition](#tag/Employment-Conditions) of the job.\n\rExample filter: `filters[employmentConditionId][eq]=8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9`\n\rThis filter supports the equality `[eq]` operation",
                  "type": "string"
                }
              }
            }
          },
          {
            "in": "query",
            "name": "sort",
            "description": "Sorting can be applied in the query string to order the data returned from this endpoint. Sort can be prepended with a minus to return the data in descending (-) order. For example, a sort to get the most recent records first would be `-createdAt`.",
            "schema": {
              "type": "string",
              "description": "Enum: `createdAt`."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/jobs_list"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a list of all [Job](#tag/Jobs) entity records as at the current date.",
        "summary": "List all Jobs",
        "tags": [
          "Jobs"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "post": {
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/job_create_response"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Create a new Job record with the provided data.",
        "summary": "Create a new Job",
        "tags": [
          "Jobs"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/job_create_request"
              },
              "example": {
                "person": {
                  "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "name": "Bruce Wayne",
                  "primaryEmailAddress": "bruce.wayne@example.com",
                  "employeeNumber": "00001",
                  "autoIncrementIntellihrId": "1000"
                },
                "companyStartDate": "2015-03-01T22:30:00+00:00",
                "companyEndDate": "2015-03-01T22:30:00+00:00",
                "name": "Food Scientist",
                "businessEntity": {
                  "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "name": "IntelliHR",
                  "legalName": "IntelliHR Systems Limited",
                  "number": "00 000 000 000"
                },
                "businessUnit": {
                  "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "name": "Engineering"
                },
                "establishment": {
                  "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "name": "NewCo Software Engineer"
                },
                "supervisorPerson": {
                  "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "name": "Bruce Wayne",
                  "primaryEmailAddress": "bruce.wayne@example.com",
                  "employeeNumber": "00001",
                  "autoIncrementIntellihrId": "1000"
                },
                "supervisorJob": {
                  "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "name": "Janitor"
                },
                "location": {
                  "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "name": "Brisbane Office",
                  "address": "1234 Queen Street, Brisbane City QLD 4000"
                },
                "workClass": {
                  "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "name": "Casual"
                },
                "workType": {
                  "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "name": "Permanent"
                },
                "fte": "1",
                "payGrade": {
                  "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "code": "L0",
                  "name": "Founder"
                },
                "employmentCondition": {
                  "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "name": "Professional Employees Award 2010",
                  "awardName": "MA000065: Professional Employees Award 2010 - Fair Work Commission"
                },
                "remunerationSchedule": {
                  "type": "Annual Salary",
                  "payCycle": "Fortnightly",
                  "currency": "AUD",
                  "hoursPerCycle": 80,
                  "baseAnnualSalary": 50000,
                  "baseHourlyRate": 24,
                  "additions": [
                    {
                      "name": "Referral Bonus",
                      "type": "FixedAmount",
                      "value": "200",
                      "defaultRemunerationComponent": {
                        "name": "Referral Bonus"
                      }
                    }
                  ],
                  "additionsToTotal": [
                    {
                      "name": "Superannuation",
                      "type": "MultipleOfBase",
                      "value": "9.5",
                      "defaultRemunerationComponent": {
                        "name": "Superannuation"
                      }
                    }
                  ],
                  "customFields": {
                    "text_field_api_name": {
                      "value": "Some text value"
                    },
                    "numeric_field_api_name": {
                      "value": "50"
                    },
                    "single_select_api_name": {
                      "value": {
                        "label": "Drama"
                      }
                    },
                    "multi_select_api_name": {
                      "value": {
                        "labels": [
                          "Bananas",
                          "Apples"
                        ]
                      }
                    },
                    "people_dropdown_api_name": {
                      "value": [
                        {
                          "person": {
                            "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "name": "Bruce Wayne",
                            "primaryEmailAddress": "bruce.wayne@example.com",
                            "employeeNumber": "00001",
                            "autoIncrementIntellihrId": "1000"
                          },
                          "job": {
                            "id": "569904c8-5d36-4c2f-afb0-525eeb8da32d",
                            "name": "Maintenance worker"
                          }
                        },
                        {
                          "person": {
                            "id": "313fde44-f24e-4ec9-9473-0d0f3527222d",
                            "name": "Batman",
                            "primaryEmailAddress": "batman@example.com",
                            "employeeNumber": "00002",
                            "autoIncrementIntellihrId": "1001"
                          },
                          "job": {
                            "id": "653304c8-5d36-4c2f-afb0-525eeb8da32d",
                            "name": "Janitor"
                          }
                        }
                      ]
                    }
                  }
                },
                "recruitment": {
                  "source": {
                    "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "name": "Direct"
                  },
                  "cost": 5000,
                  "currency": "AUD"
                },
                "customFields": {
                  "text_field_api_name": {
                    "value": "Some text value"
                  },
                  "numeric_field_api_name": {
                    "value": "50"
                  },
                  "single_select_api_name": {
                    "value": {
                      "label": "Drama"
                    }
                  },
                  "multi_select_api_name": {
                    "value": {
                      "labels": [
                        "Bananas",
                        "Apples"
                      ]
                    }
                  },
                  "people_dropdown_api_name": {
                    "value": [
                      {
                        "person": {
                          "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                          "name": "Bruce Wayne",
                          "primaryEmailAddress": "bruce.wayne@example.com",
                          "employeeNumber": "00001",
                          "autoIncrementIntellihrId": "1000"
                        },
                        "job": {
                          "id": "569904c8-5d36-4c2f-afb0-525eeb8da32d",
                          "name": "Maintenance worker"
                        }
                      },
                      {
                        "person": {
                          "id": "313fde44-f24e-4ec9-9473-0d0f3527222d",
                          "name": "Batman",
                          "primaryEmailAddress": "batman@example.com",
                          "employeeNumber": "00002",
                          "autoIncrementIntellihrId": "1001"
                        },
                        "job": {
                          "id": "653304c8-5d36-4c2f-afb0-525eeb8da32d",
                          "name": "Janitor"
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/jobs/{id}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          },
          {
            "name": "asAt",
            "in": "query",
            "title": "asAt configuration",
            "example": "2015-03-01T22:30:00+00:00",
            "description": "Used to configure what date to return this job data for, as a [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6) datetime. \n\nAll data returned from the job endpoints represent the values of the Person's job attributes at a specific point in time. \n\nBy default, the current datetime is used, but this parameter can be used to configure a different datetime to see historical data.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/jobs"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Get a single Job record by UUIDv4 identifier.",
        "summary": "Find a Job by ID",
        "tags": [
          "Jobs"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/job_patch_response"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Patch attributes of an existing Job record with the provided data.",
        "summary": "Patch an existing Job",
        "tags": [
          "Jobs"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/job_patch_request"
              },
              "example": {
                "effectiveFrom": "2015-03-01T22:30:00+00:00",
                "effectiveTo": "2015-03-01T22:30:00+00:00",
                "name": "Food Scientist",
                "businessEntity": {
                  "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "name": "IntelliHR",
                  "legalName": "IntelliHR Systems Limited",
                  "number": "00 000 000 000"
                },
                "businessUnit": {
                  "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "name": "Engineering"
                },
                "establishment": {
                  "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "name": "NewCo Software Engineer"
                },
                "jobChangeReason": {
                  "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                },
                "supervisorPerson": {
                  "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "name": "Bruce Wayne",
                  "primaryEmailAddress": "bruce.wayne@example.com",
                  "employeeNumber": "00001",
                  "autoIncrementIntellihrId": "1000"
                },
                "supervisorJob": {
                  "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "name": "Janitor"
                },
                "location": {
                  "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "name": "Brisbane Office",
                  "address": "1234 Queen Street, Brisbane City QLD 4000"
                },
                "workClass": {
                  "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "name": "Casual"
                },
                "workType": {
                  "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "name": "Permanent"
                },
                "fte": "1",
                "payGrade": {
                  "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "code": "L0",
                  "name": "Founder"
                },
                "employmentCondition": {
                  "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "name": "Professional Employees Award 2010",
                  "awardName": "MA000065: Professional Employees Award 2010 - Fair Work Commission"
                },
                "remunerationSchedule": {
                  "type": "Annual Salary",
                  "payCycle": "Fortnightly",
                  "currency": "AUD",
                  "hoursPerCycle": 80,
                  "baseAnnualSalary": 50000,
                  "baseHourlyRate": 24,
                  "additions": [
                    {
                      "name": "Referral Bonus",
                      "type": "FixedAmount",
                      "value": "200",
                      "defaultRemunerationComponent": {
                        "name": "Referral Bonus"
                      }
                    }
                  ],
                  "additionsToTotal": [
                    {
                      "name": "Superannuation",
                      "type": "MultipleOfBase",
                      "value": "9.5",
                      "defaultRemunerationComponent": {
                        "name": "Superannuation"
                      }
                    }
                  ],
                  "customFields": {
                    "text_field_api_name": {
                      "value": "Some text value"
                    },
                    "numeric_field_api_name": {
                      "value": "50"
                    },
                    "single_select_api_name": {
                      "value": {
                        "label": "Drama"
                      }
                    },
                    "multi_select_api_name": {
                      "value": {
                        "labels": [
                          "Bananas",
                          "Apples"
                        ]
                      }
                    },
                    "people_dropdown_api_name": {
                      "value": [
                        {
                          "person": {
                            "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                            "name": "Bruce Wayne",
                            "primaryEmailAddress": "bruce.wayne@example.com",
                            "employeeNumber": "00001",
                            "autoIncrementIntellihrId": "1000"
                          },
                          "job": {
                            "id": "569904c8-5d36-4c2f-afb0-525eeb8da32d",
                            "name": "Maintenance worker"
                          }
                        },
                        {
                          "person": {
                            "id": "313fde44-f24e-4ec9-9473-0d0f3527222d",
                            "name": "Batman",
                            "primaryEmailAddress": "batman@example.com",
                            "employeeNumber": "00002",
                            "autoIncrementIntellihrId": "1001"
                          },
                          "job": {
                            "id": "653304c8-5d36-4c2f-afb0-525eeb8da32d",
                            "name": "Janitor"
                          }
                        }
                      ]
                    }
                  }
                },
                "customFields": {
                  "text_field_api_name": {
                    "value": "Some text value"
                  },
                  "numeric_field_api_name": {
                    "value": "50"
                  },
                  "single_select_api_name": {
                    "value": {
                      "label": "Drama"
                    }
                  },
                  "multi_select_api_name": {
                    "value": {
                      "labels": [
                        "Bananas",
                        "Apples"
                      ]
                    }
                  },
                  "people_dropdown_api_name": {
                    "value": [
                      {
                        "person": {
                          "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                          "name": "Bruce Wayne",
                          "primaryEmailAddress": "bruce.wayne@example.com",
                          "employeeNumber": "00001",
                          "autoIncrementIntellihrId": "1000"
                        },
                        "job": {
                          "id": "569904c8-5d36-4c2f-afb0-525eeb8da32d",
                          "name": "Maintenance worker"
                        }
                      },
                      {
                        "person": {
                          "id": "313fde44-f24e-4ec9-9473-0d0f3527222d",
                          "name": "Batman",
                          "primaryEmailAddress": "batman@example.com",
                          "employeeNumber": "00002",
                          "autoIncrementIntellihrId": "1001"
                        },
                        "job": {
                          "id": "653304c8-5d36-4c2f-afb0-525eeb8da32d",
                          "name": "Janitor"
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/jobs/{jobId}/timeline": {
      "get": {
        "parameters": [
          {
            "name": "jobId",
            "description": "Id string param for relevant [Job](#tag/Jobs)",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/:jobId_timeline_get_response"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns the upcoming changes and current information about a [Job](#tag/Jobs).",
        "summary": "Get Job Timeline",
        "tags": [
          "Job Timeline"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/locations": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/collectionLimit"
          },
          {
            "$ref": "#/parameters/collectionPage"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/locations_list"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a list of all locations.",
        "summary": "List all locations",
        "tags": [
          "Locations"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "post": {
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/locations"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns the created [Location](#tag/Locations).",
        "summary": "Create a new Location",
        "tags": [
          "Locations"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/locations_create_request"
              },
              "example": {
                "parentId": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "name": "Brisbane Office",
                "code": "BE001",
                "address": "1234 Queen Street, Brisbane City QLD 4000",
                "isEnabled": true,
                "customFields": {
                  "text_field_api_name": {
                    "value": "Some text value"
                  },
                  "numeric_field_api_name": {
                    "value": "50"
                  },
                  "single_select_api_name": {
                    "value": {
                      "label": "Drama"
                    }
                  },
                  "multi_select_api_name": {
                    "value": {
                      "labels": [
                        "Bananas",
                        "Apples"
                      ]
                    }
                  },
                  "people_dropdown_api_name": {
                    "value": [
                      {
                        "person": {
                          "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                          "name": "Bruce Wayne",
                          "primaryEmailAddress": "bruce.wayne@example.com",
                          "employeeNumber": "00001",
                          "autoIncrementIntellihrId": "1000"
                        },
                        "job": {
                          "id": "569904c8-5d36-4c2f-afb0-525eeb8da32d",
                          "name": "Maintenance worker"
                        }
                      },
                      {
                        "person": {
                          "id": "313fde44-f24e-4ec9-9473-0d0f3527222d",
                          "name": "Batman",
                          "primaryEmailAddress": "batman@example.com",
                          "employeeNumber": "00002",
                          "autoIncrementIntellihrId": "1001"
                        },
                        "job": {
                          "id": "653304c8-5d36-4c2f-afb0-525eeb8da32d",
                          "name": "Janitor"
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "/locations/{id}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/locations"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a single location.",
        "summary": "Find a Location by ID",
        "tags": [
          "Locations"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/locations"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns the updated [Location](#tag/Locations).",
        "summary": "Update a Location by ID",
        "tags": [
          "Locations"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/locations_patch_request"
              },
              "example": {
                "parentId": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "name": "Brisbane Office",
                "code": "BE001",
                "address": "1234 Queen Street, Brisbane City QLD 4000",
                "isEnabled": true,
                "customFields": {
                  "text_field_api_name": {
                    "value": "Some text value"
                  },
                  "numeric_field_api_name": {
                    "value": "50"
                  },
                  "single_select_api_name": {
                    "value": {
                      "label": "Drama"
                    }
                  },
                  "multi_select_api_name": {
                    "value": {
                      "labels": [
                        "Bananas",
                        "Apples"
                      ]
                    }
                  },
                  "people_dropdown_api_name": {
                    "value": [
                      {
                        "person": {
                          "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                          "name": "Bruce Wayne",
                          "primaryEmailAddress": "bruce.wayne@example.com",
                          "employeeNumber": "00001",
                          "autoIncrementIntellihrId": "1000"
                        },
                        "job": {
                          "id": "569904c8-5d36-4c2f-afb0-525eeb8da32d",
                          "name": "Maintenance worker"
                        }
                      },
                      {
                        "person": {
                          "id": "313fde44-f24e-4ec9-9473-0d0f3527222d",
                          "name": "Batman",
                          "primaryEmailAddress": "batman@example.com",
                          "employeeNumber": "00002",
                          "autoIncrementIntellihrId": "1001"
                        },
                        "job": {
                          "id": "653304c8-5d36-4c2f-afb0-525eeb8da32d",
                          "name": "Janitor"
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Deletes the [Location](#tag/Locations)'s by the given ID.",
        "summary": "Delete a Location by ID",
        "tags": [
          "Locations"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/pay-grades": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/collectionLimit"
          },
          {
            "$ref": "#/parameters/collectionPage"
          },
          {
            "name": "asAt",
            "in": "query",
            "title": "asAt configuration",
            "example": "2015-03-01T22:30:00+00:00",
            "description": "Used to configure what date to return this data, as a [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6) datetime. \n\nAll data returned from the endpoints represent the values of the attributes at a specific point in time. \n\nBy default, the current datetime is used, but this parameter can be used to configure a different datetime to see historical data.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pay-grades_list"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a list of all pay grades.",
        "summary": "List all pay grades",
        "tags": [
          "Pay Grades"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "post": {
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pay-grades"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Create a new Pay Grade record with the provided data.",
        "summary": "Create a new Pay Grade",
        "tags": [
          "Pay Grades"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/pay_grade_create_request"
              },
              "example": {
                "name": "Founder",
                "code": "L0",
                "description": "The founder pay grade",
                "employmentCondition": {
                  "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "name": "Professional Employees Award 2010",
                  "awardName": "MA000065: Professional Employees Award 2010 - Fair Work Commission"
                },
                "payGradeType": "FIXED",
                "isOverridable": true,
                "permanentHourlyRate": 25.5,
                "permanentHourlyRateCurrency": "AUD",
                "casualHourlyRate": 25.5,
                "casualHourlyRateCurrency": "AUD",
                "annualSalary": 25.5,
                "annualSalaryCurrency": "AUD",
                "paySteps": [
                  {
                    "name": "Level 1",
                    "permanentHourlyRate": 25.5,
                    "permanentHourlyRateCurrency": "AUD",
                    "casualHourlyRate": 25.5,
                    "casualHourlyRateCurrency": "AUD",
                    "annualSalary": 25.5,
                    "annualSalaryCurrency": "AUD"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/pay-grades/{id}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          },
          {
            "name": "asAt",
            "in": "query",
            "title": "asAt configuration",
            "example": "2015-03-01T22:30:00+00:00",
            "description": "Used to configure what date to return this data, as a [RFC3339](https://tools.ietf.org/html/rfc3339#section-5.6) datetime. \n\nAll data returned from the endpoints represent the values of the attributes at a specific point in time. \n\nBy default, the current datetime is used, but this parameter can be used to configure a different datetime to see historical data.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pay-grades"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a single pay grade.",
        "summary": "Find a Pay Grade by ID",
        "tags": [
          "Pay Grades"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/pay-grades"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Patch attributes of an existing Pay Grade record with the provided data.",
        "summary": "Patch an existing Pay Grade",
        "tags": [
          "Pay Grades"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/pay_grade_update_request"
              },
              "example": {
                "effectiveFrom": "2015-03-01T22:30:00+00:00",
                "effectiveTo": "2015-03-01T22:30:00+00:00",
                "isEnabled": true,
                "name": "Founder",
                "code": "L0",
                "description": "The founder pay grade",
                "employmentCondition": {
                  "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "name": "Professional Employees Award 2010",
                  "awardName": "MA000065: Professional Employees Award 2010 - Fair Work Commission"
                },
                "payGradeType": "FIXED",
                "isOverridable": true,
                "permanentHourlyRate": 25.5,
                "permanentHourlyRateCurrency": "AUD",
                "casualHourlyRate": 25.5,
                "casualHourlyRateCurrency": "AUD",
                "annualSalary": 25.5,
                "annualSalaryCurrency": "AUD",
                "paySteps": [
                  {
                    "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "name": "Level 1",
                    "permanentHourlyRate": 25.5,
                    "permanentHourlyRateCurrency": "AUD",
                    "casualHourlyRate": 25.5,
                    "casualHourlyRateCurrency": "AUD",
                    "annualSalary": 25.5,
                    "annualSalaryCurrency": "AUD"
                  }
                ]
              }
            }
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Deletes the [Pay Grade](#tags/Pay-Grades) by the given ID.",
        "summary": "Delete a Pay Grade by ID",
        "tags": [
          "Pay Grades"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/people": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/collectionLimit"
          },
          {
            "$ref": "#/parameters/collectionPage"
          },
          {
            "in": "query",
            "name": "filters",
            "description": "Filters can be applied in the query string to limit the data returned from this endpoint. Filters are provided in the format `filters[<filter_name>][<operation_type>]=<filter_value>`.For example, a filter to get items matching a specific filter value would be `filters[jobId][eq]=dc996d73-a75e-499c-a96e-bd7d0df45f57,26d0ffc4-60f6-4672-a603-caaa4564af12`\n\rBelow is a list of operation types available on filters, note that each filter may not support every type:\n\r• Equality `[eq]`: Checks for an exact match with the given filter value\n\rThe list of supported filters is given below.",
            "schema": {
              "type": "object",
              "properties": {
                "jobId": {
                  "title": "UUIDv4",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "dc996d73-a75e-499c-a96e-bd7d0df45f57,26d0ffc4-60f6-4672-a603-caaa4564af12",
                  "description": "The identifier string for the [Job](#tag/Jobs). This can be chained by `,` to search for current jobs that belong to multiple [people](#tag/People).\n\rExample filter: `filters[jobId][eq]=dc996d73-a75e-499c-a96e-bd7d0df45f57,26d0ffc4-60f6-4672-a603-caaa4564af12`\n\rThis filter supports the equality `[eq]` operation",
                  "type": "string"
                },
                "primaryEmailAddress": {
                  "description": "This Person's primary email address.\n\rExample filter: `filters[primaryEmailAddress][eq]=bruce.wayne@batman.org`\n\rThis filter supports the equality `[eq]` operation",
                  "type": "string",
                  "example": "bruce.wayne@batman.org"
                },
                "employeeNumber": {
                  "description": "A manually entered employee number that identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.\n\rExample filter: `filters[employeeNumber][eq]=00001`\n\rThis filter supports the equality `[eq]` operation",
                  "example": "00001",
                  "type": "string"
                },
                "autoIncrementIntellihrId": {
                  "type": "number",
                  "description": "An autogenerated number that uniquely identifies a [Person](#tags/people) in intelliHR. It may be hidden in the system's UI depending upon your tenant's configuration.\n\rExample filter: `filters[autoIncrementIntellihrId][eq]=1000`\n\rThis filter supports the equality `[eq]` operation",
                  "example": "1000"
                },
                "name": {
                  "type": "string",
                  "description": "Name of a [Person](#tags/people) in the system. This filter checks for an exact string match with any part of a [Persons](#tags/people) name. This filter is performed case insensitively and regardless of name order (e.g. `<last_name> <first_name>`). If multiple [People](#tags/people) match the `<filter_value>`, they will all be returned.\n\rExample filter: `filters[name][eq]=Batman%20(Bruce)%20Wayne`\n\rThis filter supports the equality `[eq]` operation",
                  "example": "Batman%20(Bruce)%20Wayne"
                },
                "updatedWithin": {
                  "type": "number",
                  "description": "Filters people that have been updated within the specified amount of days.\n\rExample filter: `filters[updatedWithin][eq]=30`\n\rThis filter supports the equality `[eq]` operation",
                  "minimum": "0",
                  "example": "30"
                },
                "isOnExtendedLeave": {
                  "type": "string",
                  "description": "Filters people that are on extended leave. Parse 'true' to filter for people on extended leave. Parse 'false' for people not on extended leave\n\rExample filter: `filters[isOnExtendedLeave][eq]=true`\n\rThis filter supports the equality `[eq]` operation",
                  "example": "true"
                }
              }
            }
          },
          {
            "in": "query",
            "name": "sort",
            "description": "Sorting can be applied in the query string to order the data returned from this endpoint. Sort can be prepended with a minus to return the data in descending (-) order. For example, a sort to get the most recent records first would be `-createdAt`.",
            "schema": {
              "type": "string",
              "description": "Enum: `createdAt`."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/people_list"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a list of all [People](#tag/People) as at the current date.",
        "summary": "List all people",
        "tags": [
          "People"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "post": {
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/people"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Create a person",
        "summary": "",
        "tags": [
          "People"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/people_create_request"
              },
              "example": {
                "firstName": "Bruce",
                "middleName": "Thomas",
                "lastName": "Wayne",
                "preferredName": "Batman",
                "dateOfBirth": "1939-07-23",
                "gender": "Other",
                "employeeNumber": "00001",
                "title": "Mr",
                "emergencyContact": {
                  "name": "John Doe",
                  "relationship": "Sibling",
                  "phone": "0451 234 234",
                  "email": "johndoe@example.com"
                },
                "emailAddresses": [
                  {
                    "email": "bruce.wayne@batman.org",
                    "isPersonal": false,
                    "isPrimary": true,
                    "customFields": {
                      "text_field_api_name": {
                        "value": "Some text value"
                      },
                      "numeric_field_api_name": {
                        "value": "50"
                      },
                      "single_select_api_name": {
                        "value": {
                          "label": "Drama"
                        }
                      },
                      "multi_select_api_name": {
                        "value": {
                          "labels": [
                            "Bananas",
                            "Apples"
                          ]
                        }
                      },
                      "people_dropdown_api_name": {
                        "value": [
                          {
                            "person": {
                              "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                              "name": "Bruce Wayne",
                              "primaryEmailAddress": "bruce.wayne@example.com",
                              "employeeNumber": "00001",
                              "autoIncrementIntellihrId": "1000"
                            },
                            "job": {
                              "id": "569904c8-5d36-4c2f-afb0-525eeb8da32d",
                              "name": "Maintenance worker"
                            }
                          },
                          {
                            "person": {
                              "id": "313fde44-f24e-4ec9-9473-0d0f3527222d",
                              "name": "Batman",
                              "primaryEmailAddress": "batman@example.com",
                              "employeeNumber": "00002",
                              "autoIncrementIntellihrId": "1001"
                            },
                            "job": {
                              "id": "653304c8-5d36-4c2f-afb0-525eeb8da32d",
                              "name": "Janitor"
                            }
                          }
                        ]
                      }
                    }
                  }
                ],
                "phoneNumbers": [
                  {
                    "number": "0491 570 156",
                    "isPersonal": false,
                    "isPrimary": true,
                    "customFields": {
                      "text_field_api_name": {
                        "value": "Some text value"
                      },
                      "numeric_field_api_name": {
                        "value": "50"
                      },
                      "single_select_api_name": {
                        "value": {
                          "label": "Drama"
                        }
                      },
                      "multi_select_api_name": {
                        "value": {
                          "labels": [
                            "Bananas",
                            "Apples"
                          ]
                        }
                      },
                      "people_dropdown_api_name": {
                        "value": [
                          {
                            "person": {
                              "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                              "name": "Bruce Wayne",
                              "primaryEmailAddress": "bruce.wayne@example.com",
                              "employeeNumber": "00001",
                              "autoIncrementIntellihrId": "1000"
                            },
                            "job": {
                              "id": "569904c8-5d36-4c2f-afb0-525eeb8da32d",
                              "name": "Maintenance worker"
                            }
                          },
                          {
                            "person": {
                              "id": "313fde44-f24e-4ec9-9473-0d0f3527222d",
                              "name": "Batman",
                              "primaryEmailAddress": "batman@example.com",
                              "employeeNumber": "00002",
                              "autoIncrementIntellihrId": "1001"
                            },
                            "job": {
                              "id": "653304c8-5d36-4c2f-afb0-525eeb8da32d",
                              "name": "Janitor"
                            }
                          }
                        ]
                      }
                    }
                  }
                ],
                "addresses": [
                  {
                    "addressType": "Home",
                    "fullAddress": "Queen Street, Brisbane QLD",
                    "country": "Australia",
                    "postcode": "4000",
                    "state": "Queensland",
                    "street": "Queen Street",
                    "suburb": "Brisbane",
                    "isPrimary": true,
                    "customFields": {
                      "text_field_api_name": {
                        "value": "Some text value"
                      },
                      "numeric_field_api_name": {
                        "value": "50"
                      },
                      "single_select_api_name": {
                        "value": {
                          "label": "Drama"
                        }
                      },
                      "multi_select_api_name": {
                        "value": {
                          "labels": [
                            "Bananas",
                            "Apples"
                          ]
                        }
                      },
                      "people_dropdown_api_name": {
                        "value": [
                          {
                            "person": {
                              "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                              "name": "Bruce Wayne",
                              "primaryEmailAddress": "bruce.wayne@example.com",
                              "employeeNumber": "00001",
                              "autoIncrementIntellihrId": "1000"
                            },
                            "job": {
                              "id": "569904c8-5d36-4c2f-afb0-525eeb8da32d",
                              "name": "Maintenance worker"
                            }
                          },
                          {
                            "person": {
                              "id": "313fde44-f24e-4ec9-9473-0d0f3527222d",
                              "name": "Batman",
                              "primaryEmailAddress": "batman@example.com",
                              "employeeNumber": "00002",
                              "autoIncrementIntellihrId": "1001"
                            },
                            "job": {
                              "id": "653304c8-5d36-4c2f-afb0-525eeb8da32d",
                              "name": "Janitor"
                            }
                          }
                        ]
                      }
                    }
                  }
                ],
                "customFields": {
                  "text_field_api_name": {
                    "value": "Some text value"
                  },
                  "numeric_field_api_name": {
                    "value": "50"
                  },
                  "single_select_api_name": {
                    "value": {
                      "label": "Drama"
                    }
                  },
                  "multi_select_api_name": {
                    "value": {
                      "labels": [
                        "Bananas",
                        "Apples"
                      ]
                    }
                  },
                  "people_dropdown_api_name": {
                    "value": [
                      {
                        "person": {
                          "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                          "name": "Bruce Wayne",
                          "primaryEmailAddress": "bruce.wayne@example.com",
                          "employeeNumber": "00001",
                          "autoIncrementIntellihrId": "1000"
                        },
                        "job": {
                          "id": "569904c8-5d36-4c2f-afb0-525eeb8da32d",
                          "name": "Maintenance worker"
                        }
                      },
                      {
                        "person": {
                          "id": "313fde44-f24e-4ec9-9473-0d0f3527222d",
                          "name": "Batman",
                          "primaryEmailAddress": "batman@example.com",
                          "employeeNumber": "00002",
                          "autoIncrementIntellihrId": "1001"
                        },
                        "job": {
                          "id": "653304c8-5d36-4c2f-afb0-525eeb8da32d",
                          "name": "Janitor"
                        }
                      }
                    ]
                  }
                },
                "medicalConditions": [
                  {
                    "body": "Mild Insomnia",
                    "isPublic": true
                  }
                ],
                "workRight": {
                  "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "name": "Australian Citizen"
                },
                "workRightExpiryDate": "2022-06-23",
                "userAccount": {
                  "isEnabled": true,
                  "username": "BruceWayne",
                  "sendWelcomeEmail": true,
                  "permissionGroups": [
                    "fd652f39-db15-4a12-8c71-a48358ee9709"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/people/{id}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/people"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Get a single Person record by UUIDv4 identifier.",
        "summary": "Find a Person by ID",
        "tags": [
          "People"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/people"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Update a person",
        "summary": "",
        "tags": [
          "People"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/people_update_request"
              },
              "example": {
                "firstName": "Bruce",
                "middleName": "Thomas",
                "lastName": "Wayne",
                "preferredName": "Batman",
                "dateOfBirth": "1939-07-23",
                "gender": "Other",
                "employeeNumber": "00001",
                "title": "Mr",
                "emergencyContact": {
                  "name": "John Doe",
                  "relationship": "Sibling",
                  "phone": "0451 234 234",
                  "email": "johndoe@example.com"
                },
                "emailAddresses": [
                  {
                    "email": "bruce.wayne@batman.org",
                    "isPersonal": false,
                    "isPrimary": true,
                    "customFields": {
                      "text_field_api_name": {
                        "value": "Some text value"
                      },
                      "numeric_field_api_name": {
                        "value": "50"
                      },
                      "single_select_api_name": {
                        "value": {
                          "label": "Drama"
                        }
                      },
                      "multi_select_api_name": {
                        "value": {
                          "labels": [
                            "Bananas",
                            "Apples"
                          ]
                        }
                      },
                      "people_dropdown_api_name": {
                        "value": [
                          {
                            "person": {
                              "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                              "name": "Bruce Wayne",
                              "primaryEmailAddress": "bruce.wayne@example.com",
                              "employeeNumber": "00001",
                              "autoIncrementIntellihrId": "1000"
                            },
                            "job": {
                              "id": "569904c8-5d36-4c2f-afb0-525eeb8da32d",
                              "name": "Maintenance worker"
                            }
                          },
                          {
                            "person": {
                              "id": "313fde44-f24e-4ec9-9473-0d0f3527222d",
                              "name": "Batman",
                              "primaryEmailAddress": "batman@example.com",
                              "employeeNumber": "00002",
                              "autoIncrementIntellihrId": "1001"
                            },
                            "job": {
                              "id": "653304c8-5d36-4c2f-afb0-525eeb8da32d",
                              "name": "Janitor"
                            }
                          }
                        ]
                      }
                    }
                  }
                ],
                "phoneNumbers": [
                  {
                    "number": "0491 570 156",
                    "isPersonal": false,
                    "isPrimary": true,
                    "customFields": {
                      "text_field_api_name": {
                        "value": "Some text value"
                      },
                      "numeric_field_api_name": {
                        "value": "50"
                      },
                      "single_select_api_name": {
                        "value": {
                          "label": "Drama"
                        }
                      },
                      "multi_select_api_name": {
                        "value": {
                          "labels": [
                            "Bananas",
                            "Apples"
                          ]
                        }
                      },
                      "people_dropdown_api_name": {
                        "value": [
                          {
                            "person": {
                              "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                              "name": "Bruce Wayne",
                              "primaryEmailAddress": "bruce.wayne@example.com",
                              "employeeNumber": "00001",
                              "autoIncrementIntellihrId": "1000"
                            },
                            "job": {
                              "id": "569904c8-5d36-4c2f-afb0-525eeb8da32d",
                              "name": "Maintenance worker"
                            }
                          },
                          {
                            "person": {
                              "id": "313fde44-f24e-4ec9-9473-0d0f3527222d",
                              "name": "Batman",
                              "primaryEmailAddress": "batman@example.com",
                              "employeeNumber": "00002",
                              "autoIncrementIntellihrId": "1001"
                            },
                            "job": {
                              "id": "653304c8-5d36-4c2f-afb0-525eeb8da32d",
                              "name": "Janitor"
                            }
                          }
                        ]
                      }
                    }
                  }
                ],
                "addresses": [
                  {
                    "addressType": "Home",
                    "fullAddress": "Queen Street, Brisbane QLD",
                    "country": "Australia",
                    "postcode": "4000",
                    "state": "Queensland",
                    "street": "Queen Street",
                    "suburb": "Brisbane",
                    "isPrimary": true,
                    "customFields": {
                      "text_field_api_name": {
                        "value": "Some text value"
                      },
                      "numeric_field_api_name": {
                        "value": "50"
                      },
                      "single_select_api_name": {
                        "value": {
                          "label": "Drama"
                        }
                      },
                      "multi_select_api_name": {
                        "value": {
                          "labels": [
                            "Bananas",
                            "Apples"
                          ]
                        }
                      },
                      "people_dropdown_api_name": {
                        "value": [
                          {
                            "person": {
                              "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                              "name": "Bruce Wayne",
                              "primaryEmailAddress": "bruce.wayne@example.com",
                              "employeeNumber": "00001",
                              "autoIncrementIntellihrId": "1000"
                            },
                            "job": {
                              "id": "569904c8-5d36-4c2f-afb0-525eeb8da32d",
                              "name": "Maintenance worker"
                            }
                          },
                          {
                            "person": {
                              "id": "313fde44-f24e-4ec9-9473-0d0f3527222d",
                              "name": "Batman",
                              "primaryEmailAddress": "batman@example.com",
                              "employeeNumber": "00002",
                              "autoIncrementIntellihrId": "1001"
                            },
                            "job": {
                              "id": "653304c8-5d36-4c2f-afb0-525eeb8da32d",
                              "name": "Janitor"
                            }
                          }
                        ]
                      }
                    }
                  }
                ],
                "customFields": {
                  "text_field_api_name": {
                    "value": "Some text value"
                  },
                  "numeric_field_api_name": {
                    "value": "50"
                  },
                  "single_select_api_name": {
                    "value": {
                      "label": "Drama"
                    }
                  },
                  "multi_select_api_name": {
                    "value": {
                      "labels": [
                        "Bananas",
                        "Apples"
                      ]
                    }
                  },
                  "people_dropdown_api_name": {
                    "value": [
                      {
                        "person": {
                          "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                          "name": "Bruce Wayne",
                          "primaryEmailAddress": "bruce.wayne@example.com",
                          "employeeNumber": "00001",
                          "autoIncrementIntellihrId": "1000"
                        },
                        "job": {
                          "id": "569904c8-5d36-4c2f-afb0-525eeb8da32d",
                          "name": "Maintenance worker"
                        }
                      },
                      {
                        "person": {
                          "id": "313fde44-f24e-4ec9-9473-0d0f3527222d",
                          "name": "Batman",
                          "primaryEmailAddress": "batman@example.com",
                          "employeeNumber": "00002",
                          "autoIncrementIntellihrId": "1001"
                        },
                        "job": {
                          "id": "653304c8-5d36-4c2f-afb0-525eeb8da32d",
                          "name": "Janitor"
                        }
                      }
                    ]
                  }
                },
                "medicalConditions": [
                  {
                    "body": "Mild Insomnia",
                    "isPublic": true
                  }
                ],
                "workRight": {
                  "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "name": "Australian Citizen"
                },
                "workRightExpiryDate": "2022-06-23"
              }
            }
          }
        }
      }
    },
    "/people/{personId}/images": {
      "get": {
        "parameters": [
          {
            "name": "personId",
            "description": "Id string param for relevant [Person](#tag/People)",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "description": "The Image Type. Enum: `PERSON_PROFILE`, `PROFILE_COVER`.",
            "in": "query",
            "name": "imageType",
            "default": "PERSON_PROFILE",
            "schema": {
              "description": "The Image Type. Enum: `PERSON_PROFILE`, `PROFILE_COVER`.",
              "example": "PERSON_PROFILE",
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/:personId_image_find_response"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns the current temporary image of the specified type for the provided [Person](#tag/People).",
        "summary": "Get a temporary image",
        "tags": [
          "People Images"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "post": {
        "parameters": [
          {
            "name": "personId",
            "description": "Id string param for relevant [Person](#tag/People)",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Created Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/:personId_image_create_response"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Generates an upload url for an temporary image of the specified type to an existing [Person](#tag/People)",
        "summary": "Generate an temporary image upload URL for the provided Person.",
        "tags": [
          "People Images"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/:personId_image_create_request"
              }
            }
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "name": "personId",
            "description": "Id string param for relevant [Person](#tag/People)",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Activates the temporary image as the active image on a [Person](#tag/People), has some minor editing options.",
        "summary": "Promote temporary image",
        "tags": [
          "People Images"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/:personId_image_patch_request"
              }
            }
          }
        }
      }
    },
    "/people/{personId}/skills": {
      "get": {
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Id string param for relevant [Person](#tag/People)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/:personId_list"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a list of all [Skills](#tag/Skills) for the provided [Person](#tag/People).  Note that this endpoint is not Paginated.",
        "summary": "List all Skills assigned to a Person",
        "tags": [
          "People Skills"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "post": {
        "parameters": [
          {
            "name": "personId",
            "description": "Id string param for relevant [Person](#tag/People)",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Created Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/:personId"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Assigns a [Skill](#tag/Skills) to an existing [Person](#tag/People)",
        "summary": "Assign a Skill to a Person",
        "tags": [
          "People Skills"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/:personId_create_request"
              },
              "example": {
                "skillId": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "skillLevel": "Fortnightly"
              }
            }
          }
        }
      }
    },
    "/people/{personId}/skills/{id}": {
      "get": {
        "parameters": [
          {
            "name": "personId",
            "description": "Id string param for relevant [Person](#tag/People)",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/:personId"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a single [Skill](#tag/Skills) for the provided [Person](#tag/People).",
        "summary": "Find a Person's Skill by ID",
        "tags": [
          "People Skills"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "patch": {
        "parameters": [
          {
            "name": "personId",
            "description": "Id string param for relevant [Person](#tag/People)",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/:personId"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Update an assigned [Skill](#tag/Skills) on a [Person](#tag/People)",
        "summary": "Update an Assigned Skill",
        "tags": [
          "People Skills"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/:personId_patch_request"
              },
              "example": {
                "skillLevel": "Fortnightly"
              }
            }
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "name": "personId",
            "description": "Id string param for relevant [Person](#tag/People)",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Deletes the assigned [Skill](#tag/Skills) from a [Person](#tag/People).",
        "summary": "Delete an Assigned Skill by ID",
        "tags": [
          "People Skills"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/permission-groups": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/collectionLimit"
          },
          {
            "$ref": "#/parameters/collectionPage"
          },
          {
            "in": "query",
            "name": "filters",
            "description": "Filters can be applied in the query string to limit the data returned from this endpoint. Filters are provided in the format `filters[<filter_name>][<operation_type>]=<filter_value>`.For example, a filter to get items matching a specific filter value would be `filters[isEnabled][eq]=true`\n\rBelow is a list of operation types available on filters, note that each filter may not support every type:\n\r• Equality `[eq]`: Checks for an exact match with the given filter value\n\rThe list of supported filters is given below.",
            "schema": {
              "type": "object",
              "properties": {
                "isEnabled": {
                  "type": "boolean",
                  "description": "\n\rExample filter: `filters[isEnabled][eq]=true`\n\rThis filter supports the equality `[eq]` operation",
                  "example": "true"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/permission-groups_list"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a list of all [Permission Groups](#tag/Permission-Groups) recorded in the system.",
        "summary": "List all Permission Groups",
        "tags": [
          "Permission Groups"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/permission-groups/{id}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/permission-groups"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a single [Permission Groups](#tag/Permission-Groups).",
        "summary": "Find a Permission Group by ID",
        "tags": [
          "Permission Groups"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/people/{personId}/documents": {
      "get": {
        "parameters": [
          {
            "name": "personId",
            "in": "path",
            "description": "Id string param for relevant [Person](#tag/People)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The number of items per page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/people_documents_find_response"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a list of all [Documents](#tag/People-Documents) of a given [person]((#tag/People).",
        "summary": "List all Documents of a person",
        "tags": [
          "People Documents"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "personId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "personId parameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Created Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/people_documents_create_response"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Create a presigned upload URL",
        "summary": "",
        "tags": [
          "People Documents"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/people_documents_create_request"
              },
              "example": {
                "filename": "OfferLetter.pdf",
                "mime": "application/pdf",
                "size": 300,
                "extension": "pdf"
              }
            }
          }
        }
      }
    },
    "/people/{personId}/documents/{id}": {
      "patch": {
        "parameters": [
          {
            "in": "path",
            "name": "personId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "personId parameter"
          },
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/people_documents_patch_response"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Update a Document",
        "summary": "",
        "tags": [
          "People Documents"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/people_documents_patch_request"
              },
              "example": {
                "filename": "OfferLetter.pdf",
                "uploadStatus": "SUCCESS"
              }
            }
          }
        }
      }
    },
    "/person-documents": {
      "post": {
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/person_documents_create_response"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Create a presigned upload URL",
        "summary": "",
        "tags": [
          "Person Documents (deprecated)"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/person_documents_create_request"
              },
              "example": {
                "person": {
                  "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "name": "Bruce Wayne",
                  "primaryEmailAddress": "bruce.wayne@example.com",
                  "employeeNumber": "00001",
                  "autoIncrementIntellihrId": "1000"
                },
                "filename": "OfferLetter.pdf",
                "mime": "application/pdf",
                "size": 300,
                "extension": "pdf"
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/person-documents/{id}": {
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/person_documents_patch_response"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Update a Document",
        "summary": "",
        "tags": [
          "Person Documents (deprecated)"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/person_documents_patch_request"
              },
              "example": {
                "personId": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "filename": "OfferLetter.pdf",
                "uploadStatus": "SUCCESS"
              }
            }
          }
        },
        "deprecated": true
      }
    },
    "/position-titles": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/collectionLimit"
          },
          {
            "$ref": "#/parameters/collectionPage"
          },
          {
            "in": "query",
            "name": "filters",
            "description": "Filters can be applied in the query string to limit the data returned from this endpoint. Filters are provided in the format `filters[<filter_name>][<operation_type>]=<filter_value>`.For example, a filter to get items matching a specific filter value would be `filters[name][eq]=Engineering Manager`\n\rBelow is a list of operation types available on filters, note that each filter may not support every type:\n\r• Equality `[eq]`: Checks for an exact match with the given filter value\n\rThe list of supported filters is given below.",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of a [Position Title](#tag/Position-Titles) in the system. This filter checks for an exact string match with any part of a [Position Title](#tag/Position-Titles) name. If multiple [Position Titles](#tag/Position-Titles) match the `<filter_value>`, they will all be returned.\n\rExample filter: `filters[name][eq]=Engineering Manager`\n\rThis filter supports the equality `[eq]` operation",
                  "example": "Engineering Manager"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/position-titles_list"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a list of all [Position Titles](#tag/Position-Titles) recorded in the system.",
        "summary": "List all position titles",
        "tags": [
          "Position Titles"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "post": {
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/position-titles"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Create a new [Position Title](#tag/Position-Titles) record with the provided data.",
        "summary": "Create a new Position Title",
        "tags": [
          "Position Titles"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/positionTitles_create_request"
              },
              "example": {
                "name": "Engineering Manager"
              }
            }
          }
        }
      }
    },
    "/position-titles/{id}": {
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/position-titles"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Patch attributes of an existing [Position Titles](#tag/Position-Titles) record with the provided data.",
        "summary": "Patch an existing Position Title",
        "tags": [
          "Position Titles"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/positionTitles_patch_request"
              },
              "example": {
                "name": "Engineering Manager",
                "isEnabled": true
              }
            }
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Deletes the [Position Titles](#tag/Position-Titles) by the given ID.",
        "summary": "Delete a Position Title by ID",
        "tags": [
          "Position Titles"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/qualifications": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/collectionLimit"
          },
          {
            "$ref": "#/parameters/collectionPage"
          },
          {
            "in": "query",
            "name": "filters",
            "description": "Filters can be applied in the query string to limit the data returned from this endpoint. Filters are provided in the format `filters[<filter_name>][<operation_type>]=<filter_value>`.For example, a filter to get items matching a specific filter value would be `filters[personId][eq]=dc996d73-a75e-499c-a96e-bd7d0df45f57,26d0ffc4-60f6-4672-a603-caaa4564af12`\n\rBelow is a list of operation types available on filters, note that each filter may not support every type:\n\r• Equality `[eq]`: Checks for an exact match with the given filter value\n\rThe list of supported filters is given below.",
            "schema": {
              "type": "object",
              "properties": {
                "personId": {
                  "title": "UUIDv4",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "dc996d73-a75e-499c-a96e-bd7d0df45f57,26d0ffc4-60f6-4672-a603-caaa4564af12",
                  "description": "The identifier string for the [Person](#tags/People). This can be chained by `,` to search by multiple [People](#tags/People).\n\rExample filter: `filters[personId][eq]=dc996d73-a75e-499c-a96e-bd7d0df45f57,26d0ffc4-60f6-4672-a603-caaa4564af12`\n\rThis filter supports the equality `[eq]` operation",
                  "type": "string"
                },
                "employeeNumber": {
                  "description": "The employee number for the [Person](#tags/People) to whom the [Job](#tags/Jobs) belongs. This can be chained by `,` to search by multiple employee numbers\n\rExample filter: `filters[employeeNumber][eq]=00001`\n\rThis filter supports the equality `[eq]` operation",
                  "example": "00001",
                  "type": "string"
                },
                "qualificationLibraryItemId": {
                  "title": "UUIDv4",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "dc996d73-a75e-499c-a96e-bd7d0df45f57,26d0ffc4-60f6-4672-a603-caaa4564af12",
                  "description": "The identifier string for the [Qualification Library Item](#tag/Qualification-Library-Items). This can be chained by `,` to search by multiple [Qualification Library Items](#tag/Qualification-Library-Items).\n\rExample filter: `filters[qualificationLibraryItemId][eq]=dc996d73-a75e-499c-a96e-bd7d0df45f57,26d0ffc4-60f6-4672-a603-caaa4564af12`\n\rThis filter supports the equality `[eq]` operation",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/qualifications_list"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "",
        "summary": "List all Qualification Instances",
        "tags": [
          "Qualification Instances"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "post": {
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/qualifications"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns the created [Qualification Instance](#tag/Qualification-Instances).",
        "summary": "Create a new Qualification Instance",
        "tags": [
          "Qualification Instances"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/qualification-instances_create_request"
              },
              "example": {
                "personId": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "qualificationLibraryItemId": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "issuingOrganisation": "ABCDE12345",
                "registrationNumber": "ABCDE12345",
                "issueDate": "2015-03-01T22:30:00+00:00",
                "expiryDate": "2015-03-01T22:30:00+00:00",
                "expiryNotificationQueuedAt": "2015-03-01T22:30:00+00:00",
                "notes": null
              }
            }
          }
        }
      }
    },
    "/qualifications/{id}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/qualifications"
                },
                "example": {
                  "data": {
                    "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "expiryDate": "2015-03-01T22:30:00+00:00",
                    "expiryNotificationQueuedAt": "2015-03-01T22:30:00+00:00",
                    "issueDate": "2015-03-01T22:30:00+00:00",
                    "issuingOrganisation": "ABCDE12345",
                    "notes": null,
                    "person": {
                      "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "displayName": "Batman (Bruce) Wayne",
                      "employeeNumber": "00001",
                      "autoIncrementIntellihrId": 1000,
                      "link": "https://api.intellihr.io/v1/people/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                    },
                    "libraryItem": {
                      "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                      "qualificationType": {
                        "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                      },
                      "link": "https://api.intellihr.io/v1/qualification-library-items/8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                    },
                    "registrationNumber": "ABCDE12345"
                  },
                  "meta": {
                    "asAt": "2015-03-01T22:30:00+00:00",
                    "requestId": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a single [Qualification Instance](#tag/Qualification-Instances) by its identifier.",
        "summary": "Find a Qualification Instance by ID",
        "tags": [
          "Qualification Instances"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/qualifications"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns the updated [Qualification Instance](#tag/Qualification-Instances).",
        "summary": "Update a Qualification Instance by ID",
        "tags": [
          "Qualification Instances"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/qualification-instances_patch_request"
              },
              "example": {
                "issuingOrganisation": "ABCDE12345",
                "registrationNumber": "ABCDE12345",
                "issueDate": "2015-03-01T22:30:00+00:00",
                "expiryDate": "2015-03-01T22:30:00+00:00",
                "expiryNotificationQueuedAt": "2015-03-01T22:30:00+00:00",
                "notes": null
              }
            }
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Deletes the [Qualification Instance](#tag/Qualification-Instances) by the given ID.",
        "summary": "Delete a Qualification Instance by ID",
        "tags": [
          "Qualification Instances"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/qualification-statuses/{id}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/qualification-statuses"
                },
                "example": {
                  "data": {
                    "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  },
                  "meta": {
                    "asAt": "2015-03-01T22:30:00+00:00",
                    "requestId": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a single [Qualification Status](#tag/Qualification-Statuses) by its identifier.",
        "summary": "Find a Qualification Status by ID",
        "tags": [
          "Qualification Statuses"
        ],
        "security": [],
        "deprecated": true
      }
    },
    "/qualification-library-items": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/collectionLimit"
          },
          {
            "$ref": "#/parameters/collectionPage"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/qualification-library-items"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "",
        "summary": "List all Qualification Library Items",
        "tags": [
          "Qualification Library Items"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "post": {
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/qualification-library-items"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Create a new [Qualification Library Item](#tag/Qualification-Library-Items) record with the provided data.",
        "summary": "Create a new Qualification Library Item",
        "tags": [
          "Qualification Library Items"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/qualification-library-items_create_request"
              },
              "example": {
                "qualificationTypeId": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "sendExpiryWarning": true
              }
            }
          }
        }
      }
    },
    "/qualification-library-items/{id}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/qualification-library-items_list"
                },
                "example": {
                  "data": {
                    "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "qualificationType": {
                      "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                    },
                    "sendExpiryWarning": true
                  },
                  "meta": {
                    "asAt": "2015-03-01T22:30:00+00:00",
                    "requestId": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a single [Qualification Library Item](#tag/Qualification-Library-Items) by its identifier.",
        "summary": "Find a Qualification Library Item by ID",
        "tags": [
          "Qualification Library Items"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/qualification-library-items"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Patch attributes of an existing [Qualification Library Items](#tag/Qualification-Library-Items) record with the provided data.",
        "summary": "Patch an existing Qualification Library Item",
        "tags": [
          "Qualification Library Items"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/qualification-library-items_patch_request"
              },
              "example": {
                "qualificationTypeId": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "sendExpiryWarning": true
              }
            }
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Deletes the [Qualification Library Items](#tag/Qualification-Library-Items) by the given ID.",
        "summary": "Delete a Qualification Library Item by ID",
        "tags": [
          "Qualification Library Items"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/qualification-types": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/collectionLimit"
          },
          {
            "$ref": "#/parameters/collectionPage"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/qualification-types"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "",
        "summary": "List all Qualification Types",
        "tags": [
          "Qualification Types"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/qualification-types/{id}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/qualification-types_list"
                },
                "example": {
                  "data": {
                    "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  },
                  "meta": {
                    "asAt": "2015-03-01T22:30:00+00:00",
                    "requestId": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a single [Qualification Type](#tag/Qualification-Types) by its identifier.",
        "summary": "Find a Qualification Type by ID",
        "tags": [
          "Qualification Types"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/recruitment-sources": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/collectionLimit"
          },
          {
            "$ref": "#/parameters/collectionPage"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/recruitment-sources_list"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a list of all recruitment sources.",
        "summary": "List all recruitment sources",
        "tags": [
          "Recruitment Sources"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/recruitment-sources/{id}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/recruitment-sources"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a single recruitment source.",
        "summary": "Find a Recruitment Source by ID",
        "tags": [
          "Recruitment Sources"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/representative-types": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/collectionLimit"
          },
          {
            "$ref": "#/parameters/collectionPage"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/representative-types"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "",
        "summary": "List all Representative Types",
        "tags": [
          "Representative Types"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/representative-types/{id}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/representative-types_list"
                },
                "example": {
                  "data": {
                    "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  },
                  "meta": {
                    "asAt": "2015-03-01T22:30:00+00:00",
                    "requestId": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a single [Representative Type](#tag/Representative-Types) by its identifier.",
        "summary": "Find a Representative Type by ID",
        "tags": [
          "Representative Types"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/skills": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/collectionLimit"
          },
          {
            "$ref": "#/parameters/collectionPage"
          },
          {
            "in": "query",
            "name": "filters",
            "description": "Filters can be applied in the query string to limit the data returned from this endpoint. Filters are provided in the format `filters[<filter_name>][<operation_type>]=<filter_value>`.For example, a filter to get items matching a specific filter value would be `filters[isBusinessCritical][eq]=true`\n\rBelow is a list of operation types available on filters, note that each filter may not support every type:\n\r• Equality `[eq]`: Checks for an exact match with the given filter value\n\rThe list of supported filters is given below.",
            "schema": {
              "type": "object",
              "properties": {
                "isBusinessCritical": {
                  "type": "boolean",
                  "description": "Whether this [Skill](#tag/Skills) is business critical.\n\rExample filter: `filters[isBusinessCritical][eq]=true`\n\rThis filter supports the equality `[eq]` operation",
                  "example": "true"
                },
                "skillDisciplineId": {
                  "title": "UUIDv4",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "description": "The identifier string for the [Skill Discipline](#tag/Skill-Disciplines) to which this [Skill](#tag/Skills) belongs.\n\rExample filter: `filters[skillDisciplineId][eq]=8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9`\n\rThis filter supports the equality `[eq]` operation",
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/skills_list"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a list of all [Skills](#tag/Skills).",
        "summary": "List all Skills",
        "tags": [
          "Skills"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "post": {
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/skills"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Create a new Skill",
        "summary": "",
        "tags": [
          "Skills"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/skills_create_request"
              },
              "example": {
                "name": "Campaign Management",
                "description": "The planning, execution, tracking, and analysis of a marketing initiative; sometimes centered around a new product launch or an event.",
                "isBusinessCritical": "true",
                "skillDisciplineId": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
              }
            }
          }
        }
      }
    },
    "/skills/{id}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/skills"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a single [Skill](#tag/Skills).",
        "summary": "Find a Skill by ID",
        "tags": [
          "Skills"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/skills"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Update a Skill",
        "summary": "",
        "tags": [
          "Skills"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/skills_patch_request"
              },
              "example": {
                "name": "Campaign Management",
                "description": "The planning, execution, tracking, and analysis of a marketing initiative; sometimes centered around a new product launch or an event.",
                "isBusinessCritical": "true",
                "skillDisciplineId": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
              }
            }
          }
        }
      }
    },
    "/skill-disciplines": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/collectionLimit"
          },
          {
            "$ref": "#/parameters/collectionPage"
          },
          {
            "in": "query",
            "name": "filters",
            "description": "Filters can be applied in the query string to limit the data returned from this endpoint. Filters are provided in the format `filters[<filter_name>][<operation_type>]=<filter_value>`.For example, a filter to get items matching a specific filter value would be `filters[name][eq]=Accounting`\n\rBelow is a list of operation types available on filters, note that each filter may not support every type:\n\r• Equality `[eq]`: Checks for an exact match with the given filter value\n\rThe list of supported filters is given below.",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of a [Skill Disciplines](#tag/skill-disciplines) in the system. This filter checks for an exact string match with any part of a [Skill Disciplines](#tag/skill-disciplines) name. If multiple [Skill Disciplines](#tag/skill-disciplines) match the `<filter_value>`, they will all be returned.\n\rExample filter: `filters[name][eq]=Accounting`\n\rThis filter supports the equality `[eq]` operation",
                  "example": "Accounting"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/skill-disciplines_list"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a list of all [Skill Disciplines](#tag/skill-disciplines) recorded in the system.",
        "summary": "List all Skill Disciplines",
        "tags": [
          "Skill Disciplines"
        ],
        "security": []
      },
      "post": {
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/skill-disciplines"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "",
        "summary": "Create a Skill Discipline",
        "tags": [
          "Skill Disciplines"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/skill-disciplines_create"
              },
              "examples": ""
            }
          }
        }
      }
    },
    "/skill-disciplines/{id}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/skill-disciplines"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a single webhook.",
        "summary": "Find a Skill Discipline by ID",
        "tags": [
          "Skill Disciplines"
        ],
        "security": []
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/skill-disciplines"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "",
        "summary": "Patch a Skill Discipline",
        "tags": [
          "Skill Disciplines"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/skill-disciplines_patch"
              },
              "examples": ""
            }
          }
        }
      }
    },
    "/training-providers": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/collectionLimit"
          },
          {
            "$ref": "#/parameters/collectionPage"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/training-providers_list"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a list of all [Training Providers](#tag/Training-Providers).",
        "summary": "List all Training Providers",
        "tags": [
          "Training Providers"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/training-providers/{id}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/training-providers"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a single [Training Provider](#tag/Training-Providers).",
        "summary": "Find a Training Provider by ID",
        "tags": [
          "Training Providers"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/trainings": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/collectionLimit"
          },
          {
            "$ref": "#/parameters/collectionPage"
          },
          {
            "in": "query",
            "name": "filters",
            "description": "Filters can be applied in the query string to limit the data returned from this endpoint. Filters are provided in the format `filters[<filter_name>][<operation_type>]=<filter_value>`.For example, a filter to get items matching a specific filter value would be `filters[name][eq]=Accounting%20Compliance%20101`\n\rBelow is a list of operation types available on filters, note that each filter may not support every type:\n\r• Equality `[eq]`: Checks for an exact match with the given filter value\n\rThe list of supported filters is given below.",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "User friendly name given to this [Training](#tag/Trainings). Filtering is done case insensitively\n\rExample filter: `filters[name][eq]=Accounting%20Compliance%20101`\n\rThis filter supports the equality `[eq]` operation",
                  "example": "Accounting%20Compliance%20101"
                },
                "providerId": {
                  "title": "UUIDv4",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "description": "The identifier string for the [Training Provider](#tag/Training-Providers) of the [Training](#tag/Training).\n\rExample filter: `filters[providerId][eq]=8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9`\n\rThis filter supports the equality `[eq]` operation",
                  "type": "string"
                },
                "providerName": {
                  "description": "User friendly name given to the [Training Provider](#tag/Training-Providers) of the [Training](#tag/Training).\n\rExample filter: `filters[providerName][eq]=HR%20Training%20Team`\n\rThis filter supports the equality `[eq]` operation",
                  "example": "HR%20Training%20Team",
                  "type": "string"
                },
                "typeId": {
                  "title": "UUIDv4",
                  "maxLength": 36,
                  "minLength": 36,
                  "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "description": "The identifier string for the [Training Type](#tag/Training-Types) of the [Training](#tag/Training).\n\rExample filter: `filters[typeId][eq]=8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9`\n\rThis filter supports the equality `[eq]` operation",
                  "type": "string"
                },
                "typeName": {
                  "description": "User friendly name given to the [Training Type](#tag/Training-Types) of the [Training](#tag/Training).\n\rExample filter: `filters[typeName][eq]=Soft%20Skills`\n\rThis filter supports the equality `[eq]` operation",
                  "example": "Soft%20Skills",
                  "type": "string"
                },
                "employeeNumber": {
                  "description": "The employee number for the [Person](#tag/people) to whom the Training belongs.\n\rExample filter: `filters[employeeNumber][eq]=00001`\n\rThis filter supports the equality `[eq]` operation",
                  "example": "00001",
                  "type": "string"
                },
                "primaryEmailAddress": {
                  "description": "The primary email address for the [Person](#tag/people) to whom the Training belongs.\n\rExample filter: `filters[primaryEmailAddress][eq]=bruce.wayne@batman.org`\n\rThis filter supports the equality `[eq]` operation",
                  "type": "string",
                  "example": "bruce.wayne@batman.org"
                }
              }
            }
          },
          {
            "in": "query",
            "name": "sort",
            "description": "Sorting can be applied in the query string to order the data returned from this endpoint. Sort can be prepended with a minus to return the data in descending (-) order. For example, a sort to get the most recent records first would be `-createdAt`.",
            "schema": {
              "type": "string",
              "description": "Enum: `createdAt`."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trainings_list"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a list of all [Trainings](#tag/Trainings).",
        "summary": "List all Trainings",
        "tags": [
          "Trainings"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "post": {
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trainings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Create a new Training",
        "summary": "",
        "tags": [
          "Trainings"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/trainings_create_request"
              },
              "example": {
                "coordinatorPerson": {
                  "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "name": "Bruce Wayne",
                  "primaryEmailAddress": "bruce.wayne@example.com",
                  "employeeNumber": "00001",
                  "autoIncrementIntellihrId": "1000"
                },
                "completionDate": "2015-03-01T22:30:00+00:00",
                "cost": "600",
                "currency": "AUD",
                "hours": "12",
                "job": {
                  "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                },
                "name": "Accounting Compliance 101",
                "person": {
                  "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "name": "Bruce Wayne",
                  "primaryEmailAddress": "bruce.wayne@example.com",
                  "employeeNumber": "00001",
                  "autoIncrementIntellihrId": "1000"
                },
                "provider": {
                  "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "name": "HR Training Team"
                },
                "type": {
                  "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "name": "Soft Skills"
                },
                "customFields": {
                  "text_field_api_name": {
                    "value": "Some text value"
                  },
                  "numeric_field_api_name": {
                    "value": "50"
                  },
                  "single_select_api_name": {
                    "value": {
                      "label": "Drama"
                    }
                  },
                  "multi_select_api_name": {
                    "value": {
                      "labels": [
                        "Bananas",
                        "Apples"
                      ]
                    }
                  },
                  "people_dropdown_api_name": {
                    "value": [
                      {
                        "person": {
                          "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                          "name": "Bruce Wayne",
                          "primaryEmailAddress": "bruce.wayne@example.com",
                          "employeeNumber": "00001",
                          "autoIncrementIntellihrId": "1000"
                        },
                        "job": {
                          "id": "569904c8-5d36-4c2f-afb0-525eeb8da32d",
                          "name": "Maintenance worker"
                        }
                      },
                      {
                        "person": {
                          "id": "313fde44-f24e-4ec9-9473-0d0f3527222d",
                          "name": "Batman",
                          "primaryEmailAddress": "batman@example.com",
                          "employeeNumber": "00002",
                          "autoIncrementIntellihrId": "1001"
                        },
                        "job": {
                          "id": "653304c8-5d36-4c2f-afb0-525eeb8da32d",
                          "name": "Janitor"
                        }
                      }
                    ]
                  }
                },
                "status": {
                  "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "name": "Completed"
                }
              }
            }
          }
        }
      }
    },
    "/trainings/{id}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trainings"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a single [Training](#tag/Trainings).",
        "summary": "Find a Training by ID",
        "tags": [
          "Trainings"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trainings"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Update a Training",
        "summary": "",
        "tags": [
          "Trainings"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/trainings_patch_request"
              },
              "example": {
                "coordinatorPerson": {
                  "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "name": "Bruce Wayne",
                  "primaryEmailAddress": "bruce.wayne@example.com",
                  "employeeNumber": "00001",
                  "autoIncrementIntellihrId": "1000"
                },
                "completionDate": "2015-03-01T22:30:00+00:00",
                "cost": "600",
                "currency": "AUD",
                "hours": "12",
                "job": {
                  "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9"
                },
                "name": "Accounting Compliance 101",
                "person": {
                  "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "name": "Bruce Wayne",
                  "primaryEmailAddress": "bruce.wayne@example.com",
                  "employeeNumber": "00001",
                  "autoIncrementIntellihrId": "1000"
                },
                "provider": {
                  "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "name": "HR Training Team"
                },
                "type": {
                  "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "name": "Soft Skills"
                },
                "customFields": {
                  "text_field_api_name": {
                    "value": "Some text value"
                  },
                  "numeric_field_api_name": {
                    "value": "50"
                  },
                  "single_select_api_name": {
                    "value": {
                      "label": "Drama"
                    }
                  },
                  "multi_select_api_name": {
                    "value": {
                      "labels": [
                        "Bananas",
                        "Apples"
                      ]
                    }
                  },
                  "people_dropdown_api_name": {
                    "value": [
                      {
                        "person": {
                          "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                          "name": "Bruce Wayne",
                          "primaryEmailAddress": "bruce.wayne@example.com",
                          "employeeNumber": "00001",
                          "autoIncrementIntellihrId": "1000"
                        },
                        "job": {
                          "id": "569904c8-5d36-4c2f-afb0-525eeb8da32d",
                          "name": "Maintenance worker"
                        }
                      },
                      {
                        "person": {
                          "id": "313fde44-f24e-4ec9-9473-0d0f3527222d",
                          "name": "Batman",
                          "primaryEmailAddress": "batman@example.com",
                          "employeeNumber": "00002",
                          "autoIncrementIntellihrId": "1001"
                        },
                        "job": {
                          "id": "653304c8-5d36-4c2f-afb0-525eeb8da32d",
                          "name": "Janitor"
                        }
                      }
                    ]
                  }
                },
                "status": {
                  "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "name": "Completed"
                }
              }
            }
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Deletes the provided [Training](#tag/Trainings) record.",
        "summary": "Delete a Training by ID",
        "tags": [
          "Trainings"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/training-statuses": {
      "get": {
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/training-statuses_list"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a list of all [Training Statuses](#tag/Training-Statuses).",
        "summary": "List all Training Statuses",
        "tags": [
          "Training Statuses"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/training-types": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/collectionLimit"
          },
          {
            "$ref": "#/parameters/collectionPage"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/training-types_list"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a list of all [Training Types](#tag/Training-Types).",
        "summary": "List all Training Types",
        "tags": [
          "Training Types"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/training-types/{id}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/training-types"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a single [Training Type](#tag/Training-Types).",
        "summary": "Find a Training Type by ID",
        "tags": [
          "Training Types"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/users": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/collectionLimit"
          },
          {
            "$ref": "#/parameters/collectionPage"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/users_list"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a list of all [Users](#tag/Users).",
        "summary": "List all Users",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "post": {
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/users"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Create a User for a [Person](#tag/People) that does not already have a User.",
        "summary": "Create a User",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/users_create"
              },
              "example": {
                "isEnabled": true,
                "username": "BruceWayne",
                "person": {
                  "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                  "name": "Bruce Wayne",
                  "primaryEmailAddress": "bruce.wayne@example.com",
                  "employeeNumber": "00001",
                  "autoIncrementIntellihrId": "1000"
                },
                "permissionGroups": [
                  "fd652f39-db15-4a12-8c71-a48358ee9709"
                ]
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/users"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a single [User](#tag/Users).",
        "summary": "Find a User by ID",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/users"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns the updated [User](#tag/Users).",
        "summary": "Patch a User by ID",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/users_patch"
              },
              "examples": {
                "patchExample": {
                  "summary": "Patch example",
                  "value": {
                    "isEnabled": true,
                    "username": "BruceWayne"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/work-classes": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/collectionLimit"
          },
          {
            "$ref": "#/parameters/collectionPage"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/work-classes_list"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a list of all [Work Classes](#tag/Work-Classes) recorded in the system.",
        "summary": "List all work classes",
        "tags": [
          "Work Classes"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/work-classes/{id}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/work-classes"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a single work class.",
        "summary": "Find a Work Class by ID",
        "tags": [
          "Work Classes"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/workflow-events/{id}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/workflow-events"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a single [Workflow Event](#tag/Workflow-events) by its identifier.",
        "summary": "Find a Workflow Event by ID",
        "tags": [
          "Workflow Events"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/workflows/{id}": {
      "patch": {
        "parameters": [
          {
            "type": "string",
            "description": "The id of the Workflow to trigger.",
            "in": "path",
            "name": "id",
            "schema": {
              "title": "UUIDv4",
              "maxLength": 36,
              "minLength": 36,
              "example": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
              "description": "The identifier string for the id.",
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/workflows_patch_response"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Trigger a Workflow and related Workflow Form Designs. \n\nThis endpoint supports Workflows that are linked to Job onboarding, offboarding, role change and extended leave.\n\nCurrently the recipient and email address type for the individual forms will be automatically set based on the Respondent Type on the Form Design.  Form Designs with a Respondent Type of `Supervisor` for a job with no supervisor currently are not supported as no default option can be selected.",
        "summary": "Trigger a Workflow by ID",
        "tags": [
          "Workflows"
        ],
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/workflows_patch_request"
              },
              "example": {
                "jobId": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                "workflowFormDesigns": [
                  {
                    "id": "8a5f3ea6-ea6b-4425-8a87-3c256bb7b6f9",
                    "sendDate": "2015-03-02"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "/work-rights": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/collectionLimit"
          },
          {
            "$ref": "#/parameters/collectionPage"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/work-rights_list"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a list of all [Work Rights](#tag/Work-Rights) recorded in the system.",
        "summary": "List all Work Rights",
        "tags": [
          "Work Rights"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/work-rights/{id}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/work-rights"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a single work right.",
        "summary": "Find a Work Right by ID",
        "tags": [
          "Work Rights"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/work-types": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/collectionLimit"
          },
          {
            "$ref": "#/parameters/collectionPage"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/work-types_list"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a list of all [Work Types](#tag/Work-Types) recorded in the system.",
        "summary": "List all Work Types",
        "tags": [
          "Work Types"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/work-types/{id}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/work-types"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a single work type.",
        "summary": "Find a Work Type by ID",
        "tags": [
          "Work Types"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/webhook-events": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/collectionLimit"
          },
          {
            "$ref": "#/parameters/collectionPage"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webhook-events_list"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a list of all [Webhook Events](#tag/Webhook-Events).",
        "summary": "List all Webhook Events",
        "tags": [
          "Webhook Events"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/webhook-events/{id}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webhook-events"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a single [Webhook Event](#tag/Webhook-Events).",
        "summary": "Find a Webhook Event by ID",
        "tags": [
          "Webhook Events"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    },
    "/webhooks": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/collectionLimit"
          },
          {
            "$ref": "#/parameters/collectionPage"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webhooks_list"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a list of all webhooks.",
        "summary": "List all Webhooks",
        "tags": [
          "Webhooks"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "post": {
        "parameters": [],
        "responses": {
          "201": {
            "description": "Created Successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webhooks"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "",
        "summary": "Create a Webhook",
        "tags": [
          "Webhooks"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhooks_create"
              },
              "examples": {
                "extensiveExample": {
                  "summary": "Extensive webhook details",
                  "value": {
                    "url": "http://example.com",
                    "webhookEvent": "person.created",
                    "isEnabled": true,
                    "source": "custom"
                  }
                },
                "minimalExample": {
                  "summary": "Minimal webhook details",
                  "value": {
                    "url": "http://example.com",
                    "webhookEvent": "person.created"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/webhooks/{id}": {
      "get": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webhooks"
                }
              }
            }
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Returns a single webhook.",
        "summary": "Find a Webhook by ID",
        "tags": [
          "Webhooks"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      },
      "patch": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/webhooks"
                }
              }
            }
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "",
        "summary": "Patch a Webhook",
        "tags": [
          "Webhooks"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/webhooks_patch"
              },
              "examples": {
                "extensiveExample": {
                  "summary": "Extensive webhook details",
                  "value": {
                    "url": "http://example.com",
                    "webhookEvent": "person.created",
                    "isEnabled": true,
                    "source": "custom"
                  }
                },
                "minimalExample": {
                  "summary": "Minimal webhook details",
                  "value": {}
                }
              }
            }
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "$ref": "#/parameters/resourceId"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "400": {
            "$ref": "#/responses/errors/400"
          },
          "403": {
            "$ref": "#/responses/errors/403"
          },
          "500": {
            "$ref": "#/responses/errors/500"
          }
        },
        "description": "Deletes the provided webhook.",
        "summary": "Delete a Webhook by ID",
        "tags": [
          "Webhooks"
        ],
        "security": [
          {
            "ApiKey": []
          }
        ]
      }
    }
  },
  "openapi": "3.0.3",
  "tags": [
    {
      "name": "Business Entities",
      "description": "[Business Entities](#tag/Business-Entities) represent the legal entities which exist within the organisation. A [Business Entity](#tag/Business-Entities) can be used as a filter for automation logic (eg Pulse configuration) and as a dimension in the analytics tools. Every [Job](#tag/Jobs) in the system belongs to a [Business Entity](#tag/Business-Entities)."
    },
    {
      "name": "Business Units",
      "description": "The administrative units that exist within the organisation. Used to render the org chart business unit view. For example, \"Finance\", \"HR\", or \"Information Technology\". [Business Units](#tag/Business-Units) can be configured as text strings with parent -> child relationships. Every [Job](#tag/Jobs) in the system belongs to a [Business Unit](#tag/Business-Units)."
    },
    {
      "name": "Custom Field Definitions",
      "description": "Custom Field Definitions can be used to attach extra data fields to particular models in the system such as [Training](#tag/Trainings)."
    },
    {
      "name": "Default Remuneration Components",
      "description": "[Default Remuneration Components](#tag/Default-Remuneration-Components) are the organization-wide remuneration components for both additions and breakdowns."
    },
    {
      "name": "Employment Conditions",
      "description": "Employment conditions are the conditions under which someone is paid for their remuneration schedule. Every [Job](#tag/Jobs) in the system belongs to a [Employment Condition](#tag/Employment-Conditions) or the `No Employment Condition` Employment Condition."
    },
    {
      "name": "Extended Leave",
      "description": "[Extended Leave](#tag/extended-leave) can be added to an existing [Job](#tag/jobs).  Only one Extended Leave without a confirmed return date can on a Job at any one time."
    },
    {
      "name": "Extended Leave Types",
      "description": "[Extended Leave Types](#tag/extended-leave-types) are used in the system when adding [Extended Leave](#tag/extended-leave) to a Job."
    },
    {
      "name": "Forms",
      "description": "[Forms](#tag/Forms) represent the actionable forms which exist within the organisation and are sent to the users of the system."
    },
    {
      "name": "Job Change Reasons",
      "description": "[Job Change Reasons](#tag/Job-Change-Reasons) are used in the system to document the reason for changes to a [Job](#tag/jobs)."
    },
    {
      "name": "Job Requirement Groups",
      "description": "[Job Requirement Groups](#tag/Job-Requirement-Groups) are qualification requirements that a job must fulfill."
    },
    {
      "name": "End Job",
      "description": "Set and finalise the end date of a job. Finalising a job changes it to a past job on the end date."
    },
    {
      "name": "Jobs",
      "description": "The Job object is the core data object for past, current and future roles that a Person holds in the organisation. A Person can have more than one Job at a point in time to represent secondment / role sharing.<br/>\n    The data returned from this endpoint represents the data at this current time, which may change over time due to scheduled changes. This endpoint returns the [Job's](#tag/Jobs) Remuneration Schedule. <br/>\n    Establishment fields are currently in testing and require your tenant to be flagged for usage."
    },
    {
      "name": "Job Timeline",
      "description": "[Job Timeline](#tag/Job-Timeline) show upcoming changes and current information about a [Job](#tag/Jobs)."
    },
    {
      "name": "Locations",
      "description": "Locations can be configured as text strings with parent -> child relationships. For example, `Australia` -> `Brisbane` -> `Spring Hill Head Office`. These locations are used for filtering in analytics. Every [Job](#tag/Jobs) in the system belongs to a [Location](#tag/Locations) or the `No Location` Location."
    },
    {
      "name": "Pay Grades",
      "description": "Pay Grades are optional attributes applied to a job to provide a salary range for analytical purposes. These are configurable for admins in the intelliHR application. Every [Job](#tag/Jobs) in the system belongs to a [Pay Grade](#tag/Pay-Grades) or the `No Pay Grade` Pay Grade."
    },
    {
      "name": "People",
      "description": "People represent the base objects in the intelliHR data model. All past, present and future employees should be created as a Person and then have a Job created which references that Person object. Contact information for the employee (eg emergency contact, phone numbers, email addresses, etc) is referenced to the Person object. While Jobs can have scheduled updates which will take effect in the future, People are always static in the system and will not change unless updated."
    },
    {
      "name": "People Images",
      "description": "[People Images](#tag/People-Images) are used to assign and update Images to an existing [Person](#tag/People)."
    },
    {
      "name": "People Skills",
      "description": "[People Skills](#tag/People-Skills) are used to assign and update [Skills](#tag/Skills) to an existing [Person](#tag/People)."
    },
    {
      "name": "Permission Groups",
      "description": "[Permission Groups](#tag/Permission-Groups)."
    },
    {
      "name": "People Documents",
      "description": "[People Document](#tag/People-Documents) is an object which represents the document stored in the \"Documents\" tab in Person Profile in intelliHR system. You can upload a document through this API by following the steps below. <p>1. Create a presigned upload URL which enables you to upload a document to S3 by using [Create a presigned upload URL](#tag/Person-Documents/paths/~1people-documents/post) endpoint. <br/>2. Upload a document to the S3 presigned URL with HTTP PUT method. <br/>3. Mark the upload status successful with [Update a Document](#tag/Person-Documents/paths/~1people-documents~1{id}/patch) endpoint.</p>These steps can be automatically handled by [Zapier](https://zapier.com/apps/intellihr/integrations) \"Upload Person Document\" action."
    },
    {
      "name": "Person Documents (deprecated)",
      "description": "Note that this has been <b>deprecated</b>, it is recommended to use [People Document](#tag/People-Documents)</br>[Person Document](#tag/Person-Documents) is an object which represents the document stored in the \"Documents\" tab in Person Profile in intelliHR system. You can upload a document through this API by following the steps below. <p>1. Create a presigned upload URL which enables you to upload a document to S3 by using [Create a presigned upload URL](#tag/Person-Documents/paths/~1person-documents/post) endpoint. <br/>2. Upload a document to the S3 presigned URL with HTTP PUT method. <br/>3. Mark the upload status successful with [Update a Document](#tag/Person-Documents/paths/~1person-documents~1{id}/patch) endpoint.</p>These steps can be automatically handled by [Zapier](https://zapier.com/apps/intellihr/integrations) \"Upload Person Document\" action."
    },
    {
      "name": "Position Titles",
      "description": "Position Titles that exist within the organisation. Position Title are assigned to [Jobs](#tag/jobs)."
    },
    {
      "name": "Qualification Instances",
      "description": "[Qualification Instance](#tag/Qualification-Instances) represents an instance of a qualification library item."
    },
    {
      "name": "Qualification Statuses",
      "description": "[Qualification Status](#tag/Qualification-Statuses) represents the current status of the qualification instance."
    },
    {
      "name": "Qualification Library Items",
      "description": "[Qualification Library Item](#tag/Qualification-Library-Items) represent a type of qualification. E.g. A Drivers license."
    },
    {
      "name": "Qualification Types",
      "description": "[Qualification Type](#tag/Qualification-Types) represent a type of qualification. E.g. A License"
    },
    {
      "name": "Recruitment Sources",
      "description": "Recruitment sources refer to the origin of this employee, such as a job board or a recruitment agency. These are configured as text strings in the intelliHR application and are used as filters for analytical purposes. [Recruitment Sources](#tag/Recruitment-Sources) can be configured as text strings with parent -> child relationships."
    },
    {
      "name": "Representative Types",
      "description": "[Representative Type](#tag/Representative-Types) represent a type of representative for a certain intelliHR Object type."
    },
    {
      "name": "Skills",
      "description": "[Skills](#tag/Skills) are used to catalogue the Skills available in the organisation and whether they are business critical.  Skills are categorised into groups with each belonging to a parent [Skill Discipline](#tag/Skill-Disciplines).  Skills can be assigned to a [Person](#tag/People) to facilitate the tracking of competencies across teams and the organisation."
    },
    {
      "name": "Skill Disciplines",
      "description": "Skill Disciplines that exist within the organisation. Skill Disciplines are used to categorise [Skills](#tag/skills) and can contain multiple child skills."
    },
    {
      "name": "Training Providers",
      "description": "[Training Providers](#tag/Training-Providers) are used in the system to document what/who provided the [Training](#tag/trainings)."
    },
    {
      "name": "Trainings",
      "description": "[Trainings](#tag/Trainings) are used in the system to store details about individual training events."
    },
    {
      "name": "Training Statuses",
      "description": "[Training Statuses](#tag/Training-Statuses) are used in the system to define the progress of a [Training](#tag/Trainings) record."
    },
    {
      "name": "Training Types",
      "description": "[Training Types](#tag/Training-Types) are used in the system to document the category of a [Training](#tag/Trainings) record."
    },
    {
      "name": "Users",
      "description": "A [User](#tag/Users) account gives employees access to the intelliHR platform and is linked to an existing Person.\n  A Person can exist without a User, as employees can still complete tasks sent to their primary email address."
    },
    {
      "name": "Work Classes",
      "description": "Work Classes are a sub-class of Work Types. For example, the `Permanent` Work Type has both `Full-Time` and `Part-Time` Work Classes. These are used for to configure automation and analytics filters. Every [Job](#tag/Jobs) in the system belongs to a [Work Class](#tag/Work-Classes)."
    },
    {
      "name": "Workflow Events",
      "description": "A [Workflow Events](#tag/Workflow-events) is a triggered event within the intelliHR platform, associated to certain events such as job changes (eg onboarding, offboarding, going on extended leave), or by specific events (eg a training event).\n\n[Workflows](#tag/Workflows) can be created within intelliHR and assigned under a specific Workflow Event."
    },
    {
      "name": "Workflows",
      "description": "A [Workflow](#tag/workflows) is a pre-set schedule of tasks that will be assigned to various people at different points in time.\n\nThey are triggered by an action within the system and all the tasks created relate to a single subject person.\nWorkflows use the date of an action or change in the system as a starting point to calculate when forms are assigned. Multiple WorkFlows can be part of the same [Workflow Event](#tag/Workflow-events)."
    },
    {
      "name": "Work Rights",
      "description": "[Work Rights](#tag/Work-Rights) are the organization-wide work rights."
    },
    {
      "name": "Work Types",
      "description": "Work Types represent the primary work classification for a job. It is one of the types `Permanent`, `Fixed Contract`, `Unpaid` or `Temporary/Casual`. This attribute is always used with the Work Class attribute which is a sub class of Work Type. Every [Job](#tag/Jobs) in the system belongs to a [Work Type](#tag/Work-Types)."
    },
    {
      "name": "Webhook Events",
      "description": "[Webhook Events](#tag/Webhook-Events) are hardcoded events which occur within the intelliHR platform which can be subscribed to using [Webhooks](#tag/Webhooks).\n\n  As an example, person.created is a [Webhook Event](#tag/Webhook-Events), which can trigger a [Webhook](#tag/Webhooks) when a [Person](#tag/People) is created within the platform."
    },
    {
      "name": "Webhooks",
      "description": "[Webhooks](#tag/Webhooks) are used in the system to allow developers and integration platforms (such as [Zapier](https://zapier.com/)) to subscribe to a [Webhook Event](#tag/Webhook-Events), such as a person.updated or person.created event.\n\nWhen the [Webhook Event](#tag/Webhook-Events) is triggered, the system will send a payload to the endpoint specified when creating the [Webhook](#tag/Webhooks).\n\nThese [Webhooks](#tag/Webhooks) follow the [Rest Hook](https://resthooks.org/) pattern.\n\n# Event Types\nThe following properties are always returned for every payload and event type. An event type may include more properties than this.<br>\nPlease check the specific event/s you would like to implement for the full schema.\n<SchemaDefinition schemaRef=\"#/components/schemas/webhookEvent\" />\n\n## job.created\nFired when a job has been created.\n<SchemaDefinition schemaRef=\"#/components/schemas/webhookJobCreated\" />\n\n## job.deleted\nFired when a job has been deleted.\n<SchemaDefinition schemaRef=\"#/components/schemas/webhookJobDeleted\" />\n\n## job.updated\n**This event does not fire anymore, please update your implementation.**<br>\n~~Fired when a job has been updated.~~\n\n## job.update_scheduled\nFired when an update has been scheduled for a job.\n<SchemaDefinition schemaRef=\"#/components/schemas/webhookEventJobUpdatedScheduled\" />\n\n## job.timeline_updated\nFired on the day when an update of the job has taken into effect.\n\nEg. if a job update is scheduled for 31/03/2025, this event will fire on 31/03/2025. Similarly, if there is a job update in the present date, this event also will fire.\n<SchemaDefinition schemaRef=\"#/components/schemas/webhookJobTimelineUpdated\" />\n\n## job.ended\nFired when when the job has been ended.\n<SchemaDefinition schemaRef=\"#/components/schemas/webhookJobEnded\" />\n\n## job.end_date_adjusted\nFires when when the job end date has been adjusted, but before being finalised.\n<SchemaDefinition schemaRef=\"#/components/schemas/webhookJobEndDateAdjusted\" />\n\n## job.end_date_finalised\nFired when when the job end date has been finalised.\n<SchemaDefinition schemaRef=\"#/components/schemas/webhookJobEndDateFinalised\" />\n\n## job.end_date_cancelled\nFired when when a job end date that had been finalised, was cancelled.\n<SchemaDefinition schemaRef=\"#/components/schemas/webhookJobEndDateCancelled\" />\n\n## job.effective_dates_updated\nFires when when the effective dates of the job have been updated.\n<SchemaDefinition schemaRef=\"#/components/schemas/webhookJobEffectiveDatesUpdated\" />\n\n## job.company_start_date_upcoming\nFires at set offsets before and including the job company start date.\n<SchemaDefinition schemaRef=\"#/components/schemas/webhookJobStartDateUpcoming\" />\n\n## job_remuneration.update_scheduled\nFired when an update has been scheduled for a jobs remuneration.\n<SchemaDefinition schemaRef=\"#/components/schemas/webhookEventJobRemUpdatedScheduled\" />\n\n## person.birthday_upcoming\nFired at certain intervals before a persons birthday and the date of their birthday.\nIntervals are 1 month before, 14 days before, 7 days before, 3 days before, 1 day before and on the day of.\n<SchemaDefinition schemaRef=\"#/components/schemas/webhookEventPersonBirthdayUpcoming\" />\n\n## person.created\nFired when a person has been created.\n<SchemaDefinition schemaRef=\"#/components/schemas/webhookEventBasic\" />\n\n## person.deleted\nFired when a person has been deleted.\n<SchemaDefinition schemaRef=\"#/components/schemas/webhookPersonDeleted\" />\n\n## person.updated\nFired when a person has been updated.\n<SchemaDefinition schemaRef=\"#/components/schemas/webhookEventPersonUpdated\" />\n\n## training.created\nFired when a training is created.\n<SchemaDefinition schemaRef=\"#/components/schemas/webhookTrainingCreated\" />\n\n## training.deleted\nFired when a training has been deleted.\n<SchemaDefinition schemaRef=\"#/components/schemas/webhookTrainingDeleted\" />\n\n## training.updated\nFired when a training has been updated.\n<SchemaDefinition schemaRef=\"#/components/schemas/webhookTrainingUpdated\" />\n\n## form.created\nFired when an instance of a form has been created.\n<SchemaDefinition schemaRef=\"#/components/schemas/webhookFormCreated\" />\n\n## form.completed\nFired when a instance of a form has been completed.\n<SchemaDefinition schemaRef=\"#/components/schemas/webhookEventFormCompleted\" />\n\n## user.created\nFired when a user has been created.\n<SchemaDefinition schemaRef=\"#/components/schemas/webhookUserCreated\" />\n\n## user.deleted\nFired when a user has been deleted.\n<SchemaDefinition schemaRef=\"#/components/schemas/webhookUserDeleted\" />\n\n## user.disabled\nFired when a user has been disabled.\n<SchemaDefinition schemaRef=\"#/components/schemas/webhookUserDisabled\" />\n\n## user.disabled_upcoming\nFired at set offsets before the user is scheduled to be disabled.\n<SchemaDefinition schemaRef=\"#/components/schemas/webhookUserDisabledUpcoming\" />\n\n## user.updated\nFired when a user has been updated.\n<SchemaDefinition schemaRef=\"#/components/schemas/webhookUserUpdated\" />\n\n## qualification.instance_created\nFired when a qualification instance has been created.\n<SchemaDefinition schemaRef=\"#/components/schemas/webhookQualificationCreated\" />\n\n## qualification.instance_updated\nFired when a qualification instance has been updated.\n<SchemaDefinition schemaRef=\"#/components/schemas/webhookQualificationUpdated\" />\n  "
    }
  ]
}