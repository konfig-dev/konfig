{
  "openapi": "3.0.0",
  "info": {
    "title": "SoftLedger Accounting API v2",
    "contact": {
      "email": "support@softledger.com"
    },
    "version": "1.0.0",
    "x-logo": {
      "url": "https://sl-ui-assets.s3.amazonaws.com/images/SoftLedger+Logo+White.png"
    }
  },
  "servers": [
    {
      "url": "https://api.softledger.com/v2",
      "description": "Production(US)"
    },
    {
      "url": "https://eu-api.softledger.com/v2",
      "description": "Europe"
    }
  ],
  "security": [
    {
      "OAuth2": []
    }
  ],
  "components": {
    "securitySchemes": {
      "OAuth2": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://auth.accounting-auth.com/oauth/token",
            "scopes": {}
          }
        }
      }
    },
    "schemas": {
      "CountResponse": {
        "type": "object",
        "properties": {
          "count": {
            "type": "string",
            "format": "number",
            "description": "Result could be a bigint, so returns as string"
          },
          "estimate": {
            "type": "boolean"
          }
        }
      },
      "BillSearchItem": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "integer"
          },
          "status": {
            "type": "string",
            "enum": [
              "created",
              "approved",
              "partiallyPaid",
              "paid",
              "voided"
            ]
          },
          "approvalStatus": {
            "type": "string",
            "enum": [
              "unapproved",
              "partiallyApproved",
              "approved"
            ]
          },
          "paymentStatus": {
            "type": "string",
            "enum": [
              "unpaid",
              "partiallyPaid",
              "paid"
            ]
          },
          "externalId": {
            "type": "string"
          },
          "invoiceNumber": {
            "type": "string",
            "format": "number"
          },
          "invoiceDate": {
            "type": "string",
            "format": "date"
          },
          "postedDate": {
            "type": "string",
            "format": "date"
          },
          "dueDate": {
            "type": "string",
            "format": "date"
          },
          "notes": {
            "type": "string"
          },
          "attachments": {
            "type": "array",
            "description": "Links to any attached documents",
            "items": {
              "type": "string",
              "format": "uri"
            }
          },
          "approved_on": {
            "type": "string",
            "format": "date"
          },
          "approved_name": {
            "type": "string"
          },
          "approved_email": {
            "type": "string",
            "format": "email"
          },
          "reference": {
            "type": "string"
          },
          "currency": {
            "type": "string",
            "format": "ISO4217 3 Char Code"
          },
          "amount": {
            "type": "string",
            "format": "number"
          },
          "dueAmount": {
            "type": "string",
            "format": "number",
            "description": "Amount left to pay"
          },
          "customFields": {
            "type": "object",
            "description": "Key -> Value hash of custom fields"
          },
          "SystemJobId": {
            "type": "string",
            "description": "Ref: SystemJob._id"
          },
          "LocationId": {
            "type": "integer",
            "description": "Ref: Location._id"
          },
          "Location": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "ICLocationId": {
            "type": "integer",
            "description": "Ref: Location._id"
          },
          "ICLocation": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "VendorId": {
            "type": "integer",
            "description": "Ref: Vendor._id"
          },
          "Vendor": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Ref: Vendor.name"
              }
            }
          },
          "APAccountId": {
            "type": "integer",
            "description": "Ref: LedgerAccount._id"
          },
          "APAccount": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "number": {
                "type": "string"
              }
            }
          },
          "PurchaseOrderId": {
            "type": "integer",
            "description": "Ref: PurchaseOrder._id"
          },
          "PurchaseOrder": {
            "type": "object",
            "properties": {
              "number": {
                "type": "string",
                "description": "Ref: PurchaseOrder.number"
              }
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "InvoiceList": {
        "type": "object",
        "properties": {
          "hasNextPage": {
            "type": "boolean",
            "description": "true if there are more pages"
          },
          "cursor": {
            "type": "string",
            "description": "Send in next query to page forward"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "integer"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "created",
                    "issued",
                    "partialPayment",
                    "paid",
                    "voided"
                  ]
                },
                "externalId": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "invoiceDate": {
                  "type": "string",
                  "format": "date"
                },
                "postedDate": {
                  "type": "string",
                  "format": "date"
                },
                "dueDate": {
                  "type": "string",
                  "format": "date"
                },
                "notes": {
                  "type": "string"
                },
                "customFields": {
                  "type": "object",
                  "description": "Key -> Value hash of custom fields, must be defined via the UI to show up in the UI"
                },
                "attachments": {
                  "type": "array",
                  "description": "Links to any attached documents",
                  "items": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "approved_on": {
                  "type": "string",
                  "format": "date"
                },
                "approved_name": {
                  "type": "string"
                },
                "approved_email": {
                  "type": "string",
                  "format": "email"
                },
                "reference": {
                  "type": "string"
                },
                "currency": {
                  "type": "string",
                  "format": "ISO4217 3 Char Code"
                },
                "amount": {
                  "type": "string",
                  "format": "number"
                },
                "amountPayable": {
                  "type": "string",
                  "format": "number",
                  "description": "Amount left to pay"
                },
                "SystemJobId": {
                  "type": "string",
                  "description": "Ref: SystemJob._id"
                },
                "LocationId": {
                  "type": "integer",
                  "description": "Ref: Location._id"
                },
                "Location": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "ICLocationId": {
                  "type": "integer",
                  "description": "Ref: Location._id"
                },
                "ICLocation": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "CustomerId": {
                  "type": "integer",
                  "description": "Ref: Customer._id"
                },
                "Customer": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "number"
                    },
                    "name": {
                      "type": "string",
                      "description": "Ref: Customer.name"
                    }
                  }
                },
                "ShippingAddressId": {
                  "type": "integer",
                  "description": "Ref: Address._id"
                },
                "ShippingAddress": {
                  "type": "object",
                  "properties": {
                    "label": {
                      "type": "string"
                    },
                    "line1": {
                      "type": "string"
                    },
                    "line2": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "zip": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    }
                  }
                },
                "BillingAddressId": {
                  "type": "integer",
                  "description": "Ref: Address._id"
                },
                "BillingAddress": {
                  "type": "object",
                  "properties": {
                    "label": {
                      "type": "string"
                    },
                    "line1": {
                      "type": "string"
                    },
                    "line2": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "zip": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    }
                  }
                },
                "ARAccountId": {
                  "type": "integer",
                  "description": "Ref: LedgerAccount._id"
                },
                "ARAccount": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "number": {
                      "type": "string"
                    }
                  }
                },
                "TemplateId": {
                  "type": "integer",
                  "description": "Ref: Template._id"
                },
                "SalesOrderId": {
                  "type": "integer",
                  "description": "Ref: SalesOrder._id"
                },
                "SalesOrder": {
                  "type": "object",
                  "properties": {
                    "number": {
                      "type": "string",
                      "description": "Ref: SalesOrder.number"
                    }
                  }
                },
                "ICJournalId": {
                  "type": "integer",
                  "description": "Ref: Journal._id\n\nID of the IC Journal entry booked for this invoice\n"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        }
      },
      "PaymentList": {
        "type": "object",
        "properties": {
          "hasNextPage": {
            "type": "boolean",
            "description": "true if there are more pages"
          },
          "cursor": {
            "type": "string",
            "description": "Send in next query to page forward"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "integer"
                },
                "externalId": {
                  "type": "string"
                },
                "externalCheckId": {
                  "type": "string"
                },
                "externalCheckBankId": {
                  "type": "string"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "manual",
                    "vendorcredit",
                    "cashreceipt",
                    "refund",
                    "ap_refund"
                  ]
                },
                "checkNumber": {
                  "type": "string"
                },
                "number": {
                  "type": "string"
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "created",
                    "approved",
                    "voided"
                  ]
                },
                "amount": {
                  "type": "string",
                  "format": "number"
                },
                "paymentDate": {
                  "type": "string",
                  "format": "date"
                },
                "postedDate": {
                  "type": "string",
                  "format": "date"
                },
                "memo": {
                  "type": "string"
                },
                "notes": {
                  "type": "string"
                },
                "attachments": {
                  "type": "array",
                  "description": "Links to any attached documents",
                  "items": {
                    "type": "string",
                    "format": "uri"
                  }
                },
                "currency": {
                  "type": "string",
                  "description": "Ref: Currency.code"
                },
                "BillId": {
                  "type": "integer",
                  "description": "Ref: Bill._id"
                },
                "VendorCreditId": {
                  "type": "integer",
                  "description": "Ref: VendorCredit._id"
                },
                "LedgerAccountId": {
                  "type": "integer",
                  "description": "Ref: LedgerAccount._id"
                },
                "CashReceiptId": {
                  "type": "integer",
                  "description": "Ref: CashReceipt._id"
                },
                "AddressId": {
                  "type": "integer",
                  "description": "Ref: Address._id"
                },
                "LocationId": {
                  "type": "integer",
                  "description": "Ref: Location._id"
                },
                "InvoiceId": {
                  "type": "integer",
                  "description": "Ref: Invoice._id"
                },
                "VendorId": {
                  "type": "integer",
                  "description": "Ref: Vendor._id"
                },
                "CustomerId": {
                  "type": "integer",
                  "description": "Ref: Customer._id"
                },
                "BatchPaymentId": {
                  "type": "integer",
                  "description": "Ref: BatchPayment._id"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "Address": {
                  "type": "object",
                  "properties": {
                    "isDefault": {
                      "type": "boolean"
                    },
                    "label": {
                      "type": "string"
                    },
                    "line1": {
                      "type": "string"
                    },
                    "line2": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "zip": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    }
                  }
                },
                "Vendor": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string",
                      "format": "email"
                    },
                    "nameOnCheck": {
                      "type": "string"
                    }
                  }
                },
                "Bill": {
                  "type": "object",
                  "properties": {
                    "invoiceNumber": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    }
                  }
                },
                "Invoice": {
                  "type": "object",
                  "properties": {
                    "number": {
                      "type": "string"
                    },
                    "reference": {
                      "type": "string"
                    }
                  }
                },
                "Customer": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string",
                      "format": "email"
                    }
                  }
                },
                "VendorCredit": {
                  "type": "object",
                  "properties": {
                    "number": {
                      "type": "string"
                    }
                  }
                },
                "CashReceipt": {
                  "type": "object",
                  "properties": {
                    "number": {
                      "type": "string"
                    }
                  }
                },
                "Location": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "LedgerAccount": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "number": {
                      "type": "string"
                    }
                  }
                },
                "BatchPayment": {
                  "type": "object",
                  "properties": {
                    "referenceNumber": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "StockAdjustmentSearchItem": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "integer"
          },
          "ItemId": {
            "type": "integer",
            "description": "Ref: Item._id"
          },
          "description": {
            "type": "string"
          },
          "WarehouseId": {
            "type": "integer",
            "description": "Ref: Warehouse._id"
          },
          "locked": {
            "type": "boolean"
          },
          "transactionDate": {
            "type": "string",
            "format": "date"
          },
          "postedDate": {
            "type": "string",
            "format": "date"
          },
          "AdjustmentLedgerAccountId": {
            "type": "integer",
            "description": "Ref: LedgerAccount._id"
          },
          "JournalId": {
            "type": "integer",
            "description": "Ref: Journal._id"
          },
          "type": {
            "type": "string",
            "enum": [
              "fulfill",
              "receive",
              "adjustment",
              "transfer",
              "production",
              "return",
              "voidreceive",
              "unfulfill"
            ]
          },
          "TransferId": {
            "type": "integer",
            "description": "Ref: Transfer._id"
          },
          "POLineItemId": {
            "type": "integer",
            "description": "Ref: POLineItem._id"
          },
          "SOLineItemId": {
            "type": "integer",
            "description": "Ref: SOLineItem._id"
          },
          "PurchaseOrderId": {
            "type": "integer",
            "description": "Ref: PurchaseOrder._id"
          },
          "SalesOrderId": {
            "type": "integer",
            "description": "Ref: SalesOrder._id"
          },
          "ShipmentReceiptLineId": {
            "type": "integer",
            "description": "Ref: ShipmentReceiptLine._id"
          },
          "quantity": {
            "type": "string",
            "format": "number"
          },
          "qtyPicked": {
            "type": "string",
            "format": "number"
          },
          "qtyAvailable": {
            "type": "string",
            "format": "number"
          },
          "currency": {
            "type": "string",
            "description": "Ref: Currency._id"
          },
          "price": {
            "type": "string",
            "format": "number"
          },
          "currencyRate": {
            "type": "string",
            "format": "number"
          },
          "costBasis": {
            "type": "string",
            "format": "number"
          },
          "AdjustmentLedgerAccount": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "number": {
                "type": "string"
              }
            }
          },
          "Item": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "number": {
                "type": "string"
              },
              "sku": {
                "type": "string"
              }
            }
          },
          "Warehouse": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              }
            }
          },
          "PurchaseOrder": {
            "type": "object",
            "properties": {
              "number": {
                "type": "string"
              }
            }
          },
          "SalesOrder": {
            "type": "object",
            "properties": {
              "number": {
                "type": "string"
              }
            }
          },
          "Journal": {
            "type": "object",
            "properties": {
              "number": {
                "type": "integer"
              }
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date"
          },
          "updatedAt": {
            "type": "string",
            "format": "date"
          }
        }
      }
    },
    "parameters": {
      "id": {
        "in": "path",
        "name": "id",
        "description": "id value",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "objectType": {
        "in": "query",
        "name": "objectType",
        "description": "Dimension Object Type",
        "required": true,
        "schema": {
          "type": "string",
          "enum": [
            "Invoice",
            "PurchaseOrder",
            "SalesOrder"
          ]
        }
      },
      "objectId": {
        "in": "query",
        "name": "objectId",
        "description": "Dimension Object Id",
        "required": true,
        "schema": {
          "type": "integer"
        }
      },
      "where": {
        "name": "where",
        "in": "query",
        "description": "JSON Key:Value object to filter results on",
        "schema": {
          "type": "string"
        }
      },
      "filter": {
        "name": "filter",
        "in": "query",
        "description": "JSON Key:Value object to filter results on",
        "schema": {
          "type": "string"
        }
      },
      "filterType": {
        "name": "filterType",
        "in": "query",
        "description": "Results will match \"all\" filters or just \"any\" of the passed filters",
        "schema": {
          "type": "string",
          "enum": [
            "all",
            "any"
          ],
          "default": "all"
        }
      },
      "status": {
        "name": "status",
        "in": "query",
        "description": "Results will return `active` or `inactive` based on the objects `inactive` property. If not set all results will be returned.",
        "schema": {
          "type": "string",
          "enum": [
            "active",
            "inactive"
          ]
        }
      },
      "offset": {
        "name": "offset",
        "in": "query",
        "description": "number of records to skip",
        "schema": {
          "type": "integer",
          "default": 0
        }
      },
      "limit": {
        "name": "limit",
        "in": "query",
        "description": "Maximum number of records to return.",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "maximum": 1000,
          "default": 25
        }
      },
      "cursor": {
        "name": "cursor",
        "in": "query",
        "description": "Cursor key to page forwards from. Must be populated from the result of a previous query call.\n",
        "schema": {
          "type": "string"
        }
      },
      "LocationId": {
        "name": "LocationId",
        "in": "query",
        "description": "Will include items from this Location and its children\n\nFilters on LocationId can further limit data.\n",
        "schema": {
          "type": "number",
          "description": "Ref: Location._id"
        }
      }
    }
  },
  "paths": {
    "/oauth/token": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Request Token",
        "description": "Request OAuth Token\n- URL for this request should be `https://auth.accounting-auth.com/oauth/token` for Production\n- URL for this request should be `https://eu.accounting-auth.com/oauth/token` for Europe\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "grant_type",
                  "audience",
                  "tenantUUID",
                  "client_id",
                  "client_secret"
                ],
                "properties": {
                  "grant_type": {
                    "type": "string",
                    "description": "The OAuth grant type used to generate the toekn.\n- Should be set to `client_credentials`\n"
                  },
                  "tenantUUID": {
                    "type": "string",
                    "description": "The Tenant UUID to request data for\n"
                  },
                  "audience": {
                    "type": "string",
                    "description": "API reference. This will be provided along with your client_id and client_secret."
                  },
                  "client_id": {
                    "type": "string",
                    "description": "The Client ID of the OAuth client"
                  },
                  "client_secret": {
                    "type": "string",
                    "description": "The Client Secret of the OAuth client"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authentication Token Details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {
                      "type": "string",
                      "description": "Access token to be passed in all API requests"
                    },
                    "expires_in": {
                      "type": "integer",
                      "description": "Seconds until token expires"
                    },
                    "scope": {
                      "type": "string",
                      "description": "List of scopes available"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reports/accountBalance": {
      "post": {
        "tags": [
          "Financials"
        ],
        "summary": "Account Balance by Currency",
        "description": "Returns the consolidated balance of the Ledger Account passed broken down by currency.\nBalance Sheet accounts include all transactions until endDate\nIncome Statement accounts include all transactions from start of accounting year until endDate\n",
        "requestBody": {
          "description": "Account Balance Request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "LocationId",
                  "LedgerAccountId",
                  "endDate",
                  "accountType"
                ],
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "Journal status, if not set, all journals used",
                    "enum": [
                      "posted",
                      "draft"
                    ]
                  },
                  "LocationId": {
                    "type": "integer"
                  },
                  "LedgerAccountId": {
                    "type": "integer"
                  },
                  "startDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Only used if accountType is Revenue/Expense"
                  },
                  "endDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "accountType": {
                    "type": "string",
                    "enum": [
                      "Asset",
                      "Revenue",
                      "Expense",
                      "Liability",
                      "Equity"
                    ]
                  },
                  "consolidated": {
                    "type": "boolean",
                    "description": "If true, returns consolidated balance of all locations, false returns balance just for that location"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Account Balance",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "currency": {
                        "type": "string",
                        "example": "USD"
                      },
                      "balance": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reports/aging/bills": {
      "post": {
        "tags": [
          "Financials"
        ],
        "summary": "AP Aging Bills",
        "description": "Returns list of approved but not fully paid bills for the specified Vendor.\n",
        "requestBody": {
          "description": "AP Aging Bill Request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "locationId",
                  "vendorId",
                  "date"
                ],
                "properties": {
                  "locationId": {
                    "type": "integer"
                  },
                  "vendorId": {
                    "type": "integer"
                  },
                  "date": {
                    "type": "string",
                    "format": "date",
                    "description": "return all bills with postedDate <= date"
                  },
                  "offset": {
                    "type": "integer",
                    "default": 0
                  },
                  "limit": {
                    "type": "integer",
                    "default": 25,
                    "description": "min 1, max 100"
                  },
                  "consolidated": {
                    "type": "boolean",
                    "default": false
                  },
                  "includeDraft": {
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "AP Aging Bills",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "integer",
                            "description": "Bill \"_id\""
                          },
                          "invoiceNumber": {
                            "type": "string",
                            "description": "Bill Invoice Number"
                          },
                          "reference": {
                            "type": "string",
                            "description": "Bill reference"
                          },
                          "invoiceDate": {
                            "type": "string",
                            "format": "date",
                            "description": "Bill Invoice date"
                          },
                          "amount": {
                            "type": "string",
                            "format": "number",
                            "example": 1,
                            "description": "Bill due amount"
                          },
                          "currency": {
                            "type": "string",
                            "description": "currency bill is in",
                            "example": "USD"
                          }
                        }
                      }
                    },
                    "totalItems": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reports/aging/Invoices": {
      "post": {
        "tags": [
          "Financials"
        ],
        "summary": "AR Aging Invoices",
        "description": "Returns list of issued but not fully paid invoices for the specified Customer/Agent.\n",
        "requestBody": {
          "description": "AR Aging Invoice Request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "locationId",
                  "customerId",
                  "date"
                ],
                "properties": {
                  "locationId": {
                    "type": "integer"
                  },
                  "customerId": {
                    "type": "integer",
                    "description": "Customer/Agent \"_id\""
                  },
                  "date": {
                    "type": "string",
                    "format": "date",
                    "description": "return all invoices with invoiceDate <= date"
                  },
                  "offset": {
                    "type": "integer",
                    "default": 0
                  },
                  "limit": {
                    "type": "integer",
                    "default": 25,
                    "description": "min 1, max 100"
                  },
                  "consolidated": {
                    "type": "boolean",
                    "default": false
                  },
                  "includeDraft": {
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "AR Aging Invoices",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "integer",
                            "description": "Invoice \"_id\""
                          },
                          "number": {
                            "type": "string",
                            "description": "Invoice number"
                          },
                          "reference": {
                            "type": "string",
                            "description": "Invoice reference"
                          },
                          "invoiceDate": {
                            "type": "string",
                            "format": "date",
                            "description": "Invoice Invoice date"
                          },
                          "amount": {
                            "type": "string",
                            "format": "number",
                            "description": "Invoice due amount",
                            "example": "1"
                          },
                          "currency": {
                            "type": "string",
                            "description": "currency Invoice is in",
                            "example": "USD"
                          }
                        }
                      }
                    },
                    "totalItems": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reports/aging/ap": {
      "post": {
        "tags": [
          "Financials"
        ],
        "summary": "AP Aging",
        "description": "Returns list of approved but not fully paid bills. Grouped by date range\n",
        "requestBody": {
          "description": "AP Aging request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "locationId",
                  "currency",
                  "start"
                ],
                "properties": {
                  "locationId": {
                    "type": "integer"
                  },
                  "currency": {
                    "type": "string",
                    "description": "currency to display results in",
                    "example": "USD"
                  },
                  "start": {
                    "type": "string",
                    "format": "date"
                  },
                  "consolidated": {
                    "type": "boolean",
                    "default": true
                  },
                  "includeDraft": {
                    "type": "boolean",
                    "default": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "AP Aging",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "0": {
                        "type": "number",
                        "description": "Balance from 0-30 days"
                      },
                      "1": {
                        "type": "number",
                        "description": "Balance from 31-30 days"
                      },
                      "2": {
                        "type": "number",
                        "description": "Balance from 61-90 days"
                      },
                      "3": {
                        "type": "number",
                        "description": "Balance from 91-120 days"
                      },
                      "4": {
                        "type": "number",
                        "description": "Balance from 121-150 days"
                      },
                      "5": {
                        "type": "number",
                        "description": "Balance from 150+ days"
                      },
                      "_id": {
                        "type": "integer",
                        "description": "Vendor \"_id\""
                      },
                      "id": {
                        "type": "string",
                        "description": "Vendor \"id\""
                      },
                      "name": {
                        "type": "string",
                        "description": "Vendor \"name\""
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reports/aging/ar": {
      "post": {
        "tags": [
          "Financials"
        ],
        "summary": "AR Aging",
        "description": "Returns list of issued but not fully paid invoices. Grouped by date range\n",
        "requestBody": {
          "description": "AR Aging request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "locationId",
                  "currency",
                  "start"
                ],
                "properties": {
                  "locationId": {
                    "type": "integer"
                  },
                  "currency": {
                    "type": "string",
                    "description": "currency to display results in",
                    "example": "USD"
                  },
                  "start": {
                    "type": "string",
                    "format": "date"
                  },
                  "consolidated": {
                    "type": "boolean",
                    "default": true
                  },
                  "includeDraft": {
                    "type": "boolean",
                    "default": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "AR Aging",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "0": {
                        "type": "number",
                        "description": "Balance from 0-30 days"
                      },
                      "1": {
                        "type": "number",
                        "description": "Balance from 31-30 days"
                      },
                      "2": {
                        "type": "number",
                        "description": "Balance from 61-90 days"
                      },
                      "3": {
                        "type": "number",
                        "description": "Balance from 91-120 days"
                      },
                      "4": {
                        "type": "number",
                        "description": "Balance from 121-150 days"
                      },
                      "5": {
                        "type": "number",
                        "description": "Balance from 150+ days"
                      },
                      "_id": {
                        "type": "integer",
                        "description": "Customer/Agent \"_id\""
                      },
                      "id": {
                        "type": "string",
                        "description": "Customer/Agent \"id\""
                      },
                      "name": {
                        "type": "string",
                        "description": "Customer/Agent \"name\""
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reports/financialFormula": {
      "post": {
        "tags": [
          "Financials"
        ],
        "summary": "Current Period Income",
        "description": "Returns current period income calculation for specified report type for the startDate -> endDate.\n",
        "requestBody": {
          "description": "Current Period Income Request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "colType",
                  "startDate",
                  "endDate",
                  "locationId",
                  "currency",
                  "formulaType"
                ],
                "properties": {
                  "formulaType": {
                    "type": "string",
                    "enum": [
                      "currentPeriodIncome"
                    ]
                  },
                  "colType": {
                    "type": "string",
                    "enum": [
                      "Location",
                      "Month",
                      "CostCenter",
                      "Product",
                      "Job",
                      "Customer",
                      "Vendor",
                      "Custom1",
                      "Custom2",
                      "Custom3"
                    ]
                  },
                  "colIds": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "\"_id\" values of the \"colType\" the report is displayed in.                  \n"
                    }
                  },
                  "startDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "endDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "LocationId": {
                    "type": "integer"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "draft",
                      "posted"
                    ]
                  },
                  "currency": {
                    "type": "string",
                    "description": "currency to return value in",
                    "example": "USD"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Current Period Income",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "key: colId\nvalue: balance for the specified colId\n"
                }
              }
            }
          }
        }
      }
    },
    "/reports/financialReport": {
      "post": {
        "tags": [
          "Financials"
        ],
        "summary": "Entity Report",
        "description": "Financial Entity report data of account balances by dimension\n",
        "requestBody": {
          "description": "Entity Report Request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "startDate",
                  "endDate",
                  "LocationId",
                  "currency"
                ],
                "properties": {
                  "startDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "endDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "LocationId": {
                    "type": "integer"
                  },
                  "currency": {
                    "type": "string",
                    "example": "USD"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "posted",
                      "draft"
                    ],
                    "description": "Journal status to return"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Entity Report",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "integer",
                        "description": "Ledger Account \"_id\""
                      },
                      "name": {
                        "type": "string",
                        "description": "Ledger Account \"name\""
                      },
                      "type": {
                        "type": "string",
                        "description": "Ledger Account \"type\""
                      },
                      "subtype": {
                        "type": "string",
                        "description": "Ledger Account \"subtype\""
                      },
                      "LocationId": {
                        "type": "integer"
                      },
                      "parent_path": {
                        "type": "array",
                        "description": "array of the location parent _ids for the given location",
                        "items": {
                          "type": "integer"
                        }
                      },
                      "balance": {
                        "type": "string",
                        "format": "number",
                        "example": "1"
                      },
                      "elimination": {
                        "type": "boolean",
                        "description": "true if it is an elimination balance"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reports/financials": {
      "post": {
        "tags": [
          "Financials"
        ],
        "summary": "Dimension Report",
        "description": "Financial Dimension report data of account balances by dimension\n",
        "requestBody": {
          "description": "Financial Dimension report data request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "startDate",
                  "endDate",
                  "LocationId",
                  "type",
                  "objectIds",
                  "currency"
                ],
                "properties": {
                  "startDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "endDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "currency": {
                    "type": "string",
                    "example": "USD"
                  },
                  "LocationId": {
                    "type": "integer"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "posted",
                      "draft"
                    ],
                    "description": "Journal status to return"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "Customer",
                      "Vendor",
                      "CostCenter",
                      "Product",
                      "Job",
                      "Custom1",
                      "Custom2",
                      "Custom3"
                    ]
                  },
                  "objectIds": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Financial Dimension report data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "integer",
                        "description": "Ledger Account \"_id\""
                      },
                      "name": {
                        "type": "string",
                        "description": "Ledger Account \"name\""
                      },
                      "type": {
                        "type": "string",
                        "description": "Ledger Account \"type\""
                      },
                      "subtype": {
                        "type": "string",
                        "description": "Ledger Account \"subtype\""
                      },
                      "LocationId": {
                        "type": "integer"
                      },
                      "parent_path": {
                        "type": "array",
                        "description": "array of the location parent _ids for the given location",
                        "items": {
                          "type": "integer"
                        }
                      },
                      "balance": {
                        "type": "string",
                        "format": "number",
                        "example": "1"
                      },
                      "objectId": {
                        "type": "integer"
                      },
                      "objectID": {
                        "type": "string"
                      },
                      "objectName": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reports/generalLedger": {
      "post": {
        "tags": [
          "Financials"
        ],
        "summary": "General Ledger",
        "description": "Returns General Ledger Balances for Date Range passed\n",
        "requestBody": {
          "description": "General Ledger Request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "currency",
                  "LocationId",
                  "startDate",
                  "endDate"
                ],
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "Journal status",
                    "enum": [
                      "posted",
                      "draft",
                      "all"
                    ]
                  },
                  "currency": {
                    "type": "string",
                    "description": "Currency to return results in",
                    "example": "USD"
                  },
                  "LocationId": {
                    "type": "integer",
                    "description": "Location to consolidate results for"
                  },
                  "consolidated": {
                    "type": "boolean",
                    "description": "Show consolidated balance by Location"
                  },
                  "startDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "endDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "offset": {
                    "type": "integer",
                    "default": 0
                  },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 99
                  },
                  "order": {
                    "type": "string",
                    "default": "number:DESC"
                  },
                  "where": {
                    "type": "object",
                    "properties": {
                      "or": {
                        "type": "boolean",
                        "description": "true to match any"
                      },
                      "name": {
                        "type": "string"
                      },
                      "number": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "General Ledger",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "integer",
                            "description": "Ledger Account _id"
                          },
                          "number": {
                            "type": "string",
                            "description": "Ledger Account number"
                          },
                          "name": {
                            "type": "string",
                            "description": "Ledger Account name"
                          },
                          "type": {
                            "type": "string",
                            "description": "Ledger Account type"
                          },
                          "naturalBalance": {
                            "type": "string",
                            "enum": [
                              "debit",
                              "credit"
                            ]
                          },
                          "startingBalance": {
                            "type": "string",
                            "format": "number",
                            "example": "1"
                          },
                          "endingBalance": {
                            "type": "string",
                            "format": "number",
                            "example": "1"
                          },
                          "activity": {
                            "type": "string",
                            "format": "number",
                            "example": "1"
                          }
                        }
                      }
                    },
                    "totalItems": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/reports/trialBalance": {
      "post": {
        "tags": [
          "Financials"
        ],
        "summary": "Trial Balance",
        "description": "Returns Trial Balance for Date Ranges passed\nBalance Sheet accounts include all transactions until endDate\nIncome Statement accounts include all transactions from start of accounting year until endDate\n",
        "requestBody": {
          "description": "Trial Balance Request",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "currency",
                  "LocationId",
                  "dateRanges"
                ],
                "properties": {
                  "status": {
                    "type": "string",
                    "description": "Journal status",
                    "enum": [
                      "posted",
                      "draft",
                      "all"
                    ]
                  },
                  "currency": {
                    "type": "string",
                    "description": "Currency to return results in",
                    "example": "USD"
                  },
                  "LocationId": {
                    "type": "integer",
                    "description": "Location to consolidate results for"
                  },
                  "dateRanges": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "start": {
                          "type": "string",
                          "format": "date"
                        },
                        "end": {
                          "type": "string",
                          "format": "date"
                        }
                      }
                    }
                  },
                  "offset": {
                    "type": "integer",
                    "default": 0
                  },
                  "limit": {
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 99
                  },
                  "order": {
                    "type": "string",
                    "default": "number:DESC"
                  },
                  "where": {
                    "type": "object",
                    "properties": {
                      "or": {
                        "type": "boolean",
                        "description": "true to match any"
                      },
                      "name": {
                        "type": "string"
                      },
                      "number": {
                        "type": "string"
                      }
                    }
                  },
                  "DimensionType": {
                    "type": "string",
                    "enum": [
                      "CostCenter",
                      "Product",
                      "Job",
                      "Customer",
                      "Vendor",
                      "Custom1",
                      "Custom2",
                      "Custom3"
                    ]
                  },
                  "DimensionId": {
                    "type": "integer"
                  },
                  "consolidated": {
                    "type": "boolean",
                    "description": "If true, returns consolidated balance of all locations, false returns balance just for that location"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Trial Balance",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "integer",
                            "description": "Ledger Account _id"
                          },
                          "number": {
                            "type": "string",
                            "description": "Ledger Account number"
                          },
                          "name": {
                            "type": "string",
                            "description": "Ledger Account name"
                          },
                          "type": {
                            "type": "string",
                            "description": "Ledger Account type"
                          },
                          "balances": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "format": "number",
                              "example": "1"
                            }
                          }
                        }
                      }
                    },
                    "totalItems": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fx-revalue/rates/{AccountingPeriodId}": {
      "get": {
        "tags": [
          "FX Revalue"
        ],
        "summary": "Get Rates",
        "description": "Returns current rates set for the accouting period revaluation\nThe results are a list of all currencies and their end of period rate\n(example results are two possible currencies)\n",
        "parameters": [
          {
            "in": "path",
            "name": "AccountingPeriodId",
            "description": "AccountingPeriod._id value",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of FX Rates",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "USD": {
                        "type": "number"
                      },
                      "EUR": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "FX Revalue"
        ],
        "summary": "Save Rates",
        "description": "Save the rates for the accounting period\nExample shows rates for two possible currencies. Currencies to save rates for should be obtained from GET fx-revalue/rates/:id\n",
        "parameters": [
          {
            "in": "path",
            "name": "AccountingPeriodId",
            "description": "AccountingPeriod._id value",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Base currency and fx rate currency pairs",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "currency",
                  "rates"
                ],
                "properties": {
                  "currency": {
                    "type": "string",
                    "description": "example \"USD\""
                  },
                  "rates": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "USD": {
                          "type": "number"
                        },
                        "EUR": {
                          "type": "number"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/fx-revalue/adjustments/{AccountingPeriodId}": {
      "post": {
        "tags": [
          "FX Revalue"
        ],
        "summary": "Post Adjustments",
        "description": "Post FX Revaluation entries for the period\n",
        "parameters": [
          {
            "in": "path",
            "name": "AccountingPeriodId",
            "description": "AccountingPeriod._id value",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          }
        }
      },
      "delete": {
        "tags": [
          "FX Revalue"
        ],
        "summary": "Delete Adjustments",
        "description": "Delete FX Revaluation entries for the period\n",
        "parameters": [
          {
            "in": "path",
            "name": "AccountingPeriodId",
            "description": "AccountingPeriod._id value",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/status/{type}": {
      "get": {
        "tags": [
          "Status"
        ],
        "summary": "Get Status",
        "description": "Get the status of a job",
        "parameters": [
          {
            "in": "path",
            "name": "type",
            "description": "API type",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "costbasis",
                "crypto-journals",
                "inventory"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Status of job",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "done",
                        "error",
                        "running",
                        "started"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "costbasis",
                        "crypto-journals",
                        "inventory"
                      ]
                    },
                    "tenantId": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string"
                        },
                        "progress": {
                          "type": "string"
                        },
                        "timestamp": {
                          "type": "string"
                        },
                        "err": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string"
                            },
                            "msg": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/addresses": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "Search",
        "operationId": "addressesSearch",
        "description": "| Field       | Filterable | Sortable |\n|---------------------|:--:|:--:|\n|_id            | ✅ | ✅ |\n|label          | ✅ | ✅ |\n|line1          | ✅ | ❌ |\n|line2          | ✅ | ❌ |\n|city           | ✅ | ❌ |\n|state          | ✅ | ❌ |\n|zip            | ✅ | ❌ |\n|country        | ✅ | ❌ |\n|isDefault      | ✅ | ❌ |\n|isVerified     | ✅ | ❌ |\n|createdAt      | ✅ | ✅ |\n|updatedAt      | ✅ | ✅ |\n|CustomerId     | ✅ | ❌ |\n|VendorId       | ✅ | ❌ |\n|Customer.name  | ❌ | ✅ |\n|Vendor.name    | ❌ | ✅ |\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "in": "query",
            "name": "order",
            "description": "Order to return results in. ex \"date:desc\"",
            "schema": {
              "type": "string",
              "default": "label:ASC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Addresses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "integer"
                          },
                          "label": {
                            "type": "string"
                          },
                          "line1": {
                            "type": "string"
                          },
                          "line2": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "zip": {
                            "type": "string"
                          },
                          "country": {
                            "type": "string"
                          },
                          "isDefault": {
                            "type": "boolean"
                          },
                          "isVerified": {
                            "type": "boolean"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "CustomerId": {
                            "type": "integer",
                            "description": "Ref: Customer._id\n"
                          },
                          "VendorId": {
                            "type": "integer",
                            "description": "Ref: Vendor._id\n"
                          },
                          "Customer": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "Vendor": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Addresses"
        ],
        "summary": "Create",
        "description": "Creates a new address\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Address CREATE</div>\n</div>\n",
        "requestBody": {
          "description": "JSON body to create new Address\n\nOnly one of `[CustomerId, VendorId, Customer.name, Vendor.name]` can be set\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "label"
                ],
                "properties": {
                  "label": {
                    "type": "string"
                  },
                  "line1": {
                    "type": "string"
                  },
                  "line2": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "zip": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "isDefault": {
                    "type": "boolean",
                    "description": "Set this as the default address for the Customer or Vendor"
                  },
                  "CustomerId": {
                    "type": "integer",
                    "description": "Ref: Customer._id\n"
                  },
                  "VendorId": {
                    "type": "integer",
                    "description": "Ref: Vendor._id\n"
                  },
                  "Customer": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Ref: Customer.name, Can be used in place of CustomerId\n"
                      }
                    }
                  },
                  "Vendor": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Ref: Vendor.name, Can be used in place of VendorId\n"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Address",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "label": {
                      "type": "string"
                    },
                    "line1": {
                      "type": "string"
                    },
                    "line2": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "zip": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    },
                    "isDefault": {
                      "type": "boolean"
                    },
                    "isVerified": {
                      "type": "boolean"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "CustomerId": {
                      "type": "integer",
                      "description": "Ref: Customer._id\n"
                    },
                    "VendorId": {
                      "type": "integer",
                      "description": "Ref: Vendor._id\n"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/addresses/count": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "Count",
        "description": "The same filters as [Search](#operation/addressesSearch) can be used here.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          }
        ],
        "responses": {
          "200": {
            "description": "Count response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/addresses/{id}": {
      "delete": {
        "tags": [
          "Addresses"
        ],
        "summary": "Delete",
        "description": "Delete one Address\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Address DELETE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Address Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "no content success"
          }
        }
      },
      "put": {
        "tags": [
          "Addresses"
        ],
        "summary": "Update",
        "description": "Update One Address\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Address UPDATE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Address Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON body containing key and values to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "label": {
                    "type": "string"
                  },
                  "line1": {
                    "type": "string"
                  },
                  "line2": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "state": {
                    "type": "string"
                  },
                  "zip": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "isDefault": {
                    "type": "boolean",
                    "description": "Set this as the default address for the Customer or Vendor"
                  },
                  "CustomerId": {
                    "type": "integer",
                    "description": "Ref: Customer._id\n"
                  },
                  "VendorId": {
                    "type": "integer",
                    "description": "Ref: Vendor._id\n"
                  },
                  "Customer": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Ref: Customer.name, Can be used in place of CustomerId\n"
                      }
                    }
                  },
                  "Vendor": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Ref: Vendor.name, Can be used in place of VendorId\n"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated Address",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "label": {
                      "type": "string"
                    },
                    "line1": {
                      "type": "string"
                    },
                    "line2": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "zip": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    },
                    "isDefault": {
                      "type": "boolean"
                    },
                    "isVerified": {
                      "type": "boolean"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "CustomerId": {
                      "type": "integer",
                      "description": "Ref: Customer._id\n"
                    },
                    "VendorId": {
                      "type": "integer",
                      "description": "Ref: Vendor._id\n"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/addresss/{id}": {
      "get": {
        "tags": [
          "Addresses"
        ],
        "summary": "One",
        "description": "Get one Address",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Address Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "One Address",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "label": {
                      "type": "string"
                    },
                    "line1": {
                      "type": "string"
                    },
                    "line2": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    },
                    "zip": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    },
                    "isDefault": {
                      "type": "boolean"
                    },
                    "isVerified": {
                      "type": "boolean"
                    },
                    "CustomerId": {
                      "type": "integer",
                      "description": "Ref: Customer._id\n"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "VendorId": {
                      "type": "integer",
                      "description": "Ref: Vendor._id\n"
                    },
                    "Customer": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "Vendor": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/audit-logs": {
      "get": {
        "tags": [
          "Audit Logs"
        ],
        "summary": "Search",
        "description": "Returns a list of audit logs in descending order by date\n\n| Field       | Filterable |\n|---------------------|:--:|\n|_id                  | ✅ |\n|date                 | ✅ |\n|object               | ❌ |\n|objectType           | ✅ |\n|objectId             | ✅ |\n|message              | ✅ |\n|user                 | ❌ |\n|api                  | ❌ |\n|userType             | ✅ |\n|userLabel            | ✅ |\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/where"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Audit Logs. Ordered by date",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean"
                    },
                    "cursor": {
                      "type": "string",
                      "nullable": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "date": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "object": {
                            "type": "object"
                          },
                          "objectType": {
                            "type": "string"
                          },
                          "objectId": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "user": {
                            "type": "string"
                          },
                          "api": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "userType": {
                            "type": "string"
                          },
                          "userLabel": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/batch-payments": {
      "get": {
        "tags": [
          "Batch Payments"
        ],
        "summary": "Search",
        "operationId": "batchPaymentsSearch",
        "description": "| Field       | Filterable | Sortable |\n|---------------------|:--:|:--:|\n|_id                      | ✅ | ✅ |\n|status                   | ✅ | ✅ |\n|referenceNumber          | ✅ | ✅ |\n|postedDate               | ✅ | ✅ |\n|paymentDate              | ✅ | ✅ |\n|currency                 | ✅ | ✅ |\n|amount                   | ✅ | ✅ |\n|LocationId               | ✅ | ❌ |\n|ClearingAccountId        | ✅ | ❌ |\n|CashAccountId            | ✅ | ❌ |\n|createdAt                | ✅ | ✅ |\n|updatedAt                | ✅ | ✅ |\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/LocationId"
          },
          {
            "in": "query",
            "name": "order",
            "description": "Order to return results in. ex \"date:desc\"",
            "schema": {
              "type": "string",
              "default": "referenceNumber:DESC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of batch payments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "integer"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "created",
                              "approved",
                              "voided"
                            ]
                          },
                          "referenceNumber": {
                            "type": "string"
                          },
                          "postedDate": {
                            "type": "string",
                            "format": "date"
                          },
                          "paymentDate": {
                            "type": "string",
                            "format": "date"
                          },
                          "memo": {
                            "type": "string"
                          },
                          "currency": {
                            "type": "string",
                            "format": "ISO4217 3 Char Code"
                          },
                          "amount": {
                            "type": "string",
                            "format": "number"
                          },
                          "LocationId": {
                            "type": "integer",
                            "description": "Ref: Location._id"
                          },
                          "Location": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "ClearingAccountId": {
                            "type": "integer",
                            "description": "Ref: ClearingAccount._id"
                          },
                          "ClearingAccount": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "number": {
                                "type": "string"
                              }
                            }
                          },
                          "CashAccountId": {
                            "type": "integer",
                            "description": "Ref: CashAccount._id"
                          },
                          "CashAccount": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "number": {
                                "type": "string"
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "approved_on": {
                            "type": "string",
                            "format": "date"
                          },
                          "approved_name": {
                            "type": "string"
                          },
                          "approved_email": {
                            "type": "string",
                            "format": "email"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Batch Payments"
        ],
        "summary": "Create",
        "description": "creates a new Batch Payment\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>BatchPayment CREATE</div>\n</div>\n",
        "requestBody": {
          "description": "JSON body to create new Batch Payment\n\nCreated batch payments will be created in `created` status unless the setting for Auto-Approve (AP) is enabled, then the status will be `approved`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "paymentDate",
                  "referenceNumber",
                  "CashAccountId",
                  "ClearingAccountId",
                  "Bills"
                ],
                "properties": {
                  "paymentDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "postedDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "referenceNumber": {
                    "type": "string"
                  },
                  "memo": {
                    "type": "string"
                  },
                  "CashAccountId": {
                    "type": "integer",
                    "description": "Ref: LedgerAccount._id"
                  },
                  "ClearingAccountId": {
                    "type": "integer",
                    "description": "Ref: LedgerAccount._id"
                  },
                  "Bills": {
                    "type": "array",
                    "description": "All bills require, \"_id\" and \"amount\".\nBills must be from the same location and be in the same currency.\n",
                    "items": {
                      "type": "object",
                      "required": [
                        "_id",
                        "amount"
                      ],
                      "properties": {
                        "_id": {
                          "type": "integer"
                        },
                        "amount": {
                          "type": "string",
                          "format": "number"
                        },
                        "memo": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Batch Payment",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "referenceNumber": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "created",
                        "approved"
                      ]
                    },
                    "amount": {
                      "type": "string",
                      "format": "number"
                    },
                    "paymentDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "postedDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "memo": {
                      "type": "string"
                    },
                    "CashAccountId": {
                      "type": "integer",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "ClearingAccountId": {
                      "type": "integer",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "LocationId": {
                      "type": "integer",
                      "description": "Ref: Location._id"
                    },
                    "currency": {
                      "type": "string",
                      "format": "ISO4217 3 Char Code"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/batch-payments/{id}/approve": {
      "put": {
        "tags": [
          "Batch Payments"
        ],
        "summary": "Approve",
        "description": "Approve batch payment\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>BatchPayment APPROVE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "BatchPayment._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "no content success"
          }
        }
      }
    },
    "/batch-payments/{id}/bills": {
      "get": {
        "tags": [
          "Batch Payments"
        ],
        "summary": "Bills",
        "description": "This endpoint returns bills for the specified batch payment.\nThe parameters of this endpoint are the same as for [Bills Search](#operation/billsSearch)\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "BatchPayment._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Bills",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/BillSearchItem"
                          }
                        ],
                        "properties": {
                          "paymentAmount": {
                            "type": "string",
                            "format": "number",
                            "description": "Amount paid as part of this Batch Payment"
                          },
                          "paymentMemo": {
                            "type": "string",
                            "description": "Memo added for this bill at Batch payment step"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/batch-payments/{id}/bills/count": {
      "get": {
        "tags": [
          "Batch Payments"
        ],
        "summary": "Bills Count",
        "description": "The same filters as [Search](#operation/billsSearch) can be used here.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/LocationId"
          },
          {
            "in": "path",
            "name": "id",
            "description": "BatchPayment._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "credit",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "If true, only returns AP Credits i.e. bills with a negative amount.\n\nIf false or not specified, only returns bills with a positive amount.\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Count response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/batch-payments/count": {
      "get": {
        "tags": [
          "Batch Payments"
        ],
        "summary": "Count",
        "description": "The same filters as [Search](#operation/batchPaymentsSearch) can be used here.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/LocationId"
          }
        ],
        "responses": {
          "200": {
            "description": "Count response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/batch-payments/{id}": {
      "delete": {
        "tags": [
          "Batch Payments"
        ],
        "summary": "Delete",
        "description": "Delete one Batch Payment\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>BatchPayment DELETE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Batch Payment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "no content success"
          }
        }
      },
      "get": {
        "tags": [
          "Batch Payments"
        ],
        "summary": "One",
        "description": "Get one Batch Payment",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "BatchPayment._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "One Batch Payment",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "created",
                        "approved",
                        "voided"
                      ]
                    },
                    "referenceNumber": {
                      "type": "string"
                    },
                    "postedDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "paymentDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "memo": {
                      "type": "string"
                    },
                    "currency": {
                      "type": "string",
                      "format": "ISO4217 3 Char Code"
                    },
                    "amount": {
                      "type": "string",
                      "format": "number"
                    },
                    "VendorIds": {
                      "description": "List of _id of the Vendors associated with this batch",
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "description": "Ref: Vendor._id"
                      }
                    },
                    "LocationId": {
                      "type": "integer",
                      "description": "Ref: Location._id"
                    },
                    "Location": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "ClearingAccountId": {
                      "type": "integer",
                      "description": "Ref: ClearingAccount._id"
                    },
                    "ClearingAccount": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "number": {
                          "type": "string"
                        }
                      }
                    },
                    "CashAccountId": {
                      "type": "integer",
                      "description": "Ref: CashAccount._id"
                    },
                    "CashAccount": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "number": {
                          "type": "string"
                        }
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "approved_on": {
                      "type": "string",
                      "format": "date"
                    },
                    "approved_name": {
                      "type": "string"
                    },
                    "approved_email": {
                      "type": "string",
                      "format": "email"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/batch-payments/{id}/payments": {
      "get": {
        "tags": [
          "Batch Payments"
        ],
        "summary": "Payments",
        "description": "This endpoint returns payments for the specified batch payment.\nThe parameters of this endpoint are the same as for [Payments Search](#operation/paymentsSearch)\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "BatchPayment._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Payments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/PaymentList"
                          }
                        ],
                        "properties": {
                          "paymentAmount": {
                            "type": "string",
                            "format": "number",
                            "description": "Amount paid as part of this Batch Payment"
                          },
                          "paymentMemo": {
                            "type": "string",
                            "description": "Memo added for this bill at Batch payment step"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/batch-payments/{id}/payments/count": {
      "get": {
        "tags": [
          "Batch Payments"
        ],
        "summary": "Payments Count",
        "description": "The same filters as [Search](#operation/paymentsSearch) can be used here.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/LocationId"
          },
          {
            "in": "path",
            "name": "id",
            "description": "BatchPayment._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filter by AP or AR payments\n\nIf not specified, all payment types will be returned\n",
            "schema": {
              "type": "string",
              "enum": [
                "ap",
                "ar"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Count response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/batch-payments/{id}/void": {
      "put": {
        "tags": [
          "Batch Payments"
        ],
        "summary": "Void",
        "description": "Void Batch Payment\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>BatchPayment VOID</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "BatchPayment._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON body containing void details.\nCan only void a batch in \"approved\" status\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "voidDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Date of the void. Defaults to today.\nMust be today or earlier.\n"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "no content success"
          }
        }
      }
    },
    "/bills": {
      "get": {
        "tags": [
          "Bills"
        ],
        "summary": "Search",
        "operationId": "billsSearch",
        "description": "| Field       | Filterable | Sortable |\n|---------------------|:--:|:--:|\n|_id                      | ✅ | ✅ |\n|invoiceNumber            | ✅ | ✅ |\n|externalId               | ✅ | ✅ |\n|description              | ✅ | ✅ |\n|invoiceDate              | ✅ | ✅ |\n|postedDate               | ✅ | ✅ |\n|dueDate                  | ✅ | ✅ |\n|dueAmount                | ✅ | ✅ |\n|amount                   | ✅ | ✅ |\n|VendorId                 | ✅ | ❌ |\n|Vendor.name              | ❌ | ✅ |\n|customFields             | ✅ | ❌ |\n|currency                 | ✅ | ✅ |\n|LocationId               | ✅ | ❌ |\n|ICLocationId             | ✅ | ❌ |\n|status                   | ✅ | ✅ |\n|approvalStatus           | ✅ | ✅ |\n|paymentStatus            | ✅ | ✅ |\n|PurchaseOrderId          | ✅ | ❌ |\n|APAccountId              | ✅ | ❌ |\n|SystemJobId              | ✅ | ❌ |\n|createdAt                | ✅ | ✅ |\n|updatedAt                | ✅ | ✅ |\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/LocationId"
          },
          {
            "in": "query",
            "name": "order",
            "description": "Order to return results in. ex \"date:desc\"",
            "schema": {
              "type": "string",
              "default": "number:ASC"
            }
          },
          {
            "in": "query",
            "name": "credit",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "If true, only returns AP Credits i.e. bills with a negative amount.\n\nIf false or not specified, only returns bills with a positive amount.\n"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Bills",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/BillSearchItem"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Bills"
        ],
        "summary": "Create",
        "description": "creates a new Bill\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Bill CREATE</div>\n</div>\n",
        "requestBody": {
          "description": "JSON body to create new Bill\n\nOne of `[Vendor.name, VendorId]` is Required\nOne of `[Location.id, LocationId]` is Required\nOne of `[APAccount.number, APAccountId]` is Required\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "invoiceDate",
                  "postingDate",
                  "VendorId",
                  "LocationId",
                  "APAccountId",
                  "currency"
                ],
                "properties": {
                  "externalId": {
                    "type": "string"
                  },
                  "invoiceDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "postingDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "dueDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "attachments": {
                    "type": "array",
                    "description": "Links to any attached documents",
                    "items": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "description": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string",
                    "format": "ISO4217 3 Char Code"
                  },
                  "customFields": {
                    "type": "object",
                    "description": "Key -> Value hash of custom fields, must be defined via the UI to show up in the UI",
                    "default": {}
                  },
                  "LocationId": {
                    "type": "integer",
                    "description": "Ref: Location._id"
                  },
                  "Location": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Location.id"
                      }
                    }
                  },
                  "ICLocationId": {
                    "type": "integer",
                    "description": "Ref: Location._id"
                  },
                  "ICLocation": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Location.id"
                      }
                    }
                  },
                  "VendorId": {
                    "type": "integer",
                    "description": "Ref: Vendor._id"
                  },
                  "Vendor": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Ref: Vendor.name"
                      }
                    }
                  },
                  "APAccountId": {
                    "type": "integer",
                    "description": "Ref: LedgerAccount._id"
                  },
                  "APAccount": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "description": "Ref: LedgerAccount.number"
                      }
                    }
                  },
                  "PurchaseOrderId": {
                    "type": "integer",
                    "description": "Ref: PurchaseOrder._id"
                  },
                  "PurchaseOrder": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "description": "Ref: PurchaseOrder.number"
                      }
                    }
                  },
                  "BillLineItems": {
                    "type": "array",
                    "description": "**Handling of LedgerAccountId:**\n| ItemId set | LedgerAccountId Set | Result |\n|:------------:|:-----------------------:|:--------:|\n| Yes        | Yes                 | Use LedgerAccountId |\n| Yes        | No                  | Use Item.BillAccountId |\n| No         | Yes                 | Use LedgerAccountId |\n| No         | No                  | Error is thrown |\n\n** If LedgerAccountId is set, it will override the LedgerAccount.number **\n\n**Tax Logic:**\n| TaxCodeId set | TaxAmount set | Result | Tax LedgerAccount |\n|:------------:|:--------------:|:-------:|:------:|\n| Yes        | Yes              | Use TaxAmount, even if set to 0 | TaxCode.LedgerAccountId |\n| Yes        | No               | taxAmount = (amount * quantity) * (TaxCode.rate / 100) | TaxCode.LedgerAccountId |\n| No         | Yes              | Use TaxAmount | Settings.defaultSalesTaxId |\n| No         | No               | No Tax Set | No Tax Line Added |\n",
                    "items": {
                      "type": "object",
                      "required": [
                        "amount",
                        "quantity"
                      ],
                      "properties": {
                        "description": {
                          "type": "string",
                          "description": "Required if ItemId is not set"
                        },
                        "amount": {
                          "type": "string",
                          "format": "number"
                        },
                        "quantity": {
                          "type": "string",
                          "format": "number"
                        },
                        "taxAmount": {
                          "type": "string",
                          "format": "number"
                        },
                        "TaxCodeId": {
                          "type": "integer",
                          "description": "Ref: TaxCode._id"
                        },
                        "TaxCode": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "description": "Ref: TaxCode.code"
                            }
                          }
                        },
                        "ItemId": {
                          "type": "integer",
                          "description": "Ref: Item._id"
                        },
                        "Item": {
                          "type": "object",
                          "properties": {
                            "number": {
                              "type": "string",
                              "description": "Ref: Item.number"
                            }
                          }
                        },
                        "CostCenterId": {
                          "type": "integer",
                          "description": "Ref: Cost Center._id"
                        },
                        "CostCenter": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Ref: CostCenter.id"
                            }
                          }
                        },
                        "JobId": {
                          "type": "integer",
                          "description": "Ref: Job._id"
                        },
                        "Job": {
                          "type": "object",
                          "properties": {
                            "number": {
                              "type": "string",
                              "description": "Ref: Job.number"
                            }
                          }
                        },
                        "ProductId": {
                          "type": "integer",
                          "description": "Ref: Product._id"
                        },
                        "Product": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Ref: Product.id"
                            }
                          }
                        },
                        "Custom1Id": {
                          "type": "integer",
                          "description": "Ref: Custom1._id"
                        },
                        "Custom1": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Ref: Custom1.id"
                            }
                          }
                        },
                        "Custom2Id": {
                          "type": "integer",
                          "description": "Ref: Custom2._id"
                        },
                        "Custom2": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Ref: Custom2.id"
                            }
                          }
                        },
                        "Custom3Id": {
                          "type": "integer",
                          "description": "Ref: Custom3._id"
                        },
                        "Custom3": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Ref: Custom3.id"
                            }
                          }
                        },
                        "LedgerAccountId": {
                          "type": "integer",
                          "description": "Ref: LedgerAccount._id"
                        },
                        "LedgerAccount": {
                          "type": "object",
                          "properties": {
                            "number": {
                              "type": "string",
                              "description": "Ref: LedgerAccount.number"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Bill Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "externalId": {
                      "type": "string"
                    },
                    "invoiceNumber": {
                      "type": "string",
                      "format": "number"
                    },
                    "invoiceDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "postingDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "dueDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "notes": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "currency": {
                      "type": "string",
                      "format": "ISO4217 3 Char Code"
                    },
                    "customFields": {
                      "type": "object",
                      "description": "Key -> Value hash of custom fields, must be defined via the UI to show up in the UI"
                    },
                    "LocationId": {
                      "type": "integer",
                      "description": "Ref: Location._id"
                    },
                    "ICLocationId": {
                      "type": "integer",
                      "description": "Ref: Location._id"
                    },
                    "VendorId": {
                      "type": "integer",
                      "description": "Ref: Vendor._id"
                    },
                    "APAccountId": {
                      "type": "integer",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "PurchaseOrderId": {
                      "type": "integer",
                      "description": "Ref: PurchaseOrder._id"
                    },
                    "attachments": {
                      "type": "array",
                      "description": "Links to any attached documents",
                      "items": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "created"
                      ]
                    },
                    "approvalStatus": {
                      "type": "string",
                      "enum": [
                        "unapproved"
                      ]
                    },
                    "paymentStatus": {
                      "type": "string",
                      "enum": [
                        "unpaid"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/bills/lines": {
      "get": {
        "tags": [
          "Bills"
        ],
        "summary": "Line Search",
        "operationId": "billLinesSearch",
        "description": "| Field       | Filterable | Sortable |\n|---------------------|:--:|:--:|\n|_id                     | ✅ | ✅ |\n|idx                     | ✅ | ✅ |   \n|description             | ✅ | ✅ |   \n|amount                  | ✅ | ✅ |   \n|quantity                | ✅ | ✅ |   \n|taxAmount               | ✅ | ✅ |   \n|createdAt               | ✅ | ✅ |   \n|updatedAt               | ✅ | ✅ |   \n|BillId                  | ✅ | ❌ |   \n|Bill.invoiceNumber      | ✅ | ✅ |   \n|Bill.status             | ✅ | ✅ |\n|Bill.approvalStatus     | ✅ | ✅ |\n|Bill.paymentStatus      | ✅ | ✅ |   \n|Bill.currency           | ✅ | ✅ |   \n|Bill.description        | ✅ | ✅ |   \n|Bill.invoiceDate        | ✅ | ✅ |   \n|Bill.postingDate        | ✅ | ✅ |   \n|Bill.dueDate            | ✅ | ✅ |   \n|Bill.customFields       | ✅ | ❌ |   \n|Bill.createdAt          | ✅ | ✅ |   \n|Bill.updatedAt          | ✅ | ✅ |  \n|Bill.VendorId           | ✅ | ❌ |   \n|Bill.APAccountId        | ✅ | ❌ |   \n|Bill.LocationId         | ✅ | ❌ |   \n|Bill.ICLocationId       | ✅ | ❌ |   \n|APAccount.number        | ❌ | ✅ |   \n|BillAccount.number      | ❌ | ✅ |   \n|LedgerAccountId         | ✅ | ❌ |   \n|LedgerAccount.number    | ❌ | ✅ |   \n|Vendor.name             | ❌ | ✅ |   \n|Vendor.is1099           | ✅ | ✅ |   \n|Location.name           | ❌ | ✅ |   \n|ICLocation.name         | ❌ | ✅ |   \n|TaxCodeId               | ✅ | ❌ |   \n|TaxCode.code            | ❌ | ✅ |   \n|ItemId                  | ✅ | ❌ |   \n|Item.name               | ❌ | ✅ |   \n|Item.salePrice          | ✅ | ✅ |   \n|Item.purchasePrice      | ✅ | ✅ |   \n|Custom1Id               | ✅ | ❌ |   \n|Custom2Id               | ✅ | ❌ |   \n|Custom3Id               | ✅ | ❌ |   \n|CostCenterId            | ✅ | ❌ |   \n|CostCenter.id           | ❌ | ✅ |   \n|ProductId               | ✅ | ❌ |   \n|Product.id              | ❌ | ✅ |   \n|JobId                   | ✅ | ❌ |   \n|Job.number              | ❌ | ✅ |   \n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/LocationId"
          },
          {
            "in": "query",
            "name": "order",
            "description": "Order to return results in. ex \"date:desc\"",
            "schema": {
              "type": "string",
              "default": "Bill.invoiceNumber:ASC"
            }
          },
          {
            "in": "query",
            "name": "credit",
            "description": "Filter by credit status of the Bill.\nOperates as follows:\n  - If 'credit' is false, lines from Bills that have 'Bill.amount' greater than or equal to zero will be returned\n  - If 'credit' is true, lines from Bills that have 'Bill.amount' less than zero will be returned\n  - If 'credit' is not provided, all lines will be returned\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Bill Lines",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "integer"
                          },
                          "idx": {
                            "type": "integer"
                          },
                          "description": {
                            "type": "string"
                          },
                          "amount": {
                            "type": "string",
                            "format": "number"
                          },
                          "quantity": {
                            "type": "string",
                            "format": "number"
                          },
                          "taxAmount": {
                            "type": "string",
                            "format": "number"
                          },
                          "total": {
                            "type": "string",
                            "format": "number"
                          },
                          "BillId": {
                            "type": "number",
                            "description": "Ref: Bills._id"
                          },
                          "Bill": {
                            "type": "object",
                            "properties": {
                              "invoiceNumber": {
                                "type": "string",
                                "format": "number"
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "created",
                                  "approved",
                                  "partiallyPaid",
                                  "paid",
                                  "voided"
                                ]
                              },
                              "approvalStatus": {
                                "type": "string",
                                "enum": [
                                  "unapproved",
                                  "partiallyApproved",
                                  "approved"
                                ]
                              },
                              "paymentStatus": {
                                "type": "string",
                                "enum": [
                                  "unpaid",
                                  "partiallyPaid",
                                  "paid"
                                ]
                              },
                              "currency": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "invoiceDate": {
                                "type": "string",
                                "format": "date"
                              },
                              "postingDate": {
                                "type": "string",
                                "format": "date"
                              },
                              "dueDate": {
                                "type": "string",
                                "format": "date"
                              },
                              "customFields": {
                                "type": "object",
                                "description": "Key -> Value hash of custom fields, must be defined via the UI to show up in the UI"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date"
                              },
                              "updatedAt": {
                                "type": "string",
                                "format": "date"
                              },
                              "APAccountId": {
                                "type": "number",
                                "description": "Ref: LedgerAccount._id"
                              },
                              "VendorId": {
                                "type": "number",
                                "description": "Ref: Vendor._id"
                              },
                              "LocationId": {
                                "type": "number",
                                "description": "Ref: Location._id"
                              },
                              "ICLocationId": {
                                "type": "number",
                                "description": "Ref: Location._id"
                              }
                            }
                          },
                          "APAccount": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "number": {
                                "type": "string"
                              }
                            }
                          },
                          "LedgerAccountId": {
                            "type": "number",
                            "description": "Ref: LedgerAccount._id"
                          },
                          "LedgerAccount": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "number": {
                                "type": "string"
                              }
                            }
                          },
                          "Vendor": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "is1099": {
                                "type": "boolean"
                              }
                            }
                          },
                          "Location": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "ICLocation": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "TaxCodeId": {
                            "type": "integer",
                            "description": "Ref: TaxCode._id"
                          },
                          "TaxCode": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string",
                                "description": "Ref: TaxCode.code"
                              }
                            }
                          },
                          "ItemId": {
                            "type": "integer",
                            "description": "Ref: Item._id"
                          },
                          "Item": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "number": {
                                "type": "string"
                              },
                              "sku": {
                                "type": "string"
                              },
                              "salePrice": {
                                "type": "string",
                                "format": "number"
                              },
                              "purchasePrice": {
                                "type": "string",
                                "format": "number"
                              },
                              "BillAccount": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "number": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "CostCenterId": {
                            "type": "integer",
                            "description": "Ref: Cost Center._id"
                          },
                          "CostCenter": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "JobId": {
                            "type": "integer",
                            "description": "Ref: Job._id"
                          },
                          "Job": {
                            "type": "object",
                            "properties": {
                              "number": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "ProductId": {
                            "type": "integer",
                            "description": "Ref: Product._id"
                          },
                          "Product": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "Custom1Id": {
                            "type": "integer",
                            "description": "Ref: Custom1._id"
                          },
                          "Custom1": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "Custom2Id": {
                            "type": "integer",
                            "description": "Ref: Custom2._id"
                          },
                          "Custom2": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "Custom3Id": {
                            "type": "integer",
                            "description": "Ref: Custom3._id"
                          },
                          "Custom3": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/bills/unpaid": {
      "get": {
        "tags": [
          "Bills"
        ],
        "summary": "Unpaid Bills",
        "operationId": "unpaidBillsSearch",
        "description": "This endpoint returns unpaid bills/credits.\n\nThe parameters of this endpoint are the same as for [Bills Search](#operation/billsSearch)\n\nThe following parameters are also supported in addition to the ones listed in [Bills Search](#operation/billsSearch)\n",
        "parameters": [
          {
            "in": "query",
            "name": "filterCurrency",
            "schema": {
              "type": "string"
            },
            "description": "Provide this to only show unpaid bills in the specified currency.\n\nThis parameter is optional.\n"
          },
          {
            "in": "query",
            "name": "filterLocationId",
            "schema": {
              "type": "string",
              "format": "number"
            },
            "description": "Ref: \"Location\"._id\n\nProvide this to only show unpaid bills from the specified location.\n\nBills from child locations of the provided location are not included.\n\nThis parameter is optional.\n"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Bills",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/BillSearchItem"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/bills/{id}/approve": {
      "put": {
        "tags": [
          "Bills"
        ],
        "summary": "Approve",
        "description": "Approve Bill\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Bill APPROVE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Bill._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "no content success"
          }
        }
      }
    },
    "/bills/count": {
      "get": {
        "tags": [
          "Bills"
        ],
        "summary": "Count",
        "description": "The same filters as [Search](#operation/billsSearch) can be used here.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/LocationId"
          },
          {
            "in": "query",
            "name": "credit",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "If true, only returns AP Credits i.e. bills with a negative amount.\n\nIf false or not specified, only returns bills with a positive amount.\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Count response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/bills/lines/count": {
      "get": {
        "tags": [
          "Bills"
        ],
        "summary": "Line Count",
        "description": "The same filters as [Search](#operation/billLinesSearch) can be used here.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/LocationId"
          },
          {
            "in": "query",
            "name": "credit",
            "schema": {
              "type": "boolean"
            },
            "description": "Filter by credit status of the Bill.\nOperates as follows:\n  - If 'credit' is false, lines from Bills that have 'Bill.amount' greater than or equal to zero will be returned\n  - If 'credit' is true, lines from Bills that have 'Bill.amount' less than zero will be returned\n  - If 'credit' is not provided, all lines will be returned\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Count response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/bills/count/unpaid": {
      "get": {
        "tags": [
          "Bills"
        ],
        "summary": "Count Unpaid",
        "description": "The same filters as [Search](#operation/unpaidBillsSearch) can be used here.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/LocationId"
          },
          {
            "in": "query",
            "name": "filterCurrency",
            "schema": {
              "type": "string"
            },
            "description": "Provide this to only show unpaid bills in the specified currency.\n\nThis parameter is optional.\n"
          },
          {
            "in": "query",
            "name": "filterLocationId",
            "schema": {
              "type": "string",
              "format": "number"
            },
            "description": "Ref: \"Location\"._id\n\nProvide this to only show unpaid bills from the specified location.\n\nBills from child locations of the provided location are not included.\n\nThis parameter is optional.\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Count response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/bills/{id}/line": {
      "post": {
        "tags": [
          "Bills"
        ],
        "summary": "Create Line",
        "description": "creates a new Bill Line\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>BillLineItem CREATE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Bill._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Can only add a line to an unapproved bill\n          \n**Handling of LedgerAccountId:**\n| ItemId set | LedgerAccountId Set | Result |\n|:------------:|:-----------------------:|:--------:|\n| Yes        | Yes                 | Use LedgerAccountId |\n| Yes        | No                  | Use Item.BillAccountId |\n| No         | Yes                 | Use LedgerAccountId |\n| No         | No                  | Error is thrown |\n\n** If LedgerAccountId is set, it will override the LedgerAccount.number **\n\n**Tax Logic:**\n| TaxCodeId set | TaxAmount set | Result | Tax LedgerAccount |\n|:------------:|:--------------:|:-------:|:------:|\n| Yes        | Yes              | Use TaxAmount, even if set to 0 | TaxCode.LedgerAccountId |\n| Yes        | No               | taxAmount = (amount * quantity) * (TaxCode.rate / 100) | TaxCode.LedgerAccountId |\n| No         | Yes              | Use TaxAmount | Settings.defaultSalesTaxId |\n| No         | No               | No Tax Set | No Tax Line Added |\n",
                "required": [
                  "amount",
                  "quantity"
                ],
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Required if ItemId is not set"
                  },
                  "amount": {
                    "type": "string",
                    "format": "number"
                  },
                  "quantity": {
                    "type": "string",
                    "format": "number"
                  },
                  "taxAmount": {
                    "type": "string",
                    "format": "number"
                  },
                  "TaxCodeId": {
                    "type": "integer",
                    "description": "Ref: TaxCode._id"
                  },
                  "TaxCode": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Ref: TaxCode.code"
                      }
                    }
                  },
                  "ItemId": {
                    "type": "integer",
                    "description": "Ref: Item._id"
                  },
                  "Item": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "description": "Ref: Item.number"
                      }
                    }
                  },
                  "CostCenterId": {
                    "type": "integer",
                    "description": "Ref: Cost Center._id"
                  },
                  "CostCenter": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: CostCenter.id"
                      }
                    }
                  },
                  "JobId": {
                    "type": "integer",
                    "description": "Ref: Job._id"
                  },
                  "Job": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Job.id"
                      }
                    }
                  },
                  "ProductId": {
                    "type": "integer",
                    "description": "Ref: Product._id"
                  },
                  "Product": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Product.id"
                      }
                    }
                  },
                  "Custom1Id": {
                    "type": "integer",
                    "description": "Ref: Custom1._id"
                  },
                  "Custom1": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Custom1.id"
                      }
                    }
                  },
                  "Custom2Id": {
                    "type": "integer",
                    "description": "Ref: Custom2._id"
                  },
                  "Custom2": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Custom2.id"
                      }
                    }
                  },
                  "Custom3Id": {
                    "type": "integer",
                    "description": "Ref: Custom3._id"
                  },
                  "Custom3": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Custom3.id"
                      }
                    }
                  },
                  "LedgerAccountId": {
                    "type": "integer",
                    "description": "Ref: LedgerAccount._id"
                  },
                  "LedgerAccount": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "description": "Ref: LedgerAccount.number"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Bill Line created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "description": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "string",
                      "format": "number"
                    },
                    "quantity": {
                      "type": "string",
                      "format": "number"
                    },
                    "taxAmount": {
                      "type": "string",
                      "format": "number"
                    },
                    "TaxCodeId": {
                      "type": "integer",
                      "description": "Ref: TaxCode._id"
                    },
                    "ItemId": {
                      "type": "integer",
                      "description": "Ref: Item._id"
                    },
                    "CostCenterId": {
                      "type": "integer",
                      "description": "Ref: Cost Center._id"
                    },
                    "JobId": {
                      "type": "integer",
                      "description": "Ref: Job._id"
                    },
                    "ProductId": {
                      "type": "integer",
                      "description": "Ref: Product._id"
                    },
                    "Custom1Id": {
                      "type": "integer",
                      "description": "Ref: Custom1._id"
                    },
                    "Custom2Id": {
                      "type": "integer",
                      "description": "Ref: Custom2._id"
                    },
                    "Custom3Id": {
                      "type": "integer",
                      "description": "Ref: Custom3._id"
                    },
                    "LedgerAccountId": {
                      "type": "integer",
                      "description": "Ref: LedgerAccount._id"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/bills/{id}": {
      "delete": {
        "tags": [
          "Bills"
        ],
        "summary": "Delete",
        "description": "Delete one Bill\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Bill DELETE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Bill Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "no content success"
          }
        }
      },
      "get": {
        "tags": [
          "Bills"
        ],
        "summary": "One",
        "description": "Get one Bill",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Bill._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "One Bill",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "created",
                        "approved",
                        "partiallyPaid",
                        "paid",
                        "voided"
                      ]
                    },
                    "approvalStatus": {
                      "type": "string",
                      "enum": [
                        "unapproved",
                        "partiallyApproved",
                        "approved"
                      ]
                    },
                    "paymentStatus": {
                      "type": "string",
                      "enum": [
                        "unpaid",
                        "partiallyPaid",
                        "paid"
                      ]
                    },
                    "externalId": {
                      "type": "string"
                    },
                    "invoiceNumber": {
                      "type": "string",
                      "format": "number"
                    },
                    "invoiceDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "postingDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "dueDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "notes": {
                      "type": "string"
                    },
                    "attachments": {
                      "type": "array",
                      "description": "Links to any attached documents",
                      "items": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "approved_on": {
                      "type": "string",
                      "format": "date"
                    },
                    "approved_name": {
                      "type": "string"
                    },
                    "approved_email": {
                      "type": "string",
                      "format": "email"
                    },
                    "description": {
                      "type": "string"
                    },
                    "currency": {
                      "type": "string",
                      "format": "ISO4217 3 Char Code"
                    },
                    "amount": {
                      "type": "string",
                      "format": "number"
                    },
                    "dueAmount": {
                      "type": "string",
                      "format": "number",
                      "description": "Amount left to pay"
                    },
                    "customFields": {
                      "type": "object",
                      "description": "Key -> Value hash of custom fields, must be defined via the UI to show up in the UI"
                    },
                    "SystemJobId": {
                      "type": "string",
                      "description": "Ref: SystemJob._id"
                    },
                    "LocationId": {
                      "type": "integer",
                      "description": "Ref: Location._id"
                    },
                    "Location": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "ICLocationId": {
                      "type": "integer",
                      "description": "Ref: Location._id"
                    },
                    "ICLocation": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "VendorId": {
                      "type": "integer",
                      "description": "Ref: Vendor._id"
                    },
                    "Vendor": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Ref: Vendor.id"
                        },
                        "name": {
                          "type": "string",
                          "description": "Ref: Vendor.name"
                        },
                        "email": {
                          "type": "string",
                          "description": "Ref: Vendor.email"
                        }
                      }
                    },
                    "APAccountId": {
                      "type": "integer",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "APAccount": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "number": {
                          "type": "string"
                        }
                      }
                    },
                    "PurchaseOrderId": {
                      "type": "integer",
                      "description": "Ref: PurchaseOrder._id"
                    },
                    "PurchaseOrder": {
                      "type": "object",
                      "properties": {
                        "number": {
                          "type": "string",
                          "description": "Ref: PurchaseOrder.number"
                        }
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "BillLineItems": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "integer"
                          },
                          "idx": {
                            "type": "integer"
                          },
                          "description": {
                            "type": "string",
                            "description": "Required if ItemId is not set"
                          },
                          "amount": {
                            "type": "string",
                            "format": "number"
                          },
                          "quantity": {
                            "type": "string",
                            "format": "number"
                          },
                          "taxAmount": {
                            "type": "string",
                            "format": "number"
                          },
                          "TaxCodeId": {
                            "type": "integer",
                            "description": "Ref: TaxCode._id"
                          },
                          "TaxCode": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string",
                                "description": "Ref: TaxCode.code"
                              },
                              "LedgerAccountId": {
                                "type": "integer",
                                "description": "Ref: LedgerAccount._id"
                              }
                            }
                          },
                          "ItemId": {
                            "type": "integer",
                            "description": "Ref: Item._id"
                          },
                          "Item": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "number": {
                                "type": "string"
                              },
                              "sku": {
                                "type": "string"
                              },
                              "salePrice": {
                                "type": "string",
                                "format": "number"
                              },
                              "BillAccountId": {
                                "type": "integer",
                                "description": "Ref: LedgerAccount._id"
                              },
                              "BillAccount": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "number": {
                                    "type": "integer"
                                  }
                                }
                              }
                            }
                          },
                          "CostCenterId": {
                            "type": "integer",
                            "description": "Ref: Cost Center._id"
                          },
                          "CostCenter": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "JobId": {
                            "type": "integer",
                            "description": "Ref: Job._id"
                          },
                          "Job": {
                            "type": "object",
                            "properties": {
                              "number": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "ProductId": {
                            "type": "integer",
                            "description": "Ref: Product._id"
                          },
                          "Product": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "Custom1Id": {
                            "type": "integer",
                            "description": "Ref: Custom1._id"
                          },
                          "Custom1": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "Custom2Id": {
                            "type": "integer",
                            "description": "Ref: Custom2._id"
                          },
                          "Custom2": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "Custom3Id": {
                            "type": "integer",
                            "description": "Ref: Custom3._id"
                          },
                          "Custom3": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "LedgerAccountId": {
                            "type": "integer",
                            "description": "Ref: LedgerAccount._id"
                          },
                          "LedgerAccount": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "number": {
                                "type": "string"
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Bills"
        ],
        "summary": "Update",
        "description": "Update One Bill\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Bill DELETE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Bill Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON body containing key and values to update\n\nCan only update an bill with \"created\" status\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "externalId": {
                    "type": "string"
                  },
                  "invoiceDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "postingDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "dueDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "attachments": {
                    "type": "array",
                    "description": "Links to any attached documents",
                    "items": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "description": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string",
                    "format": "ISO4217 3 Char Code"
                  },
                  "customFields": {
                    "type": "object",
                    "description": "Key -> Value hash of custom fields, must be defined via the UI to show up in the UI",
                    "default": {}
                  },
                  "LocationId": {
                    "type": "integer",
                    "description": "Ref: Location._id"
                  },
                  "Location": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Location.id"
                      }
                    }
                  },
                  "ICLocationId": {
                    "type": "integer",
                    "description": "Ref: Location._id"
                  },
                  "ICLocation": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Location.id"
                      }
                    }
                  },
                  "VendorId": {
                    "type": "integer",
                    "description": "Ref: Vendor._id"
                  },
                  "Vendor": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Ref: Vendor.name"
                      }
                    }
                  },
                  "APAccountId": {
                    "type": "integer",
                    "description": "Ref: LedgerAccount._id"
                  },
                  "APAccount": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "description": "Ref: LedgerAccount.number"
                      }
                    }
                  },
                  "PurchaseOrderId": {
                    "type": "integer",
                    "description": "Ref: PurchaseOrder._id"
                  },
                  "PurchaseOrder": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "description": "Ref: PurchaseOrder.number"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated Bill",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "externalId": {
                      "type": "string"
                    },
                    "invoiceNumber": {
                      "type": "string",
                      "format": "number"
                    },
                    "invoiceDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "postingDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "dueDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "notes": {
                      "type": "string"
                    },
                    "attachments": {
                      "type": "array",
                      "description": "Links to any attached documents",
                      "items": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "description": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "string",
                      "format": "number"
                    },
                    "dueAmount": {
                      "type": "string",
                      "format": "number"
                    },
                    "currency": {
                      "type": "string",
                      "format": "ISO4217 3 Char Code"
                    },
                    "customFields": {
                      "type": "object",
                      "description": "Key -> Value hash of custom fields, must be defined via the UI to show up in the UI"
                    },
                    "LocationId": {
                      "type": "integer",
                      "description": "Ref: Location._id"
                    },
                    "ICLocationId": {
                      "type": "integer",
                      "description": "Ref: Location._id"
                    },
                    "VendorId": {
                      "type": "integer",
                      "description": "Ref: Vendor._id"
                    },
                    "APAccountId": {
                      "type": "integer",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "PurchaseOrderId": {
                      "type": "integer",
                      "description": "Ref: PurchaseOrder._id"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/bills/line/{id}": {
      "delete": {
        "tags": [
          "Bills"
        ],
        "summary": "Delete Line",
        "description": "Deletes an Bill Line\n\nCan only delete a line from an unapproved bill\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>BillLineItem DELETE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "BillLine._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "no content success"
          }
        }
      },
      "put": {
        "tags": [
          "Bills"
        ],
        "summary": "Update Line",
        "description": "Update a Bill Line\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>BillLineItem UPDATE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "BillLineItem._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Can only update line on an unapproved bill\n\nIf LedgerAccountId is not changed, it will remain regardless of changing the Item.\n\nIf LedgerAccountId is set to null, the Item.BillAccount will be set if exists.\n\nTaxAmount will not be changed if not passed, even if new TaxCode is passed. \n",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Required if ItemId is not set"
                  },
                  "amount": {
                    "type": "string",
                    "format": "number"
                  },
                  "quantity": {
                    "type": "string",
                    "format": "number"
                  },
                  "taxAmount": {
                    "type": "string",
                    "format": "number"
                  },
                  "TaxCodeId": {
                    "type": "integer",
                    "description": "Ref: TaxCode._id"
                  },
                  "TaxCode": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Ref: TaxCode.code"
                      }
                    }
                  },
                  "ItemId": {
                    "type": "integer",
                    "description": "Ref: Item._id"
                  },
                  "Item": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "description": "Ref: Item.number"
                      }
                    }
                  },
                  "CostCenterId": {
                    "type": "integer",
                    "description": "Ref: Cost Center._id"
                  },
                  "CostCenter": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: CostCenter.id"
                      }
                    }
                  },
                  "JobId": {
                    "type": "integer",
                    "description": "Ref: Job._id"
                  },
                  "Job": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Job.id"
                      }
                    }
                  },
                  "ProductId": {
                    "type": "integer",
                    "description": "Ref: Product._id"
                  },
                  "Product": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Product.id"
                      }
                    }
                  },
                  "Custom1Id": {
                    "type": "integer",
                    "description": "Ref: Custom1._id"
                  },
                  "Custom1": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Custom1.id"
                      }
                    }
                  },
                  "Custom2Id": {
                    "type": "integer",
                    "description": "Ref: Custom2._id"
                  },
                  "Custom2": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Custom2.id"
                      }
                    }
                  },
                  "Custom3Id": {
                    "type": "integer",
                    "description": "Ref: Custom3._id"
                  },
                  "Custom3": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Custom3.id"
                      }
                    }
                  },
                  "LedgerAccountId": {
                    "type": "integer",
                    "description": "Ref: LedgerAccount._id"
                  },
                  "LedgerAccount": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "description": "Ref: LedgerAccount.number"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Bill Line",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "description": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "string",
                      "format": "number"
                    },
                    "quantity": {
                      "type": "string",
                      "format": "number"
                    },
                    "taxAmount": {
                      "type": "string",
                      "format": "number"
                    },
                    "TaxCodeId": {
                      "type": "integer",
                      "description": "Ref: TaxCode._id"
                    },
                    "ItemId": {
                      "type": "integer",
                      "description": "Ref: Item._id"
                    },
                    "CostCenterId": {
                      "type": "integer",
                      "description": "Ref: Cost Center._id"
                    },
                    "JobId": {
                      "type": "integer",
                      "description": "Ref: Job._id"
                    },
                    "ProductId": {
                      "type": "integer",
                      "description": "Ref: Product._id"
                    },
                    "Custom1Id": {
                      "type": "integer",
                      "description": "Ref: Custom1._id"
                    },
                    "Custom2Id": {
                      "type": "integer",
                      "description": "Ref: Custom2._id"
                    },
                    "Custom3Id": {
                      "type": "integer",
                      "description": "Ref: Custom3._id"
                    },
                    "LedgerAccountId": {
                      "type": "integer",
                      "description": "Ref: LedgerAccount._id"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/bills/{id}/payments": {
      "get": {
        "tags": [
          "Bills"
        ],
        "summary": "Payments",
        "description": "This endpoint returns only payments for the specified bill.\nThe response and parameters of this endpoint are the same as for [Payments Search](#operation/paymentsSearch)\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Bill._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Payments",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentList"
                }
              }
            }
          }
        }
      }
    },
    "/bills/{id}/void": {
      "put": {
        "tags": [
          "Bills"
        ],
        "summary": "Void",
        "description": "Void Bill\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Bill VOID</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Bill._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Bills with linked payments cannot be voided\n\nBills in created or voided status cannot be voided\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "postingDate": {
                    "type": "string",
                    "format": "date"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "no content success"
          }
        }
      }
    },
    "/cash-receipts": {
      "get": {
        "tags": [
          "Cash Receipts"
        ],
        "summary": "Search",
        "operationId": "cashreceiptsSearch",
        "description": "| Field       | Filterable | Sortable |\n|---------------------|:--:|:--:|\n|_id                     | ✅ | ✅ |\n|number                  | ✅ | ✅ |\n|externalId              | ✅ | ✅ |\n|type                    | ✅ | ✅ |\n|amount                  | ✅ | ✅ |\n|unused                  | ✅ | ✅ |\n|description             | ✅ | ✅ |\n|currency                | ✅ | ✅ |\n|receiveDate             | ✅ | ✅ |\n|postingDate             | ✅ | ✅ |\n|status                  | ✅ | ✅ |\n|applyToInvoices         | ✅ | ❌ |\n|CustomerId              | ✅ | ❌ |\n|LedgerAccountId         | ✅ | ❌ |\n|UnappliedCashAccountId  | ✅ | ❌ |\n|LocationId              | ✅ | ❌ |\n|createdAt               | ✅ | ✅ |\n|updatedAt               | ✅ | ✅ |\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/LocationId"
          },
          {
            "in": "query",
            "name": "order",
            "description": "Order to return results in. ex \"date:desc\"",
            "schema": {
              "type": "string",
              "default": "number:ASC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Cash Receipts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "integer"
                          },
                          "number": {
                            "type": "string"
                          },
                          "externalId": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "charge",
                              "check",
                              "ach",
                              "wire",
                              "cash"
                            ]
                          },
                          "amount": {
                            "type": "string",
                            "format": "number"
                          },
                          "unused": {
                            "type": "string",
                            "format": "number"
                          },
                          "description": {
                            "type": "string"
                          },
                          "currency": {
                            "type": "string",
                            "description": "Ref: Currency.code"
                          },
                          "receiveDate": {
                            "type": "string",
                            "format": "date"
                          },
                          "postingDate": {
                            "type": "string",
                            "format": "date"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "created",
                              "voided",
                              "partiallyApplied",
                              "applied"
                            ]
                          },
                          "applyToInvoices": {
                            "type": "boolean"
                          },
                          "CustomerId": {
                            "type": "number",
                            "description": "Ref: Customer._id"
                          },
                          "Customer": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "LedgerAccountId": {
                            "type": "number",
                            "description": "Ref: LedgerAccount._id"
                          },
                          "LedgerAccount": {
                            "type": "object",
                            "properties": {
                              "number": {
                                "type": "string",
                                "format": "number"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "LocationId": {
                            "type": "number",
                            "description": "Ref: Location._id"
                          },
                          "Location": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "UnappliedCashAccountId": {
                            "type": "number",
                            "description": "Ref: LedgerAccount._id"
                          },
                          "UnappliedCashAccount": {
                            "type": "object",
                            "properties": {
                              "number": {
                                "type": "string",
                                "format": "number"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "attachments": {
                            "type": "array",
                            "description": "Links to any attached documents",
                            "items": {
                              "type": "string",
                              "format": "uri"
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Cash Receipts"
        ],
        "summary": "Create",
        "description": "Creates a new Cash Receipt\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>CashReceipt CREATE</div>\n</div>\n",
        "requestBody": {
          "description": "JSON body to create new Cash Receipt\n\nOnly one of `[Customer.id, CustomerId]` can be set\n\nOnly one of `[LedgerAccount.number, LedgerAccountId]` can be set\n\nOnly one of `[Location.id, LocationId]` can be set\n\nOnly one of `[UnappliedCashAccount.number, UnappliedCashAccountId]` can be set\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "number",
                  "type",
                  "amount",
                  "currency",
                  "receiveDate",
                  "postingDate"
                ],
                "properties": {
                  "number": {
                    "type": "string"
                  },
                  "externalId": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "charge",
                      "check",
                      "ach",
                      "wire",
                      "cash"
                    ]
                  },
                  "amount": {
                    "type": "string",
                    "format": "number",
                    "description": "Must be > 0"
                  },
                  "description": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string",
                    "description": "Ref: Currency.code"
                  },
                  "receiveDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "postingDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "applyToInvoices": {
                    "type": "boolean",
                    "default": false
                  },
                  "attachments": {
                    "type": "array",
                    "description": "Links to any attached documents",
                    "items": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "CustomerId": {
                    "type": "number",
                    "description": "Ref: Customer._id"
                  },
                  "Customer": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    }
                  },
                  "LedgerAccountId": {
                    "type": "number",
                    "description": "Ref: LedgerAccount._id"
                  },
                  "LedgerAccount": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "format": "number"
                      }
                    }
                  },
                  "LocationId": {
                    "type": "number",
                    "description": "Ref: Location._id"
                  },
                  "Location": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    }
                  },
                  "UnappliedCashAccountId": {
                    "type": "number",
                    "description": "Ref: LedgerAccount._id"
                  },
                  "UnappliedCashAccount": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "format": "number"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Cash Receipt",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "number": {
                      "type": "string"
                    },
                    "externalId": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "charge",
                        "check",
                        "ach",
                        "wire",
                        "cash"
                      ]
                    },
                    "amount": {
                      "type": "string",
                      "format": "number"
                    },
                    "unused": {
                      "type": "string",
                      "format": "number"
                    },
                    "description": {
                      "type": "string"
                    },
                    "currency": {
                      "type": "string",
                      "description": "Ref: Currency.code"
                    },
                    "receiveDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "postingDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "created"
                      ]
                    },
                    "applyToInvoices": {
                      "type": "boolean"
                    },
                    "CustomerId": {
                      "type": "number",
                      "description": "Ref: Customer._id"
                    },
                    "LedgerAccountId": {
                      "type": "number",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "LocationId": {
                      "type": "number",
                      "description": "Ref: Location._id"
                    },
                    "UnappliedCashAccountId": {
                      "type": "number",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "attachments": {
                      "type": "array",
                      "description": "Links to any attached documents",
                      "items": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cash-receipts/count": {
      "get": {
        "tags": [
          "Cash Receipts"
        ],
        "summary": "Count",
        "description": "The same filters as [Search](#operation/cashreceiptsSearch) can be used here.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/LocationId"
          }
        ],
        "responses": {
          "200": {
            "description": "Count response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cash-receipts/{id}": {
      "delete": {
        "tags": [
          "Cash Receipts"
        ],
        "summary": "Delete",
        "description": "Delete one Cash Receipt\n\nCannot delete if there are linked journal entries.\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>CashReceipt DELETE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Cash Receipt Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "no content success"
          }
        }
      },
      "get": {
        "tags": [
          "Cash Receipts"
        ],
        "summary": "One",
        "description": "Get one Cash Receipt",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Cash Receipt Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "One Cash Receipt",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "number": {
                      "type": "string"
                    },
                    "externalId": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "charge",
                        "check",
                        "ach",
                        "wire",
                        "cash"
                      ]
                    },
                    "amount": {
                      "type": "string",
                      "format": "number"
                    },
                    "unused": {
                      "type": "string",
                      "format": "number"
                    },
                    "description": {
                      "type": "string"
                    },
                    "currency": {
                      "type": "string",
                      "description": "Ref: Currency.code"
                    },
                    "receiveDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "postingDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "created",
                        "voided",
                        "partiallyApplied",
                        "applied"
                      ]
                    },
                    "applyToInvoices": {
                      "type": "boolean"
                    },
                    "CustomerId": {
                      "type": "number",
                      "description": "Ref: Customer._id"
                    },
                    "Customer": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "LedgerAccountId": {
                      "type": "number",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "LedgerAccount": {
                      "type": "object",
                      "properties": {
                        "number": {
                          "type": "string",
                          "format": "number"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "LocationId": {
                      "type": "number",
                      "description": "Ref: Location._id"
                    },
                    "Location": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "UnappliedCashAccountId": {
                      "type": "number",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "UnappliedCashAccount": {
                      "type": "object",
                      "properties": {
                        "number": {
                          "type": "string",
                          "format": "number"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "attachments": {
                      "type": "array",
                      "description": "Links to any attached documents",
                      "items": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Cash Receipts"
        ],
        "summary": "Update",
        "description": "Update One Cash Receipt\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>CashReceipt UPDATE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Cash Receipt Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON body containing key and values to update\n\nCannot update a Cash Receipt if an unapplied cash journal entry was created\n\nOnly one of `[Customer.id, CustomerId]` can be set\n\nOnly one of `[LedgerAccount.number, LedgerAccountId]` can be set\n\nOnly one of `[Location.id, LocationId]` can be set\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "number": {
                    "type": "string"
                  },
                  "externalId": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "charge",
                      "check",
                      "ach",
                      "wire",
                      "cash"
                    ]
                  },
                  "amount": {
                    "type": "string",
                    "format": "number",
                    "description": "Must be > 0"
                  },
                  "description": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string",
                    "description": "Ref: Currency.code"
                  },
                  "receiveDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "postingDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "attachments": {
                    "type": "array",
                    "description": "Links to any attached documents",
                    "items": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "CustomerId": {
                    "type": "number",
                    "description": "Ref: Customer._id"
                  },
                  "Customer": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    }
                  },
                  "LedgerAccountId": {
                    "type": "number",
                    "description": "Ref: LedgerAccount._id"
                  },
                  "LedgerAccount": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "format": "number"
                      }
                    }
                  },
                  "LocationId": {
                    "type": "number",
                    "description": "Ref: Location._id"
                  },
                  "Location": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated Cash Receipt",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "number": {
                      "type": "string"
                    },
                    "externalId": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "charge",
                        "check",
                        "ach",
                        "wire",
                        "cash"
                      ]
                    },
                    "amount": {
                      "type": "string",
                      "format": "number"
                    },
                    "unused": {
                      "type": "string",
                      "format": "number"
                    },
                    "description": {
                      "type": "string"
                    },
                    "currency": {
                      "type": "string",
                      "description": "Ref: Currency.code"
                    },
                    "receiveDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "postingDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "created",
                        "voided",
                        "partiallyApplied",
                        "applied"
                      ]
                    },
                    "applyToInvoices": {
                      "type": "boolean"
                    },
                    "CustomerId": {
                      "type": "number",
                      "description": "Ref: Customer._id"
                    },
                    "LedgerAccountId": {
                      "type": "number",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "LocationId": {
                      "type": "number",
                      "description": "Ref: Location._id"
                    },
                    "UnappliedCashAccountId": {
                      "type": "number",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "attachments": {
                      "type": "array",
                      "description": "Links to any attached documents",
                      "items": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cash-receipts/{id}/payments": {
      "get": {
        "tags": [
          "Cash Receipts"
        ],
        "summary": "Payments",
        "description": "This endpoint returns only payments for the specified cash receipt.\nThe response and parameters of this endpoint are the same as for [Payments Search](#operation/paymentsSearch)\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "CashReceipt._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Payments",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentList"
                }
              }
            }
          }
        }
      }
    },
    "/cash-receipts/{id}/void": {
      "put": {
        "tags": [
          "Cash Receipts"
        ],
        "summary": "Void",
        "description": "Void one Cash Receipt\n\nVoided cash receipts with journals will post a voided journal\n\nCannot void if there are any unvoided payments linked\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>CashReceipt VOID</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Cash Receipt Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "no content success"
          }
        }
      }
    },
    "/coins": {
      "get": {
        "tags": [
          "Coins"
        ],
        "summary": "Search",
        "description": "| Field       | Filterable | Sortable |\n|---------------------|:--:|:--:|\n|_id                     | ✅ | ✅ |\n|symbol                  | ✅ | ✅ |\n|name                    | ✅ | ✅ |\n|impair                  | ✅ | ✅ |\n|hidden                  | ✅ | ✅ |\n|isFiat                  | ✅ | ✅ |\n|rateSymbol              | ✅ | ✅ |\n|rateId                  | ❌ | ❌ |\n|rateSource              | ❌ | ❌ |\n|createdAt               | ✅ | ✅ |\n|updatedAt               | ✅ | ✅ |\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order to return results in. ex \"date:desc\"",
            "schema": {
              "type": "string",
              "default": "symbol:ASC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Coins",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "integer"
                          },
                          "symbol": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "impair": {
                            "type": "boolean"
                          },
                          "hidden": {
                            "type": "boolean"
                          },
                          "isFiat": {
                            "type": "boolean"
                          },
                          "rateSymbol": {
                            "type": "string"
                          },
                          "rateId": {
                            "type": "string"
                          },
                          "rateSource": {
                            "type": "string",
                            "enum": [
                              "nomics",
                              "coinmarketcap",
                              "fiat"
                            ]
                          },
                          "customFields": {
                            "type": "object",
                            "description": "Key->Value hash of custom field names and values"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "AssetAccount": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "integer",
                                "description": "Ref: LedgerAccount._id"
                              },
                              "number": {
                                "type": "string",
                                "format": "number"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "FeeAccount": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "integer",
                                "description": "Ref: LedgerAccount._id"
                              },
                              "number": {
                                "type": "string",
                                "format": "number"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "LTGainLossAccount": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "integer",
                                "description": "Ref: LedgerAccount._id"
                              },
                              "number": {
                                "type": "string",
                                "format": "number"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "STGainLossAccount": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "integer",
                                "description": "Ref: LedgerAccount._id"
                              },
                              "number": {
                                "type": "string",
                                "format": "number"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Coins"
        ],
        "summary": "Create",
        "description": "Creates a new Coin\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Coin CREATE</div>\n  <div>LedgerAccount CREATE - four ledger accounts are created for each coin created</div>\n</div>\n",
        "requestBody": {
          "description": "JSON body to create new Coin\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "symbol",
                  "name"
                ],
                "properties": {
                  "symbol": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "impair": {
                    "type": "boolean",
                    "default": false
                  },
                  "isFiat": {
                    "type": "boolean",
                    "default": false,
                    "description": "If set true\n- rateId must be a Ref: Currency.Code\n"
                  },
                  "rateId": {
                    "type": "string",
                    "description": "Required if coin will use automatic rates\n"
                  },
                  "customFields": {
                    "type": "object",
                    "description": "Key->Value hash of custom field names and values"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Coin",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "symbol": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "impair": {
                      "type": "boolean"
                    },
                    "hidden": {
                      "type": "boolean"
                    },
                    "isFiat": {
                      "type": "boolean"
                    },
                    "rateSymbol": {
                      "type": "string"
                    },
                    "rateId": {
                      "type": "string"
                    },
                    "rateSource": {
                      "type": "string",
                      "enum": [
                        "coinmarketcap",
                        "fiat"
                      ]
                    },
                    "customFields": {
                      "type": "object",
                      "description": "Key->Value hash of custom field names and values"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "AssetAccount": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "integer",
                          "description": "Ref: LedgerAccount._id"
                        },
                        "number": {
                          "type": "string",
                          "format": "number"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "FeeAccount": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "integer",
                          "description": "Ref: LedgerAccount._id"
                        },
                        "number": {
                          "type": "string",
                          "format": "number"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "LTGainLossAccount": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "integer",
                          "description": "Ref: LedgerAccount._id"
                        },
                        "number": {
                          "type": "string",
                          "format": "number"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "STGainLossAccount": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "integer",
                          "description": "Ref: LedgerAccount._id"
                        },
                        "number": {
                          "type": "string",
                          "format": "number"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/coins/{CoinId}/crypto-transactions": {
      "get": {
        "tags": [
          "Coins"
        ],
        "summary": "Crypto Transactions",
        "description": "List of Coin Crypto Transactions. Not orderable.\n\n| Field       | Filterable |\n|---------------------|:--:|\n|_id                  | ✅ |\n|CostCenterId         | ✅ |\n|createdAt            | ✅ |\n|currency             | ✅ |\n|Custom1Id            | ✅ |\n|Custom2Id            | ✅ |\n|Custom3Id            | ✅ |\n|CustomerId           | ✅ |\n|externalId           | ✅ |\n|externalSource       | ✅ |\n|fCoinId              | ✅ |\n|fPrice               | ✅ |\n|fQty                 | ✅ |\n|fWalletId            | ✅ |\n|isJournalStale       | ✅ |\n|JobId                | ✅ |\n|JournalId            | ✅ |\n|Journal.number       | ✅ |\n|LedgerAccountId      | ✅ |\n|locked               | ✅ |\n|notes                | ✅ |\n|ProductId            | ✅ |\n|rCoinId              | ✅ |\n|reference            | ✅ |\n|rPrice               | ✅ |\n|rQty                 | ✅ |\n|rWalletId            | ✅ |\n|sCoinId              | ✅ |\n|sPrice               | ✅ |\n|sQty                 | ✅ |\n|sWalletId            | ✅ |\n|SystemJobId          | ✅ |\n|txHash               | ✅ |\n|type                 | ✅ |\n|updatedAt            | ✅ |\n|VendorId             | ✅ |\n",
        "parameters": [
          {
            "in": "path",
            "name": "CoinId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Coin._id"
          },
          {
            "in": "query",
            "name": "walletId",
            "schema": {
              "type": "string"
            },
            "required": false,
            "description": "Wallet._id\nLimits results to transactions that involve the specified wallet\n"
          },
          {
            "in": "query",
            "name": "LocationId",
            "description": "Filters for Wallets (Receive, Sent, Fee) in the specified location. Defaults to Global Location when not set.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Coin Crypto Transactions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward",
                      "nullable": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "date": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "deposit",
                              "withdrawal",
                              "trade",
                              "transfer"
                            ]
                          },
                          "txHash": {
                            "type": "string"
                          },
                          "currency": {
                            "type": "string"
                          },
                          "currencyRate": {
                            "type": "string",
                            "format": "number",
                            "example": "1"
                          },
                          "reference": {
                            "type": "string"
                          },
                          "notes": {
                            "type": "string"
                          },
                          "sCostBasis": {
                            "type": "number"
                          },
                          "fCostBasis": {
                            "type": "number"
                          },
                          "externalSource": {
                            "type": "string"
                          },
                          "isJournalStale": {
                            "type": "boolean"
                          },
                          "SystemJobId": {
                            "type": "string"
                          },
                          "locked": {
                            "type": "boolean"
                          },
                          "qtyPicked": {
                            "type": "string",
                            "format": "number",
                            "example": "1"
                          },
                          "error": {
                            "type": "object"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "rCoinId": {
                            "type": "string"
                          },
                          "rWalletId": {
                            "type": "string"
                          },
                          "rQty": {
                            "type": "string",
                            "format": "number",
                            "example": "1"
                          },
                          "rPrice": {
                            "type": "string",
                            "format": "number",
                            "example": "1"
                          },
                          "sCoinId": {
                            "type": "string"
                          },
                          "sWalletId": {
                            "type": "string"
                          },
                          "sQty": {
                            "type": "string",
                            "format": "number",
                            "example": "1"
                          },
                          "sPrice": {
                            "type": "string",
                            "format": "number",
                            "example": "1"
                          },
                          "fCoinId": {
                            "type": "string"
                          },
                          "fWalletId": {
                            "type": "string"
                          },
                          "fPrice": {
                            "type": "string",
                            "format": "number",
                            "example": "1"
                          },
                          "JournalId": {
                            "type": "number"
                          },
                          "LedgerAccountId": {
                            "type": "number"
                          },
                          "CustomerId": {
                            "type": "number"
                          },
                          "VendorId": {
                            "type": "number"
                          },
                          "CostCenterId": {
                            "type": "number"
                          },
                          "ProductId": {
                            "type": "number"
                          },
                          "JobId": {
                            "type": "number"
                          },
                          "rCoin": {
                            "type": "object",
                            "properties": {
                              "symbol": {
                                "type": "string"
                              }
                            }
                          },
                          "rWallet": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "sCoin": {
                            "type": "object",
                            "properties": {
                              "symbol": {
                                "type": "string"
                              }
                            }
                          },
                          "sWallet": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "fCoin": {
                            "type": "object",
                            "properties": {
                              "symbol": {
                                "type": "string"
                              }
                            }
                          },
                          "fWallet": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "Journal": {
                            "type": "object",
                            "properties": {
                              "number": {
                                "type": "integer"
                              }
                            }
                          },
                          "LedgerAccount": {
                            "type": "object",
                            "properties": {
                              "number": {
                                "type": "number"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "Customer": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "Vendor": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "CostCenter": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "Product": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "Job": {
                            "type": "object",
                            "properties": {
                              "number": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "balance": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/coins/{CoinId}/summary": {
      "get": {
        "tags": [
          "Coins"
        ],
        "summary": "Id Summary",
        "description": "List of Coins with balance details by wallet\n\n| Field       | Filterable | Orderable|\n|---------------------|:--:|:--:|\n|_id                  | ✅ | ✅ |\n|name                 | ✅ | ✅ |\n|rate                 | ❌ | ❌ |\n|value                | ❌ | ❌ |\n|gainLoss             | ❌ | ❌ |\n|isFiat               | ❌ | ❌ |\n|rateSymbol           | ❌ | ❌ |\n|custom               | ❌ | ❌ |\n|impair               | ❌ | ❌ |\n|quantity             | ❌ | ❌ |\n|totalCostBasis       | ❌ | ❌ |\n",
        "parameters": [
          {
            "in": "path",
            "name": "CoinId",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Coin._id"
          },
          {
            "in": "query",
            "name": "hideZero",
            "description": "exclude zero balance coins",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "date",
            "description": "date to filter by. defaults to \"now\" ISO DateTime",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "LocationId",
            "description": "Filters for Wallets (Receive, Sent, Fee) in the specified location. Defaults to Global Location when not set.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "consolidated",
            "description": "True = match on the Location & its children. False = match only wallets in this location.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "in": "query",
            "name": "order",
            "description": "Order to return results in. ex \"date:desc\"",
            "schema": {
              "type": "string",
              "default": "name:ASC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Crypto Transactions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "quantity": {
                            "type": "string",
                            "format": "number",
                            "example": "1"
                          },
                          "value": {
                            "type": "string",
                            "format": "number",
                            "example": "1"
                          },
                          "gainLoss": {
                            "type": "string",
                            "format": "number",
                            "example": "1"
                          },
                          "totalCostBasis": {
                            "type": "string",
                            "format": "number",
                            "example": "1"
                          },
                          "rate": {
                            "type": "object",
                            "properties": {
                              "PRICE": {
                                "type": "string",
                                "format": "number",
                                "example": "1"
                              },
                              "CHANGEPCT24HOUR": {
                                "type": "string",
                                "format": "number",
                                "example": "1"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/coins/{CoinId}/crypto-transactions/count": {
      "get": {
        "tags": [
          "Coins"
        ],
        "summary": "Count",
        "description": "Returns a count of transactions based on the passed filters for a single coin. \nIf a significantly large amount of transactions, it is possible an estimated value will be returned.\n\nSee /crypto-transactions/coin/search for filterable fields.\n",
        "parameters": [
          {
            "in": "path",
            "name": "CoinId",
            "description": "Coin._id value",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "LocationId",
            "description": "Filters for Wallets (Receive, Sent, Fee) in the specified location. Defaults to Global Location when not set.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          }
        ],
        "responses": {
          "200": {
            "description": "Count of transactions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "estimate": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/coins/{id}": {
      "delete": {
        "tags": [
          "Coins"
        ],
        "summary": "Delete",
        "description": "Delete one Coin\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Coin DELETE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Coin Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "no content success"
          }
        }
      },
      "get": {
        "tags": [
          "Coins"
        ],
        "summary": "One",
        "description": "Get one Coin",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Coin Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "One Coin",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "symbol": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "impair": {
                      "type": "boolean"
                    },
                    "hidden": {
                      "type": "boolean"
                    },
                    "isFiat": {
                      "type": "boolean"
                    },
                    "rateSymbol": {
                      "type": "string"
                    },
                    "rateId": {
                      "type": "string"
                    },
                    "rateSource": {
                      "type": "string",
                      "enum": [
                        "nomics",
                        "coinmarketcap",
                        "fiat"
                      ]
                    },
                    "customFields": {
                      "type": "object",
                      "description": "Key->Value hash of custom field names and values"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "AssetAccount": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "integer",
                          "description": "Ref: LedgerAccount._id"
                        },
                        "number": {
                          "type": "string",
                          "format": "number"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "FeeAccount": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "integer",
                          "description": "Ref: LedgerAccount._id"
                        },
                        "number": {
                          "type": "string",
                          "format": "number"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "LTGainLossAccount": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "integer",
                          "description": "Ref: LedgerAccount._id"
                        },
                        "number": {
                          "type": "string",
                          "format": "number"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "STGainLossAccount": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "integer",
                          "description": "Ref: LedgerAccount._id"
                        },
                        "number": {
                          "type": "string",
                          "format": "number"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Coins"
        ],
        "summary": "Update",
        "description": "Update One Coin\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Coin UPDATE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Coin Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON body containing key and values to update\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "impair": {
                    "type": "boolean"
                  },
                  "hidden": {
                    "type": "boolean"
                  },
                  "rateId": {
                    "type": "string"
                  },
                  "rateSource": {
                    "type": "string",
                    "enum": [
                      "coinmarketcap"
                    ],
                    "description": "Required if rateId is set"
                  },
                  "customFields": {
                    "type": "object",
                    "description": "Key->Value hash of custom field names and values"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated Coin",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "symbol": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "impair": {
                      "type": "boolean"
                    },
                    "hidden": {
                      "type": "boolean"
                    },
                    "isFiat": {
                      "type": "boolean"
                    },
                    "rateSymbol": {
                      "type": "string"
                    },
                    "rateId": {
                      "type": "string"
                    },
                    "rateSource": {
                      "type": "string",
                      "enum": [
                        "coinmarketcap"
                      ]
                    },
                    "customFields": {
                      "type": "object",
                      "description": "Key->Value hash of custom field names and values"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/coins/list/{rateId}": {
      "get": {
        "tags": [
          "Coins"
        ],
        "summary": "Known Coin",
        "description": "Returns Known Coin by rateId",
        "parameters": [
          {
            "in": "path",
            "name": "rateId",
            "description": "RateId for the Coin",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Known Coin",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "cmc_id": {
                      "type": "string",
                      "description": "Coin Market Cap Unique ID"
                    },
                    "symbol": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "rank": {
                      "type": "number"
                    },
                    "logo_url": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/coins/list": {
      "get": {
        "tags": [
          "Coins"
        ],
        "summary": "Known Coins",
        "description": "Returns the 100 coins of the list of coins that SoftLedger can provide automatic rates for ordered by rank ascending.\nTo see more, filter by symbol or name.\n",
        "parameters": [
          {
            "in": "query",
            "name": "filter",
            "description": "Case Insensitive filter for symbol or name of coin",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Known Coins",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "cmc_id": {
                        "type": "string",
                        "description": "Coin Market Cap Unique ID"
                      },
                      "symbol": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "rank": {
                        "type": "number"
                      },
                      "logo_url": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/coins/{id}/rate": {
      "get": {
        "tags": [
          "Coins"
        ],
        "summary": "Coin Rate",
        "description": "Returns the 'open' rate of the coin in the for the passed date in the fiat currency.\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "_id of Coin to get rate for\nRef: Coin._id\n",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "date",
            "description": "Date to provide rate on",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "in": "query",
            "name": "fiat",
            "description": "Fiat currency to show rate in\nRef: Currency.code\n",
            "schema": {
              "type": "string",
              "default": "USD"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Rate",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "number"
                }
              }
            }
          }
        }
      }
    },
    "/coins/summary": {
      "get": {
        "tags": [
          "Coins"
        ],
        "summary": "Summary",
        "description": "Returns a list of coins with balance descriptions\n\n| Field       | Filterable | Orderable |\n|---------------------|:--:|:--:|\n|_id                  | ✅ | ✅ |\n|name                 | ✅ | ✅ |\n|symbol               | ✅ | ✅ |\n|rate                 | ❌ | ❌ |\n|value                | ❌ | ❌ |\n|gainLoss             | ❌ | ❌ |\n|isFiat               | ❌ | ❌ |\n|rateSymbol           | ✅ | ✅ |\n|custom               | ❌ | ❌ |\n|impair               | ❌ | ❌ |\n|quantity             | ❌ | ❌ |\n|totalCostBasis       | ❌ | ❌ |\n",
        "parameters": [
          {
            "in": "query",
            "name": "showHidden",
            "description": "include hidden coins",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "hideZero",
            "description": "exclude zero balance coins",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "date",
            "description": "date to filter by. defaults to \"now\" ISO Date",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "in": "query",
            "name": "LocationId",
            "description": "Filters for Wallets (Receive, Sent, Fee) in the specified location. Defaults to Global Location when not set.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "consolidated",
            "description": "True = match on the Location & its children. False = match only wallets in this location.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "in": "query",
            "name": "order",
            "description": "Order to return results in. ex \"date:desc\"",
            "schema": {
              "type": "string",
              "default": "name:ASC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Crypto Transactions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "symbol": {
                            "type": "string"
                          },
                          "rateId": {
                            "type": "string"
                          },
                          "rateSource": {
                            "type": "string",
                            "enum": [
                              "coinmarketcap",
                              "nomics"
                            ]
                          },
                          "rateSymbol": {
                            "type": "string"
                          },
                          "isFiat": {
                            "type": "boolean"
                          },
                          "custom": {
                            "type": "boolean"
                          },
                          "impair": {
                            "type": "boolean"
                          },
                          "quantity": {
                            "type": "string",
                            "format": "number",
                            "example": "1"
                          },
                          "value": {
                            "type": "string",
                            "format": "number",
                            "example": "1"
                          },
                          "gainLoss": {
                            "type": "string",
                            "format": "number",
                            "example": "1"
                          },
                          "totalCostBasis": {
                            "type": "string",
                            "format": "number",
                            "example": "1"
                          },
                          "rate": {
                            "type": "object",
                            "properties": {
                              "PRICE": {
                                "type": "string",
                                "format": "number",
                                "example": "1"
                              },
                              "CHANGEPCT24HOUR": {
                                "type": "string",
                                "format": "number",
                                "example": "1"
                              }
                            }
                          },
                          "customFields": {
                            "type": "object",
                            "description": "Key->Value hash of custom field names and values"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/consolidation-rates": {
      "get": {
        "tags": [
          "Consolidation Rates"
        ],
        "summary": "Search",
        "description": "| Field       | Filterable | Sortable |\n|---------------------|:--:|:--:|\n|_id                     | ✅ | ✅ |\n|AccountingPeriodId      | ✅ | ❌ |\n|ChildId                 | ✅ | ❌ |\n|ParentId                | ✅ | ❌ |\n|AccountingPeriod.end    | ❌ | ✅ |\n|createdAt               | ✅ | ✅ |\n|updatedAt               | ✅ | ✅ |\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "in": "query",
            "name": "order",
            "description": "Order to return results in. ex \"date:desc\"",
            "schema": {
              "type": "string",
              "default": "number:ASC"
            }
          },
          {
            "in": "query",
            "name": "LocationId",
            "description": "Will include data from this Parent Location and its children only\n",
            "schema": {
              "type": "number",
              "description": "Ref: Location._id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Cash Receipts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "integer"
                          },
                          "AccountingPeriodId": {
                            "type": "number",
                            "description": "Ref: AccountingPeriod._id"
                          },
                          "ChildId": {
                            "type": "number",
                            "description": "Ref: Location._id"
                          },
                          "ParentId": {
                            "type": "number",
                            "description": "Ref: Location._id"
                          },
                          "spotRate": {
                            "type": "string",
                            "format": "number"
                          },
                          "wavgRate": {
                            "type": "string",
                            "format": "number"
                          },
                          "userSet": {
                            "type": "boolean",
                            "description": "true if user set rate vs system populated"
                          },
                          "AccountingPeriod": {
                            "type": "object",
                            "properties": {
                              "start": {
                                "type": "string",
                                "format": "date"
                              },
                              "end": {
                                "type": "string",
                                "format": "date"
                              }
                            }
                          },
                          "Child": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "currency": {
                                "type": "string"
                              }
                            }
                          },
                          "Parent": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "currency": {
                                "type": "string"
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Consolidation Rates"
        ],
        "summary": "Upsert",
        "description": "Upsert consolidation rates\n",
        "requestBody": {
          "description": "JSON body of consolidation rates to create or update\n\nOne of ChildId or Child.id must be provided\n\nOne of ParentId or Parent.id must be provided\n\nParent.currency and Child.currency must be different\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "spotRate",
                    "wavgRate",
                    "AccountingPeriodId",
                    "ChildId",
                    "ParentId"
                  ],
                  "properties": {
                    "spotRate": {
                      "type": "string",
                      "format": "number",
                      "description": "Must be > 0"
                    },
                    "wavgRate": {
                      "type": "string",
                      "format": "number",
                      "description": "Must be > 0"
                    },
                    "AccountingPeriodId": {
                      "type": "number",
                      "description": "Ref: AccountingPeriod._id"
                    },
                    "ChildId": {
                      "type": "number",
                      "description": "Ref: Location._id"
                    },
                    "Child": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        }
                      }
                    },
                    "ParentId": {
                      "type": "number",
                      "description": "Ref: Location._id"
                    },
                    "Parent": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "consolidationRates",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "AccountingPeriodId": {
                      "type": "number",
                      "description": "Ref: AccountingPeriod._id"
                    },
                    "ChildId": {
                      "type": "number",
                      "description": "Ref: Location._id"
                    },
                    "ParentId": {
                      "type": "number",
                      "description": "Ref: Location._id"
                    },
                    "spotRate": {
                      "type": "string",
                      "format": "number"
                    },
                    "wavgRate": {
                      "type": "string",
                      "format": "number"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/consolidation-rates/{id}": {
      "get": {
        "tags": [
          "Consolidation Rates"
        ],
        "summary": "One",
        "description": "Gets one rate record.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ConsolidationRate._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "system",
            "description": "Set this to true to return the system generated rate values for this record",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Rate details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "AccountingPeriodId": {
                      "type": "number",
                      "description": "Ref: AccountingPeriod._id"
                    },
                    "ChildId": {
                      "type": "number",
                      "description": "Ref: Location._id"
                    },
                    "ParentId": {
                      "type": "number",
                      "description": "Ref: Location._id"
                    },
                    "spotRate": {
                      "type": "string",
                      "format": "number"
                    },
                    "wavgRate": {
                      "type": "string",
                      "format": "number"
                    },
                    "userSet": {
                      "type": "boolean",
                      "description": "true if the rate was manually set by user\n\nfalse if the rate was system generated and never manually set or if the `system` query parameter is set to true\n"
                    },
                    "AccountingPeriod": {
                      "type": "object",
                      "properties": {
                        "start": {
                          "type": "string",
                          "format": "date"
                        },
                        "end": {
                          "type": "string",
                          "format": "date"
                        }
                      }
                    },
                    "Child": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "currency": {
                          "type": "string"
                        }
                      }
                    },
                    "Parent": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "currency": {
                          "type": "string"
                        }
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/consolidation-rates/populate": {
      "post": {
        "tags": [
          "Consolidation Rates"
        ],
        "summary": "Populate",
        "description": "Populates consolidation rates\n",
        "requestBody": {
          "description": "JSON body of period to populate rates for\n\nOnly missing Child/Parent rates will be populated for the period. \n\nSafe to run multiple times for the same period and it will not overwrite your manually entered rates.\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "AccountingPeriodId"
                ],
                "properties": {
                  "AccountingPeriodId": {
                    "type": "number",
                    "description": "Ref: AccountingPeriod._id"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "no content success"
          }
        }
      }
    },
    "/consolidation-rates/{id}/reset": {
      "put": {
        "tags": [
          "Consolidation Rates"
        ],
        "summary": "Reset Rate",
        "description": "Reset consolidation rate to system generated values\n\nThis will overwrite any manually entered rates on this record.\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ConsolidationRate._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated rate",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "AccountingPeriodId": {
                      "type": "number",
                      "description": "Ref: AccountingPeriod._id"
                    },
                    "ChildId": {
                      "type": "number",
                      "description": "Ref: Location._id"
                    },
                    "ParentId": {
                      "type": "number",
                      "description": "Ref: Location._id"
                    },
                    "spotRate": {
                      "type": "string",
                      "format": "number"
                    },
                    "wavgRate": {
                      "type": "string",
                      "format": "number"
                    },
                    "userSet": {
                      "type": "boolean",
                      "description": "would be false since this rate is now system generated"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contacts": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Search",
        "operationId": "contactsSearch",
        "description": "| Field       | Filterable | Sortable |\n|---------------------|:--:|:--:|\n|_id            | ✅ | ✅ |\n|name           | ✅ | ✅ |\n|email          | ✅ | ❌ |\n|phone          | ✅ | ❌ |\n|isPrimary      | ✅ | ❌ |\n|createdAt      | ✅ | ✅ |\n|updatedAt      | ✅ | ✅ |\n|CustomerId     | ✅ | ❌ |\n|VendorId       | ✅ | ❌ |\n|Customer.name  | ❌ | ✅ |\n|Vendor.name    | ❌ | ✅ |\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "in": "query",
            "name": "order",
            "description": "Order to return results in. ex \"date:desc\"",
            "schema": {
              "type": "string",
              "default": "name:ASC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Contacts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          },
                          "phone": {
                            "type": "string"
                          },
                          "isPrimary": {
                            "type": "boolean"
                          },
                          "CustomerId": {
                            "type": "integer",
                            "description": "Ref: Customer._id\n"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "VendorId": {
                            "type": "integer",
                            "description": "Ref: Vendor._id\n"
                          },
                          "Customer": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "Vendor": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Create",
        "description": "Creates a new Contact\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Contact CREATE</div>\n</div>\n",
        "requestBody": {
          "description": "JSON body to create new Contact\n\nOnly one of `[CustomerId, VendorId, Customer.name, Vendor.name]` can be set\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "isPrimary": {
                    "type": "boolean",
                    "description": "Set this as the primary contact for the Customer or Vendor"
                  },
                  "CustomerId": {
                    "type": "integer",
                    "description": "Ref: Customer._id\n"
                  },
                  "VendorId": {
                    "type": "integer",
                    "description": "Ref: Vendor._id\n"
                  },
                  "Customer": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Ref: Customer.name, Can be used in place of CustomerId\n"
                      }
                    }
                  },
                  "Vendor": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Ref: Vendor.name, Can be used in place of VendorId\n"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "string"
                    },
                    "isPrimary": {
                      "type": "boolean"
                    },
                    "CustomerId": {
                      "type": "integer",
                      "description": "Ref: Customer._id\n"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "VendorId": {
                      "type": "integer",
                      "description": "Ref: Vendor._id\n"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contacts/count": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Count",
        "description": "The same filters as [Search](#operation/contactsSearch) can be used here.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          }
        ],
        "responses": {
          "200": {
            "description": "Count response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/contacts/{id}": {
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Delete",
        "description": "Delete one Contact\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Contact DELETE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Contact Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "no content success"
          }
        }
      },
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "One",
        "description": "Get one Contact",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Contact Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "One Contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "string"
                    },
                    "isPrimary": {
                      "type": "boolean"
                    },
                    "CustomerId": {
                      "type": "integer",
                      "description": "Ref: Customer._id\n"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "VendorId": {
                      "type": "integer",
                      "description": "Ref: Vendor._id\n"
                    },
                    "Customer": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "Vendor": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Contacts"
        ],
        "summary": "Update",
        "description": "Update One Contact\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Contact UPDATE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Contact Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON body containing key and values to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "isPrimary": {
                    "type": "boolean",
                    "description": "Set this as the primary contact for the Customer or Vendor"
                  },
                  "CustomerId": {
                    "type": "integer",
                    "description": "Ref: Customer._id\n"
                  },
                  "VendorId": {
                    "type": "integer",
                    "description": "Ref: Vendor._id\n"
                  },
                  "Customer": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Ref: Customer.name, Can be used in place of CustomerId\n"
                      }
                    }
                  },
                  "Vendor": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Ref: Vendor.name, Can be used in place of VendorId\n"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated Contact",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "string"
                    },
                    "isPrimary": {
                      "type": "boolean"
                    },
                    "CustomerId": {
                      "type": "integer",
                      "description": "Ref: Customer._id\n"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "VendorId": {
                      "type": "integer",
                      "description": "Ref: Vendor._id\n"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cost-centers": {
      "get": {
        "tags": [
          "Cost Centers"
        ],
        "summary": "Search",
        "operationId": "costCentersSearch",
        "description": "| Field       | Filterable | Sortable |\n|---------------------|:--:|:--:|\n|_id                  | ✅ | ✅ |\n|id                   | ✅ | ✅ |\n|name                 | ✅ | ✅ |\n|description          | ✅ | ✅ |\n|inactive             | ✅ | ❌ |\n|createdAt            | ✅ | ✅ |\n|updatedAt            | ✅ | ✅ |\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/status"
          },
          {
            "in": "query",
            "name": "order",
            "description": "Order to return results in. ex \"date:desc\"",
            "schema": {
              "type": "string",
              "default": "id:ASC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Cost Centers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "number"
                          },
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "inactive": {
                            "type": "boolean"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Cost Centers"
        ],
        "summary": "Create",
        "description": "Create Cost Center\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>CostCenter CREATE</div>\n</div>\n",
        "requestBody": {
          "description": "JSON body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "name"
                ],
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "inactive": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created Cost Center",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "number"
                    },
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "inactive": {
                      "type": "boolean"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/cost-centers/count": {
      "get": {
        "tags": [
          "Cost Centers"
        ],
        "summary": "Count",
        "description": "The same filters as [Search](#operation/costCentersSearch) can be used here.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/status"
          }
        ],
        "responses": {
          "200": {
            "description": "Count response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cost-centers/{id}": {
      "delete": {
        "tags": [
          "Cost Centers"
        ],
        "summary": "Delete",
        "description": "Delete one Cost Center\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>CostCenter DELETE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Cost Center Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "no content success"
          }
        }
      },
      "get": {
        "tags": [
          "Cost Centers"
        ],
        "summary": "One",
        "description": "Get one Cost Center",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Cost Center Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "One Cost Center",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "number"
                    },
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "inactive": {
                      "type": "boolean"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Cost Centers"
        ],
        "summary": "Update",
        "description": "Update Cost Center\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>CostCenter UPDATE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Cost Center Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON body containing key and values to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "inactive": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated Cost Center",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "number"
                    },
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "inactive": {
                      "type": "boolean"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crypto-transactions/cost-basis": {
      "delete": {
        "tags": [
          "Crypto Transactions"
        ],
        "summary": "Cost Basis",
        "description": "Cancel running costbasis process",
        "responses": {
          "204": {
            "description": "No content"
          }
        }
      },
      "get": {
        "tags": [
          "Crypto Transactions"
        ],
        "summary": "Cost Basis",
        "description": "Get next date cost basis will run from",
        "responses": {
          "200": {
            "description": "Next Cost Basis Date",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextCostBasisDate": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Crypto Transactions"
        ],
        "summary": "Cost Basis",
        "description": "Start costbasis process",
        "responses": {
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/crypto-transactions/{id}/layers": {
      "get": {
        "tags": [
          "Crypto Transactions"
        ],
        "summary": "Cost Layers",
        "description": "Returns a list of cost layers in descending order\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Transaction id to get cost layers for",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "type",
            "description": "Type of cost layers to return",
            "required": true,
            "schema": {
              "type": "string",
              "description": "s: Sent Cost Layers, f: Fee Cost Layers",
              "enum": [
                "s",
                "f"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "Count of transactions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "pickedId": {
                            "type": "integer",
                            "description": "Transaction this layer was picked from"
                          },
                          "date": {
                            "type": "string",
                            "format": "datetime",
                            "description": "Date of Transaction this layer was picked from"
                          },
                          "qtyPicked": {
                            "type": "number",
                            "description": "Amount picked"
                          },
                          "costBasis": {
                            "type": "number",
                            "description": "Price per asset picked"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crypto-transactions/count": {
      "get": {
        "tags": [
          "Crypto Transactions"
        ],
        "summary": "Count",
        "description": "Returns a count of transactions based on the passed filters. \nIf a significantly large amount of transactions, it is possible an estimated value will be returned.\n\nSee /crypto-transactions/search for filterable fields.\n",
        "parameters": [
          {
            "in": "query",
            "name": "coinId",
            "schema": {
              "type": "string"
            },
            "description": "Coin._id\nLimits results to the specified coin\n"
          },
          {
            "in": "query",
            "name": "walletId",
            "schema": {
              "type": "string"
            },
            "description": "Wallet._id\nLimits results to the specified wallet\n"
          },
          {
            "in": "query",
            "name": "LocationId",
            "description": "Filters for Wallets (Receive, Sent, Fee) in the specified location. Defaults to Global Location when not set.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "costLayers",
            "description": "Only returns Crypto Transactions that have unused cost layers.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          }
        ],
        "responses": {
          "200": {
            "description": "Count of transactions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "string"
                    },
                    "estimate": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crypto-transactions": {
      "post": {
        "tags": [
          "Crypto Transactions"
        ],
        "summary": "Create",
        "description": "Create new Crypto Transaction. See below for respective tables \ncontaining required fields and fields that are not allowed for \neach type of transaction.\n\n| Field           | Deposit | Withdrawal | Trade | Transfer |\n| --------------- |:-------:|:----------:|:-----:|:--------:|\n| rCoinId         |   ✅    |     ❌     |   ✅  |    ✅    |\n| rWalletId       |   ✅    |     ❌     |   ✅  |    ✅    |\n| rQty            |   ✅    |     ❌     |   ✅  |    ✅    |\n| rPrice          |   ✔️     |     ❌     |   ✔️   |    ❌    |\n| sCoinId         |   ❌    |     ✅     |   ✅  |    ✅    |\n| sWalletId       |   ❌    |     ✅     |   ✅  |    ✅    |\n| sQty            |   ❌    |     ✔️      |   ✅  |    ✅    |\n| sPrice          |   ❌    |     ✔️      |   --  |    ❌    |\n| LedgerAccountId |   ✅    |     ✅     |   ❌  |    ❌    |\n| Fee Fields      |   ✔️     |     ✔️      |   ✔️   |    ✔️     |\n\n✅ - Required &nbsp;&nbsp; ❌ - Not Allowed &nbsp;&nbsp;   ✔️ - Optional\n\n__Price fields will pull from rate provider if set to null__\n\n__sPrice is Ignored for Trades as is autocalculated from rPrice__\n\n__sQty may be set to 0 if fQty > 0, this allows \"fee only\" transactions__\n\n| Fee Fields      | | \n| --------------- |:---:|\n| fCoinId         | ✅  |  \n| fWalletId       | ✅  |  \n| fQty            | ✅  |   \n| fPrice          |  ✔️  |  \n\n__Setting fCoinId indicates that a fee should be added__\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>CryptoTransaction CREATE</div>\n</div>\n",
        "requestBody": {
          "description": "JSON body to create new Crypto Transaction",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "date",
                  "type",
                  "currency"
                ],
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "rCoinId": {
                    "type": "string",
                    "description": "ref: Coins._id"
                  },
                  "sCoinId": {
                    "type": "string",
                    "description": "ref: Coins._id"
                  },
                  "fCoinId": {
                    "type": "string",
                    "description": "ref: Coins._id"
                  },
                  "rWalletId": {
                    "type": "string",
                    "description": "ref: Wallets._id"
                  },
                  "sWalletId": {
                    "type": "string",
                    "description": "ref: Wallets._id"
                  },
                  "fWalletId": {
                    "type": "string",
                    "description": "ref: Wallets._id"
                  },
                  "rQty": {
                    "type": "string",
                    "format": "number",
                    "example": "1"
                  },
                  "sQty": {
                    "type": "string",
                    "format": "number",
                    "example": "1"
                  },
                  "fQty": {
                    "type": "string",
                    "format": "number",
                    "example": "1"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "deposit",
                      "trade",
                      "transfer",
                      "withdrawal"
                    ]
                  },
                  "sPrice": {
                    "type": "string",
                    "format": "number",
                    "example": "1"
                  },
                  "rPrice": {
                    "type": "string",
                    "format": "number",
                    "example": "1"
                  },
                  "fPrice": {
                    "type": "string",
                    "format": "number",
                    "example": "1"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "reference": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string",
                    "description": "ISO-4217 Currency Code ex \"USD\" or \"GBP\". This specifies which currency rPrice/sPrice/fPrice uses."
                  },
                  "externalId": {
                    "type": "string"
                  },
                  "externalSource": {
                    "type": "string"
                  },
                  "txHash": {
                    "type": "string"
                  },
                  "LedgerAccountId": {
                    "type": "integer",
                    "description": "ref: LedgerAccounts._id"
                  },
                  "CustomerId": {
                    "type": "integer",
                    "description": "ref: Customers._id"
                  },
                  "VendorId": {
                    "type": "integer",
                    "description": "ref: Vendors._id"
                  },
                  "CostCenterId": {
                    "type": "integer",
                    "description": "ref: CostCenters._id"
                  },
                  "ProductId": {
                    "type": "integer",
                    "description": "ref: Products._id"
                  },
                  "JobId": {
                    "type": "integer",
                    "description": "ref: Jobs._id"
                  },
                  "Custom1Id": {
                    "type": "integer",
                    "description": "ref: Custom1._id"
                  },
                  "Custom2Id": {
                    "type": "integer",
                    "description": "ref: Custom2._id"
                  },
                  "Custom3Id": {
                    "type": "integer",
                    "description": "ref: Custom3._id"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created Crypto Transaction",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "rQty": {
                      "type": "string",
                      "format": "number",
                      "example": "1"
                    },
                    "sQty": {
                      "type": "string",
                      "format": "number",
                      "example": "1"
                    },
                    "fQty": {
                      "type": "string",
                      "format": "number",
                      "example": "1"
                    },
                    "qtyPicked": {
                      "type": "string",
                      "format": "number",
                      "example": "1"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "deposit",
                        "withdrawal",
                        "transfer",
                        "trade"
                      ]
                    },
                    "sCostBasis": {
                      "type": "number"
                    },
                    "fCostBasis": {
                      "type": "number"
                    },
                    "sPrice": {
                      "type": "string",
                      "format": "number",
                      "example": "1"
                    },
                    "rPrice": {
                      "type": "string",
                      "format": "number",
                      "example": "1"
                    },
                    "fPrice": {
                      "type": "string",
                      "format": "number",
                      "example": "1"
                    },
                    "locked": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "object"
                    },
                    "notes": {
                      "type": "string"
                    },
                    "reference": {
                      "type": "string"
                    },
                    "currency": {
                      "type": "string",
                      "description": "ISO-4217 Currency Code ex \"USD\" or \"GBP\". This specifies which currency rPrice/sPrice/fPrice uses."
                    },
                    "currencyRate": {
                      "type": "string",
                      "format": "number",
                      "example": "1"
                    },
                    "externalId": {
                      "type": "string"
                    },
                    "externalSource": {
                      "type": "string"
                    },
                    "txHash": {
                      "type": "string"
                    },
                    "SystemJobId": {
                      "type": "string"
                    },
                    "rCoinId": {
                      "type": "string"
                    },
                    "sCoinId": {
                      "type": "string"
                    },
                    "fCoinId": {
                      "type": "string"
                    },
                    "rWalletId": {
                      "type": "string"
                    },
                    "sWalletId": {
                      "type": "string"
                    },
                    "fWalletId": {
                      "type": "string"
                    },
                    "LedgerAccountId": {
                      "type": "integer"
                    },
                    "CustomerId": {
                      "type": "integer"
                    },
                    "VendorId": {
                      "type": "integer"
                    },
                    "JournalId": {
                      "type": "integer"
                    },
                    "CostCenterId": {
                      "type": "integer"
                    },
                    "ProductId": {
                      "type": "integer"
                    },
                    "JobId": {
                      "type": "integer"
                    },
                    "Custom1Id": {
                      "type": "integer"
                    },
                    "Custom2Id": {
                      "type": "integer"
                    },
                    "Custom3Id": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Crypto Transactions"
        ],
        "summary": "Search",
        "description": "| Field       | Filterable | Sortable |\n|---------------------|:--:|:--:|\n|_id                  | ✅ | ✅ |\n|CostCenter.id        | ❌ | ✅ |\n|CostCenterId         | ✅ | ❌ |\n|createdAt            | ✅ | ✅ |\n|currency             | ✅ | ✅ |\n|Custom1Id            | ✅ | ❌ |\n|Custom1.id           | ❌ | ✅ |\n|Custom2Id            | ✅ | ❌ |\n|Custom2.id           | ❌ | ✅ |\n|Custom3Id            | ✅ | ❌ |\n|Custom3.id           | ❌ | ✅ |\n|Customer.id          | ❌ | ✅ |\n|CustomerId           | ✅ | ❌ |\n|date                 | ✅ | ✅ |\n|externalId           | ✅ | ✅ |\n|externalSource       | ✅ | ✅ |\n|fCoin.symbol         | ❌ | ✅ |\n|fCoinId              | ✅ | ❌ |\n|fPrice               | ✅ | ✅ |\n|fQty                 | ✅ | ✅ |\n|fWallet.name         | ❌ | ✅ |\n|fWalletId            | ✅ | ❌ |\n|isJournalStale       | ✅ | ✅ |\n|Job.number           | ❌ | ✅ |\n|JobId                | ✅ | ❌ |\n|Journal.number       | ✅ | ✅ |\n|JournalId            | ✅ | ❌ |\n|LedgerAccount.number | ❌ | ✅ |\n|LedgerAccountId      | ✅ | ❌ |\n|locked               | ✅ | ✅ |\n|notes                | ✅ | ✅ |\n|Product.id           | ❌ | ✅ |\n|ProductId            | ✅ | ❌ |\n|rCoin.symbol         | ❌ | ✅ |\n|rCoinId              | ✅ | ❌ |\n|reference            | ✅ | ✅ |\n|rPrice               | ✅ | ✅ |\n|rQty                 | ✅ | ✅ |\n|rWallet.name         | ❌ | ✅ |\n|rWalletId            | ✅ | ❌ |\n|sCoin.symbol         | ❌ | ✅ |\n|sCoinId              | ✅ | ❌ |\n|sPrice               | ✅ | ✅ |\n|sQty                 | ✅ | ✅ |\n|sWallet.name         | ❌ | ✅ |\n|sWalletId            | ✅ | ❌ |\n|SystemJobId          | ✅ | ✅ |\n|txHash               | ✅ | ✅ |\n|type                 | ✅ | ✅ |\n|updatedAt            | ✅ | ✅ |\n|Vendor.id            | ❌ | ✅ |\n|VendorId             | ✅ | ❌ |\n",
        "parameters": [
          {
            "in": "query",
            "name": "coinId",
            "schema": {
              "type": "string"
            },
            "description": "Coin._id\nLimits results to the specified coin\n"
          },
          {
            "in": "query",
            "name": "walletId",
            "schema": {
              "type": "string"
            },
            "description": "Wallet._id\nLimits results to the specified wallet\n"
          },
          {
            "in": "query",
            "name": "LocationId",
            "description": "Filters for Wallets (Receive, Sent, Fee) in the specified location. Defaults to Global Location when not set.",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "costLayers",
            "description": "Only returns Crypto Transactions that have unused cost layers.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "in": "query",
            "name": "order",
            "description": "Order to return results in. ex \"date:desc\"",
            "schema": {
              "type": "string",
              "default": "date:DESC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Crypto Transactions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "integer"
                          },
                          "date": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "rQty": {
                            "type": "number"
                          },
                          "sQty": {
                            "type": "number"
                          },
                          "fQty": {
                            "type": "number"
                          },
                          "qtyPicked": {
                            "type": "string",
                            "format": "number"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "deposit",
                              "withdrawal",
                              "transfer",
                              "trade"
                            ]
                          },
                          "sCostBasis": {
                            "description": "Cost Basis for sent amount (in crypto home currency)",
                            "type": "number"
                          },
                          "fCostBasis": {
                            "description": "Cost Basis for fee amount (in crypto home currency)",
                            "type": "number"
                          },
                          "sPrice": {
                            "type": "number"
                          },
                          "rPrice": {
                            "type": "number"
                          },
                          "fPrice": {
                            "type": "number"
                          },
                          "locked": {
                            "type": "boolean"
                          },
                          "error": {
                            "type": "object"
                          },
                          "notes": {
                            "type": "string"
                          },
                          "reference": {
                            "type": "string"
                          },
                          "currency": {
                            "type": "string",
                            "description": "ISO-4217 Currency Code ex \"USD\" or \"GBP\". This specifies which currency rPrice/sPrice/fPrice uses."
                          },
                          "currencyRate": {
                            "type": "string",
                            "format": "number"
                          },
                          "externalId": {
                            "type": "string"
                          },
                          "externalSource": {
                            "type": "string"
                          },
                          "txHash": {
                            "type": "string"
                          },
                          "SystemJobId": {
                            "type": "string"
                          },
                          "rCoinId": {
                            "type": "string"
                          },
                          "sCoinId": {
                            "type": "string"
                          },
                          "fCoinId": {
                            "type": "string"
                          },
                          "rWalletId": {
                            "type": "string"
                          },
                          "sWalletId": {
                            "type": "string"
                          },
                          "fWalletId": {
                            "type": "string"
                          },
                          "sGainLoss": {
                            "description": "Realised Gain/Loss in sent amount (in crypto home currency)",
                            "type": "string",
                            "format": "number"
                          },
                          "fGainLoss": {
                            "description": "Realised Gain/Loss in fee amount (in crypto home currency)",
                            "type": "string",
                            "format": "number"
                          },
                          "LedgerAccountId": {
                            "type": "integer"
                          },
                          "CustomerId": {
                            "type": "integer"
                          },
                          "VendorId": {
                            "type": "integer"
                          },
                          "JournalId": {
                            "type": "integer"
                          },
                          "CostCenterId": {
                            "type": "integer"
                          },
                          "ProductId": {
                            "type": "integer"
                          },
                          "JobId": {
                            "type": "integer"
                          },
                          "rCoin": {
                            "type": "object",
                            "properties": {
                              "symbol": {
                                "type": "string"
                              }
                            }
                          },
                          "rWallet": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "sCoin": {
                            "type": "object",
                            "properties": {
                              "symbol": {
                                "type": "string"
                              }
                            }
                          },
                          "sWallet": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "fCoin": {
                            "type": "object",
                            "properties": {
                              "symbol": {
                                "type": "string"
                              }
                            }
                          },
                          "fWallet": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "Customer": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "Vendor": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "LedgerAccount": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "number": {
                                "type": "string"
                              }
                            }
                          },
                          "Journal": {
                            "type": "object",
                            "properties": {
                              "number": {
                                "type": "integer"
                              }
                            }
                          },
                          "CostCenter": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "Product": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "Job": {
                            "type": "object",
                            "properties": {
                              "number": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crypto-transactions/{id}": {
      "delete": {
        "tags": [
          "Crypto Transactions"
        ],
        "summary": "Delete",
        "description": "Delete one Crypto Transaction\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Cryptotransaction DELETE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Crypto Transaction Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "no content success"
          }
        }
      },
      "get": {
        "tags": [
          "Crypto Transactions"
        ],
        "summary": "One",
        "description": "Get one Crypto Transaction",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Crypto Transaction Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "One Crypto Transaction",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "rQty": {
                      "type": "number"
                    },
                    "sQty": {
                      "type": "number"
                    },
                    "fQty": {
                      "type": "number"
                    },
                    "qtyPicked": {
                      "type": "string",
                      "format": "number"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "deposit",
                        "withdrawal",
                        "transfer",
                        "trade"
                      ]
                    },
                    "sCostBasis": {
                      "type": "number"
                    },
                    "fCostBasis": {
                      "type": "number"
                    },
                    "sPrice": {
                      "type": "number"
                    },
                    "rPrice": {
                      "type": "number"
                    },
                    "fPrice": {
                      "type": "number"
                    },
                    "locked": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "object"
                    },
                    "notes": {
                      "type": "string"
                    },
                    "reference": {
                      "type": "string"
                    },
                    "currency": {
                      "type": "string",
                      "description": "ISO-4217 Currency Code ex \"USD\" or \"GBP\". This specifies which currency rPrice/sPrice/fPrice uses."
                    },
                    "currencyRate": {
                      "type": "string",
                      "format": "number"
                    },
                    "externalId": {
                      "type": "string"
                    },
                    "externalSource": {
                      "type": "string"
                    },
                    "txHash": {
                      "type": "string"
                    },
                    "SystemJobId": {
                      "type": "string"
                    },
                    "rCoinId": {
                      "type": "string"
                    },
                    "sCoinId": {
                      "type": "string"
                    },
                    "fCoinId": {
                      "type": "string"
                    },
                    "rWalletId": {
                      "type": "string"
                    },
                    "sWalletId": {
                      "type": "string"
                    },
                    "fWalletId": {
                      "type": "string"
                    },
                    "LedgerAccountId": {
                      "type": "integer"
                    },
                    "CustomerId": {
                      "type": "integer"
                    },
                    "VendorId": {
                      "type": "integer"
                    },
                    "JournalId": {
                      "type": "integer"
                    },
                    "CostCenterId": {
                      "type": "integer"
                    },
                    "ProductId": {
                      "type": "integer"
                    },
                    "JobId": {
                      "type": "integer"
                    },
                    "rCoin": {
                      "type": "object",
                      "properties": {
                        "symbol": {
                          "type": "string"
                        }
                      }
                    },
                    "rWallet": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "sCoin": {
                      "type": "object",
                      "properties": {
                        "symbol": {
                          "type": "string"
                        }
                      }
                    },
                    "sWallet": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "fCoin": {
                      "type": "object",
                      "properties": {
                        "symbol": {
                          "type": "string"
                        }
                      }
                    },
                    "fWallet": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "Customer": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "Vendor": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "LedgerAccount": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "number": {
                          "type": "string"
                        }
                      }
                    },
                    "Journal": {
                      "type": "object",
                      "properties": {
                        "number": {
                          "type": "integer"
                        }
                      }
                    },
                    "CostCenter": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "Product": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "Job": {
                      "type": "object",
                      "properties": {
                        "number": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Crypto Transactions"
        ],
        "summary": "Update",
        "description": "Update One Crypto Transaction. See Create for allowed fields.\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>CryptoTransaction UPDATE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Crypto Transaction Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON body containing key and values to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "rCoinId": {
                    "type": "string",
                    "description": "Ref: Coins._id"
                  },
                  "sCoinId": {
                    "type": "string",
                    "description": "Ref: Coins._id"
                  },
                  "fCoinId": {
                    "type": "string",
                    "description": "Ref: Coins._id"
                  },
                  "rWalletId": {
                    "type": "string",
                    "description": "Ref: Wallets._id"
                  },
                  "sWalletId": {
                    "type": "string",
                    "description": "Ref: Wallets._id"
                  },
                  "fWalletId": {
                    "type": "string",
                    "description": "Ref: Wallets._id"
                  },
                  "rQty": {
                    "type": "string",
                    "format": "number",
                    "example": "1"
                  },
                  "sQty": {
                    "type": "string",
                    "format": "number",
                    "example": "1"
                  },
                  "fQty": {
                    "type": "string",
                    "format": "number",
                    "example": "1"
                  },
                  "qtyPicked": {
                    "type": "string",
                    "format": "number",
                    "example": "1"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "deposit",
                      "trade",
                      "transfer",
                      "withdrawal"
                    ]
                  },
                  "sPrice": {
                    "type": "string",
                    "format": "number",
                    "example": "1"
                  },
                  "rPrice": {
                    "type": "string",
                    "format": "number",
                    "example": "1"
                  },
                  "fPrice": {
                    "type": "string",
                    "format": "number",
                    "example": "1"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "reference": {
                    "type": "string"
                  },
                  "LedgerAccountId": {
                    "type": "integer",
                    "description": "Ref: LedgerAccount._id"
                  },
                  "CustomerId": {
                    "type": "integer",
                    "description": "Ref: Customer._id"
                  },
                  "currency": {
                    "type": "string",
                    "description": "ISO-4217 Currency Code ex \"USD\" or \"GBP\". This specifies which currency rPrice/sPrice/fPrice uses."
                  },
                  "currencyRate": {
                    "type": "string",
                    "format": "number"
                  },
                  "externalId": {
                    "type": "string"
                  },
                  "externalSource": {
                    "type": "string"
                  },
                  "txHash": {
                    "type": "string"
                  },
                  "VendorId": {
                    "type": "integer",
                    "description": "Ref: Vendor._id"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated Crypto Transaction",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "rQty": {
                      "type": "string",
                      "format": "number",
                      "example": "1"
                    },
                    "sQty": {
                      "type": "string",
                      "format": "number",
                      "example": "1"
                    },
                    "fQty": {
                      "type": "string",
                      "format": "number",
                      "example": "1"
                    },
                    "qtyPicked": {
                      "type": "string",
                      "format": "number",
                      "example": "1"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "deposit",
                        "withdrawal",
                        "transfer",
                        "trade"
                      ]
                    },
                    "sCostBasis": {
                      "type": "number"
                    },
                    "fCostBasis": {
                      "type": "number"
                    },
                    "sPrice": {
                      "type": "string",
                      "format": "number",
                      "example": "1"
                    },
                    "rPrice": {
                      "type": "string",
                      "format": "number",
                      "example": "1"
                    },
                    "fPrice": {
                      "type": "string",
                      "format": "number",
                      "example": "1"
                    },
                    "locked": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "object"
                    },
                    "notes": {
                      "type": "string"
                    },
                    "reference": {
                      "type": "string"
                    },
                    "currency": {
                      "type": "string",
                      "description": "ISO-4217 Currency Code ex \"USD\" or \"GBP\". This specifies which currency rPrice/sPrice/fPrice uses."
                    },
                    "currencyRate": {
                      "type": "string",
                      "format": "number",
                      "example": "1"
                    },
                    "externalId": {
                      "type": "string"
                    },
                    "externalSource": {
                      "type": "string"
                    },
                    "txHash": {
                      "type": "string"
                    },
                    "SystemJobId": {
                      "type": "string"
                    },
                    "rCoinId": {
                      "type": "string"
                    },
                    "sCoinId": {
                      "type": "string"
                    },
                    "fCoinId": {
                      "type": "string"
                    },
                    "rWalletId": {
                      "type": "string"
                    },
                    "sWalletId": {
                      "type": "string"
                    },
                    "fWalletId": {
                      "type": "string"
                    },
                    "LedgerAccountId": {
                      "type": "integer"
                    },
                    "CustomerId": {
                      "type": "integer"
                    },
                    "VendorId": {
                      "type": "integer"
                    },
                    "JournalId": {
                      "type": "integer"
                    },
                    "rCoin": {
                      "type": "object",
                      "properties": {
                        "symbol": {
                          "type": "string"
                        }
                      }
                    },
                    "rWallet": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "sCoin": {
                      "type": "object",
                      "properties": {
                        "symbol": {
                          "type": "string"
                        }
                      }
                    },
                    "sWallet": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "fCoin": {
                      "type": "object",
                      "properties": {
                        "symbol": {
                          "type": "string"
                        }
                      }
                    },
                    "fWallet": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "Customer": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "Vendor": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "LedgerAccount": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "number": {
                          "type": "string"
                        }
                      }
                    },
                    "Journal": {
                      "type": "object",
                      "properties": {
                        "number": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crypto-transactions/merge": {
      "post": {
        "tags": [
          "Crypto Transactions"
        ],
        "summary": "Merge",
        "description": "Merges a deposit and withdrawal crypto transaction into a transfer transaction.\n\nThe deposit and withdrawal transactions will both be deleted and a single transfer transaction will be created. Any linked journals will be destroyed. \n\nThe fee from the withdrawal will be added to the transfer transaction.\n\nThe rCoin of the deposit and the sCoin of the withdrawal must match.\n\nThe rWallet of the deposit and the sWallet of the withdrawal must match.\n\nThe rQty of the deposit and the sQty of the withdrawal must match.\n\nThe txHash of the deposit and the txHash of the withdrawal must match.\n\nThe currency of the deposit and the currency of the withdrawal must match.\n",
        "requestBody": {
          "description": "Merge deposit and withdrawal crypto transactions into a transfer transaction.\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "depositId",
                  "withdrawalId"
                ],
                "properties": {
                  "depositId": {
                    "type": "string",
                    "description": "Ref: CryptoTransaction._id"
                  },
                  "withdrawalId": {
                    "type": "string",
                    "description": "Ref: CryptoTransaction._id"
                  },
                  "useDepositMetaData": {
                    "type": "boolean",
                    "default": false,
                    "description": "Set True to use deposit meta data to populate new transfer transaction. \n\nSet False to use withdrawal meta data to populate new transfer transaction.\n\nThe metadata includes [date, reference, notes, dimensions, attachments, externalId, externalSource]\n"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created Crypto Transaction From Merge",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/crypto-transactions/create-journals": {
      "post": {
        "tags": [
          "Crypto Transactions"
        ],
        "summary": "Create Journals",
        "description": "Start create journal process",
        "responses": {
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/currency": {
      "post": {
        "tags": [
          "Currencies"
        ],
        "summary": "Create",
        "description": "Create new currency\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Currency CREATE</div>\n</div>\n",
        "requestBody": {
          "description": "JSON body to create a new currency",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "symbol",
                  "name"
                ],
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "symbol": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "rounding_method": {
                    "type": "number",
                    "default": 1
                  },
                  "fraction": {
                    "type": "number",
                    "default": 2
                  },
                  "custom": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created currency",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "fraction": {
                      "type": "number"
                    },
                    "rounding_method": {
                      "type": "number"
                    },
                    "symbol": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "custom": {
                      "type": "boolean",
                      "default": false
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Currencies"
        ],
        "summary": "Search",
        "description": "Gets all currency",
        "responses": {
          "200": {
            "description": "List of Currencies",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "fraction": {
                        "type": "number"
                      },
                      "rounding_method": {
                        "type": "number"
                      },
                      "code": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "symbol": {
                        "type": "string"
                      },
                      "custom": {
                        "type": "boolean",
                        "default": false
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/currency/{code}/forex-rates": {
      "get": {
        "tags": [
          "Currencies"
        ],
        "summary": "Search",
        "description": "Gets FX rates for currency",
        "parameters": [
          {
            "in": "path",
            "name": "code",
            "description": "Currency Code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of fx rates",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "string"
                      },
                      "LD": {
                        "type": "string"
                      },
                      "AED": {
                        "type": "string"
                      },
                      "AFN": {
                        "type": "string"
                      },
                      "ALL": {
                        "type": "string"
                      },
                      "AMD": {
                        "type": "string"
                      },
                      "ANG": {
                        "type": "string"
                      },
                      "AOA": {
                        "type": "string"
                      },
                      "ARS": {
                        "type": "string"
                      },
                      "AUD": {
                        "type": "string"
                      },
                      "AWG": {
                        "type": "string"
                      },
                      "AZN": {
                        "type": "string"
                      },
                      "BAM": {
                        "type": "string"
                      },
                      "BBD": {
                        "type": "string"
                      },
                      "BDT": {
                        "type": "string"
                      },
                      "BGN": {
                        "type": "string"
                      },
                      "BHD": {
                        "type": "string"
                      },
                      "BIF": {
                        "type": "string"
                      },
                      "BMD": {
                        "type": "string"
                      },
                      "BND": {
                        "type": "string"
                      },
                      "BOB": {
                        "type": "string"
                      },
                      "BRL": {
                        "type": "string"
                      },
                      "BSD": {
                        "type": "string"
                      },
                      "BTC": {
                        "type": "string"
                      },
                      "BTN": {
                        "type": "string"
                      },
                      "BTS": {
                        "type": "string"
                      },
                      "BWP": {
                        "type": "string"
                      },
                      "BYN": {
                        "type": "string"
                      },
                      "BZD": {
                        "type": "string"
                      },
                      "CAD": {
                        "type": "string"
                      },
                      "CDF": {
                        "type": "string"
                      },
                      "CHF": {
                        "type": "string"
                      },
                      "CLF": {
                        "type": "string"
                      },
                      "CLP": {
                        "type": "string"
                      },
                      "CNH": {
                        "type": "string"
                      },
                      "CNY": {
                        "type": "string"
                      },
                      "COP": {
                        "type": "string"
                      },
                      "CRC": {
                        "type": "string"
                      },
                      "CUC": {
                        "type": "string"
                      },
                      "CUP": {
                        "type": "string"
                      },
                      "CVE": {
                        "type": "string"
                      },
                      "CZK": {
                        "type": "string"
                      },
                      "DJF": {
                        "type": "string"
                      },
                      "DKK": {
                        "type": "string"
                      },
                      "DOP": {
                        "type": "string"
                      },
                      "DZD": {
                        "type": "string"
                      },
                      "EAC": {
                        "type": "string"
                      },
                      "EGP": {
                        "type": "string"
                      },
                      "EMC": {
                        "type": "string"
                      },
                      "ERN": {
                        "type": "string"
                      },
                      "ETB": {
                        "type": "string"
                      },
                      "ETH": {
                        "type": "string"
                      },
                      "EUR": {
                        "type": "string"
                      },
                      "FCT": {
                        "type": "string"
                      },
                      "FJD": {
                        "type": "string"
                      },
                      "FKP": {
                        "type": "string"
                      },
                      "FTC": {
                        "type": "string"
                      },
                      "GBP": {
                        "type": "string"
                      },
                      "GEL": {
                        "type": "string"
                      },
                      "GGP": {
                        "type": "string"
                      },
                      "GHS": {
                        "type": "string"
                      },
                      "GIP": {
                        "type": "string"
                      },
                      "GMD": {
                        "type": "string"
                      },
                      "GNF": {
                        "type": "string"
                      },
                      "GTQ": {
                        "type": "string"
                      },
                      "GYD": {
                        "type": "string"
                      },
                      "HKD": {
                        "type": "string"
                      },
                      "HNL": {
                        "type": "string"
                      },
                      "HRK": {
                        "type": "string"
                      },
                      "HTG": {
                        "type": "string"
                      },
                      "HUF": {
                        "type": "string"
                      },
                      "IDR": {
                        "type": "string"
                      },
                      "ILS": {
                        "type": "string"
                      },
                      "IMP": {
                        "type": "string"
                      },
                      "INR": {
                        "type": "string"
                      },
                      "IQD": {
                        "type": "string"
                      },
                      "IRR": {
                        "type": "string"
                      },
                      "ISK": {
                        "type": "string"
                      },
                      "JEP": {
                        "type": "string"
                      },
                      "JMD": {
                        "type": "string"
                      },
                      "JOD": {
                        "type": "string"
                      },
                      "JPY": {
                        "type": "string"
                      },
                      "KES": {
                        "type": "string"
                      },
                      "KGS": {
                        "type": "string"
                      },
                      "KHR": {
                        "type": "string"
                      },
                      "KMF": {
                        "type": "string"
                      },
                      "KPW": {
                        "type": "string"
                      },
                      "KRW": {
                        "type": "string"
                      },
                      "KWD": {
                        "type": "string"
                      },
                      "KYD": {
                        "type": "string"
                      },
                      "KZT": {
                        "type": "string"
                      },
                      "LAK": {
                        "type": "string"
                      },
                      "LBP": {
                        "type": "string"
                      },
                      "LKR": {
                        "type": "string"
                      },
                      "LRD": {
                        "type": "string"
                      },
                      "LSL": {
                        "type": "string"
                      },
                      "LTC": {
                        "type": "string"
                      },
                      "LYD": {
                        "type": "string"
                      },
                      "MAD": {
                        "type": "string"
                      },
                      "MDL": {
                        "type": "string"
                      },
                      "MGA": {
                        "type": "string"
                      },
                      "MKD": {
                        "type": "string"
                      },
                      "MMK": {
                        "type": "string"
                      },
                      "MNT": {
                        "type": "string"
                      },
                      "MOP": {
                        "type": "string"
                      },
                      "MRO": {
                        "type": "string"
                      },
                      "MRU": {
                        "type": "string"
                      },
                      "MUR": {
                        "type": "string"
                      },
                      "MVR": {
                        "type": "string"
                      },
                      "MWK": {
                        "type": "string"
                      },
                      "MXN": {
                        "type": "string"
                      },
                      "MYR": {
                        "type": "string"
                      },
                      "MZN": {
                        "type": "string"
                      },
                      "NAD": {
                        "type": "string"
                      },
                      "NGN": {
                        "type": "string"
                      },
                      "NIO": {
                        "type": "string"
                      },
                      "NMC": {
                        "type": "string"
                      },
                      "NOK": {
                        "type": "string"
                      },
                      "NPR": {
                        "type": "string"
                      },
                      "NVC": {
                        "type": "string"
                      },
                      "NXT": {
                        "type": "string"
                      },
                      "NZD": {
                        "type": "string"
                      },
                      "OMR": {
                        "type": "string"
                      },
                      "PAB": {
                        "type": "string"
                      },
                      "PEN": {
                        "type": "string"
                      },
                      "PGK": {
                        "type": "string"
                      },
                      "PHP": {
                        "type": "string"
                      },
                      "PKR": {
                        "type": "string"
                      },
                      "PLN": {
                        "type": "string"
                      },
                      "PPC": {
                        "type": "string"
                      },
                      "PYG": {
                        "type": "string"
                      },
                      "QAR": {
                        "type": "string"
                      },
                      "RON": {
                        "type": "string"
                      },
                      "RSD": {
                        "type": "string"
                      },
                      "RUB": {
                        "type": "string"
                      },
                      "RWF": {
                        "type": "string"
                      },
                      "SAR": {
                        "type": "string"
                      },
                      "SBD": {
                        "type": "string"
                      },
                      "SCR": {
                        "type": "string"
                      },
                      "SDG": {
                        "type": "string"
                      },
                      "SEK": {
                        "type": "string"
                      },
                      "SGD": {
                        "type": "string"
                      },
                      "SHP": {
                        "type": "string"
                      },
                      "SLL": {
                        "type": "string"
                      },
                      "SOS": {
                        "type": "string"
                      },
                      "SRD": {
                        "type": "string"
                      },
                      "SSP": {
                        "type": "string"
                      },
                      "STD": {
                        "type": "string"
                      },
                      "STN": {
                        "type": "string"
                      },
                      "STR": {
                        "type": "string"
                      },
                      "SVC": {
                        "type": "string"
                      },
                      "SYP": {
                        "type": "string"
                      },
                      "SZL": {
                        "type": "string"
                      },
                      "THB": {
                        "type": "string"
                      },
                      "TJS": {
                        "type": "string"
                      },
                      "TMT": {
                        "type": "string"
                      },
                      "TND": {
                        "type": "string"
                      },
                      "TOP": {
                        "type": "string"
                      },
                      "TRY": {
                        "type": "string"
                      },
                      "TTD": {
                        "type": "string"
                      },
                      "TWD": {
                        "type": "string"
                      },
                      "TZS": {
                        "type": "string"
                      },
                      "UAH": {
                        "type": "string"
                      },
                      "UGX": {
                        "type": "string"
                      },
                      "USD": {
                        "type": "string"
                      },
                      "UYU": {
                        "type": "string"
                      },
                      "UZS": {
                        "type": "string"
                      },
                      "VEF": {
                        "type": "string"
                      },
                      "VES": {
                        "type": "string"
                      },
                      "VND": {
                        "type": "string"
                      },
                      "VTC": {
                        "type": "string"
                      },
                      "VUV": {
                        "type": "string"
                      },
                      "WST": {
                        "type": "string"
                      },
                      "XAF": {
                        "type": "string"
                      },
                      "XAG": {
                        "type": "string"
                      },
                      "XAU": {
                        "type": "string"
                      },
                      "XCD": {
                        "type": "string"
                      },
                      "XDR": {
                        "type": "string"
                      },
                      "XMR": {
                        "type": "string"
                      },
                      "XOF": {
                        "type": "string"
                      },
                      "XPD": {
                        "type": "string"
                      },
                      "XPF": {
                        "type": "string"
                      },
                      "XPM": {
                        "type": "string"
                      },
                      "XPT": {
                        "type": "string"
                      },
                      "XRP": {
                        "type": "string"
                      },
                      "YER": {
                        "type": "string"
                      },
                      "ZAR": {
                        "type": "string"
                      },
                      "ZMW": {
                        "type": "string"
                      },
                      "ZWL": {
                        "type": "string"
                      },
                      "DASH": {
                        "type": "string"
                      },
                      "DOGE": {
                        "type": "string"
                      },
                      "VEF_DICOM": {
                        "type": "string"
                      },
                      "VEF_DIPRO": {
                        "type": "string"
                      },
                      "VEF_BLKMKT": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/currency/{code}": {
      "get": {
        "tags": [
          "Currencies"
        ],
        "summary": "Get one",
        "description": "Gets one currency",
        "parameters": [
          {
            "in": "path",
            "name": "code",
            "description": "Currency Code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "One Currency",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "fraction": {
                      "type": "number"
                    },
                    "rounding_method": {
                      "type": "number"
                    },
                    "code": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "symbol": {
                      "type": "string"
                    },
                    "custom": {
                      "type": "boolean",
                      "default": false
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Currencies"
        ],
        "summary": "Delete",
        "description": "Delete a Currency\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Currency DELETE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "code",
            "description": "Currency Code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "no content success"
          }
        }
      },
      "put": {
        "tags": [
          "Currencies"
        ],
        "summary": "Update",
        "description": "Update a currency\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Currency UPDATE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "code",
            "description": "Currency Code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON object containing key and values to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "symbol": {
                    "type": "string"
                  },
                  "rounding_method": {
                    "type": "number"
                  },
                  "fraction": {
                    "type": "number"
                  },
                  "code": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated Currency",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "fraction": {
                      "type": "number"
                    },
                    "rounding_method": {
                      "type": "number"
                    },
                    "symbol": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string",
                      "nullable": true
                    },
                    "custom": {
                      "type": "boolean",
                      "default": false
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/custom/{name}": {
      "get": {
        "tags": [
          "Custom Dimensions"
        ],
        "summary": "Search",
        "operationId": "customSearch",
        "description": "| Field       | Filterable | Sortable |\n|---------------------|:--:|:--:|\n|_id                  | ✅ | ✅ |\n|id                   | ✅ | ✅ |\n|name                 | ✅ | ✅ |\n|description          | ✅ | ✅ |\n|inactive             | ✅ | ❌ |\n|createdAt            | ✅ | ✅ |\n|updatedAt            | ✅ | ✅ |\n",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Custom Dimension Object Type Name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/status"
          },
          {
            "in": "query",
            "name": "order",
            "description": "Order to return results in. ex \"date:desc\"",
            "schema": {
              "type": "string",
              "default": "id:ASC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Custom Dimensions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "number"
                          },
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "inactive": {
                            "type": "boolean"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Custom Dimensions"
        ],
        "summary": "Create",
        "description": "Create Custom Dimension\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>CustomDimension DELETE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Custom Dimension Object Type Name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "name"
                ],
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "inactive": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Templates",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "number"
                    },
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "inactive": {
                      "type": "boolean"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/custom/{name}/count": {
      "get": {
        "tags": [
          "Custom Dimensions"
        ],
        "summary": "Count",
        "description": "The same filters as [Search](#operation/customSearch) can be used here.\n",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Custom Dimension Object Type Name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/status"
          }
        ],
        "responses": {
          "200": {
            "description": "Count response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/custom/{name}/{id}": {
      "delete": {
        "tags": [
          "Custom Dimensions"
        ],
        "summary": "Delete",
        "description": "Delete one Custom Dimension\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>CustomDimension DELETE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Custom Dimension Object Type Name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "description": "Custom Dimension Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "no content success"
          }
        }
      },
      "get": {
        "tags": [
          "Custom Dimensions"
        ],
        "summary": "One",
        "description": "Get one Custom Dimension",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Custom Dimension Object Type Name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "description": "Custom Dimension Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "One Custom Dimension",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "number"
                    },
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "inactive": {
                      "type": "boolean"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Custom Dimensions"
        ],
        "summary": "Update",
        "description": "Update Custom Dimension\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>CustomDimension UPDATE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "description": "Custom Dimension Object Type Name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "id",
            "description": "Custom Dimension Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON body containing key and values to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "inactive": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated Custom Dimension",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "number"
                    },
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "inactive": {
                      "type": "boolean"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customers": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Search",
        "operationId": "customersSearch",
        "description": "| Field       | Filterable | Sortable |\n|---------------------|:--:|:--:|\n|_id                     | ✅ | ✅ |\n|id                      | ✅ | ✅ |\n|name                    | ✅ | ✅ |\n|externalId              | ✅ | ✅ |\n|email                   | ✅ | ✅ |\n|description             | ✅ | ✅ |\n|terms                   | ✅ | ✅ |\n|customFields            | ✅ | ❌ |\n|inactive                | ✅ | ❌ |\n|createdAt               | ✅ | ✅ |\n|updatedAt               | ✅ | ✅ |\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/status"
          },
          {
            "in": "query",
            "name": "order",
            "description": "Order to return results in. ex \"date:desc\"",
            "schema": {
              "type": "string",
              "default": "id:ASC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Customers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "integer"
                          },
                          "id": {
                            "type": "string"
                          },
                          "externalId": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string",
                            "format": "email"
                          },
                          "description": {
                            "type": "string"
                          },
                          "terms": {
                            "type": "string"
                          },
                          "defaultDaysDue": {
                            "type": "integer",
                            "minimum": 1
                          },
                          "notes": {
                            "type": "string"
                          },
                          "attachments": {
                            "type": "array",
                            "description": "Links to any attached documents",
                            "items": {
                              "type": "string",
                              "format": "uri"
                            }
                          },
                          "customFields": {
                            "type": "object",
                            "description": "Key->Value store of custom fields"
                          },
                          "inactive": {
                            "type": "boolean"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "Address": {
                            "type": "object",
                            "description": "Default Address",
                            "properties": {
                              "_id": {
                                "type": "number"
                              },
                              "label": {
                                "type": "string"
                              },
                              "line1": {
                                "type": "string"
                              },
                              "line2": {
                                "type": "string"
                              },
                              "city": {
                                "type": "string"
                              },
                              "state": {
                                "type": "string"
                              },
                              "zip": {
                                "type": "string"
                              },
                              "country": {
                                "type": "string"
                              }
                            }
                          },
                          "Contact": {
                            "type": "object",
                            "description": "Primary Contact",
                            "properties": {
                              "_id": {
                                "type": "number"
                              },
                              "name": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string"
                              },
                              "phone": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Customers"
        ],
        "summary": "Create",
        "description": "Creates a new Customer\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Customer CREATE</div>\n</div>\n",
        "requestBody": {
          "description": "JSON body to create new Customer\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "externalId": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "description": {
                    "type": "string"
                  },
                  "terms": {
                    "type": "string"
                  },
                  "defaultDaysDue": {
                    "type": "integer",
                    "minimum": 1
                  },
                  "notes": {
                    "type": "string"
                  },
                  "attachments": {
                    "type": "array",
                    "description": "Links to any attached documents",
                    "items": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "customFields": {
                    "type": "object",
                    "description": "Key->Value store of custom fields",
                    "default": {}
                  },
                  "inactive": {
                    "type": "boolean",
                    "default": false
                  },
                  "Address": {
                    "type": "object",
                    "description": "Default address for customer",
                    "properties": {
                      "label": {
                        "type": "string"
                      },
                      "line1": {
                        "type": "string"
                      },
                      "line2": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "state": {
                        "type": "string"
                      },
                      "zip": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      }
                    }
                  },
                  "Contacts": {
                    "type": "object",
                    "description": "Primary contact for customer",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "phone": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Customers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "id": {
                      "type": "string"
                    },
                    "externalId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string",
                      "format": "email"
                    },
                    "description": {
                      "type": "string"
                    },
                    "terms": {
                      "type": "string"
                    },
                    "defaultDaysDue": {
                      "type": "integer"
                    },
                    "notes": {
                      "type": "boolean"
                    },
                    "inactive": {
                      "type": "boolean"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customers/count": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Count",
        "description": "The same filters as [Search](#operation/customersSearch) can be used here.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/status"
          }
        ],
        "responses": {
          "200": {
            "description": "Count response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{id}": {
      "delete": {
        "tags": [
          "Customers"
        ],
        "summary": "Delete",
        "description": "Delete one Customer\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Customer DELETE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Customer Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "no content success"
          }
        }
      },
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "One",
        "description": "Get one Customer",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Customer Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "One Customer",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "id": {
                      "type": "string"
                    },
                    "externalId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string",
                      "format": "email"
                    },
                    "description": {
                      "type": "string"
                    },
                    "terms": {
                      "type": "string"
                    },
                    "defaultDaysDue": {
                      "type": "integer",
                      "minimum": 1
                    },
                    "notes": {
                      "type": "string"
                    },
                    "attachments": {
                      "type": "array",
                      "description": "Links to any attached documents",
                      "items": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "customFields": {
                      "type": "object",
                      "description": "Key->Value store of custom fields",
                      "default": {}
                    },
                    "inactive": {
                      "type": "boolean"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "Addresses": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "number"
                          },
                          "isDefault": {
                            "type": "boolean"
                          },
                          "label": {
                            "type": "string"
                          },
                          "line1": {
                            "type": "string"
                          },
                          "line2": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "zip": {
                            "type": "string"
                          },
                          "country": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "Contacts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "number"
                          },
                          "isPrimary": {
                            "type": "boolean"
                          },
                          "name": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          },
                          "phone": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Customers"
        ],
        "summary": "Update",
        "description": "Update One Customer\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Customer UPDATE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Customer Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON body containing key and values to update\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "externalId": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "description": {
                    "type": "string"
                  },
                  "terms": {
                    "type": "string"
                  },
                  "defaultDaysDue": {
                    "type": "integer",
                    "minimum": 1
                  },
                  "notes": {
                    "type": "string"
                  },
                  "attachments": {
                    "type": "array",
                    "description": "Links to any attached documents",
                    "items": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "customFields": {
                    "type": "object",
                    "description": "Key->Value store of custom fields",
                    "default": {}
                  },
                  "inactive": {
                    "type": "boolean",
                    "default": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated Customer",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "id": {
                      "type": "string"
                    },
                    "externalId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string",
                      "format": "email"
                    },
                    "description": {
                      "type": "string"
                    },
                    "terms": {
                      "type": "string"
                    },
                    "defaultDaysDue": {
                      "type": "integer"
                    },
                    "notes": {
                      "type": "boolean"
                    },
                    "inactive": {
                      "type": "boolean"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customers/{id}/invoices": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Invoices",
        "description": "This endpoint returns only invoices for the specified customer.\nThe response and parameters of this endpoint are the same as for [Invoices Search](#operation/invoiceSearch)\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Customer._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Invoices",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/InvoiceList"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/customers/{id}/payments": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Payments",
        "description": "This endpoint returns only payments for the specified customer.\nThe response and parameters of this endpoint are the same as for [Payments Search](#operation/paymentsSearch)\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Customer._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Payments",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentList"
                }
              }
            }
          }
        }
      }
    },
    "/customers/{id}/email/statement": {
      "put": {
        "tags": [
          "Customers"
        ],
        "summary": "Email Statement",
        "description": "Email Statement to Customers email addresss",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Customer._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "no content success"
          }
        }
      }
    },
    "/customers/{id}/pdf/statement": {
      "get": {
        "tags": [
          "Customers"
        ],
        "summary": "Statement PDF",
        "description": "Customer Statement PDF",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Customer._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Base64 Buffer of the PDF\n"
          }
        }
      }
    },
    "/custom-fields/{type}/{property}": {
      "delete": {
        "tags": [
          "Custom Fields"
        ],
        "summary": "Delete",
        "description": "Delete property in custom field\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>CustomField DELETE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "type",
            "description": "Type for custom field",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "property",
            "description": "Property in the custom field",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "no content success"
          }
        }
      }
    },
    "/custom-fields/{type}": {
      "get": {
        "tags": [
          "Custom Fields"
        ],
        "summary": "Search",
        "description": "Search for custom fields",
        "parameters": [
          {
            "in": "path",
            "name": "type",
            "description": "Type for custom field",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "custom fields",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string"
                      },
                      "property": {
                        "type": "string"
                      },
                      "required": {
                        "type": "boolean"
                      },
                      "label": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "text",
                          "number",
                          "checkbox",
                          "date",
                          "select"
                        ]
                      },
                      "data": {
                        "type": "array",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Custom Fields"
        ],
        "summary": "Upsert",
        "description": "Create or Update a custom field\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>CustomField UPSERT</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "type",
            "description": "Type for custom field",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "bill",
                "coin",
                "customer",
                "item",
                "invoiceType",
                "invoiceLineItems",
                "purchaseOrder",
                "poLineItems",
                "vendor",
                "invoiceLevel",
                "salesOrder"
              ]
            }
          }
        ],
        "requestBody": {
          "description": "JSON body to create or update Custom Field",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "type"
                ],
                "properties": {
                  "label": {
                    "type": "string",
                    "description": "Name for the custom field, useful for UI"
                  },
                  "property": {
                    "type": "string",
                    "description": "used for internal use"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "text",
                      "number",
                      "checkbox",
                      "date",
                      "select"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "custom fields",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "property": {
                      "type": "string"
                    },
                    "required": {
                      "type": "boolean"
                    },
                    "label": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "text",
                        "number",
                        "checkbox",
                        "date",
                        "select"
                      ]
                    },
                    "data": {
                      "type": "array",
                      "nullable": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/emails": {
      "get": {
        "tags": [
          "Emails"
        ],
        "summary": "All",
        "description": "Get a list of all emails\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/objectType"
          },
          {
            "$ref": "#/components/parameters/objectId"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Emails",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalItems": {
                      "type": "string",
                      "description": "total number of emails"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "MessageID": {
                            "type": "string"
                          },
                          "Tag": {
                            "type": "string"
                          },
                          "To": {
                            "type": "object",
                            "description": "Recipient",
                            "properties": {
                              "Email": {
                                "type": "string"
                              },
                              "Name": {
                                "type": "string"
                              }
                            }
                          },
                          "CC": {
                            "type": "object",
                            "description": "Recipient",
                            "properties": {
                              "Email": {
                                "type": "string"
                              },
                              "Name": {
                                "type": "string"
                              }
                            }
                          },
                          "BCC": {
                            "type": "object",
                            "description": "Recipient",
                            "properties": {
                              "Email": {
                                "type": "string"
                              },
                              "Name": {
                                "type": "string"
                              }
                            }
                          },
                          "Recipients": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "ReceivedAt": {
                            "type": "string"
                          },
                          "From": {
                            "type": "string"
                          },
                          "Subject": {
                            "type": "string"
                          },
                          "Attachments": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "Status": {
                            "type": "string"
                          },
                          "TrackOpens": {
                            "type": "boolean"
                          },
                          "TrackLinks": {
                            "type": "string",
                            "enum": [
                              "TextOnly",
                              "HtmlOnly",
                              "HtmlAndText",
                              "None"
                            ]
                          },
                          "Metadata": {
                            "type": "object"
                          },
                          "MessageStream": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/emails/{messageid}": {
      "get": {
        "tags": [
          "Emails"
        ],
        "summary": "Message Details",
        "description": "Get one Emails details",
        "parameters": [
          {
            "in": "path",
            "name": "messageid",
            "description": "Message id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "One Messages Details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "TextBody": {
                      "type": "string"
                    },
                    "HtmlBody": {
                      "type": "string"
                    },
                    "Body": {
                      "type": "string"
                    },
                    "MessageEvents": {
                      "type": "array",
                      "description": "list of message events",
                      "items": {
                        "type": "object",
                        "properties": {
                          "Recipient": {
                            "type": "string"
                          },
                          "Type": {
                            "type": "string"
                          },
                          "ReceivedAt": {
                            "type": "string"
                          },
                          "Details": {
                            "type": "object"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fx-remeasure/{AccountingPeriodId}/journals": {
      "delete": {
        "tags": [
          "FX Remeasure"
        ],
        "summary": "Delete Journals",
        "description": "Delete remeasurement journals and reopens FX for the period.\n\nIf the FX remeasurement process is already running, this endpoint will return an error.\n\nAccounting Period FX status must be \"closed\" but the period should still be \"open\".\n",
        "parameters": [
          {
            "in": "path",
            "name": "AccountingPeriodId",
            "description": "AccountPeriod._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "no content success"
          }
        }
      },
      "post": {
        "tags": [
          "FX Remeasure"
        ],
        "summary": "Post Journals",
        "description": "Posts remeasurement journals for the period.\n\nThe journals are posted asynchronously, this endpoint will return a 202 Accepted response, and queue the background job to run.\n\nIf the remeasurement process is already running, this endpoint will return an error.\n\nAccounting Period must not be in \"closed\" state and should have ended i.e. period's end date should be in the past.\n\nIf remeasurement rates have not been set for the period, this endpoint will return an error.\n\nThe background job will post the remeasurements and close FX for the period.\n",
        "parameters": [
          {
            "in": "path",
            "name": "AccountingPeriodId",
            "description": "AccountPeriod._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "no content success"
          }
        }
      }
    },
    "/fx-remeasure/{AccountingPeriodId}/balances": {
      "get": {
        "tags": [
          "FX Remeasure"
        ],
        "summary": "Get Balances",
        "description": "Return the balances for the accounting period remeasurement\n| Field       | Filterable | Sortable |\n|---------------------|:--:|:--:|\n|LedgerAccountId              | ✅ | ❌ |\n|LocationId                   | ✅ | ❌ |\n|currency                     | ✅ | ✅ |\n|Location_currency            | ✅ | ✅ |\n|LedgerAccount_number         | ❌ | ✅ |\n|Location_name                | ❌ | ✅ |\n",
        "parameters": [
          {
            "in": "path",
            "name": "AccountingPeriodId",
            "description": "AccountPeriod._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "in": "query",
            "name": "order",
            "description": "Order to return results in. ex \"date:desc\"",
            "schema": {
              "type": "string",
              "default": "currency:ASC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of FX Balances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "LedgerAccountId": {
                            "type": "integer",
                            "description": "\"Ref: LedgerAccount._id\"\nThe LedgerAccount this remeasurement balance is for\n"
                          },
                          "LocationId": {
                            "type": "integer",
                            "description": "\"Ref: Location._id\"\nThe Location for this remeasurement balance for this LedgerAccount\n"
                          },
                          "currency": {
                            "type": "string",
                            "description": "The posted currency for this remeasurement balance",
                            "format": "ISO4217 3 Char Code"
                          },
                          "Location_currency": {
                            "type": "string",
                            "description": "The location/reporting currency for this remeasurement balance",
                            "format": "ISO4217 3 Char Code"
                          },
                          "remeasureRate": {
                            "type": "string",
                            "format": "number",
                            "description": "The rate used to remeasure the balance"
                          },
                          "balanceBeforeRemeasurement": {
                            "type": "string",
                            "format": "number",
                            "description": "The transactions balance before remeasurement\n\nThis is the balance in the reporting currency.\n\nIt is calculated by summing all (debits - credits) associated with this Ledger Account in this Location for this period, posted in the posted currency.\n"
                          },
                          "balanceAfterRemeasurement": {
                            "type": "string",
                            "format": "number",
                            "description": "The transactions balance after remeasurement has been applied\n\nThis is a calculated value and does not take into account the remeasurement journals posted to the ledger.\n"
                          },
                          "amountToRemeasure": {
                            "type": "string",
                            "format": "number",
                            "description": "The amount that will be applied as part of this remeasurment\n\nIf this amount is negative, the remeasurement will result in a credit to the ledger account.\n"
                          },
                          "postedDate": {
                            "type": "string",
                            "format": "date",
                            "description": "The posted date of the remeasurement journal\n\nThis is the end of period date\n"
                          },
                          "reversalDate": {
                            "type": "string",
                            "format": "date",
                            "description": "The reversal date for the posted remeasurement journal\n\nThis is one day after the end of period date\n"
                          },
                          "LedgerAccount_name": {
                            "type": "string",
                            "description": "The name of the LedgerAccount"
                          },
                          "LedgerAccount_number": {
                            "type": "string",
                            "description": "The number of the LedgerAccount"
                          },
                          "Location_name": {
                            "type": "string",
                            "description": "The name of the Location"
                          },
                          "Location_id": {
                            "type": "string",
                            "description": "The id of the Location"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/fx-remeasure/{AccountingPeriodId}": {
      "get": {
        "tags": [
          "FX Remeasure"
        ],
        "summary": "Get Rates",
        "description": "Returns current rates set for the accouting period remeasurement\n\nThe results are a list of all currencies and their end of period rate\n",
        "parameters": [
          {
            "in": "path",
            "name": "AccountingPeriodId",
            "description": "AccountPeriod._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of FX Rates",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "integer"
                      },
                      "type": {
                        "type": "string"
                      },
                      "base": {
                        "type": "string",
                        "description": "The base currency that the exchange rates are returned for in this row",
                        "format": "ISO4217 3 Char Code"
                      },
                      "date": {
                        "type": "string",
                        "format": "date"
                      },
                      "rates": {
                        "type": "object",
                        "description": "<code: string, rate: string> Each Key is a currency code and each value is the rate from Base -> Currency\n"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "FX Remeasure"
        ],
        "summary": "Upsert Rates",
        "description": "Update/Insert the rates for the accounting period\n",
        "parameters": [
          {
            "in": "path",
            "name": "AccountingPeriodId",
            "description": "AccountPeriod._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Base currency and fx rate currency pairs",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "baseCurrency": {
                      "type": "string",
                      "description": "example \"USD\""
                    },
                    "toCurrency": {
                      "type": "string",
                      "description": "example \"EUR\""
                    },
                    "rate": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "no content success"
          }
        }
      }
    },
    "/general-ledger": {},
    "/inventory/cost-basis": {
      "get": {
        "tags": [
          "Stock Adjustments"
        ],
        "summary": "Cost Basis",
        "description": "Get next date cost basis will run from",
        "responses": {
          "200": {
            "description": "Next date cost basis will run from",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextCostBasisDate": {
                      "type": "string",
                      "format": "date"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Stock Adjustments"
        ],
        "summary": "Cost Basis",
        "description": "Start costbasis process",
        "responses": {
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/invoices": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Search",
        "operationId": "invoiceSearch",
        "description": "| Field       | Filterable | Sortable |\n|---------------------|:--:|:--:|\n|_id                      | ✅ | ✅ |\n|number                   | ✅ | ✅ |\n|externalId               | ✅ | ✅ |\n|type                     | ✅ | ✅ |\n|reference                | ✅ | ✅ |\n|invoiceDate              | ✅ | ✅ |\n|postedDate               | ✅ | ✅ |\n|dueDate                  | ✅ | ✅ |\n|amountPayable            | ✅ | ✅ |\n|amount                   | ✅ | ✅ |\n|CustomerId               | ✅ | ❌ |\n|Customer.name            | ❌ | ✅ |\n|customFields             | ✅ | ❌ |\n|currency                 | ✅ | ✅ |\n|LocationId               | ✅ | ❌ |\n|ICLocationId             | ✅ | ❌ |\n|status                   | ✅ | ✅ |\n|SalesOrderId             | ✅ | ❌ |\n|createdAt                | ✅ | ✅ |\n|updatedAt                | ✅ | ✅ |\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/LocationId"
          },
          {
            "in": "query",
            "name": "order",
            "description": "Order to return results in. ex \"date:desc\"",
            "schema": {
              "type": "string",
              "default": "number:DESC"
            }
          },
          {
            "in": "query",
            "name": "credit",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "If true, only returns AR Credits i.e. invoices with a negative amount.\n\nIf false or not specified, only returns invoice with a positive amount.\n"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Invoices",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceList"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Invoices"
        ],
        "summary": "Create",
        "description": "Creates a new Invoice\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Invoice CREATE</div>\n</div>\n",
        "requestBody": {
          "description": "JSON body to create new Invoice\n\nOne of `[Customer.name, CustomerId]` is Required\nOne of `[Location.id, LocationId]` is Required\nOne of `[ARAccount.number, ARAccountId]` is Required\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "invoiceDate",
                  "postedDate",
                  "CustomerId",
                  "LocationId",
                  "ARAccountId",
                  "currency"
                ],
                "properties": {
                  "externalId": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "invoiceDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "postedDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "dueDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "attachments": {
                    "type": "array",
                    "description": "Links to any attached documents",
                    "items": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "reference": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string",
                    "format": "ISO4217 3 Char Code"
                  },
                  "customFields": {
                    "type": "object",
                    "description": "Key -> Value hash of custom fields, must be defined via the UI to show up in the UI",
                    "default": {}
                  },
                  "LocationId": {
                    "type": "integer",
                    "description": "Ref: Location._id"
                  },
                  "Location": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Location.id"
                      }
                    }
                  },
                  "ICLocationId": {
                    "type": "integer",
                    "description": "Ref: Location._id"
                  },
                  "ICLocation": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Location.id"
                      }
                    }
                  },
                  "CustomerId": {
                    "type": "integer",
                    "description": "Ref: Customer._id"
                  },
                  "Customer": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Ref: Customer.name"
                      }
                    }
                  },
                  "ShippingAddressId": {
                    "type": "integer",
                    "description": "Ref: Address._id"
                  },
                  "BillingAddressId": {
                    "type": "integer",
                    "description": "Ref: Address._id"
                  },
                  "ARAccountId": {
                    "type": "integer",
                    "description": "Ref: LedgerAccount._id"
                  },
                  "ARAccount": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "description": "Ref: LedgerAccount.number"
                      }
                    }
                  },
                  "TemplateId": {
                    "type": "integer",
                    "description": "Ref: Template._id",
                    "default": "Template with name 'Default' and format = 'pdf'"
                  },
                  "SalesOrderId": {
                    "type": "integer",
                    "description": "Ref: SalesOrder._id"
                  },
                  "SalesOrder": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "description": "Ref: SalesOrder.number"
                      }
                    }
                  },
                  "InvoiceLineItems": {
                    "type": "array",
                    "description": "**Handling of LedgerAccountId:**\n| ItemId set | LedgerAccountId Set | Result |\n|:------------:|:-----------------------:|:--------:|\n| Yes        | Yes                 | Use LedgerAccountId |\n| Yes        | No                  | Use Item.InvoiceAccountId |\n| No         | Yes                 | Use LedgerAccountId |\n| No         | No                  | Error is thrown |\n\n** If LedgerAccountId is set, it will override the LedgerAccount.number **\n\n**Tax Logic:**\n| TaxCodeId set | TaxAmount set | Result | Tax LedgerAccount |\n|:------------:|:--------------:|:-------:|:------:|\n| Yes        | Yes              | Use TaxAmount, even if set to 0 | TaxCode.LedgerAccountId |\n| Yes        | No               | taxAmount = (unitAmount * quantity) * (TaxCode.rate / 100) | TaxCode.LedgerAccountId |\n| No         | Yes              | Use TaxAmount | Settings.defaultSalesTaxId |\n| No         | No               | No Tax Set | No Tax Line Added |\n",
                    "items": {
                      "type": "object",
                      "required": [
                        "unitAmount",
                        "quantity"
                      ],
                      "properties": {
                        "description": {
                          "type": "string",
                          "description": "Required if ItemId is not set"
                        },
                        "unitAmount": {
                          "type": "string",
                          "format": "number"
                        },
                        "quantity": {
                          "type": "string",
                          "format": "number"
                        },
                        "customFields": {
                          "type": "object",
                          "description": "Key -> Value hash of custom fields, must be defined via the UI to show up in the UI",
                          "default": {}
                        },
                        "taxAmount": {
                          "type": "string",
                          "format": "number"
                        },
                        "TaxCodeId": {
                          "type": "integer",
                          "description": "Ref: TaxCode._id"
                        },
                        "TaxCode": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "description": "Ref: TaxCode.code"
                            }
                          }
                        },
                        "ItemId": {
                          "type": "integer",
                          "description": "Ref: Item._id"
                        },
                        "Item": {
                          "type": "object",
                          "properties": {
                            "number": {
                              "type": "string",
                              "description": "Ref: Item.number"
                            }
                          }
                        },
                        "CostCenterId": {
                          "type": "integer",
                          "description": "Ref: Cost Center._id"
                        },
                        "CostCenter": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Ref: CostCenter.id"
                            }
                          }
                        },
                        "JobId": {
                          "type": "integer",
                          "description": "Ref: Job._id"
                        },
                        "Job": {
                          "type": "object",
                          "properties": {
                            "number": {
                              "type": "string",
                              "description": "Ref: Job.number"
                            }
                          }
                        },
                        "ProductId": {
                          "type": "integer",
                          "description": "Ref: Product._id"
                        },
                        "Product": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Ref: Product.id"
                            }
                          }
                        },
                        "Custom1Id": {
                          "type": "integer",
                          "description": "Ref: Custom1._id"
                        },
                        "Custom1": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Ref: Custom1.id"
                            }
                          }
                        },
                        "Custom2Id": {
                          "type": "integer",
                          "description": "Ref: Custom2._id"
                        },
                        "Custom2": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Ref: Custom2.id"
                            }
                          }
                        },
                        "Custom3Id": {
                          "type": "integer",
                          "description": "Ref: Custom3._id"
                        },
                        "Custom3": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Ref: Custom3.id"
                            }
                          }
                        },
                        "LedgerAccountId": {
                          "type": "integer",
                          "description": "Ref: LedgerAccount._id"
                        },
                        "LedgerAccount": {
                          "type": "object",
                          "properties": {
                            "number": {
                              "type": "string",
                              "description": "Ref: LedgerAccount.number"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Invoice created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "externalId": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "number": {
                      "type": "string",
                      "format": "number"
                    },
                    "invoiceDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "postedDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "dueDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "notes": {
                      "type": "string"
                    },
                    "reference": {
                      "type": "string"
                    },
                    "currency": {
                      "type": "string",
                      "format": "ISO4217 3 Char Code"
                    },
                    "customFields": {
                      "type": "object",
                      "description": "Key -> Value hash of custom fields, must be defined via the UI to show up in the UI"
                    },
                    "LocationId": {
                      "type": "integer",
                      "description": "Ref: Location._id"
                    },
                    "ICLocationId": {
                      "type": "integer",
                      "description": "Ref: Location._id"
                    },
                    "CustomerId": {
                      "type": "integer",
                      "description": "Ref: Customer._id"
                    },
                    "ShippingAddressId": {
                      "type": "integer",
                      "description": "Ref: Address._id"
                    },
                    "BillingAddressId": {
                      "type": "integer",
                      "description": "Ref: Address._id"
                    },
                    "ARAccountId": {
                      "type": "integer",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "TemplateId": {
                      "type": "integer",
                      "description": "Ref: Template._id"
                    },
                    "SalesOrderId": {
                      "type": "integer",
                      "description": "Ref: SalesOrder._id"
                    },
                    "attachments": {
                      "type": "array",
                      "description": "Links to any attached documents",
                      "items": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invoices/lines": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Search Lines",
        "operationId": "invoiceLinesSearch",
        "description": "| Field       | Filterable | Sortable |\n|---------------------|:--:|:--:|\n|_id                      | ✅ | ✅ |\n|description              | ✅ | ✅ |\n|unitAmount               | ✅ | ✅ |\n|taxAmount                | ✅ | ✅ |\n|quantity                 | ✅ | ✅ |\n|customFields             | ✅ | ❌ |\n|createdAt                | ✅ | ✅ |\n|updatedAt                | ✅ | ✅ |\n|InvoiceId                | ✅ | ❌|\n|Invoice.status           | ✅ | ✅ |\n|Invoice.invoiceDate      | ✅ | ✅ |\n|Invoice.AgentId          | ✅ | ❌ |\n|Invoice.LocationId       | ✅ | ❌ |\n|Invoice.ICLocationId     | ✅ | ❌ |\n|Invoice.createdAt        | ✅ | ✅ |\n|Invoice.updatedAt        | ✅ | ✅ |\n|Invoice.number           | ✅ | ✅ |\n|CostCenterId             | ✅ | ❌ |\n|ItemId                   | ✅ | ❌ |\n|Item.salePrice           | ✅ | ✅ |\n|Item.purchasePrice       | ✅ | ✅ |\n|JobId                    | ✅ | ❌ |\n|LedgerAccountId          | ✅ | ❌ |\n|ProductId                | ✅ | ❌ |\n|Custom1Id                | ✅ | ❌ |\n|Custom2Id                | ✅ | ❌ |\n|Custom3Id                | ✅ | ❌ |\n|TaxCodeId                | ✅ | ❌ |\n|LedgerAccount.name       | ❌ | ✅ | \n|Location.name            | ❌ | ✅ | \n|ICLocation.name          | ❌ | ✅ | \n|TaxCode.code             | ❌ | ✅ | \n|Customer.name            | ❌ | ✅ | \n|Product.id               | ❌ | ✅ | \n|CostCenter.id            | ❌ | ✅ | \n|Job.number               | ❌ | ✅ | \n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/LocationId"
          },
          {
            "in": "query",
            "name": "order",
            "description": "Order to return results in. ex \"date:desc\"",
            "schema": {
              "type": "string",
              "default": "Invoice.invoiceDate:DESC"
            }
          },
          {
            "in": "query",
            "name": "credit",
            "description": "Filter by credit status of the Invoice.\nOperates as follows:\n  - If 'credit' is false, lines from Invoices that have 'Invoice.amount' greater than or equal to zero will be returned\n  - If 'credit' is true, lines from Invoices that have 'Invoice.amount' less than zero will be returned\n  - If 'credit' is not provided, all lines will be returned\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Invoice lines",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "integer"
                          },
                          "idx": {
                            "type": "integer"
                          },
                          "description": {
                            "type": "string"
                          },
                          "unitAmount": {
                            "type": "string",
                            "format": "number"
                          },
                          "taxAmount": {
                            "type": "string",
                            "format": "number"
                          },
                          "quantity": {
                            "type": "string",
                            "format": "number"
                          },
                          "customFields": {
                            "type": "object",
                            "description": "Key -> Value hash of custom fields, must be defined via the UI to show up in the UI"
                          },
                          "total": {
                            "type": "string",
                            "format": "number"
                          },
                          "InvoiceId": {
                            "type": "number",
                            "description": "Ref: Invoice._id"
                          },
                          "Invoice": {
                            "type": "object",
                            "properties": {
                              "number": {
                                "type": "string",
                                "format": "number"
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "created",
                                  "approved",
                                  "partiallyPaid",
                                  "paid",
                                  "voided"
                                ]
                              },
                              "invoiceDate": {
                                "type": "string",
                                "format": "date"
                              },
                              "currency": {
                                "type": "string",
                                "format": "string"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date"
                              },
                              "updatedAt": {
                                "type": "string",
                                "format": "date"
                              },
                              "CustomerId": {
                                "type": "number",
                                "description": "Ref: Customer._id"
                              },
                              "LocationId": {
                                "type": "number",
                                "description": "Ref: Location._id"
                              },
                              "ICLocationId": {
                                "type": "number",
                                "description": "Ref: Location._id"
                              }
                            }
                          },
                          "LedgerAccountId": {
                            "type": "number",
                            "description": "Ref: LedgerAccount._id"
                          },
                          "LedgerAccount": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "number": {
                                "type": "string"
                              }
                            }
                          },
                          "Customer": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "Location": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "ICLocation": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "TaxCodeId": {
                            "type": "integer",
                            "description": "Ref: TaxCode._id"
                          },
                          "TaxCode": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string",
                                "description": "Ref: TaxCode.code"
                              }
                            }
                          },
                          "ItemId": {
                            "type": "integer",
                            "description": "Ref: Item._id"
                          },
                          "Item": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "number": {
                                "type": "string"
                              },
                              "sku": {
                                "type": "string"
                              },
                              "salePrice": {
                                "type": "string",
                                "format": "number"
                              },
                              "purchasePrice": {
                                "type": "string",
                                "format": "number"
                              },
                              "InvoiceAccountId": {
                                "type": "integer",
                                "description": "Ref: LedgerAccount._id"
                              },
                              "InvoiceAccount": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "number": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          },
                          "CostCenterId": {
                            "type": "integer",
                            "description": "Ref: Cost Center._id"
                          },
                          "CostCenter": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "JobId": {
                            "type": "integer",
                            "description": "Ref: Job._id"
                          },
                          "Job": {
                            "type": "object",
                            "properties": {
                              "number": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "ProductId": {
                            "type": "integer",
                            "description": "Ref: Product._id"
                          },
                          "Product": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "Custom1Id": {
                            "type": "integer",
                            "description": "Ref: Custom1._id"
                          },
                          "Custom1": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "Custom2Id": {
                            "type": "integer",
                            "description": "Ref: Custom2._id"
                          },
                          "Custom2": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "Custom3Id": {
                            "type": "integer",
                            "description": "Ref: Custom3._id"
                          },
                          "Custom3": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invoices/lines/count": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Count Lines",
        "description": "The same filters as [Search](#operation/invoiceLinesSearch) can be used here.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/LocationId"
          },
          {
            "in": "query",
            "name": "credit",
            "description": "Filter by credit status of the Invoice.\nOperates as follows:\n  - If 'credit' is false, lines from Invoices that have 'Invoice.amount' greater than or equal to zero will be returned\n  - If 'credit' is true, lines from Invoices that have 'Invoice.amount' less than zero will be returned\n  - If 'credit' is not provided, all lines will be returned\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Count response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/invoices/unpaid": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Unpaid Invoices",
        "description": "This endpoint returns unpaid invoices/credits.\n\nThe parameters of this endpoint are the same as for [Invoices Search](#operation/invoiceSearch)\n\nThe following parameters are also supported in addition to the ones listed in [Invoices Search](#operation/invoiceSearch)\n",
        "parameters": [
          {
            "in": "query",
            "name": "filterCurrency",
            "schema": {
              "type": "string"
            },
            "description": "Provide this to only show unpaid invoices in the specified currency.\n\nThis parameter is optional.\n"
          },
          {
            "in": "query",
            "name": "filterLocationId",
            "schema": {
              "type": "string",
              "format": "number"
            },
            "description": "Ref: \"Location\"._id\n\nProvide this to only show unpaid invoices from the specified location.\n\nInvoices from child locations of the provided location are not included.\n\nThis parameter is optional.\n"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Invoices",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/InvoiceList"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invoices/count": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Count",
        "description": "The same filters as [Search](#operation/invoiceSearch) can be used here.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/LocationId"
          }
        ],
        "responses": {
          "200": {
            "description": "Count response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/invoices/{id}/line": {
      "post": {
        "tags": [
          "Invoices"
        ],
        "summary": "Create Line",
        "description": "creates a new Invoice Line\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>InvoiceLineItem CREATE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Invoice._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Can only add a line to an invoice with \"created\" status\n\n**Handling of LedgerAccountId:**\n| ItemId set | LedgerAccountId Set | Result |\n|:------------:|:-----------------------:|:--------:|\n| Yes        | Yes                 | Use LedgerAccountId |\n| Yes        | No                  | Use Item.InvoiceAccountId |\n| No         | Yes                 | Use LedgerAccountId |\n| No         | No                  | Error is thrown |\n\n** If LedgerAccountId is set, it will override the LedgerAccount.number **\n\n**Tax Logic:**\n| TaxCodeId set | TaxAmount set | Result | Tax LedgerAccount |\n|:------------:|:--------------:|:-------:|:------:|\n| Yes        | Yes              | Use TaxAmount, even if set to 0 | TaxCode.LedgerAccountId |\n| Yes        | No               | taxAmount = (unitAmount * quantity) * (TaxCode.rate / 100) | TaxCode.LedgerAccountId |\n| No         | Yes              | Use TaxAmount | Settings.defaultSalesTaxId |\n| No         | No               | No Tax Set | No Tax Line Added |\n",
                "required": [
                  "unitAmount",
                  "quantity"
                ],
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Required if ItemId is not set"
                  },
                  "unitAmount": {
                    "type": "string",
                    "format": "number"
                  },
                  "quantity": {
                    "type": "string",
                    "format": "number"
                  },
                  "customFields": {
                    "type": "object",
                    "description": "Key -> Value hash of custom fields, must be defined via the UI to show up in the UI",
                    "default": {}
                  },
                  "taxAmount": {
                    "type": "string",
                    "format": "number"
                  },
                  "TaxCodeId": {
                    "type": "integer",
                    "description": "Ref: TaxCode._id"
                  },
                  "TaxCode": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Ref: TaxCode.code"
                      }
                    }
                  },
                  "ItemId": {
                    "type": "integer",
                    "description": "Ref: Item._id"
                  },
                  "Item": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "description": "Ref: Item.number"
                      }
                    }
                  },
                  "CostCenterId": {
                    "type": "integer",
                    "description": "Ref: Cost Center._id"
                  },
                  "CostCenter": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: CostCenter.id"
                      }
                    }
                  },
                  "JobId": {
                    "type": "integer",
                    "description": "Ref: Job._id"
                  },
                  "Job": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Job.id"
                      }
                    }
                  },
                  "ProductId": {
                    "type": "integer",
                    "description": "Ref: Product._id"
                  },
                  "Product": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Product.id"
                      }
                    }
                  },
                  "Custom1Id": {
                    "type": "integer",
                    "description": "Ref: Custom1._id"
                  },
                  "Custom1": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Custom1.id"
                      }
                    }
                  },
                  "Custom2Id": {
                    "type": "integer",
                    "description": "Ref: Custom2._id"
                  },
                  "Custom2": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Custom2.id"
                      }
                    }
                  },
                  "Custom3Id": {
                    "type": "integer",
                    "description": "Ref: Custom3._id"
                  },
                  "Custom3": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Custom3.id"
                      }
                    }
                  },
                  "LedgerAccountId": {
                    "type": "integer",
                    "description": "Ref: LedgerAccount._id"
                  },
                  "LedgerAccount": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "description": "Ref: LedgerAccount.number"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Invoice Line",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "description": {
                      "type": "string"
                    },
                    "unitAmount": {
                      "type": "string",
                      "format": "number"
                    },
                    "quantity": {
                      "type": "string",
                      "format": "number"
                    },
                    "customFields": {
                      "type": "object"
                    },
                    "taxAmount": {
                      "type": "string",
                      "format": "number"
                    },
                    "TaxCodeId": {
                      "type": "integer",
                      "description": "Ref: TaxCode._id"
                    },
                    "ItemId": {
                      "type": "integer",
                      "description": "Ref: Item._id"
                    },
                    "CostCenterId": {
                      "type": "integer",
                      "description": "Ref: Cost Center._id"
                    },
                    "JobId": {
                      "type": "integer",
                      "description": "Ref: Job._id"
                    },
                    "ProductId": {
                      "type": "integer",
                      "description": "Ref: Product._id"
                    },
                    "Custom1Id": {
                      "type": "integer",
                      "description": "Ref: Custom1._id"
                    },
                    "Custom2Id": {
                      "type": "integer",
                      "description": "Ref: Custom2._id"
                    },
                    "Custom3Id": {
                      "type": "integer",
                      "description": "Ref: Custom3._id"
                    },
                    "LedgerAccountId": {
                      "type": "integer",
                      "description": "Ref: LedgerAccount._id"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invoices/{id}": {
      "delete": {
        "tags": [
          "Invoices"
        ],
        "summary": "Delete",
        "description": "Delete one Invoice\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Invoice DELETE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Invoice Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "no content success"
          }
        }
      },
      "put": {
        "tags": [
          "Invoices"
        ],
        "summary": "Update",
        "description": "Update One Invoice\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Invoice UPDATE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Invoice Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON body containing key and values to update\n\nCan only update an invoice with \"created\" status\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "externalId": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "invoiceDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "postedDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "dueDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "attachments": {
                    "type": "array",
                    "description": "Links to any attached documents",
                    "items": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "reference": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string",
                    "format": "ISO4217 3 Char Code"
                  },
                  "customFields": {
                    "type": "object",
                    "description": "Key -> Value hash of custom fields, must be defined via the UI to show up in the UI"
                  },
                  "LocationId": {
                    "type": "integer",
                    "description": "Ref: Location._id"
                  },
                  "Location": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Location.id"
                      }
                    }
                  },
                  "ICLocationId": {
                    "type": "integer",
                    "description": "Ref: Location._id"
                  },
                  "ICLocation": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Location.id"
                      }
                    }
                  },
                  "CustomerId": {
                    "type": "integer",
                    "description": "Ref: Customer._id"
                  },
                  "Customer": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Ref: Customer.name"
                      }
                    }
                  },
                  "ShippingAddressId": {
                    "type": "integer",
                    "description": "Ref: Address._id"
                  },
                  "BillingAddressId": {
                    "type": "integer",
                    "description": "Ref: Address._id"
                  },
                  "ARAccountId": {
                    "type": "integer",
                    "description": "Ref: LedgerAccount._id"
                  },
                  "ARAccount": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "description": "Ref: LedgerAccount.number"
                      }
                    }
                  },
                  "TemplateId": {
                    "type": "integer",
                    "description": "Ref: Template._id",
                    "default": "Template with name 'Default' and format = 'pdf'"
                  },
                  "SalesOrderId": {
                    "type": "integer",
                    "description": "Ref: SalesOrder._id"
                  },
                  "SalesOrder": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "description": "Ref: SalesOrder.number"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated Invoice",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "externalId": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "number": {
                      "type": "string",
                      "format": "number"
                    },
                    "invoiceDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "postedDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "dueDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "notes": {
                      "type": "string"
                    },
                    "attachments": {
                      "type": "array",
                      "description": "Links to any attached documents",
                      "items": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "reference": {
                      "type": "string"
                    },
                    "currency": {
                      "type": "string",
                      "format": "ISO4217 3 Char Code"
                    },
                    "LocationId": {
                      "type": "integer",
                      "description": "Ref: Location._id"
                    },
                    "ICLocationId": {
                      "type": "integer",
                      "description": "Ref: Location._id"
                    },
                    "CustomerId": {
                      "type": "integer",
                      "description": "Ref: Customer._id"
                    },
                    "ShippingAddressId": {
                      "type": "integer",
                      "description": "Ref: Address._id"
                    },
                    "BillingAddressId": {
                      "type": "integer",
                      "description": "Ref: Address._id"
                    },
                    "ARAccountId": {
                      "type": "integer",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "TemplateId": {
                      "type": "integer",
                      "description": "Ref: Template._id"
                    },
                    "SalesOrderId": {
                      "type": "integer",
                      "description": "Ref: SalesOrder._id"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invoices/line/{id}": {
      "delete": {
        "tags": [
          "Invoices"
        ],
        "summary": "Delete Line",
        "description": "Deletes an Invoice Line\n\nCan only delete a line from an invoice with \"created\" status\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>InvoiceLineItem DELETE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "InvoiceLine._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "no content success"
          }
        }
      },
      "put": {
        "tags": [
          "Invoices"
        ],
        "summary": "Update Line",
        "description": "Update an Invoice Line\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>InvoiceLineItem UPDATE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "InvoiceLineItem._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Can only update a line on an invoice with \"created\" status\n\nIf LedgerAccountId is not changed, it will remain regardless of changing the Item.\n\nIf LedgerAccountId is set to null, the Item.InvoiceAccount will be set if exists.\n\nTaxAmount will not be changed if not passed, even if new TaxCode is passed. \n",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Required if ItemId is not set"
                  },
                  "unitAmount": {
                    "type": "string",
                    "format": "number"
                  },
                  "quantity": {
                    "type": "string",
                    "format": "number"
                  },
                  "customFields": {
                    "type": "object",
                    "description": "Key -> Value hash of custom fields, must be defined via the UI to show up in the UI",
                    "default": {}
                  },
                  "taxAmount": {
                    "type": "string",
                    "format": "number"
                  },
                  "TaxCodeId": {
                    "type": "integer",
                    "description": "Ref: TaxCode._id"
                  },
                  "TaxCode": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Ref: TaxCode.code"
                      }
                    }
                  },
                  "ItemId": {
                    "type": "integer",
                    "description": "Ref: Item._id"
                  },
                  "Item": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "description": "Ref: Item.number"
                      }
                    }
                  },
                  "CostCenterId": {
                    "type": "integer",
                    "description": "Ref: Cost Center._id"
                  },
                  "CostCenter": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: CostCenter.id"
                      }
                    }
                  },
                  "JobId": {
                    "type": "integer",
                    "description": "Ref: Job._id"
                  },
                  "Job": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Job.id"
                      }
                    }
                  },
                  "ProductId": {
                    "type": "integer",
                    "description": "Ref: Product._id"
                  },
                  "Product": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Product.id"
                      }
                    }
                  },
                  "Custom1Id": {
                    "type": "integer",
                    "description": "Ref: Custom1._id"
                  },
                  "Custom1": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Custom1.id"
                      }
                    }
                  },
                  "Custom2Id": {
                    "type": "integer",
                    "description": "Ref: Custom2._id"
                  },
                  "Custom2": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Custom2.id"
                      }
                    }
                  },
                  "Custom3Id": {
                    "type": "integer",
                    "description": "Ref: Custom3._id"
                  },
                  "Custom3": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Custom3.id"
                      }
                    }
                  },
                  "LedgerAccountId": {
                    "type": "integer",
                    "description": "Ref: LedgerAccount._id"
                  },
                  "LedgerAccount": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "description": "Ref: LedgerAccount.number"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated Line",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "description": {
                      "type": "string"
                    },
                    "unitAmount": {
                      "type": "string",
                      "format": "number"
                    },
                    "quantity": {
                      "type": "string",
                      "format": "number"
                    },
                    "customFields": {
                      "type": "object"
                    },
                    "taxAmount": {
                      "type": "string",
                      "format": "number"
                    },
                    "TaxCodeId": {
                      "type": "integer",
                      "description": "Ref: TaxCode._id"
                    },
                    "ItemId": {
                      "type": "integer",
                      "description": "Ref: Item._id"
                    },
                    "CostCenterId": {
                      "type": "integer",
                      "description": "Ref: Cost Center._id"
                    },
                    "JobId": {
                      "type": "integer",
                      "description": "Ref: Job._id"
                    },
                    "ProductId": {
                      "type": "integer",
                      "description": "Ref: Product._id"
                    },
                    "Custom1Id": {
                      "type": "integer",
                      "description": "Ref: Custom1._id"
                    },
                    "Custom2Id": {
                      "type": "integer",
                      "description": "Ref: Custom2._id"
                    },
                    "Custom3Id": {
                      "type": "integer",
                      "description": "Ref: Custom3._id"
                    },
                    "LedgerAccountId": {
                      "type": "integer",
                      "description": "Ref: LedgerAccount._id"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invoices/{id}/email": {
      "put": {
        "tags": [
          "Invoices"
        ],
        "summary": "Email",
        "description": "Email Invoice to Customers email addresss",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Invoice._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "no content success"
          }
        }
      }
    },
    "/invoices/{id}/issue": {
      "put": {
        "tags": [
          "Invoices"
        ],
        "summary": "Issue",
        "description": "Issue Invoice\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Invoice ISSUE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Invoice._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "no content success"
          }
        }
      }
    },
    "/invoice/{id}": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "One",
        "description": "Get one Invoice",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Invoice._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "One Invoice",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "created",
                        "issued",
                        "partialPayment",
                        "paid",
                        "voided"
                      ]
                    },
                    "externalId": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "number": {
                      "type": "string",
                      "format": "number"
                    },
                    "invoiceDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "postedDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "dueDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "notes": {
                      "type": "string"
                    },
                    "attachments": {
                      "type": "array",
                      "description": "Links to any attached documents",
                      "items": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "approved_on": {
                      "type": "string",
                      "format": "date"
                    },
                    "approved_name": {
                      "type": "string"
                    },
                    "approved_email": {
                      "type": "string",
                      "format": "email"
                    },
                    "reference": {
                      "type": "string"
                    },
                    "currency": {
                      "type": "string",
                      "format": "ISO4217 3 Char Code"
                    },
                    "amount": {
                      "type": "string",
                      "format": "number"
                    },
                    "amountPayable": {
                      "type": "string",
                      "format": "number",
                      "description": "Amount left to pay"
                    },
                    "customFields": {
                      "type": "object",
                      "description": "Key -> Value hash of custom fields, must be defined via the UI to show up in the UI"
                    },
                    "SystemJobId": {
                      "type": "string",
                      "description": "Ref: SystemJob._id"
                    },
                    "LocationId": {
                      "type": "integer",
                      "description": "Ref: Location._id"
                    },
                    "Location": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "ICLocationId": {
                      "type": "integer",
                      "description": "Ref: Location._id"
                    },
                    "ICLocation": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "CustomerId": {
                      "type": "integer",
                      "description": "Ref: Customer._id"
                    },
                    "Customer": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "number"
                        },
                        "name": {
                          "type": "string",
                          "description": "Ref: Customer.name"
                        },
                        "email": {
                          "type": "string",
                          "description": "Ref: Customer.email"
                        },
                        "terms": {
                          "type": "string"
                        }
                      }
                    },
                    "ShippingAddressId": {
                      "type": "integer",
                      "description": "Ref: Address._id"
                    },
                    "ShippingAddress": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string"
                        },
                        "line1": {
                          "type": "string"
                        },
                        "line2": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "state": {
                          "type": "string"
                        },
                        "zip": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        }
                      }
                    },
                    "BillingAddressId": {
                      "type": "integer",
                      "description": "Ref: Address._id"
                    },
                    "BillingAddress": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string"
                        },
                        "line1": {
                          "type": "string"
                        },
                        "line2": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "state": {
                          "type": "string"
                        },
                        "zip": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        }
                      }
                    },
                    "ARAccountId": {
                      "type": "integer",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "ARAccount": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "number": {
                          "type": "string"
                        }
                      }
                    },
                    "TemplateId": {
                      "type": "integer",
                      "description": "Ref: Template._id"
                    },
                    "SalesOrderId": {
                      "type": "integer",
                      "description": "Ref: SalesOrder._id"
                    },
                    "SalesOrder": {
                      "type": "object",
                      "properties": {
                        "number": {
                          "type": "string",
                          "description": "Ref: SalesOrder.number"
                        }
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "InvoiceLineItems": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "Required if ItemId is not set"
                          },
                          "unitAmount": {
                            "type": "string",
                            "format": "number"
                          },
                          "quantity": {
                            "type": "string",
                            "format": "number"
                          },
                          "customFields": {
                            "type": "object",
                            "description": "Key -> Value hash of custom fields, must be defined via the UI to show up in the UI"
                          },
                          "taxAmount": {
                            "type": "string",
                            "format": "number"
                          },
                          "TaxCodeId": {
                            "type": "integer",
                            "description": "Ref: TaxCode._id"
                          },
                          "TaxCode": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string",
                                "description": "Ref: TaxCode.code"
                              }
                            }
                          },
                          "ItemId": {
                            "type": "integer",
                            "description": "Ref: Item._id"
                          },
                          "Item": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "number": {
                                "type": "string"
                              },
                              "sku": {
                                "type": "string"
                              },
                              "salePrice": {
                                "type": "string",
                                "format": "number"
                              },
                              "InvoiceAccountId": {
                                "type": "integer",
                                "description": "Ref: LedgerAccount._id"
                              },
                              "InvoiceAccount": {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string"
                                  },
                                  "number": {
                                    "type": "integer"
                                  }
                                }
                              }
                            }
                          },
                          "CostCenterId": {
                            "type": "integer",
                            "description": "Ref: Cost Center._id"
                          },
                          "CostCenter": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "JobId": {
                            "type": "integer",
                            "description": "Ref: Job._id"
                          },
                          "Job": {
                            "type": "object",
                            "properties": {
                              "number": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "ProductId": {
                            "type": "integer",
                            "description": "Ref: Product._id"
                          },
                          "Product": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "Custom1Id": {
                            "type": "integer",
                            "description": "Ref: Custom1._id"
                          },
                          "Custom1": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "Custom2Id": {
                            "type": "integer",
                            "description": "Ref: Custom2._id"
                          },
                          "Custom2": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "Custom3Id": {
                            "type": "integer",
                            "description": "Ref: Custom3._id"
                          },
                          "Custom3": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "LedgerAccountId": {
                            "type": "integer",
                            "description": "Ref: LedgerAccount._id"
                          },
                          "LedgerAccount": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "number": {
                                "type": "string"
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/invoices/{id}/payments": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "Payments",
        "description": "This endpoint returns only payments for the specified invoice.\nThe response and parameters of this endpoint are the same as for [Payments Search](#operation/paymentsSearch)\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Invoice._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Payments",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentList"
                }
              }
            }
          }
        }
      }
    },
    "/invoices/{id}/pdf": {
      "get": {
        "tags": [
          "Invoices"
        ],
        "summary": "PDF",
        "description": "Invoice PDF",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Invoice._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Base64 Buffer of the PDF\n"
          }
        }
      }
    },
    "/invoices/{id}/void": {
      "put": {
        "tags": [
          "Invoices"
        ],
        "summary": "Void",
        "description": "Void Invoice\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Invoice VOID</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Invoice._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Optional body to set data on void journal entry",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "postedDate": {
                    "type": "string",
                    "format": "date",
                    "default": "NOW"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "no content success"
          }
        }
      }
    },
    "/items": {
      "get": {
        "tags": [
          "Items"
        ],
        "summary": "Search",
        "operationId": "itemsSearch",
        "description": "| Field       | Filterable | Sortable |\n|---------------------|:--:|:--:|\n|_id                     | ✅ | ✅ |\n|externalIds             | ✅ | ❌ |\n|number                  | ✅ | ✅ |\n|name                    | ✅ | ✅ |\n|sku                     | ✅ | ✅ |\n|type                    | ✅ | ❌ |\n|description             | ✅ | ✅ |\n|inactive                | ✅ | ❌ |\n|salePrice               | ✅ | ❌ |\n|purchasePrice           | ✅ | ❌ |\n|customFields            | ✅ | ❌ |\n|InvoiceAccountId        | ✅ | ❌ |\n|BillAccountId           | ✅ | ❌ |\n|InventoryAccountId      | ✅ | ❌ |\n|CogsAccountId           | ✅ | ❌ |\n|createdAt               | ✅ | ✅ |\n|updatedAt               | ✅ | ✅ |\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/status"
          },
          {
            "in": "query",
            "name": "order",
            "description": "Order to return results in. ex \"date:desc\"",
            "schema": {
              "type": "string",
              "default": "number:ASC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Items",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "integer"
                          },
                          "inactive": {
                            "type": "boolean"
                          },
                          "externalIds": {
                            "type": "string"
                          },
                          "number": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "salePrice": {
                            "type": "string",
                            "format": "number"
                          },
                          "purchasePrice": {
                            "type": "string",
                            "format": "number"
                          },
                          "description": {
                            "type": "string"
                          },
                          "sku": {
                            "type": "string"
                          },
                          "customFields": {
                            "type": "object",
                            "description": "Key->Value hash of custom field names and values. Custom fields must be defined via the UI to be visible in the UI"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "inventory",
                              "consumable",
                              "direct"
                            ]
                          },
                          "InvoiceAccountId": {
                            "type": "integer"
                          },
                          "BillAccountId": {
                            "type": "integer"
                          },
                          "InventoryAccountId": {
                            "type": "integer"
                          },
                          "CogsAccountId": {
                            "type": "integer"
                          },
                          "InvoiceAccount": {
                            "type": "object",
                            "properties": {
                              "number": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "BillAccount": {
                            "type": "object",
                            "properties": {
                              "number": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "InventoryAccount": {
                            "type": "object",
                            "properties": {
                              "number": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "CogsAccount": {
                            "type": "object",
                            "properties": {
                              "number": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Items"
        ],
        "summary": "Create",
        "description": "Creates a new Item\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Item CREATE</div>\n</div>\n",
        "requestBody": {
          "description": "JSON body to create new Item\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "externalIds": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "salePrice": {
                    "type": "string",
                    "format": "number",
                    "default": "0"
                  },
                  "purchasePrice": {
                    "type": "string",
                    "format": "number"
                  },
                  "description": {
                    "type": "string"
                  },
                  "sku": {
                    "type": "string",
                    "description": "Must be unique if given"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "inventory",
                      "consumable",
                      "direct"
                    ],
                    "default": "inventory"
                  },
                  "inactive": {
                    "type": "boolean",
                    "default": false
                  },
                  "customFields": {
                    "type": "object",
                    "description": "Key->Value hash of custom field names and values. Custom fields must be defined via the UI to be visible in the UI"
                  },
                  "InvoiceAccountId": {
                    "type": "integer",
                    "description": "Ref: Ledger Account._id",
                    "default": "Settings.defaultItemInvoiceAccountId"
                  },
                  "InvoiceAccount": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "description": "Ref: Ledger Account.number, Can be used in place of InvoiceAccountId"
                      }
                    }
                  },
                  "BillAccountId": {
                    "type": "integer",
                    "description": "Ref: Ledger Account._id",
                    "default": "Settings.defaultItemInventoryAccrualId"
                  },
                  "BillAccount": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "description": "Ref: Ledger Account.number, Can be used in place of BillAccountId"
                      }
                    }
                  },
                  "InventoryAccountId": {
                    "type": "integer",
                    "description": "Ref: Ledger Account._id",
                    "default": "Settings.defaultItemInventoryAssetId"
                  },
                  "InventoryAccount": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "description": "Ref: Ledger Account.number, Can be used in place of InventoryAccountId"
                      }
                    }
                  },
                  "CogsAccountId": {
                    "type": "integer",
                    "description": "Ref: Ledger Account._id",
                    "default": "Settings.defaultItemCOGSId"
                  },
                  "CogsAccount": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "description": "Ref: Ledger Account.number, Can be used in place of CogsAccountId"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Item Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "number": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "externalIds": {
                      "type": "string"
                    },
                    "salePrice": {
                      "type": "string",
                      "format": "number"
                    },
                    "purchasePrice": {
                      "type": "string",
                      "format": "number"
                    },
                    "description": {
                      "type": "string"
                    },
                    "sku": {
                      "type": "string",
                      "description": "Must be unique if given"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "inventory",
                        "consumable",
                        "direct"
                      ],
                      "default": "inventory"
                    },
                    "customFields": {
                      "type": "object",
                      "description": "Key->Value hash of custom field names and values. Custom fields must be defined via the UI to be visible in the UI"
                    },
                    "InvoiceAccountId": {
                      "type": "integer",
                      "description": "Ref: Ledger Account._id"
                    },
                    "BillAccountId": {
                      "type": "integer",
                      "description": "Ref: Ledger Account._id"
                    },
                    "InventoryAccountId": {
                      "type": "integer",
                      "description": "Ref: Ledger Account._id"
                    },
                    "CogsAccountId": {
                      "type": "integer",
                      "description": "Ref: Ledger Account._id"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/items/count": {
      "get": {
        "tags": [
          "Items"
        ],
        "summary": "Count",
        "description": "The same filters as [Search](#operation/itemsSearch) can be used here.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/status"
          }
        ],
        "responses": {
          "200": {
            "description": "Count response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/items/{id}": {
      "delete": {
        "tags": [
          "Items"
        ],
        "summary": "Delete",
        "description": "Delete one Item\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Item DELETE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Item Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "no content success"
          }
        }
      },
      "get": {
        "tags": [
          "Items"
        ],
        "summary": "One",
        "description": "Get one Item",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Item Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "One Item",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "number": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "externalIds": {
                      "type": "string"
                    },
                    "salePrice": {
                      "type": "string",
                      "format": "number"
                    },
                    "purchasePrice": {
                      "type": "string",
                      "format": "number"
                    },
                    "description": {
                      "type": "string"
                    },
                    "sku": {
                      "type": "string",
                      "description": "Must be unique if given"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "inventory",
                        "consumable",
                        "direct"
                      ],
                      "default": "inventory"
                    },
                    "customFields": {
                      "type": "object",
                      "description": "Key->Value hash of custom field names and values. Custom fields must be defined via the UI to be visible in the UI"
                    },
                    "inactive": {
                      "type": "boolean"
                    },
                    "InvoiceAccountId": {
                      "type": "integer",
                      "description": "Ref: Ledger Account._id"
                    },
                    "BillAccountId": {
                      "type": "integer",
                      "description": "Ref: Ledger Account._id"
                    },
                    "InventoryAccountId": {
                      "type": "integer",
                      "description": "Ref: Ledger Account._id"
                    },
                    "CogsAccountId": {
                      "type": "integer",
                      "description": "Ref: Ledger Account._id"
                    },
                    "InvoiceAccount": {
                      "type": "object",
                      "properties": {
                        "number": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "BillAccount": {
                      "type": "object",
                      "properties": {
                        "number": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "InventoryAccount": {
                      "type": "object",
                      "properties": {
                        "number": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "CogsAccount": {
                      "type": "object",
                      "properties": {
                        "number": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Items"
        ],
        "summary": "Update",
        "description": "Update One Item\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Item UPDATE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Item Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON body containing key and values to update\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "externalIds": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "salePrice": {
                    "type": "string",
                    "format": "number"
                  },
                  "purchasePrice": {
                    "type": "string",
                    "format": "number"
                  },
                  "description": {
                    "type": "string"
                  },
                  "sku": {
                    "type": "string",
                    "description": "Must be unique if given"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "inventory",
                      "consumable"
                    ],
                    "description": "If an item is direct, type cannot be updated. Type cannot be updated to direct."
                  },
                  "inactive": {
                    "type": "boolean",
                    "default": false
                  },
                  "customFields": {
                    "type": "object",
                    "description": "Key->Value hash of custom field names and values. Custom fields must be defined via the UI to be visible in the UI"
                  },
                  "InvoiceAccountId": {
                    "type": "integer",
                    "description": "Ref: Ledger Account._id"
                  },
                  "InvoiceAccount": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "description": "Ref: Ledger Account.number, Can be used in place of InvoiceAccountId"
                      }
                    }
                  },
                  "BillAccountId": {
                    "type": "integer",
                    "description": "Ref: Ledger Account._id"
                  },
                  "BillAccount": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "description": "Ref: Ledger Account.number, Can be used in place of BillAccountId"
                      }
                    }
                  },
                  "InventoryAccountId": {
                    "type": "integer",
                    "description": "Ref: Ledger Account._id"
                  },
                  "InventoryAccount": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "description": "Ref: Ledger Account.number, Can be used in place of InventoryAccountId"
                      }
                    }
                  },
                  "CogsAccountId": {
                    "type": "integer",
                    "description": "Ref: Ledger Account._id"
                  },
                  "CogsAccount": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "description": "Ref: Ledger Account.number, Can be used in place of CogsAccountId"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated Item",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "number": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "externalIds": {
                      "type": "string"
                    },
                    "salePrice": {
                      "type": "string",
                      "format": "number"
                    },
                    "purchasePrice": {
                      "type": "string",
                      "format": "number"
                    },
                    "description": {
                      "type": "string"
                    },
                    "sku": {
                      "type": "string",
                      "description": "Must be unique if given"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "inventory",
                        "consumable",
                        "direct"
                      ],
                      "default": "inventory"
                    },
                    "customFields": {
                      "type": "object",
                      "description": "Key->Value hash of custom field names and values. Custom fields must be defined via the UI to be visible in the UI"
                    },
                    "InvoiceAccountId": {
                      "type": "integer",
                      "description": "Ref: Ledger Account._id"
                    },
                    "BillAccountId": {
                      "type": "integer",
                      "description": "Ref: Ledger Account._id"
                    },
                    "InventoryAccountId": {
                      "type": "integer",
                      "description": "Ref: Ledger Account._id"
                    },
                    "CogsAccountId": {
                      "type": "integer",
                      "description": "Ref: Ledger Account._id"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/items/{id}/stock/summary": {
      "get": {
        "tags": [
          "Items"
        ],
        "summary": "Summary",
        "description": "Summary of items",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Item Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "childWh",
            "description": "Determine if the summary balances include stock from child warehouses",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of items",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "wId": {
                        "type": "number"
                      },
                      "wName": {
                        "type": "string"
                      },
                      "wPid": {
                        "type": "number",
                        "nullable": true
                      },
                      "qtyAvailable": {
                        "type": "string",
                        "example": "1"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/jobs": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "summary": "Search",
        "operationId": "jobsSearch",
        "description": "| Field       | Filterable | Sortable |\n|---------------------|:--:|:--:|\n|_id                  | ✅ | ✅ |\n|name                 | ✅ | ✅ |\n|number               | ✅ | ✅ |\n|description          | ✅ | ✅ |\n|status               | ✅ | ❌ |\n|inactive             | ✅ | ❌ |\n|CustomerId           | ✅ | ❌ |\n|createdAt            | ✅ | ✅ |\n|updatedAt            | ✅ | ✅ |\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/status"
          },
          {
            "in": "query",
            "name": "order",
            "description": "Order to return results in. ex \"date:desc\"",
            "schema": {
              "type": "string",
              "default": "number:ASC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Jobs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "number"
                          },
                          "number": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "quoted",
                              "inProgress",
                              "completed",
                              "closed"
                            ]
                          },
                          "inactive": {
                            "type": "boolean"
                          },
                          "CustomerId": {
                            "type": "number"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "Customer": {
                            "type": "object",
                            "properties": {
                              "_id": {
                                "type": "number"
                              },
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Jobs"
        ],
        "summary": "Create",
        "description": "Create Job\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Job CREATE</div>\n</div>\n",
        "requestBody": {
          "description": "JSON body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "number",
                  "name",
                  "CustomerId",
                  "status"
                ],
                "properties": {
                  "number": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "quoted",
                      "inProgress",
                      "completed",
                      "closed"
                    ]
                  },
                  "CustomerId": {
                    "type": "number"
                  },
                  "description": {
                    "type": "string"
                  },
                  "inactive": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created Job",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "number"
                    },
                    "number": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "quoted",
                        "inProgress",
                        "completed",
                        "closed"
                      ]
                    },
                    "CustomerId": {
                      "type": "number"
                    },
                    "inactive": {
                      "type": "boolean"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/jobs/count": {
      "get": {
        "tags": [
          "Jobs"
        ],
        "summary": "Count",
        "description": "The same filters as [Search](#operation/jobsSearch) can be used here.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/status"
          }
        ],
        "responses": {
          "200": {
            "description": "Count response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/jobs/{id}": {
      "delete": {
        "tags": [
          "Jobs"
        ],
        "summary": "Delete",
        "description": "Delete one Job\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Job DELETE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Job Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "no content success"
          }
        }
      },
      "get": {
        "tags": [
          "Jobs"
        ],
        "summary": "One",
        "description": "Get one Job",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Job Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "One Job",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "number"
                    },
                    "number": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "quoted",
                        "inProgress",
                        "completed",
                        "closed"
                      ]
                    },
                    "inactive": {
                      "type": "boolean"
                    },
                    "CustomerId": {
                      "type": "number"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "Customer": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Jobs"
        ],
        "summary": "Update",
        "description": "Update Job\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Job UPDATE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Job Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON body containing key and values to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "number": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "quoted",
                      "inProgress",
                      "completed",
                      "closed"
                    ]
                  },
                  "inactive": {
                    "type": "boolean"
                  },
                  "CustomerId": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated Job",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "number"
                    },
                    "number": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "quoted",
                        "inProgress",
                        "completed",
                        "closed"
                      ]
                    },
                    "inactive": {
                      "type": "boolean"
                    },
                    "CustomerId": {
                      "type": "number"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/journals/count": {
      "get": {
        "tags": [
          "Journals"
        ],
        "summary": "Count",
        "description": "The same filters as [Search](#operation/journalsSearch) can be used here.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "in": "query",
            "name": "status",
            "description": "`editable` counts draft journals that can be edited directly.\n\n`icdoc` counts draft intercompany document journals that can be edited directly.\n\n`draft` counts journals that aren't posted.\n\n`posted` counts journals that are posted.\n\nNot set counts all journals.\n",
            "schema": {
              "type": "string",
              "enum": [
                "draft",
                "editable",
                "icdoc",
                "posted"
              ]
            }
          },
          {
            "in": "query",
            "name": "LocationId",
            "description": "Will include transactions from this Location and its children\n\nFilters on LocationId can further limit data.\n",
            "schema": {
              "type": "number",
              "description": "Ref: Location._id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Count response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/journals": {
      "post": {
        "tags": [
          "Journals"
        ],
        "summary": "Create",
        "description": "Create new Journal\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Journal CREATE</div>\n</div>\n",
        "requestBody": {
          "description": "JSON body to create new Journal\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "status",
                  "entryType",
                  "sourceLedger",
                  "reference",
                  "currency",
                  "Transactions"
                ],
                "properties": {
                  "status": {
                    "type": "string",
                    "enum": [
                      "draft",
                      "posted"
                    ]
                  },
                  "entryType": {
                    "type": "string",
                    "enum": [
                      "Standard",
                      "Reversing"
                    ]
                  },
                  "sourceLedger": {
                    "type": "string",
                    "enum": [
                      "Financial",
                      "AR",
                      "AP",
                      "Inventory"
                    ]
                  },
                  "reference": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string",
                    "format": "ISO4217 3 Char Code",
                    "description": "Ref: Currency.code"
                  },
                  "customCurrencyRate": {
                    "type": "string",
                    "format": "number",
                    "description": "Must be > 0. \nShould only be set if currency is a non ISO4217 currency. \nThis rate is the value of \"currency\" -> \"USD\".\n"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "attachments": {
                    "type": "array",
                    "description": "Links to any attached documents",
                    "items": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "reverseDate": {
                    "type": "string",
                    "format": "date",
                    "default": "First day of month after posted date.",
                    "description": "If entryType = 'Reversing', then this date will be used as the postedDate for the reversing Transaction Lines."
                  },
                  "icDoc": {
                    "type": "boolean",
                    "description": "True if this is an Intercompany Document Journal Entry. \n\nNot currently recommended to create these via API.\n"
                  },
                  "Transactions": {
                    "type": "array",
                    "description": "Minimum 2 rows required. SUM(debits) = SUM(credits).",
                    "items": {
                      "type": "object",
                      "required": [
                        "transactionDate",
                        "postedDate",
                        "debit",
                        "credit",
                        "LocationId",
                        "LedgerAccountId"
                      ],
                      "properties": {
                        "description": {
                          "type": "string"
                        },
                        "debit": {
                          "type": "string",
                          "format": "number",
                          "description": "Must be >= 0. Must be 0 if credit is > 0."
                        },
                        "credit": {
                          "type": "string",
                          "format": "number",
                          "description": "Must be >= 0. Must be 0 if debit is > 0."
                        },
                        "transactionDate": {
                          "type": "string",
                          "format": "date",
                          "description": "Cannot be in the future. Must be the same for all lines"
                        },
                        "postedDate": {
                          "type": "string",
                          "format": "date",
                          "description": "Should be the same for all lines"
                        },
                        "eliminate": {
                          "type": "boolean",
                          "default": false,
                          "description": "Will add elimination lines for this line if the following are true\n- elimination entries are enabled in system settings\n- ICLocationId is set \n- ICAccountId is set\n"
                        },
                        "txn_type": {
                          "type": "string",
                          "enum": [
                            "standard"
                          ]
                        },
                        "CostCenterId": {
                          "type": "integer",
                          "description": "Ref: CostCenter._id"
                        },
                        "LedgerAccountId": {
                          "type": "integer",
                          "description": "Ref: LedgerAccount._id"
                        },
                        "JobId": {
                          "type": "integer",
                          "description": "Ref: Job._id"
                        },
                        "ProductId": {
                          "type": "integer",
                          "description": "Ref: Product._id"
                        },
                        "LocationId": {
                          "type": "integer",
                          "description": "Ref: Location._id, Must be the same for all lines"
                        },
                        "CustomerId": {
                          "type": "integer",
                          "description": "Ref: Customer._id"
                        },
                        "VendorId": {
                          "type": "integer",
                          "description": "Ref: Vendor._id"
                        },
                        "ICLocationId": {
                          "type": "integer",
                          "description": "Ref: Location._id, Must be the same for all lines"
                        },
                        "ICAccountId": {
                          "type": "integer",
                          "description": "Ref: LedgerAccount._id"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created Journal",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "integer"
                      },
                      "number": {
                        "type": "integer"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "draft",
                          "posted",
                          "inventory",
                          "crypto"
                        ]
                      },
                      "entryType": {
                        "type": "string",
                        "enum": [
                          "Standard",
                          "Reversing"
                        ]
                      },
                      "sourceLedger": {
                        "type": "string",
                        "enum": [
                          "Financial",
                          "AR",
                          "AP",
                          "Crypto",
                          "Inventory",
                          "Closing"
                        ]
                      },
                      "reference": {
                        "type": "string"
                      },
                      "notes": {
                        "type": "string"
                      },
                      "attachments": {
                        "type": "array",
                        "description": "Links to any attached documents",
                        "items": {
                          "type": "string",
                          "format": "uri"
                        }
                      },
                      "reverseDate": {
                        "type": "string",
                        "format": "date"
                      },
                      "icDoc": {
                        "type": "boolean",
                        "description": "True if this is an Intercompany Document Journal Entry"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "AccountingPeriodId": {
                        "type": "integer"
                      },
                      "Transactions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "_id": {
                              "type": "integer"
                            },
                            "description": {
                              "type": "string"
                            },
                            "debit": {
                              "type": "string",
                              "format": "number"
                            },
                            "credit": {
                              "type": "string",
                              "format": "number"
                            },
                            "transactionDate": {
                              "type": "string",
                              "format": "date"
                            },
                            "postedDate": {
                              "type": "string",
                              "format": "date"
                            },
                            "reconcileId": {
                              "type": "string",
                              "description": "Bank Transaction Id value, if reconciled against a bank transaction"
                            },
                            "currency": {
                              "type": "string"
                            },
                            "customCurrencyRate": {
                              "type": "string",
                              "format": "number"
                            },
                            "consolidated": {
                              "type": "boolean",
                              "description": "True if this has been reconciled"
                            },
                            "reversing": {
                              "type": "boolean",
                              "description": "True if this is a reversing line for this Journal"
                            },
                            "elimination": {
                              "type": "boolean",
                              "description": "True if this is an intercompany line"
                            },
                            "elim2": {
                              "type": "boolean",
                              "description": "True if this is an intercompany document line"
                            },
                            "SystemJobId": {
                              "type": "string"
                            },
                            "CostCenterId": {
                              "type": "integer"
                            },
                            "LedgerAccountId": {
                              "type": "integer"
                            },
                            "JobId": {
                              "type": "integer"
                            },
                            "ProductId": {
                              "type": "integer"
                            },
                            "LocationId": {
                              "type": "integer"
                            },
                            "InvoiceId": {
                              "type": "integer"
                            },
                            "BillId": {
                              "type": "integer"
                            },
                            "CustomerId": {
                              "type": "integer"
                            },
                            "Vendorid": {
                              "type": "integer"
                            },
                            "ICLocationId": {
                              "type": "integer"
                            },
                            "CashReceiptId": {
                              "type": "integer"
                            },
                            "VendorCreditId": {
                              "type": "integer"
                            },
                            "ICAccountId": {
                              "type": "integer"
                            },
                            "PaymentId": {
                              "type": "integer"
                            },
                            "ForexRateId": {
                              "type": "integer"
                            },
                            "JournalId": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Journals"
        ],
        "summary": "Search",
        "operationId": "journalsSearch",
        "description": "| Field       | Filterable | Sortable |\n|---------------------|:--:|:--:|\n|_id                  | ✅ | ✅ |\n|currency             | ✅ | ❌ |\n|entryType            | ✅ | ✅ |\n|ICLocationId         | ✅ | ❌ |\n|LocationId           | ✅ | ❌ |\n|number               | ✅ | ✅ |\n|postedDate           | ✅ | ✅ |\n|reference            | ✅ | ❌ |\n|reportingCurrency    | ✅ | ❌ |\n|reverseDate          | ✅ | ✅ |\n|sourceLedger         | ✅ | ✅ |\n|status               | ✅ | ❌ |\n|SystemJobId          | ✅ | ❌ |\n|transactionDate      | ✅ | ✅ |\n|createdAt            | ✅ | ✅ |\n|updatedAt            | ✅ | ✅ |\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "in": "query",
            "name": "status",
            "description": "`editable` returns draft journals that can be edited directly.\n\n`icdoc` returns draft intercompany document journals that can be edited directly.\n\n`draft` returns journals that aren't posted.\n\n`posted` returns journals that are posted.\n\nNot set returns all journals.\n",
            "schema": {
              "type": "string",
              "enum": [
                "draft",
                "editable",
                "icdoc",
                "posted"
              ]
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Order to return results in. ex \"date:desc\"",
            "schema": {
              "type": "string",
              "default": "number:ASC"
            }
          },
          {
            "in": "query",
            "name": "LocationId",
            "description": "Will include transactions from this Location and its children\n\nFilters on LocationId can further limit data.\n",
            "schema": {
              "type": "number",
              "description": "Ref: Location._id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Journals",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "number"
                          },
                          "number": {
                            "type": "integer"
                          },
                          "entryType": {
                            "type": "string",
                            "enum": [
                              "Standard",
                              "Reversing"
                            ]
                          },
                          "sourceLedger": {
                            "type": "string",
                            "enum": [
                              "Financial",
                              "AR",
                              "AP",
                              "Closing",
                              "Inventory",
                              "Crypto"
                            ]
                          },
                          "reference": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "draft",
                              "posted",
                              "crypto",
                              "inventory"
                            ]
                          },
                          "notes": {
                            "type": "string"
                          },
                          "attachments": {
                            "type": "array",
                            "description": "Links to any attached documents",
                            "items": {
                              "type": "string",
                              "format": "uri"
                            }
                          },
                          "reverseDate": {
                            "type": "string",
                            "format": "date"
                          },
                          "icDoc": {
                            "type": "boolean"
                          },
                          "currency": {
                            "type": "string"
                          },
                          "LocationId": {
                            "type": "number"
                          },
                          "Location_id": {
                            "type": "string"
                          },
                          "Location_name": {
                            "type": "string"
                          },
                          "reportingCurrency": {
                            "type": "string"
                          },
                          "ICLocationId": {
                            "type": "number"
                          },
                          "ICLocation_id": {
                            "type": "string"
                          },
                          "ICLocation_name": {
                            "type": "string"
                          },
                          "postedDate": {
                            "type": "string"
                          },
                          "transactionDate": {
                            "type": "string"
                          },
                          "SystemJobId": {
                            "type": "string"
                          },
                          "amount": {
                            "type": "string",
                            "format": "number"
                          },
                          "reportingAmount": {
                            "type": "string",
                            "format": "number"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/journals/{id}": {
      "delete": {
        "tags": [
          "Journals"
        ],
        "summary": "Delete",
        "description": "Delete one Journal\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Journal DELETE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Journal Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "no content success"
          }
        }
      },
      "get": {
        "tags": [
          "Journals"
        ],
        "summary": "One",
        "description": "Get one Journal",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Journal _id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "One Journal",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "number": {
                      "type": "integer"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "draft",
                        "posted",
                        "inventory",
                        "crypto"
                      ]
                    },
                    "entryType": {
                      "type": "string",
                      "enum": [
                        "Standard",
                        "Reversing"
                      ]
                    },
                    "sourceLedger": {
                      "type": "string",
                      "enum": [
                        "Financial",
                        "AR",
                        "AP",
                        "Crypto",
                        "Inventory",
                        "Closing"
                      ]
                    },
                    "reference": {
                      "type": "string"
                    },
                    "notes": {
                      "type": "string"
                    },
                    "attachments": {
                      "type": "array",
                      "description": "Links to any attached documents",
                      "items": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "reverseDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "icDoc": {
                      "type": "boolean",
                      "description": "True if this is an Intercompany Document Journal Entry"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "AccountingPeriodId": {
                      "type": "integer",
                      "description": "Ref: AccountingPeriod._id"
                    },
                    "CryptoTransactionId": {
                      "type": "integer",
                      "description": "Ref: CryptoTransaction._id"
                    },
                    "Transactions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "integer"
                          },
                          "description": {
                            "type": "string"
                          },
                          "debit": {
                            "type": "string",
                            "format": "number"
                          },
                          "credit": {
                            "type": "string",
                            "format": "number"
                          },
                          "transactionDate": {
                            "type": "string",
                            "format": "date"
                          },
                          "postedDate": {
                            "type": "string",
                            "format": "date"
                          },
                          "reconcileId": {
                            "type": "string",
                            "description": "One of the following:\n- \"true\" - if manually reconciled\n- \"false\" - if manually unreconciled\n- null - if never reconciled\n- Bank Transaction Id value, if reconciled against a bank transaction\n"
                          },
                          "currency": {
                            "type": "string"
                          },
                          "customCurrencyRate": {
                            "type": "string",
                            "format": "number"
                          },
                          "consolidated": {
                            "type": "boolean",
                            "description": "True if this has been reconciled"
                          },
                          "reversing": {
                            "type": "boolean",
                            "description": "True if this is a reversing line for this Journal"
                          },
                          "elimination": {
                            "type": "boolean",
                            "description": "True if this is an intercompany line"
                          },
                          "elim2": {
                            "type": "boolean",
                            "description": "True if this is an elimination line"
                          },
                          "SystemJobId": {
                            "type": "string",
                            "description": "Ref: SystemJob._id"
                          },
                          "CostCenterId": {
                            "type": "integer",
                            "description": "Ref: CostCenter._id"
                          },
                          "LedgerAccountId": {
                            "type": "integer",
                            "description": "Ref: LedgerAccount._id"
                          },
                          "JobId": {
                            "type": "integer",
                            "description": "Ref: Job._id"
                          },
                          "ProductId": {
                            "type": "integer",
                            "description": "Ref: Product._id"
                          },
                          "Custom1Id": {
                            "type": "integer",
                            "description": "Ref: Custom1._id"
                          },
                          "Custom2Id": {
                            "type": "integer",
                            "description": "Ref: Custom2._id"
                          },
                          "Custom3Id": {
                            "type": "integer",
                            "description": "Ref: Custom3._id"
                          },
                          "LocationId": {
                            "type": "integer",
                            "description": "Ref: Location._id"
                          },
                          "InvoiceId": {
                            "type": "integer",
                            "description": "Ref: Invoice._id"
                          },
                          "BillId": {
                            "type": "integer",
                            "description": "Ref: Bill._id"
                          },
                          "CustomerId": {
                            "type": "integer",
                            "description": "Ref: Customer._id"
                          },
                          "VendorId": {
                            "type": "integer",
                            "description": "Ref: Vendor._id"
                          },
                          "ICLocationId": {
                            "type": "integer",
                            "description": "Ref: Location._id"
                          },
                          "CashReceiptId": {
                            "type": "integer",
                            "description": "Ref: CashReceipt._id"
                          },
                          "VendorCreditId": {
                            "type": "integer",
                            "description": "Ref: VendorCredit._id"
                          },
                          "ICAccountId": {
                            "type": "integer",
                            "description": "Ref: LedgerAccount._id"
                          },
                          "PaymentId": {
                            "type": "integer",
                            "description": "Ref: Payment._id"
                          },
                          "ForexRateId": {
                            "type": "integer"
                          },
                          "JournalId": {
                            "type": "integer",
                            "description": "Ref: Journal._id"
                          },
                          "SalesOrderId": {
                            "type": "integer",
                            "description": "Ref: SalesOrder._id"
                          },
                          "BatchPaymentId": {
                            "type": "integer",
                            "description": "Ref: BatchPayment._id"
                          },
                          "txn_type": {
                            "type": "string",
                            "enum": [
                              "standard",
                              "fx_remeasurement",
                              "fx_translation",
                              "retained_earnings",
                              "cta_oci",
                              "cta_aoci"
                            ]
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "Location": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          },
                          "ICLocation": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          },
                          "LedgerAccount": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "number": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              },
                              "subtype": {
                                "type": "string"
                              }
                            }
                          },
                          "ICAccount": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "number": {
                                "type": "string"
                              }
                            }
                          },
                          "Customer": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "Job": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "number": {
                                "type": "string"
                              }
                            }
                          },
                          "CostCenter": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          },
                          "Product": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          },
                          "Custom1": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          },
                          "Custom2": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          },
                          "Custom3": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          },
                          "Vendor": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          },
                          "Invoice": {
                            "type": "object",
                            "properties": {
                              "number": {
                                "type": "string"
                              }
                            }
                          },
                          "Bill": {
                            "type": "object",
                            "properties": {
                              "invoiceNumber": {
                                "type": "string"
                              }
                            }
                          },
                          "CashReceipt": {
                            "type": "object",
                            "properties": {
                              "number": {
                                "type": "string"
                              }
                            }
                          },
                          "VendorCredit": {
                            "type": "object",
                            "properties": {
                              "number": {
                                "type": "string"
                              }
                            }
                          },
                          "SalesOrder": {
                            "type": "object",
                            "properties": {
                              "number": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Journals"
        ],
        "summary": "Update",
        "description": "Update one Journal\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Journal UPDATE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Journal Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON object containing key and values to update\n\nCannot update posted journal\n\nTransaction lines are replaced with the new lines provided. So new Transaction._id values will be generated for each line, and old Transactions will be deleted.\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "entryType": {
                    "type": "string",
                    "enum": [
                      "Standard",
                      "Reversing"
                    ]
                  },
                  "sourceLedger": {
                    "type": "string",
                    "enum": [
                      "Financial",
                      "AR",
                      "AP",
                      "Inventory"
                    ]
                  },
                  "reference": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string",
                    "format": "ISO4217 3 Char Code",
                    "description": "Ref: Currency.code"
                  },
                  "customCurrencyRate": {
                    "type": "string",
                    "format": "number",
                    "description": "Must be > 0. \nShould only be set if currency is a non ISO4217 currency. \nThis rate is the value of \"currency\" -> \"USD\".\n"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "attachments": {
                    "type": "array",
                    "description": "Links to any attached documents",
                    "items": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "reverseDate": {
                    "type": "string",
                    "format": "date",
                    "default": "First day of month after posted date.",
                    "description": "If entryType = 'Reversing', then this date will be used as the postedDate for the reversing Transaction Lines."
                  },
                  "icDoc": {
                    "type": "boolean",
                    "description": "True if this is an Intercompany Document Journal Entry. \nNot currently recommended to create these via API.\n"
                  },
                  "Transactions": {
                    "type": "array",
                    "description": "Minimum 2 rows required. SUM(debits) = SUM(credits).",
                    "items": {
                      "type": "object",
                      "required": [
                        "transactionDate",
                        "postedDate",
                        "debit",
                        "credit",
                        "LocationId",
                        "LedgerAccountId"
                      ],
                      "properties": {
                        "description": {
                          "type": "string"
                        },
                        "debit": {
                          "type": "string",
                          "format": "number",
                          "description": "Must be >= 0. Must be 0 if credit is > 0."
                        },
                        "credit": {
                          "type": "string",
                          "format": "number",
                          "description": "Must be >= 0. Must be 0 if debit is > 0."
                        },
                        "transactionDate": {
                          "type": "string",
                          "format": "date",
                          "description": "Cannot be in the future. Must be the same for all lines"
                        },
                        "postedDate": {
                          "type": "string",
                          "format": "date",
                          "description": "Must be the same for all lines"
                        },
                        "eliminate": {
                          "type": "boolean",
                          "default": false,
                          "description": "Will add elimination lines for this line if the following are true\n- elimination entries are enabled in system settings\n- ICLocationId is set \n- ICAccountId is set\n"
                        },
                        "txn_type": {
                          "type": "string",
                          "enum": [
                            "standard"
                          ]
                        },
                        "CostCenterId": {
                          "type": "integer",
                          "description": "Ref: CostCenter._id"
                        },
                        "LedgerAccountId": {
                          "type": "integer",
                          "description": "Ref: LedgerAccount._id"
                        },
                        "JobId": {
                          "type": "integer",
                          "description": "Ref: Job._id"
                        },
                        "ProductId": {
                          "type": "integer",
                          "description": "Ref: Product._id"
                        },
                        "LocationId": {
                          "type": "integer",
                          "description": "Ref: Location._id, Must be the same for all lines"
                        },
                        "CustomerId": {
                          "type": "integer",
                          "description": "Ref: Customer._id"
                        },
                        "Vendorid": {
                          "type": "integer",
                          "description": "Ref: Vendor._id"
                        },
                        "ICLocationId": {
                          "type": "integer",
                          "description": "Ref: Location._id, Must be the same for all lines"
                        },
                        "ICAccountId": {
                          "type": "integer",
                          "description": "Ref: LedgerAccount._id"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated Journal",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "integer"
                      },
                      "number": {
                        "type": "integer"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "draft",
                          "posted",
                          "inventory",
                          "crypto"
                        ]
                      },
                      "entryType": {
                        "type": "string",
                        "enum": [
                          "Standard",
                          "Reversing"
                        ]
                      },
                      "sourceLedger": {
                        "type": "string",
                        "enum": [
                          "Financial",
                          "AR",
                          "AP",
                          "Crypto",
                          "Inventory",
                          "Closing"
                        ]
                      },
                      "reference": {
                        "type": "string"
                      },
                      "notes": {
                        "type": "string"
                      },
                      "attachments": {
                        "type": "array",
                        "description": "Links to any attached documents",
                        "items": {
                          "type": "string",
                          "format": "uri"
                        }
                      },
                      "reverseDate": {
                        "type": "string",
                        "format": "date"
                      },
                      "icDoc": {
                        "type": "boolean",
                        "description": "True if this is an Intercompany Document Journal Entry"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "AccountingPeriodId": {
                        "type": "integer"
                      },
                      "Transactions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "_id": {
                              "type": "integer"
                            },
                            "description": {
                              "type": "string"
                            },
                            "debit": {
                              "type": "string",
                              "format": "number"
                            },
                            "credit": {
                              "type": "string",
                              "format": "number"
                            },
                            "transactionDate": {
                              "type": "string",
                              "format": "date"
                            },
                            "postedDate": {
                              "type": "string",
                              "format": "date"
                            },
                            "reconcileId": {
                              "type": "string",
                              "description": "Bank Transaction Id value, if reconciled against a bank transaction"
                            },
                            "currency": {
                              "type": "string"
                            },
                            "customCurrencyRate": {
                              "type": "string",
                              "format": "number"
                            },
                            "consolidated": {
                              "type": "boolean",
                              "description": "True if this has been reconciled"
                            },
                            "reversing": {
                              "type": "boolean",
                              "description": "True if this is a reversing line for this Journal"
                            },
                            "elimination": {
                              "type": "boolean",
                              "description": "True if this is an intercompany line"
                            },
                            "elim2": {
                              "type": "boolean",
                              "description": "True if this is an intercompany document line"
                            },
                            "SystemJobId": {
                              "type": "string"
                            },
                            "CostCenterId": {
                              "type": "integer"
                            },
                            "LedgerAccountId": {
                              "type": "integer"
                            },
                            "JobId": {
                              "type": "integer"
                            },
                            "ProductId": {
                              "type": "integer"
                            },
                            "LocationId": {
                              "type": "integer"
                            },
                            "InvoiceId": {
                              "type": "integer"
                            },
                            "BillId": {
                              "type": "integer"
                            },
                            "CustomerId": {
                              "type": "integer"
                            },
                            "Vendorid": {
                              "type": "integer"
                            },
                            "ICLocationId": {
                              "type": "integer"
                            },
                            "CashReceiptId": {
                              "type": "integer"
                            },
                            "VendorCreditId": {
                              "type": "integer"
                            },
                            "ICAccountId": {
                              "type": "integer"
                            },
                            "PaymentId": {
                              "type": "integer"
                            },
                            "ForexRateId": {
                              "type": "integer"
                            },
                            "JournalId": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/journals/lines": {
      "get": {
        "tags": [
          "Journals"
        ],
        "summary": "Search Lines",
        "operationId": "searchJournalLines",
        "description": "| Field       | Filterable | Sortable |\n|---------------------|:--:|:--:|\n|_id                        | ✅ | ✅ |\n|elim2                      | ✅ | ❌ |\n|BillId                     | ✅ | ❌ |\n|elimination                | ✅ | ❌ |\n|CashReceiptId              | ✅ | ❌ |\n|CostCenterId               | ✅ | ❌ |\n|currency                   | ✅ | ✅ |\n|Custom1Id                  | ✅ | ❌ |\n|Custom2Id                  | ✅ | ❌ |\n|Custom3Id                  | ✅ | ❌ |\n|CustomerId                 | ✅ | ❌ |\n|description                | ✅ | ❌ |\n|InvoiceId                  | ✅ | ❌ |\n|ICAccountId                | ✅ | ❌ |\n|ICLocationId               | ✅ | ❌ |\n|JobId                      | ✅ | ❌ |\n|JournalId                  | ✅ | ✅ |\n|Journal_entryType          | ✅ | ✅ |\n|Journal_notes              | ✅ | ❌ |\n|Journal_number             | ✅ | ✅ |\n|Journal_reference          | ✅ | ❌ |\n|Journal_status             | ✅ | ❌ |\n|Journal_sourceLedger       | ✅ | ✅ |\n|Journal_AccountingPeriodId | ✅ | ❌ |\n|LedgerAccount_type         | ✅ | ✅ |\n|LedgerAccount_subtype      | ✅ | ✅ |\n|LedgerAccountId            | ✅ | ❌ |\n|Location_currency_rate     | ✅ | ✅ |\n|Location_currency_debit    | ✅ | ✅ |\n|Location_currency_credit   | ✅ | ✅ |\n|LocationId                 | ✅ | ❌ |\n|SalesOrderId               | ✅ | ❌ |\n|ProductId                  | ✅ | ❌ |\n|postedDate                 | ✅ | ✅ |\n|transactionDate            | ✅ | ✅ |\n|reconcileId                | ✅ | ❌ |\n|reversing                  | ✅ | ❌ |\n|SystemJobId                | ✅ | ❌ |\n|VendorId                   | ✅ | ❌ |\n|VendorCreditId             | ✅ | ❌ |\n|BatchPaymentId             | ✅ | ❌ |\n|credit                     | ✅ | ✅ |\n|debit                      | ✅ | ✅ |\n|txn_type                   | ✅ | ❌ |\n|createdAt                  | ✅ | ✅ |\n|updatedAt                  | ✅ | ✅ |\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "in": "query",
            "name": "order",
            "description": "Order to return results in. ex \"date:desc\"",
            "schema": {
              "type": "string",
              "default": "postedDate:ASC"
            }
          },
          {
            "in": "query",
            "name": "LocationId",
            "description": "Will include transactions from this Location and its children\n\nFilters on LocationId can further limit data.\n",
            "schema": {
              "type": "number",
              "description": "Ref: Location._id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Transactions\n\nCustom Dimensions are show below as Custom1,Custom2,Custom3, but should be replaced with the name of the dimension itself.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "integer"
                          },
                          "description": {
                            "type": "string"
                          },
                          "transactionDate": {
                            "type": "string",
                            "format": "date"
                          },
                          "postedDate": {
                            "type": "string",
                            "format": "date"
                          },
                          "reversing": {
                            "type": "boolean"
                          },
                          "reconcileId": {
                            "type": "string",
                            "description": "\"true\" if this was manually reconciled\n\n\"false\" if this was un-reconciled\n\nnull if this was never reconciled\n\n<plaid_id> if this was reconciled from the bank feed\n"
                          },
                          "consolidated": {
                            "type": "boolean"
                          },
                          "elimination": {
                            "type": "boolean",
                            "description": "Is this an intercompany line"
                          },
                          "elim2": {
                            "type": "boolean",
                            "description": "Is this an intercompany elimination line"
                          },
                          "customCurrencyRate": {
                            "type": "string",
                            "format": "number",
                            "description": "If currency is of type \"custom\", this is the rate to convert the custom currency to USD\n"
                          },
                          "JournalId": {
                            "type": "integer",
                            "description": "Ref: Journal._id"
                          },
                          "Journal_status": {
                            "type": "string",
                            "enum": [
                              "draft",
                              "posted",
                              "crypto",
                              "inventory"
                            ]
                          },
                          "Journal_sourceLedger": {
                            "type": "string",
                            "enum": [
                              "Financial",
                              "AR",
                              "AP",
                              "Closing",
                              "Inventory",
                              "Crypto"
                            ]
                          },
                          "Journal_entryType": {
                            "type": "string",
                            "enum": [
                              "Standard",
                              "Reversing"
                            ]
                          },
                          "Journal_reference": {
                            "type": "string"
                          },
                          "Journal_notes": {
                            "type": "string",
                            "description": "HTML formatted text"
                          },
                          "Journal_number": {
                            "type": "integer"
                          },
                          "Journal_reverseDate": {
                            "type": "string",
                            "format": "date"
                          },
                          "Journal_createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "Journal_updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "Journal_AccountingPeriodId": {
                            "type": "string",
                            "description": "Ref: AccountingPeriod._id"
                          },
                          "SystemJobId": {
                            "type": "string",
                            "description": "Ref: SystemJob._id"
                          },
                          "LedgerAccountId": {
                            "type": "integer",
                            "description": "Ref: LedgerAccount._id"
                          },
                          "LedgerAccount_name": {
                            "type": "string"
                          },
                          "LedgerAccount_number": {
                            "type": "string"
                          },
                          "LedgerAccount_type": {
                            "type": "string",
                            "enum": [
                              "Asset",
                              "Equity",
                              "Expense",
                              "Liability",
                              "Revenue"
                            ]
                          },
                          "LedgerAccount_subtype": {
                            "type": "string"
                          },
                          "ICAccountId": {
                            "type": "integer",
                            "description": "Ref: LedgerAccount._id"
                          },
                          "ICAccount_name": {
                            "type": "string"
                          },
                          "ICAccount_number": {
                            "type": "string"
                          },
                          "ICAccount_type": {
                            "type": "string"
                          },
                          "ICAccount_subtype": {
                            "type": "string",
                            "enum": [
                              "Asset",
                              "Equity",
                              "Expense",
                              "Liability",
                              "Revenue"
                            ]
                          },
                          "CostCenterId": {
                            "type": "integer",
                            "description": "Ref: CostCenter._id"
                          },
                          "CostCenter_name": {
                            "type": "string"
                          },
                          "CostCenter_id": {
                            "type": "string"
                          },
                          "ProductId": {
                            "type": "integer",
                            "description": "Ref: Product._id"
                          },
                          "Product_name": {
                            "type": "string"
                          },
                          "Product_id": {
                            "type": "string"
                          },
                          "Custom1Id": {
                            "type": "integer",
                            "description": "Ref: Custom1._id"
                          },
                          "Custom1_name": {
                            "type": "string"
                          },
                          "Custom1_id": {
                            "type": "string"
                          },
                          "Custom2Id": {
                            "type": "integer",
                            "description": "Ref: Custom2._id"
                          },
                          "Custom2_name": {
                            "type": "string"
                          },
                          "Custom2_id": {
                            "type": "string"
                          },
                          "Custom3Id": {
                            "type": "integer",
                            "description": "Ref: Custom3._id"
                          },
                          "Custom3_name": {
                            "type": "string"
                          },
                          "Custom3_id": {
                            "type": "string"
                          },
                          "CustomerId": {
                            "type": "integer",
                            "description": "Ref: Customer._id"
                          },
                          "Customer_id": {
                            "type": "string"
                          },
                          "Customer_name": {
                            "type": "string"
                          },
                          "VendorId": {
                            "type": "integer",
                            "description": "Ref: Vendor._id"
                          },
                          "Vendor_id": {
                            "type": "string"
                          },
                          "Vendor_name": {
                            "type": "string"
                          },
                          "InvoiceId": {
                            "type": "integer",
                            "description": "Ref: Invoice._id"
                          },
                          "Invoice_number": {
                            "type": "string"
                          },
                          "BillId": {
                            "type": "integer",
                            "description": "Ref: Bill._id"
                          },
                          "Bill_invoiceNumber": {
                            "type": "string"
                          },
                          "PaymentId": {
                            "type": "integer",
                            "description": "Ref: Payment._id"
                          },
                          "SalesOrderId": {
                            "type": "integer",
                            "description": "Ref: SalesOrder._id"
                          },
                          "SalesOrder_number": {
                            "type": "string"
                          },
                          "LocationId": {
                            "type": "integer",
                            "description": "Ref: Location._id"
                          },
                          "Location_name": {
                            "type": "string"
                          },
                          "Location_id": {
                            "type": "string"
                          },
                          "Location_currency": {
                            "type": "string"
                          },
                          "Location_currency_rate": {
                            "type": "string"
                          },
                          "Location_currency_credit": {
                            "type": "string",
                            "format": "number"
                          },
                          "Location_currency_debit": {
                            "type": "string",
                            "format": "number"
                          },
                          "Location_parent_path": {
                            "type": "array",
                            "items": {
                              "type": "integer"
                            }
                          },
                          "ICLocationId": {
                            "type": "integer",
                            "description": "Ref: Location._id"
                          },
                          "ICLocation_name": {
                            "type": "string"
                          },
                          "ICLocation_id": {
                            "type": "string"
                          },
                          "ICLocation_currency": {
                            "type": "string"
                          },
                          "CashReceiptId": {
                            "type": "integer",
                            "description": "Ref: CashReceipt._id"
                          },
                          "CashReceipt_number": {
                            "type": "string"
                          },
                          "VendorCreditId": {
                            "type": "string",
                            "description": "Ref: VendorCredit._id"
                          },
                          "VendorCredit_number": {
                            "type": "string"
                          },
                          "JobId": {
                            "type": "integer",
                            "description": "Ref: Job._id"
                          },
                          "Job_number": {
                            "type": "string"
                          },
                          "Job_name": {
                            "type": "string"
                          },
                          "BatchPaymentId": {
                            "type": "integer",
                            "description": "Ref: BatchPayment._id"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "currency": {
                            "type": "string",
                            "description": "\"Ref: Currency.code\"\n\nPosted currency\n"
                          },
                          "debit": {
                            "type": "string",
                            "format": "number"
                          },
                          "credit": {
                            "type": "string",
                            "format": "number"
                          },
                          "txn_type": {
                            "type": "string",
                            "enum": [
                              "standard",
                              "fx_remeasurement",
                              "fx_translation",
                              "retained_earnings",
                              "cta_oci",
                              "cta_aoci"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/journals/lines/count": {
      "get": {
        "tags": [
          "Journals"
        ],
        "summary": "Lines Count",
        "description": "The same filters as [Search](#operation/searchJournalLines) can be used here.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/LocationId"
          }
        ],
        "responses": {
          "200": {
            "description": "Count response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/journals/{id}/post": {
      "put": {
        "tags": [
          "Journals"
        ],
        "summary": "Post",
        "description": "Post a journal\n\nCan only Post a Journal in status \"draft\"\n\nCan only Post a Journal with sourceLedger in [\"Financial\", \"AR\", \"AP\", \"Inventory\"]\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Journal POSTED</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Journal Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/ledger-accounts": {
      "get": {
        "tags": [
          "Ledger Accounts"
        ],
        "summary": "Search",
        "operationId": "ledgerAccountsSearch",
        "description": "| Field       | Filterable | Sortable |\n|---------------------|:--:|:--:|\n|_id                      | ✅ | ✅ |\n|name                     | ✅ | ✅ |\n|number                   | ✅ | ✅ |\n|naturalBalance           | ✅ | ✅ |\n|description              | ✅ | ✅ |\n|includeLocationChildren  | ✅ | ✅ |\n|type                     | ✅ | ✅ |\n|subtype                  | ✅ | ✅ |\n|canDelete                | ✅ | ✅ |\n|revalue_fx               | ✅ | ✅ |\n|inactive                 | ✅ | ✅ |\n|createdAt                | ✅ | ✅ |\n|updatedAt                | ✅ | ✅ |\n|LocationId               | ✅ | ❌ |\n|Location.id              | ❌ | ✅ |\n|ICAccountId              | ✅ | ❌ |\n|ICAccount.number         | ❌ | ❌ |\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/status"
          },
          {
            "in": "query",
            "name": "order",
            "description": "Order to return results in. ex \"date:desc\"",
            "schema": {
              "type": "string",
              "default": "number:ASC"
            }
          },
          {
            "in": "query",
            "name": "type",
            "description": "Filter accounts by type (optional), if not provided all types will be returned",
            "schema": {
              "type": "string",
              "enum": [
                "Asset",
                "Liability",
                "Equity",
                "Revenue",
                "Expense"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Ledger Accounts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "number": {
                            "type": "string",
                            "format": "integer"
                          },
                          "naturalBalance": {
                            "type": "string",
                            "enum": [
                              "Debit",
                              "Credit"
                            ]
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "Asset",
                              "Liability",
                              "Equity",
                              "Revenue",
                              "Expense"
                            ]
                          },
                          "subtype": {
                            "type": "string"
                          },
                          "reportGroup": {
                            "type": "string",
                            "enum": [
                              "Cash",
                              "Accounts Receivable",
                              "Other Current Assets",
                              "Fixed Assets",
                              "Other Assets",
                              "Accounts Payable",
                              "Other Current Liability",
                              "Long Term Liability",
                              "Equity",
                              "Retained Earnings",
                              "Revenue",
                              "Other Income",
                              "Operating Expense",
                              "Cost of Revenue",
                              "Other Expense",
                              "Income Tax Expense"
                            ]
                          },
                          "description": {
                            "type": "string"
                          },
                          "includeLocationChildren": {
                            "type": "boolean"
                          },
                          "canDelete": {
                            "type": "boolean"
                          },
                          "revalue_fx": {
                            "type": "boolean"
                          },
                          "inactive": {
                            "type": "boolean"
                          },
                          "LocationId": {
                            "type": "integer"
                          },
                          "ICAccountId": {
                            "type": "integer"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "Location": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "ICAccount": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "number": {
                                "type": "string",
                                "format": "integer"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Ledger Accounts"
        ],
        "summary": "Create",
        "description": "Create new Ledger Account\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>LedgerAccount CREATE</div>\n</div>\n",
        "requestBody": {
          "description": "JSON body to create new Ledger Account\n\nOne of `[LocationId, Location.id]` is required\n\nOnly one of `[ICAccountId, ICAccount.number]` can be set\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "number",
                  "naturalBalance",
                  "type",
                  "subtype"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "number": {
                    "type": "string",
                    "format": "integer"
                  },
                  "naturalBalance": {
                    "type": "string",
                    "enum": [
                      "Debit",
                      "Credit"
                    ]
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "Asset",
                      "Liability",
                      "Equity",
                      "Revenue",
                      "Expense"
                    ]
                  },
                  "reportGroup": {
                    "type": "string",
                    "enum": [
                      "Cash",
                      "Accounts Receivable",
                      "Other Current Assets",
                      "Fixed Assets",
                      "Other Assets",
                      "Accounts Payable",
                      "Other Current Liability",
                      "Long Term Liability",
                      "Equity",
                      "Retained Earnings",
                      "Revenue",
                      "Other Income",
                      "Operating Expense",
                      "Cost of Revenue",
                      "Other Expense",
                      "Income Tax Expense"
                    ]
                  },
                  "subtype": {
                    "type": "string",
                    "description": "Case in-sensitive"
                  },
                  "description": {
                    "type": "string"
                  },
                  "includeLocationChildren": {
                    "type": "boolean",
                    "default": false
                  },
                  "canDelete": {
                    "type": "boolean",
                    "default": true
                  },
                  "revalue_fx": {
                    "type": "boolean",
                    "default": false
                  },
                  "inactive": {
                    "type": "boolean",
                    "default": false
                  },
                  "LocationId": {
                    "type": "integer",
                    "description": "Ref: Location._id\n"
                  },
                  "ICAccountId": {
                    "type": "integer",
                    "description": "Ref: LedgerAccount._id\n"
                  },
                  "Location": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Location.id, Can be used in place of LocationId\n"
                      }
                    }
                  },
                  "ICAccount": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "format": "integer",
                        "description": "Ref: LedgerAccount.number, Can be used in place of ICAccountId\n"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created Ledger Accounts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "number": {
                        "type": "string",
                        "format": "integer"
                      },
                      "naturalBalance": {
                        "type": "string",
                        "enum": [
                          "Debit",
                          "Credit"
                        ]
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "Asset",
                          "Liability",
                          "Equity",
                          "Revenue",
                          "Expense"
                        ]
                      },
                      "subtype": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "includeLocationChildren": {
                        "type": "boolean"
                      },
                      "canDelete": {
                        "type": "boolean"
                      },
                      "revalue_fx": {
                        "type": "boolean"
                      },
                      "inactive": {
                        "type": "boolean"
                      },
                      "LocationId": {
                        "type": "integer"
                      },
                      "ICAccountId": {
                        "type": "integer"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ledger-accounts/count": {
      "get": {
        "tags": [
          "Ledger Accounts"
        ],
        "summary": "Count",
        "description": "The same filters as [Search](#operation/ledgerAccountsSearch) can be used here.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/status"
          },
          {
            "in": "query",
            "name": "type",
            "description": "Filter accounts by type (optional), if not provided all types will be returned",
            "schema": {
              "type": "string",
              "enum": [
                "Asset",
                "Liability",
                "Equity",
                "Revenue",
                "Expense"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Count response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/ledger-accounts/{id}": {
      "delete": {
        "tags": [
          "Ledger Accounts"
        ],
        "summary": "Delete",
        "description": "Delete a Ledger Account\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>LedgerAccount DELETE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Ledger Account Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "get": {
        "tags": [
          "Ledger Accounts"
        ],
        "summary": "One",
        "description": "Get one Ledger Account",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Ledger Account Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "One Ledger Account",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "number": {
                      "type": "string",
                      "format": "integer"
                    },
                    "naturalBalance": {
                      "type": "string",
                      "enum": [
                        "Debit",
                        "Credit"
                      ]
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "Asset",
                        "Liability",
                        "Equity",
                        "Revenue",
                        "Expense"
                      ]
                    },
                    "subtype": {
                      "type": "string"
                    },
                    "reportGroup": {
                      "type": "string",
                      "enum": [
                        "Cash",
                        "Accounts Receivable",
                        "Other Current Assets",
                        "Fixed Assets",
                        "Other Assets",
                        "Accounts Payable",
                        "Other Current Liability",
                        "Long Term Liability",
                        "Equity",
                        "Retained Earnings",
                        "Revenue",
                        "Other Income",
                        "Operating Expense",
                        "Cost of Revenue",
                        "Other Expense",
                        "Income Tax Expense"
                      ]
                    },
                    "description": {
                      "type": "string"
                    },
                    "includeLocationChildren": {
                      "type": "boolean"
                    },
                    "canDelete": {
                      "type": "boolean"
                    },
                    "revalue_fx": {
                      "type": "boolean"
                    },
                    "inactive": {
                      "type": "boolean"
                    },
                    "LocationId": {
                      "type": "integer"
                    },
                    "ICAccountId": {
                      "type": "integer"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "Location": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "ICAccount": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "number": {
                          "type": "string",
                          "format": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Ledger Accounts"
        ],
        "summary": "Update",
        "description": "Update one Ledger Account\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Ledger Account UPDATE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Ledger Account Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON object containing key and values to update\n\nOnly one of `[LocationId, Location.id]` can be set\n\nOnly one of `[ICAccountId, ICAccount.number]` can be set\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "number": {
                    "type": "string",
                    "format": "integer"
                  },
                  "naturalBalance": {
                    "type": "string",
                    "enum": [
                      "Debit",
                      "Credit"
                    ]
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "Asset",
                      "Liability",
                      "Equity",
                      "Revenue",
                      "Expense"
                    ]
                  },
                  "reportGroup": {
                    "type": "string",
                    "enum": [
                      "Cash",
                      "Accounts Receivable",
                      "Other Current Assets",
                      "Fixed Assets",
                      "Other Assets",
                      "Accounts Payable",
                      "Other Current Liability",
                      "Long Term Liability",
                      "Equity",
                      "Retained Earnings",
                      "Revenue",
                      "Other Income",
                      "Operating Expense",
                      "Cost of Revenue",
                      "Other Expense",
                      "Income Tax Expense"
                    ]
                  },
                  "subtype": {
                    "type": "string",
                    "description": "Case in-sensitive"
                  },
                  "description": {
                    "type": "string"
                  },
                  "includeLocationChildren": {
                    "type": "boolean",
                    "default": false
                  },
                  "revalue_fx": {
                    "type": "boolean",
                    "default": false
                  },
                  "inactive": {
                    "type": "boolean",
                    "default": false
                  },
                  "LocationId": {
                    "type": "integer",
                    "description": "Ref: Location._id\n"
                  },
                  "ICAccountId": {
                    "type": "integer",
                    "description": "Ref: LedgerAccount._id\n"
                  },
                  "Location": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Location.id, Can be used in place of LocationId\n"
                      }
                    }
                  },
                  "ICAccount": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "format": "integer",
                        "description": "Ref: LedgerAccount.number, Can be used in place of ICAccountId\n"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated Ledger Account",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "integer"
                      },
                      "name": {
                        "type": "string"
                      },
                      "number": {
                        "type": "string",
                        "format": "integer"
                      },
                      "naturalBalance": {
                        "type": "string",
                        "enum": [
                          "Debit",
                          "Credit"
                        ]
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "Asset",
                          "Liability",
                          "Equity",
                          "Revenue",
                          "Expense"
                        ]
                      },
                      "subtype": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "includeLocationChildren": {
                        "type": "boolean"
                      },
                      "canDelete": {
                        "type": "boolean"
                      },
                      "revalue_fx": {
                        "type": "boolean"
                      },
                      "inactive": {
                        "type": "boolean"
                      },
                      "LocationId": {
                        "type": "integer"
                      },
                      "ICAccountId": {
                        "type": "integer"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ledger-accounts/subtypes/{param}": {
      "delete": {
        "tags": [
          "Ledger Accounts"
        ],
        "summary": "Delete Subtype",
        "description": "Delete a Subtype\n",
        "parameters": [
          {
            "in": "path",
            "name": "param",
            "description": "subtype",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "get": {
        "tags": [
          "Ledger Accounts"
        ],
        "summary": "Get All Subtypes for type",
        "parameters": [
          {
            "in": "path",
            "name": "param",
            "description": "Ledger Account Type",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of Ledger Account Subtypes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/ledger-accounts/subtypes": {
      "get": {
        "tags": [
          "Ledger Accounts"
        ],
        "summary": "Get All Subtypes",
        "description": "Returns a list of all defined ledger account subtypes\n",
        "parameters": [
          {
            "in": "query",
            "name": "mapgroups",
            "description": "If provided, will return subtypes with group mappings as a collection;\n\nIf not provided, will return all subtypes as an array of strings;\n",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of Ledger Account Subtypes",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "subtype": {
                            "type": "string"
                          },
                          "reportGroup": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Ledger Accounts"
        ],
        "summary": "Upsert Subtypes",
        "description": "Upsert subtype to report group mappings\n",
        "requestBody": {
          "description": "Existing subtypes will be updated, new subtypes will be created.\n\nThe subtype field is case insensitive and must be unique.         \n",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "subtype",
                    "reportGroup"
                  ],
                  "properties": {
                    "subtype": {
                      "type": "string",
                      "description": "Must be unique and is case insensitive\n"
                    },
                    "reportGroup": {
                      "type": "string",
                      "enum": [
                        "Cash",
                        "Accounts Receivable",
                        "Other Current Assets",
                        "Fixed Assets",
                        "Other Assets",
                        "Accounts Payable",
                        "Other Current Liability",
                        "Long Term Liability",
                        "Equity",
                        "Retained Earnings",
                        "Revenue",
                        "Other Income",
                        "Operating Expense",
                        "Cost of Revenue",
                        "Other Expense",
                        "Income Tax Expense"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Upserted subtype mappings",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "subtype": {
                        "type": "string"
                      },
                      "reportGroup": {
                        "type": "string",
                        "enum": [
                          "Cash",
                          "Accounts Receivable",
                          "Other Current Assets",
                          "Fixed Assets",
                          "Other Assets",
                          "Accounts Payable",
                          "Other Current Liability",
                          "Long Term Liability",
                          "Equity",
                          "Retained Earnings",
                          "Revenue",
                          "Other Income",
                          "Operating Expense",
                          "Cost of Revenue",
                          "Other Expense",
                          "Income Tax Expense"
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/locations/{id}/accounts": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "Search Accounts",
        "description": "| Field       | Filterable | Sortable |\n|---------------------|:--:|:--:|\n|_id                  | ✅ | ❌ |\n|number               | ✅ | ✅ |\n|name                 | ✅ | ❌ |\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/status"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "in": "query",
            "name": "order",
            "description": "Order to return results in. ex \"date:desc\"",
            "schema": {
              "type": "string",
              "default": "number:ASC"
            }
          },
          {
            "in": "path",
            "name": "id",
            "description": "Location _id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Location Accounts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "integer"
                          },
                          "number": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "ICAccountId": {
                            "type": "integer",
                            "description": "Ref: ICAccounts._id"
                          },
                          "LocationId": {
                            "type": "integer",
                            "description": "Ref: Locations._id"
                          },
                          "ICAccount": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "number": {
                                "type": "string"
                              }
                            }
                          },
                          "Location": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/locations": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "Search",
        "operationId": "locationsSearch",
        "description": "| Field       | Filterable | Sortable |\n|---------------------|:--:|:--:|\n|_id                  | ✅ | ✅ |\n|id                   | ✅ | ✅ |\n|name                 | ✅ | ✅ |\n|description          | ✅ | ✅ |\n|currency             | ✅ | ✅ |\n|externalId           | ✅ | ✅ |\n|externalSource       | ✅ | ✅ |\n|parent_id            | ✅ | ❌ |\n|Parent.id            | ❌ | ❌ |\n|FXGLAccountId        | ✅ | ❌ |\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "in": "query",
            "name": "order",
            "description": "Order to return results in. ex \"date:desc\"",
            "schema": {
              "type": "string",
              "default": "id:ASC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Locations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "integer"
                          },
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "currency": {
                            "type": "string",
                            "description": "Ref: Currency.code"
                          },
                          "description": {
                            "type": "string"
                          },
                          "imageURL": {
                            "type": "string",
                            "format": "url"
                          },
                          "entityName": {
                            "type": "string"
                          },
                          "entityEmail": {
                            "type": "string"
                          },
                          "entityPhone": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "parent_id": {
                            "type": "integer",
                            "description": "Ref: Location._id"
                          },
                          "parent_path": {
                            "type": "array",
                            "items": {
                              "type": "integer",
                              "description": "Ref: Location._id"
                            }
                          },
                          "externalId": {
                            "type": "string"
                          },
                          "externalSource": {
                            "type": "string"
                          },
                          "AddressId": {
                            "type": "integer",
                            "description": "Ref: Addresses._id"
                          },
                          "FXGLAccountId": {
                            "type": "integer",
                            "description": "Ref: LedgerAccount._id"
                          },
                          "Address": {
                            "type": "object",
                            "properties": {
                              "label": {
                                "type": "string"
                              },
                              "line1": {
                                "type": "string"
                              },
                              "line2": {
                                "type": "string"
                              },
                              "city": {
                                "type": "string"
                              },
                              "state": {
                                "type": "string"
                              },
                              "zip": {
                                "type": "string"
                              },
                              "country": {
                                "type": "string"
                              }
                            }
                          },
                          "Parent": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "FXGLAccount": {
                            "type": "object",
                            "properties": {
                              "number": {
                                "type": "string",
                                "format": "number"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Locations"
        ],
        "summary": "Create",
        "description": "Creates a new Location\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Location CREATE</div>\n</div>\n",
        "requestBody": {
          "description": "JSON body to create new Location\n\nOne of `[Parent.id, parent_id]` must be set\n\nOnly one of `[FXGLAccount.number, FXGLAccountId]` can be set\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "name",
                  "currency"
                ],
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string",
                    "description": "Ref: Currency.code"
                  },
                  "description": {
                    "type": "string"
                  },
                  "imageURL": {
                    "type": "string",
                    "format": "url"
                  },
                  "entityName": {
                    "type": "string"
                  },
                  "entityEmail": {
                    "type": "string"
                  },
                  "entityPhone": {
                    "type": "string"
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "parent_id": {
                    "type": "integer",
                    "description": "Ref: Location._id"
                  },
                  "externalId": {
                    "type": "string"
                  },
                  "externalSource": {
                    "type": "string"
                  },
                  "FXGLAccountId": {
                    "type": "integer",
                    "description": "Ref: LedgerAccount._id"
                  },
                  "Address": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string"
                      },
                      "line1": {
                        "type": "string"
                      },
                      "line2": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "state": {
                        "type": "string"
                      },
                      "zip": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      }
                    }
                  },
                  "Parent": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Location.id, Can be used in place of parent_id\n"
                      }
                    }
                  },
                  "FXGLAccount": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "format": "number",
                        "description": "Ref: LedgerAccount.number, Can be used in place of FXGLAccountId\n"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Locations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "currency": {
                      "type": "string",
                      "description": "Ref: Currency.code"
                    },
                    "description": {
                      "type": "string"
                    },
                    "imageURL": {
                      "type": "string",
                      "format": "url"
                    },
                    "entityName": {
                      "type": "string"
                    },
                    "entityEmail": {
                      "type": "string"
                    },
                    "entityPhone": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "parent_id": {
                      "type": "integer",
                      "description": "Ref: Location._id"
                    },
                    "parent_path": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "description": "Ref: Location._id"
                      }
                    },
                    "externalId": {
                      "type": "string"
                    },
                    "externalSource": {
                      "type": "string"
                    },
                    "AddressId": {
                      "type": "integer",
                      "description": "Ref: Addresses._id"
                    },
                    "FXGLAccountId": {
                      "type": "integer",
                      "description": "Ref: LedgerAccount._id"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/locations/count": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "Count",
        "description": "The same filters as [Search](#operation/locationsSearch) can be used here.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          }
        ],
        "responses": {
          "200": {
            "description": "Count response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/locations/{id}": {
      "delete": {
        "tags": [
          "Locations"
        ],
        "summary": "Delete",
        "description": "Delete one Location\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Location DELETE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Location Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "no content success"
          }
        }
      },
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "One",
        "description": "Get one Location",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Location _id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "One Location",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "currency": {
                      "type": "string",
                      "description": "Ref: Currency.code"
                    },
                    "description": {
                      "type": "string"
                    },
                    "imageURL": {
                      "type": "string",
                      "format": "url"
                    },
                    "entityName": {
                      "type": "string"
                    },
                    "entityEmail": {
                      "type": "string"
                    },
                    "entityPhone": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "parent_id": {
                      "type": "integer",
                      "description": "Ref: Location._id"
                    },
                    "parent_path": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "description": "Ref: Location._id"
                      }
                    },
                    "externalId": {
                      "type": "string"
                    },
                    "externalSource": {
                      "type": "string"
                    },
                    "AddressId": {
                      "type": "integer",
                      "description": "Ref: Addresses._id"
                    },
                    "FXGLAccountId": {
                      "type": "integer",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "Address": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string"
                        },
                        "line1": {
                          "type": "string"
                        },
                        "line2": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "state": {
                          "type": "string"
                        },
                        "zip": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        }
                      }
                    },
                    "Parent": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "FXGLAccount": {
                      "type": "object",
                      "properties": {
                        "number": {
                          "type": "string",
                          "format": "number"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Locations"
        ],
        "summary": "Update",
        "description": "Update One Location\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Location UPDATE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Location Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON body containing key and values to update\n\nOnly one of `[Parent.id, parent_id]` can be set\n\nOnly one of `[FXGLAccount.number, FXGLAccountId]` can be set\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string",
                    "description": "Ref: Currency.code"
                  },
                  "description": {
                    "type": "string"
                  },
                  "imageURL": {
                    "type": "string",
                    "format": "url"
                  },
                  "entityName": {
                    "type": "string"
                  },
                  "entityEmail": {
                    "type": "string"
                  },
                  "entityPhone": {
                    "type": "string"
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updatedAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "parent_id": {
                    "type": "integer",
                    "description": "Ref: Location._id"
                  },
                  "externalId": {
                    "type": "string"
                  },
                  "externalSource": {
                    "type": "string"
                  },
                  "FXGLAccountId": {
                    "type": "integer",
                    "description": "Ref: LedgerAccount._id"
                  },
                  "Address": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string"
                      },
                      "line1": {
                        "type": "string"
                      },
                      "line2": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "state": {
                        "type": "string"
                      },
                      "zip": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      }
                    }
                  },
                  "Parent": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Location.id, Can be used in place of parent_id\n"
                      }
                    }
                  },
                  "FXGLAccount": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "format": "number",
                        "description": "Ref: LedgerAccount.number, Can be used in place of FXGLAccountId\n"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated Location",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "currency": {
                      "type": "string",
                      "description": "Ref: Currency.code"
                    },
                    "description": {
                      "type": "string"
                    },
                    "imageURL": {
                      "type": "string",
                      "format": "url"
                    },
                    "entityName": {
                      "type": "string"
                    },
                    "entityEmail": {
                      "type": "string"
                    },
                    "entityPhone": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "parent_id": {
                      "type": "integer",
                      "description": "Ref: Location._id"
                    },
                    "parent_path": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "description": "Ref: Location._id"
                      }
                    },
                    "externalId": {
                      "type": "string"
                    },
                    "externalSource": {
                      "type": "string"
                    },
                    "AddressId": {
                      "type": "integer",
                      "description": "Ref: Addresses._id"
                    },
                    "FXGLAccountId": {
                      "type": "integer",
                      "description": "Ref: LedgerAccount._id"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/locations/{id}/descendants": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "Descendants",
        "description": "Get Location with Descendants (children, grandchildren, etc) in a nested tree.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Location Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "One Location with descendents",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "currency": {
                      "type": "string",
                      "description": "Ref: Currency.code"
                    },
                    "children": {
                      "type": "array",
                      "description": "Nested Location children",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "integer"
                          },
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "currency": {
                            "type": "string",
                            "description": "Ref: Currency.code"
                          },
                          "children": {
                            "type": "array",
                            "description": "Further nested Location children"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/locations/me": {
      "get": {
        "tags": [
          "Locations"
        ],
        "summary": "Me",
        "description": "Get My Location Tree",
        "responses": {
          "200": {
            "description": "One Location",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "currency": {
                      "type": "string",
                      "description": "Ref: Currency.code"
                    },
                    "children": {
                      "type": "array",
                      "description": "Nested Location children",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "integer"
                          },
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "currency": {
                            "type": "string",
                            "description": "Ref: Currency.code"
                          },
                          "children": {
                            "type": "array",
                            "description": "Further nested Location children"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/part-numbers": {
      "post": {
        "tags": [
          "Part Numbers"
        ],
        "summary": "Create",
        "description": "Create new Part Number\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Part Number CREATE</div>\n</div>\n",
        "requestBody": {
          "description": "JSON body to create new Part Number",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "VendorId",
                  "ItemId",
                  "partNumber"
                ],
                "properties": {
                  "VendorId": {
                    "type": "number"
                  },
                  "ItemId": {
                    "type": "number"
                  },
                  "partNumber": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created Part Number",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "number"
                    },
                    "VendorId": {
                      "type": "number"
                    },
                    "ItemId": {
                      "type": "number"
                    },
                    "partNumber": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Part Numbers"
        ],
        "summary": "Search",
        "description": "| Field       | Filterable | Sortable |\n|---------------------|:--:|:--:|\n|_id                  | ✅ | ✅ |\n|VendorId             | ✅ | ✅ |\n|ItemId               | ✅ | ✅ |\n|partNumber           | ✅ | ✅ |\n|Item.name            | ❌ | ✅ |\n|Vendor.name          | ❌ | ✅ |\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "in": "query",
            "name": "order",
            "description": "Order to return results in. ex \"date:desc\"",
            "schema": {
              "type": "string",
              "default": "_id:ASC"
            }
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Part Numbers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean"
                    },
                    "cursor": {
                      "type": "string",
                      "nullable": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "number"
                          },
                          "VendorId": {
                            "type": "number"
                          },
                          "ItemId": {
                            "type": "number"
                          },
                          "partNumber": {
                            "type": "string"
                          },
                          "Item": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "sku": {
                                "type": "string",
                                "nullable": true
                              },
                              "number": {
                                "type": "number"
                              },
                              "description": {
                                "type": "string",
                                "nullable": true
                              }
                            }
                          },
                          "Vendor": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/part-numbers/{id}": {
      "get": {
        "tags": [
          "Part Numbers"
        ],
        "summary": "One",
        "description": "Get one Part Number",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Part Number Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "One Part Number",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "number"
                    },
                    "VendorId": {
                      "type": "number"
                    },
                    "ItemId": {
                      "type": "number"
                    },
                    "partNumber": {
                      "type": "string"
                    },
                    "Item": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "sku": {
                          "type": "string",
                          "nullable": true
                        },
                        "number": {
                          "type": "number"
                        },
                        "description": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    "Vendor": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Part Numbers"
        ],
        "summary": "Delete",
        "description": "Delete one Part Number\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>PartNumber DELETE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Part Number Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "no content success"
          }
        }
      },
      "put": {
        "tags": [
          "Part Numbers"
        ],
        "summary": "Update",
        "description": "Update one Part Number\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Part Number UPDATE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Part Number Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON object containing key and values to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "partNumber": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Updated Parts Number",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "number"
                    },
                    "VendorId": {
                      "type": "number"
                    },
                    "ItemId": {
                      "type": "number"
                    },
                    "partNumber": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payments": {
      "get": {
        "tags": [
          "Payments"
        ],
        "summary": "Search",
        "operationId": "paymentsSearch",
        "description": "| Field       | Filterable | Sortable |\n|---------------------|:--:|:--:|\n|_id              | ✅ | ✅ |\n|externalId       | ✅ | ✅ |\n|type             | ✅ | ❌ |\n|checkNumber      | ✅ | ✅ |\n|status           | ✅ | ❌ |\n|amount           | ✅ | ✅ |\n|paymentDate      | ✅ | ✅ |\n|postedDate       | ✅ | ✅ |\n|memo             | ✅ | ❌ |\n|notes            | ✅ | ❌ |\n|currency         | ✅ | ✅ |\n|BillId           | ✅ | ❌ |\n|VendorId         | ✅ | ❌ |\n|CustomerId       | ✅ | ❌ |\n|VendorCreditId   | ✅ | ❌ |\n|LedgerAccountId  | ✅ | ❌ |\n|CashReceiptId    | ✅ | ❌ |\n|LocationId       | ✅ | ❌ |\n|BatchPaymentId   | ✅ | ❌ |\n|InvoiceId        | ✅ | ❌ |\n|createdAt        | ✅ | ✅ |\n|updatedAt        | ✅ | ✅ |\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/LocationId"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Order to return results in. ex \"date:desc\"",
            "schema": {
              "type": "string",
              "default": "_id:ASC"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filter by AP or AR payments\n\nIf not specified, all payment types will be returned\n",
            "schema": {
              "type": "string",
              "enum": [
                "ap",
                "ar"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Payments",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentList"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Payments"
        ],
        "summary": "Create",
        "description": "Creates a new Payment\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Payment CREATE</div>\n</div>\n",
        "requestBody": {
          "description": "JSON body to create new Payment\n\nDepending on the type different fields are required. \n\nThis table defines which fields are required or not allowed based on the type. \n\nFields not mentioned here are optional\n\n| Field           | manual | vendorcredit | cashreceipt | refund | ap_refund |\n| :--------------:|:------:|:------------:|:-----------:|:------:|:---------:|\n| amount          | ✅     |    ✅         |     ✅      |   ✅   |    ✅      |\n| paymentDate     | ✅     |    ✅         |     ✅      |   ✅   |    ✅      |\n| BillId          | ✅     |    ✅         |     ❌      |   ❌   |    ✅      |\n| VendorCreditId  | ❌     |    ✅         |     ❌      |   ❌   |    ❌      |\n| LedgerAccountId | ✅     |    ❌         |     ❌      |   ✅   |    ✅      |\n| CashReceiptId   | ❌     |    ❌         |     ✅      |   ❌   |    ❌      |\n| InvoiceId       | ❌     |    ❌         |     ✅      |   ✅   |    ❌      |\n\n✅ - Field required for type\n\n❌ - Field not allowed for type\n\nCreated payments will be created in `created` status unless the setting for Auto-Approve (AR/AP) is enabled, then the status will be `approved`\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "type",
                  "amount",
                  "paymentDate"
                ],
                "properties": {
                  "externalId": {
                    "type": "string"
                  },
                  "externalCheckId": {
                    "type": "string"
                  },
                  "externalCheckBankId": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "manual",
                      "vendorcredit",
                      "cashreceipt",
                      "refund",
                      "ap_refund"
                    ]
                  },
                  "checkNumber": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "string",
                    "format": "number"
                  },
                  "paymentDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "postedDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Defaults to paymentDate"
                  },
                  "memo": {
                    "type": "string"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "attachments": {
                    "type": "array",
                    "description": "Links to any attached documents",
                    "items": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "BillId": {
                    "type": "integer",
                    "description": "Ref: Bill._id"
                  },
                  "VendorCreditId": {
                    "type": "integer",
                    "description": "Ref: VendorCredit._id"
                  },
                  "LedgerAccountId": {
                    "type": "integer",
                    "description": "Ref: LedgerAccount._id"
                  },
                  "CashReceiptId": {
                    "type": "integer",
                    "description": "Ref: CashReceipt._id"
                  },
                  "AddressId": {
                    "type": "integer",
                    "description": "Ref: Address._id"
                  },
                  "InvoiceId": {
                    "type": "integer",
                    "description": "Ref: Invoice._id"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Payment",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "externalId": {
                      "type": "string"
                    },
                    "externalCheckId": {
                      "type": "string"
                    },
                    "externalCheckBankId": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "manual",
                        "check",
                        "vendorcredit",
                        "cashreceipt",
                        "refund",
                        "ap_refund"
                      ]
                    },
                    "number": {
                      "type": "string"
                    },
                    "checkNumber": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "created",
                        "approved"
                      ],
                      "description": "Status will be created or approved, basd on system setting to auto approve payments of type"
                    },
                    "amount": {
                      "type": "string",
                      "format": "number"
                    },
                    "paymentDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "postedDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "memo": {
                      "type": "string"
                    },
                    "notes": {
                      "type": "string"
                    },
                    "attachments": {
                      "type": "array",
                      "description": "Links to any attached documents",
                      "items": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "currency": {
                      "type": "string",
                      "description": "Ref: Currency.code"
                    },
                    "BillId": {
                      "type": "integer",
                      "description": "Ref: Bill._id"
                    },
                    "VendorCreditId": {
                      "type": "integer",
                      "description": "Ref: VendorCredit._id"
                    },
                    "LedgerAccountId": {
                      "type": "integer",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "CashReceiptId": {
                      "type": "integer",
                      "description": "Ref: CashReceipt._id"
                    },
                    "AddressId": {
                      "type": "integer",
                      "description": "Ref: Address._id"
                    },
                    "LocationId": {
                      "type": "integer",
                      "description": "Ref: Location._id"
                    },
                    "InvoiceId": {
                      "type": "integer",
                      "description": "Ref: Invoice._id"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payments/{id}/approve": {
      "put": {
        "tags": [
          "Payments"
        ],
        "summary": "Approve",
        "description": "Approve one Payment\n\nOnly created status payments can be approved\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Payment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "no content success"
          }
        }
      }
    },
    "/payments/count": {
      "get": {
        "tags": [
          "Payments"
        ],
        "summary": "Count",
        "description": "The same filters as [Search](#operation/paymentsSearch) can be used here.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/LocationId"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filter by AP or AR payments\n\nIf not specified, all payment types will be returned\n",
            "schema": {
              "type": "string",
              "enum": [
                "ap",
                "ar"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Count response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/payments/{id}": {
      "delete": {
        "tags": [
          "Payments"
        ],
        "summary": "Delete",
        "description": "Delete one Payment\n\nOnly created status payments can be deleted\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Payment DELETE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Payment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "no content success"
          }
        }
      },
      "get": {
        "tags": [
          "Payments"
        ],
        "summary": "One",
        "description": "Get one Payment",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Payment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "One Payment",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "externalId": {
                      "type": "string"
                    },
                    "externalCheckId": {
                      "type": "string"
                    },
                    "externalCheckBankId": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "manual",
                        "vendorcredit",
                        "cashreceipt",
                        "refund",
                        "ap_refund"
                      ]
                    },
                    "checkNumber": {
                      "type": "string"
                    },
                    "number": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "created",
                        "approved",
                        "voided"
                      ]
                    },
                    "amount": {
                      "type": "string",
                      "format": "number"
                    },
                    "paymentDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "postedDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "memo": {
                      "type": "string"
                    },
                    "notes": {
                      "type": "string"
                    },
                    "attachments": {
                      "type": "array",
                      "description": "Links to any attached documents",
                      "items": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "currency": {
                      "type": "string",
                      "description": "Ref: Currency.code"
                    },
                    "BillId": {
                      "type": "integer",
                      "description": "Ref: Bill._id"
                    },
                    "VendorCreditId": {
                      "type": "integer",
                      "description": "Ref: VendorCredit._id"
                    },
                    "LedgerAccountId": {
                      "type": "integer",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "CashReceiptId": {
                      "type": "integer",
                      "description": "Ref: CashReceipt._id"
                    },
                    "AddressId": {
                      "type": "integer",
                      "description": "Ref: Address._id"
                    },
                    "LocationId": {
                      "type": "integer",
                      "description": "Ref: Location._id"
                    },
                    "InvoiceId": {
                      "type": "integer",
                      "description": "Ref: Invoice._id"
                    },
                    "BatchPaymentId": {
                      "type": "integer",
                      "description": "Ref: BatchPayment._id"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "Address": {
                      "type": "object",
                      "properties": {
                        "isDefault": {
                          "type": "boolean"
                        },
                        "label": {
                          "type": "string"
                        },
                        "line1": {
                          "type": "string"
                        },
                        "line2": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "state": {
                          "type": "string"
                        },
                        "zip": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        }
                      }
                    },
                    "Bill": {
                      "type": "object",
                      "properties": {
                        "invoiceNumber": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        }
                      }
                    },
                    "VendorId": {
                      "type": "integer",
                      "description": "Ref: Vendor._id"
                    },
                    "Vendor": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string",
                          "format": "email"
                        },
                        "nameOnCheck": {
                          "type": "string"
                        }
                      }
                    },
                    "Invoice": {
                      "type": "object",
                      "properties": {
                        "number": {
                          "type": "string"
                        },
                        "reference": {
                          "type": "string"
                        }
                      }
                    },
                    "CustomerId": {
                      "type": "integer",
                      "description": "Ref: Customer._id"
                    },
                    "Customer": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string",
                          "format": "email"
                        }
                      }
                    },
                    "VendorCredit": {
                      "type": "object",
                      "properties": {
                        "number": {
                          "type": "string"
                        }
                      }
                    },
                    "CashReceipt": {
                      "type": "object",
                      "properties": {
                        "number": {
                          "type": "string"
                        }
                      }
                    },
                    "Location": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "LedgerAccount": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "number": {
                          "type": "string"
                        }
                      }
                    },
                    "BatchPayment": {
                      "type": "object",
                      "properties": {
                        "referenceNumber": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Payments"
        ],
        "summary": "Update",
        "description": "Update One Payment\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Payment UPDATE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Payment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON body containing key and values to update\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "externalId": {
                    "type": "string"
                  },
                  "externalCheckId": {
                    "type": "string"
                  },
                  "externalCheckBankId": {
                    "type": "string"
                  },
                  "checkNumber": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "string",
                    "format": "number"
                  },
                  "paymentDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "postedDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Defaults to paymentDate"
                  },
                  "AddressId": {
                    "type": "number"
                  },
                  "memo": {
                    "type": "string"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "attachments": {
                    "type": "array",
                    "description": "Links to any attached documents",
                    "items": {
                      "type": "string",
                      "format": "uri"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated Customer",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "externalId": {
                      "type": "string"
                    },
                    "externalCheckId": {
                      "type": "string"
                    },
                    "externalCheckBankId": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "manual",
                        "check",
                        "vendorcredit",
                        "cashreceipt",
                        "refund",
                        "ap_refund"
                      ]
                    },
                    "number": {
                      "type": "string"
                    },
                    "checkNumber": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "created",
                        "approved",
                        "voided"
                      ]
                    },
                    "amount": {
                      "type": "string",
                      "format": "number"
                    },
                    "paymentDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "postedDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "memo": {
                      "type": "string"
                    },
                    "notes": {
                      "type": "string"
                    },
                    "attachments": {
                      "type": "array",
                      "description": "Links to any attached documents",
                      "items": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "currency": {
                      "type": "string",
                      "description": "Ref: Currency.code"
                    },
                    "BillId": {
                      "type": "integer",
                      "description": "Ref: Bill._id"
                    },
                    "VendorCreditId": {
                      "type": "integer",
                      "description": "Ref: VendorCredit._id"
                    },
                    "LedgerAccountId": {
                      "type": "integer",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "CashReceiptId": {
                      "type": "integer",
                      "description": "Ref: CashReceipt._id"
                    },
                    "AddressId": {
                      "type": "integer",
                      "description": "Ref: Address._id"
                    },
                    "LocationId": {
                      "type": "integer",
                      "description": "Ref: Location._id"
                    },
                    "InvoiceId": {
                      "type": "integer",
                      "description": "Ref: Invoice._id"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/payments/{id}/void": {
      "put": {
        "tags": [
          "Payments"
        ],
        "summary": "Void",
        "description": "Void one Payment\n\nVoided payments will post a voided journal\n\nCannot void if payment is not approved\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Payment VOID</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Payment._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Optional JSON body to override the journal description and postedDate\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "postedDate": {
                    "type": "string",
                    "format": "date"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "no content success"
          }
        }
      }
    },
    "/periods/{id}/close/{task}": {
      "put": {
        "tags": [
          "Periods"
        ],
        "summary": "Close",
        "description": "Close a specific period task\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>AccountingPeriod:<task> CLOSE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Period Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "task",
            "description": "Task to close",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ar",
                "ap",
                "financial",
                "crypto",
                "inventory",
                "period"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated period",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "number"
                    },
                    "start": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "end": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "open",
                        "closed"
                      ]
                    },
                    "fx_revalue_status": {
                      "type": "string",
                      "enum": [
                        "open",
                        "closed"
                      ]
                    },
                    "financial_status": {
                      "type": "string",
                      "enum": [
                        "open",
                        "closed"
                      ]
                    },
                    "ar_status": {
                      "type": "string",
                      "enum": [
                        "open",
                        "closed"
                      ]
                    },
                    "ap_status": {
                      "type": "string",
                      "enum": [
                        "open",
                        "closed"
                      ]
                    },
                    "crypto_status": {
                      "type": "string",
                      "enum": [
                        "open",
                        "closed"
                      ]
                    },
                    "inventory_status": {
                      "type": "string",
                      "enum": [
                        "open",
                        "closed"
                      ]
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "AccountingYearId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/periods/{id}/open/{task}": {
      "put": {
        "tags": [
          "Periods"
        ],
        "summary": "Open",
        "description": "Open a specific period task\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>AccountingPeriod:<task> OPEN</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Period Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "path",
            "name": "task",
            "description": "Task to open",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "ar",
                "ap",
                "financial",
                "crypto",
                "inventory",
                "period"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated period",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "number"
                    },
                    "start": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "end": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "open",
                        "closed"
                      ]
                    },
                    "fx_revalue_status": {
                      "type": "string",
                      "enum": [
                        "open",
                        "closed"
                      ]
                    },
                    "financial_status": {
                      "type": "string",
                      "enum": [
                        "open",
                        "closed"
                      ]
                    },
                    "ar_status": {
                      "type": "string",
                      "enum": [
                        "open",
                        "closed"
                      ]
                    },
                    "ap_status": {
                      "type": "string",
                      "enum": [
                        "open",
                        "closed"
                      ]
                    },
                    "crypto_status": {
                      "type": "string",
                      "enum": [
                        "open",
                        "closed"
                      ]
                    },
                    "inventory_status": {
                      "type": "string",
                      "enum": [
                        "open",
                        "closed"
                      ]
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "AccountingYearId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/periods": {
      "get": {
        "tags": [
          "Periods"
        ],
        "summary": "Get All",
        "description": "Gets all Periods",
        "responses": {
          "200": {
            "description": "List of Periods",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "number"
                      },
                      "start": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "end": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "status": {
                        "type": "string",
                        "enum": [
                          "open",
                          "closed"
                        ]
                      },
                      "fx_revalue_status": {
                        "type": "string",
                        "enum": [
                          "open",
                          "closed"
                        ]
                      },
                      "financial_status": {
                        "type": "string",
                        "enum": [
                          "open",
                          "closed"
                        ]
                      },
                      "ar_status": {
                        "type": "string",
                        "enum": [
                          "open",
                          "closed"
                        ]
                      },
                      "ap_status": {
                        "type": "string",
                        "enum": [
                          "open",
                          "closed"
                        ]
                      },
                      "crypto_status": {
                        "type": "string",
                        "enum": [
                          "open",
                          "closed"
                        ]
                      },
                      "inventory_status": {
                        "type": "string",
                        "enum": [
                          "open",
                          "closed"
                        ]
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "AccountingYearId": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/preferences": {
      "post": {
        "tags": [
          "Preferences"
        ],
        "summary": "Create",
        "description": "Create new Preferences",
        "requestBody": {
          "description": "JSON body to create new Preference",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "key"
                ],
                "properties": {
                  "userId": {
                    "type": "number",
                    "nullable": true
                  },
                  "type": {
                    "type": "string",
                    "nullable": true
                  },
                  "key": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string",
                    "nullable": true
                  },
                  "data": {
                    "type": "object",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created Preferences",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "userId": {
                        "type": "string",
                        "nullable": true
                      },
                      "type": {
                        "type": "string",
                        "nullable": true
                      },
                      "key": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string",
                        "nullable": true
                      },
                      "data": {
                        "type": "object",
                        "nullable": true
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Preferences"
        ],
        "summary": "Search",
        "description": "Returns a list of preferences in descending order by key\n\n| Field       | Filterable |\n|---------------------|:--:|\n|_id                  | ✅ |\n|userId               | ✅ |\n|type                 | ✅ |\n|key                  | ✅ |\n|name                 | ✅ |\n|data                 | ❌ |\n|createdAt            | ❌ |\n|updatedAt            | ❌ |\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Preferences",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean"
                    },
                    "cursor": {
                      "type": "string",
                      "nullable": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "userId": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "key": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "data": {
                            "type": "object"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/preferences/{id}": {
      "get": {
        "tags": [
          "Preferences"
        ],
        "summary": "One",
        "description": "Get one Preference",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Preference Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "One Preference",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "number"
                    },
                    "userId": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "key": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "data": {
                      "type": "object"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Preferences"
        ],
        "summary": "Delete",
        "description": "Delete one Preference",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Preference Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "no content success"
          }
        }
      },
      "put": {
        "tags": [
          "Preferences"
        ],
        "summary": "Update",
        "description": "Update one Preference",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Preference Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON object containing key and values to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated Preference",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "userId": {
                        "type": "string",
                        "nullable": true
                      },
                      "type": {
                        "type": "string",
                        "nullable": true
                      },
                      "key": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string",
                        "nullable": true
                      },
                      "data": {
                        "type": "object",
                        "nullable": true
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Search",
        "operationId": "productsSearch",
        "description": "| Field       | Filterable | Sortable |\n|---------------------|:--:|:--:|\n|_id                  | ✅ | ✅ |\n|id                   | ✅ | ✅ |\n|name                 | ✅ | ✅ |\n|description          | ✅ | ✅ |\n|inactive             | ✅ | ❌ |\n|createdAt            | ✅ | ✅ |\n|updatedAt            | ✅ | ✅ |\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/status"
          },
          {
            "in": "query",
            "name": "order",
            "description": "Order to return results in. ex \"date:desc\"",
            "schema": {
              "type": "string",
              "default": "id:ASC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "number"
                          },
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "inactive": {
                            "type": "boolean"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Products"
        ],
        "summary": "Create",
        "description": "Create Product\n",
        "requestBody": {
          "description": "JSON body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id",
                  "name"
                ],
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "inactive": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created Product",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "number"
                    },
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "inactive": {
                      "type": "boolean"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/count": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Count",
        "description": "The same filters as [Search](#operation/productsSearch) can be used here.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/status"
          }
        ],
        "responses": {
          "200": {
            "description": "Count response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/products/{id}": {
      "delete": {
        "tags": [
          "Products"
        ],
        "summary": "Delete",
        "description": "Delete one Product\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Product DELETE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Product Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "no content success"
          }
        }
      },
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "One",
        "description": "Get one Product",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Product Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "One Product",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "number"
                    },
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "inactive": {
                      "type": "boolean"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Products"
        ],
        "summary": "Update",
        "description": "Update Product\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Product UPDATE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Product Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON body containing key and values to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "inactive": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated Product",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "number"
                    },
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "inactive": {
                      "type": "boolean"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/purchase-orders/{id}/stock-adjustments": {
      "get": {
        "tags": [
          "Purchase Orders"
        ],
        "summary": "Stock Adjustments",
        "description": "Get stock adjustments linked to a purchase order\n\nThe parameters of this endpoint are the same as for [Stock Adjustment Search](#operation/stockAdjustmentsSearch)\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "PurchaseOrder._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Stock adjustments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/StockAdjustmentSearchItem"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/purchase-orders": {
      "get": {
        "tags": [
          "Purchase Orders"
        ],
        "summary": "Search",
        "operationId": "purchaseOrderSearch",
        "description": "| Field       | Filterable | Sortable |\n|---------------------|:--:|:--:|\n|_id                     | ✅ | ✅ |\n|externalId              | ✅ | ✅ |\n|number                  | ✅ | ✅ |\n|description             | ✅ | ❌ |\n|issueDate               | ✅ | ✅ |\n|deliveryDate            | ✅ | ✅ |\n|status                  | ✅ | ❌ |\n|amount                  | ✅ | ✅ |\n|currency                | ✅ | ❌ |\n|VendorId                | ✅ | ❌ |\n|WarehouseId             | ✅ | ❌ |\n|LocationId              | ✅ | ❌ |\n|customFields            | ✅ | ❌ |\n|createdAt               | ✅ | ✅ |\n|updatedAt               | ✅ | ✅ |\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/LocationId"
          },
          {
            "in": "query",
            "name": "order",
            "description": "Order to return results in. ex \"date:desc\"",
            "schema": {
              "type": "string",
              "default": "number:ASC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Purchase Orders",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "integer"
                          },
                          "externalId": {
                            "type": "string"
                          },
                          "number": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "issueDate": {
                            "type": "string",
                            "format": "date"
                          },
                          "deliveryDate": {
                            "type": "string",
                            "format": "date"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "created",
                              "issued",
                              "partiallyFulfilled",
                              "fulfilled",
                              "voided"
                            ]
                          },
                          "amount": {
                            "type": "string",
                            "format": "number"
                          },
                          "currency": {
                            "type": "string",
                            "format": "Ref: Currency.code"
                          },
                          "notes": {
                            "type": "string"
                          },
                          "attachments": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "format": "uri"
                            }
                          },
                          "approved_on": {
                            "type": "string",
                            "format": "date"
                          },
                          "approved_name": {
                            "type": "string"
                          },
                          "approved_email": {
                            "type": "string",
                            "format": "email"
                          },
                          "customFields": {
                            "type": "object",
                            "description": "Key -> Value hash of custom fields, must be defined via the UI to show up in the UI"
                          },
                          "TemplateId": {
                            "type": "integer"
                          },
                          "LocationId": {
                            "type": "integer",
                            "description": "Ref: Location._id"
                          },
                          "Location": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "ICLocationId": {
                            "type": "integer",
                            "description": "Ref: Location._id"
                          },
                          "ICLocation": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "VendorId": {
                            "type": "integer",
                            "description": "Ref: Vendor._id"
                          },
                          "Vendor": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string",
                                "description": "Ref: Vendor.name"
                              },
                              "email": {
                                "type": "string",
                                "description": "Ref: Vendor.email"
                              }
                            }
                          },
                          "InventoryReceivingAccountId": {
                            "type": "integer",
                            "description": "Ref: LedgerAccounts._id"
                          },
                          "InventoryReceivingAccount": {
                            "type": "object",
                            "properties": {
                              "number": {
                                "type": "string",
                                "format": "number"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "ShippingAddressId": {
                            "type": "integer",
                            "description": "Ref: Address._id"
                          },
                          "ShippingAddress": {
                            "type": "object",
                            "properties": {
                              "label": {
                                "type": "string"
                              },
                              "line1": {
                                "type": "string"
                              },
                              "line2": {
                                "type": "string"
                              },
                              "city": {
                                "type": "string"
                              },
                              "state": {
                                "type": "string"
                              },
                              "zip": {
                                "type": "string"
                              },
                              "country": {
                                "type": "string"
                              }
                            }
                          },
                          "BillingAddressId": {
                            "type": "integer",
                            "description": "Ref: Address._id"
                          },
                          "BillingAddress": {
                            "type": "object",
                            "properties": {
                              "label": {
                                "type": "string"
                              },
                              "line1": {
                                "type": "string"
                              },
                              "line2": {
                                "type": "string"
                              },
                              "city": {
                                "type": "string"
                              },
                              "state": {
                                "type": "string"
                              },
                              "zip": {
                                "type": "string"
                              },
                              "country": {
                                "type": "string"
                              }
                            }
                          },
                          "WarehouseId": {
                            "type": "integer",
                            "description": "Ref: Warehouse._id"
                          },
                          "Warehouse": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Purchase Orders"
        ],
        "summary": "Create",
        "description": "Creates a new Purchase Order\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>PurchaseOrder CREATE</div>\n  <div>SOLineItem CREATE - for each direct purchase line added to a Sales Order</div>\n  <div>SOLineItem UPDATE - for each direct purchase line added to an existing SOLineItem</div>\n</div>\n",
        "requestBody": {
          "description": "JSON body to create new Purchase Order\n\nOne of `[Location.id, LocationId]` is Required\n\nOne of `[Vendor.name, VendorId]` is Required\n\nOne of `[InventoryAccrualAccount.number, InventoryAccrualAccountId]` is Required\n\nOne of `[Warehouse.name, WarehouseId]` is Required\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "VendorId",
                  "LocationId",
                  "WarehouseId",
                  "currency"
                ],
                "properties": {
                  "externalId": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "issueDate": {
                    "type": "string",
                    "format": "date",
                    "default": "NOW"
                  },
                  "deliveryDate": {
                    "type": "string",
                    "format": "date",
                    "default": "NOW"
                  },
                  "currency": {
                    "type": "string",
                    "format": "ISO4217 3 Char Code",
                    "description": "Ref: Currency.code - cannot use custom"
                  },
                  "attachments": {
                    "type": "array",
                    "description": "Links to any attached documents",
                    "items": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "TemplateId": {
                    "type": "integer",
                    "description": "Ref: Template._id",
                    "default": "Template with name 'Default' and format = 'pdf'"
                  },
                  "customFields": {
                    "type": "object",
                    "description": "Key -> Value hash of custom fields, must be defined via the UI to show up in the UI",
                    "default": {}
                  },
                  "LocationId": {
                    "type": "integer",
                    "description": "Ref: Location._id"
                  },
                  "Location": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Location.id"
                      }
                    }
                  },
                  "ICLocationId": {
                    "type": "integer",
                    "description": "Ref: Location._id"
                  },
                  "ICLocation": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Location.id"
                      }
                    }
                  },
                  "VendorId": {
                    "type": "integer",
                    "description": "Ref: Vendor._id"
                  },
                  "Vendor": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Ref: Vendor.name"
                      }
                    }
                  },
                  "WarehouseId": {
                    "type": "integer",
                    "description": "Ref: Warehouse._id"
                  },
                  "Warehouse": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Ref: Warehouse.name"
                      }
                    }
                  },
                  "InventoryReceivingAccountId": {
                    "type": "integer",
                    "description": "Must be an active acccount\n\"Ref: LedgerAccount._id\"\n",
                    "default": "Ref: Settings.defaultInventoryAccrualId"
                  },
                  "InventoryReceivingAccount": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "description": "Ref: LedgerAccount.number"
                      }
                    }
                  },
                  "ShippingAddressId": {
                    "type": "integer",
                    "description": "Ref: Address._id"
                  },
                  "BillingAddressId": {
                    "type": "integer",
                    "description": "Ref: Address._id"
                  },
                  "POLineItems": {
                    "type": "array",
                    "description": "If an Item is passed, then this line will be considered an \"item\" type line, \n\nOtherwise it is a \"description\" type line, which requires\n  - \"description\"\n\nTax Logic                    \n  - If a taxAmount is passed it will be used as the tax amount for the line\n  - If a TaxCode is set and taxAmount is not, then taxAmount will be set as:\n    - taxAmount = (amount * quantity * TaxCode.rate / 100)\n",
                    "items": {
                      "type": "object",
                      "required": [
                        "amount",
                        "quantity"
                      ],
                      "properties": {
                        "idx": {
                          "type": "number"
                        },
                        "externalId": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string",
                          "description": "Required if ItemId is not set"
                        },
                        "customFields": {
                          "type": "object",
                          "description": "Key -> Value hash of custom fields, must be defined via the UI to show up in the UI",
                          "default": {}
                        },
                        "amount": {
                          "type": "string",
                          "format": "number",
                          "description": "Must be > 0"
                        },
                        "quantity": {
                          "type": "string",
                          "format": "number",
                          "description": "Must be > 0"
                        },
                        "taxAmount": {
                          "type": "string",
                          "format": "number"
                        },
                        "TaxCodeId": {
                          "type": "integer",
                          "description": "Ref: TaxCode._id"
                        },
                        "TaxCode": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "description": "Ref: TaxCode.code"
                            }
                          }
                        },
                        "ItemId": {
                          "type": "integer",
                          "description": "\"Ref: Item._id\"\nIf the reference Item has type 'direct', then SalesOrderId or SOLineItemId is required\n"
                        },
                        "Item": {
                          "type": "object",
                          "properties": {
                            "number": {
                              "type": "string",
                              "description": "Ref: Item.number"
                            }
                          }
                        },
                        "SalesOrderId": {
                          "type": "integer",
                          "description": "\"Ref: SalesOrder._id\"\n- Ignored if SOLineItemId is passed\n- SalesOrder must have status 'order', 'partiallyFulfilled', or 'fulfilled'\n- This POLineItem must have an Item set\n"
                        },
                        "SOLineItemId": {
                          "type": "integer",
                          "description": "\"Ref: SOLineItem._id\"\n- SalesOrder must have status 'order', 'partiallyFulfilled', or 'fulfilled'\n- Will override SalesOrderId\n- SOLineItem must not already be linked to a POLineItem\n- SOLineItem must not have any fulfillments or unfulfillments against it                      \n- All fields from the SOLine will override the POLine\n"
                        },
                        "CostCenterId": {
                          "type": "integer",
                          "description": "Ref: Cost Center._id"
                        },
                        "CostCenter": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Ref: CostCenter.id"
                            }
                          }
                        },
                        "JobId": {
                          "type": "integer",
                          "description": "Ref: Job._id"
                        },
                        "Job": {
                          "type": "object",
                          "properties": {
                            "number": {
                              "type": "string",
                              "description": "Ref: Job.number"
                            }
                          }
                        },
                        "ProductId": {
                          "type": "integer",
                          "description": "Ref: Product._id"
                        },
                        "Product": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Ref: Product.id"
                            }
                          }
                        },
                        "Custom1Id": {
                          "type": "integer",
                          "description": "Ref: Custom1._id"
                        },
                        "Custom1": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Ref: Custom1.id"
                            }
                          }
                        },
                        "Custom2Id": {
                          "type": "integer",
                          "description": "Ref: Custom2._id"
                        },
                        "Custom2": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Ref: Custom2.id"
                            }
                          }
                        },
                        "Custom3Id": {
                          "type": "integer",
                          "description": "Ref: Custom3._id"
                        },
                        "Custom3": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Ref: Custom3.id"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Purchase Order created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "externalId": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "number": {
                      "type": "string",
                      "format": "number"
                    },
                    "amount": {
                      "type": "string",
                      "format": "number"
                    },
                    "description": {
                      "type": "string"
                    },
                    "notes": {
                      "type": "string"
                    },
                    "issueDate": {
                      "type": "string",
                      "format": "date",
                      "default": "NOW"
                    },
                    "deliveryDate": {
                      "type": "string",
                      "format": "date",
                      "default": "NOW"
                    },
                    "currency": {
                      "type": "string",
                      "format": "ISO4217 3 Char Code"
                    },
                    "attachments": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "customFields": {
                      "type": "object",
                      "description": "Key -> Value hash of custom fields, must be defined via the UI to show up in the UI"
                    },
                    "TemplateId": {
                      "type": "integer",
                      "description": "Ref: Template._id"
                    },
                    "LocationId": {
                      "type": "integer",
                      "description": "Ref: Location._id"
                    },
                    "ICLocationId": {
                      "type": "integer",
                      "description": "Ref: Location._id"
                    },
                    "VendorId": {
                      "type": "integer",
                      "description": "Ref: Vendor._id"
                    },
                    "WarehouseId": {
                      "type": "integer",
                      "description": "Ref: Warehouse._id"
                    },
                    "InventoryReceivingAccountId": {
                      "type": "integer",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "ShippingAddressId": {
                      "type": "integer",
                      "description": "Ref: Address._id"
                    },
                    "BillingAddressId": {
                      "type": "integer",
                      "description": "Ref: Address._id"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/purchase-orders/lines": {
      "get": {
        "tags": [
          "Purchase Orders"
        ],
        "summary": "Search Lines",
        "operationId": "purchaseOrderLineSearch",
        "description": "| Field       | Filterable | Sortable |\n|---------------------|:--:|:--:|\n|_id                          | ✅ | ✅ |  \n|idx                          | ✅ | ✅ |\n|description                  | ✅ | ✅ |\n|amount                       | ✅ | ✅ |\n|quantity                     | ✅ | ✅ |\n|taxAmount                    | ✅ | ✅ |\n|quantityReceived             | ✅ | ✅ |\n|customFields                 | ✅ | ❌ |\n|createdAt                    | ✅ | ✅ |\n|updatedAt                    | ✅ | ✅ |\n|PurchaseOrderId              | ✅ | ❌ |\n|PurchaseOrder.number         | ✅ | ✅ |\n|PurchaseOrder.status         | ✅ | ✅ |\n|PurchaseOrder.VendorId       | ✅ | ❌ |\n|PurchaseOrder.LocationId     | ✅ | ❌ |\n|PurchaseOrder.ICLocationId   | ✅ | ❌ |\n|PurchaseOrder.WarehouseId    | ✅ | ❌ |\n|PurchaseOrder.createdAt      | ✅ | ✅ |\n|PurchaseOrder.updatedAt      | ✅ | ✅ |\n|ItemId                       | ✅ | ❌ |\n|SalesOrderId                 | ✅ | ❌ |\n|CostCenterId                 | ✅ | ❌ |\n|JobId                        | ✅ | ❌ |\n|ProductId                    | ✅ | ❌ |\n|TaxCodeId                    | ✅ | ❌ |\n|Custom1Id                    | ✅ | ❌ |\n|Custom2Id                    | ✅ | ❌ |\n|Custom3Id                    | ✅ | ❌ |\n|Item.name                    | ❌ | ✅ |\n|Item.salePrice               | ❌ | ✅ |\n|Item.purchasePrice           | ❌ | ✅ | \n|Vendor.name                  | ❌ | ✅ |\n|SalesOrder.number            | ❌ | ✅ | \n|Location.name                | ❌ | ✅ |\n|ICLocation.name              | ❌ | ✅ |\n|Warehouse.name               | ❌ | ✅ |\n|CostCenter.id                | ❌ | ✅ |\n|Product.id                   | ❌ | ✅ |\n|Job.number                   | ❌ | ✅ |\n|TaxCode.code                 | ❌ | ✅ |\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/LocationId"
          },
          {
            "in": "query",
            "name": "order",
            "description": "Order to return results in. ex \"date:desc\"",
            "schema": {
              "type": "string",
              "default": "idx:ASC"
            }
          },
          {
            "in": "query",
            "name": "receivableOnly",
            "description": "Set this to true to only return lines that can be received\n\nCriteria for receivable lines is as under:\n  - Line's 'quantity' is not equal to 'quantityReceived'\n  - Line's parent PO is not of status 'Created', 'Fulfilled' or 'Voided'\n\nSetting this to false will return all lines\n",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Purchase Order Lines",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "integer"
                          },
                          "idx": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "amount": {
                            "type": "string"
                          },
                          "quantity": {
                            "type": "string"
                          },
                          "taxAmount": {
                            "type": "string"
                          },
                          "quantityReceived": {
                            "type": "string"
                          },
                          "customFields": {
                            "type": "object",
                            "description": "Key -> Value hash of custom fields, must be defined via the UI to show up in the UI"
                          },
                          "total": {
                            "type": "string",
                            "format": "number"
                          },
                          "PurchaseOrderId": {
                            "type": "integer",
                            "description": "Ref: PurchaseOrder._id"
                          },
                          "PurchaseOrder": {
                            "type": "object",
                            "properties": {
                              "number": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              },
                              "VendorId": {
                                "type": "integer",
                                "description": "Ref: Vendor._id"
                              },
                              "LocationId": {
                                "type": "integer",
                                "description": "Ref: Location._id"
                              },
                              "ICLocationId": {
                                "type": "integer",
                                "description": "Ref: Location._id"
                              },
                              "WarehouseId": {
                                "type": "integer",
                                "description": "Ref: Warehouse._id"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "updatedAt": {
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          },
                          "ItemId": {
                            "type": "integer",
                            "description": "Ref: Item._id"
                          },
                          "Item": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "number": {
                                "type": "string"
                              },
                              "sku": {
                                "type": "string"
                              },
                              "salePrice": {
                                "type": "string"
                              },
                              "purchasePrice": {
                                "type": "string"
                              }
                            }
                          },
                          "Vendor": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          },
                          "SalesOrderId": {
                            "type": "integer",
                            "description": "Ref: SalesOrder._id"
                          },
                          "SalesOrder": {
                            "type": "object",
                            "properties": {
                              "number": {
                                "type": "string"
                              }
                            }
                          },
                          "Location": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "ICLocation": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "Warehouse": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "CostCenterId": {
                            "type": "integer",
                            "description": "Ref: CostCenter._id"
                          },
                          "CostCenter": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "JobId": {
                            "type": "integer",
                            "description": "Ref: Job._id"
                          },
                          "Job": {
                            "type": "object",
                            "properties": {
                              "number": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "ProductId": {
                            "type": "integer",
                            "description": "Ref: Product._id"
                          },
                          "Product": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "TaxCodeId": {
                            "type": "integer",
                            "description": "Ref: TaxCode._id"
                          },
                          "TaxCode": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string"
                              }
                            }
                          },
                          "Custom1Id": {
                            "type": "integer",
                            "description": "Ref: Custom1._id"
                          },
                          "Custom1": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "Custom2Id": {
                            "type": "integer",
                            "description": "Ref: Custom2._id"
                          },
                          "Custom2": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "Custom3Id": {
                            "type": "integer",
                            "description": "Ref: Custom3._id"
                          },
                          "Custom3": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/purchase-orders/{id}/lines": {
      "get": {
        "tags": [
          "Purchase Orders"
        ],
        "summary": "Search Lines by Purchase Order",
        "description": "| Field       | Filterable | Sortable |\n|---------------------|:--:|:--:|\n|_id                          | ✅ | ✅ |  \n|idx                          | ✅ | ✅ |\n|description                  | ✅ | ✅ |\n|amount                       | ✅ | ✅ |\n|quantity                     | ✅ | ✅ |\n|taxAmount                    | ✅ | ✅ |\n|quantityReceived             | ✅ | ✅ |\n|customFields                 | ✅ | ❌ |\n|createdAt                    | ✅ | ✅ |\n|updatedAt                    | ✅ | ✅ |\n|PurchaseOrderId              | ✅ | ❌ |\n|PurchaseOrder.number         | ✅ | ✅ |\n|PurchaseOrder.status         | ✅ | ✅ |\n|PurchaseOrder.VendorId       | ✅ | ❌ |\n|PurchaseOrder.LocationId     | ✅ | ❌ |\n|PurchaseOrder.ICLocationId   | ✅ | ❌ |\n|PurchaseOrder.WarehouseId    | ✅ | ❌ |\n|PurchaseOrder.createdAt      | ✅ | ✅ |\n|PurchaseOrder.updatedAt      | ✅ | ✅ |\n|ItemId                       | ✅ | ❌ |\n|SalesOrderId                 | ✅ | ❌ |\n|CostCenterId                 | ✅ | ❌ |\n|JobId                        | ✅ | ❌ |\n|ProductId                    | ✅ | ❌ |\n|TaxCodeId                    | ✅ | ❌ |\n|Custom1Id                    | ✅ | ❌ |\n|Custom2Id                    | ✅ | ❌ |\n|Custom3Id                    | ✅ | ❌ |\n|Item.name                    | ❌ | ✅ |\n|Item.salePrice               | ❌ | ✅ |\n|Item.purchasePrice           | ❌ | ✅ | \n|Vendor.name                  | ❌ | ✅ |\n|SalesOrder.number            | ❌ | ✅ | \n|Location.name                | ❌ | ✅ |\n|ICLocation.name              | ❌ | ✅ |\n|Warehouse.name               | ❌ | ✅ |\n|CostCenter.id                | ❌ | ✅ |\n|Product.id                   | ❌ | ✅ |\n|Job.number                   | ❌ | ✅ |\n|TaxCode.code                 | ❌ | ✅ |\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "PurchaseOrder._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "in": "query",
            "name": "order",
            "description": "Order to return results in. ex \"date:desc\"",
            "schema": {
              "type": "string",
              "default": "idx:ASC"
            }
          },
          {
            "in": "query",
            "name": "receivableOnly",
            "description": "Set this to true to only return lines that can be received\n\nCriteria for receivable lines is as under:\n  - Line's 'quantity' is not equal to 'quantityReceived'\n  - Line's parent PO is not of status 'Created', 'Fulfilled' or 'Voided'\n\nSetting this to false will return all lines\n",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Purchase Order Lines",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "integer"
                          },
                          "idx": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "amount": {
                            "type": "string"
                          },
                          "quantity": {
                            "type": "string"
                          },
                          "taxAmount": {
                            "type": "string"
                          },
                          "quantityReceived": {
                            "type": "string"
                          },
                          "customFields": {
                            "type": "object",
                            "description": "Key -> Value hash of custom fields, must be defined via the UI to show up in the UI"
                          },
                          "total": {
                            "type": "string",
                            "format": "number"
                          },
                          "PurchaseOrderId": {
                            "type": "integer",
                            "description": "Ref: PurchaseOrder._id"
                          },
                          "PurchaseOrder": {
                            "type": "object",
                            "properties": {
                              "number": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              },
                              "VendorId": {
                                "type": "integer",
                                "description": "Ref: Vendor._id"
                              },
                              "LocationId": {
                                "type": "integer",
                                "description": "Ref: Location._id"
                              },
                              "ICLocationId": {
                                "type": "integer",
                                "description": "Ref: Location._id"
                              },
                              "WarehouseId": {
                                "type": "integer",
                                "description": "Ref: Warehouse._id"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time"
                              },
                              "updatedAt": {
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          },
                          "ItemId": {
                            "type": "integer",
                            "description": "Ref: Item._id"
                          },
                          "Item": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "number": {
                                "type": "string"
                              },
                              "sku": {
                                "type": "string"
                              },
                              "salePrice": {
                                "type": "string"
                              },
                              "purchasePrice": {
                                "type": "string"
                              }
                            }
                          },
                          "Vendor": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          },
                          "SalesOrderId": {
                            "type": "integer",
                            "description": "Ref: SalesOrder._id"
                          },
                          "SalesOrder": {
                            "type": "object",
                            "properties": {
                              "number": {
                                "type": "string"
                              }
                            }
                          },
                          "Location": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "ICLocation": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "Warehouse": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "CostCenterId": {
                            "type": "integer",
                            "description": "Ref: CostCenter._id"
                          },
                          "CostCenter": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "JobId": {
                            "type": "integer",
                            "description": "Ref: Job._id"
                          },
                          "Job": {
                            "type": "object",
                            "properties": {
                              "number": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "ProductId": {
                            "type": "integer",
                            "description": "Ref: Product._id"
                          },
                          "Product": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "TaxCodeId": {
                            "type": "integer",
                            "description": "Ref: TaxCode._id"
                          },
                          "TaxCode": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string"
                              }
                            }
                          },
                          "Custom1Id": {
                            "type": "integer",
                            "description": "Ref: Custom1._id"
                          },
                          "Custom1": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "Custom2Id": {
                            "type": "integer",
                            "description": "Ref: Custom2._id"
                          },
                          "Custom2": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "Custom3Id": {
                            "type": "integer",
                            "description": "Ref: Custom3._id"
                          },
                          "Custom3": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/purchase-orders/count": {
      "get": {
        "tags": [
          "Purchase Orders"
        ],
        "summary": "Count",
        "description": "The same filters as [Search](#operation/purchaseOrderSearch) can be used here.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/LocationId"
          }
        ],
        "responses": {
          "200": {
            "description": "Count response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/purchase-orders/lines/count": {
      "get": {
        "tags": [
          "Purchase Orders"
        ],
        "summary": "Count Lines",
        "description": "The same filters as [Search](#operation/purchaseOrderLineSearch) can be used here.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/LocationId"
          },
          {
            "in": "query",
            "name": "receivableOnly",
            "description": "Set this to true to only return lines that can be received\n\nCriteria for receivable lines is as under:\n  - Line's 'quantity' is not equal to 'quantityReceived'\n  - Line's parent PO is not of status 'Created', 'Fulfilled' or 'Voided'\n\nSetting this to false will return all lines\n",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Count response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/purchase-orders/{id}/line": {
      "post": {
        "tags": [
          "Purchase Orders"
        ],
        "summary": "Create Line",
        "description": "Creates a new Purchase Order Line Item\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>POLineItem CREATE</div>\n  <div>SOLineItem CREATE</div>\n  <div>SOLineItem UPDATE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Purchase Order._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON body to create new Purchase Order Line Item\n\nIf an Item is passed, then this line will be considered an \"item\" type line, \n\nOtherwise it is a \"description\" type line, which requires\n  - \"description\"\n\nTax Logic                    \n  - If a taxAmount is passed it will be used as the tax amount for the line\n  - If a TaxCode is set and taxAmount is not, then taxAmount will be set as:\n    - taxAmount = (amount * quantity * TaxCode.rate / 100)\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "quantity"
                ],
                "properties": {
                  "idx": {
                    "type": "number"
                  },
                  "externalId": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string",
                    "description": "Required if ItemId is not set"
                  },
                  "customFields": {
                    "type": "object",
                    "description": "Key -> Value hash of custom fields, must be defined via the UI to show up in the UI",
                    "default": {}
                  },
                  "amount": {
                    "type": "string",
                    "format": "number",
                    "description": "Must be > 0"
                  },
                  "quantity": {
                    "type": "string",
                    "format": "number",
                    "description": "Must be > 0"
                  },
                  "taxAmount": {
                    "type": "string",
                    "format": "number"
                  },
                  "TaxCodeId": {
                    "type": "integer",
                    "description": "Ref: TaxCode._id"
                  },
                  "TaxCode": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Ref: TaxCode.code"
                      }
                    }
                  },
                  "ItemId": {
                    "type": "integer",
                    "description": "\"Ref: Item._id\"\nIf the reference Item has type 'direct', then SalesOrderId or SOLineItemId is required\n"
                  },
                  "Item": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "description": "Ref: Item.number"
                      }
                    }
                  },
                  "SalesOrderId": {
                    "type": "integer",
                    "description": "\"Ref: SalesOrder._id\"\n- Ignored if SOLineItemId is passed\n- SalesOrder must have status 'order', 'partiallyFulfilled', or 'fulfilled'\n- This POLineItem must have an Item set\n"
                  },
                  "SOLineItemId": {
                    "type": "integer",
                    "description": "\"Ref: SOLineItem._id\"\n- SalesOrder must have status 'order', 'partiallyFulfilled', or 'fulfilled'\n- Will override SalesOrderId\n- SOLineItem must not already be linked to a POLineItem\n- SOLineItem must not have any fulfillments or unfulfillments against it                      \n- All fields from the SOLine will override the POLine\n"
                  },
                  "CostCenterId": {
                    "type": "integer",
                    "description": "Ref: Cost Center._id"
                  },
                  "CostCenter": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: CostCenter.id"
                      }
                    }
                  },
                  "JobId": {
                    "type": "integer",
                    "description": "Ref: Job._id"
                  },
                  "Job": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "description": "Ref: Job.number"
                      }
                    }
                  },
                  "ProductId": {
                    "type": "integer",
                    "description": "Ref: Product._id"
                  },
                  "Product": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Product.id"
                      }
                    }
                  },
                  "Custom1Id": {
                    "type": "integer",
                    "description": "Ref: Custom1._id"
                  },
                  "Custom1": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Custom1.id"
                      }
                    }
                  },
                  "Custom2Id": {
                    "type": "integer",
                    "description": "Ref: Custom2._id"
                  },
                  "Custom2": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Custom2.id"
                      }
                    }
                  },
                  "Custom3Id": {
                    "type": "integer",
                    "description": "Ref: Custom3._id"
                  },
                  "Custom3": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Custom3.id"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "idx": {
                      "type": "integer"
                    },
                    "description": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "string",
                      "format": "number"
                    },
                    "quantity": {
                      "type": "string",
                      "format": "number"
                    },
                    "quantityReceived": {
                      "type": "string",
                      "format": "number"
                    },
                    "customFields": {
                      "type": "object",
                      "description": "Key -> Value hash of custom fields, must be defined via the UI to show up in the UI"
                    },
                    "taxAmount": {
                      "type": "string",
                      "format": "number"
                    },
                    "TaxCodeId": {
                      "type": "integer",
                      "description": "Ref: TaxCode._id"
                    },
                    "SalesOrderId": {
                      "type": "integer",
                      "description": "Ref: SalesOrder._id"
                    },
                    "ItemId": {
                      "type": "integer",
                      "description": "Ref: Item._id"
                    },
                    "CostCenterId": {
                      "type": "integer",
                      "description": "Ref: CostCenter._id"
                    },
                    "JobId": {
                      "type": "integer",
                      "description": "Ref: Job._id"
                    },
                    "ProductId": {
                      "type": "integer",
                      "description": "Ref: Product._id"
                    },
                    "Custom1Id": {
                      "type": "integer",
                      "description": "Ref: Custom1._id"
                    },
                    "Custom2Id": {
                      "type": "integer",
                      "description": "Ref: Custom2._id"
                    },
                    "Custom3Id": {
                      "type": "integer",
                      "description": "Ref: Custom3._id"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/purchase-orders/{id}": {
      "delete": {
        "tags": [
          "Purchase Orders"
        ],
        "summary": "Delete",
        "description": "Delete one Purchase Order\n\nCan only delete purchase orders in \"created\" status.\n\nCan not delete purchase orders with linked bill or if any lines have linked stock adjustments.\n\nIf there are any direct purchase lines that have a linked Sales order line\n- sales order line will be deleted\n- sales order status and total amount will be updated\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>PurchaseOrder DELETE</div>\n  <div>POLineItem DELETE - for each direct purchase line removed</div>\n  <div>SOLineItem DELETE - for every linked sales order line removed</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "PurchaseOrder id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "no content success"
          }
        }
      },
      "get": {
        "tags": [
          "Purchase Orders"
        ],
        "summary": "One",
        "description": "Get one Purchase Order",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Purchase Order._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "One Purchase Order",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "externalId": {
                      "type": "string"
                    },
                    "number": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "issueDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "deliveryDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "created",
                        "issued",
                        "partiallyFulfilled",
                        "fulfilled",
                        "voided"
                      ]
                    },
                    "amount": {
                      "type": "string",
                      "format": "number"
                    },
                    "currency": {
                      "type": "string",
                      "format": "Ref: Currency.code"
                    },
                    "notes": {
                      "type": "string"
                    },
                    "attachments": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "approved_on": {
                      "type": "string",
                      "format": "date"
                    },
                    "approved_name": {
                      "type": "string"
                    },
                    "approved_email": {
                      "type": "string",
                      "format": "email"
                    },
                    "customFields": {
                      "type": "object",
                      "description": "Key -> Value hash of custom fields, must be defined via the UI to show up in the UI"
                    },
                    "TemplateId": {
                      "type": "integer"
                    },
                    "LocationId": {
                      "type": "integer",
                      "description": "Ref: Location._id"
                    },
                    "WarehouseId": {
                      "type": "integer",
                      "description": "Ref: Warehouse._id"
                    },
                    "Location": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "ICLocationId": {
                      "type": "integer",
                      "description": "Ref: Location._id"
                    },
                    "ICLocation": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "VendorId": {
                      "type": "integer",
                      "description": "Ref: Vendor._id"
                    },
                    "Vendor": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string",
                          "description": "Ref: Vendor.name"
                        },
                        "email": {
                          "type": "string",
                          "description": "Ref: Vendor.email"
                        }
                      }
                    },
                    "InventoryReceivingAccountId": {
                      "type": "integer",
                      "description": "Ref: LedgerAccounts._id"
                    },
                    "InventoryReceivingAccount": {
                      "type": "object",
                      "properties": {
                        "number": {
                          "type": "string",
                          "format": "number"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "ShippingAddressId": {
                      "type": "integer",
                      "description": "Ref: Address._id"
                    },
                    "ShippingAddress": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string"
                        },
                        "line1": {
                          "type": "string"
                        },
                        "line2": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "state": {
                          "type": "string"
                        },
                        "zip": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        }
                      }
                    },
                    "BillingAddressId": {
                      "type": "integer",
                      "description": "Ref: Address._id"
                    },
                    "BillingAddress": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string"
                        },
                        "line1": {
                          "type": "string"
                        },
                        "line2": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "state": {
                          "type": "string"
                        },
                        "zip": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        }
                      }
                    },
                    "Warehouse": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "POLineItems": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "integer"
                          },
                          "idx": {
                            "type": "integer"
                          },
                          "description": {
                            "type": "string"
                          },
                          "amount": {
                            "type": "string",
                            "format": "number"
                          },
                          "quantity": {
                            "type": "string",
                            "format": "number"
                          },
                          "quantityReceived": {
                            "type": "string",
                            "format": "number"
                          },
                          "partNumber": {
                            "type": "string"
                          },
                          "customFields": {
                            "type": "object",
                            "description": "Key -> Value hash of custom fields, must be defined via the UI to show up in the UI"
                          },
                          "taxAmount": {
                            "type": "string",
                            "format": "number"
                          },
                          "TaxCodeId": {
                            "type": "integer",
                            "description": "Ref: TaxCode._id"
                          },
                          "TaxCode": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string",
                                "description": "Ref: TaxCode.code"
                              }
                            }
                          },
                          "SalesOrderId": {
                            "type": "integer",
                            "description": "Ref: SalesOrder._id"
                          },
                          "SalesOrder": {
                            "type": "object",
                            "properties": {
                              "number": {
                                "type": "string"
                              }
                            }
                          },
                          "ShipmentReceiptLines": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "quantityReceived": {
                                  "type": "string",
                                  "format": "number"
                                },
                                "WarehouseId": {
                                  "type": "integer",
                                  "description": "Ref: Warehouse._id"
                                },
                                "status": {
                                  "type": "string",
                                  "enum": [
                                    "received",
                                    "voided"
                                  ]
                                },
                                "amount": {
                                  "type": "string",
                                  "format": "number"
                                }
                              }
                            }
                          },
                          "ItemId": {
                            "type": "integer",
                            "description": "Ref: Item._id"
                          },
                          "Item": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "number": {
                                "type": "string"
                              },
                              "sku": {
                                "type": "string"
                              }
                            }
                          },
                          "CostCenterId": {
                            "type": "integer",
                            "description": "Ref: Cost Center._id"
                          },
                          "CostCenter": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "JobId": {
                            "type": "integer",
                            "description": "Ref: Job._id"
                          },
                          "Job": {
                            "type": "object",
                            "properties": {
                              "number": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "ProductId": {
                            "type": "integer",
                            "description": "Ref: Product._id"
                          },
                          "Product": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "Custom1Id": {
                            "type": "integer",
                            "description": "Ref: Custom1._id"
                          },
                          "Custom1": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "Custom2Id": {
                            "type": "integer",
                            "description": "Ref: Custom2._id"
                          },
                          "Custom2": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "Custom3Id": {
                            "type": "integer",
                            "description": "Ref: Custom3._id"
                          },
                          "Custom3": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Purchase Orders"
        ],
        "summary": "Update",
        "description": "Updates a Purchase Order\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>PurchaseOrder UPDATE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Purchase Order._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON body to update a Purchase Order\n\nOnly POs in \"created\" or \"partiallyFulfilled\" status can be updated.\n\nIf updating the InventoryReceivingAccountId you must choose an active account.\n\nICLocationId and LocationId cannot be the same.\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "externalId": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "issueDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "deliveryDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "currency": {
                    "type": "string",
                    "format": "ISO4217 3 Char Code",
                    "description": "Ref: Currency.code - cannot use custom"
                  },
                  "attachments": {
                    "type": "array",
                    "description": "Links to any attached documents",
                    "items": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "TemplateId": {
                    "type": "integer",
                    "description": "Ref: Template._id",
                    "default": "Template with name 'Default' and format = 'pdf'"
                  },
                  "customFields": {
                    "type": "object",
                    "description": "Key -> Value hash of custom fields, must be defined via the UI to show up in the UI"
                  },
                  "LocationId": {
                    "type": "integer",
                    "description": "Ref: Location._id"
                  },
                  "Location": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Location.id"
                      }
                    }
                  },
                  "ICLocationId": {
                    "type": "integer",
                    "description": "Ref: Location._id"
                  },
                  "ICLocation": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Location.id"
                      }
                    }
                  },
                  "VendorId": {
                    "type": "integer",
                    "description": "Ref: Vendor._id"
                  },
                  "Vendor": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Ref: Vendor.name"
                      }
                    }
                  },
                  "WarehouseId": {
                    "type": "integer",
                    "description": "Ref: Warehouse._id"
                  },
                  "Warehouse": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Ref: Warehouse.name"
                      }
                    }
                  },
                  "InventoryReceivingAccountId": {
                    "type": "integer",
                    "description": "Must be an active acccount\n\"Ref: LedgerAccount._id\"\n",
                    "default": "Ref: Settings.defaultInventoryAccrualId"
                  },
                  "InventoryReceivingAccount": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "description": "Ref: LedgerAccount.number"
                      }
                    }
                  },
                  "ShippingAddressId": {
                    "type": "integer",
                    "description": "Ref: Address._id"
                  },
                  "BillingAddressId": {
                    "type": "integer",
                    "description": "Ref: Address._id"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Purchase Order",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "externalId": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "number": {
                      "type": "string",
                      "format": "number"
                    },
                    "amount": {
                      "type": "string",
                      "format": "number"
                    },
                    "description": {
                      "type": "string"
                    },
                    "notes": {
                      "type": "string"
                    },
                    "issueDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "deliveryDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "currency": {
                      "type": "string",
                      "format": "ISO4217 3 Char Code"
                    },
                    "attachments": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "customFields": {
                      "type": "object",
                      "description": "Key -> Value hash of custom fields, must be defined via the UI to show up in the UI"
                    },
                    "TemplateId": {
                      "type": "integer",
                      "description": "Ref: Template._id"
                    },
                    "LocationId": {
                      "type": "integer",
                      "description": "Ref: Location._id"
                    },
                    "ICLocationId": {
                      "type": "integer",
                      "description": "Ref: Location._id"
                    },
                    "VendorId": {
                      "type": "integer",
                      "description": "Ref: Vendor._id"
                    },
                    "WarehouseId": {
                      "type": "integer",
                      "description": "Ref: Warehouse._id"
                    },
                    "InventoryReceivingAccountId": {
                      "type": "integer",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "ShippingAddressId": {
                      "type": "integer",
                      "description": "Ref: Address._id"
                    },
                    "BillingAddressId": {
                      "type": "integer",
                      "description": "Ref: Address._id"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/purchase-orders/line/{id}": {
      "delete": {
        "tags": [
          "Purchase Orders"
        ],
        "summary": "Delete Line",
        "description": "Delete one Purchase Order line\n\nCan only delete lines from purchase orders with status \"created\"/\"issued\"/\"partiallyFulfilled\".\n\nCan not delete lines with linked stock adjustments.\n\nIf the line to be deleted has a linked Sales order line\n- sales order line will be deleted\n- sales order status and total amount will be updated\n\nPurchase order amount will reflect the changes.\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>POLineItem DELETE</div>\n  <div>SOLineItem DELETE - for linked sales order line removed</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "POLineItem id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "no content success"
          }
        }
      },
      "put": {
        "tags": [
          "Purchase Orders"
        ],
        "summary": "Update Line",
        "description": "Update a Purchase Order Line Item\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>POLineItem UPDATE</div>\n  <div>SOLineItem UPDATE - if linked</div>\n  <div>SOLineItem DELETE - if unlinked</div>\n  <div>SOLineItem CREATE - if new created</div>\n  <div>SalesOrder UPDATE - if SO updated</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "POLineItem._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON body to update a Purchase Order Line Item\n\nCan only update a line on an order with \"created\", \"issued\", \"partiallyFulfilled\" status\n\nIf a line has linked stock adjustments, you may only update \"quantity\"\n\nCannot update quantity to be less than quantityReceived\n\nQuantity can be updated to zero, this indicates the line is \"voided\"              \n\nIf an Item is passed, then this line will be considered an \"item\" type line\n\nOtherwise it is a \"description\" type line, which requires\n  - \"description\"\n\nTax Logic                    \n  - If a taxAmount is passed it will be used as the tax amount for the line\n  - If a TaxCode is set and taxAmount is not, then taxAmount will be set as:\n    - taxAmount = (amount * quantity * TaxCode.rate / 100)\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "quantity"
                ],
                "properties": {
                  "idx": {
                    "type": "number"
                  },
                  "externalId": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string",
                    "description": "Required if ItemId is not set"
                  },
                  "customFields": {
                    "type": "object",
                    "description": "Key -> Value hash of custom fields, must be defined via the UI to show up in the UI"
                  },
                  "amount": {
                    "type": "string",
                    "format": "number",
                    "description": "Must be > 0"
                  },
                  "quantity": {
                    "type": "string",
                    "format": "number",
                    "description": "Must be >= quantityReceived"
                  },
                  "taxAmount": {
                    "type": "string",
                    "format": "number"
                  },
                  "TaxCodeId": {
                    "type": "integer",
                    "description": "Ref: TaxCode._id"
                  },
                  "TaxCode": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Ref: TaxCode.code"
                      }
                    }
                  },
                  "ItemId": {
                    "type": "integer",
                    "description": "\"Ref: Item._id\"\nIf the reference Item has type 'direct', then SalesOrderId or SOLineItemId is required or already set on the line\n"
                  },
                  "Item": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "description": "Ref: Item.number"
                      }
                    }
                  },
                  "SalesOrderId": {
                    "type": "integer",
                    "description": "\"Ref: SalesOrder._id\"\n- Ignored if SOLineItemId is passed\n- If that sales order or any of it's line is already linked with the current line, this won't affect anything. Just that the Sales Order line will be updated as well with the new payload\n- SalesOrder must have status 'order', 'partiallyFulfilled', or 'fulfilled' if a new link is to be established\n- This POLineItem must have an Item set\n"
                  },
                  "SOLineItemId": {
                    "type": "integer",
                    "description": "\"Ref: SOLineItem._id\"\n- SalesOrder must have status 'order', 'partiallyFulfilled', or 'fulfilled' if a new link is to be established\n- Will override SalesOrderId\n- SOLineItem must not already be linked to another POLineItem\n- SOLineItem must not have any fulfillments or unfulfillments against it if a new link is to be established                      \n- All fields from the SOLine will override the POLine if a new link is to be established\n- If this SOLine is already linked to the currrent POLine, then the SOLine will be updated as per the update payload\n"
                  },
                  "CostCenterId": {
                    "type": "integer",
                    "description": "Ref: Cost Center._id"
                  },
                  "CostCenter": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: CostCenter.id"
                      }
                    }
                  },
                  "JobId": {
                    "type": "integer",
                    "description": "Ref: Job._id"
                  },
                  "Job": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "description": "Ref: Job.number"
                      }
                    }
                  },
                  "ProductId": {
                    "type": "integer",
                    "description": "Ref: Product._id"
                  },
                  "Product": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Product.id"
                      }
                    }
                  },
                  "Custom1Id": {
                    "type": "integer",
                    "description": "Ref: Custom1._id"
                  },
                  "Custom1": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Custom1.id"
                      }
                    }
                  },
                  "Custom2Id": {
                    "type": "integer",
                    "description": "Ref: Custom2._id"
                  },
                  "Custom2": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Custom2.id"
                      }
                    }
                  },
                  "Custom3Id": {
                    "type": "integer",
                    "description": "Ref: Custom3._id"
                  },
                  "Custom3": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Custom3.id"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Purchase Order Line Item",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "idx": {
                      "type": "integer"
                    },
                    "description": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "string",
                      "format": "number"
                    },
                    "quantity": {
                      "type": "string",
                      "format": "number"
                    },
                    "quantityReceived": {
                      "type": "string",
                      "format": "number"
                    },
                    "customFields": {
                      "type": "object",
                      "description": "Key -> Value hash of custom fields, must be defined via the UI to show up in the UI"
                    },
                    "taxAmount": {
                      "type": "string",
                      "format": "number"
                    },
                    "TaxCodeId": {
                      "type": "integer",
                      "description": "Ref: TaxCode._id"
                    },
                    "SalesOrderId": {
                      "type": "integer",
                      "description": "Ref: SalesOrder._id"
                    },
                    "ItemId": {
                      "type": "integer",
                      "description": "Ref: Item._id"
                    },
                    "CostCenterId": {
                      "type": "integer",
                      "description": "Ref: CostCenter._id"
                    },
                    "JobId": {
                      "type": "integer",
                      "description": "Ref: Job._id"
                    },
                    "ProductId": {
                      "type": "integer",
                      "description": "Ref: Product._id"
                    },
                    "Custom1Id": {
                      "type": "integer",
                      "description": "Ref: Custom1._id"
                    },
                    "Custom2Id": {
                      "type": "integer",
                      "description": "Ref: Custom2._id"
                    },
                    "Custom3Id": {
                      "type": "integer",
                      "description": "Ref: Custom3._id"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/purchase-orders/{id}/email": {
      "put": {
        "tags": [
          "Purchase Orders"
        ],
        "summary": "Email",
        "description": "Email Purchase Order to Vendors email addresss",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "PurchaseOrder._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "no content success"
          }
        }
      }
    },
    "/purchase-orders/{id}/issue": {
      "put": {
        "tags": [
          "Purchase Orders"
        ],
        "summary": "Issue",
        "description": "Issue Purchase Order\n\nCan only issue if status is \"created\"\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>PurchaseOrder ISSUE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "PurchaseOrder._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Issue success response",
            "content": {
              "text/plain": {
                "examples": {
                  "Success - Email Sent": {
                    "description": "If Purchase Order was issued and email was sent to vendor.",
                    "value": "Success"
                  },
                  "Success - No Email, Missing Vendor Email": {
                    "description": "If Purchase Order was issued but Vendor/email was not found.",
                    "value": "PO Issued, but not emailed. Missing Vendor Email Address"
                  },
                  "Success - No Email, Emails Disabled": {
                    "description": "If Purchase Order was issued but email was not sent because emails on PO issue are disabled in settings.",
                    "value": "PO Issued, but not emailed."
                  }
                }
              }
            }
          }
        }
      }
    },
    "/purchase-orders/{id}/pdf": {
      "get": {
        "tags": [
          "Purchase Orders"
        ],
        "summary": "PDF",
        "description": "Purchase Order PDF",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "PurchaseOrder._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Base64 Buffer of the PDF\n"
          }
        }
      }
    },
    "/purchase-orders/{id}/unissue": {
      "put": {
        "tags": [
          "Purchase Orders"
        ],
        "summary": "Unissue",
        "description": "Unissue Purchase Order\nCan only unissue if status is \"issued\" - changes status to \"created\"\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>PurchaseOrder UNISSUE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "PurchaseOrder._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "no content success"
          }
        }
      }
    },
    "/purchase-orders/{id}/void": {
      "put": {
        "tags": [
          "Purchase Orders"
        ],
        "summary": "Void",
        "description": "Void one Purchase Order    \n\nCan only void if status is \"issued\" or \"created\".\n\nCan only void if all lines have a \"quantityReceived\" of 0.\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>PurchaseOrder VOID</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Purchase Order Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "no content success"
          }
        }
      }
    },
    "/recurring-jobs": {
      "post": {
        "tags": [
          "Recurring Jobs"
        ],
        "summary": "Create",
        "description": "Create new Recurring Job.\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>RecurringJob CREATE</div>\n</div>\n",
        "requestBody": {
          "description": "JSON body to create new Recurring Job",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "eventType",
                  "eventQueue",
                  "TemplateId",
                  "intervalType",
                  "intervalAmount",
                  "startDate"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "enabled": {
                    "type": "boolean",
                    "default": false
                  },
                  "description": {
                    "type": "string"
                  },
                  "eventType": {
                    "type": "string",
                    "enum": [
                      "RecurringJournal",
                      "RecurringInvoice",
                      "RecurringBill"
                    ]
                  },
                  "eventQueue": {
                    "type": "string",
                    "enum": [
                      "recurring_doc"
                    ]
                  },
                  "TemplateId": {
                    "type": "integer",
                    "description": "Ref: Templates._id"
                  },
                  "intervalType": {
                    "type": "string",
                    "enum": [
                      "yearly",
                      "monthly",
                      "weekly",
                      "daily"
                    ]
                  },
                  "intervalAmount": {
                    "type": "number"
                  },
                  "intervalDay": {
                    "type": "string",
                    "description": "Day to recur on"
                  },
                  "startDate": {
                    "type": "string",
                    "format": "date-only"
                  },
                  "endDate": {
                    "type": "string",
                    "format": "date-only"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created Recurring Job",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    },
                    "description": {
                      "type": "string"
                    },
                    "eventType": {
                      "type": "string",
                      "enum": [
                        "RecurringJournal",
                        "RecurringInvoice",
                        "RecurringBill"
                      ]
                    },
                    "eventQueue": {
                      "type": "string",
                      "enum": [
                        "recurring_doc"
                      ]
                    },
                    "TemplateId": {
                      "type": "integer",
                      "description": "Ref: Templates._id"
                    },
                    "intervalType": {
                      "type": "string",
                      "enum": [
                        "yearly",
                        "monthly",
                        "weekly",
                        "daily"
                      ]
                    },
                    "intervalAmount": {
                      "type": "number"
                    },
                    "intervalDay": {
                      "type": "string",
                      "description": "Day to recur on"
                    },
                    "startDate": {
                      "type": "string",
                      "format": "date-only"
                    },
                    "endDate": {
                      "type": "string",
                      "format": "date-only"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Recurring Jobs"
        ],
        "summary": "Search",
        "description": "| Field       | Filterable | Sortable |\n|---------------------|:--:|:--:|\n|_id                  | ✅ | ✅ |\n|name                 | ✅ | ✅ |\n|enabled              | ✅ | ✅ |\n|description          | ✅ | ✅ |\n|eventType            | ✅ | ✅ |\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "in": "query",
            "name": "order",
            "description": "Order to return results in. ex \"date:desc\"",
            "schema": {
              "type": "string",
              "default": "name:ASC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Recurring Jobs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          },
                          "enabled": {
                            "type": "boolean",
                            "default": false
                          },
                          "description": {
                            "type": "string"
                          },
                          "eventType": {
                            "type": "string",
                            "enum": [
                              "RecurringJournal",
                              "RecurringInvoice",
                              "RecurringBill"
                            ]
                          },
                          "eventQueue": {
                            "type": "string",
                            "enum": [
                              "recurring_doc"
                            ]
                          },
                          "TemplateId": {
                            "type": "integer",
                            "description": "Ref: Templates._id"
                          },
                          "intervalType": {
                            "type": "string",
                            "enum": [
                              "yearly",
                              "monthly",
                              "weekly",
                              "daily"
                            ]
                          },
                          "intervalAmount": {
                            "type": "number"
                          },
                          "intervalDay": {
                            "type": "string",
                            "description": "Day to recur on"
                          },
                          "startDate": {
                            "type": "string",
                            "format": "date-only"
                          },
                          "endDate": {
                            "type": "string",
                            "format": "date-only"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/recurring-jobs/{id}": {
      "delete": {
        "tags": [
          "Recurring Jobs"
        ],
        "summary": "Delete",
        "description": "Delete one Recurring Job\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Recurring Job DELETE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Recurring Job Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "no content success"
          }
        }
      },
      "put": {
        "tags": [
          "Recurring Jobs"
        ],
        "summary": "Update",
        "description": "Update One Recurring Job\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Recurring Job UPDATE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Recurring Job Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON body containing key and values to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean",
                    "default": false
                  },
                  "description": {
                    "type": "string"
                  },
                  "intervalType": {
                    "type": "string",
                    "enum": [
                      "yearly",
                      "monthly",
                      "weekly",
                      "daily"
                    ]
                  },
                  "intervalAmount": {
                    "type": "number"
                  },
                  "intervalDay": {
                    "type": "string",
                    "description": "Day to recur on"
                  },
                  "startDate": {
                    "type": "string",
                    "format": "date-only"
                  },
                  "endDate": {
                    "type": "string",
                    "format": "date-only"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated Recurring Job",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "enabled": {
                      "type": "boolean",
                      "default": false
                    },
                    "description": {
                      "type": "string"
                    },
                    "eventType": {
                      "type": "string",
                      "enum": [
                        "RecurringJournal",
                        "RecurringInvoice",
                        "RecurringBill"
                      ]
                    },
                    "eventQueue": {
                      "type": "string",
                      "enum": [
                        "recurring_doc"
                      ]
                    },
                    "TemplateId": {
                      "type": "integer",
                      "description": "Ref: Templates._id"
                    },
                    "intervalType": {
                      "type": "string",
                      "enum": [
                        "yearly",
                        "monthly",
                        "weekly",
                        "daily"
                      ]
                    },
                    "intervalAmount": {
                      "type": "number"
                    },
                    "intervalDay": {
                      "type": "string",
                      "description": "Day to recur on"
                    },
                    "startDate": {
                      "type": "string",
                      "format": "date-only"
                    },
                    "endDate": {
                      "type": "string",
                      "format": "date-only"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/roles": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "All",
        "description": "All available roles",
        "responses": {
          "200": {
            "description": "List of roles\"",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/roles/{id}/permissions": {
      "get": {
        "tags": [
          "Roles"
        ],
        "summary": "One",
        "description": "Permissions in Role",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Role id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "string"
                      },
                      "permission_name": {
                        "type": "string"
                      },
                      "resource_server_identifier": {
                        "type": "string"
                      },
                      "resource_server_name": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sales-orders/{id}/accept": {
      "put": {
        "tags": [
          "Sales Orders"
        ],
        "summary": "Accept",
        "description": "Accepts a Sales Order that has been issued\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>SalesOrder ACCEPT</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "SalesOrder Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON body containing payload for accept\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "orderDate",
                  "deliveryDate",
                  "TemplateId"
                ],
                "properties": {
                  "orderDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "deliveryDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "TemplateId": {
                    "type": "integer",
                    "description": "Ref: Template._id"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sales Order",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "externalId": {
                      "type": "string"
                    },
                    "number": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "order"
                      ]
                    },
                    "notes": {
                      "type": "string"
                    },
                    "quoteDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "quoteExpiration": {
                      "type": "string",
                      "format": "date"
                    },
                    "orderDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "deliveryDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "completeDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "currency": {
                      "type": "string",
                      "format": "ISO4217 3 Char Code"
                    },
                    "attachments": {
                      "type": "array",
                      "description": "Links to any attached documents",
                      "items": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "approved_on": {
                      "type": "string",
                      "format": "date"
                    },
                    "approved_name": {
                      "type": "string"
                    },
                    "approved_email": {
                      "type": "string",
                      "format": "email"
                    },
                    "reference": {
                      "type": "string"
                    },
                    "externalRef": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "string",
                      "format": "number"
                    },
                    "customFields": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "TemplateId": {
                      "type": "integer"
                    },
                    "LocationId": {
                      "type": "integer",
                      "description": "Ref: Location._id"
                    },
                    "Location": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "ICLocationId": {
                      "type": "integer",
                      "description": "Ref: Location._id"
                    },
                    "ICLocation": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "CustomerId": {
                      "type": "integer",
                      "description": "Ref: Customer._id"
                    },
                    "Customer": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string",
                          "description": "Ref: Customer.name"
                        },
                        "email": {
                          "type": "string",
                          "description": "Ref: Customer.email"
                        }
                      }
                    },
                    "ShippingAddressId": {
                      "type": "integer",
                      "description": "Ref: Address._id"
                    },
                    "ShippingAddress": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string"
                        },
                        "line1": {
                          "type": "string"
                        },
                        "line2": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "state": {
                          "type": "string"
                        },
                        "zip": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        }
                      }
                    },
                    "BillingAddressId": {
                      "type": "integer",
                      "description": "Ref: Address._id"
                    },
                    "BillingAddress": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string"
                        },
                        "line1": {
                          "type": "string"
                        },
                        "line2": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "state": {
                          "type": "string"
                        },
                        "zip": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        }
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sales-orders/{id}/stock-adjustments": {
      "get": {
        "tags": [
          "Sales Orders"
        ],
        "summary": "Stock Adjustments",
        "description": "Get stock adjustments linked to a sales order\n\nThe parameters of this endpoint are the same as for [Stock Adjustment Search](#operation/stockAdjustmentsSearch)\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "SalesOrder._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Stock adjustments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/StockAdjustmentSearchItem"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sales-orders": {
      "get": {
        "tags": [
          "Sales Orders"
        ],
        "summary": "Search",
        "operationId": "salesOrdersSearch",
        "description": "| Field       | Filterable | Sortable |\n|---------------------|:--:|:--:|\n|_id                     | ✅ | ✅ |\n|number                  | ✅ | ✅ |\n|externalId              | ✅ | ✅ |\n|status                  | ✅ | ✅ |\n|CustomerId              | ✅ | ❌ |\n|reference               | ✅ | ✅ |\n|externalRef             | ✅ | ✅ |\n|LocationId              | ✅ | ❌ |\n|quoteDate               | ✅ | ✅ |\n|quoteExpiration         | ✅ | ✅ |\n|orderDate               | ✅ | ✅ |\n|deliveryDate            | ✅ | ✅ |\n|completeDate            | ✅ | ✅ |\n|amount                  | ✅ | ✅ |\n|customFields            | ✅ | ❌ |\n|createdAt               | ✅ | ✅ |\n|updatedAt               | ✅ | ✅ |\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/LocationId"
          },
          {
            "in": "query",
            "name": "order",
            "description": "Order to return results in. ex \"date:desc\"",
            "schema": {
              "type": "string",
              "default": "number:ASC"
            }
          },
          {
            "in": "query",
            "name": "status",
            "description": "A CSV string containing the statuses you'd like to filter for \njoined with commas (No spaces). ex: 'quote,pending,order'. This \nquery param is optional. \n\n- If you pass this param in addition to a \"status\" filter both will be used. \n- If you pass nothing for this param and a \"status\" filter, the filter will be used. \n- If you pass no status filter and you pass this param, this param will be used.\n",
            "schema": {
              "type": "string",
              "enum": [
                "quote",
                "pending",
                "rejected",
                "order",
                "partiallyFulfilled",
                "fulfilled",
                "voided",
                "completed"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Sales Orders",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "integer"
                          },
                          "externalId": {
                            "type": "string"
                          },
                          "number": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "quote",
                              "pending",
                              "rejected",
                              "order",
                              "partiallyFulfilled",
                              "fulfilled",
                              "voided",
                              "completed"
                            ]
                          },
                          "notes": {
                            "type": "string"
                          },
                          "quoteDate": {
                            "type": "string",
                            "format": "date"
                          },
                          "quoteExpiration": {
                            "type": "string",
                            "format": "date"
                          },
                          "orderDate": {
                            "type": "string",
                            "format": "date"
                          },
                          "deliveryDate": {
                            "type": "string",
                            "format": "date"
                          },
                          "completeDate": {
                            "type": "string",
                            "format": "date"
                          },
                          "currency": {
                            "type": "string",
                            "format": "ISO4217 3 Char Code"
                          },
                          "attachments": {
                            "type": "array",
                            "description": "Links to any attached documents",
                            "items": {
                              "type": "string",
                              "format": "uri"
                            }
                          },
                          "approved_on": {
                            "type": "string",
                            "format": "date"
                          },
                          "approved_name": {
                            "type": "string"
                          },
                          "approved_email": {
                            "type": "string",
                            "format": "email"
                          },
                          "reference": {
                            "type": "string"
                          },
                          "externalRef": {
                            "type": "string"
                          },
                          "amount": {
                            "type": "string",
                            "format": "number"
                          },
                          "customFields": {
                            "type": "object",
                            "description": "Key -> Value hash of custom fields, must be defined via the UI to show up in the UI"
                          },
                          "TemplateId": {
                            "type": "integer"
                          },
                          "LocationId": {
                            "type": "integer",
                            "description": "Ref: Location._id"
                          },
                          "Location": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "ICLocationId": {
                            "type": "integer",
                            "description": "Ref: Location._id"
                          },
                          "ICLocation": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "CustomerId": {
                            "type": "integer",
                            "description": "Ref: Customer._id"
                          },
                          "Customer": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string",
                                "description": "Ref: Customer.name"
                              },
                              "email": {
                                "type": "string",
                                "description": "Ref: Customer.email"
                              }
                            }
                          },
                          "ShippingAddressId": {
                            "type": "integer",
                            "description": "Ref: Address._id"
                          },
                          "ShippingAddress": {
                            "type": "object",
                            "properties": {
                              "label": {
                                "type": "string"
                              },
                              "line1": {
                                "type": "string"
                              },
                              "line2": {
                                "type": "string"
                              },
                              "city": {
                                "type": "string"
                              },
                              "state": {
                                "type": "string"
                              },
                              "zip": {
                                "type": "string"
                              },
                              "country": {
                                "type": "string"
                              }
                            }
                          },
                          "BillingAddressId": {
                            "type": "integer",
                            "description": "Ref: Address._id"
                          },
                          "BillingAddress": {
                            "type": "object",
                            "properties": {
                              "label": {
                                "type": "string"
                              },
                              "line1": {
                                "type": "string"
                              },
                              "line2": {
                                "type": "string"
                              },
                              "city": {
                                "type": "string"
                              },
                              "state": {
                                "type": "string"
                              },
                              "zip": {
                                "type": "string"
                              },
                              "country": {
                                "type": "string"
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Sales Orders"
        ],
        "summary": "Create",
        "description": "Creates a new Sales Order\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>SalesOrder CREATE</div>\n  <div>SOLineItem CREATE - for each line</div>\n</div>\n",
        "requestBody": {
          "description": "JSON body to create new Sales Order\n\nOne of `[Location.id, LocationId]` is Required\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "LocationId",
                  "currency"
                ],
                "properties": {
                  "externalId": {
                    "type": "string"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "quote",
                      "order"
                    ],
                    "default": "order"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "quoteDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "quoteExpiration": {
                    "type": "string",
                    "format": "date"
                  },
                  "orderDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "deliveryDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "currency": {
                    "type": "string",
                    "format": "ISO4217 3 Char Code",
                    "description": "Ref: Currency.code - cannot use custom"
                  },
                  "LocationId": {
                    "type": "integer",
                    "description": "Ref: Location._id"
                  },
                  "Location": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Location.id"
                      }
                    }
                  },
                  "ICLocationId": {
                    "type": "integer",
                    "description": "Ref: Location._id"
                  },
                  "ICLocation": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Location.id"
                      }
                    }
                  },
                  "CustomerId": {
                    "type": "integer",
                    "description": "Ref: Customer._id"
                  },
                  "Customer": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Ref: Customer.name"
                      }
                    }
                  },
                  "ShippingAddressId": {
                    "type": "integer",
                    "description": "Ref: Address._id"
                  },
                  "BillingAddressId": {
                    "type": "integer",
                    "description": "Ref: Address._id"
                  },
                  "attachments": {
                    "type": "array",
                    "description": "Links to any attached documents",
                    "items": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "TemplateId": {
                    "type": "integer",
                    "description": "Ref: Template._id",
                    "default": "Template with name 'Default' and format = 'pdf'"
                  },
                  "reference": {
                    "type": "string"
                  },
                  "customFields": {
                    "type": "object",
                    "description": "Key -> Value hash of custom fields, must be defined via the UI to show up in the UI",
                    "default": {}
                  },
                  "externalRef": {
                    "type": "string"
                  },
                  "SOLineItems": {
                    "type": "array",
                    "description": "If an Item is passed, then this line will be considered an \"item\" type line, \n\nOtherwise it is a \"description\" type line, which requires\n  - \"description\"\n\nTax Logic                    \n  - If a taxAmount is passed it will be used as the tax amount for the line\n  - If a TaxCode is set and taxAmount is not, then taxAmount will be set as:\n    - taxAmount = (amount * quantity * TaxCode.rate / 100)\n",
                    "items": {
                      "type": "object",
                      "required": [
                        "amount",
                        "quantity"
                      ],
                      "properties": {
                        "idx": {
                          "type": "number"
                        },
                        "externalId": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string",
                          "description": "Required if ItemId is not set"
                        },
                        "amount": {
                          "type": "string",
                          "format": "number",
                          "description": "Must be > 0"
                        },
                        "quantity": {
                          "type": "string",
                          "format": "number",
                          "description": "Must be > 0"
                        },
                        "taxAmount": {
                          "type": "string",
                          "format": "number"
                        },
                        "TaxCodeId": {
                          "type": "integer",
                          "description": "Ref: TaxCode._id"
                        },
                        "TaxCode": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "description": "Ref: TaxCode.code"
                            }
                          }
                        },
                        "ItemId": {
                          "type": "integer",
                          "description": "Ref: Item._id"
                        },
                        "Item": {
                          "type": "object",
                          "properties": {
                            "number": {
                              "type": "string",
                              "description": "Ref: Item.number"
                            }
                          }
                        },
                        "CostCenterId": {
                          "type": "integer",
                          "description": "Ref: Cost Center._id"
                        },
                        "CostCenter": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Ref: CostCenter.id"
                            }
                          }
                        },
                        "JobId": {
                          "type": "integer",
                          "description": "Ref: Job._id"
                        },
                        "Job": {
                          "type": "object",
                          "properties": {
                            "number": {
                              "type": "string",
                              "description": "Ref: Job.number"
                            }
                          }
                        },
                        "ProductId": {
                          "type": "integer",
                          "description": "Ref: Product._id"
                        },
                        "Product": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Ref: Product.id"
                            }
                          }
                        },
                        "Custom1Id": {
                          "type": "integer",
                          "description": "Ref: Custom1._id"
                        },
                        "Custom1": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Ref: Custom1.id"
                            }
                          }
                        },
                        "Custom2Id": {
                          "type": "integer",
                          "description": "Ref: Custom2._id"
                        },
                        "Custom2": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Ref: Custom2.id"
                            }
                          }
                        },
                        "Custom3Id": {
                          "type": "integer",
                          "description": "Ref: Custom3._id"
                        },
                        "Custom3": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Ref: Custom3.id"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Sales Order created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "externalId": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "number": {
                      "type": "string",
                      "format": "number"
                    },
                    "quoteDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "quoteExpiration": {
                      "type": "string",
                      "format": "date"
                    },
                    "orderDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "deliveryDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "notes": {
                      "type": "string"
                    },
                    "reference": {
                      "type": "string"
                    },
                    "externalRef": {
                      "type": "string"
                    },
                    "currency": {
                      "type": "string",
                      "format": "ISO4217 3 Char Code"
                    },
                    "customFields": {
                      "type": "object",
                      "description": "Key -> Value hash of custom fields, must be defined via the UI to show up in the UI"
                    },
                    "LocationId": {
                      "type": "integer",
                      "description": "Ref: Location._id"
                    },
                    "ICLocationId": {
                      "type": "integer",
                      "description": "Ref: Location._id"
                    },
                    "CustomerId": {
                      "type": "integer",
                      "description": "Ref: Customer._id"
                    },
                    "ShippingAddressId": {
                      "type": "integer",
                      "description": "Ref: Address._id"
                    },
                    "BillingAddressId": {
                      "type": "integer",
                      "description": "Ref: Address._id"
                    },
                    "TemplateId": {
                      "type": "integer",
                      "description": "Ref: Template._id"
                    },
                    "attachments": {
                      "type": "array",
                      "description": "Links to any attached documents",
                      "items": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sales-orders/lines": {
      "get": {
        "tags": [
          "Sales Orders"
        ],
        "summary": "Line Search",
        "operationId": "salesOrderLineSearch",
        "description": "| Field       | Filterable | Sortable |\n|---------------------|:--:|:--:|\n|_id                     | ✅ | ✅ |\n|SalesOrder.number       | ✅ | ✅ |\n|SalesOrder.status       | ✅ | ❌ |\n|SalesOrder.reference    | ✅ | ❌ |\n|SalesOrder.externalRef  | ✅ | ❌ |          \n|SalesOrder.quoteDate    | ✅ | ✅ |\n|SalesOrder.orderDate    | ✅ | ✅ |\n|SalesOrder.completeDate | ✅ | ✅ |\n|SalesOrder.createdAt    | ✅ | ✅ |\n|SalesOrder.updatedAt    | ✅ | ✅ |\n|SalesOrder.CustomerId   | ✅ | ❌ |\n|SalesOrder.LocationId   | ✅ | ❌ |\n|Customer.name           | ❌ | ✅ |\n|Location.id             | ❌ | ✅ |\n|TaxCode.code            | ❌ | ✅ |\n|PurchaseOrder.number    | ❌ | ✅ |\n|description             | ✅ | ❌ |\n|externalId              | ✅ | ❌ |\n|amount                  | ✅ | ✅ |\n|quantity                | ✅ | ✅ |\n|quantityFulFilled       | ✅ | ✅ |\n|ItemId                  | ✅ | ❌ |\n|Item.name               | ❌ | ✅ |\n|Item.salePrice          | ❌ | ✅ |\n|Item.purchasePrice      | ❌ | ✅ |\n|CostCenterId            | ✅ | ❌ |\n|ProductId               | ✅ | ❌ |\n|JobId                   | ✅ | ❌ |\n|Custom1Id               | ✅ | ❌ |\n|Custom2Id               | ✅ | ❌ |\n|Custom3Id               | ✅ | ❌ |\n|createdAt               | ✅ | ✅ |\n|updatedAt               | ✅ | ✅ |\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/LocationId"
          },
          {
            "in": "query",
            "name": "order",
            "description": "Order to return results in. ex \"date:desc\"",
            "schema": {
              "type": "string",
              "default": "SalesOrder.number:ASC"
            }
          },
          {
            "in": "query",
            "name": "type",
            "description": "Use this to control whether to return fulfillable/unfulfillable lines\n\nSet this to 'fulfill' to return lines that can be fulfilled, criteria for fulfillable lines as under:\n  - Line's 'quantity' is not equal to 'quantityFulFilled'\n  - Line's parent SO is not in status 'Quote', 'Rejected', 'Pending', 'Fulfilled', 'Voided', or 'Complete'\n  - Line is an item line\n  - Line does not have a linked POLine\n\nSet this to 'unfulfill' to return lines that can be unfulfulleed, criteria as under:\n  - Line has some fulfillments i.e. 'quantityFulfilled' is greater than 0\n  - Line's parent SO is not in 'Complete' status\n  - Line is an item line\n\nNot setting this will return all lines\n",
            "schema": {
              "type": "string",
              "enum": [
                "fulfill",
                "unfulfill"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Sales Order Lines",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "integer"
                          },
                          "idx": {
                            "type": "integer"
                          },
                          "externalId": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "amount": {
                            "type": "string",
                            "format": "number"
                          },
                          "quantity": {
                            "type": "string",
                            "format": "number"
                          },
                          "quantityFulFilled": {
                            "type": "string",
                            "format": "number"
                          },
                          "taxAmount": {
                            "type": "string",
                            "format": "number"
                          },
                          "SalesOrder": {
                            "type": "object",
                            "properties": {
                              "number": {
                                "type": "string",
                                "format": "number"
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "quote",
                                  "pending",
                                  "rejected",
                                  "order",
                                  "partiallyFulfilled",
                                  "fulfilled",
                                  "voided",
                                  "completed"
                                ]
                              },
                              "reference": {
                                "type": "string"
                              },
                              "externalRef": {
                                "type": "string"
                              },
                              "quoteDate": {
                                "type": "string",
                                "format": "date"
                              },
                              "orderDate": {
                                "type": "string",
                                "format": "date"
                              },
                              "completeDate": {
                                "type": "string",
                                "format": "date"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date"
                              },
                              "updatedAt": {
                                "type": "string",
                                "format": "date"
                              }
                            }
                          },
                          "JournalId": {
                            "type": "integer",
                            "description": "Ref: Journal._id"
                          },
                          "Journal": {
                            "type": "object",
                            "properties": {
                              "number": {
                                "type": "integer"
                              }
                            }
                          },
                          "CustomerId": {
                            "type": "number",
                            "description": "Ref: Customer._id"
                          },
                          "Customer": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "LocationId": {
                            "type": "number",
                            "description": "Ref: Location._id"
                          },
                          "Location": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "TaxCodeId": {
                            "type": "integer",
                            "description": "Ref: TaxCode._id"
                          },
                          "TaxCode": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string",
                                "description": "Ref: TaxCode.code"
                              }
                            }
                          },
                          "POLineItemId": {
                            "type": "integer",
                            "description": "Ref: POLineItem._id"
                          },
                          "PurchaseOrderId": {
                            "type": "integer",
                            "description": "Ref: PurchaseOrder._id"
                          },
                          "PurchaseOrder": {
                            "type": "object",
                            "properties": {
                              "number": {
                                "type": "string"
                              }
                            }
                          },
                          "ItemId": {
                            "type": "integer",
                            "description": "Ref: Item._id"
                          },
                          "Item": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "number": {
                                "type": "string"
                              },
                              "sku": {
                                "type": "string"
                              },
                              "salePrice": {
                                "type": "string",
                                "format": "number"
                              },
                              "purchasePrice": {
                                "type": "string",
                                "format": "number"
                              }
                            }
                          },
                          "CostCenterId": {
                            "type": "integer",
                            "description": "Ref: Cost Center._id"
                          },
                          "CostCenter": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "JobId": {
                            "type": "integer",
                            "description": "Ref: Job._id"
                          },
                          "Job": {
                            "type": "object",
                            "properties": {
                              "number": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "ProductId": {
                            "type": "integer",
                            "description": "Ref: Product._id"
                          },
                          "Product": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "Custom1Id": {
                            "type": "integer",
                            "description": "Ref: Custom1._id"
                          },
                          "Custom1": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "Custom2Id": {
                            "type": "integer",
                            "description": "Ref: Custom2._id"
                          },
                          "Custom2": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "Custom3Id": {
                            "type": "integer",
                            "description": "Ref: Custom3._id"
                          },
                          "Custom3": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sales-orders/lines/count": {
      "get": {
        "tags": [
          "Sales Orders"
        ],
        "summary": "Lines Count",
        "description": "The same filters as [Line Search](#operation/salesOrderLineSearch) can be used here.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/LocationId"
          },
          {
            "in": "query",
            "name": "type",
            "description": "Use this to control whether to count fulfillable/unfulfillable lines\n\nSet this to 'fulfill' to count lines that can be fulfilled, criteria for fulfillable lines as under:\n  - Line's 'quantity' is not equal to 'quantityFulFilled'\n  - Line's parent SO is not in status 'Quote', 'Rejected', 'Pending', 'Fulfilled', 'Voided', or 'Complete'\n  - Line is an item line\n  - Line does not have a linked POLine\n\nSet this to 'unfulfill' to count lines that can be unfulfulleed, criteria as under:\n  - Line has some fulfillments i.e. 'quantityFulfilled' is greater than 0\n  - Line's parent SO is not in 'Complete' status\n  - Line is an item line\n\nNot setting this will count all lines\n",
            "schema": {
              "type": "string",
              "enum": [
                "fulfill",
                "unfulfill"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Count response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/sales-orders/{id}/complete": {
      "put": {
        "tags": [
          "Sales Orders"
        ],
        "summary": "Complete",
        "description": "Complete One Sales Order\n\nA journal entry will be posted for each sales order line that has fulfillments.\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>SalesOrder COMPLETE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "SalesOrder Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON body containing key and values to update\n\nStatus must be \"partiallyFulfilled\" or \"fulfilled\" to complete\n\nCannot complete sales order if any lines are linked to a purchase order line that is not completely fulfilled.\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "completeDate": {
                    "type": "string",
                    "format": "date",
                    "default": "NOW",
                    "description": "Cannot be in the future\n\nMust be after all of the stock adjustments linked to this sales order\n"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "No Content Success"
          }
        }
      }
    },
    "/sales-orders/count": {
      "get": {
        "tags": [
          "Sales Orders"
        ],
        "summary": "Count All",
        "description": "The same filters as [Search](#operation/salesOrdersSearch) can be used here.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/LocationId"
          }
        ],
        "responses": {
          "200": {
            "description": "Count response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/sales-orders/{id}/line": {
      "post": {
        "tags": [
          "Sales Orders"
        ],
        "summary": "Create Line",
        "description": "Creates a new Sales Order Line Item\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>SalesOrder CREATE</div>\n  <div>SOLineItem CREATE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "SOLineItem Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON body to create new Sales Order Line Item             \n\nIf an Item is passed, then this line will be considered an \"item\" type line, \n\nOtherwise it is a \"description\" type line, which requires\n  - \"description\"\n\nTax Logic                    \n  - If a taxAmount is passed it will be used as the tax amount for the line\n  - If a TaxCode is set and taxAmount is not, then taxAmount will be set as:\n    - taxAmount = (amount * quantity * TaxCode.rate / 100)\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "amount",
                  "quantity"
                ],
                "properties": {
                  "idx": {
                    "type": "number"
                  },
                  "externalId": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string",
                    "description": "Required if ItemId is not set"
                  },
                  "amount": {
                    "type": "string",
                    "format": "number",
                    "description": "Must be > 0"
                  },
                  "quantity": {
                    "type": "string",
                    "format": "number",
                    "description": "Must be > 0"
                  },
                  "taxAmount": {
                    "type": "string",
                    "format": "number"
                  },
                  "TaxCodeId": {
                    "type": "integer",
                    "description": "Ref: TaxCode._id"
                  },
                  "TaxCode": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Ref: TaxCode.code"
                      }
                    }
                  },
                  "ItemId": {
                    "type": "integer",
                    "description": "Ref: Item._id"
                  },
                  "Item": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "description": "Ref: Item.number"
                      }
                    }
                  },
                  "CostCenterId": {
                    "type": "integer",
                    "description": "Ref: Cost Center._id"
                  },
                  "CostCenter": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: CostCenter.id"
                      }
                    }
                  },
                  "JobId": {
                    "type": "integer",
                    "description": "Ref: Job._id"
                  },
                  "Job": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "description": "Ref: Job.number"
                      }
                    }
                  },
                  "ProductId": {
                    "type": "integer",
                    "description": "Ref: Product._id"
                  },
                  "Product": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Product.id"
                      }
                    }
                  },
                  "Custom1Id": {
                    "type": "integer",
                    "description": "Ref: Custom1._id"
                  },
                  "Custom1": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Custom1.id"
                      }
                    }
                  },
                  "Custom2Id": {
                    "type": "integer",
                    "description": "Ref: Custom2._id"
                  },
                  "Custom2": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Custom2.id"
                      }
                    }
                  },
                  "Custom3Id": {
                    "type": "integer",
                    "description": "Ref: Custom3._id"
                  },
                  "Custom3": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Custom3.id"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Sales Order Line Item created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "description": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "string",
                      "format": "number"
                    },
                    "quantity": {
                      "type": "string",
                      "format": "number"
                    },
                    "quantityFulFilled": {
                      "type": "string",
                      "format": "number"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "SalesOrderId": {
                      "type": "integer",
                      "description": "Ref: SalesOrder._id"
                    },
                    "ItemId": {
                      "type": "integer",
                      "description": "Ref: Item._id"
                    },
                    "CostCenterId": {
                      "type": "integer",
                      "description": "Ref: CostCenter._id"
                    },
                    "JobId": {
                      "type": "integer",
                      "description": "Ref: Job._id"
                    },
                    "ProductId": {
                      "type": "integer",
                      "description": "Ref: Product._id"
                    },
                    "JournalId": {
                      "type": "integer",
                      "description": "Ref: Journal._id"
                    },
                    "idx": {
                      "type": "number"
                    },
                    "Custom1Id": {
                      "type": "integer",
                      "description": "Ref: Custom1._id"
                    },
                    "Custom2Id": {
                      "type": "integer",
                      "description": "Ref: Custom2._id"
                    },
                    "Custom3Id": {
                      "type": "integer",
                      "description": "Ref: Custom3._id"
                    },
                    "TaxCodeId": {
                      "type": "integer",
                      "description": "Ref: TaxCode._id"
                    },
                    "taxAmount": {
                      "type": "string",
                      "format": "number"
                    },
                    "POLineItemId": {
                      "type": "integer",
                      "description": "Ref: TaxCode._id"
                    },
                    "externalId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sales-orders/{id}": {
      "delete": {
        "tags": [
          "Sales Orders"
        ],
        "summary": "Delete",
        "description": "Delete one Sales Order\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>SalesOrder DELETE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Sales Order Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "no content success"
          }
        }
      },
      "get": {
        "tags": [
          "Sales Orders"
        ],
        "summary": "One",
        "description": "Get one Sales Order",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Sales Order._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "One Sales Order",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "externalId": {
                      "type": "string"
                    },
                    "number": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "quote",
                        "pending",
                        "rejected",
                        "order",
                        "partiallyFulfilled",
                        "fulfilled",
                        "voided",
                        "completed"
                      ]
                    },
                    "notes": {
                      "type": "string"
                    },
                    "quoteDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "quoteExpiration": {
                      "type": "string",
                      "format": "date"
                    },
                    "orderDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "deliveryDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "completeDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "currency": {
                      "type": "string",
                      "format": "ISO4217 3 Char Code"
                    },
                    "attachments": {
                      "type": "array",
                      "description": "Links to any attached documents",
                      "items": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "approved_on": {
                      "type": "string",
                      "format": "date"
                    },
                    "approved_name": {
                      "type": "string"
                    },
                    "approved_email": {
                      "type": "string",
                      "format": "email"
                    },
                    "reference": {
                      "type": "string"
                    },
                    "externalRef": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "string",
                      "format": "number"
                    },
                    "customFields": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "TemplateId": {
                      "type": "integer"
                    },
                    "LocationId": {
                      "type": "integer",
                      "description": "Ref: Location._id"
                    },
                    "Location": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "ICLocationId": {
                      "type": "integer",
                      "description": "Ref: Location._id"
                    },
                    "ICLocation": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "CustomerId": {
                      "type": "integer",
                      "description": "Ref: Customer._id"
                    },
                    "Customer": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string",
                          "description": "Ref: Customer.name"
                        },
                        "email": {
                          "type": "string",
                          "description": "Ref: Customer.email"
                        }
                      }
                    },
                    "ShippingAddressId": {
                      "type": "integer",
                      "description": "Ref: Address._id"
                    },
                    "ShippingAddress": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string"
                        },
                        "line1": {
                          "type": "string"
                        },
                        "line2": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "state": {
                          "type": "string"
                        },
                        "zip": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        }
                      }
                    },
                    "BillingAddressId": {
                      "type": "integer",
                      "description": "Ref: Address._id"
                    },
                    "BillingAddress": {
                      "type": "object",
                      "properties": {
                        "label": {
                          "type": "string"
                        },
                        "line1": {
                          "type": "string"
                        },
                        "line2": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "state": {
                          "type": "string"
                        },
                        "zip": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        }
                      }
                    },
                    "Template": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "SOLineItems": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "integer"
                          },
                          "idx": {
                            "type": "integer"
                          },
                          "externalId": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string",
                            "description": "Required if ItemId is not set"
                          },
                          "amount": {
                            "type": "string",
                            "format": "number"
                          },
                          "quantity": {
                            "type": "string",
                            "format": "number"
                          },
                          "quantityFulFilled": {
                            "type": "string",
                            "format": "number"
                          },
                          "taxAmount": {
                            "type": "string",
                            "format": "number"
                          },
                          "TaxCodeId": {
                            "type": "integer",
                            "description": "Ref: TaxCode._id"
                          },
                          "TaxCode": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string",
                                "description": "Ref: TaxCode.code"
                              }
                            }
                          },
                          "POLineItemId": {
                            "type": "integer",
                            "description": "Ref: POLineItem._id"
                          },
                          "PurchaseOrderId": {
                            "type": "integer",
                            "description": "Ref: PurchaseOrder._id"
                          },
                          "PurchaseOrder": {
                            "type": "object",
                            "properties": {
                              "number": {
                                "type": "string"
                              }
                            }
                          },
                          "ItemId": {
                            "type": "integer",
                            "description": "Ref: Item._id"
                          },
                          "Item": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "number": {
                                "type": "string"
                              },
                              "sku": {
                                "type": "string"
                              }
                            }
                          },
                          "CostCenterId": {
                            "type": "integer",
                            "description": "Ref: Cost Center._id"
                          },
                          "CostCenter": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "JobId": {
                            "type": "integer",
                            "description": "Ref: Job._id"
                          },
                          "Job": {
                            "type": "object",
                            "properties": {
                              "number": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "ProductId": {
                            "type": "integer",
                            "description": "Ref: Product._id"
                          },
                          "Product": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "Custom1Id": {
                            "type": "integer",
                            "description": "Ref: Custom1._id"
                          },
                          "Custom1": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "Custom2Id": {
                            "type": "integer",
                            "description": "Ref: Custom2._id"
                          },
                          "Custom2": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "Custom3Id": {
                            "type": "integer",
                            "description": "Ref: Custom3._id"
                          },
                          "Custom3": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Sales Orders"
        ],
        "summary": "Update",
        "description": "Update One Sales Order\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>SalesOrder UPDATE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "SalesOrder Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON body containing key and values to update\n\nOnly sales orders in quote or order status can be updated.\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "externalId": {
                    "type": "string"
                  },
                  "notes": {
                    "type": "string"
                  },
                  "quoteDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "quoteExpiration": {
                    "type": "string",
                    "format": "date"
                  },
                  "orderDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "deliveryDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "currency": {
                    "type": "string",
                    "format": "ISO4217 3 Char Code",
                    "description": "Ref: Currency.code - cannot use custom"
                  },
                  "LocationId": {
                    "type": "integer",
                    "description": "Ref: Location._id"
                  },
                  "Location": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Location.id"
                      }
                    }
                  },
                  "ICLocationId": {
                    "type": "integer",
                    "description": "Ref: Location._id"
                  },
                  "ICLocation": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Location.id"
                      }
                    }
                  },
                  "CustomerId": {
                    "type": "integer",
                    "description": "Ref: Customer._id"
                  },
                  "Customer": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Ref: Customer.name"
                      }
                    }
                  },
                  "ShippingAddressId": {
                    "type": "integer",
                    "description": "Ref: Address._id"
                  },
                  "BillingAddressId": {
                    "type": "integer",
                    "description": "Ref: Address._id"
                  },
                  "attachments": {
                    "type": "array",
                    "description": "Links to any attached documents",
                    "items": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "TemplateId": {
                    "type": "integer",
                    "description": "Ref: Template._id",
                    "default": "Template with name 'Default' and format = 'pdf'"
                  },
                  "reference": {
                    "type": "string"
                  },
                  "customFields": {
                    "type": "object",
                    "description": "Key -> Value hash of custom fields, must be defined via the UI to show up in the UI",
                    "default": {}
                  },
                  "externalRef": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated Sales Order",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "externalId": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "number": {
                      "type": "string",
                      "format": "number"
                    },
                    "quoteDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "quoteExpiration": {
                      "type": "string",
                      "format": "date"
                    },
                    "orderDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "deliveryDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "notes": {
                      "type": "string"
                    },
                    "reference": {
                      "type": "string"
                    },
                    "externalRef": {
                      "type": "string"
                    },
                    "currency": {
                      "type": "string",
                      "format": "ISO4217 3 Char Code"
                    },
                    "customFields": {
                      "type": "object",
                      "description": "Key -> Value hash of custom fields, must be defined via the UI to show up in the UI"
                    },
                    "LocationId": {
                      "type": "integer",
                      "description": "Ref: Location._id"
                    },
                    "ICLocationId": {
                      "type": "integer",
                      "description": "Ref: Location._id"
                    },
                    "CustomerId": {
                      "type": "integer",
                      "description": "Ref: Customer._id"
                    },
                    "ShippingAddressId": {
                      "type": "integer",
                      "description": "Ref: Address._id"
                    },
                    "BillingAddressId": {
                      "type": "integer",
                      "description": "Ref: Address._id"
                    },
                    "TemplateId": {
                      "type": "integer",
                      "description": "Ref: Template._id"
                    },
                    "attachments": {
                      "type": "array",
                      "description": "Links to any attached documents",
                      "items": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sales-orders/line/{id}": {
      "delete": {
        "tags": [
          "Sales Orders"
        ],
        "summary": "Delete Line",
        "description": "Deletes a Sales Order Line\n\nCan only delete a line from an order status of \"quote\", \"order\", or \"partiallyFulfilled\"\n\nCannot delete a line with linked stock adjustments\n\nCannot delete a line with a linked POLineItemId\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>SOLineItem DELETE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "SOLineItem._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "no content success"
          }
        }
      },
      "put": {
        "tags": [
          "Sales Orders"
        ],
        "summary": "Update Line",
        "description": "Update a Sales Order Line\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>SalesOrder UPDATE - for status and amount</div>\n  <div>SOLineItem UPDATE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "SOLineItem._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Can only update a line on an order with \"quote\", \"order\", \"partiallyFulfilled\", \"fulfilled\" status\n\nCannot update a line that is linked to a POLineItemId\n\nIf a line has linked stock adjustments, you may only update \"externalId\" and \"quantity\"\n\nCannot update quantity to be less than quantityFulFilled\n\nQuantity can be updated to zero, this indicates the line is \"voided\"              \n\nIf an Item is passed, then this line will be considered an \"item\" type line, \n\nOtherwise it is a \"description\" type line, which requires\n  - \"description\"\n\nTax Logic\n  - If a TaxCode is passed it will be set.\n  - If a taxAmount is passed it will be used as the tax amount for the line\n  - If a TaxCode is set and taxAmount is not, then taxAmount will be set as:\n    - taxAmount = (unitAmount * quantity) * (TaxCode.rate / 100)\n",
                "properties": {
                  "idx": {
                    "type": "number"
                  },
                  "externalId": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string",
                    "description": "Required if ItemId is not set"
                  },
                  "amount": {
                    "type": "string",
                    "format": "number"
                  },
                  "quantity": {
                    "type": "string",
                    "format": "number"
                  },
                  "taxAmount": {
                    "type": "string",
                    "format": "number"
                  },
                  "TaxCodeId": {
                    "type": "integer",
                    "description": "Ref: TaxCode._id"
                  },
                  "TaxCode": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "Ref: TaxCode.code"
                      }
                    }
                  },
                  "ItemId": {
                    "type": "integer",
                    "description": "Ref: Item._id"
                  },
                  "Item": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "description": "Ref: Item.number"
                      }
                    }
                  },
                  "CostCenterId": {
                    "type": "integer",
                    "description": "Ref: Cost Center._id"
                  },
                  "CostCenter": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: CostCenter.id"
                      }
                    }
                  },
                  "JobId": {
                    "type": "integer",
                    "description": "Ref: Job._id"
                  },
                  "Job": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Job.id"
                      }
                    }
                  },
                  "ProductId": {
                    "type": "integer",
                    "description": "Ref: Product._id"
                  },
                  "Product": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Product.id"
                      }
                    }
                  },
                  "Custom1Id": {
                    "type": "integer",
                    "description": "Ref: Custom1._id"
                  },
                  "Custom1": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Custom1.id"
                      }
                    }
                  },
                  "Custom2Id": {
                    "type": "integer",
                    "description": "Ref: Custom2._id"
                  },
                  "Custom2": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Custom2.id"
                      }
                    }
                  },
                  "Custom3Id": {
                    "type": "integer",
                    "description": "Ref: Custom3._id"
                  },
                  "Custom3": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Custom3.id"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sales Order Line",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "description": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "string",
                      "format": "number"
                    },
                    "quantity": {
                      "type": "string",
                      "format": "number"
                    },
                    "quantityFulFilled": {
                      "type": "string",
                      "format": "number"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "SalesOrderId": {
                      "type": "integer",
                      "description": "Ref: SalesOrder._id"
                    },
                    "ItemId": {
                      "type": "integer",
                      "description": "Ref: Item._id"
                    },
                    "CostCenterId": {
                      "type": "integer",
                      "description": "Ref: CostCenter._id"
                    },
                    "JobId": {
                      "type": "integer",
                      "description": "Ref: Job._id"
                    },
                    "ProductId": {
                      "type": "integer",
                      "description": "Ref: Product._id"
                    },
                    "JournalId": {
                      "type": "integer",
                      "description": "Ref: Journal._id"
                    },
                    "idx": {
                      "type": "number"
                    },
                    "Custom1Id": {
                      "type": "integer",
                      "description": "Ref: Custom1._id"
                    },
                    "Custom2Id": {
                      "type": "integer",
                      "description": "Ref: Custom2._id"
                    },
                    "Custom3Id": {
                      "type": "integer",
                      "description": "Ref: Custom3._id"
                    },
                    "TaxCodeId": {
                      "type": "integer",
                      "description": "Ref: TaxCode._id"
                    },
                    "taxAmount": {
                      "type": "string",
                      "format": "number"
                    },
                    "POLineItemId": {
                      "type": "integer",
                      "description": "Ref: TaxCode._id"
                    },
                    "externalId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sales-orders/{id}/email": {
      "put": {
        "tags": [
          "Sales Orders"
        ],
        "summary": "Email",
        "description": "Email Sales Order to Customers email addresss",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "SalesOrder._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "no content success"
          }
        }
      }
    },
    "/sales-orders/line/{id}/fulfill": {
      "put": {
        "tags": [
          "Sales Orders"
        ],
        "summary": "Fulfill Line",
        "description": "Fulfill a line item on a Sales Order\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>SOLineItem Fulfill</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "SOLineItem Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON body to fulfill a line item on a Sales Order\n\nSales Order must be in status of 'order' or 'partiallyFulfilled'\nLine item must not be linked to a POLineItem\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "quantity",
                  "WarehouseId"
                ],
                "properties": {
                  "quantity": {
                    "type": "string",
                    "format": "number"
                  },
                  "date": {
                    "type": "string",
                    "format": "date",
                    "default": "NOW"
                  },
                  "WarehouseId": {
                    "type": "number",
                    "description": "Ref: Warehouses._id"
                  },
                  "dontRunCostBasis": {
                    "type": "boolean",
                    "default": false,
                    "description": "Don't run cost basis on fulfillment"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/sales-orders/{id}/issue": {
      "put": {
        "tags": [
          "Sales Orders"
        ],
        "summary": "Issue",
        "description": "Issue Sales Order\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>SalesOrder ISSUE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Sales Order._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "no content success"
          }
        }
      }
    },
    "/sales-orders/{id}/lines": {
      "get": {
        "tags": [
          "Sales Orders"
        ],
        "summary": "Order Line Search",
        "description": "| Field       | Filterable | Sortable |\n|---------------------|:--:|:--:|\n|_id                     | ✅ | ✅ |\n|SalesOrder.number       | ✅ | ✅ |\n|SalesOrder.status       | ✅ | ❌ |\n|SalesOrder.reference    | ✅ | ❌ |\n|SalesOrder.externalRef  | ✅ | ❌ |          \n|SalesOrder.quoteDate    | ✅ | ✅ |\n|SalesOrder.orderDate    | ✅ | ✅ |\n|SalesOrder.completeDate | ✅ | ✅ |\n|SalesOrder.createdAt    | ✅ | ✅ |\n|SalesOrder.updatedAt    | ✅ | ✅ |\n|SalesOrder.CustomerId   | ✅ | ❌ |\n|SalesOrder.LocationId   | ✅ | ❌ |\n|Customer.name           | ❌ | ✅ |\n|Location.id             | ❌ | ✅ |\n|TaxCode.code            | ❌ | ✅ |\n|PurchaseOrder.number    | ❌ | ✅ |\n|description             | ✅ | ❌ |\n|externalId              | ✅ | ❌ |\n|amount                  | ✅ | ✅ |\n|quantity                | ✅ | ✅ |\n|quantityFulFilled       | ✅ | ✅ |\n|ItemId                  | ✅ | ❌ |\n|Item.name               | ❌ | ✅ |\n|Item.salePrice          | ❌ | ✅ |\n|Item.purchasePrice      | ❌ | ✅ |\n|CostCenterId            | ✅ | ❌ |\n|ProductId               | ✅ | ❌ |\n|JobId                   | ✅ | ❌ |\n|Custom1Id               | ✅ | ❌ |\n|Custom2Id               | ✅ | ❌ |\n|Custom3Id               | ✅ | ❌ |\n|createdAt               | ✅ | ✅ |\n|updatedAt               | ✅ | ✅ |\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "SalesOrder Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "in": "query",
            "name": "order",
            "description": "Order to return results in. ex \"date:desc\"",
            "schema": {
              "type": "string",
              "default": "SalesOrder.number:ASC"
            }
          },
          {
            "in": "query",
            "name": "type",
            "description": "Use this to control whether to return fulfillable/unfulfillable lines\n\nSet this to 'fulfill' to return lines that can be fulfilled, criteria for fulfillable lines as under:\n  - Line's 'quantity' is not equal to 'quantityFulFilled'\n  - Line's parent SO is not in status 'Quote', 'Rejected', 'Pending', 'Fulfilled', 'Voided', or 'Complete'\n  - Line is an item line\n  - Line does not have a linked POLine\n\nSet this to 'unfulfill' to return lines that can be unfulfulleed, criteria as under:\n  - Line has some fulfillments i.e. 'quantityFulfilled' is greater than 0\n  - Line's parent SO is not in 'Complete' status\n  - Line is an item line\n\nNot setting this will return all lines\n",
            "schema": {
              "type": "string",
              "enum": [
                "fulfill",
                "unfulfill"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Sales Order Lines",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "integer"
                          },
                          "idx": {
                            "type": "integer"
                          },
                          "externalId": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "amount": {
                            "type": "string",
                            "format": "number"
                          },
                          "quantity": {
                            "type": "string",
                            "format": "number"
                          },
                          "quantityFulFilled": {
                            "type": "string",
                            "format": "number"
                          },
                          "taxAmount": {
                            "type": "string",
                            "format": "number"
                          },
                          "SalesOrder": {
                            "type": "object",
                            "properties": {
                              "number": {
                                "type": "string",
                                "format": "number"
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "quote",
                                  "pending",
                                  "rejected",
                                  "order",
                                  "partiallyFulfilled",
                                  "fulfilled",
                                  "voided",
                                  "completed"
                                ]
                              },
                              "reference": {
                                "type": "string"
                              },
                              "externalRef": {
                                "type": "string"
                              },
                              "quoteDate": {
                                "type": "string",
                                "format": "date"
                              },
                              "orderDate": {
                                "type": "string",
                                "format": "date"
                              },
                              "completeDate": {
                                "type": "string",
                                "format": "date"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date"
                              },
                              "updatedAt": {
                                "type": "string",
                                "format": "date"
                              }
                            }
                          },
                          "JournalId": {
                            "type": "integer",
                            "description": "Ref: Journal._id"
                          },
                          "Journal": {
                            "type": "object",
                            "properties": {
                              "number": {
                                "type": "integer"
                              }
                            }
                          },
                          "CustomerId": {
                            "type": "number",
                            "description": "Ref: Customer._id"
                          },
                          "Customer": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "LocationId": {
                            "type": "number",
                            "description": "Ref: Location._id"
                          },
                          "Location": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "TaxCodeId": {
                            "type": "integer",
                            "description": "Ref: TaxCode._id"
                          },
                          "TaxCode": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string",
                                "description": "Ref: TaxCode.code"
                              }
                            }
                          },
                          "POLineItemId": {
                            "type": "integer",
                            "description": "Ref: POLineItem._id"
                          },
                          "PurchaseOrderId": {
                            "type": "integer",
                            "description": "Ref: PurchaseOrder._id"
                          },
                          "PurchaseOrder": {
                            "type": "object",
                            "properties": {
                              "number": {
                                "type": "string"
                              }
                            }
                          },
                          "ItemId": {
                            "type": "integer",
                            "description": "Ref: Item._id"
                          },
                          "Item": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "number": {
                                "type": "string"
                              },
                              "sku": {
                                "type": "string"
                              },
                              "salePrice": {
                                "type": "string",
                                "format": "number"
                              },
                              "purchasePrice": {
                                "type": "string",
                                "format": "number"
                              }
                            }
                          },
                          "CostCenterId": {
                            "type": "integer",
                            "description": "Ref: Cost Center._id"
                          },
                          "CostCenter": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "JobId": {
                            "type": "integer",
                            "description": "Ref: Job._id"
                          },
                          "Job": {
                            "type": "object",
                            "properties": {
                              "number": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "ProductId": {
                            "type": "integer",
                            "description": "Ref: Product._id"
                          },
                          "Product": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "Custom1Id": {
                            "type": "integer",
                            "description": "Ref: Custom1._id"
                          },
                          "Custom1": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "Custom2Id": {
                            "type": "integer",
                            "description": "Ref: Custom2._id"
                          },
                          "Custom2": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "Custom3Id": {
                            "type": "integer",
                            "description": "Ref: Custom3._id"
                          },
                          "Custom3": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sales-orders/{id}/lines/count": {
      "get": {
        "tags": [
          "Sales Orders"
        ],
        "summary": "Order Lines Count",
        "description": "The same filters as [Line Search](#operation/salesOrderLineSearch) can be used here.\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "SalesOrder Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/LocationId"
          },
          {
            "in": "query",
            "name": "type",
            "description": "Use this to control whether to count fulfillable/unfulfillable lines\n\nSet this to 'fulfill' to count lines that can be fulfilled, criteria for fulfillable lines as under:\n  - Line's 'quantity' is not equal to 'quantityFulFilled'\n  - Line's parent SO is not in status 'Quote', 'Rejected', 'Pending', 'Fulfilled', 'Voided', or 'Complete'\n  - Line is an item line\n  - Line does not have a linked POLine\n\nSet this to 'unfulfill' to count lines that can be unfulfulleed, criteria as under:\n  - Line has some fulfillments i.e. 'quantityFulfilled' is greater than 0\n  - Line's parent SO is not in 'Complete' status\n  - Line is an item line\n\nNot setting this will count all lines\n",
            "schema": {
              "type": "string",
              "enum": [
                "fulfill",
                "unfulfill"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Count response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/sales-orders/{id}/pdf": {
      "get": {
        "tags": [
          "Sales Orders"
        ],
        "summary": "PDF",
        "description": "Sales Order PDF",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "SalesOrder._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Base64 Buffer of the PDF\n"
          }
        }
      }
    },
    "/sales-orders/{id}/reject": {
      "put": {
        "tags": [
          "Sales Orders"
        ],
        "summary": "Reject",
        "description": "Reject a Sales Order that has been issued\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>SalesOrder REJECTED</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "SalesOrder Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "no content success"
          }
        }
      }
    },
    "/sales-orders/{id}/uncomplete": {
      "put": {
        "tags": [
          "Sales Orders"
        ],
        "summary": "Uncomplete",
        "description": "Uncomplete One Sales Order\n\nA journal entry will be posted for each sales order line that has fulfillments.\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>SalesOrder UNCOMPLETE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "SalesOrder Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No Content Success"
          }
        }
      }
    },
    "/sales-orders/line/{id}/unfulfill": {
      "put": {
        "tags": [
          "Sales Orders"
        ],
        "summary": "Unfulfill Line",
        "description": "Unfulfill a line item on a Sales Order\n\nIf inventory cost-basis is running, this will error out\n\nSales Order must be in 'partiallyFulfilled' or 'fulfilled' status\n\nIf the Return Account is specified for direct return, a 'return' stock adjustment with that account will also be added\n\nLine quantity fulfilled becomes the quantity after unfulfillment of a direct purchase line.\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>SOLineItem UNFULFILL</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Sales Order Line _id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON body to unfulfill a line item on a Sales Order\n\nDate for unfulfillment must be ahead of the latest fulfillment transaction date\n\nOne of `[Warehouse.name, WarehouseId]` is Required\n\nOne of `[ReturnAccount.number, ReturnAccountId]` is also needed for direct purchase lines to create a return stock adjustment\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "quantity",
                  "WarehouseId"
                ],
                "properties": {
                  "quantity": {
                    "type": "string",
                    "format": "number"
                  },
                  "date": {
                    "type": "string",
                    "format": "date",
                    "default": "NOW"
                  },
                  "WarehouseId": {
                    "type": "number",
                    "description": "Ref: Warehouses._id"
                  },
                  "Warehouse": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Ref: Warehouse.name"
                      }
                    }
                  },
                  "runCostBasis": {
                    "type": "boolean",
                    "default": false,
                    "description": "Run cost basis on fulfillment"
                  },
                  "ReturnAccountId": {
                    "type": "number",
                    "description": "Ref: LedgerAccount._id"
                  },
                  "ReturnAccount": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "description": "Ref: LedgerAccount.number"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/sales-orders/{id}/void": {
      "put": {
        "tags": [
          "Sales Orders"
        ],
        "summary": "Void",
        "description": "Void one Sales Order    \n\nCan only void if status is \"order\"\n\nCannot void if any lines are linked to a purchase order (unless the purchase order is voided)\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>SalesOrder VOID</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Sales Order Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "no content success"
          }
        }
      }
    },
    "/settings": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "GET",
        "description": "GET settings",
        "responses": {
          "200": {
            "description": "system settings",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ccInvoice": {
                      "type": "boolean"
                    },
                    "emailOnInvoiceIssued": {
                      "type": "boolean"
                    },
                    "emailOnSalesQuoteIssued": {
                      "type": "boolean"
                    },
                    "emailOnPurchaseOrderIssued": {
                      "type": "boolean"
                    },
                    "companyEIN": {
                      "type": "string"
                    },
                    "dateFormat": {
                      "type": "string",
                      "enum": [
                        "MM/DD/YYYY",
                        "DD/MM/YYYY",
                        "MM-DD-YYYY",
                        "DD-MM-YYYY",
                        "YYYY-MM-DD"
                      ]
                    },
                    "useLocationOnDocuments": {
                      "type": "boolean"
                    },
                    "displayItem": {
                      "type": "string",
                      "enum": [
                        "description",
                        "sku",
                        "name"
                      ]
                    },
                    "postCRJournal": {
                      "type": "boolean"
                    },
                    "confirmDelete": {
                      "type": "boolean"
                    },
                    "postVCJournal": {
                      "type": "boolean"
                    },
                    "showProducts": {
                      "type": "boolean"
                    },
                    "currencyAsCodeUI": {
                      "type": "boolean"
                    },
                    "currencyAsCodePDF": {
                      "type": "boolean"
                    },
                    "intercompanyEliminations": {
                      "type": "boolean"
                    },
                    "hideLocationFromFinancials": {
                      "type": "boolean"
                    },
                    "intercompanyEliminations2": {
                      "type": "boolean"
                    },
                    "defaultLineItemType": {
                      "type": "string",
                      "enum": [
                        "description",
                        "item"
                      ]
                    },
                    "showCostCenters": {
                      "type": "boolean"
                    },
                    "showJobs": {
                      "type": "boolean"
                    },
                    "autoApproveARPayments": {
                      "type": "boolean"
                    },
                    "autoApproveAPPayments": {
                      "type": "boolean"
                    },
                    "emailOnARCreditIssued": {
                      "type": "boolean"
                    },
                    "hideTaxInvoice": {
                      "type": "boolean"
                    },
                    "hideTaxBill": {
                      "type": "boolean"
                    },
                    "hideTaxPO": {
                      "type": "boolean"
                    },
                    "hideTaxSO": {
                      "type": "boolean"
                    },
                    "pdfDateFormat": {
                      "type": "string",
                      "enum": [
                        "MM/DD/YYYY",
                        "DD/MM/YYYY",
                        "MM-DD-YYYY",
                        "DD-MM-YYYY",
                        "YYYY-MM-DD"
                      ],
                      "default": "YYYY-MM-DD"
                    },
                    "wipSalesOrders": {
                      "type": "boolean"
                    },
                    "defaultUpdateItemPriceReceive": {
                      "type": "boolean"
                    },
                    "splitPartialReceives": {
                      "type": "boolean"
                    },
                    "draftBillPayments": {
                      "type": "boolean"
                    },
                    "pdfFormats": {
                      "type": "object"
                    },
                    "timezone": {
                      "type": "string",
                      "description": "The timezone of the company. \nExample: \"America/New_York\"\nUsed for timestamps in the UI, and for converstions of timestamps into Accounting Dates.\n"
                    },
                    "custom1_enabled": {
                      "type": "boolean"
                    },
                    "custom1_name": {
                      "type": "string"
                    },
                    "custom1_invoice": {
                      "type": "boolean"
                    },
                    "custom1_bill": {
                      "type": "boolean"
                    },
                    "custom1_po": {
                      "type": "boolean"
                    },
                    "custom1_so": {
                      "type": "boolean"
                    },
                    "custom2_enabled": {
                      "type": "boolean"
                    },
                    "custom2_name": {
                      "type": "string"
                    },
                    "custom2_invoice": {
                      "type": "boolean"
                    },
                    "custom2_bill": {
                      "type": "boolean"
                    },
                    "custom2_po": {
                      "type": "boolean"
                    },
                    "custom2_so": {
                      "type": "boolean"
                    },
                    "custom3_enabled": {
                      "type": "boolean"
                    },
                    "custom3_name": {
                      "type": "string"
                    },
                    "custom3_invoice": {
                      "type": "boolean"
                    },
                    "custom3_bill": {
                      "type": "boolean"
                    },
                    "custom3_po": {
                      "type": "boolean"
                    },
                    "custom3_so": {
                      "type": "boolean"
                    },
                    "invoiceAmountPrecision": {
                      "type": "string",
                      "format": "number",
                      "description": "min 0, max 10"
                    },
                    "billAmountPrecision": {
                      "type": "string",
                      "format": "number",
                      "description": "min 0, max 10"
                    },
                    "poAmountPrecision": {
                      "type": "string",
                      "format": "number",
                      "description": "min 0, max 10"
                    },
                    "soAmountPrecision": {
                      "type": "string",
                      "format": "number",
                      "description": "min 0, max 10"
                    },
                    "cryptoPricePrecision": {
                      "type": "string",
                      "format": "number",
                      "description": "min 0, max 10"
                    },
                    "InvoiceEmailTemplateId": {
                      "type": "number",
                      "description": "Ref: Template._id"
                    },
                    "POEmailTemplateId": {
                      "type": "number",
                      "description": "Ref: Template._id"
                    },
                    "SOEmailTemplateId": {
                      "type": "number",
                      "description": "Ref: Template._id"
                    },
                    "ARCreditEmailTemplateId": {
                      "type": "number",
                      "description": "Ref: Template._id"
                    },
                    "defaultWIPId": {
                      "type": "number",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "defaultSalesTaxId": {
                      "type": "number",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "defaultOtherComprehensiveIncomeId": {
                      "type": "number",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "defaultAccumulatedOtherComprehensiveIncomeId": {
                      "type": "number",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "defaultRetainedEarningsId": {
                      "type": "number",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "defaultBillPaymentId": {
                      "type": "number",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "defaultAPICPayableId": {
                      "type": "number",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "defaultAPICReceivableId": {
                      "type": "number",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "defaultARICPayableId": {
                      "type": "number",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "defaultARICReceivableId": {
                      "type": "number",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "defaultUnappliedCreditId": {
                      "type": "number",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "defaultUnappliedCashId": {
                      "type": "number",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "defaultAccountsReceivableId": {
                      "type": "number",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "defaultAccountsPayableId": {
                      "type": "number",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "defaultCashId": {
                      "type": "number",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "defaultInventoryAccrualId": {
                      "type": "number",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "defaultItemInventoryAccrualId": {
                      "type": "number",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "defaultItemInvoiceAccountId": {
                      "type": "number",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "defaultItemInventoryAssetId": {
                      "type": "number",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "defaultItemCOGSId": {
                      "type": "number",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "defaultRevId": {
                      "type": "number",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "defaultABDId": {
                      "type": "number",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "inventoryCostingMethod": {
                      "type": "string",
                      "enum": [
                        "fifo",
                        "avg"
                      ],
                      "default": "fifo"
                    },
                    "cryptoHomeCurrency": {
                      "type": "string",
                      "description": "Ref: Currency.code"
                    },
                    "cryptoCostingMethod": {
                      "type": "string",
                      "enum": [
                        "fifo"
                      ]
                    },
                    "immaterialCostBasisErrorLedgerAccountId": {
                      "type": "number",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "immaterialCostBasisErrorReference": {
                      "type": "string"
                    },
                    "immaterialCostBasisErrorThreshold": {
                      "type": "string",
                      "format": "number"
                    },
                    "currencySupport": {
                      "type": "boolean"
                    },
                    "billingLimits": {
                      "type": "object",
                      "description": "List of billing limits"
                    },
                    "customCurrency": {
                      "type": "boolean"
                    },
                    "cryptoImpairment": {
                      "type": "boolean"
                    },
                    "brightpearl": {
                      "type": "boolean"
                    },
                    "dashboards": {
                      "type": "boolean"
                    },
                    "SandBox": {
                      "type": "boolean"
                    },
                    "reconciliationsv2": {
                      "type": "boolean"
                    },
                    "plaidType": {
                      "type": "string",
                      "enum": [
                        "development",
                        "production"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Settings"
        ],
        "summary": "Update",
        "description": "Update Settings\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Settings UPDATE</div>\n</div>\n",
        "requestBody": {
          "description": "JSON body containing key and values to update\n\nDefault Ledger accounts must be active\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ccInvoice": {
                    "type": "boolean"
                  },
                  "costingMethod": {
                    "type": "string"
                  },
                  "emailOnInvoiceIssued": {
                    "type": "boolean"
                  },
                  "emailOnSalesQuoteIssued": {
                    "type": "boolean"
                  },
                  "emailOnPurchaseOrderIssued": {
                    "type": "boolean"
                  },
                  "companyEIN": {
                    "type": "string"
                  },
                  "dateFormat": {
                    "type": "string",
                    "enum": [
                      "MM/DD/YYYY",
                      "DD/MM/YYYY",
                      "MM-DD-YYYY",
                      "DD-MM-YYYY",
                      "YYYY-MM-DD"
                    ]
                  },
                  "useLocationOnDocuments": {
                    "type": "boolean"
                  },
                  "displayItem": {
                    "type": "string",
                    "enum": [
                      "description",
                      "sku",
                      "name"
                    ]
                  },
                  "postCRJournal": {
                    "type": "boolean"
                  },
                  "confirmDelete": {
                    "type": "boolean"
                  },
                  "postVCJournal": {
                    "type": "boolean"
                  },
                  "showProducts": {
                    "type": "boolean"
                  },
                  "currencyAsCodeUI": {
                    "type": "boolean"
                  },
                  "currencyAsCodePDF": {
                    "type": "boolean"
                  },
                  "intercompanyEliminations": {
                    "type": "boolean"
                  },
                  "hideLocationFromFinancials": {
                    "type": "boolean"
                  },
                  "intercompanyEliminations2": {
                    "type": "boolean"
                  },
                  "defaultLineItemType": {
                    "type": "string",
                    "enum": [
                      "description",
                      "item"
                    ]
                  },
                  "showCostCenters": {
                    "type": "boolean"
                  },
                  "showJobs": {
                    "type": "boolean"
                  },
                  "autoApproveARPayments": {
                    "type": "boolean"
                  },
                  "autoApproveAPPayments": {
                    "type": "boolean"
                  },
                  "emailOnARCreditIssued": {
                    "type": "boolean"
                  },
                  "hideTaxInvoice": {
                    "type": "boolean"
                  },
                  "hideTaxBill": {
                    "type": "boolean"
                  },
                  "hideTaxPO": {
                    "type": "boolean"
                  },
                  "hideTaxSO": {
                    "type": "boolean"
                  },
                  "pdfDateFormat": {
                    "type": "string",
                    "enum": [
                      "MM/DD/YYYY",
                      "DD/MM/YYYY",
                      "MM-DD-YYYY",
                      "DD-MM-YYYY",
                      "YYYY-MM-DD"
                    ],
                    "default": "YYYY-MM-DD"
                  },
                  "wipSalesOrders": {
                    "type": "boolean"
                  },
                  "defaultUpdateItemPriceReceive": {
                    "type": "boolean"
                  },
                  "splitPartialReceives": {
                    "type": "boolean"
                  },
                  "draftBillPayments": {
                    "type": "boolean"
                  },
                  "timezone": {
                    "type": "string",
                    "description": "The timezone of the company. \nExample: \"America/New_York\"\nUsed for timestamps in the UI, and for converstions of timestamps into Accounting Dates.\n"
                  },
                  "custom1_enabled": {
                    "type": "boolean"
                  },
                  "custom1_name": {
                    "type": "string"
                  },
                  "custom1_invoice": {
                    "type": "boolean"
                  },
                  "custom1_bill": {
                    "type": "boolean"
                  },
                  "custom1_po": {
                    "type": "boolean"
                  },
                  "custom1_so": {
                    "type": "boolean"
                  },
                  "custom2_enabled": {
                    "type": "boolean"
                  },
                  "custom2_name": {
                    "type": "string"
                  },
                  "custom2_invoice": {
                    "type": "boolean"
                  },
                  "custom2_bill": {
                    "type": "boolean"
                  },
                  "custom2_po": {
                    "type": "boolean"
                  },
                  "custom2_so": {
                    "type": "boolean"
                  },
                  "custom3_enabled": {
                    "type": "boolean"
                  },
                  "custom3_name": {
                    "type": "string"
                  },
                  "custom3_invoice": {
                    "type": "boolean"
                  },
                  "custom3_bill": {
                    "type": "boolean"
                  },
                  "custom3_po": {
                    "type": "boolean"
                  },
                  "custom3_so": {
                    "type": "boolean"
                  },
                  "invoiceAmountPrecision": {
                    "type": "string",
                    "format": "number",
                    "description": "min 0, max 10"
                  },
                  "billAmountPrecision": {
                    "type": "string",
                    "format": "number",
                    "description": "min 0, max 10"
                  },
                  "poAmountPrecision": {
                    "type": "string",
                    "format": "number",
                    "description": "min 0, max 10"
                  },
                  "soAmountPrecision": {
                    "type": "string",
                    "format": "number",
                    "description": "min 0, max 10"
                  },
                  "cryptoPricePrecision": {
                    "type": "string",
                    "format": "number",
                    "description": "min 0, max 10"
                  },
                  "InvoiceEmailTemplateId": {
                    "type": "number",
                    "description": "Ref: Template._id"
                  },
                  "POEmailTemplateId": {
                    "type": "number",
                    "description": "Ref: Template._id"
                  },
                  "SOEmailTemplateId": {
                    "type": "number",
                    "description": "Ref: Template._id"
                  },
                  "ARCreditEmailTemplateId": {
                    "type": "number",
                    "description": "Ref: Template._id"
                  },
                  "defaultWIPId": {
                    "type": "number",
                    "description": "Ref: LedgerAccount._id"
                  },
                  "defaultSalesTaxId": {
                    "type": "number",
                    "description": "Ref: LedgerAccount._id"
                  },
                  "defaultOtherComprehensiveIncomeId": {
                    "type": "number",
                    "description": "Ref: LedgerAccount._id\n\nOnly accounts of type 'Equity' are allowed here\n"
                  },
                  "defaultAccumulatedOtherComprehensiveIncomeId": {
                    "type": "number",
                    "description": "Ref: LedgerAccount._id\n\nOnly accounts of type 'Equity' are allowed here\n"
                  },
                  "defaultRetainedEarningsId": {
                    "type": "number",
                    "description": "Ref: LedgerAccount._id\n\nOnly accounts of type 'Equity' are allowed here\n"
                  },
                  "defaultBillPaymentId": {
                    "type": "number",
                    "description": "Ref: LedgerAccount._id"
                  },
                  "defaultAPICPayableId": {
                    "type": "number",
                    "description": "Ref: LedgerAccount._id"
                  },
                  "defaultAPICReceivableId": {
                    "type": "number",
                    "description": "Ref: LedgerAccount._id"
                  },
                  "defaultARICPayableId": {
                    "type": "number",
                    "description": "Ref: LedgerAccount._id"
                  },
                  "defaultARICReceivableId": {
                    "type": "number",
                    "description": "Ref: LedgerAccount._id"
                  },
                  "defaultUnappliedCreditId": {
                    "type": "number",
                    "description": "Ref: LedgerAccount._id"
                  },
                  "defaultUnappliedCashId": {
                    "type": "number",
                    "description": "Ref: LedgerAccount._id"
                  },
                  "defaultAccountsReceivableId": {
                    "type": "number",
                    "description": "Ref: LedgerAccount._id"
                  },
                  "defaultAccountsPayableId": {
                    "type": "number",
                    "description": "Ref: LedgerAccount._id"
                  },
                  "defaultCashId": {
                    "type": "number",
                    "description": "Ref: LedgerAccount._id"
                  },
                  "defaultInventoryAccrualId": {
                    "type": "number",
                    "description": "Ref: LedgerAccount._id"
                  },
                  "defaultItemInventoryAccrualId": {
                    "type": "number",
                    "description": "Ref: LedgerAccount._id"
                  },
                  "defaultItemInvoiceAccountId": {
                    "type": "number",
                    "description": "Ref: LedgerAccount._id"
                  },
                  "defaultItemInventoryAssetId": {
                    "type": "number",
                    "description": "Ref: LedgerAccount._id"
                  },
                  "defaultItemCOGSId": {
                    "type": "number",
                    "description": "Ref: LedgerAccount._id"
                  },
                  "defaultRevId": {
                    "type": "number",
                    "description": "Ref: LedgerAccount._id"
                  },
                  "defaultABDId": {
                    "type": "number",
                    "description": "Ref: LedgerAccount._id"
                  },
                  "inventoryCostingMethod": {
                    "type": "string",
                    "enum": [
                      "fifo",
                      "avg"
                    ],
                    "default": "fifo",
                    "description": "Cannot be updated if there are any existing stock adjustments"
                  },
                  "cryptoHomeCurrency": {
                    "type": "string",
                    "description": "\"Ref: Currency.code\"\nCannot be updated if there are any existing crypto transactions\n"
                  },
                  "immaterialCostBasisErrorLedgerAccountId": {
                    "type": "number",
                    "description": "Ref: LedgerAccount._id"
                  },
                  "immaterialCostBasisErrorReference": {
                    "type": "string"
                  },
                  "immaterialCostBasisErrorThreshold": {
                    "type": "string",
                    "format": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "no content success"
          }
        }
      }
    },
    "/settings/sequence": {
      "get": {
        "tags": [
          "Settings"
        ],
        "summary": "GET Sequence",
        "description": "GET sequence numbers",
        "responses": {
          "200": {
            "description": "sequence numbers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "invoice": {
                      "type": "number"
                    },
                    "bill": {
                      "type": "number"
                    },
                    "po": {
                      "type": "number"
                    },
                    "so": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Settings"
        ],
        "summary": "Update Sequence",
        "description": "Update Sequence numbers\n",
        "requestBody": {
          "description": "JSON body containing key and values to update\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "type",
                  "number"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "invoice",
                      "bill",
                      "po",
                      "so"
                    ]
                  },
                  "number": {
                    "type": "number",
                    "minimum": 2,
                    "maximum": 999999998,
                    "description": "Must be greater than current highest document number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "no content success"
          }
        }
      }
    },
    "/shipment-receipts": {
      "get": {
        "tags": [
          "Shipment Receipts"
        ],
        "summary": "Search",
        "operationId": "shipmentReceiptsSearch",
        "description": "| Field       | Filterable | Sortable |\n|---------------------|:--:|:--:|\n|_id                     | ✅ | ✅ |\n|dateReceived            | ✅ | ✅ |\n|postedDate              | ✅ | ✅ |\n|reference               | ✅ | ❌ |\n|VendorId                | ✅ | ❌ |\n|createdAt               | ✅ | ✅ |\n|updatedAt               | ✅ | ✅ |\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "in": "query",
            "name": "order",
            "description": "Order to return results in. ex \"date:desc\"",
            "schema": {
              "type": "string",
              "default": "_id:ASC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Shipment Receipts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "integer"
                          },
                          "dateReceived": {
                            "type": "string",
                            "format": "date"
                          },
                          "postedDate": {
                            "type": "string",
                            "format": "date"
                          },
                          "reference": {
                            "type": "string"
                          },
                          "VendorId": {
                            "type": "number"
                          },
                          "Vendor": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string"
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Shipment Receipts"
        ],
        "summary": "Create",
        "description": "Creates a new Shipment Receipt\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>ShipmentReceipt CREATE</div>\n  <div>SOLineItem CREATE - created by splitPartialReceives</div>\n  <div>POLineItem CREATE - created by splitPartialReceives</div>\n  <div>SOLineItem UPDATE - existing line qtyFulfilled updated</div>\n  <div>POLineItem UPDATE - existing line qtyFulfilled updated</div>\n  <div>Item UPDATE - if the default recieve price was changed</div>\n</div>\n",
        "requestBody": {
          "description": "JSON body to create new Shipment Receipts\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "dateReceived",
                  "ShipmentReceiptLines"
                ],
                "properties": {
                  "dateReceived": {
                    "type": "string",
                    "format": "date"
                  },
                  "postedDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Defaults to dateReceived if not passed"
                  },
                  "reference": {
                    "type": "string"
                  },
                  "dontRunCostBasis": {
                    "type": "boolean",
                    "default": false,
                    "description": "Set to true to prevent running costbasis upon success"
                  },
                  "ShipmentReceiptLines": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "quantityReceived",
                        "amount",
                        "POLineItemId"
                      ],
                      "properties": {
                        "POLineItemId": {
                          "type": "integer"
                        },
                        "WarehouseId": {
                          "type": "integer",
                          "description": "required IF POLineItemId is set with an ItemId. Ignored if this PO Line is a direct purchase"
                        },
                        "quantityReceived": {
                          "type": "string",
                          "format": "number",
                          "example": 1.25,
                          "description": "Required. val > 0 & val < po line quantity left to receive"
                        },
                        "amount": {
                          "type": "string",
                          "format": "number",
                          "example": 1.25,
                          "description": "Required. val > 0. unit price per 1 quantity"
                        },
                        "updateDefaultPrice": {
                          "type": "boolean",
                          "default": false,
                          "description": "If true, sets Item default purchase price to the received amount"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Shipment Receipt",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "dateReceived": {
                      "type": "string",
                      "format": "date"
                    },
                    "VendorId": {
                      "type": "integer"
                    },
                    "reference": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shipment-receipts/lines": {
      "get": {
        "tags": [
          "Shipment Receipts"
        ],
        "summary": "Line Search",
        "operationId": "shipmentReceiptsLineSearch",
        "description": "| Field       | Filterable | Sortable |\n|---------------------|:--:|:--:|\n|_id                            | ✅ | ✅ |\n|quantityReceived               | ✅ | ✅ |\n|amount                         | ✅ | ✅ |\n|status                         | ✅ | ❌ |\n|ShipmentReceiptId              | ✅ | ❌ |\n|WarehouseId                    | ✅ | ❌ |\n|ItemId                         | ✅ | ❌ |\n|POLineItemId                   | ✅ | ❌ |\n|PurchaseOrderId                | ✅ | ❌ |\n|SOLineItemId                   | ✅ | ❌ |\n|SalesOrderId                   | ✅ | ❌ |\n|VendorId                       | ✅ | ❌ |\n|ReceiveJournalId               | ✅ | ❌ |\n|ReversalJournalId              | ✅ | ❌ |\n|InventoryReceivingAccountId    | ✅ | ❌ |          \n|ShipmentReceipt.dateReceived   | ✅ | ✅ |\n|ShipmentReceipt.postedDate     | ✅ | ✅ |\n|ShipmentReceipt.reference      | ✅ | ❌ |\n|createdAt                      | ✅ | ✅ |\n|updatedAt                      | ✅ | ✅ |\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "in": "query",
            "name": "order",
            "description": "Order to return results in. ex \"date:desc\"",
            "schema": {
              "type": "string",
              "default": "_id:ASC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Shipment Receipt Lines",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "integer"
                          },
                          "quantityReceived": {
                            "type": "string",
                            "format": "number"
                          },
                          "amount": {
                            "type": "string",
                            "format": "number"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "received",
                              "voided"
                            ]
                          },
                          "ShipmentReceiptId": {
                            "type": "integer",
                            "description": "Ref: ShipmentReceipts._id"
                          },
                          "WarehouseId": {
                            "type": "integer",
                            "description": "Ref: Warehouses._id"
                          },
                          "ItemId": {
                            "type": "integer",
                            "description": "Ref: Items._id"
                          },
                          "POLineItemId": {
                            "type": "integer",
                            "description": "Ref: POLineItems._id"
                          },
                          "PurchaseOrderId": {
                            "type": "integer",
                            "description": "Ref: PurchaseOrders._id"
                          },
                          "SOLineItemId": {
                            "type": "integer",
                            "description": "Ref: SOLineItems._id"
                          },
                          "SalesOrderId": {
                            "type": "integer",
                            "description": "Ref: SalesOrders._id"
                          },
                          "VendorId": {
                            "type": "integer",
                            "description": "Ref: Vendors._id"
                          },
                          "InventoryReceivingAccountId": {
                            "type": "number",
                            "description": "Ref: LedgerAccounts._id"
                          },
                          "ReceiveJournalId": {
                            "type": "number",
                            "description": "Ref: Journals._id"
                          },
                          "ReversalJournalId": {
                            "type": "number",
                            "description": "Ref: Journals._id"
                          },
                          "ReceiveJournal": {
                            "type": "object",
                            "properties": {
                              "number": {
                                "type": "integer"
                              }
                            }
                          },
                          "ReversalJournal": {
                            "type": "object",
                            "properties": {
                              "number": {
                                "type": "integer"
                              }
                            }
                          },
                          "ShipmentReceipt": {
                            "type": "object",
                            "properties": {
                              "dateReceived": {
                                "type": "string",
                                "format": "date"
                              },
                              "postedDate": {
                                "type": "string",
                                "format": "date"
                              },
                              "reference": {
                                "type": "string"
                              }
                            }
                          },
                          "Vendor": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string"
                              }
                            }
                          },
                          "Warehouse": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "Item": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "number": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "sku": {
                                "type": "string"
                              }
                            }
                          },
                          "POLineItem": {
                            "type": "object",
                            "properties": {
                              "description": {
                                "type": "string"
                              }
                            }
                          },
                          "PurchaseOrder": {
                            "type": "object",
                            "properties": {
                              "number": {
                                "type": "string"
                              },
                              "currency": {
                                "type": "string"
                              }
                            }
                          },
                          "SalesOrder": {
                            "type": "object",
                            "properties": {
                              "number": {
                                "type": "string"
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shipment-receipts/lines/count": {
      "get": {
        "tags": [
          "Shipment Receipts"
        ],
        "summary": "Lines Count",
        "description": "The same filters as [Line Search](#operation/shipmentReceiptsLineSearch) can be used here.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          }
        ],
        "responses": {
          "200": {
            "description": "Count response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/shipment-receipts/count": {
      "get": {
        "tags": [
          "Shipment Receipts"
        ],
        "summary": "Count",
        "description": "The same filters as [Search](#operation/shipmentReceiptsSearch) can be used here.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          }
        ],
        "responses": {
          "200": {
            "description": "Count response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/shipment-receipts/{id}": {
      "get": {
        "tags": [
          "Shipment Receipts"
        ],
        "summary": "One",
        "description": "Get one Shipment Receipt",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ShipmentReceipt._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Shipment Receipt",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "dateReceived": {
                      "type": "string",
                      "format": "date"
                    },
                    "postedDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "reference": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "VendorId": {
                      "type": "integer",
                      "description": "Ref: Vendors._id"
                    },
                    "Vendor": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer"
                        },
                        "name": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        }
                      }
                    },
                    "ShipmentReceiptLines": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "integer"
                          },
                          "quantityReceived": {
                            "type": "string",
                            "format": "number"
                          },
                          "amount": {
                            "type": "string",
                            "format": "number"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "received",
                              "voided"
                            ]
                          },
                          "ShipmentReceiptId": {
                            "type": "integer",
                            "description": "Ref: ShipmentReceipts._id"
                          },
                          "WarehouseId": {
                            "type": "integer",
                            "description": "Ref: Warehouses._id"
                          },
                          "POLineItemId": {
                            "type": "integer",
                            "description": "Ref: POLineItems._id"
                          },
                          "SOLineItemId": {
                            "type": "integer",
                            "description": "Ref: SOLineItems._id"
                          },
                          "ItemId": {
                            "type": "integer",
                            "description": "Ref: Items._id"
                          },
                          "ReceiveJournalId": {
                            "type": "integer",
                            "description": "Ref: Journals._id"
                          },
                          "ReversalJournalId": {
                            "type": "integer",
                            "description": "Ref: Journals._id"
                          },
                          "ReceiveJournal": {
                            "type": "object",
                            "properties": {
                              "number": {
                                "type": "integer"
                              }
                            }
                          },
                          "ReversalJournal": {
                            "type": "object",
                            "properties": {
                              "number": {
                                "type": "integer"
                              }
                            }
                          },
                          "Warehouse": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "Item": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "sku": {
                                "type": "string"
                              },
                              "number": {
                                "type": "integer"
                              }
                            }
                          },
                          "POLineItem": {
                            "type": "object",
                            "properties": {
                              "PurchaseOrderId": {
                                "type": "integer",
                                "description": "Ref: PurchaseOrders._id"
                              },
                              "description": {
                                "type": "string"
                              },
                              "PurchaseOrder": {
                                "type": "object",
                                "properties": {
                                  "number": {
                                    "type": "integer"
                                  },
                                  "currency": {
                                    "type": "string"
                                  },
                                  "InventoryReceivingAccountId": {
                                    "type": "integer",
                                    "description": "Ref: LedgerAccounts._id"
                                  }
                                }
                              }
                            }
                          },
                          "SOLineItem": {
                            "type": "object",
                            "properties": {
                              "SalesOrderId": {
                                "type": "integer",
                                "description": "Ref: SalesOrders._id"
                              },
                              "SalesOrder": {
                                "type": "object",
                                "properties": {
                                  "number": {
                                    "type": "integer"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/shipment-receipts/line/{id}/void": {
      "put": {
        "tags": [
          "Shipment Receipts"
        ],
        "summary": "Void Line",
        "description": "Voids a Shipment Receipt line\n\nThrows an error if inventory cost-basis is running\n\nIf multiple fulfillments at different prices were performed, their weighted average is used as price of adjustment\n\nStock adjustments are only created if there are linked adjustments to the receipt line\n\nFor cases when the shipment line has a linked Sales Order line, the following applies:\n  - Cannot only void line if sales order is 'Partially Fulfilled' or 'Fulfilled'\n  - Cannot void if the linked sales order line has unfulfullments that are not linked to voided shipment receipt lines\n  - Sales order line quantity fulfilled is reduced\n  - Sales order status is updated if needed\n  - 'Unfulfill' stock adjustment is created to undo the direct purchase fulfillment\n\nIf an item of type 'Consume' is used in the receipt line:\n  - a 'VoidConsume' type adjustment is ccreated to undo the consume stock adjustment\n  - price is set to the weighted average (in case of multiple fulfillments) or shipment receipt line price\n\nCreates a 'VoidReceive' adjustment entry to void the receive adjustment\nCost-basis is set to the weighted average (in case of multiple fulfillments) or shipment receipt line price\n\nPurchase order line quantity received is updated\n\nPurchase order status is updated if needed\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>ShipmentReceiptLine VOID</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ShipmentReceiptLine._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "runCostBasis": {
                    "type": "boolean",
                    "default": false,
                    "description": "Set to true to run inventory cost-basis upon success"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "no content success"
          }
        }
      }
    },
    "/statements": {
      "get": {
        "tags": [
          "Statements"
        ],
        "summary": "Search",
        "description": "| Field       | Filterable | Sortable |\n|---------------------|:--:|:--:|\n|_id                  | ✅ | ❌ |\n|reference            | ✅ | ❌ |\n|description          | ✅ | ❌ |\n|LedgerAccountId      | ✅ | ❌ |\n|LocationId           | ✅ | ❌ |\n|status               | ✅ | ❌ |\n|currency             | ✅ | ❌ |\n|endDate              | ✅ | ✅ |\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/LocationId"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Statements",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "integer"
                          },
                          "reference": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "LedgerAccountId": {
                            "type": "integer",
                            "description": "Ref: LedgerAccount._id"
                          },
                          "LocationId": {
                            "type": "integer",
                            "description": "Ref: Location._id"
                          },
                          "status": {
                            "type": "string"
                          },
                          "currency": {
                            "type": "string",
                            "description": "Ref: Currency.code"
                          },
                          "endDate": {
                            "type": "string",
                            "format": "date"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "balance": {
                            "type": "string",
                            "format": "number"
                          },
                          "LedgerAccount": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "number": {
                                "type": "string"
                              }
                            }
                          },
                          "Location": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Statements"
        ],
        "summary": "Create",
        "description": "Creates a new Statement\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Statement CREATE</div>\n</div>\n",
        "requestBody": {
          "description": "JSON body to create new Statement\n\nOnly one of `[LedgerAccount.number, LedgerAccountId]` can be set\nOnly one of `[Location.id, LocationId]` can be set\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "LedgerAccountId",
                  "LocationId",
                  "currency",
                  "endDate",
                  "balance"
                ],
                "properties": {
                  "reference": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "LedgerAccountId": {
                    "type": "integer",
                    "description": "Ref: LedgerAccount._id"
                  },
                  "LocationId": {
                    "type": "integer",
                    "description": "Ref: Location._id"
                  },
                  "currency": {
                    "type": "string",
                    "description": "Ref: Currency.code"
                  },
                  "balance": {
                    "type": "string",
                    "format": "number"
                  },
                  "endDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "LedgerAccount": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string"
                      }
                    }
                  },
                  "Location": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Statement",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "reference": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "LedgerAccountId": {
                      "type": "integer",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "LocationId": {
                      "type": "integer",
                      "description": "Ref: Location._id"
                    },
                    "status": {
                      "type": "string"
                    },
                    "balance": {
                      "type": "string",
                      "format": "number"
                    },
                    "currency": {
                      "type": "string",
                      "description": "Ref: Currency.code"
                    },
                    "endDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/statements/{id}/close": {
      "put": {
        "tags": [
          "Statements"
        ],
        "summary": "Close",
        "description": "Close one Statement\n\nStatement can only be closed if all previous statements are \nclosed that match this statements LedgerAccountId, LocationId, \ncurrency combo\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Statement CLOSE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Statement Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "no content success"
          }
        }
      }
    },
    "/statements/{id}": {
      "delete": {
        "tags": [
          "Statements"
        ],
        "summary": "Delete",
        "description": "Delete one Statement\n\nCan only delete if status is 'open'\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Statement DELETE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Statement Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "no content success"
          }
        }
      },
      "get": {
        "tags": [
          "Statements"
        ],
        "summary": "One",
        "description": "Get one Statement",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Statement Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "One Statement",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "reference": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "LedgerAccountId": {
                      "type": "integer",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "LocationId": {
                      "type": "integer",
                      "description": "Ref: Location._id"
                    },
                    "status": {
                      "type": "string"
                    },
                    "beginningBalance": {
                      "type": "string"
                    },
                    "balance": {
                      "type": "string",
                      "format": "number"
                    },
                    "currency": {
                      "type": "string",
                      "description": "Ref: Currency.code"
                    },
                    "endDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "lastStatementDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "LedgerAccount": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "number": {
                          "type": "string"
                        }
                      }
                    },
                    "Location": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "id": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/statements/{id}/open": {
      "put": {
        "tags": [
          "Statements"
        ],
        "summary": "Open",
        "description": "Re-open one Statement\n\nStatement can only be re-opened if all later statements are \nclosed that match this statements LedgerAccountId, LocationId, \ncurrency combo\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Statement OPEN</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Statement Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "no content success"
          }
        }
      }
    },
    "/statements/transactions/reconcile": {
      "put": {
        "tags": [
          "Statements"
        ],
        "summary": "Reconcile",
        "description": "Reconcile Transactions\n\nTransactions can only be reconciled if their corresponding \nstatement (by LedgerAccount, currency, Location combo) is not closed\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Transaction RECONCILE - objectId will be a csv list of Transaction._ids which are reconciled</div>\n</div>\n",
        "requestBody": {
          "description": "JSON body of TransactionIds to reconcile\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "TransactionIds": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "no content success"
          }
        }
      }
    },
    "/statements/transactions/unreconcile": {
      "put": {
        "tags": [
          "Statements"
        ],
        "summary": "UnReconcile",
        "description": "UnReconcile Transactions\n\nTransactions can only be unreconciled if their corresponding \nstatement (by LedgerAccount, currency, Location combo) is not closed\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Transaction UNRECONCILE - objectId will be a csv list of Transaction._ids which are reconciled</div>\n</div>\n",
        "requestBody": {
          "description": "JSON body of TransactionIds to unreconcile\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "TransactionIds": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "no content success"
          }
        }
      }
    },
    "/stock-adjustments": {
      "get": {
        "operationId": "stockAdjustmentsSearch",
        "tags": [
          "Stock Adjustments"
        ],
        "summary": "Search",
        "description": "| Field       | Filterable | Sortable |\n|---------------------|:--:|:--:|\n|_id                        | ✅ | ✅ |\n|ItemId                     | ✅ | ❌ |\n|description                | ✅ | ❌ |\n|WarehouseId                | ✅ | ❌ |\n|locked                     | ✅ | ❌ |\n|transactionDate            | ✅ | ✅ |\n|postedDate                 | ✅ | ✅ |\n|AdjustmentLedgerAccountId  | ✅ | ❌ |\n|JournalId                  | ✅ | ❌ |\n|type                       | ✅ | ❌ |\n|PurchaseOrderId            | ✅ | ❌ |\n|POLineItemId               | ✅ | ❌ |\n|SalesOrderId               | ✅ | ❌ |\n|SOLineItemId               | ✅ | ❌ |\n|TransferId                 | ✅ | ❌ |\n|quantity                   | ✅ | ✅ |\n|qtyAvailable               | ✅ | ✅ |\n|qtyPicked                  | ✅ | ✅ |\n|currency                   | ✅ | ❌ |\n|price                      | ✅ | ✅ |\n|createdAt                  | ✅ | ✅ |\n|updatedAt                  | ✅ | ✅ |\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "in": "query",
            "name": "order",
            "description": "Order to return results in. ex \"date:desc\"",
            "schema": {
              "type": "string",
              "default": "transactionDate:DESC"
            }
          },
          {
            "in": "query",
            "name": "LocationId",
            "description": "Will include Stock Adjustments that have a Warehouse with this \nLocation and its children\n\nFilters on LocationId can further limit data.\n",
            "schema": {
              "type": "number",
              "description": "Ref: Warehouse.LocationId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Stock Adjustments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/StockAdjustmentSearchItem"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Stock Adjustments"
        ],
        "summary": "Adjust Stock",
        "description": "Creates a new Stock Adjustment \n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>StockAdjustment CREATE</div>\n</div>\n",
        "requestBody": {
          "description": "JSON body to create new Stock Adjustment",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "type",
                  "ItemId",
                  "WarehouseId",
                  "AdjustmentLedgerAccountId",
                  "transactionDate",
                  "quantity"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "adjustment",
                      "return"
                    ],
                    "description": "Standard type is adjustment. Return is used for received shipment receipts."
                  },
                  "dontRunCostBasis": {
                    "type": "boolean",
                    "default": false,
                    "description": "Set to true to prevent running costbasis upon success"
                  },
                  "transactionDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Cannot be in the future"
                  },
                  "postedDate": {
                    "type": "string",
                    "format": "date",
                    "default": "transactionDate"
                  },
                  "quantity": {
                    "type": "string",
                    "format": "number",
                    "description": "Cannot = 0\nMust be < 0 for type = 'return'\n"
                  },
                  "description": {
                    "type": "string"
                  },
                  "price": {
                    "type": "string",
                    "format": "number",
                    "description": "Required if quantity > 0\nMust be > 0\nNot allowed for type = 'return'\n"
                  },
                  "currency": {
                    "type": "string",
                    "format": "ISO4217 3 Char Code",
                    "description": "\"Ref: Currency.code\"\nRequired if price is specified\nNot allowed for type = 'return'\n"
                  },
                  "ItemId": {
                    "type": "integer",
                    "description": "Ref: Item._id"
                  },
                  "WarehouseId": {
                    "type": "integer",
                    "description": "Ref: Warehouse._id"
                  },
                  "AdjustmentLedgerAccountId": {
                    "type": "integer",
                    "description": "Ref: LedgerAccount._id"
                  },
                  "POLineItemId": {
                    "type": "integer",
                    "description": "Ref: POLineItem._id\nRequired if type = 'return'\nNot allowed for type = 'adjustment'\n"
                  },
                  "ShipmentReceiptLineId": {
                    "type": "integer",
                    "description": "Ref: ShipmentReceiptLine._id\nRequired if type = 'return'\nNot allowed for type = 'adjustment'\n"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created Stock Adjustment",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "transactionDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "postedDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "quantity": {
                      "type": "string",
                      "format": "number"
                    },
                    "qtyPicked": {
                      "type": "string",
                      "format": "number"
                    },
                    "price": {
                      "type": "string",
                      "format": "number"
                    },
                    "costBasis": {
                      "type": "string",
                      "format": "number"
                    },
                    "qtyAvailable": {
                      "type": "string",
                      "format": "number"
                    },
                    "avgCost": {
                      "type": "string",
                      "format": "number"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "fulfill",
                        "receive",
                        "adjustment",
                        "transfer",
                        "production",
                        "return"
                      ]
                    },
                    "TransferId": {
                      "type": "integer"
                    },
                    "locked": {
                      "type": "boolean"
                    },
                    "currency": {
                      "type": "string"
                    },
                    "currencyRate": {
                      "type": "string",
                      "format": "number"
                    },
                    "ItemId": {
                      "type": "integer"
                    },
                    "WarehouseId": {
                      "type": "integer"
                    },
                    "AdjustmentLedgerAccountId": {
                      "type": "integer"
                    },
                    "JournalId": {
                      "type": "integer"
                    },
                    "POLineItemId": {
                      "type": "integer"
                    },
                    "SOLineItemId": {
                      "type": "integer"
                    },
                    "ShipmentReceiptLineId": {
                      "type": "integer"
                    },
                    "description": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/stock-adjustments/{id}/cost-layers": {
      "get": {
        "tags": [
          "Stock Adjustments"
        ],
        "summary": "Cost Layers",
        "description": "Gets cost-layers for an adjustment\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "StockAdjustment._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Cost Layers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "integer"
                      },
                      "date": {
                        "type": "string",
                        "format": "date"
                      },
                      "qtyPicked": {
                        "type": "string",
                        "format": "number"
                      },
                      "price": {
                        "type": "string",
                        "format": "number"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/stock-adjustments/count": {
      "get": {
        "tags": [
          "Stock Adjustments"
        ],
        "summary": "Count",
        "description": "The same filters as [Search](#operation/stockAdjustmentsSearch) can be used here.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/LocationId"
          }
        ],
        "responses": {
          "200": {
            "description": "Count response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/stock-adjustments/{id}": {
      "delete": {
        "tags": [
          "Stock Adjustments"
        ],
        "summary": "Delete",
        "description": "Delete one Stock Adjustments\n\nCan only delete if status if type is `adjustment` and `locked` is false.\n\nThe linked journal entry will be deleted if it exists.\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>StockAdjustment DELETE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Statement Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "runCostBasis",
            "description": "If true, will run cost basis calculation after delete succeeds.\n",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "204": {
            "description": "no content success"
          }
        }
      },
      "put": {
        "tags": [
          "Stock Adjustments"
        ],
        "summary": "Update Stock Adjustment",
        "description": "Update Stock Adjustment \n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>StockAdjustment UPDATE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Stock Adjustment Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON body to update Stock Adjustment",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dontRunCostBasis": {
                    "type": "boolean",
                    "default": false,
                    "description": "Set to true to prevent running costbasis upon success"
                  },
                  "transactionDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Cannot be in the future"
                  },
                  "postedDate": {
                    "type": "string",
                    "format": "date",
                    "default": "transactionDate"
                  },
                  "quantity": {
                    "type": "string",
                    "format": "number",
                    "description": "Cannot = 0"
                  },
                  "description": {
                    "type": "string"
                  },
                  "price": {
                    "type": "string",
                    "format": "number",
                    "description": "Only allowed if quantity > 0, Must be >=0"
                  },
                  "currency": {
                    "type": "string",
                    "format": "ISO4217 3 Char Code",
                    "description": "Ref: Currency.code"
                  },
                  "ItemId": {
                    "type": "integer",
                    "description": "Ref: Item._id"
                  },
                  "WarehouseId": {
                    "type": "integer",
                    "description": "Ref: Warehouse._id"
                  },
                  "AdjustmentLedgerAccountId": {
                    "type": "integer",
                    "description": "Ref: LedgerAccount._id"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated Stock Adjustment",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "transactionDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "postedDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "quantity": {
                      "type": "string",
                      "format": "number"
                    },
                    "qtyPicked": {
                      "type": "string",
                      "format": "number"
                    },
                    "price": {
                      "type": "string",
                      "format": "number"
                    },
                    "costBasis": {
                      "type": "string",
                      "format": "number"
                    },
                    "qtyAvailable": {
                      "type": "string",
                      "format": "number"
                    },
                    "avgCost": {
                      "type": "string",
                      "format": "number"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "fulfill",
                        "receive",
                        "adjustment",
                        "transfer",
                        "production"
                      ]
                    },
                    "TransferId": {
                      "type": "integer"
                    },
                    "locked": {
                      "type": "boolean"
                    },
                    "currency": {
                      "type": "string"
                    },
                    "currencyRate": {
                      "type": "string",
                      "format": "number"
                    },
                    "ItemId": {
                      "type": "integer"
                    },
                    "WarehouseId": {
                      "type": "integer"
                    },
                    "AdjustmentLedgerAccountId": {
                      "type": "integer"
                    },
                    "JournalId": {
                      "type": "integer"
                    },
                    "POLineItemId": {
                      "type": "integer"
                    },
                    "SOLineItemId": {
                      "type": "integer"
                    },
                    "ShipmentReceiptLineId": {
                      "type": "integer"
                    },
                    "description": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/stock-adjustments/summary": {
      "get": {
        "tags": [
          "Stock Adjustments"
        ],
        "summary": "Stock Summary",
        "description": "| Field       | Filterable | Sortable |\n|---------------------|:--:|:--:|\n|ItemId               | ✅ | ✅ |\n|Item.number          | ✅ | ✅ |\n|Item.name            | ✅ | ✅ |\n|Item.sku             | ✅ | ✅ |\n|Item.description     | ✅ | ✅ |\n|WarehouseId          | ✅ | ✅ |\n|Warehouse.name       | ✅ | ✅ |\n|qtyAvailable         | ❌ | ✅ |\n|transactionDate      | ✅ | ❌ |\n|postedDate           | ✅ | ❌ |\n\nPassing a transactionDate filter will summarize all of the adjustments \nwith a transactionDate prior to or equal to the transactionDate passed\n\nPassing a postedDate filter will summarize all of the adjustments \nwith a postedDate prior to or equal to the postedDate passed\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "in": "query",
            "name": "order",
            "description": "Order to return results in. ex \"date:desc\"",
            "schema": {
              "type": "string",
              "default": "Item.name:DESC"
            }
          },
          {
            "in": "query",
            "name": "LocationId",
            "description": "Will include Stock Adjustments that have a Warehouse with this \nLocation and its children\n\nFilters on LocationId can further limit data.\n",
            "schema": {
              "type": "number",
              "description": "Ref: Warehouse.LocationId"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Stock Inventory Balances",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ItemId": {
                            "type": "integer",
                            "description": "Ref: Item._id"
                          },
                          "Item": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "number": {
                                "type": "integer"
                              },
                              "sku": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              }
                            }
                          },
                          "WarehouseId": {
                            "type": "integer",
                            "description": "Ref: Warehouse._id"
                          },
                          "Warehouse": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "currency": {
                                "type": "string",
                                "description": "The Warehouses location currency"
                              }
                            }
                          },
                          "qtyAvailable": {
                            "type": "string",
                            "format": "number",
                            "description": "Current amount on hand"
                          },
                          "totalCostBasis": {
                            "type": "string",
                            "format": "number",
                            "description": "Total value of the item in the warehouse as determined by\nSUM(quantity * (price * currencyRate if positive, or costBasis if negative)\nWill only be accurate if costbasis is complete through date passed in filter\n"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/stock-counts": {
      "get": {
        "tags": [
          "Stock Counts"
        ],
        "summary": "Search",
        "description": "| Field       | Filterable | Sortable |\n|---------------------|:--:|:--:|\n|_id            | ✅ | ✅ |\n|status         | ✅ | ❌ |\n|submitDate     | ✅ | ✅ |\n|ItemId         | ✅ | ❌ |\n|WarehouseId    | ✅ | ❌ |\n|quantity       | ✅ | ❌ |\n|unitCost       | ✅ | ❌ |\n|SystemJobId    | ✅ | ❌ |\n|createdAt      | ✅ | ✅ |\n|updatedAt      | ✅ | ✅ |\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "in": "query",
            "name": "order",
            "description": "Order to return results in. ex \"date:desc\"",
            "schema": {
              "type": "string",
              "default": "submitDate:DESC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Stock Counts",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "integer"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "draft",
                              "submitted"
                            ]
                          },
                          "submitDate": {
                            "type": "string",
                            "format": "date"
                          },
                          "quantity": {
                            "type": "string",
                            "description": "Quantity counted",
                            "format": "number"
                          },
                          "qtyInStock": {
                            "type": "string",
                            "description": "Quantity in stock (current system quantity)",
                            "format": "number"
                          },
                          "variance": {
                            "type": "string",
                            "description": "quantity - qtyInStock",
                            "format": "number"
                          },
                          "variancePrice": {
                            "type": "string",
                            "format": "number",
                            "description": "Expected price difference after booking the adjustment"
                          },
                          "unitCost": {
                            "type": "string",
                            "format": "number"
                          },
                          "ItemId": {
                            "type": "integer",
                            "description": "Ref: Item._id"
                          },
                          "WarehouseId": {
                            "type": "integer",
                            "description": "Ref: Warehouse._id"
                          },
                          "SystemJobId": {
                            "type": "string",
                            "description": "Ref: SystemJob._id"
                          },
                          "Item": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "number": {
                                "type": "string"
                              },
                              "sku": {
                                "type": "string"
                              },
                              "purchasePrice": {
                                "type": "string",
                                "format": "number"
                              }
                            }
                          },
                          "Warehouse": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "SystemJob": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "date": {
                                "type": "string",
                                "format": "date"
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/stock-counts/{id}": {
      "delete": {
        "tags": [
          "Stock Counts"
        ],
        "summary": "Delete",
        "description": "Delete one Stock Count\n\nCan only delete if status is 'draft'\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>StockCount DELETE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Stock Count Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "no content success"
          }
        }
      },
      "put": {
        "tags": [
          "Stock Counts"
        ],
        "summary": "Update",
        "description": "Update One Stock Count\n\nCan only update if in draft status\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>StockCount UPDATE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Stock Count Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON body containing key and values to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "quantity": {
                    "type": "string",
                    "format": "number"
                  },
                  "unitCost": {
                    "type": "string",
                    "format": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated Stock Count",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "number"
                    },
                    "status": {
                      "type": "string"
                    },
                    "quantity": {
                      "type": "string",
                      "format": "number"
                    },
                    "unitCost": {
                      "type": "string",
                      "format": "number"
                    },
                    "submitDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "SystemJobId": {
                      "type": "number"
                    },
                    "ItemId": {
                      "type": "number"
                    },
                    "WarehouseId": {
                      "type": "number"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/stock-counts/{id}/submit": {
      "post": {
        "tags": [
          "Stock Counts"
        ],
        "summary": "Submit",
        "description": "Submit a stock count for approval\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>StockCount SUBMIT</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "StockCount _id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Ledger Account must be active\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "LedgerAccountId"
                ],
                "properties": {
                  "LedgerAccountId": {
                    "type": "integer",
                    "description": "Ref: LedgerAccounts, used as the Adjustment Ledger Account for the created stock adjustment"
                  },
                  "submitDate": {
                    "type": "string",
                    "default": "NOW",
                    "description": "Used as transaction date for created stock adjustment"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "No content Success"
          }
        }
      }
    },
    "/system-jobs": {
      "get": {
        "tags": [
          "System Jobs"
        ],
        "summary": "Search",
        "description": "Returns a list of system jobs in descending order by date\n\n| Field       | Filterable |\n|---------------------|:--:|\n|_id                  | ✅ |\n|tenantId             | ✅ |\n|date                 | ✅ |\n|queueName            | ✅ |\n|status               | ✅ |\n|name                 | ✅ |\n|result               | ❌ |\n|progress             | ❌ |\n|url                  | ❌ |\n|createdAt            | ❌ |\n|updatedAt            | ❌ |\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "in": "query",
            "name": "queueName",
            "description": "JSON Key:Value object to filter queueNames on",
            "example": "{\"in\":[\"ledgerAccounts\",\"customers\",\"vendors\"]}.\nor simple a string 'vendorPrice'\n",
            "schema": {
              "type": "string",
              "enum": [
                "journal",
                "bill",
                "crypto",
                "invoice",
                "stockCounts",
                "ledgerAccounts",
                "customers",
                "vendors",
                "items",
                "warehouses",
                "stockAdjustments",
                "vendorPrices",
                "costCenters",
                "jobs",
                "products",
                "custom1",
                "custom2",
                "custom3"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of System Jobs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean"
                    },
                    "cursor": {
                      "type": "string",
                      "nullable": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "queueName": {
                            "type": "string",
                            "enum": [
                              "journal",
                              "bill",
                              "crypto",
                              "invoice",
                              "stockCounts",
                              "ledgerAccounts",
                              "customers",
                              "vendors",
                              "items",
                              "warehouses",
                              "stockAdjustments",
                              "vendorPrices",
                              "costCenters",
                              "jobs",
                              "products",
                              "custom1",
                              "custom2",
                              "custom3"
                            ]
                          },
                          "date": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "name": {
                            "type": "string"
                          },
                          "progress": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "completed",
                              "failed",
                              "queued",
                              "running"
                            ]
                          },
                          "url": {
                            "type": "string"
                          },
                          "results": {
                            "oneOf": [
                              {
                                "type": "number"
                              },
                              {
                                "type": "string"
                              },
                              {
                                "type": "object"
                              }
                            ]
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "System Jobs"
        ],
        "summary": "Create",
        "description": "Create new System Job\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>SystemJob CREATE</div>\n</div>\n",
        "requestBody": {
          "description": "JSON body to create new System Job",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "queueName"
                ],
                "properties": {
                  "queueName": {
                    "type": "string",
                    "enum": [
                      "dimension"
                    ]
                  },
                  "name": {
                    "type": "string"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "dimensionType": {
                        "type": "string",
                        "enum": [
                          "journal",
                          "bill",
                          "crypto",
                          "invoice",
                          "stockCounts",
                          "ledgerAccounts",
                          "customers",
                          "vendors",
                          "items",
                          "warehouses",
                          "stockAdjustments",
                          "vendorPrices",
                          "costCenters",
                          "jobs",
                          "products",
                          "custom1",
                          "custom2",
                          "custom3"
                        ]
                      },
                      "url": {
                        "type": "string"
                      }
                    }
                  },
                  "notBulk": {
                    "type": "boolean",
                    "description": "If false appends 'bulk_' as prefix to queueName"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created System Job",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "progress": {
                      "type": "string"
                    },
                    "queueName": {
                      "type": "string",
                      "enum": [
                        "journal",
                        "bill",
                        "crypto",
                        "invoice",
                        "stockCounts",
                        "ledgerAccounts",
                        "customers",
                        "vendors",
                        "items",
                        "warehouses",
                        "stockAdjustments",
                        "vendorPrices",
                        "costCenters",
                        "jobs",
                        "products",
                        "custom1",
                        "custom2",
                        "custom3"
                      ]
                    },
                    "results": {
                      "oneOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "string"
                        },
                        {
                          "type": "object"
                        }
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "completed",
                        "failed",
                        "queued",
                        "running"
                      ]
                    },
                    "tenantId": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/system-jobs/count": {
      "get": {
        "tags": [
          "System Jobs"
        ],
        "summary": "Count",
        "description": "Returns a count of system jobs\n\n\n| Field       | Filterable |\n|---------------------|:--:|\n|_id                  | ✅ |\n|tenantId             | ✅ |\n|date                 | ✅ |\n|queueName            | ✅ |\n|status               | ✅ |\n|name                 | ✅ |\n|result               | ❌ |\n|progress             | ❌ |\n|url                  | ❌ |\n|createdAt            | ❌ |\n|updatedAt            | ❌ |\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "in": "query",
            "name": "queueName",
            "description": "JSON Key:Value object to filter queueNames on",
            "example": "{\"in\":[\"ledgerAccounts\",\"customers\",\"vendors\"]}.\nor simple a string 'vendorPrice'\n",
            "schema": {
              "type": "string",
              "enum": [
                "journal",
                "bill",
                "crypto",
                "invoice",
                "stockCounts",
                "ledgerAccounts",
                "customers",
                "vendors",
                "items",
                "warehouses",
                "stockAdjustments",
                "vendorPrices",
                "costCenters",
                "jobs",
                "products",
                "custom1",
                "custom2",
                "custom3"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of System Jobs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "number"
                    },
                    "estimate": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/system-jobs/{id}": {
      "get": {
        "tags": [
          "System Jobs"
        ],
        "summary": "One",
        "description": "Get one System Job",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "System Job Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "One System Job",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "queueName": {
                      "type": "string"
                    },
                    "date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "name": {
                      "type": "string"
                    },
                    "progress": {
                      "type": "string",
                      "format": "number"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "completed",
                        "failed",
                        "queued",
                        "running"
                      ]
                    },
                    "results": {
                      "oneOf": [
                        {
                          "type": "number"
                        },
                        {
                          "type": "string"
                        },
                        {
                          "type": "object"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tax-codes": {
      "get": {
        "tags": [
          "Tax Codes"
        ],
        "summary": "Search",
        "description": "| Field       | Filterable | Sortable |\n|---------------------|:--:|:--:|\n|_id                  | ✅ | ✅ |\n|code                 | ✅ | ✅ |\n|description          | ✅ | ✅ |\n|rate                 | ✅ | ✅ |\n|LedgerAccountId      | ✅ | ❌ |\n|LedgerAccount.number | ❌ | ✅ |\n|createdAt            | ✅ | ✅ |\n|updatedAt            | ✅ | ✅ |\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "in": "query",
            "name": "order",
            "description": "Order to return results in. ex \"date:desc\"",
            "schema": {
              "type": "string",
              "default": "code:ASC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Tax Codes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "number"
                          },
                          "code": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "rate": {
                            "type": "string",
                            "format": "number"
                          },
                          "LedgerAccountId": {
                            "type": "number"
                          },
                          "LedgerAccount": {
                            "type": "object",
                            "properties": {
                              "number": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tax Codes"
        ],
        "summary": "Create",
        "description": "Creates a new Tax Code\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>TaxCode CREATE</div>\n</div>\n",
        "requestBody": {
          "description": "JSON body to create new Tax Code.\n\nOne of `[LedgerAccountId, LedgerAccount.number]` is required\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "rate"
                ],
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "rate": {
                    "type": "string",
                    "format": "number"
                  },
                  "LedgerAccountId": {
                    "type": "number",
                    "description": "Ref: LedgerAccount._id\n"
                  },
                  "LedgerAccount": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "description": "Ref: LedgerAccount.number, Can be used in place of LedgerAccountId\n"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Tax Codes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "number"
                    },
                    "code": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "rate": {
                      "type": "string",
                      "format": "number"
                    },
                    "LedgerAccountId": {
                      "type": "number"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/tax-codes/{id}": {
      "delete": {
        "tags": [
          "Tax Codes"
        ],
        "summary": "Delete",
        "description": "Delete one Tax Code\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>TaxCode DELETE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Tax Code Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "no content success"
          }
        }
      },
      "put": {
        "tags": [
          "Tax Codes"
        ],
        "summary": "Update",
        "description": "Update One Tax Code\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>TaxCode UPDATE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Tax Code Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON body containing key and values to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "rate": {
                    "type": "string",
                    "format": "number"
                  },
                  "LedgerAccountId": {
                    "type": "number",
                    "description": "Ref: LedgerAccount._id\n"
                  },
                  "LedgerAccount": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "description": "Ref: LedgerAccount.number, Can be used in place of LedgerAccountId\n"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated Tax Code",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "number"
                    },
                    "code": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "rate": {
                      "type": "string",
                      "format": "number"
                    },
                    "LedgerAccountId": {
                      "type": "number"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/templates/{id}": {
      "get": {
        "tags": [
          "Templates"
        ],
        "summary": "One",
        "description": "Get one Template",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Template Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "One Template",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "number"
                    },
                    "code": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "rate": {
                      "type": "string",
                      "format": "number"
                    },
                    "LedgerAccountId": {
                      "type": "number"
                    },
                    "LedgerAccount": {
                      "type": "object",
                      "properties": {
                        "number": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "Invoice",
                        "PurchaseOrder",
                        "SalesOrder",
                        "SalesQuote"
                      ]
                    },
                    "format": {
                      "type": "string",
                      "enum": [
                        "pdf",
                        "doc"
                      ]
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Templates"
        ],
        "summary": "Delete",
        "description": "Delete one Template\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Template DELETE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Template Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "no content success"
          }
        }
      },
      "put": {
        "tags": [
          "Templates"
        ],
        "summary": "Update",
        "description": "Update One Template\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Template UPDATE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Template Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON body containing key and values to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "Invoice",
                      "PurchaseOrder",
                      "SalesOrder",
                      "SalesQuote"
                    ]
                  },
                  "format": {
                    "type": "string",
                    "enum": [
                      "pdf",
                      "doc"
                    ]
                  },
                  "data": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated Template",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "Invoice",
                        "PurchaseOrder",
                        "SalesOrder",
                        "SalesQuote"
                      ]
                    },
                    "format": {
                      "type": "string",
                      "enum": [
                        "pdf",
                        "doc"
                      ]
                    },
                    "data": {
                      "type": "object"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/templates": {
      "get": {
        "tags": [
          "Templates"
        ],
        "summary": "Search",
        "description": "| Field       | Filterable | Sortable |\n|---------------------|:--:|:--:|\n|_id                  | ✅ | ✅ |\n|name                 | ✅ | ✅ |\n|type                 | ✅ | ✅ |\n|format               | ✅ | ✅ |\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "in": "query",
            "name": "order",
            "description": "Order to return results in. ex \"date:desc\"",
            "schema": {
              "type": "string",
              "default": "name:ASC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Templates",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "number"
                          },
                          "name": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "Invoice",
                              "PurchaseOrder",
                              "SalesOrder",
                              "SalesQuote"
                            ]
                          },
                          "format": {
                            "type": "string",
                            "enum": [
                              "pdf",
                              "doc"
                            ]
                          },
                          "data": {
                            "type": "object"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Templates"
        ],
        "summary": "Create",
        "description": "Creates a new template\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Template CREATE</div>\n</div>\n",
        "requestBody": {
          "description": "JSON body to create new Template",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "type",
                  "data"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "Invoice",
                      "PurchaseOrder",
                      "SalesOrder",
                      "SalesQuote"
                    ]
                  },
                  "format": {
                    "type": "string",
                    "default": "pdf",
                    "enum": [
                      "pdf",
                      "doc"
                    ]
                  },
                  "data": {
                    "type": "object"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Templates",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "number"
                    },
                    "name": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "Invoice",
                        "PurchaseOrder",
                        "SalesOrder",
                        "SalesQuote"
                      ]
                    },
                    "format": {
                      "type": "string",
                      "enum": [
                        "pdf",
                        "doc"
                      ]
                    },
                    "data": {
                      "type": "object"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/timezones": {
      "get": {
        "tags": [
          "Timezones"
        ],
        "summary": "Supported Timezones",
        "description": "Returns an array of all supported timezones\n",
        "responses": {
          "200": {
            "description": "List of Templates",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transactions": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Search",
        "description": "| Field       | Filterable | Sortable |\n|---------------------|:--:|:--:|\n|_id                        | ✅ | ✅ |\n|elimination                | ✅ | ❌ |\n|elim2                      | ✅ | ❌ |\n|CostCenterId               | ✅ | ❌ |\n|currency                   | ✅ | ✅ |\n|Custom1Id                  | ✅ | ❌ |\n|Custom2Id                  | ✅ | ❌ |\n|Custom3Id                  | ✅ | ❌ |\n|CustomerId                 | ✅ | ❌ |\n|description                | ✅ | ❌ |\n|ICAccountId                | ✅ | ❌ |\n|ICLocationId               | ✅ | ❌ |\n|JobId                      | ✅ | ❌ |\n|JournalId                  | ✅ | ✅ |\n|Journal_entryType          | ✅ | ✅ |\n|Journal_notes              | ✅ | ❌ |\n|Journal_number             | ✅ | ✅ |\n|Journal_reference          | ✅ | ❌ |\n|Journal_status             | ✅ | ❌ |\n|Journal_sourceLedger       | ✅ | ✅ |\n|Journal_AccountingPeriodId | ✅ | ❌ |\n|LedgerAccount_type         | ✅ | ✅ |\n|LedgerAccount_subtype      | ✅ | ✅ |\n|LedgerAccountId            | ✅ | ❌ |\n|LocationId                 | ✅ | ❌ |\n|ProductId                  | ✅ | ❌ |\n|postedDate                 | ✅ | ✅ |\n|transactionDate            | ✅ | ✅ |\n|reconcileId                | ✅ | ❌ |\n|reversing                  | ✅ | ❌ |\n|SystemJobId                | ✅ | ❌ |\n|VendorId                   | ✅ | ❌ |\n|BatchPaymentId             | ✅ | ❌ |\n|credit                     | ✅ | ✅ |\n|debit                      | ✅ | ✅ |\n|txn_type                   | ✅ | ❌ |\n|createdAt                  | ✅ | ✅ |\n|updatedAt                  | ✅ | ✅ |\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "in": "query",
            "name": "order",
            "description": "Order to return results in. ex \"date:desc\"",
            "schema": {
              "type": "string",
              "default": "postedDate:ASC"
            }
          },
          {
            "in": "query",
            "name": "currency",
            "description": "******* NOTE **********\nWe recommend using the v2/journals/lines route instead. \nThis route only exists for legacy reporting support.\n***********************\n\nCannot use a custom currency\n\nIf set, will return debit/credit values in this currency\n\nIf not set, returns debit/credit values in thier posted currency.\n",
            "schema": {
              "type": "string",
              "description": "Ref: Currency.code"
            }
          },
          {
            "in": "query",
            "name": "LocationId",
            "description": "Will include transactions from this Location and its children\n\nFilters on LocationId can further limit data.\n",
            "schema": {
              "type": "number",
              "description": "Ref: Location._id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Transactions\n\nCustom Dimensions are show below as Custom1,Custom2,Custom3, but should be replaced with the name of the dimension itself.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "integer"
                          },
                          "description": {
                            "type": "string"
                          },
                          "transactionDate": {
                            "type": "string",
                            "format": "date"
                          },
                          "postedDate": {
                            "type": "string",
                            "format": "date"
                          },
                          "reversing": {
                            "type": "boolean"
                          },
                          "reconcileId": {
                            "type": "string",
                            "description": "\"true\" if this was manually reconciled\n\n\"false\" if this was un-reconciled\n\nnull if this was never reconciled\n\n<plaid_id> if this was reconciled from the bank feed\n"
                          },
                          "consolidated": {
                            "type": "boolean"
                          },
                          "elimination": {
                            "type": "boolean",
                            "description": "Is this an intercompany line"
                          },
                          "elim2": {
                            "type": "boolean",
                            "description": "Is this an intercompany elimination line"
                          },
                          "currency": {
                            "type": "string",
                            "description": "\"Ref: Currency.code\"\n\nPosted currency\n"
                          },
                          "customCurrencyRate": {
                            "type": "string",
                            "format": "number",
                            "description": "If currency is of type \"custom\", this is the rate to convert the custom currency to USD\n"
                          },
                          "JournalId": {
                            "type": "integer",
                            "description": "Ref: Journal._id"
                          },
                          "Journal_status": {
                            "type": "string",
                            "enum": [
                              "draft",
                              "posted",
                              "crypto",
                              "inventory"
                            ]
                          },
                          "Journal_sourceLedger": {
                            "type": "string",
                            "enum": [
                              "Financial",
                              "AR",
                              "AP",
                              "Closing",
                              "Inventory",
                              "Crypto"
                            ]
                          },
                          "Journal_entryType": {
                            "type": "string",
                            "enum": [
                              "Standard",
                              "Reversing"
                            ]
                          },
                          "Journal_reference": {
                            "type": "string"
                          },
                          "Journal_notes": {
                            "type": "string",
                            "description": "HTML formatted text"
                          },
                          "Journal_number": {
                            "type": "integer"
                          },
                          "Journal_reverseDate": {
                            "type": "string",
                            "format": "date"
                          },
                          "Journal_createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "Journal_updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "Journal_AccountingPeriodId": {
                            "type": "string",
                            "description": "Ref: AccountingPeriod._id"
                          },
                          "SystemJobId": {
                            "type": "string",
                            "description": "Ref: SystemJob._id"
                          },
                          "LedgerAccountId": {
                            "type": "integer",
                            "description": "Ref: LedgerAccount._id"
                          },
                          "LedgerAccount_name": {
                            "type": "string"
                          },
                          "LedgerAccount_number": {
                            "type": "string"
                          },
                          "LedgerAccount_type": {
                            "type": "string",
                            "enum": [
                              "Asset",
                              "Equity",
                              "Expense",
                              "Liability",
                              "Revenue"
                            ]
                          },
                          "LedgerAccount_subtype": {
                            "type": "string"
                          },
                          "ICAccountId": {
                            "type": "integer",
                            "description": "Ref: LedgerAccount._id"
                          },
                          "ICAccount_name": {
                            "type": "string"
                          },
                          "ICAccount_number": {
                            "type": "string"
                          },
                          "ICAccount_type": {
                            "type": "string"
                          },
                          "ICAccount_subtype": {
                            "type": "string",
                            "enum": [
                              "Asset",
                              "Equity",
                              "Expense",
                              "Liability",
                              "Revenue"
                            ]
                          },
                          "CostCenterId": {
                            "type": "integer",
                            "description": "Ref: CostCenter._id"
                          },
                          "CostCenter_name": {
                            "type": "string"
                          },
                          "CostCenter_id": {
                            "type": "string"
                          },
                          "ProductId": {
                            "type": "integer",
                            "description": "Ref: Product._id"
                          },
                          "Product_name": {
                            "type": "string"
                          },
                          "Product_id": {
                            "type": "string"
                          },
                          "Custom1Id": {
                            "type": "integer",
                            "description": "Ref: Custom1._id"
                          },
                          "Custom1_name": {
                            "type": "string"
                          },
                          "Custom1_id": {
                            "type": "string"
                          },
                          "Custom2Id": {
                            "type": "integer",
                            "description": "Ref: Custom2._id"
                          },
                          "Custom2_name": {
                            "type": "string"
                          },
                          "Custom2_id": {
                            "type": "string"
                          },
                          "Custom3Id": {
                            "type": "integer",
                            "description": "Ref: Custom3._id"
                          },
                          "Custom3_name": {
                            "type": "string"
                          },
                          "Custom3_id": {
                            "type": "string"
                          },
                          "CustomerId": {
                            "type": "integer",
                            "description": "Ref: Customer._id"
                          },
                          "Customer_id": {
                            "type": "string"
                          },
                          "Customer_name": {
                            "type": "string"
                          },
                          "VendorId": {
                            "type": "integer",
                            "description": "Ref: Vendor._id"
                          },
                          "Vendor_id": {
                            "type": "string"
                          },
                          "Vendor_name": {
                            "type": "string"
                          },
                          "InvoiceId": {
                            "type": "integer",
                            "description": "Ref: Invoice._id"
                          },
                          "Invoice_number": {
                            "type": "string"
                          },
                          "BillId": {
                            "type": "integer",
                            "description": "Ref: Bill._id"
                          },
                          "Bill_invoiceNumber": {
                            "type": "string"
                          },
                          "PaymentId": {
                            "type": "integer",
                            "description": "Ref: Payment._id"
                          },
                          "SalesOrderId": {
                            "type": "integer",
                            "description": "Ref: SalesOrder._id"
                          },
                          "SalesOrder_number": {
                            "type": "string"
                          },
                          "LocationId": {
                            "type": "integer",
                            "description": "Ref: Location._id"
                          },
                          "Location_name": {
                            "type": "string"
                          },
                          "Location_id": {
                            "type": "string"
                          },
                          "Location_currency": {
                            "type": "string"
                          },
                          "Location_parent_path": {
                            "type": "array",
                            "items": {
                              "type": "integer"
                            }
                          },
                          "ICLocationId": {
                            "type": "integer",
                            "description": "Ref: Location._id"
                          },
                          "ICLocation_name": {
                            "type": "string"
                          },
                          "ICLocation_id": {
                            "type": "string"
                          },
                          "ICLocation_currency": {
                            "type": "string"
                          },
                          "CashReceiptId": {
                            "type": "integer",
                            "description": "Ref: CashReceipt._id"
                          },
                          "CashReceipt_number": {
                            "type": "string"
                          },
                          "VendorCreditId": {
                            "type": "string",
                            "description": "Ref: VendorCredit._id"
                          },
                          "VendorCredit_number": {
                            "type": "string"
                          },
                          "JobId": {
                            "type": "integer",
                            "description": "Ref: Job._id"
                          },
                          "Job_number": {
                            "type": "string"
                          },
                          "Job_name": {
                            "type": "string"
                          },
                          "BatchPaymentId": {
                            "type": "integer",
                            "description": "Ref: BatchPayment._id"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "reportingCurrency": {
                            "type": "string",
                            "description": "Ref: Currency.code"
                          },
                          "fxRate": {
                            "type": "string",
                            "format": "number",
                            "description": "Rate to convert from the posted currency to the reporting currency"
                          },
                          "debit": {
                            "type": "string",
                            "format": "number"
                          },
                          "credit": {
                            "type": "string",
                            "format": "number"
                          },
                          "txn_type": {
                            "type": "string",
                            "enum": [
                              "standard",
                              "fx_remeasurement",
                              "fx_translation",
                              "retained_earnings",
                              "cta_oci",
                              "cta_aoci"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transactions/running-sum": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Running Sum",
        "description": "| Field       | Filterable |\n|---------------------|:--:|\n|_id                     | ✅ | \n|description             | ✅ |\n|elimination             | ✅ | \n|elim2                   | ✅ | \n|CostCenterId            | ✅ | \n|currency                | ✅ | \n|Custom1Id               | ✅ | \n|Custom2Id               | ✅ | \n|Custom3Id               | ✅ | \n|CustomerId              | ✅ | \n|ICAccountId             | ✅ | \n|ICLocationId            | ✅ | \n|JobId                   | ✅ | \n|JournalId               | ✅ | \n|Journal_entryType       | ✅ | \n|Journal_notes           | ✅ | \n|Journal_number          | ✅ | \n|Journal_reference       | ✅ | \n|Journal_status          | ✅ | \n|Journal_sourceLedger    | ✅ | \n|LedgerAccount_type      | ✅ | \n|LedgerAccount_subtype   | ✅ | \n|LedgerAccountId         | ✅ | \n|LocationId              | ✅ | \n|ProductId               | ✅ | \n|postedDate              | ✅ | \n|transactionDate         | ✅ | \n|reconcileId             | ✅ | \n|reversing               | ✅ | \n|SystemJobId             | ✅ | \n|VendorId                | ✅ | \n|txn_type                | ✅ |\n|createdAt               | ✅ | \n|updatedAt               | ✅ | \n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "in": "query",
            "name": "currency",
            "required": true,
            "description": "\"Ref: Currency.code\", cannot use a custom currency\n\nReturn debit/credit values in this currency\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "startDate",
            "required": true,
            "description": "Will include transactions from this postedDate and forward.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "in": "query",
            "name": "endDate",
            "required": true,
            "description": "Will include transactions from this postedDate and back.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "in": "query",
            "name": "LocationId",
            "required": true,
            "description": "Will include transactions from this Location and its children\n\nFilters on LocationId can further limit data.\n",
            "schema": {
              "type": "number",
              "description": "Ref: Location._id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Transactions\n\nCustom Dimensions are show below as Custom1,Custom2,Custom3, but are replaced with the name of the dimension itself.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "integer"
                          },
                          "runningBalance": {
                            "type": "string",
                            "format": "number",
                            "description": "Running balance (Debit - Credit)\n\nIncluding this transaction line\n"
                          },
                          "description": {
                            "type": "string"
                          },
                          "transactionDate": {
                            "type": "string",
                            "format": "date"
                          },
                          "postedDate": {
                            "type": "string",
                            "format": "date"
                          },
                          "reversing": {
                            "type": "boolean"
                          },
                          "reconcileId": {
                            "type": "string",
                            "description": "\"true\" if this was manually reconciled\n\nnull if not reconciled\n\n<plaid_id> if this was reconciled from the bank feed\n"
                          },
                          "consolidated": {
                            "type": "boolean"
                          },
                          "elimination": {
                            "type": "boolean",
                            "description": "Is this an intercompany line"
                          },
                          "elim2": {
                            "type": "boolean",
                            "description": "Is this an intercompany elimination line"
                          },
                          "currency": {
                            "type": "string",
                            "description": "\"Ref: Currency.code\"\n\nPosted currency\n"
                          },
                          "customCurrencyRate": {
                            "type": "string",
                            "format": "number",
                            "description": "If currency is of type \"custom\", this is the rate to convert the custom currency to USD\n"
                          },
                          "JournalId": {
                            "type": "integer",
                            "description": "Ref: Journal._id"
                          },
                          "Journal_status": {
                            "type": "string",
                            "enum": [
                              "draft",
                              "posted",
                              "crypto",
                              "inventory"
                            ]
                          },
                          "Journal_sourceLedger": {
                            "type": "string",
                            "enum": [
                              "Financial",
                              "AR",
                              "AP",
                              "Closing",
                              "Inventory",
                              "Crypto"
                            ]
                          },
                          "Journal_entryType": {
                            "type": "string",
                            "enum": [
                              "Standard",
                              "Reversing"
                            ]
                          },
                          "Journal_reference": {
                            "type": "string"
                          },
                          "Journal_notes": {
                            "type": "string",
                            "description": "HTML formatted text"
                          },
                          "Journal_number": {
                            "type": "integer"
                          },
                          "Journal_reverseDate": {
                            "type": "string",
                            "format": "date"
                          },
                          "Journal_createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "Journal_updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "Journal_AccountingPeriodId": {
                            "type": "string",
                            "description": "Ref: AccountingPeriod._id"
                          },
                          "SystemJobId": {
                            "type": "string",
                            "description": "Ref: SystemJob._id"
                          },
                          "ICAccountId": {
                            "type": "integer",
                            "description": "Ref: LedgerAccount._id"
                          },
                          "ICAccount_name": {
                            "type": "string"
                          },
                          "ICAccount_number": {
                            "type": "string"
                          },
                          "ICAccount_type": {
                            "type": "string"
                          },
                          "ICAccount_subtype": {
                            "type": "string",
                            "enum": [
                              "Asset",
                              "Equity",
                              "Expense",
                              "Liability",
                              "Revenue"
                            ]
                          },
                          "CostCenterId": {
                            "type": "integer",
                            "description": "Ref: CostCenter._id"
                          },
                          "CostCenter_name": {
                            "type": "string"
                          },
                          "CostCenter_id": {
                            "type": "string"
                          },
                          "ProductId": {
                            "type": "integer",
                            "description": "Ref: Product._id"
                          },
                          "Product_name": {
                            "type": "string"
                          },
                          "Product_id": {
                            "type": "string"
                          },
                          "Custom1Id": {
                            "type": "integer",
                            "description": "Ref: Custom1._id"
                          },
                          "Custom1_name": {
                            "type": "string"
                          },
                          "Custom1_id": {
                            "type": "string"
                          },
                          "Custom2Id": {
                            "type": "integer",
                            "description": "Ref: Custom2._id"
                          },
                          "Custom2_name": {
                            "type": "string"
                          },
                          "Custom2_id": {
                            "type": "string"
                          },
                          "Custom3Id": {
                            "type": "integer",
                            "description": "Ref: Custom3._id"
                          },
                          "Custom3_name": {
                            "type": "string"
                          },
                          "Custom3_id": {
                            "type": "string"
                          },
                          "CustomerId": {
                            "type": "integer",
                            "description": "Ref: Customer._id"
                          },
                          "Customer_id": {
                            "type": "string"
                          },
                          "Customer_name": {
                            "type": "string"
                          },
                          "VendorId": {
                            "type": "integer",
                            "description": "Ref: Vendor._id"
                          },
                          "Vendor_id": {
                            "type": "string"
                          },
                          "Vendor_name": {
                            "type": "string"
                          },
                          "InvoiceId": {
                            "type": "integer",
                            "description": "Ref: Invoice._id"
                          },
                          "Invoice_number": {
                            "type": "string"
                          },
                          "BillId": {
                            "type": "integer",
                            "description": "Ref: Bill._id"
                          },
                          "Bill_invoiceNumber": {
                            "type": "string"
                          },
                          "PaymentId": {
                            "type": "integer",
                            "description": "Ref: Payment._id"
                          },
                          "SalesOrderId": {
                            "type": "integer",
                            "description": "Ref: SalesOrder._id"
                          },
                          "SalesOrder_number": {
                            "type": "string"
                          },
                          "LocationId": {
                            "type": "integer",
                            "description": "Ref: Location._id"
                          },
                          "Location_name": {
                            "type": "string"
                          },
                          "Location_id": {
                            "type": "string"
                          },
                          "Location_currency": {
                            "type": "string"
                          },
                          "Location_parent_path": {
                            "type": "array",
                            "items": {
                              "type": "integer"
                            }
                          },
                          "ICLocationId": {
                            "type": "integer",
                            "description": "Ref: Location._id"
                          },
                          "ICLocation_name": {
                            "type": "string"
                          },
                          "ICLocation_id": {
                            "type": "string"
                          },
                          "ICLocation_currency": {
                            "type": "string"
                          },
                          "CashReceiptId": {
                            "type": "integer",
                            "description": "Ref: CashReceipt._id"
                          },
                          "CashReceipt_number": {
                            "type": "string"
                          },
                          "VendorCreditId": {
                            "type": "string",
                            "description": "Ref: VendorCredit._id"
                          },
                          "VendorCredit_number": {
                            "type": "string"
                          },
                          "JobId": {
                            "type": "integer",
                            "description": "Ref: Job._id"
                          },
                          "Job_number": {
                            "type": "string"
                          },
                          "Job_name": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "reportingCurrency": {
                            "type": "string",
                            "description": "Ref: Currency.code"
                          },
                          "fxRate": {
                            "type": "string",
                            "format": "number",
                            "description": "Rate to convert from the posted currency to the reporting currency"
                          },
                          "debit": {
                            "type": "string",
                            "format": "number"
                          },
                          "credit": {
                            "type": "string",
                            "format": "number"
                          },
                          "txn_type": {
                            "type": "string",
                            "enum": [
                              "standard",
                              "fx_remeasurement",
                              "fx_translation",
                              "retained_earnings",
                              "cta_oci",
                              "cta_aoci"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transactions/sum": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "summary": "Sum",
        "description": "| Field       | Filterable |\n|---------------------|:--:|\n|_id                     | ✅ | \n|description             | ✅ |\n|elimination             | ✅ | \n|elim2                   | ✅ | \n|CostCenterId            | ✅ | \n|Custom1Id               | ✅ | \n|Custom2Id               | ✅ | \n|Custom3Id               | ✅ | \n|CustomerId              | ✅ | \n|ICAccountId             | ✅ | \n|ICLocationId            | ✅ | \n|JobId                   | ✅ | \n|JournalId               | ✅ | \n|Journal_entryType       | ✅ | \n|Journal_notes           | ✅ | \n|Journal_number          | ✅ | \n|Journal_reference       | ✅ | \n|Journal_status          | ✅ | \n|Journal_sourceLedger    | ✅ | \n|LedgerAccount_type      | ✅ | \n|LedgerAccount_subtype   | ✅ | \n|LedgerAccountId         | ✅ | \n|LocationId              | ✅ | \n|ProductId               | ✅ | \n|postedDate              | ✅ | \n|transactionDate         | ✅ | \n|reconcileId             | ✅ | \n|reversing               | ✅ | \n|SystemJobId             | ✅ | \n|VendorId                | ✅ | \n|currency                | ✅ | \n|txn_type                | ✅ |\n|createdAt               | ✅ | \n|updatedAt               | ✅ | \n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "in": "query",
            "name": "currency",
            "required": true,
            "description": "\"Ref: Currency.code\", cannot use a custom currency\n\nIf set, will return debit/credit values in this currency\n\nIf not set, returns debit/credit values in thier posted currency.\n",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "startDate",
            "required": true,
            "description": "Sum will include transactions from this postedDate and forward.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "in": "query",
            "name": "endDate",
            "required": true,
            "description": "Sum will include transactions from this postedDate and back.",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "in": "query",
            "name": "LocationId",
            "required": true,
            "description": "Sum will include transactions from this Location and its children\n\nFilters on LocationId can further limit data.\n",
            "schema": {
              "type": "number",
              "description": "Ref: Location._id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Sum of (Debit - Credit) \n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "number"
                }
              }
            }
          }
        }
      }
    },
    "/transfers": {
      "get": {
        "tags": [
          "Transfers"
        ],
        "summary": "Search",
        "operationId": "transfersSearch",
        "description": "| Field       | Filterable | Sortable |\n|---------------------|:--:|:--:|\n|_id                        | ✅ | ✅ |\n|ItemId                     | ✅ | ❌ |\n|status                     | ✅ | ❌ |\n|FromWarehouseId            | ✅ | ❌ |\n|ToWarehouseId              | ✅ | ❌ |\n|quantity                   | ✅ | ✅ |\n|date                       | ✅ | ✅ |\n|createdAt                  | ✅ | ✅ |\n|updatedAt                  | ✅ | ✅ |\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "in": "query",
            "name": "order",
            "description": "Order to return results in. ex \"date:desc\"",
            "schema": {
              "type": "string",
              "default": "date:DESC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Stock Transfers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "integer"
                          },
                          "ItemId": {
                            "type": "integer",
                            "description": "Ref: Item._id"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "inTransit",
                              "complete"
                            ]
                          },
                          "quantity": {
                            "type": "string",
                            "format": "number"
                          },
                          "ToWarehouseId": {
                            "type": "integer",
                            "description": "Ref: Warehouse._id"
                          },
                          "FromWarehouseId": {
                            "type": "integer",
                            "description": "Ref: Warehouse._id"
                          },
                          "date": {
                            "type": "string",
                            "format": "date"
                          },
                          "Item": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "number": {
                                "type": "string"
                              },
                              "sku": {
                                "type": "string"
                              }
                            }
                          },
                          "ToWarehouse": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "FromWarehouse": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Transfers"
        ],
        "summary": "Transfer Stock",
        "description": "Creates a new Transfer\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Transfer CREATE</div>\n</div>\n",
        "requestBody": {
          "description": "JSON body to create new Transfer\n\nCannot transfer to the same warehouse\n\nCurrency is set to currency of \"FromWarehouse\"\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "date",
                  "quantity",
                  "ItemId",
                  "FromWarehouseId",
                  "ToWarehouseId",
                  "currency"
                ],
                "properties": {
                  "dontRunCostBasis": {
                    "type": "boolean",
                    "default": false,
                    "description": "Set to true to prevent running costbasis upon success"
                  },
                  "date": {
                    "type": "string",
                    "format": "date",
                    "description": "Cannot be in the future"
                  },
                  "quantity": {
                    "type": "string",
                    "format": "number",
                    "description": "Must be > 0"
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "inTransit",
                      "complete"
                    ],
                    "default": "complete"
                  },
                  "ItemId": {
                    "type": "integer",
                    "description": "Ref: Item._id"
                  },
                  "ToWarehouseId": {
                    "type": "integer",
                    "description": "Ref: Warehouse._id"
                  },
                  "FromWarehouseId": {
                    "type": "integer",
                    "description": "Ref: Warehouse._id"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created Stock Adjustment",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "date": {
                      "type": "string",
                      "format": "date",
                      "description": "Cannot be in the future"
                    },
                    "quantity": {
                      "type": "string",
                      "format": "number",
                      "description": "Cannot = 0"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "inProgress",
                        "complete"
                      ],
                      "default": "complete"
                    },
                    "currency": {
                      "type": "string",
                      "format": "ISO4217 3 Char Code",
                      "description": "Ref: Currency.code"
                    },
                    "ItemId": {
                      "type": "integer",
                      "description": "Ref: Item._id"
                    },
                    "ToWarehouseId": {
                      "type": "integer",
                      "description": "Ref: Warehouse._id"
                    },
                    "FromWarehouseId": {
                      "type": "integer",
                      "description": "Ref: Warehouse._id"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/transfers/{id}/complete": {
      "put": {
        "tags": [
          "Transfers"
        ],
        "summary": "Complete Transfer",
        "description": "Complete Transfer\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Transfer COMPLETE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Transfer Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request Body",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dontRunCostBasis": {
                    "type": "boolean",
                    "default": false,
                    "description": "Set to true to prevent running costbasis upon success"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Complete Transfer"
          }
        }
      }
    },
    "/transfers/count": {
      "get": {
        "tags": [
          "Transfers"
        ],
        "summary": "Count",
        "description": "The same filters as [Search](#operation/transfersSearch) can be used here.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          }
        ],
        "responses": {
          "200": {
            "description": "Count response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/transfers/{id}": {
      "delete": {
        "tags": [
          "Transfers"
        ],
        "summary": "Delete",
        "description": "Delete one Transfer\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Transfer DELETE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Transfer Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "dontRunCostBasis",
            "description": "If true, cost basis calculation will not be run on success",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "204": {
            "description": "no content success"
          }
        }
      },
      "put": {
        "tags": [
          "Transfers"
        ],
        "summary": "Update Transfer",
        "description": "Update Transfer \n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Transfer UPDATE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Transfer Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON body to update Transfer\n\nCan only update a transfer if it is inTransit\n\nCurrency is set to currency of \"FromWarehouse\"\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dontRunCostBasis": {
                    "type": "boolean",
                    "default": false,
                    "description": "Set to true to prevent running costbasis upon success"
                  },
                  "date": {
                    "type": "string",
                    "format": "date",
                    "description": "Cannot be in the future"
                  },
                  "quantity": {
                    "type": "string",
                    "format": "number",
                    "description": "Must be > 0"
                  },
                  "ItemId": {
                    "type": "integer",
                    "description": "Ref: Item._id"
                  },
                  "ToWarehouseId": {
                    "type": "integer",
                    "description": "Ref: Warehouse._id"
                  },
                  "FromWarehouseId": {
                    "type": "integer",
                    "description": "Ref: Warehouse._id"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated Transfer",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "date": {
                      "type": "string",
                      "format": "date",
                      "description": "Cannot be in the future"
                    },
                    "quantity": {
                      "type": "string",
                      "format": "number",
                      "description": "Cannot = 0"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "inProgress",
                        "complete"
                      ],
                      "default": "complete"
                    },
                    "currency": {
                      "type": "string",
                      "format": "ISO4217 3 Char Code",
                      "description": "Ref: Currency.code"
                    },
                    "ItemId": {
                      "type": "integer",
                      "description": "Ref: Item._id"
                    },
                    "ToWarehouseId": {
                      "type": "integer",
                      "description": "Ref: Warehouse._id"
                    },
                    "FromWarehouseId": {
                      "type": "integer",
                      "description": "Ref: Warehouse._id"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/trial-balance": {},
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "All Users",
        "description": "All Users",
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "in": "query",
            "name": "offset",
            "description": "offset to page forwards from",
            "required": false,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalItems": {
                      "type": "number"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "LocationId": {
                            "type": "number"
                          },
                          "email": {
                            "type": "string"
                          },
                          "fname": {
                            "type": "string"
                          },
                          "lname": {
                            "type": "string"
                          },
                          "phone_number": {
                            "type": "string"
                          },
                          "profilePicURL": {
                            "type": "string"
                          },
                          "helpUrl": {
                            "type": "string"
                          },
                          "loginUrl": {
                            "type": "string"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "tenants": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "use_mfa": {
                            "type": "boolean"
                          },
                          "_id": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Create",
        "description": "Create new User\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>User CREATE</div>\n</div>\n",
        "requestBody": {
          "description": "JSON body to create new User",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "fname",
                  "lname",
                  "email",
                  "phoneNumber",
                  "LocationId"
                ],
                "properties": {
                  "fname": {
                    "type": "string"
                  },
                  "lname": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "phoneNumber": {
                    "type": "string"
                  },
                  "LocationId": {
                    "type": "string"
                  },
                  "use_mfa": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created User",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "profilePicURL": {
                      "type": "string"
                    },
                    "tenantId": {
                      "type": "string"
                    },
                    "use_mfa": {
                      "type": "boolean"
                    },
                    "fname": {
                      "type": "string"
                    },
                    "lname": {
                      "type": "string"
                    },
                    "LocationId": {
                      "type": "number"
                    },
                    "phone_number": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "One",
        "description": "One User",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "User Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "One User",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "profilePicURL": {
                      "type": "string"
                    },
                    "tenantId": {
                      "type": "string"
                    },
                    "use_mfa": {
                      "type": "boolean"
                    },
                    "lname": {
                      "type": "string"
                    },
                    "fname": {
                      "type": "string"
                    },
                    "LocationId": {
                      "type": "number"
                    },
                    "phone_number": {
                      "type": "string"
                    },
                    "authorization": {
                      "type": "boolean",
                      "nullable": true
                    },
                    "permissions": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "email": {
                      "type": "string"
                    },
                    "tenants": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "uuid": {
                            "type": "string"
                          },
                          "company": {
                            "type": "string"
                          },
                          "LocationId": {
                            "type": "number"
                          },
                          "logo": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete",
        "description": "Delete one User\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>User DELETE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "User Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update",
        "description": "Update User\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>User UPDATE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "User Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON body to update User",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fname": {
                    "type": "string"
                  },
                  "lname": {
                    "type": "string"
                  },
                  "phone_number": {
                    "type": "string"
                  },
                  "use_mfa": {
                    "type": "boolean"
                  },
                  "LocationId": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated User",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "app_metadata": {
                      "type": "object",
                      "properties": {
                        "LocationId": {
                          "type": "number"
                        },
                        "fname": {
                          "type": "string"
                        },
                        "lname": {
                          "type": "string"
                        },
                        "phone_number": {
                          "type": "string"
                        },
                        "tenantId": {
                          "type": "string"
                        },
                        "usa_mfa": {
                          "type": "boolean"
                        }
                      }
                    },
                    "user_id": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "email_verified": {
                      "type": "boolean"
                    },
                    "identities": {
                      "type": "object"
                    },
                    "name": {
                      "type": "string"
                    },
                    "nickname": {
                      "type": "string"
                    },
                    "picture": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/roles": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "User Roles",
        "description": "Get User Roles",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "User Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User Roles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update User Roles",
        "description": "Update User Roles\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>User UPDATE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "User Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON body to update User Roles",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "no content success"
          }
        }
      }
    },
    "/users/me": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update Self",
        "description": "Update self\n\nThis endpoint will update the user's own information.\n\nThis request will only work with a user token and not an api token.\n\nSettings such as `hideZeroCoins`, `stickyNav` and `homePage` will not trigger a webhook.\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>User UPDATE</div>\n</div>\n",
        "requestBody": {
          "description": "JSON body to update User",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fname": {
                    "type": "string"
                  },
                  "lname": {
                    "type": "string"
                  },
                  "profilePicURL": {
                    "type": "string"
                  },
                  "restoreId": {
                    "type": "string"
                  },
                  "hideZeroCoins": {
                    "type": "boolean"
                  },
                  "stickyNav": {
                    "type": "boolean"
                  },
                  "homePage": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated User",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "app_metadata": {
                      "type": "object",
                      "properties": {
                        "LocationId": {
                          "type": "number"
                        },
                        "fname": {
                          "type": "string"
                        },
                        "lname": {
                          "type": "string"
                        },
                        "phone_number": {
                          "type": "string"
                        },
                        "tenantId": {
                          "type": "string"
                        },
                        "usa_mfa": {
                          "type": "boolean"
                        },
                        "hideZeroCoins": {
                          "type": "boolean"
                        },
                        "stickyNav": {
                          "type": "boolean"
                        },
                        "homePage": {
                          "type": "string"
                        }
                      }
                    },
                    "user_id": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "email_verified": {
                      "type": "boolean"
                    },
                    "identities": {
                      "type": "object"
                    },
                    "name": {
                      "type": "string"
                    },
                    "nickname": {
                      "type": "string"
                    },
                    "picture": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vendor-credits": {
      "get": {
        "tags": [
          "Vendor Credits"
        ],
        "summary": "Search",
        "operationId": "vendorCreditsSearch",
        "description": "| Field       | Filterable | Sortable |\n|---------------------|:--:|:--:|\n|_id                        | ✅ | ✅ |\n|number                     | ✅ | ✅ |\n|externalId                 | ✅ | ✅ |\n|type                       | ✅ | ✅ |\n|amount                     | ✅ | ✅ |\n|unused                     | ✅ | ✅ |\n|description                | ✅ | ✅ |\n|currency                   | ✅ | ✅ |\n|receiveDate                | ✅ | ✅ |\n|postingDate                | ✅ | ✅ |\n|status                     | ✅ | ✅ |\n|VendorId                   | ✅ | ❌ |\n|LedgerAccountId            | ✅ | ❌ |\n|UnappliedCreditAccountId   | ✅ | ❌ |\n|LocationId                 | ✅ | ❌ |\n|createdAt                  | ✅ | ✅ |\n|updatedAt                  | ✅ | ✅ |\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/LocationId"
          },
          {
            "in": "query",
            "name": "order",
            "description": "Order to return results in. ex \"date:desc\"",
            "schema": {
              "type": "string",
              "default": "number:DESC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Vendor Credits",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "integer"
                          },
                          "number": {
                            "type": "string"
                          },
                          "externalId": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "amount": {
                            "type": "string",
                            "format": "number"
                          },
                          "unused": {
                            "type": "string",
                            "format": "number"
                          },
                          "description": {
                            "type": "string"
                          },
                          "currency": {
                            "type": "string",
                            "description": "Ref: Currency.code"
                          },
                          "receiveDate": {
                            "type": "string",
                            "format": "date"
                          },
                          "postingDate": {
                            "type": "string",
                            "format": "date"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "created",
                              "voided",
                              "partiallyApplied",
                              "applied"
                            ]
                          },
                          "attachments": {
                            "type": "array",
                            "description": "Links to any attached documents",
                            "items": {
                              "type": "string",
                              "format": "uri"
                            }
                          },
                          "VendorId": {
                            "type": "number",
                            "description": "Ref: Vendor._id"
                          },
                          "Vendor": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "LedgerAccountId": {
                            "type": "number",
                            "description": "Ref: LedgerAccount._id"
                          },
                          "LedgerAccount": {
                            "type": "object",
                            "properties": {
                              "number": {
                                "type": "string",
                                "format": "number"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "LocationId": {
                            "type": "number",
                            "description": "Ref: Location._id"
                          },
                          "Location": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "UnappliedCreditAccountId": {
                            "type": "number",
                            "description": "Ref: LedgerAccount._id"
                          },
                          "UnappliedCreditAccount": {
                            "type": "object",
                            "properties": {
                              "number": {
                                "type": "string",
                                "format": "number"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Vendor Credits"
        ],
        "summary": "Create",
        "description": "Creates a new Vendor Credit\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>VendorCredit CREATE</div>\n</div>\n",
        "requestBody": {
          "description": "JSON body to create new Vendor Credit\n\nOnly one of `[Vendor.id, VendorId]` can be set\n\nOnly one of `[LedgerAccount.number, LedgerAccountId]` can be set\n\nOnly one of `[Location.id, LocationId]` can be set\n\nOnly one of `[UnappliedCreditAccount.number, UnappliedCreditAccountId]` can be set\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "number",
                  "type",
                  "amount",
                  "currency",
                  "receiveDate",
                  "postingDate"
                ],
                "properties": {
                  "number": {
                    "type": "string"
                  },
                  "externalId": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  },
                  "amount": {
                    "type": "string",
                    "format": "number",
                    "description": "Must be > 0"
                  },
                  "description": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string",
                    "description": "Ref: Currency.code"
                  },
                  "receiveDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "postingDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "VendorId": {
                    "type": "number",
                    "description": "Ref: Vendor._id"
                  },
                  "Vendor": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    }
                  },
                  "LedgerAccountId": {
                    "type": "number",
                    "description": "Ref: LedgerAccount._id"
                  },
                  "LedgerAccount": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "format": "number"
                      }
                    }
                  },
                  "LocationId": {
                    "type": "number",
                    "description": "Ref: Location._id"
                  },
                  "Location": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    }
                  },
                  "UnappliedCreditAccountId": {
                    "type": "number",
                    "description": "Ref: LedgerAccount._id"
                  },
                  "UnappliedCreditAccount": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "format": "number"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Vendor Credit",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "number": {
                      "type": "string"
                    },
                    "externalId": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "string",
                      "format": "number"
                    },
                    "unused": {
                      "type": "string",
                      "format": "number"
                    },
                    "description": {
                      "type": "string"
                    },
                    "currency": {
                      "type": "string",
                      "description": "Ref: Currency.code"
                    },
                    "receiveDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "postingDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "created",
                        "voided",
                        "partiallyApplied",
                        "applied"
                      ]
                    },
                    "VendorId": {
                      "type": "number",
                      "description": "Ref: Vendor._id"
                    },
                    "LedgerAccountId": {
                      "type": "number",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "LocationId": {
                      "type": "number",
                      "description": "Ref: Location._id"
                    },
                    "UnappliedCreditAccountId": {
                      "type": "number",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vendor-credits/count": {
      "get": {
        "tags": [
          "Vendor Credits"
        ],
        "summary": "Count",
        "description": "The same filters as [Search](#operation/vendorCreditsSearch) can be used here.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/LocationId"
          }
        ],
        "responses": {
          "200": {
            "description": "Count response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/vendor-credits/{id}": {
      "delete": {
        "tags": [
          "Vendor Credits"
        ],
        "summary": "Delete",
        "description": "Delete one Vendor Credit\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>VendorCredit DELETE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Vendor Credit Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "no content success"
          }
        }
      },
      "get": {
        "tags": [
          "Vendor Credits"
        ],
        "summary": "One",
        "description": "Get one Vendor Credit",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Vendor Credit Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "One Vendor Credit",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "number": {
                      "type": "string"
                    },
                    "externalId": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "string",
                      "format": "number"
                    },
                    "unused": {
                      "type": "string",
                      "format": "number"
                    },
                    "description": {
                      "type": "string"
                    },
                    "currency": {
                      "type": "string",
                      "description": "Ref: Currency.code"
                    },
                    "attachments": {
                      "type": "array",
                      "description": "Links to any attached documents",
                      "items": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "receiveDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "postingDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "created",
                        "voided",
                        "partiallyApplied",
                        "applied"
                      ]
                    },
                    "VendorId": {
                      "type": "number",
                      "description": "Ref: Vendor._id"
                    },
                    "Vendor": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "LedgerAccountId": {
                      "type": "number",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "LedgerAccount": {
                      "type": "object",
                      "properties": {
                        "number": {
                          "type": "string",
                          "format": "number"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "LocationId": {
                      "type": "number",
                      "description": "Ref: Location._id"
                    },
                    "Location": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "UnappliedCreditAccountId": {
                      "type": "number",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "UnappliedCreditAccount": {
                      "type": "object",
                      "properties": {
                        "number": {
                          "type": "string",
                          "format": "number"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Vendor Credits"
        ],
        "summary": "Update",
        "description": "Update One Vendor Credit\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>VendorCredit UPDATE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Vendor Credit Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON body containing key and values to update\n\nCannot update a Vendor Credit if an unapplied cash journal entry was created\n\nOnly one of `[Vendor.id, VendorId]` can be set\n\nOnly one of `[LedgerAccount.number, LedgerAccountId]` can be set\n\nOnly one of `[Location.id, LocationId]` can be set\n\nOnly one of `[UnappliedCreditAccount.number, UnappliedCreditAccountId]` can be set\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "number": {
                    "type": "string"
                  },
                  "externalId": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "charge",
                      "check",
                      "ACH",
                      "Wire"
                    ]
                  },
                  "amount": {
                    "type": "string",
                    "format": "number",
                    "description": "Must be > 0"
                  },
                  "description": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string",
                    "description": "Ref: Currency.code"
                  },
                  "receiveDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "postingDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "attachments": {
                    "type": "array",
                    "description": "Links to any attached documents",
                    "items": {
                      "type": "string",
                      "format": "uri"
                    }
                  },
                  "VendorId": {
                    "type": "number",
                    "description": "Ref: Vendor._id"
                  },
                  "Vendor": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    }
                  },
                  "LedgerAccountId": {
                    "type": "number",
                    "description": "Ref: LedgerAccount._id"
                  },
                  "LedgerAccount": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "format": "number"
                      }
                    }
                  },
                  "LocationId": {
                    "type": "number",
                    "description": "Ref: Location._id"
                  },
                  "Location": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    }
                  },
                  "UnappliedCreditAccountId": {
                    "type": "number",
                    "description": "Ref: LedgerAccount._id"
                  },
                  "UnappliedCreditAccount": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "format": "number"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated Vendor Credit",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "number": {
                      "type": "string"
                    },
                    "externalId": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "charge",
                        "check",
                        "ACH",
                        "Wire"
                      ]
                    },
                    "amount": {
                      "type": "string",
                      "format": "number"
                    },
                    "unused": {
                      "type": "string",
                      "format": "number"
                    },
                    "description": {
                      "type": "string"
                    },
                    "currency": {
                      "type": "string",
                      "description": "Ref: Currency.code"
                    },
                    "receiveDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "postingDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "created",
                        "voided",
                        "partiallyApplied",
                        "applied"
                      ]
                    },
                    "attachments": {
                      "type": "array",
                      "description": "Links to any attached documents",
                      "items": {
                        "type": "string",
                        "format": "uri"
                      }
                    },
                    "VendorId": {
                      "type": "number",
                      "description": "Ref: Vendor._id"
                    },
                    "LedgerAccountId": {
                      "type": "number",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "LocationId": {
                      "type": "number",
                      "description": "Ref: Location._id"
                    },
                    "UnappliedCreditAccountId": {
                      "type": "number",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vendor-credits/{id}/payments": {
      "get": {
        "tags": [
          "Vendor Credits"
        ],
        "summary": "Payments",
        "description": "This endpoint returns only payments for the specified vendor credit.\nThe response and parameters of this endpoint are the same as for [Payments Search](#operation/paymentsSearch)\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Vendor Credit._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Payments",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentList"
                }
              }
            }
          }
        }
      }
    },
    "/vendor-credits/{id}/void": {
      "put": {
        "tags": [
          "Vendor Credits"
        ],
        "summary": "Void",
        "description": "Void one Vendor Credit\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>VendorCredit VOID</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Vendor Credit Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "no content success"
          }
        }
      }
    },
    "/vendor-prices": {
      "get": {
        "tags": [
          "Vendor Prices"
        ],
        "summary": "Search",
        "description": "| Field       | Filterable | Sortable |\n|---------------------|:--:|:--:|\n|_id                  | ✅ | ✅ |\n|VendorId             | ✅ | ✅ |\n|ItemId               | ✅ | ✅ |\n|price                | ✅ | ✅ |\n|minValue             | ✅ | ✅ |\n|maxValue             | ✅ | ✅ |\n|Item                 | ❌ | ❌ |\n|Vendor               | ❌ | ❌ |\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "in": "query",
            "name": "order",
            "description": "Order to return results in. ex \"date:desc\"",
            "schema": {
              "type": "string",
              "default": "_id:ASC"
            }
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Vendor Prices",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean"
                    },
                    "cursor": {
                      "type": "string",
                      "nullable": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "number"
                          },
                          "VendorId": {
                            "type": "number"
                          },
                          "ItemId": {
                            "type": "number"
                          },
                          "price": {
                            "type": "string",
                            "format": "number",
                            "example": "1"
                          },
                          "minValue": {
                            "type": "string",
                            "format": "number",
                            "example": "1"
                          },
                          "maxValue": {
                            "type": "string",
                            "format": "number",
                            "example": "1"
                          },
                          "Item": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "sku": {
                                "type": "string",
                                "nullable": true
                              },
                              "number": {
                                "type": "number"
                              }
                            }
                          },
                          "Vendor": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "id": {
                                "type": "string"
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Vendor Prices"
        ],
        "summary": "Create",
        "description": "Create new Vendor Price\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>VendorPrice CREATE</div>\n</div>\n",
        "requestBody": {
          "description": "JSON body to create new Vendor Price",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "VendorId",
                  "ItemId",
                  "price",
                  "minValue"
                ],
                "properties": {
                  "VendorId": {
                    "type": "integer"
                  },
                  "ItemId": {
                    "type": "integer"
                  },
                  "price": {
                    "type": "number",
                    "description": "must be > 0"
                  },
                  "minValue": {
                    "type": "number"
                  },
                  "maxValue": {
                    "type": "number",
                    "nullable": true,
                    "description": "0 will be treated as an infinite value, and returned as null. Must be greater than minValue"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created Vendor Price",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "VendorId": {
                      "type": "number"
                    },
                    "ItemId": {
                      "type": "number"
                    },
                    "price": {
                      "type": "string"
                    },
                    "minValue": {
                      "type": "string"
                    },
                    "maxValue": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vendor-prices/price": {
      "get": {
        "tags": [
          "Vendor Prices"
        ],
        "summary": "Price",
        "description": "Show price for Vendor & Item relationships",
        "parameters": [
          {
            "in": "query",
            "name": "quantity",
            "description": "quantity of items",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "VendorId",
            "description": "VendorId of Vendor Price Pair",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "ItemId",
            "description": "ItemId of Vendor Price Pair",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "found price & source",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "price": {
                      "type": "string",
                      "format": "number",
                      "example": "1"
                    },
                    "source": {
                      "type": "string",
                      "nullable": true,
                      "enum": [
                        "VendorPrice",
                        "Item",
                        "ShipmentReceipt"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vendor-prices/{id}": {
      "delete": {
        "tags": [
          "Vendor Prices"
        ],
        "summary": "Delete",
        "description": "Delete one Vendor Price\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>VendorPrice DELETE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Vendor Price Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "no content success"
          }
        }
      },
      "put": {
        "tags": [
          "Vendor Prices"
        ],
        "summary": "Update",
        "description": "Update one Vendor Price\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>VendorPrice UPDATE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Vendor Price Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON object containing key and values to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "price": {
                    "type": "number",
                    "description": "must be > 0"
                  },
                  "minValue": {
                    "type": "number"
                  },
                  "maxValue": {
                    "type": "number",
                    "description": "Must be > minValue. 0 will be treated as an infinite value"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated Vendor Price",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "number"
                    },
                    "VendorId": {
                      "type": "number"
                    },
                    "ItemId": {
                      "type": "number"
                    },
                    "price": {
                      "type": "string"
                    },
                    "minValue": {
                      "type": "string"
                    },
                    "maxValue": {
                      "type": "string",
                      "nullable": true,
                      "description": "null means infinite"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vendors": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "summary": "Search",
        "operationId": "vendorsSearch",
        "description": "| Field       | Filterable | Sortable |\n|---------------------|:--:|:--:|\n|_id                     | ✅ | ✅ |\n|id                      | ✅ | ✅ |\n|name                    | ✅ | ✅ |\n|externalId              | ✅ | ✅ |\n|nameOnCheck             | ✅ | ✅ |\n|accNumber               | ✅ | ✅ |\n|email                   | ✅ | ✅ |\n|terms                   | ✅ | ✅ |\n|EIN                     | ✅ | ✅ |\n|currency                | ✅ | ✅ |\n|customFields            | ✅ | ❌ |\n|defaultDaysDue          | ❌ | ❌ |\n|is1099                  | ✅ | ❌ |\n|inactive                | ✅ | ❌ |\n|createdAt               | ✅ | ✅ |\n|updatedAt               | ✅ | ✅ |\n|ExpenseAccountId        | ❌ | ❌ |\n|ExpenseAccount.number   | ❌ | ❌ |\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/status"
          },
          {
            "in": "query",
            "name": "order",
            "description": "Order to return results in. ex \"date:desc\"",
            "schema": {
              "type": "string",
              "default": "id:ASC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Vendors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "integer"
                          },
                          "id": {
                            "type": "string"
                          },
                          "externalId": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "nameOnCheck": {
                            "type": "string"
                          },
                          "accNumber": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          },
                          "terms": {
                            "type": "string"
                          },
                          "EIN": {
                            "type": "string"
                          },
                          "currency": {
                            "type": "string",
                            "description": "Ref: Currency.code"
                          },
                          "customFields": {
                            "type": "object",
                            "description": "Key->Value store of custom fields"
                          },
                          "defaultDaysDue": {
                            "type": "integer"
                          },
                          "is1099": {
                            "type": "boolean"
                          },
                          "inactive": {
                            "type": "boolean"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "ExpenseAccountId": {
                            "type": "integer",
                            "description": "Ref: LedgerAccount._id"
                          },
                          "ExpenseAccount": {
                            "type": "object",
                            "properties": {
                              "number": {
                                "type": "string",
                                "format": "number"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "Address": {
                            "type": "object",
                            "description": "Default Address",
                            "properties": {
                              "_id": {
                                "type": "number"
                              },
                              "label": {
                                "type": "string"
                              },
                              "line1": {
                                "type": "string"
                              },
                              "line2": {
                                "type": "string"
                              },
                              "city": {
                                "type": "string"
                              },
                              "state": {
                                "type": "string"
                              },
                              "zip": {
                                "type": "string"
                              },
                              "country": {
                                "type": "string"
                              }
                            }
                          },
                          "Contact": {
                            "type": "object",
                            "description": "Primary Contact",
                            "properties": {
                              "_id": {
                                "type": "number"
                              },
                              "name": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string"
                              },
                              "phone": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Vendors"
        ],
        "summary": "Create",
        "description": "Creates a new Vendor\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Vendor CREATE</div>\n</div>\n",
        "requestBody": {
          "description": "JSON body to create new Vendor\n\nOnly one of `[ExpenseAccount.number, ExpenseAccountId]` can be set\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "externalId": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "nameOnCheck": {
                    "type": "string"
                  },
                  "accNumber": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "terms": {
                    "type": "string"
                  },
                  "EIN": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string",
                    "description": "Ref: Currency.code"
                  },
                  "defaultDaysDue": {
                    "type": "integer",
                    "minimum": 1
                  },
                  "customFields": {
                    "type": "object",
                    "description": "Key->Value store of custom fields",
                    "default": {}
                  },
                  "is1099": {
                    "type": "boolean",
                    "default": false
                  },
                  "inactive": {
                    "type": "boolean",
                    "default": false
                  },
                  "ExpenseAccountId": {
                    "type": "integer",
                    "description": "Ref: LedgerAccount._id"
                  },
                  "ExpenseAccount": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "format": "number",
                        "description": "Ref: LedgerAccount.number, Can be used in place of FXGLAccountId\n"
                      }
                    }
                  },
                  "Address": {
                    "type": "object",
                    "description": "Default address for vendor",
                    "properties": {
                      "label": {
                        "type": "string"
                      },
                      "line1": {
                        "type": "string"
                      },
                      "line2": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "state": {
                        "type": "string"
                      },
                      "zip": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      }
                    }
                  },
                  "Contacts": {
                    "type": "object",
                    "description": "Primary contact for vendor",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "phone": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Vendors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "id": {
                      "type": "string"
                    },
                    "externalId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "nameOnCheck": {
                      "type": "string"
                    },
                    "accNumber": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "terms": {
                      "type": "string"
                    },
                    "EIN": {
                      "type": "string"
                    },
                    "currency": {
                      "type": "string",
                      "description": "Ref: Currency.code"
                    },
                    "defaultDaysDue": {
                      "type": "integer"
                    },
                    "customFields": {
                      "type": "object",
                      "description": "Key->Value store of custom fields"
                    },
                    "is1099": {
                      "type": "boolean"
                    },
                    "inactive": {
                      "type": "boolean"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "ExpenseAccountId": {
                      "type": "integer",
                      "description": "Ref: LedgerAccount._id"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vendors/{id}/bills": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "summary": "Bills",
        "description": "This endpoint returns only bills for the specified vendor.\nThe response and parameters of this endpoint are the same as for [Bills Search](#operation/billsSearch)\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Vendor._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Bills",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/BillSearchItem"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vendors/count": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "summary": "Count",
        "description": "The same filters as [Search](#operation/vendorsSearch) can be used here.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/status"
          }
        ],
        "responses": {
          "200": {
            "description": "Count response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/vendors/{id}/bills/count": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "summary": "Count Bills",
        "description": "This endpoint returns only count of bills for the specified vendor.\nThe same filters as [Search](#operation/billsSearch) can be used here.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/LocationId"
          },
          {
            "in": "path",
            "name": "id",
            "description": "Vendor Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "credit",
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "If true, only returns AP Credits i.e. bills with a negative amount.\n\nIf false or not specified, only returns bills with a positive amount.\n"
          }
        ],
        "responses": {
          "200": {
            "description": "Count response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/vendors/{id}": {
      "delete": {
        "tags": [
          "Vendors"
        ],
        "summary": "Delete",
        "description": "Delete one Vendor\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Vendor DELETE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Vendor Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "no content success"
          }
        }
      },
      "get": {
        "tags": [
          "Vendors"
        ],
        "summary": "One",
        "description": "Get one Vendor",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Vendor Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "One Vendor",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "id": {
                      "type": "string"
                    },
                    "externalId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "nameOnCheck": {
                      "type": "string"
                    },
                    "accNumber": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "terms": {
                      "type": "string"
                    },
                    "EIN": {
                      "type": "string"
                    },
                    "currency": {
                      "type": "string",
                      "description": "Ref: Currency.code"
                    },
                    "defaultDaysDue": {
                      "type": "integer"
                    },
                    "customFields": {
                      "type": "object",
                      "description": "Key->Value store of custom fields"
                    },
                    "is1099": {
                      "type": "boolean"
                    },
                    "inactive": {
                      "type": "boolean"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "ExpenseAccountId": {
                      "type": "integer",
                      "description": "Ref: LedgerAccount._id"
                    },
                    "ExpenseAccount": {
                      "type": "object",
                      "properties": {
                        "number": {
                          "type": "string",
                          "format": "number"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "Addresses": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "number"
                          },
                          "isDefault": {
                            "type": "boolean"
                          },
                          "label": {
                            "type": "string"
                          },
                          "line1": {
                            "type": "string"
                          },
                          "line2": {
                            "type": "string"
                          },
                          "city": {
                            "type": "string"
                          },
                          "state": {
                            "type": "string"
                          },
                          "zip": {
                            "type": "string"
                          },
                          "country": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "Contacts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "number"
                          },
                          "isPrimary": {
                            "type": "boolean"
                          },
                          "name": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          },
                          "phone": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Vendors"
        ],
        "summary": "Update",
        "description": "Update One Vendor\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Vendor UPDATE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Vendor Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON body containing key and values to update\n\nOnly one of `[ExpenseAccount.number, ExpenseAccountId]` can be set\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "externalId": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "nameOnCheck": {
                    "type": "string"
                  },
                  "accNumber": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "terms": {
                    "type": "string"
                  },
                  "EIN": {
                    "type": "string"
                  },
                  "currency": {
                    "type": "string",
                    "description": "Ref: Currency.code"
                  },
                  "defaultDaysDue": {
                    "type": "integer",
                    "minimum": 1
                  },
                  "is1099": {
                    "type": "boolean",
                    "default": false
                  },
                  "customFields": {
                    "type": "object",
                    "description": "Key->Value store of custom fields"
                  },
                  "inactive": {
                    "type": "boolean",
                    "default": false
                  },
                  "ExpenseAccountId": {
                    "type": "integer",
                    "description": "Ref: LedgerAccount._id"
                  },
                  "ExpenseAccount": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "format": "number",
                        "description": "Ref: LedgerAccount.number, Can be used in place of FXGLAccountId\n"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated Vendor",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "id": {
                      "type": "string"
                    },
                    "externalId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "nameOnCheck": {
                      "type": "string"
                    },
                    "accNumber": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "terms": {
                      "type": "string"
                    },
                    "EIN": {
                      "type": "string"
                    },
                    "currency": {
                      "type": "string",
                      "description": "Ref: Currency.code"
                    },
                    "defaultDaysDue": {
                      "type": "integer"
                    },
                    "is1099": {
                      "type": "boolean"
                    },
                    "inactive": {
                      "type": "boolean"
                    },
                    "customFields": {
                      "type": "object",
                      "description": "Key->Value store of custom fields"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "ExpenseAccountId": {
                      "type": "integer",
                      "description": "Ref: LedgerAccount._id"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/vendors/{id}/payments": {
      "get": {
        "tags": [
          "Vendors"
        ],
        "summary": "Payments",
        "description": "This endpoint returns only payments for the specified vendor.\nThe response and parameters of this endpoint are the same as for [Payments Search](#operation/paymentsSearch)\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Vendor._id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of Payments",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentList"
                }
              }
            }
          }
        }
      }
    },
    "/wallets": {
      "get": {
        "tags": [
          "Wallets"
        ],
        "summary": "Get All Wallets",
        "operationId": "walletsSearch",
        "description": "| Field       | Filterable | Sortable |\n|-------------------------|:--:|:--:|\n|_id                      | ✅ | ✅ |\n|name                     | ✅ | ✅ |\n|externalId               | ✅ | ❌ |\n|address                  | ✅ | ✅ |\n|exchange                 | ✅ | ✅ |\n|description              | ✅ | ✅ |\n|tag                      | ✅ | ✅ |\n|createdAt                | ✅ | ✅ |\n|updatedAt                | ✅ | ✅ |\n|DepositAccountId         | ✅ | ❌ |\n|WithdrawalAccountId      | ✅ | ❌ |\n|LocationId               | ✅ | ❌ |\n|DepositAccount.number    | ❌ | ✅ |\n|WithdrawalAccount.number | ❌ | ✅ |\n|Location.id              | ❌ | ✅ |\n",
        "parameters": [
          {
            "in": "query",
            "name": "LocationId",
            "description": "Filters for Wallets (Receive, Sent, Fee) in the specified location. Defaults to Global Location when not set.",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "in": "query",
            "name": "order",
            "description": "Order to return results in. ex \"date:desc\"",
            "schema": {
              "type": "string",
              "default": "name:ASC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of Wallets",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "integer"
                          },
                          "name": {
                            "type": "string"
                          },
                          "externalId": {
                            "type": "string"
                          },
                          "address": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "exchange": {
                            "type": "string"
                          },
                          "tag": {
                            "type": "string"
                          },
                          "DepositAccountId": {
                            "type": "integer"
                          },
                          "WithdrawalAccountId": {
                            "type": "integer"
                          },
                          "LocationId": {
                            "type": "integer"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "DepositAccount": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "number": {
                                "type": "string"
                              }
                            }
                          },
                          "WithdrawalAccount": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "number": {
                                "type": "string"
                              }
                            }
                          },
                          "Location": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Wallets"
        ],
        "summary": "Create A Wallet",
        "description": "Creates a new Wallet\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Wallet CREATE</div>\n</div>\n",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "externalId": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "exchange": {
                    "type": "string"
                  },
                  "tag": {
                    "type": "string"
                  },
                  "LocationId": {
                    "type": "integer",
                    "default": "Global Location",
                    "description": "Ref: Location._id"
                  },
                  "Location": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Location.id, Can be used in place of LocationId"
                      }
                    }
                  },
                  "DepositAccountId": {
                    "type": "integer",
                    "description": "Ref: LedgerAccount._id"
                  },
                  "DepositAccount": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "description": "Ref: LedgerAccount.number, Can be used in place of DepositAccountId"
                      }
                    }
                  },
                  "WithdrawalAccountId": {
                    "type": "integer",
                    "description": "Ref: LedgerAccount._id"
                  },
                  "WithdrawalAccount": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "description": "Ref: LedgerAccount.number, Can be used in place of WithdrawalAccountId"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created Wallet",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "externalId": {
                      "type": "string"
                    },
                    "address": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "exchange": {
                      "type": "string"
                    },
                    "tag": {
                      "type": "string"
                    },
                    "DepositAccountId": {
                      "type": "integer"
                    },
                    "WithdrawalAccountId": {
                      "type": "integer"
                    },
                    "LocationId": {
                      "type": "integer",
                      "default": "Global Location"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/wallets/count": {
      "get": {
        "tags": [
          "Wallets"
        ],
        "summary": "Count",
        "description": "The same filters as [Search](#operation/walletsSearch) can be used here.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "in": "query",
            "name": "LocationId",
            "description": "Filters for Wallets (Receive, Sent, Fee) in the specified location. Defaults to Global Location when not set.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Count response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/wallets/{id}": {
      "delete": {
        "tags": [
          "Wallets"
        ],
        "summary": "Delete Wallet",
        "description": "Delete one Wallet\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Wallet DELETE</div>\n</div>\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "204": {
            "description": "Wallet Deleted"
          }
        }
      },
      "get": {
        "tags": [
          "Wallets"
        ],
        "summary": "Get One Wallet",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "One Wallet",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "externalId": {
                      "type": "string"
                    },
                    "address": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "exchange": {
                      "type": "string"
                    },
                    "tag": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "DepositAccountId": {
                      "type": "integer"
                    },
                    "WithdrawalAccountId": {
                      "type": "integer"
                    },
                    "LocationId": {
                      "type": "integer"
                    },
                    "DepositAccount": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "number": {
                          "type": "string"
                        }
                      }
                    },
                    "WithdrawalAccount": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "number": {
                          "type": "string"
                        }
                      }
                    },
                    "Location": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Wallets"
        ],
        "summary": "Update Wallet",
        "description": "Updates a Wallet\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Wallet UPDATE</div>\n</div>\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "externalId": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "exchange": {
                    "type": "string"
                  },
                  "tag": {
                    "type": "string"
                  },
                  "LocationId": {
                    "type": "integer",
                    "description": "Ref: Location._id"
                  },
                  "Location": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Location.id, Can be used in place of LocationId"
                      }
                    }
                  },
                  "DepositAccountId": {
                    "type": "integer",
                    "description": "Ref: LedgerAccount._id"
                  },
                  "DepositAccount": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "description": "Ref: LedgerAccount.number, Can be used in place of DepositAccountId"
                      }
                    }
                  },
                  "WithdrawalAccountId": {
                    "type": "integer",
                    "description": "Ref: LedgerAccount._id"
                  },
                  "WithdrawalAccount": {
                    "type": "object",
                    "properties": {
                      "number": {
                        "type": "string",
                        "description": "Ref: LedgerAccount.number, Can be used in place of WithdrawalAccountId"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Wallet Updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "externalId": {
                      "type": "string"
                    },
                    "address": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "exchange": {
                      "type": "string"
                    },
                    "tag": {
                      "type": "string"
                    },
                    "DepositAccountId": {
                      "type": "integer"
                    },
                    "WithdrawalAccountId": {
                      "type": "integer"
                    },
                    "LocationId": {
                      "type": "integer",
                      "default": "Global Location"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/wallets/{id}/coins": {
      "get": {
        "tags": [
          "Wallets"
        ],
        "summary": "Coin Summary",
        "description": "List of Wallet's Coins with balance details\n\n| Field       | Filterable | Orderable |\n|---------------------|:--:|:--:|\n|_id                  | ✅ | ✅ |\n|name                 | ✅ | ✅ |\n|symbol               | ✅ | ✅ |\n|isFiat               | ❌ | ❌ |\n|rateSymbol           | ✅ | ✅ |\n|quantity             | ❌ | ❌ |\n|totalCostBasis       | ❌ | ❌ |\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Wallet.Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "showHidden",
            "description": "exclude zero balance coins",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "date",
            "description": "date to filter by. defaults to \"now\" ISO DateTime",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "query",
            "name": "hideZero",
            "description": "exclude zero balance coins",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Crypto Transactions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "gainLoss": {
                            "type": "string",
                            "format": "number",
                            "example": "123.321"
                          },
                          "symbol": {
                            "type": "string"
                          },
                          "isFiat": {
                            "type": "boolean"
                          },
                          "rate": {
                            "type": "object",
                            "properties": {
                              "PRICE": {
                                "type": "string",
                                "format": "number"
                              },
                              "CHANGEPCT24HOUR": {
                                "type": "string",
                                "format": "number"
                              }
                            }
                          },
                          "rateId": {
                            "type": "string"
                          },
                          "rateSource": {
                            "type": "string",
                            "enum": [
                              "coinmarketcap",
                              "nomics"
                            ]
                          },
                          "rateSymbol": {
                            "type": "string"
                          },
                          "quantity": {
                            "type": "string",
                            "format": "number",
                            "example": "1"
                          },
                          "totalCostBasis": {
                            "type": "string",
                            "format": "number",
                            "example": "1"
                          },
                          "value": {
                            "type": "string",
                            "format": "number",
                            "example": "123.321"
                          },
                          "customFields": {
                            "type": "object",
                            "description": "Key->Value hash of custom field names and values"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/warehouses": {
      "get": {
        "tags": [
          "Warehouses"
        ],
        "summary": "Get All Warehouses",
        "operationId": "warehouseSearch",
        "description": "| Field       | Filterable | Sortable |\n|-------------------------|:--:|:--:|\n|_id                      | ✅ | ✅ |\n|name                     | ✅ | ✅ |\n|inactive                 | ✅ | ✅ |\n|description              | ✅ | ✅ |\n|externalId               | ✅ | ✅ |\n|AddressId                | ✅ | ❌ |\n|Address.label            | ✅ | ❌ |\n|Address.line1            | ✅ | ❌ |\n|Address.line2            | ✅ | ❌ |\n|Address.city             | ✅ | ❌ |\n|Address.state            | ✅ | ❌ |\n|Address.zip              | ✅ | ❌ |\n|Address.country          | ✅ | ❌ |\n|ParentId                 | ✅ | ❌ |\n|LocationId               | ✅ | ❌ |\n|createdAt                | ✅ | ✅ |\n|updatedAt                | ✅ | ✅ |\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/status"
          },
          {
            "$ref": "#/components/parameters/LocationId"
          },
          {
            "in": "query",
            "name": "order",
            "description": "Order to return results in. ex \"date:desc\"",
            "schema": {
              "type": "string",
              "default": "name:ASC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of Warehouses",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean",
                      "description": "true if there are more pages"
                    },
                    "cursor": {
                      "type": "string",
                      "description": "Send in next query to page forward"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "integer"
                          },
                          "inactive": {
                            "type": "boolean"
                          },
                          "name": {
                            "type": "string"
                          },
                          "externalId": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "LocationId": {
                            "type": "integer"
                          },
                          "ParentId": {
                            "type": "integer"
                          },
                          "AddressId": {
                            "type": "integer"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "Location": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "currency": {
                                "type": "string"
                              }
                            }
                          },
                          "Parent": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "Address": {
                            "type": "object",
                            "properties": {
                              "label": {
                                "type": "string"
                              },
                              "line1": {
                                "type": "string"
                              },
                              "line2": {
                                "type": "string"
                              },
                              "city": {
                                "type": "string"
                              },
                              "state": {
                                "type": "string"
                              },
                              "zip": {
                                "type": "string"
                              },
                              "country": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Warehouses"
        ],
        "summary": "Create",
        "description": "Create new Warehouse\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Warehouse CREATE</div>\n</div>\n",
        "requestBody": {
          "description": "JSON body to create new Warehouse\n\nOne of `[LocationId, Location.id]` is required\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "LocationId"
                ],
                "properties": {
                  "inactive": {
                    "type": "boolean",
                    "default": false
                  },
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "externalId": {
                    "type": "string"
                  },
                  "Address": {
                    "type": "object",
                    "properties": {
                      "label": {
                        "type": "string"
                      },
                      "line1": {
                        "type": "string"
                      },
                      "line2": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "state": {
                        "type": "string"
                      },
                      "zip": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      }
                    }
                  },
                  "LocationId": {
                    "type": "integer",
                    "description": "Ref: Location._id"
                  },
                  "Location": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "\"Ref: Location.id\"\n\nCan be used in place of LocationId\n"
                      }
                    }
                  },
                  "ParentId": {
                    "type": "integer",
                    "description": "\"Ref: Warehouse._id\"\nCannot set self as parent\n"
                  },
                  "Parent": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "integer",
                        "description": "\"Ref: Warehouse.name\"\nCannot set self as parent\n"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created Warehouse",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "number"
                    },
                    "externalId": {
                      "type": "number"
                    },
                    "inactive": {
                      "type": "boolean"
                    },
                    "AddressId": {
                      "type": "string"
                    },
                    "ParentId": {
                      "type": "string"
                    },
                    "LocationId": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/warehouses/count": {
      "get": {
        "tags": [
          "Warehouses"
        ],
        "summary": "Count",
        "description": "The same filters as [Search](#operation/warehouseSearch) can be used here.\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "$ref": "#/components/parameters/status"
          },
          {
            "$ref": "#/components/parameters/LocationId"
          }
        ],
        "responses": {
          "200": {
            "description": "Count response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/warehouses/{id}": {
      "delete": {
        "tags": [
          "Warehouses"
        ],
        "summary": "Delete",
        "description": "Delete one Warehouse.\nCannot delete if there are linked stock adjustments or if the warehouse is set as a parent on other warehouses\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Warehouse DELETE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Warehouse Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "no content success"
          }
        }
      },
      "get": {
        "tags": [
          "Warehouses"
        ],
        "summary": "One",
        "description": "Get one Warehouse",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Warehouse Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "One Warehouse",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "integer"
                    },
                    "inactive": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "string"
                    },
                    "externalId": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string",
                      "format": "number"
                    },
                    "LocationId": {
                      "type": "integer",
                      "description": "Ref: Location._id"
                    },
                    "ParentId": {
                      "type": "integer",
                      "description": "Ref: Warehouse._id"
                    },
                    "AddressId": {
                      "type": "integer",
                      "description": "Ref: Address._id"
                    },
                    "Location": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "currency": {
                          "type": "string"
                        }
                      }
                    },
                    "Parent": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "Address": {
                      "type": "object",
                      "properties": {
                        "line1": {
                          "type": "string"
                        },
                        "line2": {
                          "type": "string"
                        },
                        "city": {
                          "type": "string"
                        },
                        "state": {
                          "type": "string"
                        },
                        "country": {
                          "type": "string"
                        },
                        "zip": {
                          "type": "string"
                        }
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Warehouses"
        ],
        "summary": "Update Warehouse",
        "description": "Updates a Warehouse\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>Warehouse UPDATE</div>\n</div>\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Cannot Update Location if there are linked stock adjustments\n",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "externalId": {
                    "type": "string"
                  },
                  "inactive": {
                    "type": "boolean"
                  },
                  "AddressId": {
                    "type": "integer",
                    "description": "Ref: Address._id"
                  },
                  "Address": {
                    "type": "object",
                    "description": "Address properties if provided will be added to the warehouse current address or new (if a different AddressId is provided)",
                    "properties": {
                      "label": {
                        "type": "string"
                      },
                      "line1": {
                        "type": "string"
                      },
                      "line2": {
                        "type": "string"
                      },
                      "city": {
                        "type": "string"
                      },
                      "state": {
                        "type": "string"
                      },
                      "zip": {
                        "type": "string"
                      },
                      "country": {
                        "type": "string"
                      }
                    }
                  },
                  "LocationId": {
                    "type": "integer",
                    "description": "Ref: Location._id"
                  },
                  "Location": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Ref: Location.id, Can be used in place of LocationId"
                      }
                    }
                  },
                  "ParentId": {
                    "type": "integer",
                    "description": "\"Ref: Warehouse._id\"\nCannot set self as parent\n"
                  },
                  "Parent": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "\"Ref: Warehouse.id\"\nCannot set self as parent\n"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Warehouse Updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "number"
                    },
                    "externalId": {
                      "type": "number"
                    },
                    "inactive": {
                      "type": "boolean"
                    },
                    "AddressId": {
                      "type": "string"
                    },
                    "ParentId": {
                      "type": "string"
                    },
                    "LocationId": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/warehouses/{id}/stock/summary": {
      "get": {
        "tags": [
          "Warehouses"
        ],
        "summary": "Warehouse Stock",
        "description": "Summary of Warehouse stocked Items",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ID of Warehouse",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "childWh",
            "description": "Determine if the summary balances include stock from child warehouses",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of items",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "iId": {
                        "type": "number",
                        "description": "Item ID"
                      },
                      "iName": {
                        "type": "string",
                        "description": "Item name"
                      },
                      "iSku": {
                        "type": "string",
                        "description": "Item SKU"
                      },
                      "iDescription": {
                        "type": "string",
                        "description": "Item description"
                      },
                      "qtyAvailable": {
                        "type": "string",
                        "format": "number",
                        "example": "1",
                        "description": "Amount of Items in Warehouse"
                      },
                      "wiMinValue": {
                        "type": "string",
                        "format": "number",
                        "example": "1",
                        "description": "Minimum stock for Item"
                      },
                      "wiMaxValue": {
                        "type": "string",
                        "format": "number",
                        "example": "1",
                        "description": "Maximum stock for Item"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/warehouse-items": {
      "get": {
        "tags": [
          "Warehouse Items"
        ],
        "summary": "Search",
        "description": "| Field       | Filterable | Sortable |\n|---------------------|:--:|:--:|\n|_id                  | ✅ | ✅ |\n|WarehouseId          | ✅ | ✅ |\n|ItemId               | ✅ | ✅ |\n|minValue             | ✅ | ✅ |\n|maxValue             | ✅ | ✅ |\n|Item                 | ❌ | ❌ |\n|Warehouse            | ❌ | ❌ |\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/filter"
          },
          {
            "$ref": "#/components/parameters/filterType"
          },
          {
            "in": "query",
            "name": "order",
            "description": "Order to return results in. ex \"date:desc\"",
            "schema": {
              "type": "string",
              "default": "_id:ASC"
            }
          },
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Warehouse Items",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean"
                    },
                    "cursor": {
                      "type": "string",
                      "nullable": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "number"
                          },
                          "WarehouseId": {
                            "type": "number"
                          },
                          "ItemId": {
                            "type": "number"
                          },
                          "minValue": {
                            "type": "string",
                            "format": "number",
                            "example": "1"
                          },
                          "maxValue": {
                            "type": "string",
                            "format": "number",
                            "example": "1"
                          },
                          "Item": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "sku": {
                                "type": "string",
                                "nullable": true
                              },
                              "number": {
                                "type": "number"
                              },
                              "description": {
                                "type": "string",
                                "nullable": true
                              }
                            }
                          },
                          "Warehouse": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string"
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Warehouse Items"
        ],
        "summary": "Create",
        "description": "Create new Warehouse Item\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>WarehouseItem CREATE</div>\n</div>\n",
        "requestBody": {
          "description": "JSON body to create new Warehouse Item",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "WarehouseId",
                  "ItemId",
                  "price",
                  "minValue"
                ],
                "properties": {
                  "WarehouseId": {
                    "type": "integer"
                  },
                  "ItemId": {
                    "type": "integer"
                  },
                  "minValue": {
                    "type": "number"
                  },
                  "maxValue": {
                    "type": "number",
                    "description": "must be > 0 and > minValue"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created Warehouse Item",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "WarehouseId": {
                      "type": "number"
                    },
                    "ItemId": {
                      "type": "number"
                    },
                    "minValue": {
                      "type": "string",
                      "format": "number",
                      "example": "1"
                    },
                    "maxValue": {
                      "type": "string",
                      "format": "number",
                      "example": "1"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/warehouse-items/{id}": {
      "delete": {
        "tags": [
          "Warehouse Items"
        ],
        "summary": "Delete",
        "description": "Delete one Warehouse Item\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>WarehouseItem DELETE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Warehouse Item Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "no content success"
          }
        }
      },
      "put": {
        "tags": [
          "Warehouse Items"
        ],
        "summary": "Update",
        "description": "Update one Warehouse Item\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>WarehouseItem UPDATE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Warehouse Item Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "JSON object containing key and values to update",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "price": {
                    "type": "number"
                  },
                  "minValue": {
                    "type": "number"
                  },
                  "maxValue": {
                    "type": "number",
                    "description": "must be > 0 and > minValue"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated Warehouse Item",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "number"
                    },
                    "WarehouseId": {
                      "type": "number"
                    },
                    "ItemId": {
                      "type": "number"
                    },
                    "minValue": {
                      "type": "string"
                    },
                    "maxValue": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/webhooks": {
      "get": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Search",
        "description": "Returns a list of webhooks in ascending order by uri\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/cursor"
          },
          {
            "$ref": "#/components/parameters/limit"
          }
        ],
        "responses": {
          "200": {
            "description": "List of Webhooks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hasNextPage": {
                      "type": "boolean"
                    },
                    "cursor": {
                      "type": "string",
                      "nullable": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "number"
                          },
                          "uri": {
                            "type": "string"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Create",
        "description": "creates a new webhook\n",
        "requestBody": {
          "description": "JSON body to create new Webhook",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "uri"
                ],
                "properties": {
                  "uri": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Webhooks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "number"
                    },
                    "uri": {
                      "type": "string"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Webhooks/{id}": {
      "delete": {
        "tags": [
          "Webhooks"
        ],
        "summary": "Delete",
        "description": "Delete one Webhook",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Webhook Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "no content success"
          }
        }
      }
    },
    "/years": {
      "get": {
        "tags": [
          "Years"
        ],
        "summary": "All",
        "description": "All Years",
        "responses": {
          "200": {
            "description": "List of Part Numbers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalItems": {
                      "type": "number"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "number"
                          },
                          "tenantId": {
                            "type": "string"
                          },
                          "year": {
                            "type": "number"
                          },
                          "start": {
                            "type": "string",
                            "format": "date"
                          },
                          "end": {
                            "type": "string",
                            "format": "date"
                          },
                          "type": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "open",
                              "closed"
                            ]
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Years"
        ],
        "summary": "Create",
        "description": "The passed data will be the first day of the year created. Format, year(YYYY), month(MM), day(DD). Any subsequent years must have the same MM/DD as the previous years. Years must be created ±1 apart (no gaps between years)\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>AccountingYear CREATE</div>\n</div>\n",
        "requestBody": {
          "description": "JSON body to create new Year",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "year",
                  "month"
                ],
                "properties": {
                  "year": {
                    "type": "number"
                  },
                  "month": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "month"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created Year",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "number"
                    },
                    "tenantId": {
                      "type": "string"
                    },
                    "year": {
                      "type": "number"
                    },
                    "start": {
                      "type": "string"
                    },
                    "end": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "month"
                      ]
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "open",
                        "closed"
                      ]
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/years/{id}/close": {
      "get": {
        "tags": [
          "Years"
        ],
        "summary": "Close",
        "description": "Close year\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>AccountingYear CLOSE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Year Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted \nYear closing process begun\n"
          }
        }
      }
    },
    "/years/{id}/open": {
      "get": {
        "tags": [
          "Years"
        ],
        "summary": "Open",
        "description": "Open year\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>AccountingYear OPEN</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Year Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Opened Year"
          }
        }
      }
    },
    "/years/{id}": {
      "delete": {
        "tags": [
          "Years"
        ],
        "summary": "Delete",
        "description": "Delete Year\n\n<div class=\"webhooks\">\n  <h4>Webhooks</h4>\n  <div>AccountingYear DELETE</div>\n</div>\n",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Year Id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "no content success"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Introduction",
      "description": "Below is an overview of our REST API, including endpoints related to our general ledger and other components of SoftLedger's accounting software.\n\n## Endpoints\n\nSoftLedger has the following endpoints.\n\n| Site       | Endpoint                         |\n|------------|----------------------------------|\n| Production | https://api.softledger.com/v2    |\n| Europe     | https://eu-api.softledger.com/v2 |\n\n## Access to the Accounting API \n\nPlease contact <support@softledger.com> to request access to the API.\n"
    },
    {
      "name": "Version 1",
      "description": "Previous versions documentation of the API are available at the linke below\n\n[APIv1 Docs are available here](https://api.softledger.com/docs)\n\nNote that these docs are deprecated and will reach end of life on April 30th, 2024.\n"
    },
    {
      "name": "Authentication",
      "description": "## OAuth v2.0\n\nSoftLedger API uses OAuth2.0 to access it's API. For any request to the API, you'll need to pass a JWT.\n\n## Authorization\n\nPrior to making any API request you'll need to [request an OAuth token](#tag/Authentication/paths/~1oauth/post).\n\nAfter you receive a token, add the following headers to every subsequent request:\n\n```json\n{\n  \"Authorization\": \"Bearer {access_token}\",\n  \"Content-Type\": \"application/json\"\n}\n```\n"
    },
    {
      "name": "Auditing",
      "description": "Actions performed by the api will have their audit logs labelled with the name of the api key generated by the SoftLedger team.\n\n<strong>Performing requests on behalf of users / Labeling audit log entries</strong>\n\nIf you would like to use an alternate label, or perform actions on behalf of a user, you can pass the `x-softledger-auditlabel` header with the email of a user or a string label. This label will then be used in the audit log entry.\n* The audit entry will still retain information to know that this was an API request and not performed directly by a user in the SoftLedger UI.\n* This header is ignored for tokens generated by a user initiated OAuth flow.\n"
    },
    {
      "name": "Rate Limiting",
      "description": "Requests to the SoftLedger API are rate limited to 200 requests per minute.\n\nA rate limited request will return a HTTP Status of 429.\n\n\nEvery request to the API will return the following headers:\n\n```X-RateLimit-Remaining: String<integer>``` - The number of api requests left during the interval.\n\n```X-RateLimit-RetryAfter: String<integer>``` - The number of seconds remaining until the next interval.\n"
    },
    {
      "name": "Request and Responses",
      "description": "## Pagination\n\nThe query paramaters for most GET requests `limit` and `cursor` allow pagination through large sets of data.\n\nBy default `limit` is set to `25`\n\nIn order to page forward set the `cursor` query param to the `cursor` value returned in the previous requests response data.\n\n## Filtering\n### Building the filter statement\n\nThe query parameter `filter` and `filterType` for most GET endpoints allows you to filter on the requested data.\n\nThe `filter` paramater should be a JSON.stringified key: value object.\n\nThe `filterType` should be one of `all` or `any`. It defaults to `all`. \nIf set to `all` all results that match ALL filters are returned.\nIf set to `any` all restults that match ANY filters are returned.\n\nFor example, if we wanted to get all Invoices that were paid, the where clause would be:\n\n```json\n{\n  \"status\": {\n    \"equals\": \"paid\"\n  }\n}\n```\n\nThis would then be stringified prior to attaching in the URL \n\n```javascript\nlet tmp = JSON.stringify({\n  status: {\n    equals: \"paid\"\n  }\n});\n```\n\nThen the request URL would look as follows\n\n```\nhttps://api.softledger.com/api/invoices?filter=tmp&filterType=any\n```\n\n### Available Filter Options\n\n| Key      | Description                                                                                               |\n|----------|-----------------------------------------------------------------------------------------------------------|\n| equals   | Exactly equals                                                                                            |\n| contains | Column contains. *String values only                                                                      |\n| not      | Does not equal                                                                                            |\n| gt       | Greater than                                                                                              |\n| gte      | Greater than or equal to                                                                                  |\n| lt       | Less than                                                                                                 |\n| lte      | Less than or equal to                                                                                     |\n| in       | Column is exactly any of the passed columns. Its value should be an array of values                       |\n| isNull   | Boolean. Pass true to return columns with a null value and false to return columns with a set value.      |\n\n### Example\n\nGet all created or approved bills posted after \"2020-01-01\"\n\n```json\n{\n  \"status\": {\n    \"in\": [\"created\", \"approved\"]\n  },\n  \"postingDate\": {\n    \"gt\": \"2020-01-01\"\n  }\n}\n```\n\n### Example 2\n\nGet all Transactions where the reconcileId is not set. Indicating they are not reconciled\n\n```json\n{\n  \"reconcileId\": {\n    \"isNull\": true\n  }\n}\n```\n\n## Errors\n\nSuccessful API request responses will be described inline throughout the document\n401,403,404 Messages will not contain a body as the error is implied.\nOther 4xx error codes will return as following:\n\n```json\n{\n  error: \"Error Message\"\n}\n```\n"
    },
    {
      "name": "Webhooks",
      "description": "### Webhooks\n\nWebhooks allow you to subscribe to events that happen in SoftLedger. When one of those events is triggered, we'll send an HTTP POST payload to the webhook's configured URL.\nWebhooks are sent with an 'at-least' once method. We recommend utilizing the `uuid` field to ensure that you do not process the same webhook multiple times.\n\nWebhook endpoints should be respond immediately with a http 200 status code. The system that receives the webhook should then process the webhook asynchronously and not wait for its work to complete prior to responding to the webhook request. If the endpoint is slow to respond or returns a non 200 status code, the webhook endpoint will be blacklisted by SoftLedger. Please contact `support@softledger.com` to resolve the issue if this occurs.\n\n### Webhook Payload\n\nThe webhook payload will be sent as a JSON object with the following structure:\n\n```json\n{\n  \"uuid\": \"Unique identifier for the webhook\",\n  \"date\": \"ISO timestamp for when the webhook was triggered\",\n  \"tenantId\": \"The tenantUUID that triggered the webhook\",\n  \"objectType\": \"The type of object that triggered the webhook\",\n  \"objectId\": \"The _id of the object that triggered the webhook\",\n  \"action\": \"The action that triggered the webhook\",\n}\n```\n\n### What webhooks are sent?\n\nEach endpoint below specifies what webhooks are sent for each request. The list will contain the `objectType` and `action` that will be sent in the webhook payload.\n"
    },
    {
      "name": "Addresses",
      "description": "Addresses"
    },
    {
      "name": "Audit Logs",
      "description": "Audit Logs"
    },
    {
      "name": "Batch Payments",
      "description": "Batch Payments"
    },
    {
      "name": "Bills",
      "description": "Bills"
    },
    {
      "name": "Cash Receipts",
      "description": "Cash Receipts"
    },
    {
      "name": "Coins",
      "description": "Coins"
    },
    {
      "name": "Consolidation Rates",
      "description": "Consolidation Rates"
    },
    {
      "name": "Contacts",
      "description": "Contacts"
    },
    {
      "name": "Cost Centers",
      "description": "Cost Centers"
    },
    {
      "name": "Crypto Transactions",
      "description": "Crypto Transactions"
    },
    {
      "name": "Currencies",
      "description": "Currencies"
    },
    {
      "name": "Custom Dimensions",
      "description": "Each SoftLedger tenant can have up to 3 custom dimensions.\n\nAll of the resources below are for custom dimensions and are accessed based on the name of the custom dimension. The {name} parameter should be populated with the custom dimension name.\n"
    },
    {
      "name": "Custom Fields",
      "description": "Custom Fields"
    },
    {
      "name": "Customers",
      "description": "Customers"
    },
    {
      "name": "Emails",
      "description": "Emails"
    },
    {
      "name": "Financials",
      "description": "Financials"
    },
    {
      "name": "FX Remeasure",
      "description": "FX Remeasure"
    },
    {
      "name": "FX Revalue",
      "description": "FX Revalue"
    },
    {
      "name": "Invoices",
      "description": "Invoices"
    },
    {
      "name": "Items",
      "description": "Items"
    },
    {
      "name": "Jobs",
      "description": "Jobs"
    },
    {
      "name": "Journals",
      "description": "Journals"
    },
    {
      "name": "Ledger Accounts",
      "description": "Ledger Accounts"
    },
    {
      "name": "Locations",
      "description": "Locations"
    },
    {
      "name": "Part Numbers",
      "description": "Part Numbers"
    },
    {
      "name": "Payments",
      "description": "Payments"
    },
    {
      "name": "Periods",
      "description": "Accounting Periods"
    },
    {
      "name": "Preferences",
      "description": "Preferences are used to store user UI preferences. There are currently the following types:\n\n| Type   | Description |\n|--------|-------------|\n| table  | Stores information regarding default column visibility, sorting order, and page size |\n| filter | Stores information for a tables view. These can be useful in storing different re-usable queries |\n"
    },
    {
      "name": "Products",
      "description": "Products"
    },
    {
      "name": "Purchase Orders",
      "description": "Purchase Orders"
    },
    {
      "name": "Recurring Jobs",
      "description": "Recurring Jobs"
    },
    {
      "name": "Roles",
      "description": "Roles"
    },
    {
      "name": "Sales Orders",
      "description": "Sales Orders"
    },
    {
      "name": "Settings",
      "description": "Settings"
    },
    {
      "name": "Shipment Receipts",
      "description": "Shipment Receipts"
    },
    {
      "name": "Statements",
      "description": "Statements"
    },
    {
      "name": "Status",
      "description": "Status"
    },
    {
      "name": "Stock Adjustments",
      "description": "Stock Adjustments"
    },
    {
      "name": "Stock Counts",
      "description": "Stock Counts"
    },
    {
      "name": "System Jobs",
      "description": "System Jobs"
    },
    {
      "name": "Tax Codes",
      "description": "Tax Codes"
    },
    {
      "name": "Templates",
      "description": "Templates"
    },
    {
      "name": "Timezones",
      "description": "Timezones"
    },
    {
      "name": "Transactions",
      "description": "Transactions"
    },
    {
      "name": "Transfers",
      "description": "Transfers"
    },
    {
      "name": "Users",
      "description": "Users"
    },
    {
      "name": "Vendors",
      "description": "Vendors"
    },
    {
      "name": "Vendor Credits",
      "description": "Vendor Credits"
    },
    {
      "name": "Vendor Prices",
      "description": "Vendor Prices"
    },
    {
      "name": "Wallets",
      "description": "Wallets"
    },
    {
      "name": "Warehouses",
      "description": "Warehouses"
    },
    {
      "name": "Warehouse Items",
      "description": "Warehouse Items"
    },
    {
      "name": "Years",
      "description": "Accounting Years"
    }
  ]
}