{
  "openapiDirectoryPath": "visma.com/1.0/openapi.yaml",
  "providerName": "visma.com",
  "openApiRaw": "https://api.severa.visma.com/psapublicrest/openapidocs/v1.0/doc.json",
  "securitySchemes": {
    "ClientIdAuth": {
      "description": "Client_Id header",
      "in": "header",
      "name": "Client_Id",
      "type": "apiKey"
    },
    "OAuth2": {
      "description": "This API uses OAuth 2 with the Client Credentials flow",
      "flows": {
        "clientCredentials": {
          "refreshUrl": "/refreshtoken",
          "scopes": {
            "activities:delete": "Delete access to activity resources",
            "activities:read": "Read-only access to activity resources",
            "activities:write": "Write access to activity resources",
            "customers:delete": "Delete access to customer resources",
            "customers:read": "Read-only access to customer resources",
            "customers:write": "Write access to customer resources",
            "fees:delete": "Delete access to project fee related resources",
            "fees:read": "Read-only access to project fee related resources",
            "fees:write": "Write access to project fee related resources",
            "files:delete": "Delete access to files",
            "files:read": "Read-only access to files",
            "files:write": "Write access to files",
            "hours:delete": "Delete access to work hour resources",
            "hours:read": "Read-only access to work hour resources",
            "hours:write": "Write access to work hour resources",
            "invoices:delete": "Delete access to invoice resources",
            "invoices:read": "Read-only access to invoice resources",
            "invoices:write": "Write access to invoice resources",
            "organization:read": "Read-only access to organization-level resources",
            "organization:write": "Write access to organization-level resources",
            "projects:delete": "Delete access to project resources",
            "projects:read": "Read-only access to project resources",
            "projects:write": "Write access to project resources",
            "resourceallocations:delete": "Delete access to resource allocations",
            "resourceallocations:read": "Read-only access to resource allocations",
            "resourceallocations:write": "Write access to resource allocations",
            "settings:delete": "Delete access to settings resources",
            "settings:read": "Read-only access to settings resources",
            "settings:write": "Write access to settings resources",
            "travels:delete": "Delete access to travel expense related resources",
            "travels:read": "Read-only access to travel expense related resources",
            "travels:write": "Write access to travel expense related resources",
            "users:delete": "Delete access to user resources",
            "users:read": "Read-only access to user resources",
            "users:write": "Write access to user resources"
          },
          "tokenUrl": "/token"
        }
      },
      "type": "oauth2"
    }
  },
  "categories": [
    "project_management"
  ],
  "homepage": "visma.com",
  "apiVersion": "1.0",
  "apiBaseUrl": "https://api.severa.visma.com/rest-api",
  "apiDescription": "The API uses OAuth2 client creadentials flow. To get the Bearer token for the resources you have to request the token by using route '/token', found from Authentication controller.\r\n\r\nYou need to provide a Client_Id, client_secret and scope needed. The client_id and client_secret can be obtained from Severa UI Rest Api settings section.\r\n\r\nAfter authentication, calls need to use the Bearer token as authorization header (Bearer {accessToken}). The calls also need to have Client_Id header.\r\n\r\nThe access token can be refreshed from '/refreshtoken' route using the refresh token which was obtained from the authentication.\r\n\r\n",
  "apiTitle": "Severa Public Rest API Documentation",
  "endpoints": 312,
  "sdkMethods": 512,
  "schemas": 366,
  "parameters": 2026,
  "difficultyScore": 1201.5,
  "difficulty": "Very Hard"
}