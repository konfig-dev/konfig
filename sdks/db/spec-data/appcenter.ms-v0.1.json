{
  "providerName": "appcenter.ms",
  "openApiRaw": "https://api.appcenter.ms/preview/swagger.json",
  "homepage": "appcenter.ms",
  "apiVersion": "v0.1",
  "methods": [
    {
      "url": "/v0.1/account/test/export",
      "method": "testGdprExportAccounts",
      "httpMethod": "get",
      "tag": "test",
      "description": "Lists all the endpoints available for Test accounts data",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/account/test/export/accounts",
      "method": "testGdprExportAccount",
      "httpMethod": "get",
      "tag": "test",
      "description": "Lists account data",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/account/test/export/featureFlags",
      "method": "testGdprExportFeatureFlag",
      "httpMethod": "get",
      "tag": "test",
      "description": "Lists feature flag data",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/administeredOrgs",
      "method": "organizationsListAdministered",
      "httpMethod": "get",
      "tag": "account",
      "description": "Returns a list organizations in which the requesting user is an admin",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/api_tokens",
      "method": "userApiTokensList",
      "httpMethod": "get",
      "tag": "account",
      "description": "Returns api tokens for the authenticated user",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/api_tokens",
      "method": "userApiTokensNew",
      "httpMethod": "post",
      "tag": "account",
      "description": "Creates a new User API token",
      "parameters": [
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "scope",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/api_tokens/{api_token_id}",
      "method": "userApiTokensDelete",
      "httpMethod": "delete",
      "tag": "account",
      "description": "Delete the user api_token object with the specific id",
      "parameters": [
        {
          "name": "api_token_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID (UUID) of the api token"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps",
      "method": "appsList",
      "httpMethod": "get",
      "tag": "account",
      "description": "Returns a list of apps",
      "parameters": [
        {
          "name": "$orderBy",
          "schema": "string",
          "description": "The name of the attribute by which to order the response by. By default, apps are in order of creation. All results are ordered in ascending order."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps",
      "method": "appsCreate",
      "httpMethod": "post",
      "tag": "account",
      "description": "Creates a new app and returns it to the caller",
      "parameters": [
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "display_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "os",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "platform",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "release_type",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}",
      "method": "appsDelete",
      "httpMethod": "delete",
      "tag": "account",
      "description": "Delete an app",
      "parameters": [
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}",
      "method": "appsGet",
      "httpMethod": "get",
      "tag": "account",
      "description": "Return a specific app with the given app name which belongs to the given owner.",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}",
      "method": "appsUpdate",
      "httpMethod": "patch",
      "tag": "account",
      "description": "Partially updates a single app",
      "parameters": [
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "display_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "icon_asset_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "icon_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "release_type",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/analytics/active_device_counts",
      "method": "analyticsDeviceCounts",
      "httpMethod": "get",
      "tag": "analytics",
      "description": "Count of active devices by interval in the time range.",
      "parameters": [
        {
          "name": "start",
          "schema": "string",
          "required": true,
          "description": "Start date time in data in ISO 8601 date time format."
        },
        {
          "name": "end",
          "schema": "string",
          "required": false,
          "description": "Last date time in data in ISO 8601 date time format."
        },
        {
          "name": "versions",
          "schema": "array",
          "required": false,
          "description": "To select specific application versions"
        },
        {
          "name": "app_build",
          "schema": "string",
          "required": false,
          "description": "Application build number. If build number is specified than multiple versions are not allowed."
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Error"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/analytics/audiences",
      "method": "analyticsListAudiences",
      "httpMethod": "get",
      "tag": "analytics",
      "description": "Get list of audiences.",
      "parameters": [
        {
          "name": "include_disabled",
          "schema": "boolean",
          "required": false,
          "description": "Include disabled audience definitions"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of audiences."
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/analytics/audiences/definition/test",
      "method": "analyticsTestAudience",
      "httpMethod": "post",
      "tag": "analytics",
      "description": "Tests audience definition.",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "custom_properties",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "definition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Audience test result."
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/analytics/audiences/metadata/custom_properties",
      "method": "analyticsListCustomProperties",
      "httpMethod": "get",
      "tag": "analytics",
      "description": "Get list of custom properties.",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of device properties."
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/analytics/audiences/metadata/device_properties",
      "method": "analyticsListDeviceProperties",
      "httpMethod": "get",
      "tag": "analytics",
      "description": "Get list of device properties.",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of device properties."
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/analytics/audiences/metadata/device_properties/{property_name}/values",
      "method": "analyticsListDevicePropertyValues",
      "httpMethod": "get",
      "tag": "analytics",
      "description": "Get list of device property values.",
      "parameters": [
        {
          "name": "property_name",
          "schema": "string",
          "required": true,
          "description": "Device property"
        },
        {
          "name": "contains",
          "schema": "string",
          "required": false,
          "description": "Contains string"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of device property values."
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/analytics/audiences/{audience_name}",
      "method": "analyticsDeleteAudience",
      "httpMethod": "delete",
      "tag": "analytics",
      "description": "Deletes audience definition.",
      "parameters": [
        {
          "name": "audience_name",
          "schema": "string",
          "required": true,
          "description": "The name of the audience"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/analytics/audiences/{audience_name}",
      "method": "analyticsGetAudience",
      "httpMethod": "get",
      "tag": "analytics",
      "description": "Gets audience definition.",
      "parameters": [
        {
          "name": "audience_name",
          "schema": "string",
          "required": true,
          "description": "The name of the audience"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Audience with details."
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/analytics/audiences/{audience_name}",
      "method": "analyticsAudienceNameExists",
      "httpMethod": "head",
      "tag": "analytics",
      "description": "Returns whether audience definition exists.",
      "parameters": [
        {
          "name": "audience_name",
          "schema": "string",
          "required": true,
          "description": "The name of the audience"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/analytics/audiences/{audience_name}",
      "method": "analyticsCreateOrUpdateAudience",
      "httpMethod": "put",
      "tag": "analytics",
      "description": "Creates or updates audience definition.",
      "parameters": [
        {
          "name": "audience_name",
          "schema": "string",
          "required": true,
          "description": "The name of the audience"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "custom_properties",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "definition",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Audience with details."
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/analytics/crash_counts",
      "method": "analyticsCrashCounts",
      "httpMethod": "get",
      "tag": "analytics",
      "description": "Available for UWP apps only.",
      "parameters": [
        {
          "name": "start",
          "schema": "string",
          "required": true,
          "description": "Start date time in data in ISO 8601 date time format."
        },
        {
          "name": "end",
          "schema": "string",
          "required": false,
          "description": "Last date time in data in ISO 8601 date time format."
        },
        {
          "name": "versions",
          "schema": "array",
          "required": false,
          "description": "To select specific application versions"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Error"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/analytics/crash_groups",
      "method": "analyticsCrashGroupsTotals",
      "httpMethod": "post",
      "tag": "analytics",
      "description": "Overall crashes and affected users count of the selected crash groups with selected versions.",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "crash_groups",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of crash groups with overall crashes count and affected users."
        },
        {
          "statusCode": "default",
          "description": "Error"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/analytics/crash_groups/{crash_group_id}/crash_counts",
      "method": "analyticsCrashGroupCounts",
      "httpMethod": "get",
      "tag": "analytics",
      "description": "Available for UWP apps only.",
      "parameters": [
        {
          "name": "crash_group_id",
          "schema": "string",
          "required": true,
          "description": "The id of the crash group."
        },
        {
          "name": "version",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "start",
          "schema": "string",
          "required": true,
          "description": "Start date time in data in ISO 8601 date time format."
        },
        {
          "name": "end",
          "schema": "string",
          "required": false,
          "description": "Last date time in data in ISO 8601 date time format."
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Error"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/analytics/crash_groups/{crash_group_id}/models",
      "method": "analyticsCrashGroupModelCounts",
      "httpMethod": "get",
      "tag": "analytics",
      "description": "Available for UWP apps only.",
      "parameters": [
        {
          "name": "crash_group_id",
          "schema": "string",
          "required": true,
          "description": "The id of the crash group."
        },
        {
          "name": "version",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "$top",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of results to return. (0 will fetch all results)"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Error"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/analytics/crash_groups/{crash_group_id}/operating_systems",
      "method": "analyticsCrashGroupOperatingSystemCounts",
      "httpMethod": "get",
      "tag": "analytics",
      "description": "Available for UWP apps only.",
      "parameters": [
        {
          "name": "crash_group_id",
          "schema": "string",
          "required": true,
          "description": "The id of the crash group."
        },
        {
          "name": "version",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "$top",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of results to return. (0 will fetch all results)"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Error"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/analytics/crash_groups/{crash_group_id}/overall",
      "method": "analyticsCrashGroupTotals",
      "httpMethod": "get",
      "tag": "analytics",
      "description": "Available for UWP apps only.",
      "parameters": [
        {
          "name": "crash_group_id",
          "schema": "string",
          "required": true,
          "description": "The id of the crash group."
        },
        {
          "name": "version",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Error"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/analytics/crashfree_device_percentages",
      "method": "analyticsCrashFreeDevicePercentages",
      "httpMethod": "get",
      "tag": "analytics",
      "description": "Percentage of crash-free device by day in the time range based on the selected versions. Api will return -1 if crash devices is greater than active devices.",
      "parameters": [
        {
          "name": "start",
          "schema": "string",
          "required": true,
          "description": "Start date time in data in ISO 8601 date time format."
        },
        {
          "name": "end",
          "schema": "string",
          "required": false,
          "description": "Last date time in data in ISO 8601 date time format."
        },
        {
          "name": "version",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Error"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/analytics/distribution/release_counts",
      "method": "analyticsDistributionReleaseCounts",
      "httpMethod": "post",
      "tag": "analytics",
      "description": "Count of total downloads for the provided distribution releases.",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "releases",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/analytics/event_logs/{event_name}",
      "method": "analyticsEventsDeleteLogs",
      "httpMethod": "delete",
      "tag": "analytics",
      "description": "Delete the set of Events with the specified event names.",
      "parameters": [
        {
          "name": "event_name",
          "schema": "string",
          "required": true,
          "description": "The id of the event."
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "Error"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/analytics/events",
      "method": "analyticsEvents",
      "httpMethod": "get",
      "tag": "analytics",
      "description": "Count of active events in the time range ordered by event.",
      "parameters": [
        {
          "name": "start",
          "schema": "string",
          "required": true,
          "description": "Start date time in data in ISO 8601 date time format."
        },
        {
          "name": "end",
          "schema": "string",
          "required": false,
          "description": "Last date time in data in ISO 8601 date time format."
        },
        {
          "name": "versions",
          "schema": "array",
          "required": false,
          "description": "To select specific application versions"
        },
        {
          "name": "event_name",
          "schema": "array",
          "required": false,
          "description": "To select the specific events."
        },
        {
          "name": "$top",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of results to return. (0 will fetch all results)"
        },
        {
          "name": "$skip",
          "schema": "integer",
          "required": false,
          "description": "The offset (starting at 0) of the first result to return. This parameter along with limit is used to perform pagination."
        },
        {
          "name": "$inlinecount",
          "schema": "string",
          "required": false,
          "description": "Controls whether or not to include a count of all the items across all pages."
        },
        {
          "name": "$orderby",
          "schema": "string",
          "required": false,
          "description": "controls the sorting order and sorting based on which column"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Error"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/analytics/events/{event_name}",
      "method": "analyticsEventsDelete",
      "httpMethod": "delete",
      "tag": "analytics",
      "description": "Delete the set of Events with the specified event names.",
      "parameters": [
        {
          "name": "event_name",
          "schema": "string",
          "required": true,
          "description": "The id of the event."
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": "Error"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/analytics/events/{event_name}/count_per_device",
      "method": "analyticsEventPerDeviceCount",
      "httpMethod": "get",
      "tag": "analytics",
      "description": "Count of events per device by interval in the time range.",
      "parameters": [
        {
          "name": "event_name",
          "schema": "string",
          "required": true,
          "description": "The id of the event."
        },
        {
          "name": "start",
          "schema": "string",
          "required": true,
          "description": "Start date time in data in ISO 8601 date time format."
        },
        {
          "name": "end",
          "schema": "string",
          "required": false,
          "description": "Last date time in data in ISO 8601 date time format."
        },
        {
          "name": "versions",
          "schema": "array",
          "required": false,
          "description": "To select specific application versions"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Error"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/analytics/events/{event_name}/count_per_session",
      "method": "analyticsEventPerSessionCount",
      "httpMethod": "get",
      "tag": "analytics",
      "description": "Count of events per session by interval in the time range.",
      "parameters": [
        {
          "name": "event_name",
          "schema": "string",
          "required": true,
          "description": "The id of the event."
        },
        {
          "name": "start",
          "schema": "string",
          "required": true,
          "description": "Start date time in data in ISO 8601 date time format."
        },
        {
          "name": "end",
          "schema": "string",
          "required": false,
          "description": "Last date time in data in ISO 8601 date time format."
        },
        {
          "name": "versions",
          "schema": "array",
          "required": false,
          "description": "To select specific application versions"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Error"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/analytics/events/{event_name}/device_count",
      "method": "analyticsEventDeviceCount",
      "httpMethod": "get",
      "tag": "analytics",
      "description": "Count of devices for an event by interval in the time range.",
      "parameters": [
        {
          "name": "event_name",
          "schema": "string",
          "required": true,
          "description": "The id of the event."
        },
        {
          "name": "start",
          "schema": "string",
          "required": true,
          "description": "Start date time in data in ISO 8601 date time format."
        },
        {
          "name": "end",
          "schema": "string",
          "required": false,
          "description": "Last date time in data in ISO 8601 date time format."
        },
        {
          "name": "versions",
          "schema": "array",
          "required": false,
          "description": "To select specific application versions"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Error"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/analytics/events/{event_name}/event_count",
      "method": "analyticsEventCount",
      "httpMethod": "get",
      "tag": "analytics",
      "description": "Count of events by interval in the time range.",
      "parameters": [
        {
          "name": "event_name",
          "schema": "string",
          "required": true,
          "description": "The id of the event."
        },
        {
          "name": "start",
          "schema": "string",
          "required": true,
          "description": "Start date time in data in ISO 8601 date time format."
        },
        {
          "name": "end",
          "schema": "string",
          "required": false,
          "description": "Last date time in data in ISO 8601 date time format."
        },
        {
          "name": "versions",
          "schema": "array",
          "required": false,
          "description": "To select specific application versions"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Error"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/analytics/events/{event_name}/properties",
      "method": "analyticsEventProperties",
      "httpMethod": "get",
      "tag": "analytics",
      "description": "Event properties.",
      "parameters": [
        {
          "name": "event_name",
          "schema": "string",
          "required": true,
          "description": "The id of the event."
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Event properties during the time range."
        },
        {
          "statusCode": "default",
          "description": "Error"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/analytics/events/{event_name}/properties/{event_property_name}/counts",
      "method": "analyticsEventPropertyCounts",
      "httpMethod": "get",
      "tag": "analytics",
      "description": "Event properties value counts during the time range in descending order.",
      "parameters": [
        {
          "name": "event_name",
          "schema": "string",
          "required": true,
          "description": "The id of the event."
        },
        {
          "name": "event_property_name",
          "schema": "string",
          "required": true,
          "description": "The id of the event property."
        },
        {
          "name": "start",
          "schema": "string",
          "required": true,
          "description": "Start date time in data in ISO 8601 date time format."
        },
        {
          "name": "end",
          "schema": "string",
          "required": false,
          "description": "Last date time in data in ISO 8601 date time format."
        },
        {
          "name": "versions",
          "schema": "array",
          "required": false,
          "description": "To select specific application versions"
        },
        {
          "name": "$top",
          "schema": "integer",
          "required": false,
          "description": "The number of property values to return. Set to 0 in order to fetch all results available."
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Event property value counts during the time range in descending order."
        },
        {
          "statusCode": "default",
          "description": "Error"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/analytics/generic_log_flow",
      "method": "analyticsGenericLogFlow",
      "httpMethod": "get",
      "tag": "analytics",
      "description": "Logs received between the specified start time and the current time. The API will return a maximum of 100 logs per call.",
      "parameters": [
        {
          "name": "start",
          "schema": "string",
          "required": false,
          "description": "Start date time in data in ISO 8601 date time format. It must be within the current day in the UTC timezone. The default value is the start time of the current day in UTC timezone."
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/analytics/languages",
      "method": "analyticsLanguageCounts",
      "httpMethod": "get",
      "tag": "analytics",
      "description": "Languages in the time range.",
      "parameters": [
        {
          "name": "start",
          "schema": "string",
          "required": true,
          "description": "Start date time in data in ISO 8601 date time format."
        },
        {
          "name": "end",
          "schema": "string",
          "required": false,
          "description": "Last date time in data in ISO 8601 date time format."
        },
        {
          "name": "$top",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of results to return. (0 will fetch all results)"
        },
        {
          "name": "versions",
          "schema": "array",
          "required": false,
          "description": "To select specific application versions"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Error"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/analytics/log_flow",
      "method": "analyticsLogFlow",
      "httpMethod": "get",
      "tag": "analytics",
      "description": "Logs received between the specified start time and the current time. The API will return a maximum of 100 logs per call.",
      "parameters": [
        {
          "name": "start",
          "schema": "string",
          "required": false,
          "description": "Start date time in data in ISO 8601 date time format. It must be within the current day in the UTC timezone. The default value is the start time of the current day in UTC timezone."
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/analytics/models",
      "method": "analyticsModelCounts",
      "httpMethod": "get",
      "tag": "analytics",
      "description": "Models in the time range.",
      "parameters": [
        {
          "name": "start",
          "schema": "string",
          "required": true,
          "description": "Start date time in data in ISO 8601 date time format."
        },
        {
          "name": "end",
          "schema": "string",
          "required": false,
          "description": "Last date time in data in ISO 8601 date time format."
        },
        {
          "name": "$top",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of results to return. (0 will fetch all results)"
        },
        {
          "name": "versions",
          "schema": "array",
          "required": false,
          "description": "To select specific application versions"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Error"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/analytics/oses",
      "method": "analyticsOperatingSystemCounts",
      "httpMethod": "get",
      "tag": "analytics",
      "description": "OSes in the time range.",
      "parameters": [
        {
          "name": "start",
          "schema": "string",
          "required": true,
          "description": "Start date time in data in ISO 8601 date time format."
        },
        {
          "name": "end",
          "schema": "string",
          "required": false,
          "description": "Last date time in data in ISO 8601 date time format."
        },
        {
          "name": "$top",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of results to return. (0 will fetch all results)"
        },
        {
          "name": "versions",
          "schema": "array",
          "required": false,
          "description": "To select specific application versions"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Error"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/analytics/places",
      "method": "analyticsPlaceCounts",
      "httpMethod": "get",
      "tag": "analytics",
      "description": "Places in the time range.",
      "parameters": [
        {
          "name": "start",
          "schema": "string",
          "required": true,
          "description": "Start date time in data in ISO 8601 date time format."
        },
        {
          "name": "end",
          "schema": "string",
          "required": false,
          "description": "Last date time in data in ISO 8601 date time format."
        },
        {
          "name": "$top",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of results to return. (0 will fetch all results)"
        },
        {
          "name": "versions",
          "schema": "array",
          "required": false,
          "description": "To select specific application versions"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Places and count during the time range in descending order."
        },
        {
          "statusCode": "default",
          "description": "Error"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/analytics/session_counts",
      "method": "analyticsSessionCounts",
      "httpMethod": "get",
      "tag": "analytics",
      "description": "Count of sessions in the time range.",
      "parameters": [
        {
          "name": "start",
          "schema": "string",
          "required": true,
          "description": "Start date time in data in ISO 8601 date time format."
        },
        {
          "name": "end",
          "schema": "string",
          "required": false,
          "description": "Last date time in data in ISO 8601 date time format."
        },
        {
          "name": "versions",
          "schema": "array",
          "required": false,
          "description": "To select specific application versions"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/analytics/session_durations_distribution",
      "method": "analyticsSessionDurationsDistribution",
      "httpMethod": "get",
      "tag": "analytics",
      "description": "Gets session duration.",
      "parameters": [
        {
          "name": "start",
          "schema": "string",
          "required": true,
          "description": "Start date time in data in ISO 8601 date time format."
        },
        {
          "name": "end",
          "schema": "string",
          "required": false,
          "description": "Last date time in data in ISO 8601 date time format."
        },
        {
          "name": "versions",
          "schema": "array",
          "required": false,
          "description": "To select specific application versions"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Error"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/analytics/sessions_per_device",
      "method": "analyticsPerDeviceCounts",
      "httpMethod": "get",
      "tag": "analytics",
      "description": "Count of sessions per device in the time range.",
      "parameters": [
        {
          "name": "start",
          "schema": "string",
          "required": true,
          "description": "Start date time in data in ISO 8601 date time format."
        },
        {
          "name": "end",
          "schema": "string",
          "required": false,
          "description": "Last date time in data in ISO 8601 date time format."
        },
        {
          "name": "versions",
          "schema": "array",
          "required": false,
          "description": "To select specific application versions"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Error"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/analytics/versions",
      "method": "analyticsVersions",
      "httpMethod": "get",
      "tag": "analytics",
      "description": "Count of active versions in the time range ordered by version.",
      "parameters": [
        {
          "name": "start",
          "schema": "string",
          "required": true,
          "description": "Start date time in data in ISO 8601 date time format."
        },
        {
          "name": "end",
          "schema": "string",
          "required": false,
          "description": "Last date time in data in ISO 8601 date time format."
        },
        {
          "name": "$top",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of results to return. (0 will fetch all results)"
        },
        {
          "name": "versions",
          "schema": "array",
          "required": false,
          "description": "To select specific application versions"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": "Error"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/api_tokens",
      "method": "appApiTokensList",
      "httpMethod": "get",
      "tag": "account",
      "description": "Returns App API tokens for the app",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/api_tokens",
      "method": "appApiTokensNew",
      "httpMethod": "post",
      "tag": "account",
      "description": "Creates a new App API token",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "scope",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/api_tokens/{api_token_id}",
      "method": "appApiTokensDelete",
      "httpMethod": "delete",
      "tag": "account",
      "description": "Delete the App Api Token object with the specific ID",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "api_token_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID (UUID) of the api token"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/apple_mapping",
      "method": "appleMappingDelete",
      "httpMethod": "delete",
      "tag": "distribute",
      "description": "Delete mapping of apple app to an existing app in apple store.",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/apple_mapping",
      "method": "appleMappingGet",
      "httpMethod": "get",
      "tag": "distribute",
      "description": "Get mapping of apple app to an existing app in apple store.",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Apple Mapping Request Type"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/apple_mapping",
      "method": "appleMappingCreate",
      "httpMethod": "post",
      "tag": "distribute",
      "description": "Create a mapping for an existing app in apple store for the specified application.",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "apple_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "bundle_identifier",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "service_connection_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "team_identifier",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Apple Mapping Request Type"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/apple_test_flight_groups",
      "method": "appleMappingTestFlightGroups",
      "httpMethod": "get",
      "tag": "distribute",
      "description": "Fetch all apple test flight groups",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/avatar",
      "method": "appsDeleteAvatar",
      "httpMethod": "delete",
      "tag": "account",
      "description": "Deletes the uploaded app avatar",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/avatar",
      "method": "appsUpdateAvatar",
      "httpMethod": "post",
      "tag": "account",
      "description": "Sets the app avatar",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "avatar",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/azure_subscriptions",
      "method": "azureSubscriptionListForApp",
      "httpMethod": "get",
      "tag": "account",
      "description": "Returns a list of azure subscriptions for the app",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/azure_subscriptions",
      "method": "azureSubscriptionLinkForApp",
      "httpMethod": "post",
      "tag": "account",
      "description": "Link azure subscription to an app",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "subscription_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/azure_subscriptions/{azure_subscription_id}",
      "method": "azureSubscriptionDeleteForApp",
      "httpMethod": "delete",
      "tag": "account",
      "description": "Delete the azure subscriptions for the app",
      "parameters": [
        {
          "name": "azure_subscription_id",
          "schema": "string",
          "required": true,
          "description": "The unique ID (UUID) of the azure subscription"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/billing/aggregated",
      "method": "billingAggregatedInformationGetByApp",
      "httpMethod": "get",
      "tag": "billing",
      "description": "Aggregated Billing Information for owner of a given app.",
      "parameters": [
        {
          "name": "service",
          "schema": "string",
          "required": false,
          "description": "Type of service that should be included in the Billing Information"
        },
        {
          "name": "period",
          "schema": "string",
          "required": false,
          "description": "Type of period that should be included in the Billing Information"
        },
        {
          "name": "showOriginalPlans",
          "schema": "boolean",
          "required": false,
          "description": "Controls whether the API should show the original plan when Azure Subscription is not enabled"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Aggregated Billing Information for a user or an organization"
        },
        {
          "statusCode": "default",
          "description": "Error"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/branches",
      "method": "buildsListBranches",
      "httpMethod": "get",
      "tag": "build",
      "description": "Returns the list of Git branches for this application",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A collection of branch status"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/branches/{branch}/builds",
      "method": "buildsListByBranch",
      "httpMethod": "get",
      "tag": "build",
      "description": "Returns the list of builds for the branch",
      "parameters": [
        {
          "name": "branch",
          "schema": "string",
          "required": true,
          "description": "The branch name"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A list of builds"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/branches/{branch}/builds",
      "method": "buildsCreate",
      "httpMethod": "post",
      "tag": "build",
      "description": "Create a build",
      "parameters": [
        {
          "name": "branch",
          "schema": "string",
          "required": true,
          "description": "The branch name"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "debug",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "sourceVersion",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/branches/{branch}/config",
      "method": "branchConfigurationsDelete",
      "httpMethod": "delete",
      "tag": "build",
      "description": "Deletes the branch build configuration",
      "parameters": [
        {
          "name": "branch",
          "schema": "string",
          "required": true,
          "description": "The branch name"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/branches/{branch}/config",
      "method": "branchConfigurationsGet",
      "httpMethod": "get",
      "tag": "build",
      "description": "Gets the branch configuration",
      "parameters": [
        {
          "name": "branch",
          "schema": "string",
          "required": true,
          "description": "The branch name"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/branches/{branch}/config",
      "method": "branchConfigurationsCreate",
      "httpMethod": "post",
      "tag": "build",
      "description": "Configures the branch for build",
      "parameters": [
        {
          "name": "branch",
          "schema": "string",
          "required": true,
          "description": "The branch name"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "artifactVersioning",
          "schema": "object",
          "description": ""
        },
        {
          "name": "badgeIsEnabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "cloneFromBranch",
          "schema": "string",
          "description": ""
        },
        {
          "name": "signed",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "testsEnabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "toolsets",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "trigger",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/branches/{branch}/config",
      "method": "branchConfigurationsUpdate",
      "httpMethod": "put",
      "tag": "build",
      "description": "Reconfigures the branch for build",
      "parameters": [
        {
          "name": "branch",
          "schema": "string",
          "required": true,
          "description": "The branch name"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "artifactVersioning",
          "schema": "object",
          "description": ""
        },
        {
          "name": "badgeIsEnabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "cloneFromBranch",
          "schema": "string",
          "description": ""
        },
        {
          "name": "signed",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "testsEnabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "toolsets",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "trigger",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/branches/{branch}/export_config",
      "method": "buildConfigurationsGet",
      "httpMethod": "get",
      "tag": "build",
      "description": "Gets the build configuration in Azure pipeline YAML format",
      "parameters": [
        {
          "name": "branch",
          "schema": "string",
          "required": true,
          "description": "The branch name"
        },
        {
          "name": "format",
          "schema": "string",
          "required": false,
          "description": "Configuration format"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The build configuration in Azure pipeline YAML format"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/branches/{branch}/toolset_projects",
      "method": "buildsListToolsetProjects",
      "httpMethod": "get",
      "tag": "build",
      "description": "Returns the projects in the repository for the branch, for all toolsets",
      "parameters": [
        {
          "name": "branch",
          "schema": "string",
          "required": true,
          "description": "The branch name"
        },
        {
          "name": "os",
          "schema": "string",
          "required": true,
          "description": "The desired OS for the project scan; normally the same as the app OS"
        },
        {
          "name": "platform",
          "schema": "string",
          "required": true,
          "description": "The desired platform for the project scan"
        },
        {
          "name": "maxSearchDepth",
          "schema": "integer",
          "required": false,
          "description": "The depth of the repository to search for project files"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A collection of projects for each type of toolset"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/bugtracker",
      "method": "bugtrackerGetSettings",
      "httpMethod": "get",
      "tag": "alerting",
      "description": "Get bug tracker settings for a particular app",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Alerting bugtracker resource"
        },
        {
          "statusCode": "default",
          "description": "Alerting service error"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/bugtracker/crashGroup/{crash_group_id}",
      "method": "bugTrackerGetRepoIssueFromCrash",
      "httpMethod": "get",
      "tag": "alerting",
      "description": "Get project issue related to a crash group",
      "parameters": [
        {
          "name": "crash_group_id",
          "schema": "string",
          "required": true,
          "description": "CrashGroup Id"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Object returned in response to getting a bug tracker issue related to a crash group id"
        },
        {
          "statusCode": "default",
          "description": "Alerting service error"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/build_service_status",
      "method": "buildsGetStatusByAppId",
      "httpMethod": "get",
      "tag": "build",
      "description": "Application specific build service status",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/builds/{build_id}",
      "method": "buildsGet",
      "httpMethod": "get",
      "tag": "build",
      "description": "Returns the build detail for the given build ID",
      "parameters": [
        {
          "name": "build_id",
          "schema": "integer",
          "required": true,
          "description": "The build ID"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/builds/{build_id}",
      "method": "buildsUpdate",
      "httpMethod": "patch",
      "tag": "build",
      "description": "Cancels a build",
      "parameters": [
        {
          "name": "build_id",
          "schema": "integer",
          "required": true,
          "description": "The build ID"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "status",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/builds/{build_id}/distribute",
      "method": "buildsDistribute",
      "httpMethod": "post",
      "tag": "build",
      "description": "Distribute a build",
      "parameters": [
        {
          "name": "build_id",
          "schema": "integer",
          "required": true,
          "description": "The build ID"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "destinations",
          "schema": "array",
          "description": ""
        },
        {
          "name": "mandatoryUpdate",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "notifyTesters",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "releaseNotes",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/builds/{build_id}/downloads/{download_type}",
      "method": "buildsGetDownloadUri",
      "httpMethod": "get",
      "tag": "build",
      "description": "Gets the download URI",
      "parameters": [
        {
          "name": "build_id",
          "schema": "integer",
          "required": true,
          "description": "The build ID"
        },
        {
          "name": "download_type",
          "schema": "string",
          "required": true,
          "description": "The download type"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A download reference"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/builds/{build_id}/logs",
      "method": "buildsGetLog",
      "httpMethod": "get",
      "tag": "build",
      "description": "Get the build log",
      "parameters": [
        {
          "name": "build_id",
          "schema": "integer",
          "required": true,
          "description": "The build ID"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/commits/batch",
      "method": "commitsListByShaList",
      "httpMethod": "get",
      "tag": "build",
      "description": "Returns commit information for a batch of shas",
      "parameters": [
        {
          "name": "hashes",
          "schema": "array",
          "required": true,
          "description": "A collection of commit SHAs comma-delimited"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A list of commits"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/crash_groups",
      "method": "crashGroupsList",
      "httpMethod": "get",
      "tag": "crash",
      "description": "Gets a list of crash groups and whether the list contains all available groups.",
      "parameters": [
        {
          "name": "last_occurrence_from",
          "schema": "string",
          "required": false,
          "description": "Earliest date when the last time a crash occured in a crash group"
        },
        {
          "name": "last_occurrence_to",
          "schema": "string",
          "required": false,
          "description": "Latest date when the last time a crash occured in a crash group"
        },
        {
          "name": "app_version",
          "schema": "string",
          "required": false,
          "description": "version"
        },
        {
          "name": "group_type",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "group_status",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "group_text_search",
          "schema": "string",
          "required": false,
          "description": "A freetext search that matches in crash, crash types, crash stack_traces and crash user"
        },
        {
          "name": "$orderby",
          "schema": "string",
          "required": false,
          "description": "the OData-like $orderby argument"
        },
        {
          "name": "continuation_token",
          "schema": "string",
          "required": false,
          "description": "Cassandra request continuation token. The token is used for pagination."
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/crash_groups/{crash_group_id}",
      "method": "crashGroupsGet",
      "httpMethod": "get",
      "tag": "crash",
      "description": "Gets a specific group.",
      "parameters": [
        {
          "name": "crash_group_id",
          "schema": "string",
          "required": true,
          "description": "id of a specific group"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/crash_groups/{crash_group_id}",
      "method": "crashGroupsUpdate",
      "httpMethod": "patch",
      "tag": "crash",
      "description": "Updates a group.",
      "parameters": [
        {
          "name": "crash_group_id",
          "schema": "string",
          "required": true,
          "description": "id of a specific group"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "annotation",
          "schema": "string",
          "description": ""
        },
        {
          "name": "status",
          "schema": "undefined",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/crash_groups/{crash_group_id}/crashes",
      "method": "crashesList",
      "httpMethod": "get",
      "tag": "crash",
      "description": "Gets all crashes of a group.",
      "parameters": [
        {
          "name": "crash_group_id",
          "schema": "string",
          "required": true,
          "description": "id of a specific group"
        },
        {
          "name": "include_report",
          "schema": "boolean",
          "required": false,
          "description": "true if the crash should include the raw crash report. Default is false"
        },
        {
          "name": "include_log",
          "schema": "boolean",
          "required": false,
          "description": "true if the crash should include the custom log report. Default is false"
        },
        {
          "name": "date_from",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "date_to",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "app_version",
          "schema": "string",
          "required": false,
          "description": "version"
        },
        {
          "name": "error_type",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/crash_groups/{crash_group_id}/crashes/{crash_id}",
      "method": "crashesDelete",
      "httpMethod": "delete",
      "tag": "crash",
      "description": "Delete a specific crash and related attachments and blobs for an app.",
      "parameters": [
        {
          "name": "crash_group_id",
          "schema": "string",
          "required": true,
          "description": "id of a specific group"
        },
        {
          "name": "crash_id",
          "schema": "string",
          "required": true,
          "description": "id of a specific crash"
        },
        {
          "name": "retention_delete",
          "schema": "boolean",
          "required": false,
          "description": "true in that case if the method should skip update counts"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/crash_groups/{crash_group_id}/crashes/{crash_id}",
      "method": "crashesGet",
      "httpMethod": "get",
      "tag": "crash",
      "description": "Gets a specific crash for an app.",
      "parameters": [
        {
          "name": "crash_group_id",
          "schema": "string",
          "required": true,
          "description": "id of a specific group"
        },
        {
          "name": "crash_id",
          "schema": "string",
          "required": true,
          "description": "id of a specific crash"
        },
        {
          "name": "include_report",
          "schema": "boolean",
          "required": false,
          "description": "true if the crash should include the raw crash report. Default is false"
        },
        {
          "name": "include_log",
          "schema": "boolean",
          "required": false,
          "description": "true if the crash should include the custom log report. Default is false"
        },
        {
          "name": "include_details",
          "schema": "boolean",
          "required": false,
          "description": "true if the crash should include in depth crash details"
        },
        {
          "name": "include_stacktrace",
          "schema": "boolean",
          "required": false,
          "description": "true if the crash should include the stacktrace information"
        },
        {
          "name": "grouping_only",
          "schema": "boolean",
          "required": false,
          "description": "true if the stacktrace should be only the relevant thread / exception. Default is false"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/crash_groups/{crash_group_id}/crashes/{crash_id}/native",
      "method": "crashesGetNativeCrash",
      "httpMethod": "get",
      "tag": "crash",
      "description": "Gets the native log of a specific crash.",
      "parameters": [
        {
          "name": "crash_group_id",
          "schema": "string",
          "required": true,
          "description": "id of a specific group"
        },
        {
          "name": "crash_id",
          "schema": "string",
          "required": true,
          "description": "id of a specific crash"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/crash_groups/{crash_group_id}/crashes/{crash_id}/native/download",
      "method": "crashesGetNativeCrashDownload",
      "httpMethod": "get",
      "tag": "crash",
      "description": "Gets the native log of a specific crash as a text attachment.",
      "parameters": [
        {
          "name": "crash_group_id",
          "schema": "string",
          "required": true,
          "description": "id of a specific group"
        },
        {
          "name": "crash_id",
          "schema": "string",
          "required": true,
          "description": "id of a specific crash"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/crash_groups/{crash_group_id}/crashes/{crash_id}/raw/location",
      "method": "crashesGetRawCrashLocation",
      "httpMethod": "get",
      "tag": "crash",
      "description": "Gets the URI location to download json of a specific crash.",
      "parameters": [
        {
          "name": "crash_group_id",
          "schema": "string",
          "required": true,
          "description": "id of a specific group"
        },
        {
          "name": "crash_id",
          "schema": "string",
          "required": true,
          "description": "id of a specific crash"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Location for downloading crash raw"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/crash_groups/{crash_group_id}/crashes/{crash_id}/stacktrace",
      "method": "crashesGetStacktrace",
      "httpMethod": "get",
      "tag": "crash",
      "description": "Gets a stacktrace for a specific crash.",
      "parameters": [
        {
          "name": "crash_group_id",
          "schema": "string",
          "required": true,
          "description": "id of a specific group"
        },
        {
          "name": "crash_id",
          "schema": "string",
          "required": true,
          "description": "id of a specific crash"
        },
        {
          "name": "grouping_only",
          "schema": "boolean",
          "required": false,
          "description": "true if the stacktrace should be only the relevant thread / exception. Default is false"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "a stacktrace in a processed and prettyfied way"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/crash_groups/{crash_group_id}/stacktrace",
      "method": "crashGroupsGetStacktrace",
      "httpMethod": "get",
      "tag": "crash",
      "description": "Gets a stacktrace for a specific crash.",
      "parameters": [
        {
          "name": "crash_group_id",
          "schema": "string",
          "required": true,
          "description": "id of a specific group"
        },
        {
          "name": "grouping_only",
          "schema": "boolean",
          "required": false,
          "description": "true if the stacktrace should be only the relevant thread / exception. Default is false"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "a stacktrace in a processed and prettyfied way"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/crashes/{crash_id}/attachments",
      "method": "crashesListAttachments",
      "httpMethod": "get",
      "tag": "crash",
      "description": "Gets all attachments for a specific crash.",
      "parameters": [
        {
          "name": "crash_id",
          "schema": "string",
          "required": true,
          "description": "id of a specific crash"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/crashes/{crash_id}/attachments/{attachment_id}/location",
      "method": "crashesGetCrashAttachmentLocation",
      "httpMethod": "get",
      "tag": "crash",
      "description": "Gets the URI location to download crash attachment.",
      "parameters": [
        {
          "name": "crash_id",
          "schema": "string",
          "required": true,
          "description": "id of a specific crash"
        },
        {
          "name": "attachment_id",
          "schema": "string",
          "required": true,
          "description": "attachment id"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Location for downloading crash attachment"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/crashes/{crash_id}/attachments/{attachment_id}/text",
      "method": "crashesGetCrashTextAttachmentContent",
      "httpMethod": "get",
      "tag": "crash",
      "description": "Gets content of the text attachment.",
      "parameters": [
        {
          "name": "crash_id",
          "schema": "string",
          "required": true,
          "description": "id of a specific crash"
        },
        {
          "name": "attachment_id",
          "schema": "string",
          "required": true,
          "description": "attachment id"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/crashes/{crash_id}/session_logs",
      "method": "crashesListSessionLogs",
      "httpMethod": "get",
      "tag": "analytics",
      "description": "Get session logs by crash ID",
      "parameters": [
        {
          "name": "crash_id",
          "schema": "string",
          "required": true,
          "description": "The id of the a crash"
        },
        {
          "name": "date",
          "schema": "string",
          "required": false,
          "description": "Date of data requested"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/crashes_info",
      "method": "crashesGetAppCrashesInfo",
      "httpMethod": "get",
      "tag": "crash",
      "description": "Gets whether the application has any crashes.",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/deployments",
      "method": "codePushDeploymentsList",
      "httpMethod": "get",
      "tag": "codepush",
      "description": "Gets a list of CodePush deployments for the given app",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/deployments",
      "method": "codePushDeploymentsCreate",
      "httpMethod": "post",
      "tag": "codepush",
      "description": "Creates a CodePush Deployment for the given app",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "key",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "latest_release",
          "schema": "undefined",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/deployments/{deployment_name}",
      "method": "codePushDeploymentsDelete",
      "httpMethod": "delete",
      "tag": "codepush",
      "description": "Deletes a CodePush Deployment for the given app",
      "parameters": [
        {
          "name": "deployment_name",
          "schema": "string",
          "required": true,
          "description": "deployment name"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/deployments/{deployment_name}",
      "method": "codePushDeploymentsGet",
      "httpMethod": "get",
      "tag": "codepush",
      "description": "Gets a CodePush Deployment for the given app",
      "parameters": [
        {
          "name": "deployment_name",
          "schema": "string",
          "required": true,
          "description": "deployment name"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/deployments/{deployment_name}",
      "method": "codePushDeploymentsUpdate",
      "httpMethod": "patch",
      "tag": "codepush",
      "description": "Modifies a CodePush Deployment for the given app",
      "parameters": [
        {
          "name": "deployment_name",
          "schema": "string",
          "required": true,
          "description": "deployment name"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/deployments/{deployment_name}/metrics",
      "method": "codePushDeploymentMetricsGet",
      "httpMethod": "get",
      "tag": "codepush",
      "description": "Gets all releases metrics for specified Deployment",
      "parameters": [
        {
          "name": "deployment_name",
          "schema": "string",
          "required": true,
          "description": "deployment name"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/deployments/{deployment_name}/promote_release/{promote_deployment_name}",
      "method": "codePushDeploymentsPromote",
      "httpMethod": "post",
      "tag": "codepush",
      "description": "Promote one release (default latest one) from one deployment to another",
      "parameters": [
        {
          "name": "deployment_name",
          "schema": "string",
          "required": true,
          "description": "deployment name"
        },
        {
          "name": "promote_deployment_name",
          "schema": "string",
          "required": true,
          "description": "deployment name"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/deployments/{deployment_name}/releases",
      "method": "codePushDeploymentReleasesDelete",
      "httpMethod": "delete",
      "tag": "codepush",
      "description": "Clears a Deployment of releases",
      "parameters": [
        {
          "name": "deployment_name",
          "schema": "string",
          "required": true,
          "description": "deployment name"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/deployments/{deployment_name}/releases",
      "method": "codePushDeploymentReleasesGet",
      "httpMethod": "get",
      "tag": "codepush",
      "description": "Gets the history of releases on a Deployment",
      "parameters": [
        {
          "name": "deployment_name",
          "schema": "string",
          "required": true,
          "description": "deployment name"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/deployments/{deployment_name}/releases",
      "method": "codePushDeploymentReleasesCreate",
      "httpMethod": "post",
      "tag": "codepush",
      "description": "Create a new CodePush release for the specified deployment",
      "parameters": [
        {
          "name": "deployment_name",
          "schema": "string",
          "required": true,
          "description": "deployment name"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "deployment_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "disabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "mandatory",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "no_duplicate_release_error",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "release_upload",
          "schema": "undefined",
          "required": true,
          "description": ""
        },
        {
          "name": "rollout",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "target_binary_version",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/deployments/{deployment_name}/releases/{release_label}",
      "method": "deploymentReleasesUpdate",
      "httpMethod": "patch",
      "tag": "codepush",
      "description": "Modifies a CodePush release metadata under the given Deployment",
      "parameters": [
        {
          "name": "deployment_name",
          "schema": "string",
          "required": true,
          "description": "deployment name"
        },
        {
          "name": "release_label",
          "schema": "string",
          "required": true,
          "description": "release label"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/deployments/{deployment_name}/rollback_release",
      "method": "codePushDeploymentReleaseRollback",
      "httpMethod": "post",
      "tag": "codepush",
      "description": "Rollback the latest or a specific release for an app deployment",
      "parameters": [
        {
          "name": "deployment_name",
          "schema": "string",
          "required": true,
          "description": "deployment name"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "label",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/deployments/{deployment_name}/uploads",
      "method": "codePushDeploymentUploadCreate",
      "httpMethod": "post",
      "tag": "codepush",
      "description": "Create a new CodePush release upload for the specified deployment",
      "parameters": [
        {
          "name": "deployment_name",
          "schema": "string",
          "required": true,
          "description": "deployment name"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/device_configurations",
      "method": "testGetDeviceConfigurations",
      "httpMethod": "get",
      "tag": "test",
      "description": "Returns a list of available devices",
      "parameters": [
        {
          "name": "app_upload_id",
          "schema": "string",
          "required": false,
          "description": "The ID of the test run"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/device_selection",
      "method": "testCreateDeviceSelection",
      "httpMethod": "post",
      "tag": "test",
      "description": "Creates a short ID for a list of devices",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "devices",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Short ID for a list of device IDs"
        },
        {
          "statusCode": "400",
          "description": "Details of a failed operation"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/devices/block_logs",
      "method": "appBlockLogs",
      "httpMethod": "put",
      "tag": "analytics",
      "description": "**Warning, this operation is not reversible.** \n\nA successful call to this API will permanently stop ingesting any logs received via SDK by app_id, and cannot be restored. We advise caution when using this API, it is designed to permanently disable an app_id.\n",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/devices/block_logs/{install_id}",
      "method": "devicesBlockLogs",
      "httpMethod": "put",
      "tag": "analytics",
      "description": "**Warning, this operation is not reversible.**\n\n A successful call to this API will permanently stop ingesting any logs received via SDK for the given installation ID, and cannot be restored. We advise caution when using this API, it is designed to permanently disable collection from a specific installation of the app on a device, usually following the request from a user.\n",
      "parameters": [
        {
          "name": "install_id",
          "schema": "string",
          "required": true,
          "description": "The id of the device"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/diagnostics/symbol_groups",
      "method": "missingSymbolGroupsList",
      "httpMethod": "get",
      "tag": "crash",
      "description": "Gets top N (ordered by crash count) of crash groups by missing symbol",
      "parameters": [
        {
          "name": "top",
          "schema": "integer",
          "required": true,
          "description": "top N elements"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "grouped by missing symbols crashes response object"
        },
        {
          "statusCode": "default",
          "description": "failure response object"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/diagnostics/symbol_groups/{symbol_group_id}",
      "method": "missingSymbolGroupsGet",
      "httpMethod": "get",
      "tag": "crash",
      "description": "Gets missing symbol crash group by its id",
      "parameters": [
        {
          "name": "symbol_group_id",
          "schema": "string",
          "required": true,
          "description": "missing symbol crash group id"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "grouped by missing symbols crashes response object"
        },
        {
          "statusCode": "default",
          "description": "failure response object"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/diagnostics/symbol_groups_info",
      "method": "missingSymbolGroupsInfo",
      "httpMethod": "get",
      "tag": "crash",
      "description": "Gets application level statistics for all missing symbol groups",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "missing symbol groups"
        },
        {
          "statusCode": "default",
          "description": "failure response object"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/distribution_groups",
      "method": "distributionGroupsList",
      "httpMethod": "get",
      "tag": "account",
      "description": "Returns a list of distribution groups in the app specified",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/distribution_groups",
      "method": "distributionGroupsCreate",
      "httpMethod": "post",
      "tag": "account",
      "description": "Creates a new distribution group and returns it to the caller",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "display_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/distribution_groups/{distribution_group_name}",
      "method": "distributionGroupsDelete",
      "httpMethod": "delete",
      "tag": "account",
      "description": "Deletes a distribution group",
      "parameters": [
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "distribution_group_name",
          "schema": "string",
          "required": true,
          "description": "The name of the distribution group"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/distribution_groups/{distribution_group_name}",
      "method": "distributionGroupsGet",
      "httpMethod": "get",
      "tag": "account",
      "description": "Returns a single distribution group for a given distribution group name",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "distribution_group_name",
          "schema": "string",
          "required": true,
          "description": "The name of the distribution group"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/distribution_groups/{distribution_group_name}",
      "method": "distributionGroupsUpdate",
      "httpMethod": "patch",
      "tag": "account",
      "description": "Updates the attributes of distribution group",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "distribution_group_name",
          "schema": "string",
          "required": true,
          "description": "The name of the distribution group"
        },
        {
          "name": "is_public",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/distribution_groups/{distribution_group_name}/devices",
      "method": "devicesList",
      "httpMethod": "get",
      "tag": "distribute",
      "description": "Returns all devices associated with the given distribution group",
      "parameters": [
        {
          "name": "distribution_group_name",
          "schema": "string",
          "required": true,
          "description": "The name of the distribution group."
        },
        {
          "name": "release_id",
          "schema": "number",
          "description": "when provided, gets the provisioning state of the devices owned by users of this distribution group when compared to the provided release."
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/distribution_groups/{distribution_group_name}/devices/download_devices_list",
      "method": "devicesListCsvFormat",
      "httpMethod": "get",
      "tag": "distribute",
      "description": "Returns all devices associated with the given distribution group.",
      "parameters": [
        {
          "name": "distribution_group_name",
          "schema": "string",
          "required": true,
          "description": "The name of the distribution group."
        },
        {
          "name": "unprovisioned_only",
          "schema": "boolean",
          "description": "when true, filters out provisioned devices"
        },
        {
          "name": "udids",
          "schema": "array",
          "description": "multiple UDIDs which should be part of the resulting CSV."
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/distribution_groups/{distribution_group_name}/members",
      "method": "distributionGroupsListUsers",
      "httpMethod": "get",
      "tag": "account",
      "description": "Returns a list of member details in the distribution group specified",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "distribution_group_name",
          "schema": "string",
          "required": true,
          "description": "The name of the distribution group"
        },
        {
          "name": "exclude_pending_invitations",
          "schema": "boolean",
          "required": false,
          "description": "Whether to exclude pending invitations in the response"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/distribution_groups/{distribution_group_name}/members",
      "method": "distributionGroupsAddUser",
      "httpMethod": "post",
      "tag": "account",
      "description": "Adds the members to the specified distribution group",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "distribution_group_name",
          "schema": "string",
          "required": true,
          "description": "The name of the distribution group"
        },
        {
          "name": "user_emails",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/distribution_groups/{distribution_group_name}/members/bulk_delete",
      "method": "distributionGroupsRemoveUser",
      "httpMethod": "post",
      "tag": "account",
      "description": "Remove the users from the distribution group",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "distribution_group_name",
          "schema": "string",
          "required": true,
          "description": "The name of the distribution group"
        },
        {
          "name": "user_emails",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/distribution_groups/{distribution_group_name}/releases",
      "method": "releasesListByDistributionGroup",
      "httpMethod": "get",
      "tag": "distribute",
      "description": "Return basic information about distributed releases in a given distribution group.",
      "parameters": [
        {
          "name": "distribution_group_name",
          "schema": "string",
          "required": true,
          "description": "The name of the distribution group."
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Response for getting a list of releases in a distribution group"
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/distribution_groups/{distribution_group_name}/releases/{release_id}",
      "method": "releasesDeleteWithDistributionGroupId",
      "httpMethod": "delete",
      "tag": "distribute",
      "description": "Deletes a release with id 'release_id' in a given distribution group.",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the app owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the app"
        },
        {
          "name": "distribution_group_name",
          "schema": "string",
          "required": true,
          "description": "The name of the distribution group."
        },
        {
          "name": "release_id",
          "schema": "integer",
          "required": true,
          "description": "The ID identifying the unique release."
        }
      ],
      "responses": []
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/distribution_groups/{distribution_group_name}/releases/{release_id}",
      "method": "releasesGetLatestByDistributionGroup",
      "httpMethod": "get",
      "tag": "distribute",
      "description": "Return detailed information about a distributed release in a given distribution group.",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the app owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the app"
        },
        {
          "name": "distribution_group_name",
          "schema": "string",
          "required": true,
          "description": "The name of the distribution group."
        },
        {
          "name": "release_id",
          "schema": "string",
          "required": true,
          "description": "Also supports the constant `latest`, which will return the latest release in the distribution group."
        },
        {
          "name": "is_install_page",
          "schema": "boolean",
          "required": false,
          "description": "The check if the request is from Install page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Details of an uploaded release"
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "501",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/distribution_groups/{distribution_group_name}/resend_invite",
      "method": "distributionGroupsResendInvite",
      "httpMethod": "post",
      "tag": "account",
      "description": "Resend distribution group app invite notification to previously invited testers",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "distribution_group_name",
          "schema": "string",
          "required": true,
          "description": "The name of the distribution group"
        },
        {
          "name": "user_emails",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/distribution_stores",
      "method": "storesList",
      "httpMethod": "get",
      "tag": "distribute",
      "description": "Get all the store details from Storage store table for a particular application.",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/distribution_stores",
      "method": "storesCreate",
      "httpMethod": "post",
      "tag": "distribute",
      "description": "Create a new external store for the specified application.",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "intune_details",
          "schema": "undefined",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "service_connection_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "track",
          "schema": "string",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "ExternalStoreResponse"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/distribution_stores/{store_name}",
      "method": "storesDelete",
      "httpMethod": "delete",
      "tag": "distribute",
      "description": "delete the store based on specific store name.",
      "parameters": [
        {
          "name": "store_name",
          "schema": "string",
          "required": true,
          "description": "The name of the store"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/distribution_stores/{store_name}",
      "method": "storesGet",
      "httpMethod": "get",
      "tag": "distribute",
      "description": "Return the store details for specified store name.",
      "parameters": [
        {
          "name": "store_name",
          "schema": "string",
          "required": true,
          "description": "The name of the store"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "ExternalStoreResponse"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/distribution_stores/{store_name}",
      "method": "storesPatch",
      "httpMethod": "patch",
      "tag": "distribute",
      "description": "Update the store.",
      "parameters": [
        {
          "name": "store_name",
          "schema": "string",
          "required": true,
          "description": "The name of the store"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "service_connection_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/distribution_stores/{store_name}/latest_release",
      "method": "storeReleasesGetLatest",
      "httpMethod": "get",
      "tag": "distribute",
      "description": "Returns the latest release published in a store.",
      "parameters": [
        {
          "name": "store_name",
          "schema": "string",
          "required": true,
          "description": "The name of the store"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/distribution_stores/{store_name}/releases",
      "method": "storeReleasesList",
      "httpMethod": "get",
      "tag": "distribute",
      "description": "Return all releases published  in a store",
      "parameters": [
        {
          "name": "store_name",
          "schema": "string",
          "required": true,
          "description": "The name of the store"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/distribution_stores/{store_name}/releases/{release_id}",
      "method": "storeReleasesDelete",
      "httpMethod": "delete",
      "tag": "distribute",
      "description": "delete the release with release Id",
      "parameters": [
        {
          "name": "store_name",
          "schema": "string",
          "required": true,
          "description": "The name of the store"
        },
        {
          "name": "release_id",
          "schema": "string",
          "required": true,
          "description": "The id of the release"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/distribution_stores/{store_name}/releases/{release_id}",
      "method": "storeReleasesGet",
      "httpMethod": "get",
      "tag": "distribute",
      "description": "Return releases published in a store for releaseId and storeId",
      "parameters": [
        {
          "name": "store_name",
          "schema": "string",
          "required": true,
          "description": "The name of the store"
        },
        {
          "name": "release_id",
          "schema": "string",
          "required": true,
          "description": "The name of the store"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/distribution_stores/{store_name}/releases/{release_id}/publish_error_details",
      "method": "storeReleasesGetPublishError",
      "httpMethod": "get",
      "tag": "distribute",
      "description": "Return the Error Details of release which failed in publishing.",
      "parameters": [
        {
          "name": "store_name",
          "schema": "string",
          "required": true,
          "description": "The name of the store"
        },
        {
          "name": "release_id",
          "schema": "number",
          "required": true,
          "description": "The id of the release"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "ReleasePublishErrorResponse"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/distribution_stores/{store_name}/releases/{release_id}/publish_logs",
      "method": "storeReleasePublishLogsGet",
      "httpMethod": "get",
      "tag": "distribute",
      "description": "Returns publish logs for a particular release published to a particular store",
      "parameters": [
        {
          "name": "store_name",
          "schema": "string",
          "required": true,
          "description": "The name of the store"
        },
        {
          "name": "release_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the realease"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/distribution_stores/{store_name}/releases/{release_id}/realtimestatus",
      "method": "storeReleasesGetRealTimeStatusByReleaseId",
      "httpMethod": "get",
      "tag": "distribute",
      "description": "Return the Real time Status publishing of release from store.",
      "parameters": [
        {
          "name": "store_name",
          "schema": "string",
          "required": true,
          "description": "The name of the store"
        },
        {
          "name": "release_id",
          "schema": "number",
          "required": true,
          "description": "The id of the release"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "status of the app from store"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/errors/availableAppBuilds",
      "method": "errorsAppBuildsList",
      "httpMethod": "get",
      "tag": "errors",
      "description": "List of app builds",
      "parameters": [
        {
          "name": "version",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "start",
          "schema": "string",
          "required": true,
          "description": "Start date time in data in ISO 8601 date time format"
        },
        {
          "name": "end",
          "schema": "string",
          "required": false,
          "description": "Last date time in data in ISO 8601 date time format"
        },
        {
          "name": "$top",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of results to return. (0 will fetch all results till the max number.)"
        },
        {
          "name": "errorType",
          "schema": "string",
          "required": false,
          "description": "Type of error (handled vs unhandled), including All"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/errors/available_versions",
      "method": "errorsAvailableVersions",
      "httpMethod": "get",
      "tag": "errors",
      "description": "Get all available versions in the time range.",
      "parameters": [
        {
          "name": "start",
          "schema": "string",
          "required": true,
          "description": "Start date time in data in ISO 8601 date time format"
        },
        {
          "name": "end",
          "schema": "string",
          "required": false,
          "description": "Last date time in data in ISO 8601 date time format"
        },
        {
          "name": "$top",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of results to return. (0 will fetch all results till the max number.)"
        },
        {
          "name": "$skip",
          "schema": "integer",
          "required": false,
          "description": "The offset (starting at 0) of the first result to return. This parameter along with limit is used to perform pagination."
        },
        {
          "name": "$filter",
          "schema": "string",
          "required": false,
          "description": "A filter as specified in https://github.com/Microsoft/api-guidelines/blob/master/Guidelines.md#97-filtering."
        },
        {
          "name": "$inlinecount",
          "schema": "string",
          "required": false,
          "description": "Controls whether or not to include a count of all the items across all pages."
        },
        {
          "name": "errorType",
          "schema": "string",
          "required": false,
          "description": "Type of error (handled vs unhandled), including All"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/errors/errorCountsPerDay",
      "method": "errorsCountsPerDay",
      "httpMethod": "get",
      "tag": "errors",
      "description": "Count of crashes or errors by day in the time range based the selected versions. If SingleErrorTypeParameter is not provided, defaults to handlederror.",
      "parameters": [
        {
          "name": "version",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "string",
          "required": true,
          "description": "Start date time in data in ISO 8601 date time format"
        },
        {
          "name": "end",
          "schema": "string",
          "required": false,
          "description": "Last date time in data in ISO 8601 date time format"
        },
        {
          "name": "app_build",
          "schema": "string",
          "required": false,
          "description": "app build"
        },
        {
          "name": "errorType",
          "schema": "string",
          "required": false,
          "description": "Type of error (handled vs unhandled), excluding All"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/errors/errorGroups",
      "method": "errorsGroupList",
      "httpMethod": "get",
      "tag": "errors",
      "description": "List of error groups",
      "parameters": [
        {
          "name": "version",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "app_build",
          "schema": "string",
          "required": false,
          "description": "app build"
        },
        {
          "name": "groupState",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "string",
          "required": true,
          "description": "Start date time in data in ISO 8601 date time format"
        },
        {
          "name": "end",
          "schema": "string",
          "required": false,
          "description": "Last date time in data in ISO 8601 date time format"
        },
        {
          "name": "$orderby",
          "schema": "string",
          "required": false,
          "description": "controls the sorting order and sorting based on which column"
        },
        {
          "name": "$top",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of results to return. (0 will fetch all results till the max number.)"
        },
        {
          "name": "errorType",
          "schema": "string",
          "required": false,
          "description": "Type of error (handled vs unhandled), including All"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/errors/errorGroups/search",
      "method": "errorsErrorGroupsSearch",
      "httpMethod": "get",
      "tag": "errors",
      "description": "Error groups list based on search parameters",
      "parameters": [
        {
          "name": "filter",
          "schema": "string",
          "required": false,
          "description": "A filter as specified in OData notation"
        },
        {
          "name": "q",
          "schema": "string",
          "required": false,
          "description": "A query string"
        },
        {
          "name": "order",
          "schema": "string",
          "required": false,
          "description": "It controls the order of sorting"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "It controls the sort based on specified field"
        },
        {
          "name": "$top",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of results to return"
        },
        {
          "name": "$skip",
          "schema": "integer",
          "required": false,
          "description": "The offset (starting at 0) of the first result to return. This parameter along with limit is used to perform pagination."
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/errors/errorGroups/{errorGroupId}",
      "method": "errorsGroupDetails",
      "httpMethod": "get",
      "tag": "errors",
      "description": "Error group details",
      "parameters": [
        {
          "name": "errorGroupId",
          "schema": "string",
          "required": true,
          "description": "The id of the error group"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/errors/errorGroups/{errorGroupId}",
      "method": "errorsUpdateState",
      "httpMethod": "patch",
      "tag": "errors",
      "description": "Update error group state",
      "parameters": [
        {
          "name": "errorGroupId",
          "schema": "string",
          "required": true,
          "description": "The id of the error group"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "annotation",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "state",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/errors/errorGroups/{errorGroupId}/errorCountsPerDay",
      "method": "errorsGroupCountsPerDay",
      "httpMethod": "get",
      "tag": "errors",
      "description": "Count of errors by day in the time range of the selected error group with selected version",
      "parameters": [
        {
          "name": "errorGroupId",
          "schema": "string",
          "required": true,
          "description": "The id of the error group"
        },
        {
          "name": "version",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "string",
          "required": true,
          "description": "Start date time in data in ISO 8601 date time format"
        },
        {
          "name": "end",
          "schema": "string",
          "required": false,
          "description": "Last date time in data in ISO 8601 date time format"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/errors/errorGroups/{errorGroupId}/errorfreeDevicePercentages",
      "method": "errorsGroupErrorFreeDevicePercentages",
      "httpMethod": "get",
      "tag": "errors",
      "description": "Percentage of error-free devices by day in the time range. Api will return -1 if crash devices is greater than active devices",
      "parameters": [
        {
          "name": "errorGroupId",
          "schema": "string",
          "required": true,
          "description": "The id of the error group"
        },
        {
          "name": "start",
          "schema": "string",
          "required": true,
          "description": "Start date time in data in ISO 8601 date time format"
        },
        {
          "name": "end",
          "schema": "string",
          "required": false,
          "description": "Last date time in data in ISO 8601 date time format"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/errors/errorGroups/{errorGroupId}/errors",
      "method": "errorsListForGroup",
      "httpMethod": "get",
      "tag": "errors",
      "description": "Get all errors for group",
      "parameters": [
        {
          "name": "errorGroupId",
          "schema": "string",
          "required": true,
          "description": "The id of the error group"
        },
        {
          "name": "start",
          "schema": "string",
          "required": true,
          "description": "Start date time in data in ISO 8601 date time format"
        },
        {
          "name": "end",
          "schema": "string",
          "required": false,
          "description": "Last date time in data in ISO 8601 date time format"
        },
        {
          "name": "$top",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of results to return. (0 will fetch all results till the max number.)"
        },
        {
          "name": "model",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "os",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/errors/errorGroups/{errorGroupId}/errors/latest",
      "method": "errorsLatestErrorDetails",
      "httpMethod": "get",
      "tag": "errors",
      "description": "Latest error details.",
      "parameters": [
        {
          "name": "errorGroupId",
          "schema": "string",
          "required": true,
          "description": "The id of the error group"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/errors/errorGroups/{errorGroupId}/errors/{errorId}",
      "method": "errorsDeleteError",
      "httpMethod": "delete",
      "tag": "errors",
      "description": "Delete a specific error and related attachments and blobs for an app. Searchable data will not be deleted immediately and may take up to 30 days.",
      "parameters": [
        {
          "name": "errorGroupId",
          "schema": "string",
          "required": true,
          "description": "The id of the error group"
        },
        {
          "name": "errorId",
          "schema": "string",
          "required": true,
          "description": "The id of the error"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/errors/errorGroups/{errorGroupId}/errors/{errorId}",
      "method": "errorsGetErrorDetails",
      "httpMethod": "get",
      "tag": "errors",
      "description": "Error details.",
      "parameters": [
        {
          "name": "errorGroupId",
          "schema": "string",
          "required": true,
          "description": "The id of the error group"
        },
        {
          "name": "errorId",
          "schema": "string",
          "required": true,
          "description": "The id of the error"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/errors/errorGroups/{errorGroupId}/errors/{errorId}/download",
      "method": "errorsErrorDownload",
      "httpMethod": "get",
      "tag": "errors",
      "description": "Download details for a specific error.",
      "parameters": [
        {
          "name": "errorGroupId",
          "schema": "string",
          "required": true,
          "description": "The id of the error group"
        },
        {
          "name": "errorId",
          "schema": "string",
          "required": true,
          "description": "The id of the error"
        },
        {
          "name": "format",
          "schema": "string",
          "required": false,
          "description": "the format of the crash log"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/errors/errorGroups/{errorGroupId}/errors/{errorId}/location",
      "method": "errorsErrorLocation",
      "httpMethod": "get",
      "tag": "errors",
      "description": "Error location.",
      "parameters": [
        {
          "name": "errorGroupId",
          "schema": "string",
          "required": true,
          "description": "The id of the error group"
        },
        {
          "name": "errorId",
          "schema": "string",
          "required": true,
          "description": "The id of the error"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/errors/errorGroups/{errorGroupId}/errors/{errorId}/stacktrace",
      "method": "errorsErrorStackTrace",
      "httpMethod": "get",
      "tag": "errors",
      "description": "Error Stacktrace details.",
      "parameters": [
        {
          "name": "errorGroupId",
          "schema": "string",
          "required": true,
          "description": "The id of the error group"
        },
        {
          "name": "errorId",
          "schema": "string",
          "required": true,
          "description": "The id of the error"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "a stacktrace in a processed and prettyfied way"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/errors/errorGroups/{errorGroupId}/models",
      "method": "errorsGroupModelCounts",
      "httpMethod": "get",
      "tag": "errors",
      "description": "Top models of the selected error group.",
      "parameters": [
        {
          "name": "errorGroupId",
          "schema": "string",
          "required": true,
          "description": "The id of the error group"
        },
        {
          "name": "$top",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of results to return. (0 will fetch all results till the max number.)"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/errors/errorGroups/{errorGroupId}/operatingSystems",
      "method": "errorsGroupOperatingSystemCounts",
      "httpMethod": "get",
      "tag": "errors",
      "description": "Top OSes of the selected error group.",
      "parameters": [
        {
          "name": "errorGroupId",
          "schema": "string",
          "required": true,
          "description": "The id of the error group"
        },
        {
          "name": "$top",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of results to return. (0 will fetch all results till the max number.)"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/errors/errorGroups/{errorGroupId}/stacktrace",
      "method": "errorsGroupErrorStackTrace",
      "httpMethod": "get",
      "tag": "errors",
      "description": "Gets the stack trace for the error group.",
      "parameters": [
        {
          "name": "errorGroupId",
          "schema": "string",
          "required": true,
          "description": "The id of the error group"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "a stacktrace in a processed and prettyfied way"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/errors/errorfreeDevicePercentages",
      "method": "errorsErrorFreeDevicePercentages",
      "httpMethod": "get",
      "tag": "errors",
      "description": "Percentage of error-free devices by day in the time range based on the selected versions. If SingleErrorTypeParameter is not provided, defaults to handlederror. API will return -1 if crash devices is greater than active devices",
      "parameters": [
        {
          "name": "start",
          "schema": "string",
          "required": true,
          "description": "Start date time in data in ISO 8601 date time format"
        },
        {
          "name": "end",
          "schema": "string",
          "required": false,
          "description": "Last date time in data in ISO 8601 date time format"
        },
        {
          "name": "versions",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "app_build",
          "schema": "string",
          "required": false,
          "description": "app build"
        },
        {
          "name": "errorType",
          "schema": "string",
          "required": false,
          "description": "Type of error (handled vs unhandled), excluding All"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/errors/retention_settings",
      "method": "errorsGetRetentionSettings",
      "httpMethod": "get",
      "tag": "errors",
      "description": "gets the retention settings in days",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/errors/search",
      "method": "errorsErrorSearch",
      "httpMethod": "get",
      "tag": "errors",
      "description": "Errors list based on search parameters",
      "parameters": [
        {
          "name": "filter",
          "schema": "string",
          "required": false,
          "description": "A filter as specified in OData notation"
        },
        {
          "name": "q",
          "schema": "string",
          "required": false,
          "description": "A query string"
        },
        {
          "name": "order",
          "schema": "string",
          "required": false,
          "description": "It controls the order of sorting"
        },
        {
          "name": "sort",
          "schema": "string",
          "required": false,
          "description": "It controls the sort based on specified field"
        },
        {
          "name": "$top",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of results to return"
        },
        {
          "name": "$skip",
          "schema": "integer",
          "required": false,
          "description": "The offset (starting at 0) of the first result to return. This parameter along with limit is used to perform pagination."
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/errors/{errorId}/attachments",
      "method": "errorsErrorAttachments",
      "httpMethod": "get",
      "tag": "errors",
      "description": "List error attachments.",
      "parameters": [
        {
          "name": "errorId",
          "schema": "string",
          "required": true,
          "description": "The id of the error"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/errors/{errorId}/attachments/{attachmentId}/location",
      "method": "errorsErrorAttachmentLocation",
      "httpMethod": "get",
      "tag": "errors",
      "description": "Error attachment location.",
      "parameters": [
        {
          "name": "errorId",
          "schema": "string",
          "required": true,
          "description": "The id of the error"
        },
        {
          "name": "attachmentId",
          "schema": "string",
          "required": true,
          "description": "Error attachment id."
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/errors/{errorId}/attachments/{attachmentId}/text",
      "method": "errorsErrorAttachmentText",
      "httpMethod": "get",
      "tag": "errors",
      "description": "Error attachment text.",
      "parameters": [
        {
          "name": "errorId",
          "schema": "string",
          "required": true,
          "description": "The id of the error"
        },
        {
          "name": "attachmentId",
          "schema": "string",
          "required": true,
          "description": "Error attachment id."
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/errors/{errorId}/sessionLogs",
      "method": "errorsListSessionLogs",
      "httpMethod": "get",
      "tag": "errors",
      "description": "Get session logs by error ID",
      "parameters": [
        {
          "name": "errorId",
          "schema": "string",
          "required": true,
          "description": "The id of the error"
        },
        {
          "name": "date",
          "schema": "string",
          "required": false,
          "description": "Date of data requested"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/export_configurations",
      "method": "exportConfigurationsList",
      "httpMethod": "get",
      "tag": "export",
      "description": "List export configurations.",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of export configurations"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/export_configurations",
      "method": "exportConfigurationsCreate",
      "httpMethod": "post",
      "tag": "export",
      "description": "Create new export configuration",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "backfill",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "export_entities",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "resource_group",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "resource_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": "Export configuration result"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/export_configurations/{export_configuration_id}",
      "method": "exportConfigurationsDelete",
      "httpMethod": "delete",
      "tag": "export",
      "description": "Delete export configuration.",
      "parameters": [
        {
          "name": "export_configuration_id",
          "schema": "string",
          "required": true,
          "description": "The id of the export configuration."
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/export_configurations/{export_configuration_id}",
      "method": "exportConfigurationsGet",
      "httpMethod": "get",
      "tag": "export",
      "description": "Get export configuration.",
      "parameters": [
        {
          "name": "export_configuration_id",
          "schema": "string",
          "required": true,
          "description": "The id of the export configuration."
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Export configuration result"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/export_configurations/{export_configuration_id}",
      "method": "exportConfigurationsPartialUpdate",
      "httpMethod": "patch",
      "tag": "export",
      "description": "Partially update export configuration.",
      "parameters": [
        {
          "name": "export_configuration_id",
          "schema": "string",
          "required": true,
          "description": "The id of the export configuration."
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "backfill",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "export_entities",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "resource_group",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "resource_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Export configuration result"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/export_configurations/{export_configuration_id}/disable",
      "method": "exportConfigurationsDisable",
      "httpMethod": "post",
      "tag": "export",
      "description": "Disable export configuration.",
      "parameters": [
        {
          "name": "export_configuration_id",
          "schema": "string",
          "required": true,
          "description": "The id of the export configuration."
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/export_configurations/{export_configuration_id}/enable",
      "method": "exportConfigurationsEnable",
      "httpMethod": "post",
      "tag": "export",
      "description": "Enable export configuration.",
      "parameters": [
        {
          "name": "export_configuration_id",
          "schema": "string",
          "required": true,
          "description": "The id of the export configuration."
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/file_asset",
      "method": "fileAssetsCreate",
      "httpMethod": "post",
      "tag": "build",
      "description": "Create a new asset to upload a file",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/invitations",
      "method": "appInvitationsList",
      "httpMethod": "get",
      "tag": "account",
      "description": "Gets the pending invitations for the app",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/invitations",
      "method": "appInvitationsCreate",
      "httpMethod": "post",
      "tag": "account",
      "description": "Invites a new or existing user to an app",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "role",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "user_email",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/invitations/{user_email}",
      "method": "appInvitationsDelete",
      "httpMethod": "delete",
      "tag": "account",
      "description": "Removes a user's invitation to an app",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "user_email",
          "schema": "string",
          "required": true,
          "description": "The email of the user to invite"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/invitations/{user_email}",
      "method": "appInvitationsUpdatePermissions",
      "httpMethod": "patch",
      "tag": "account",
      "description": "Update pending invitation permission",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "user_email",
          "schema": "string",
          "required": true,
          "description": "The email of the user to invite"
        },
        {
          "name": "permissions",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/invitations/{user_email}",
      "method": "appInvitationsCreateByEmail",
      "httpMethod": "post",
      "tag": "account",
      "description": "Invites a new or existing user to an app",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "user_email",
          "schema": "string",
          "required": true,
          "description": "The email of the user to invite"
        },
        {
          "name": "role",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/notifications/emailSettings",
      "method": "notificationsGetAppEmailSettings",
      "httpMethod": "get",
      "tag": "alerting",
      "description": "Get Email notification settings of user for a particular app",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Alerting Email Settings of the user for a particular app"
        },
        {
          "statusCode": "default",
          "description": "Alerting service error"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/owner/device_sets",
      "method": "testListDeviceSetsOfOwner",
      "httpMethod": "get",
      "tag": "test",
      "description": "Lists device sets belonging to the owner",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/owner/device_sets",
      "method": "testCreateDeviceSetOfOwner",
      "httpMethod": "post",
      "tag": "test",
      "description": "Creates a device set belonging to the owner",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "devices",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The name and devices of the device set"
        },
        {
          "statusCode": "400",
          "description": "Details of a failed operation"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/owner/device_sets/{id}",
      "method": "testDeleteDeviceSetOfOwner",
      "httpMethod": "delete",
      "tag": "test",
      "description": "Deletes a device set belonging to the owner",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The UUID of the device set"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": []
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/owner/device_sets/{id}",
      "method": "testGetDeviceSetOfOwner",
      "httpMethod": "get",
      "tag": "test",
      "description": "Gets a device set belonging to the owner",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The UUID of the device set"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The name and devices of the device set"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/owner/device_sets/{id}",
      "method": "testUpdateDeviceSetOfOwner",
      "httpMethod": "put",
      "tag": "test",
      "description": "Updates a device set belonging to the owner",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The UUID of the device set"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "devices",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The name and devices of the device set"
        },
        {
          "statusCode": "400",
          "description": "Details of a failed operation"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/recent_releases",
      "method": "releasesListLatest",
      "httpMethod": "get",
      "tag": "distribute",
      "description": "Get the latest release from every distribution group associated with an application.",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/releases",
      "method": "releasesList",
      "httpMethod": "get",
      "tag": "distribute",
      "description": "Return basic information about releases.",
      "parameters": [
        {
          "name": "published_only",
          "schema": "boolean",
          "required": false,
          "description": "When *true*, filters out releases that were uploaded but were never distributed. Releases that under deleted distribution groups will not be filtered out."
        },
        {
          "name": "scope",
          "schema": "string",
          "required": false,
          "description": "When the scope is 'tester', only includes releases that have been distributed to groups that the user belongs to."
        },
        {
          "name": "top",
          "schema": "number",
          "required": false,
          "description": "The number of releases to return"
        },
        {
          "name": "releaseId",
          "schema": "number",
          "required": false,
          "description": "The id of a release"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/releases/filter_by_tester",
      "method": "releasesAvailableToTester",
      "httpMethod": "get",
      "tag": "distribute",
      "description": "Return detailed information about releases avaiable to a tester.",
      "parameters": [
        {
          "name": "published_only",
          "schema": "boolean",
          "required": false,
          "description": "when *true*, filters out releases that were uploaded but were never distributed. Releases that under deleted distribution groups will not be filtered out."
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/releases/{release_id}",
      "method": "releasesDelete",
      "httpMethod": "delete",
      "tag": "distribute",
      "description": "Deletes a release.",
      "parameters": [
        {
          "name": "release_id",
          "schema": "integer",
          "required": true,
          "description": "The ID of the release"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/releases/{release_id}",
      "method": "releasesGetLatestByUser",
      "httpMethod": "get",
      "tag": "distribute",
      "description": "Get a release with id `release_id`. If `release_id` is `latest`, return the latest release that was distributed to the current user (from all the distribution groups).",
      "parameters": [
        {
          "name": "release_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the release, or `latest` to get the latest release from all the distribution groups assigned to the current user."
        },
        {
          "name": "udid",
          "schema": "string",
          "required": false,
          "description": "when supplied, this call will also check if the given UDID is provisioned. Will be ignored for non-iOS platforms. The value will be returned in the property is_udid_provisioned."
        },
        {
          "name": "is_install_page",
          "schema": "boolean",
          "required": false,
          "description": "The check if the request is from Install page"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Details of an uploaded release"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/releases/{release_id}",
      "method": "releasesUpdate",
      "httpMethod": "patch",
      "tag": "distribute",
      "description": "Updates a release.",
      "parameters": [
        {
          "name": "release_id",
          "schema": "integer",
          "required": true,
          "description": "The ID of the release"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "build",
          "schema": "object",
          "description": ""
        },
        {
          "name": "destination_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "destination_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "destination_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "destinations",
          "schema": "array",
          "description": ""
        },
        {
          "name": "distribution_group_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "distribution_group_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "mandatory_update",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "metadata",
          "schema": "object",
          "description": ""
        },
        {
          "name": "notify_testers",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "release_notes",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Response for updating release details"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/releases/{release_id}",
      "method": "releasesUpdateDetails",
      "httpMethod": "put",
      "tag": "distribute",
      "description": "Update details of a release.",
      "parameters": [
        {
          "name": "release_id",
          "schema": "integer",
          "required": true,
          "description": "The ID of the release"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "build",
          "schema": "object",
          "description": ""
        },
        {
          "name": "enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "release_notes",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Response for updating a release"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/releases/{release_id}/groups",
      "method": "releasesAddDistributionGroup",
      "httpMethod": "post",
      "tag": "distribute",
      "description": "Distributes a release to a group",
      "parameters": [
        {
          "name": "release_id",
          "schema": "integer",
          "required": true,
          "description": "The ID of the release"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/releases/{release_id}/groups/{group_id}",
      "method": "releasesDeleteDistributionGroup",
      "httpMethod": "delete",
      "tag": "distribute",
      "description": "Delete the given distribution group from the release",
      "parameters": [
        {
          "name": "release_id",
          "schema": "integer",
          "required": true,
          "description": "The ID of the release"
        },
        {
          "name": "group_id",
          "schema": "string",
          "required": true,
          "description": "The id of the distribution group"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/releases/{release_id}/groups/{group_id}",
      "method": "releasesPutDistributionGroup",
      "httpMethod": "put",
      "tag": "distribute",
      "description": "Update details about the specified distribution group associated with the release",
      "parameters": [
        {
          "name": "release_id",
          "schema": "integer",
          "required": true,
          "description": "The ID of the release"
        },
        {
          "name": "group_id",
          "schema": "string",
          "required": true,
          "description": "The id of the releases destination"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "mandatory_update",
          "schema": "boolean",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/releases/{release_id}/provisioning_profile",
      "method": "provisioningProfile",
      "httpMethod": "get",
      "tag": "distribute",
      "description": "Return information about the provisioning profile. Only available for iOS.",
      "parameters": [
        {
          "name": "release_id",
          "schema": "integer",
          "required": true,
          "description": "The release_id"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response containing information about an iOS provisioning profile."
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/releases/{release_id}/stores",
      "method": "releasesAddStore",
      "httpMethod": "post",
      "tag": "distribute",
      "description": "Distributes a release to a store",
      "parameters": [
        {
          "name": "release_id",
          "schema": "integer",
          "required": true,
          "description": "The ID of the release"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/releases/{release_id}/stores/{store_id}",
      "method": "releasesDeleteDistributionStore",
      "httpMethod": "delete",
      "tag": "distribute",
      "description": "Delete the given distribution store from the release",
      "parameters": [
        {
          "name": "release_id",
          "schema": "integer",
          "required": true,
          "description": "The ID of the release"
        },
        {
          "name": "store_id",
          "schema": "string",
          "required": true,
          "description": "The id of the distribution store"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/releases/{release_id}/testers",
      "method": "releasesAddTesters",
      "httpMethod": "post",
      "tag": "distribute",
      "description": "Distributes a release to a user",
      "parameters": [
        {
          "name": "release_id",
          "schema": "integer",
          "required": true,
          "description": "The ID of the release"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "email",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "mandatory_update",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "notify_testers",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/releases/{release_id}/testers/{tester_id}",
      "method": "releasesDeleteDistributionTester",
      "httpMethod": "delete",
      "tag": "distribute",
      "description": "Delete the given tester from the release",
      "parameters": [
        {
          "name": "release_id",
          "schema": "integer",
          "required": true,
          "description": "The ID of the release"
        },
        {
          "name": "tester_id",
          "schema": "string",
          "required": true,
          "description": "The id of the tester"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/releases/{release_id}/testers/{tester_id}",
      "method": "releasesPutDistributionTester",
      "httpMethod": "put",
      "tag": "distribute",
      "description": "Update details about the specified tester associated with the release",
      "parameters": [
        {
          "name": "release_id",
          "schema": "integer",
          "required": true,
          "description": "The ID of the release"
        },
        {
          "name": "tester_id",
          "schema": "string",
          "required": true,
          "description": "The id of the tester"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "mandatory_update",
          "schema": "boolean",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/releases/{release_id}/update_devices/{resign_id}",
      "method": "devicesGetReleaseUpdateDevicesStatus",
      "httpMethod": "get",
      "tag": "distribute",
      "description": "Returns the resign status to the caller",
      "parameters": [
        {
          "name": "release_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the release."
        },
        {
          "name": "resign_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the resign operation."
        },
        {
          "name": "include_provisioning_profile",
          "schema": "boolean",
          "description": "A boolean value that indicates if the provisioning profile should be return in addition to the status. When set to true, the provisioning profile will be returned only when status is 'complete' or 'preparing_for_testers'."
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The status of the resign operation."
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/repo_config",
      "method": "repositoryConfigurationsDelete",
      "httpMethod": "delete",
      "tag": "build",
      "description": "Removes the configuration for the repository",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/repo_config",
      "method": "repositoryConfigurationsList",
      "httpMethod": "get",
      "tag": "build",
      "description": "Returns the repository build configuration status of the app",
      "parameters": [
        {
          "name": "includeInactive",
          "schema": "boolean",
          "required": false,
          "description": "Include inactive configurations if none are active"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A list of repo configurations"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/repo_config",
      "method": "repositoryConfigurationsCreateOrUpdate",
      "httpMethod": "post",
      "tag": "build",
      "description": "Configures the repository for build",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "installation_id",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/source_hosts/{source_host}/repositories",
      "method": "repositoriesList",
      "httpMethod": "get",
      "tag": "build",
      "description": "Gets the repositories available from the source code host",
      "parameters": [
        {
          "name": "source_host",
          "schema": "string",
          "required": true,
          "description": "The source host"
        },
        {
          "name": "vstsAccountName",
          "schema": "string",
          "required": false,
          "description": "Filter repositories only for specified account and project, \"vstsProjectId\" is required"
        },
        {
          "name": "vstsProjectId",
          "schema": "string",
          "required": false,
          "description": "Filter repositories only for specified account and project, \"vstsAccountName\" is required"
        },
        {
          "name": "service_connection_id",
          "schema": "string",
          "description": "The id of the service connection (private). Required for GitLab self-hosted repositories"
        },
        {
          "name": "form",
          "schema": "string",
          "required": false,
          "description": "The selected form of the object"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A list of source repositories"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/store_service_status",
      "method": "storeNotificationsGetNotificationByAppId",
      "httpMethod": "get",
      "tag": "distribute",
      "description": "Application specific store service status",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/subscriptions",
      "method": "testGetSubscriptions",
      "httpMethod": "get",
      "tag": "test",
      "description": "Get information about the currently active subscriptions, if any",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Subscription information"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/subscriptions",
      "method": "testCreateSubscription",
      "httpMethod": "post",
      "tag": "test",
      "description": "Accept a free trial subscription",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "Subscription information"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/symbol_uploads",
      "method": "symbolUploadsList",
      "httpMethod": "get",
      "tag": "crash",
      "description": "Gets a list of all uploads for the specified application",
      "parameters": [
        {
          "name": "top",
          "schema": "integer",
          "required": false,
          "description": "The maximum number of results to return."
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": "Filter results by the current status of a symbol upload: * all: all states in the symbol upload process. Includes created, aborted, committed, processing, indexed and failed states * uploaded: all states after package is uploaded. Includes committed, processing, indexed and failed states * processed: symbol upload processing is completed. Includes indexed and failed states.\n"
        },
        {
          "name": "symbol_type",
          "schema": "string",
          "required": false,
          "description": "The type of symbols"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A set of symbol upload entities"
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/symbol_uploads",
      "method": "symbolUploadsCreate",
      "httpMethod": "post",
      "tag": "crash",
      "description": "Begins the symbol upload process for a new set of symbols for the specified application",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "build",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "client_callback",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "file_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "symbol_type",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "version",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response containing information pertaining to starting a symbol upload process"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/symbol_uploads/{symbol_upload_id}",
      "method": "symbolUploadsDelete",
      "httpMethod": "delete",
      "tag": "crash",
      "description": "Deletes a symbol upload by id for the specified application",
      "parameters": [
        {
          "name": "symbol_upload_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the symbol upload"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A single symbol upload entity"
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/symbol_uploads/{symbol_upload_id}",
      "method": "symbolUploadsGet",
      "httpMethod": "get",
      "tag": "crash",
      "description": "Gets a symbol upload by id for the specified application",
      "parameters": [
        {
          "name": "symbol_upload_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the symbol upload"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A single symbol upload entity"
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/symbol_uploads/{symbol_upload_id}",
      "method": "symbolUploadsComplete",
      "httpMethod": "patch",
      "tag": "crash",
      "description": "Commits or aborts the symbol upload process for a new set of symbols for the specified application",
      "parameters": [
        {
          "name": "symbol_upload_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the symbol upload"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "status",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A single symbol upload entity"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/symbol_uploads/{symbol_upload_id}/location",
      "method": "symbolUploadsGetLocation",
      "httpMethod": "get",
      "tag": "crash",
      "description": "Gets the URL to download the symbol upload",
      "parameters": [
        {
          "name": "symbol_upload_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the symbol upload"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Location for downloading symbol upload"
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/symbols",
      "method": "symbolsList",
      "httpMethod": "get",
      "tag": "crash",
      "description": "Returns the list of all symbols for the provided application",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response containing the list of symbols matching the specified filter (if any was provided)"
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/symbols/{symbol_id}",
      "method": "symbolsGet",
      "httpMethod": "get",
      "tag": "crash",
      "description": "Returns a particular symbol by id (uuid) for the provided application",
      "parameters": [
        {
          "name": "symbol_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the symbol (uuid of the symbol)"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/symbols/{symbol_id}/ignore",
      "method": "symbolsIgnore",
      "httpMethod": "post",
      "tag": "crash",
      "description": "Marks a symbol by id (uuid) as ignored",
      "parameters": [
        {
          "name": "symbol_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the symbol (uuid of the symbol)"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/symbols/{symbol_id}/location",
      "method": "symbolsGetLocation",
      "httpMethod": "get",
      "tag": "crash",
      "description": "Gets the URL to download the symbol",
      "parameters": [
        {
          "name": "symbol_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the symbol (uuid of the symbol)"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Location for downloading symbol"
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/symbols/{symbol_id}/status",
      "method": "symbolsGetStatus",
      "httpMethod": "get",
      "tag": "crash",
      "description": "Returns a particular symbol by id (uuid) for the provided application",
      "parameters": [
        {
          "name": "symbol_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the symbol (uuid of the symbol)"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A response containing information pertaining to a symbol status"
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/teams",
      "method": "appsGetTeams",
      "httpMethod": "get",
      "tag": "account",
      "description": "Returns the details of all teams that have access to the app.",
      "parameters": [
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/test/export",
      "method": "testGdprExportApps",
      "httpMethod": "get",
      "tag": "test",
      "description": "Lists all the endpoints available for Test apps data",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/test/export/apps",
      "method": "testGdprExportApp",
      "httpMethod": "get",
      "tag": "test",
      "description": "Lists app data",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/test/export/fileSetFiles",
      "method": "testGdprExportFileSetFile",
      "httpMethod": "get",
      "tag": "test",
      "description": "Lists file set file data",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/test/export/hashFiles",
      "method": "testGdprExportHashFile",
      "httpMethod": "get",
      "tag": "test",
      "description": "Lists hash file data",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/test/export/pipelineTests",
      "method": "testGdprExportPipelineTest",
      "httpMethod": "get",
      "tag": "test",
      "description": "Lists pipeline test data",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/test/export/testRuns",
      "method": "testGdprExportTestRun",
      "httpMethod": "get",
      "tag": "test",
      "description": "Lists test run data",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/test_runs",
      "method": "testGetTestRuns",
      "httpMethod": "get",
      "tag": "test",
      "description": "Returns a list of test runs",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/test_runs",
      "method": "testCreateTestRun",
      "httpMethod": "post",
      "tag": "test",
      "description": "Creates a new test run",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": []
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/test_runs/{test_run_id}",
      "method": "testArchiveTestRun",
      "httpMethod": "delete",
      "tag": "test",
      "description": "Logically deletes a test run",
      "parameters": [
        {
          "name": "test_run_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the test run"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Summary single test run on Xamarin Test Cloud"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/test_runs/{test_run_id}",
      "method": "testGetTestRun",
      "httpMethod": "get",
      "tag": "test",
      "description": "Returns a single test runs",
      "parameters": [
        {
          "name": "test_run_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the test run"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Summary single test run on Xamarin Test Cloud"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/test_runs/{test_run_id}/files",
      "method": "testStartUploadingFile",
      "httpMethod": "post",
      "tag": "test",
      "description": "Uploads file for a test run",
      "parameters": [
        {
          "name": "test_run_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the test run"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": []
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/test_runs/{test_run_id}/hashes",
      "method": "testUploadHash",
      "httpMethod": "post",
      "tag": "test",
      "description": "Adds file with the given hash to a test run",
      "parameters": [
        {
          "name": "test_run_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the test run"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "byte_range",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "checksum",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "file_type",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "relative_path",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/test_runs/{test_run_id}/hashes/batch",
      "method": "testUploadHashesBatch",
      "httpMethod": "post",
      "tag": "test",
      "description": "Adds file with the given hash to a test run",
      "parameters": [
        {
          "name": "test_run_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the test run"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/test_runs/{test_run_id}/report",
      "method": "testGetTestReport",
      "httpMethod": "get",
      "tag": "test",
      "description": "Returns a single test report",
      "parameters": [
        {
          "name": "test_run_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the test run"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/test_runs/{test_run_id}/start",
      "method": "testStartTestRun",
      "httpMethod": "post",
      "tag": "test",
      "description": "Starts test run",
      "parameters": [
        {
          "name": "test_run_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the test run"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "device_selection",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "language",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "locale",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "test_framework",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "test_parameters",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "test_series",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Result of starting a test run"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/test_runs/{test_run_id}/state",
      "method": "testGetTestRunState",
      "httpMethod": "get",
      "tag": "test",
      "description": "Gets state of the test run",
      "parameters": [
        {
          "name": "test_run_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the test run"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Current status of a test run"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/test_runs/{test_run_id}/stop",
      "method": "testStopTestRun",
      "httpMethod": "put",
      "tag": "test",
      "description": "Stop a test run execution",
      "parameters": [
        {
          "name": "test_run_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the test run to be stopped"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Summary single test run on Xamarin Test Cloud"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/test_series",
      "method": "testGetAllTestSeries",
      "httpMethod": "get",
      "tag": "test",
      "description": "Returns list of all test series for an application",
      "parameters": [
        {
          "name": "query",
          "schema": "string",
          "required": false,
          "description": "A query string to filter test series"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/test_series",
      "method": "testCreateTestSeries",
      "httpMethod": "post",
      "tag": "test",
      "description": "Creates new test series for an application",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Summary of a single test series"
        },
        {
          "statusCode": "400",
          "description": "Details of a failed operation"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/test_series/{test_series_slug}",
      "method": "testDeleteTestSeries",
      "httpMethod": "delete",
      "tag": "test",
      "description": "Deletes a single test series",
      "parameters": [
        {
          "name": "test_series_slug",
          "schema": "string",
          "required": true,
          "description": "The slug of the test series"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": []
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/test_series/{test_series_slug}",
      "method": "testPatchTestSeries",
      "httpMethod": "patch",
      "tag": "test",
      "description": "Updates name and slug of a test series",
      "parameters": [
        {
          "name": "test_series_slug",
          "schema": "string",
          "required": true,
          "description": "The slug of the test series"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Summary of a single test series"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/test_series/{test_series_slug}/test_runs",
      "method": "testGetAllTestRunsForSeries",
      "httpMethod": "get",
      "tag": "test",
      "description": "Returns list of all test runs for a given test series",
      "parameters": [
        {
          "name": "test_series_slug",
          "schema": "string",
          "required": true,
          "description": "The slug of the test series"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/testers",
      "method": "appsListTesters",
      "httpMethod": "get",
      "tag": "account",
      "description": "Returns the testers associated with the app specified with the given app name which belongs to the given owner.",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/testers/{tester_id}",
      "method": "releasesDeleteTesterFromDestinations",
      "httpMethod": "delete",
      "tag": "distribute",
      "description": "Delete the given tester from the all releases",
      "parameters": [
        {
          "name": "tester_id",
          "schema": "string",
          "required": true,
          "description": "The id of the tester"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/toolsets",
      "method": "buildsListToolsets",
      "httpMethod": "get",
      "tag": "build",
      "description": "Returns available toolsets for application",
      "parameters": [
        {
          "name": "tools",
          "schema": "string",
          "required": false,
          "description": "Toolset name"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Set of toolsets available for app"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/transfer/{destination_owner_name}",
      "method": "appsTransferOwnership",
      "httpMethod": "post",
      "tag": "account",
      "description": "Transfers ownership of an app to a different user or organization",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "destination_owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner (user or organization) to which the app is being transferred"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/transfer_to_org",
      "method": "appsTransferToOrg",
      "httpMethod": "post",
      "tag": "account",
      "description": "Transfers ownership of an app to a new organization",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/uploads/releases",
      "method": "releasesCreateReleaseUpload",
      "httpMethod": "post",
      "tag": "distribute",
      "description": "Initiate a new release upload. This API is part of multi-step upload process.",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "build_number",
          "schema": "string",
          "description": ""
        },
        {
          "name": "build_version",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/uploads/releases/{upload_id}",
      "method": "releasesGetReleaseUploadStatus",
      "httpMethod": "get",
      "tag": "distribute",
      "description": "Get the current status of the release upload.",
      "parameters": [
        {
          "name": "upload_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the release upload"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/uploads/releases/{upload_id}",
      "method": "releasesUpdateReleaseUploadStatus",
      "httpMethod": "patch",
      "tag": "distribute",
      "description": "Update the current status of the release upload.",
      "parameters": [
        {
          "name": "upload_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the release upload"
        },
        {
          "name": "extract",
          "schema": "boolean",
          "required": false,
          "description": "A flag that indicates to extract release or not, true by default"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "upload_status",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/user/device_sets",
      "method": "testListDeviceSetsOfUser",
      "httpMethod": "get",
      "tag": "test",
      "description": "Lists device sets belonging to the user",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/user/device_sets",
      "method": "testCreateDeviceSetOfUser",
      "httpMethod": "post",
      "tag": "test",
      "description": "Creates a device set belonging to the user",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "devices",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": "The name and devices of the device set"
        },
        {
          "statusCode": "400",
          "description": "Details of a failed operation"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/user/device_sets/{id}",
      "method": "testDeleteDeviceSetOfUser",
      "httpMethod": "delete",
      "tag": "test",
      "description": "Deletes a device set belonging to the user",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The UUID of the device set"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": []
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/user/device_sets/{id}",
      "method": "testGetDeviceSetOfUser",
      "httpMethod": "get",
      "tag": "test",
      "description": "Gets a device set belonging to the user",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The UUID of the device set"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The name and devices of the device set"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/user/device_sets/{id}",
      "method": "testUpdateDeviceSetOfUser",
      "httpMethod": "put",
      "tag": "test",
      "description": "Updates a device set belonging to the user",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The UUID of the device set"
        },
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "devices",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The name and devices of the device set"
        },
        {
          "statusCode": "400",
          "description": "Details of a failed operation"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/users",
      "method": "usersList",
      "httpMethod": "get",
      "tag": "account",
      "description": "Returns the users associated with the app specified with the given app name which belongs to the given owner.",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/users/{user_email}",
      "method": "appsRemoveUser",
      "httpMethod": "delete",
      "tag": "account",
      "description": "Removes the user from the app",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "user_email",
          "schema": "string",
          "required": true,
          "description": "The user email of the user to delete"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/users/{user_email}",
      "method": "appsUpdateUserPermissions",
      "httpMethod": "patch",
      "tag": "account",
      "description": "Update user permission for the app",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "user_email",
          "schema": "string",
          "required": true,
          "description": "The user email of the user to patch"
        },
        {
          "name": "permissions",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/versions",
      "method": "crashesGetAppVersions",
      "httpMethod": "get",
      "tag": "crash",
      "description": "Gets a list of application versions.",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/webhooks",
      "method": "webhooksList",
      "httpMethod": "get",
      "tag": "alerting",
      "description": "Get web hooks configured for a particular app",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "List of alerting webhooks wrapped as operation result"
        },
        {
          "statusCode": "default",
          "description": "Alerting service error"
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/xamarin_sdk_bundles",
      "method": "buildsListXamarinSdkBundles",
      "httpMethod": "get",
      "tag": "build",
      "description": "Gets the Xamarin SDK bundles available to this app",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A list of Xamarin SDK bundles"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/apps/{owner_name}/{app_name}/xcode_versions",
      "method": "buildsListXcodeVersions",
      "httpMethod": "get",
      "tag": "build",
      "description": "Gets the Xcode versions available to this app",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A list of Xcode versions"
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/azure_subscriptions",
      "method": "azureSubscriptionListForUser",
      "httpMethod": "get",
      "tag": "account",
      "description": "Returns a list of azure subscriptions for the user",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/billing/allAccountsAggregated",
      "method": "billingAggregatedInformationGetAll",
      "httpMethod": "get",
      "tag": "billing",
      "description": "Aggregated Billing Information for the requesting user and the organizations in which the user is an admin.",
      "parameters": [
        {
          "name": "service",
          "schema": "string",
          "required": false,
          "description": "Type of service that should be included in the Billing Information"
        },
        {
          "name": "period",
          "schema": "string",
          "required": false,
          "description": "Type of period that should be included in the Billing Information"
        },
        {
          "name": "showOriginalPlans",
          "schema": "boolean",
          "required": false,
          "description": "Controls whether the API should show the original plan when Azure Subscription is not enabled"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Aggregated Billing Information for a user an the organizations in which the user is an admin."
        },
        {
          "statusCode": "default",
          "description": "Error"
        }
      ]
    },
    {
      "url": "/v0.1/invitations/sent",
      "method": "invitationsSent",
      "httpMethod": "get",
      "tag": "account",
      "description": "Returns all invitations sent by the caller",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/legacy/reportStatus/deploy",
      "method": "legacyCodePushAcquisitionUpdateInstallsStatus",
      "httpMethod": "post",
      "tag": "codepush",
      "description": "Report deploy of specified release",
      "parameters": [
        {
          "name": "appVersion",
          "schema": "string",
          "description": ""
        },
        {
          "name": "clientUniqueId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "deploymentKey",
          "schema": "string",
          "description": ""
        },
        {
          "name": "label",
          "schema": "string",
          "description": ""
        },
        {
          "name": "previousDeploymentKey",
          "schema": "string",
          "description": ""
        },
        {
          "name": "previousLabelOrAppVersion",
          "schema": "string",
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/legacy/reportStatus/download",
      "method": "legacyCodePushAcquisitionUpdateDownloadStatus",
      "httpMethod": "post",
      "tag": "codepush",
      "description": "Report download of specified release",
      "parameters": [
        {
          "name": "appVersion",
          "schema": "string",
          "description": ""
        },
        {
          "name": "clientUniqueId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "deploymentKey",
          "schema": "string",
          "description": ""
        },
        {
          "name": "label",
          "schema": "string",
          "description": ""
        },
        {
          "name": "previousDeploymentKey",
          "schema": "string",
          "description": ""
        },
        {
          "name": "previousLabelOrAppVersion",
          "schema": "string",
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/legacy/updateCheck",
      "method": "legacyCodePushAcquisitionUpdateCheck",
      "httpMethod": "get",
      "tag": "codepush",
      "description": "Check for updates",
      "parameters": [
        {
          "name": "deploymentKey",
          "schema": "string",
          "description": ""
        },
        {
          "name": "appVersion",
          "schema": "string",
          "description": ""
        },
        {
          "name": "packageHash",
          "schema": "string",
          "description": ""
        },
        {
          "name": "label",
          "schema": "string",
          "description": ""
        },
        {
          "name": "clientUniqueId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "isCompanion",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/orgs",
      "method": "organizationsList",
      "httpMethod": "get",
      "tag": "account",
      "description": "Returns a list of organizations the requesting user has access to",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/orgs",
      "method": "organizationsCreateOrUpdate",
      "httpMethod": "post",
      "tag": "account",
      "description": "Creates a new organization and returns it to the caller",
      "parameters": [
        {
          "name": "display_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/orgs/{orgName}/billing/aggregated",
      "method": "billingAggregatedInformationGetForOrg",
      "httpMethod": "get",
      "tag": "billing",
      "description": "Aggregated Billing Information for a given Organization.",
      "parameters": [
        {
          "name": "orgName",
          "schema": "string",
          "required": true,
          "description": "The name of the Organization"
        },
        {
          "name": "service",
          "schema": "string",
          "required": false,
          "description": "Type of service that should be included in the Billing Information"
        },
        {
          "name": "period",
          "schema": "string",
          "required": false,
          "description": "Type of period that should be included in the Billing Information"
        },
        {
          "name": "showOriginalPlans",
          "schema": "boolean",
          "required": false,
          "description": "Controls whether the API should show the original plan when Azure Subscription is not enabled"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Aggregated Billing Information for a user or an organization"
        },
        {
          "statusCode": "default",
          "description": "Error"
        }
      ]
    },
    {
      "url": "/v0.1/orgs/{org_name}",
      "method": "organizationsDelete",
      "httpMethod": "delete",
      "tag": "account",
      "description": "Deletes a single organization",
      "parameters": [
        {
          "name": "org_name",
          "schema": "string",
          "required": true,
          "description": "The organization's name"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/orgs/{org_name}",
      "method": "organizationsGet",
      "httpMethod": "get",
      "tag": "account",
      "description": "Returns the details of a single organization",
      "parameters": [
        {
          "name": "org_name",
          "schema": "string",
          "required": true,
          "description": "The organization's name"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/orgs/{org_name}",
      "method": "organizationsUpdate",
      "httpMethod": "patch",
      "tag": "account",
      "description": "Returns a list of organizations the requesting user has access to",
      "parameters": [
        {
          "name": "org_name",
          "schema": "string",
          "required": true,
          "description": "The organization's name"
        },
        {
          "name": "display_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/orgs/{org_name}/apps",
      "method": "appsListForOrg",
      "httpMethod": "get",
      "tag": "account",
      "description": "Returns a list of apps for the organization",
      "parameters": [
        {
          "name": "org_name",
          "schema": "string",
          "required": true,
          "description": "The organization's name"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/orgs/{org_name}/apps",
      "method": "appsCreateForOrg",
      "httpMethod": "post",
      "tag": "account",
      "description": "Creates a new app for the organization and returns it to the caller",
      "parameters": [
        {
          "name": "org_name",
          "schema": "string",
          "required": true,
          "description": "The organization's name"
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "display_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "os",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "platform",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "release_type",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/orgs/{org_name}/avatar",
      "method": "organizationDeleteAvatar",
      "httpMethod": "delete",
      "tag": "account",
      "description": "Deletes the uploaded organization avatar",
      "parameters": [
        {
          "name": "org_name",
          "schema": "string",
          "required": true,
          "description": "The organization's name"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/orgs/{org_name}/avatar",
      "method": "organizationUpdateAvatar",
      "httpMethod": "post",
      "tag": "account",
      "description": "Sets the organization avatar",
      "parameters": [
        {
          "name": "org_name",
          "schema": "string",
          "required": true,
          "description": "The organization's name"
        },
        {
          "name": "avatar",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/orgs/{org_name}/azure_subscriptions",
      "method": "azureSubscriptionListForOrg",
      "httpMethod": "get",
      "tag": "account",
      "description": "Returns a list of azure subscriptions for the organization",
      "parameters": [
        {
          "name": "org_name",
          "schema": "string",
          "required": true,
          "description": "The organization's name"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/orgs/{org_name}/distribution_groups",
      "method": "distributionGroupsListForOrg",
      "httpMethod": "get",
      "tag": "account",
      "description": "Returns a list of distribution groups in the org specified",
      "parameters": [
        {
          "name": "org_name",
          "schema": "string",
          "required": true,
          "description": "The organization's name"
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/orgs/{org_name}/distribution_groups",
      "method": "distributionGroupsCreateForOrg",
      "httpMethod": "post",
      "tag": "account",
      "description": "Creates a disribution goup which can be shared across apps under an organization",
      "parameters": [
        {
          "name": "org_name",
          "schema": "string",
          "required": true,
          "description": "The organization's name"
        },
        {
          "name": "display_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/orgs/{org_name}/distribution_groups/{distribution_group_name}",
      "method": "distributionGroupsDeleteForOrg",
      "httpMethod": "delete",
      "tag": "account",
      "description": "Deletes a single distribution group from an org with a given distribution group name",
      "parameters": [
        {
          "name": "org_name",
          "schema": "string",
          "required": true,
          "description": "The organization's name"
        },
        {
          "name": "distribution_group_name",
          "schema": "string",
          "required": true,
          "description": "The name of the distribution group"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/orgs/{org_name}/distribution_groups/{distribution_group_name}",
      "method": "distributionGroupsGetForOrg",
      "httpMethod": "get",
      "tag": "account",
      "description": "Returns a single distribution group in org for a given distribution group name",
      "parameters": [
        {
          "name": "org_name",
          "schema": "string",
          "required": true,
          "description": "The organization's name"
        },
        {
          "name": "distribution_group_name",
          "schema": "string",
          "required": true,
          "description": "The name of the distribution group"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/orgs/{org_name}/distribution_groups/{distribution_group_name}",
      "method": "distributionGroupsPatchForOrg",
      "httpMethod": "patch",
      "tag": "account",
      "description": "Update one given distribution group name in an org",
      "parameters": [
        {
          "name": "org_name",
          "schema": "string",
          "required": true,
          "description": "The organization's name"
        },
        {
          "name": "distribution_group_name",
          "schema": "string",
          "required": true,
          "description": "The name of the distribution group"
        },
        {
          "name": "is_public",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/orgs/{org_name}/distribution_groups/{distribution_group_name}/apps",
      "method": "distributionGroupsGetApps",
      "httpMethod": "get",
      "tag": "account",
      "description": "Get apps from a distribution group in an org",
      "parameters": [
        {
          "name": "org_name",
          "schema": "string",
          "required": true,
          "description": "The organization's name"
        },
        {
          "name": "distribution_group_name",
          "schema": "string",
          "required": true,
          "description": "The name of the distribution group"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/orgs/{org_name}/distribution_groups/{distribution_group_name}/apps",
      "method": "distributionGroupsAddApps",
      "httpMethod": "post",
      "tag": "account",
      "description": "Add apps to distribution group in an org",
      "parameters": [
        {
          "name": "org_name",
          "schema": "string",
          "required": true,
          "description": "The organization's name"
        },
        {
          "name": "distribution_group_name",
          "schema": "string",
          "required": true,
          "description": "The name of the distribution group"
        },
        {
          "name": "apps",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v0.1/orgs/{org_name}/distribution_groups/{distribution_group_name}/apps/bulk_delete",
      "method": "distributionGroupsBulkDeleteApps",
      "httpMethod": "post",
      "tag": "account",
      "description": "Delete apps from distribution group in an org",
      "parameters": [
        {
          "name": "org_name",
          "schema": "string",
          "required": true,
          "description": "The organization's name"
        },
        {
          "name": "distribution_group_name",
          "schema": "string",
          "required": true,
          "description": "The name of the distribution group"
        },
        {
          "name": "apps",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v0.1/orgs/{org_name}/distribution_groups/{distribution_group_name}/members",
      "method": "distributionGroupsListUsersForOrg",
      "httpMethod": "get",
      "tag": "account",
      "description": "Returns a list of member in the distribution group specified",
      "parameters": [
        {
          "name": "org_name",
          "schema": "string",
          "required": true,
          "description": "The organization's name"
        },
        {
          "name": "distribution_group_name",
          "schema": "string",
          "required": true,
          "description": "The name of the distribution group"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/orgs/{org_name}/distribution_groups/{distribution_group_name}/members",
      "method": "distributionGroupsAddUsersForOrg",
      "httpMethod": "post",
      "tag": "account",
      "description": "Accepts an array of user email addresses to get added to the specified group",
      "parameters": [
        {
          "name": "org_name",
          "schema": "string",
          "required": true,
          "description": "The organization's name"
        },
        {
          "name": "distribution_group_name",
          "schema": "string",
          "required": true,
          "description": "The name of the distribution group"
        },
        {
          "name": "user_emails",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/orgs/{org_name}/distribution_groups/{distribution_group_name}/members/bulk_delete",
      "method": "distributionGroupsBulkDeleteUsers",
      "httpMethod": "post",
      "tag": "account",
      "description": "Delete testers from distribution group in an org",
      "parameters": [
        {
          "name": "org_name",
          "schema": "string",
          "required": true,
          "description": "The organization's name"
        },
        {
          "name": "distribution_group_name",
          "schema": "string",
          "required": true,
          "description": "The name of the distribution group"
        },
        {
          "name": "user_emails",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v0.1/orgs/{org_name}/distribution_groups/{distribution_group_name}/resend_invite",
      "method": "distributionGroupsResendSharedInvite",
      "httpMethod": "post",
      "tag": "account",
      "description": "Resend shared distribution group invite notification to previously invited testers",
      "parameters": [
        {
          "name": "org_name",
          "schema": "string",
          "required": true,
          "description": "The organization's name"
        },
        {
          "name": "distribution_group_name",
          "schema": "string",
          "required": true,
          "description": "The name of the distribution group"
        },
        {
          "name": "user_emails",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/orgs/{org_name}/distribution_groups_details",
      "method": "distributionGroupsDetailsForOrg",
      "httpMethod": "get",
      "tag": "account",
      "description": "Returns a list of distribution groups with details for an organization",
      "parameters": [
        {
          "name": "org_name",
          "schema": "string",
          "required": true,
          "description": "The organization's name"
        },
        {
          "name": "apps_limit",
          "schema": "number",
          "required": false,
          "description": "The max number of apps to include in the response"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/orgs/{org_name}/invitations",
      "method": "orgInvitationsDelete",
      "httpMethod": "delete",
      "tag": "account",
      "description": "Removes a user's invitation to an organization",
      "parameters": [
        {
          "name": "org_name",
          "schema": "string",
          "required": true,
          "description": "The organization's name"
        },
        {
          "name": "user_email",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/orgs/{org_name}/invitations",
      "method": "orgInvitationsListPending",
      "httpMethod": "get",
      "tag": "account",
      "description": "Gets the pending invitations for the organization",
      "parameters": [
        {
          "name": "org_name",
          "schema": "string",
          "required": true,
          "description": "The organization's name"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/orgs/{org_name}/invitations",
      "method": "orgInvitationsCreate",
      "httpMethod": "post",
      "tag": "account",
      "description": "Invites a new or existing user to an organization",
      "parameters": [
        {
          "name": "org_name",
          "schema": "string",
          "required": true,
          "description": "The organization's name"
        },
        {
          "name": "role",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "user_email",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/orgs/{org_name}/invitations/{email}",
      "method": "orgInvitationsUpdate",
      "httpMethod": "patch",
      "tag": "account",
      "description": "Allows the role of an invited user to be changed",
      "parameters": [
        {
          "name": "org_name",
          "schema": "string",
          "required": true,
          "description": "The organization's name"
        },
        {
          "name": "email",
          "schema": "string",
          "required": true,
          "description": "The email address of the user to send the password reset mail to."
        },
        {
          "name": "role",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/orgs/{org_name}/invitations/{email}/resend",
      "method": "orgInvitationsSendNewInvitation",
      "httpMethod": "post",
      "tag": "account",
      "description": "Cancels an existing organization invitation for the user and sends a new one",
      "parameters": [
        {
          "name": "org_name",
          "schema": "string",
          "required": true,
          "description": "The organization's name"
        },
        {
          "name": "email",
          "schema": "string",
          "required": true,
          "description": "The email address of the user to send the password reset mail to."
        },
        {
          "name": "role",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/orgs/{org_name}/invitations/{email}/revoke",
      "method": "orgInvitations",
      "httpMethod": "post",
      "tag": "account",
      "description": "Removes a user's invitation to an organization",
      "parameters": [
        {
          "name": "org_name",
          "schema": "string",
          "required": true,
          "description": "The organization's name"
        },
        {
          "name": "email",
          "schema": "string",
          "required": true,
          "description": "The email address of the user to send the password reset mail to."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/orgs/{org_name}/teams",
      "method": "teamsListAll",
      "httpMethod": "get",
      "tag": "account",
      "description": "Returns the list of all teams in this org",
      "parameters": [
        {
          "name": "org_name",
          "schema": "string",
          "required": true,
          "description": "The organization's name"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/orgs/{org_name}/teams",
      "method": "teamsCreateTeam",
      "httpMethod": "post",
      "tag": "account",
      "description": "Creates a team and returns it",
      "parameters": [
        {
          "name": "org_name",
          "schema": "string",
          "required": true,
          "description": "The organization's name"
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "display_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/orgs/{org_name}/teams/{team_name}",
      "method": "teamsDelete",
      "httpMethod": "delete",
      "tag": "account",
      "description": "Deletes a single team",
      "parameters": [
        {
          "name": "org_name",
          "schema": "string",
          "required": true,
          "description": "The organization's name"
        },
        {
          "name": "team_name",
          "schema": "string",
          "required": true,
          "description": "The team's name"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/orgs/{org_name}/teams/{team_name}",
      "method": "teamsGetTeam",
      "httpMethod": "get",
      "tag": "account",
      "description": "Returns the details of a single team",
      "parameters": [
        {
          "name": "org_name",
          "schema": "string",
          "required": true,
          "description": "The organization's name"
        },
        {
          "name": "team_name",
          "schema": "string",
          "required": true,
          "description": "The team's name"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/orgs/{org_name}/teams/{team_name}",
      "method": "teamsUpdate",
      "httpMethod": "patch",
      "tag": "account",
      "description": "Updates a single team",
      "parameters": [
        {
          "name": "org_name",
          "schema": "string",
          "required": true,
          "description": "The organization's name"
        },
        {
          "name": "team_name",
          "schema": "string",
          "required": true,
          "description": "The team's name"
        },
        {
          "name": "display_name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/orgs/{org_name}/teams/{team_name}/apps",
      "method": "teamsListApps",
      "httpMethod": "get",
      "tag": "account",
      "description": "Returns the apps a team has access to",
      "parameters": [
        {
          "name": "org_name",
          "schema": "string",
          "required": true,
          "description": "The organization's name"
        },
        {
          "name": "team_name",
          "schema": "string",
          "required": true,
          "description": "The team's name"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/orgs/{org_name}/teams/{team_name}/apps",
      "method": "teamsAddApp",
      "httpMethod": "post",
      "tag": "account",
      "description": "Adds an app to a team",
      "parameters": [
        {
          "name": "org_name",
          "schema": "string",
          "required": true,
          "description": "The organization's name"
        },
        {
          "name": "team_name",
          "schema": "string",
          "required": true,
          "description": "The team's name"
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/orgs/{org_name}/teams/{team_name}/apps/{app_name}",
      "method": "teamsRemoveApp",
      "httpMethod": "delete",
      "tag": "account",
      "description": "Removes an app from a team",
      "parameters": [
        {
          "name": "org_name",
          "schema": "string",
          "required": true,
          "description": "The organization's name"
        },
        {
          "name": "team_name",
          "schema": "string",
          "required": true,
          "description": "The team's name"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/orgs/{org_name}/teams/{team_name}/apps/{app_name}",
      "method": "teamsUpdatePermissions",
      "httpMethod": "patch",
      "tag": "account",
      "description": "Updates the permissions the team has to the app",
      "parameters": [
        {
          "name": "org_name",
          "schema": "string",
          "required": true,
          "description": "The organization's name"
        },
        {
          "name": "team_name",
          "schema": "string",
          "required": true,
          "description": "The team's name"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the application"
        },
        {
          "name": "permissions",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/orgs/{org_name}/teams/{team_name}/users",
      "method": "teamsGetUsers",
      "httpMethod": "get",
      "tag": "account",
      "description": "Returns the users of a team which is owned by an organization",
      "parameters": [
        {
          "name": "org_name",
          "schema": "string",
          "required": true,
          "description": "The organization's name"
        },
        {
          "name": "team_name",
          "schema": "string",
          "required": true,
          "description": "The team's name"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/orgs/{org_name}/teams/{team_name}/users",
      "method": "teamsAddUser",
      "httpMethod": "post",
      "tag": "account",
      "description": "Adds a new user to a team that is owned by an organization",
      "parameters": [
        {
          "name": "org_name",
          "schema": "string",
          "required": true,
          "description": "The organization's name"
        },
        {
          "name": "team_name",
          "schema": "string",
          "required": true,
          "description": "The team's name"
        },
        {
          "name": "user_email",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/orgs/{org_name}/teams/{team_name}/users/{user_name}",
      "method": "teamsRemoveUser",
      "httpMethod": "delete",
      "tag": "account",
      "description": "Removes a user from a team that is owned by an organization",
      "parameters": [
        {
          "name": "org_name",
          "schema": "string",
          "required": true,
          "description": "The organization's name"
        },
        {
          "name": "team_name",
          "schema": "string",
          "required": true,
          "description": "The team's name"
        },
        {
          "name": "user_name",
          "schema": "string",
          "required": true,
          "description": "The slug name of the user"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/orgs/{org_name}/testers",
      "method": "distributionGroupsListAllTestersForOrg",
      "httpMethod": "get",
      "tag": "account",
      "description": "Returns a unique list of users including the whole organization members plus testers in any shared group of that org",
      "parameters": [
        {
          "name": "org_name",
          "schema": "string",
          "required": true,
          "description": "The organization's name"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/orgs/{org_name}/users",
      "method": "usersListForOrg",
      "httpMethod": "get",
      "tag": "account",
      "description": "Returns a list of users that belong to an organization",
      "parameters": [
        {
          "name": "org_name",
          "schema": "string",
          "required": true,
          "description": "The organization's name"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/orgs/{org_name}/users/{user_name}",
      "method": "usersRemoveFromOrg",
      "httpMethod": "delete",
      "tag": "account",
      "description": "Removes a user from an organization.",
      "parameters": [
        {
          "name": "org_name",
          "schema": "string",
          "required": true,
          "description": "The organization's name"
        },
        {
          "name": "user_name",
          "schema": "string",
          "required": true,
          "description": "The slug name of the user"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/orgs/{org_name}/users/{user_name}",
      "method": "usersGetForOrg",
      "httpMethod": "get",
      "tag": "account",
      "description": "Get a user information from an organization by name - if there is explicit permission return it, if not if not return highest implicit permission",
      "parameters": [
        {
          "name": "org_name",
          "schema": "string",
          "required": true,
          "description": "The organization's name"
        },
        {
          "name": "user_name",
          "schema": "string",
          "required": true,
          "description": "The slug name of the user"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/orgs/{org_name}/users/{user_name}",
      "method": "usersUpdateOrgRole",
      "httpMethod": "patch",
      "tag": "account",
      "description": "Updates the given organization user",
      "parameters": [
        {
          "name": "org_name",
          "schema": "string",
          "required": true,
          "description": "The organization's name"
        },
        {
          "name": "user_name",
          "schema": "string",
          "required": true,
          "description": "The slug name of the user"
        },
        {
          "name": "role",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/orgs/{org_name}/users/{user_name}/apps",
      "method": "appsGetForOrgUser",
      "httpMethod": "get",
      "tag": "account",
      "description": "Get a user apps information from an organization by name",
      "parameters": [
        {
          "name": "org_name",
          "schema": "string",
          "required": true,
          "description": "The organization's name"
        },
        {
          "name": "user_name",
          "schema": "string",
          "required": true,
          "description": "The slug name of the user"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/public/apps/{app_id}/releases/{release_id}/ios_manifest",
      "method": "releasesGetIosManifest",
      "httpMethod": "get",
      "tag": "distribute",
      "description": "Returns the manifest.plist in XML format for installing the release on a device. Only available for iOS.",
      "parameters": [
        {
          "name": "app_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the application"
        },
        {
          "name": "release_id",
          "schema": "integer",
          "required": true,
          "description": "The release_id"
        },
        {
          "name": "token",
          "schema": "string",
          "required": true,
          "description": "A hash that authorizes the download if it matches the release info."
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/public/apps/{owner_name}/{app_name}/install_analytics",
      "method": "distibutionReleasesInstallAnalytics",
      "httpMethod": "post",
      "tag": "distribute",
      "description": "Notify download(s) for the provided distribution release(s).",
      "parameters": [
        {
          "name": "owner_name",
          "schema": "string",
          "required": true,
          "description": "The name of the app owner"
        },
        {
          "name": "app_name",
          "schema": "string",
          "required": true,
          "description": "The name of the app"
        },
        {
          "name": "releases",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/v0.1/public/codepush/report_status/deploy",
      "method": "codePushAcquisitionUpdateDeployStatus",
      "httpMethod": "post",
      "tag": "codepush",
      "description": "Report Deployment status metric",
      "parameters": [
        {
          "name": "app_version",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "client_unique_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "deployment_key",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "label",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "previous_deployment_key",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "previous_label_or_app_version",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/public/codepush/report_status/download",
      "method": "codePushAcquisitionUpdateDownloadStatus",
      "httpMethod": "post",
      "tag": "codepush",
      "description": "Report download of specified release",
      "parameters": [
        {
          "name": "app_version",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "client_unique_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "deployment_key",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "label",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "previous_deployment_key",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "previous_label_or_app_version",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/public/codepush/status",
      "method": "codePushAcquisitionGetAcquisitionStatus",
      "httpMethod": "get",
      "tag": "codepush",
      "description": "Returns the acquisition service status to the caller",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/public/codepush/update_check",
      "method": "codePushAcquisitionUpdateCheck",
      "httpMethod": "get",
      "tag": "codepush",
      "description": "Check for updates",
      "parameters": [
        {
          "name": "deployment_key",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "app_version",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "package_hash",
          "schema": "string",
          "description": ""
        },
        {
          "name": "label",
          "schema": "string",
          "description": ""
        },
        {
          "name": "client_unique_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "is_companion",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "previous_label_or_app_version",
          "schema": "string",
          "description": ""
        },
        {
          "name": "previous_deployment_key",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/public/hooks",
      "method": "buildsWebhook",
      "httpMethod": "post",
      "tag": "build",
      "description": "Public webhook sink",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/public/sdk/apps/{app_secret}/distribution_groups/{distribution_group_id}/releases/latest",
      "method": "releasesGetLatestByPublicDistributionGroup",
      "httpMethod": "get",
      "tag": "distribute",
      "description": "Get a release with 'latest' for the given public group.",
      "parameters": [
        {
          "name": "app_secret",
          "schema": "string",
          "required": true,
          "description": "The secret of the target application"
        },
        {
          "name": "distribution_group_id",
          "schema": "string",
          "required": true,
          "description": "the id for destination"
        },
        {
          "name": "is_install_page",
          "schema": "boolean",
          "required": false,
          "description": "The check if the request is from Install page"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Details of an uploaded release"
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/public/sdk/apps/{app_secret}/releases/latest",
      "method": "releasesGetLatestPublicRelease",
      "httpMethod": "get",
      "tag": "distribute",
      "description": "Get the latest public release for the given app.",
      "parameters": [
        {
          "name": "app_secret",
          "schema": "string",
          "required": true,
          "description": "The secret of the target application"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Details of an uploaded release"
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/public/sdk/apps/{app_secret}/releases/{release_hash}/public_distribution_groups",
      "method": "releasesGetPublicGroupsForReleaseByHash",
      "httpMethod": "get",
      "tag": "distribute",
      "description": "Get all public distribution groups that a given release has been distributed to",
      "parameters": [
        {
          "name": "app_secret",
          "schema": "string",
          "required": true,
          "description": "The secret of the target application"
        },
        {
          "name": "release_hash",
          "schema": "string",
          "required": true,
          "description": "The hash of the release"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/public/sparkle/apps/{app_secret}",
      "method": "releasesGetSparkleFeed",
      "httpMethod": "get",
      "tag": "distribute",
      "description": "Gets the sparkle feed of the releases that are distributed to all the public distribution groups.",
      "parameters": [
        {
          "name": "app_secret",
          "schema": "string",
          "required": true,
          "description": "The secret of the application."
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/sdk/apps/{app_secret}/releases/private/latest",
      "method": "releasesGetLatestPrivateRelease",
      "httpMethod": "get",
      "tag": "distribute",
      "description": "Get the latest release distributed to a private group the given user is a member of for the given app.",
      "parameters": [
        {
          "name": "app_secret",
          "schema": "string",
          "required": true,
          "description": "The secret of the target application"
        },
        {
          "name": "udid",
          "schema": "string",
          "required": false,
          "description": "When passing `udid` in the query string, a provisioning check for the given device ID will be done. Will be ignored for non-iOS platforms."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Details of an uploaded release"
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/sdk/apps/{app_secret}/releases/{release_hash}",
      "method": "releasesGetLatestByHash",
      "httpMethod": "get",
      "tag": "distribute",
      "description": "If 'latest' is not specified then it will return the specified release if it's enabled. If 'latest' is specified, regardless of whether a release hash is provided, the latest enabled release is returned.",
      "parameters": [
        {
          "name": "app_secret",
          "schema": "string",
          "required": true,
          "description": "The secret of the target application"
        },
        {
          "name": "release_hash",
          "schema": "string",
          "required": true,
          "description": "The hash of the release or 'latest' to get the latest release from all the distribution groups assigned to the current user."
        },
        {
          "name": "udid",
          "schema": "string",
          "required": false,
          "description": "When passing `udid` in the query string, a provisioning check for the given device ID will be done. Will be ignored for non-iOS platforms."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Details of an uploaded release"
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/user",
      "method": "usersGet",
      "httpMethod": "get",
      "tag": "account",
      "description": "Returns the user profile data",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/user",
      "method": "usersUpdate",
      "httpMethod": "patch",
      "tag": "account",
      "description": "Updates the user profile and returns the updated user data",
      "parameters": [
        {
          "name": "display_name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/user/devices",
      "method": "devicesUserDevicesList",
      "httpMethod": "get",
      "tag": "distribute",
      "description": "Returns all devices associated with the given user.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/user/devices/{device_udid}",
      "method": "devicesRemoveUserDevice",
      "httpMethod": "delete",
      "tag": "distribute",
      "description": "Removes an existing device from a user",
      "parameters": [
        {
          "name": "device_udid",
          "schema": "string",
          "required": true,
          "description": "The UDID of the device"
        }
      ],
      "responses": [
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/user/devices/{device_udid}",
      "method": "devicesDeviceDetails",
      "httpMethod": "get",
      "tag": "distribute",
      "description": "Returns the device details.",
      "parameters": [
        {
          "name": "device_udid",
          "schema": "string",
          "required": true,
          "description": "The UDID of the device"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The information for a single iOS device"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/user/dsr/delete",
      "method": "dataSubjectRightDeleteRequest",
      "httpMethod": "post",
      "tag": "gdpr",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/user/dsr/delete/{token}",
      "method": "dataSubjectRightDeleteStatusRequest",
      "httpMethod": "get",
      "tag": "gdpr",
      "description": "",
      "parameters": [
        {
          "name": "token",
          "schema": "string",
          "required": true,
          "description": "Unique request ID (GUID)"
        },
        {
          "name": "email",
          "schema": "string",
          "required": true,
          "description": "Email used for delete with x-authz-bypass headers"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/user/dsr/delete/{token}/cancel",
      "method": "dataSubjectRightCancelDeleteRequest",
      "httpMethod": "post",
      "tag": "gdpr",
      "description": "",
      "parameters": [
        {
          "name": "token",
          "schema": "string",
          "required": true,
          "description": "Unique request ID (GUID)"
        },
        {
          "name": "email",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "503",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/user/dsr/export",
      "method": "dataSubjectRightExportRequest",
      "httpMethod": "post",
      "tag": "gdpr",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/user/dsr/export/{token}",
      "method": "dataSubjectRightExportStatusRequest",
      "httpMethod": "get",
      "tag": "gdpr",
      "description": "",
      "parameters": [
        {
          "name": "token",
          "schema": "string",
          "required": true,
          "description": "Unique request ID (GUID)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/user/dsr/export/{token}/cancel",
      "method": "dataSubjectRightCancelExportRequest",
      "httpMethod": "post",
      "tag": "gdpr",
      "description": "",
      "parameters": [
        {
          "name": "token",
          "schema": "string",
          "required": true,
          "description": "Unique request ID (GUID)"
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "503",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/user/export/serviceConnections",
      "method": "sharedconnectionConnections",
      "httpMethod": "get",
      "tag": "account",
      "description": "Gets all service connections of the service type for GDPR export.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/user/invitations/apps/{invitation_token}/accept",
      "method": "appInvitationsAccept",
      "httpMethod": "post",
      "tag": "account",
      "description": "Accepts a pending invitation for the specified user",
      "parameters": [
        {
          "name": "invitation_token",
          "schema": "string",
          "required": true,
          "description": "The app invitation token that was sent to the user"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/user/invitations/apps/{invitation_token}/reject",
      "method": "appInvitationsReject",
      "httpMethod": "post",
      "tag": "account",
      "description": "Rejects a pending invitation for the specified user",
      "parameters": [
        {
          "name": "invitation_token",
          "schema": "string",
          "required": true,
          "description": "The app invitation token that was sent to the user"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/user/invitations/distribution_groups/accept",
      "method": "distributionGroupInvitationsAcceptAll",
      "httpMethod": "post",
      "tag": "account",
      "description": "Accepts all pending invitations to distribution groups for the specified user",
      "parameters": [],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/user/invitations/orgs/{invitation_token}/accept",
      "method": "orgInvitationsAccept",
      "httpMethod": "post",
      "tag": "account",
      "description": "Accepts a pending organization invitation for the specified user",
      "parameters": [
        {
          "name": "invitation_token",
          "schema": "string",
          "required": true,
          "description": "The app invitation token that was sent to the user"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/user/invitations/orgs/{invitation_token}/reject",
      "method": "orgInvitationsReject",
      "httpMethod": "post",
      "tag": "account",
      "description": "Rejects a pending organization invitation",
      "parameters": [
        {
          "name": "invitation_token",
          "schema": "string",
          "required": true,
          "description": "The app invitation token that was sent to the user"
        }
      ],
      "responses": [
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/user/metadata/optimizely",
      "method": "usersGetUserMetadata",
      "httpMethod": "get",
      "tag": "account",
      "description": "",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/v0.1/user/notifications/emailSettings",
      "method": "notificationsGetUserEmailSettings",
      "httpMethod": "get",
      "tag": "alerting",
      "description": "Get Default email notification settings for the user",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "Alerting Default Email Settings of the user"
        },
        {
          "statusCode": "default",
          "description": "Alerting service error"
        }
      ]
    },
    {
      "url": "/v0.1/users/{user_id}/devices/register",
      "method": "devicesRegisterUserForDevice",
      "httpMethod": "post",
      "tag": "distribute",
      "description": "Registers a user for an existing device",
      "parameters": [
        {
          "name": "user_id",
          "schema": "string",
          "required": true,
          "description": "The ID of the user"
        },
        {
          "name": "imei",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "model",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "os_build",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "os_version",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "owner_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "serial",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "udid",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The information for a single iOS device"
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://api.appcenter.ms",
  "apiDescription": "Microsoft Visual Studio App Center API",
  "apiTitle": "App Center Client",
  "endpoints": 266,
  "sdkMethods": 352,
  "schemas": 783,
  "parameters": 1235,
  "difficultyScore": 1052.25,
  "difficulty": "Very Hard"
}