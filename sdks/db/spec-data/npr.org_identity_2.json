{
  "providerName": "npr.org",
  "openApiRaw": "https://identity.api.npr.org/v2/swagger.json",
  "securitySchemes": {
    "oauth2": {
      "type": "oauth2",
      "flows": {
        "authorizationCode": {
          "authorizationUrl": "https://authorization.api.npr.org/v2/authorize",
          "tokenUrl": "https://authorization.api.npr.org/v2/token",
          "scopes": {
            "identity.readonly": "See your personal information, such as your first name, last name, and favorite station.",
            "identity.write": "Update your personal information, such as your favorite station(s) or program(s) you follow, on your behalf.",
            "listening.readonly": "See your NPR One listening history and get audio recommendations.",
            "listening.write": "Record that you have heard, marked as interesting, and/or skipped NPR One stories in order to personalize future audio recommendations.",
            "localactivation": "Connect you with your local NPR member station for communication purposes."
          }
        }
      }
    }
  },
  "categories": [
    "entertainment"
  ],
  "homepage": "npr.org",
  "serviceName": "identity",
  "apiVersion": "2",
  "methods": [
    {
      "url": "/v2/following",
      "method": "postFollowing",
      "httpMethod": "post",
      "tag": "identity",
      "typeScriptTag": "identity",
      "description": "Update the following status of the logged-in user for a particular aggregation",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Your access token from the Authorization Service. Should start with `Bearer`, followed by a space, followed by the token."
        },
        {
          "name": "daysSinceLastListen",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "following",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "href",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "notif_following",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "notif_rated",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "rating",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "A Collection.doc+JSON representation of an error result from an API call"
        },
        {
          "statusCode": "401",
          "description": "A Collection.doc+JSON representation of an error result from an API call"
        },
        {
          "statusCode": "429",
          "description": "A Collection.doc+JSON representation of an error result from an API call"
        },
        {
          "statusCode": "500",
          "description": "A Collection.doc+JSON representation of an error result from an API call"
        },
        {
          "statusCode": "503",
          "description": "A Collection.doc+JSON representation of an error result from an API call"
        }
      ]
    },
    {
      "url": "/v2/stations",
      "method": "updateStations",
      "httpMethod": "put",
      "tag": "identity",
      "typeScriptTag": "identity",
      "description": "Update the logged-in user's favorite station(s)",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Your access token from the Authorization Service. Should start with `Bearer`, followed by a space, followed by the token."
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "A Collection.doc+JSON representation of an error result from an API call"
        },
        {
          "statusCode": "401",
          "description": "A Collection.doc+JSON representation of an error result from an API call"
        },
        {
          "statusCode": "429",
          "description": "A Collection.doc+JSON representation of an error result from an API call"
        },
        {
          "statusCode": "500",
          "description": "A Collection.doc+JSON representation of an error result from an API call"
        },
        {
          "statusCode": "503",
          "description": "A Collection.doc+JSON representation of an error result from an API call"
        }
      ]
    },
    {
      "url": "/v2/user",
      "method": "deleteUser",
      "httpMethod": "delete",
      "tag": "identity",
      "typeScriptTag": "identity",
      "description": "Delete the user's account",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Your access token from the Authorization Service. Should start with `Bearer`, followed by a space, followed by the token."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": "A Collection.doc+JSON representation of an error result from an API call"
        },
        {
          "statusCode": "500",
          "description": "A Collection.doc+JSON representation of an error result from an API call"
        },
        {
          "statusCode": "503",
          "description": "A Collection.doc+JSON representation of an error result from an API call"
        }
      ]
    },
    {
      "url": "/v2/user",
      "method": "getUser",
      "httpMethod": "get",
      "tag": "identity",
      "typeScriptTag": "identity",
      "description": "Get the latest state information about the logged-in user",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Your access token from the Authorization Service. Should start with `Bearer`, followed by a space, followed by the token."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": "A Collection.doc+JSON representation of an error result from an API call"
        },
        {
          "statusCode": "429",
          "description": "A Collection.doc+JSON representation of an error result from an API call"
        },
        {
          "statusCode": "500",
          "description": "A Collection.doc+JSON representation of an error result from an API call"
        },
        {
          "statusCode": "503",
          "description": "A Collection.doc+JSON representation of an error result from an API call"
        }
      ]
    },
    {
      "url": "/v2/user/inherit",
      "method": "inheritFromTempUser",
      "httpMethod": "post",
      "tag": "identity",
      "typeScriptTag": "identity",
      "description": "Copy listening data from a temporary user account to the logged-in user's account",
      "parameters": [
        {
          "name": "authorization",
          "schema": "string",
          "required": true,
          "description": "Your access token from the Authorization Service. Should start with `Bearer`, followed by a space, followed by the token."
        },
        {
          "name": "tempUser",
          "schema": "integer",
          "required": true,
          "description": "The temporary user's ID before the user registered or logged in"
        }
      ],
      "responses": [
        {
          "statusCode": "202",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": "A Collection.doc+JSON representation of an error result from an API call"
        },
        {
          "statusCode": "429",
          "description": "A Collection.doc+JSON representation of an error result from an API call"
        },
        {
          "statusCode": "500",
          "description": "A Collection.doc+JSON representation of an error result from an API call"
        },
        {
          "statusCode": "503",
          "description": "A Collection.doc+JSON representation of an error result from an API call"
        }
      ]
    }
  ],
  "apiBaseUrl": "https://identity.api.npr.org",
  "apiDescription": "The entry point to user-specific information",
  "apiTitle": "NPR Identity Service",
  "endpoints": 4,
  "sdkMethods": 5,
  "schemas": 11,
  "parameters": 14,
  "contactUrl": "https://dev.npr.org",
  "contactEmail": "NPROneEnterprise@npr.org",
  "difficultyScore": 14,
  "difficulty": "Easy"
}