{
  "providerName": "rawg.io",
  "openApiRaw": "https://api.rawg.io/docs/?format=openapi",
  "securitySchemes": {},
  "homepage": "rawg.io",
  "apiVersion": "v1.0",
  "methods": [
    {
      "url": "/creator-roles",
      "method": "creatorRolesList",
      "httpMethod": "get",
      "tag": "creator-roles",
      "description": "Get a list of creator positions (jobs).",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "A page number within the paginated result set."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Number of results to return per page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/creators",
      "method": "creatorsList",
      "httpMethod": "get",
      "tag": "creators",
      "description": "Get a list of game creators.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "A page number within the paginated result set."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Number of results to return per page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/creators/{id}",
      "method": "creatorsRead",
      "httpMethod": "get",
      "tag": "creators",
      "description": "Get details of the creator.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/developers",
      "method": "developersList",
      "httpMethod": "get",
      "tag": "developers",
      "description": "Get a list of game developers.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "A page number within the paginated result set."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Number of results to return per page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/developers/{id}",
      "method": "developersRead",
      "httpMethod": "get",
      "tag": "developers",
      "description": "Get details of the developer.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/games",
      "method": "gamesList",
      "httpMethod": "get",
      "tag": "games",
      "description": "Get a list of games.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "A page number within the paginated result set."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Number of results to return per page."
        },
        {
          "name": "search",
          "schema": "string",
          "description": "Search query."
        },
        {
          "name": "searchPrecise",
          "schema": "boolean",
          "description": "Disable fuzziness for the search query."
        },
        {
          "name": "searchExact",
          "schema": "boolean",
          "description": "Mark the search query as exact."
        },
        {
          "name": "parentPlatforms",
          "schema": "string",
          "description": "Filter by parent platforms, for example: `1,2,3`."
        },
        {
          "name": "platforms",
          "schema": "string",
          "description": "Filter by platforms, for example: `4,5`."
        },
        {
          "name": "stores",
          "schema": "string",
          "description": "Filter by stores, for example: `5,6`."
        },
        {
          "name": "developers",
          "schema": "string",
          "description": "Filter by developers, for example: `1612,18893` or `valve-software,feral-interactive`."
        },
        {
          "name": "publishers",
          "schema": "string",
          "description": "Filter by publishers, for example: `354,20987` or `electronic-arts,microsoft-studios`."
        },
        {
          "name": "genres",
          "schema": "string",
          "description": "Filter by genres, for example: `4,51` or `action,indie`."
        },
        {
          "name": "tags",
          "schema": "string",
          "description": "Filter by tags, for example: `31,7` or `singleplayer,multiplayer`."
        },
        {
          "name": "creators",
          "schema": "string",
          "description": "Filter by creators, for example: `78,28` or `cris-velasco,mike-morasky`."
        },
        {
          "name": "dates",
          "schema": "string",
          "description": "Filter by a release date, for example: `2010-01-01,2018-12-31.1960-01-01,1969-12-31`."
        },
        {
          "name": "updated",
          "schema": "string",
          "description": "Filter by an update date, for example: `2020-12-01,2020-12-31`."
        },
        {
          "name": "platformsCount",
          "schema": "integer",
          "description": "Filter by platforms count, for example: `1`."
        },
        {
          "name": "metacritic",
          "schema": "string",
          "description": "Filter by a metacritic rating, for example: `80,100`."
        },
        {
          "name": "excludeCollection",
          "schema": "integer",
          "description": "Exclude games from a particular collection, for example: `123`."
        },
        {
          "name": "excludeAdditions",
          "schema": "boolean",
          "description": "Exclude additions."
        },
        {
          "name": "excludeParents",
          "schema": "boolean",
          "description": "Exclude games which have additions."
        },
        {
          "name": "excludeGameSeries",
          "schema": "boolean",
          "description": "Exclude games which included in a game series."
        },
        {
          "name": "excludeStores",
          "schema": "string",
          "description": "Exclude stores, for example: `5,6`."
        },
        {
          "name": "ordering",
          "schema": "string",
          "description": "Available fields: `name`, `released`, `added`, `created`, `updated`, `rating`, `metacritic`. You can reverse the sort order adding a hyphen, for example: `-released`."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/games/{game_pk}/additions",
      "method": "gamesAdditionsList",
      "httpMethod": "get",
      "tag": "games",
      "description": "Get a list of DLC's for the game, GOTY and other editions, companion apps, etc.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "A page number within the paginated result set."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Number of results to return per page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/games/{game_pk}/development-team",
      "method": "gamesDevelopmentTeamList",
      "httpMethod": "get",
      "tag": "games",
      "description": "Get a list of individual creators that were part of the development team.",
      "parameters": [
        {
          "name": "ordering",
          "schema": "string",
          "required": false,
          "description": "Which field to use when ordering the results."
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "A page number within the paginated result set."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Number of results to return per page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/games/{game_pk}/game-series",
      "method": "gamesGameSeriesList",
      "httpMethod": "get",
      "tag": "games",
      "description": "Get a list of games that are part of the same series.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "A page number within the paginated result set."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Number of results to return per page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/games/{game_pk}/parent-games",
      "method": "gamesParentGamesList",
      "httpMethod": "get",
      "tag": "games",
      "description": "Get a list of parent games for DLC's and editions.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "A page number within the paginated result set."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Number of results to return per page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/games/{game_pk}/screenshots",
      "method": "gamesScreenshotsList",
      "httpMethod": "get",
      "tag": "games",
      "description": "Get screenshots for the game.",
      "parameters": [
        {
          "name": "ordering",
          "schema": "string",
          "required": false,
          "description": "Which field to use when ordering the results."
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "A page number within the paginated result set."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Number of results to return per page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/games/{game_pk}/stores",
      "method": "gamesStoresList",
      "httpMethod": "get",
      "tag": "games",
      "description": "Get links to the stores that sell the game.",
      "parameters": [
        {
          "name": "ordering",
          "schema": "string",
          "required": false,
          "description": "Which field to use when ordering the results."
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "A page number within the paginated result set."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Number of results to return per page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/games/{id}",
      "method": "gamesRead",
      "httpMethod": "get",
      "tag": "games",
      "description": "Get details of the game.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "An ID or a slug identifying this Game."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/games/{id}/achievements",
      "method": "gamesAchievementsRead",
      "httpMethod": "get",
      "tag": "games",
      "description": "Get a list of game achievements.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "An ID or a slug identifying this Game."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/games/{id}/movies",
      "method": "gamesMoviesRead",
      "httpMethod": "get",
      "tag": "games",
      "description": "Get a list of game trailers.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "An ID or a slug identifying this Game."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/games/{id}/reddit",
      "method": "gamesRedditRead",
      "httpMethod": "get",
      "tag": "games",
      "description": "Get a list of most recent posts from the game's subreddit.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "An ID or a slug identifying this Game."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/games/{id}/suggested",
      "method": "gamesSuggestedRead",
      "httpMethod": "get",
      "tag": "games",
      "description": "Get a list of visually similar games, available only for business and enterprise API users.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "An ID or a slug identifying this Game."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/games/{id}/twitch",
      "method": "gamesTwitchRead",
      "httpMethod": "get",
      "tag": "games",
      "description": "Get streams on Twitch associated with the game, available only for business and enterprise API users.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "An ID or a slug identifying this Game."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/games/{id}/youtube",
      "method": "gamesYoutubeRead",
      "httpMethod": "get",
      "tag": "games",
      "description": "Get videos from YouTube associated with the game, available only for business and enterprise API users.",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "An ID or a slug identifying this Game."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/genres",
      "method": "genresList",
      "httpMethod": "get",
      "tag": "genres",
      "description": "Get a list of video game genres.",
      "parameters": [
        {
          "name": "ordering",
          "schema": "string",
          "required": false,
          "description": "Which field to use when ordering the results."
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "A page number within the paginated result set."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Number of results to return per page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/genres/{id}",
      "method": "genresRead",
      "httpMethod": "get",
      "tag": "genres",
      "description": "Get details of the genre.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/platforms",
      "method": "platformsList",
      "httpMethod": "get",
      "tag": "platforms",
      "description": "Get a list of video game platforms.",
      "parameters": [
        {
          "name": "ordering",
          "schema": "string",
          "required": false,
          "description": "Which field to use when ordering the results."
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "A page number within the paginated result set."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Number of results to return per page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/platforms/lists/parents",
      "method": "platformsListsParentsList",
      "httpMethod": "get",
      "tag": "platforms",
      "description": "Get a list of parent platforms.",
      "parameters": [
        {
          "name": "ordering",
          "schema": "string",
          "required": false,
          "description": "Which field to use when ordering the results."
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "A page number within the paginated result set."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Number of results to return per page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/platforms/{id}",
      "method": "platformsRead",
      "httpMethod": "get",
      "tag": "platforms",
      "description": "Get details of the platform.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/publishers",
      "method": "publishersList",
      "httpMethod": "get",
      "tag": "publishers",
      "description": "Get a list of video game publishers.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "A page number within the paginated result set."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Number of results to return per page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/publishers/{id}",
      "method": "publishersRead",
      "httpMethod": "get",
      "tag": "publishers",
      "description": "Get details of the publisher.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/stores",
      "method": "storesList",
      "httpMethod": "get",
      "tag": "stores",
      "description": "Get a list of video game storefronts.",
      "parameters": [
        {
          "name": "ordering",
          "schema": "string",
          "required": false,
          "description": "Which field to use when ordering the results."
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "A page number within the paginated result set."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Number of results to return per page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/stores/{id}",
      "method": "storesRead",
      "httpMethod": "get",
      "tag": "stores",
      "description": "Get details of the store.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/tags",
      "method": "tagsList",
      "httpMethod": "get",
      "tag": "tags",
      "description": "Get a list of tags.",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "A page number within the paginated result set."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "Number of results to return per page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/tags/{id}",
      "method": "tagsRead",
      "httpMethod": "get",
      "tag": "tags",
      "description": "Get details of the tag.",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://api.rawg.io/api",
  "apiDescription": "\nThe largest open video games database.\n\n### Why build on RAWG\n- More than 350,000 games for 50 platforms including mobiles.\n- Rich metadata: tags, genres, developers, publishers, individual creators, official websites, release dates,\nMetacritic ratings.\n- Where to buy: links to digital distribution services\n- Similar games based on visual similarity.\n- Player activity data: Steam average playtime and RAWG player counts and ratings.\n- Actively developing and constantly getting better by user contribution and our algorithms.\n\n### Terms of Use\n- Free for personal use as long as you attribute RAWG as the source of the data and/or images and add an active\nhyperlink from every page where the data of RAWG is used.\n- Free for commercial use for startups and hobby projects with not more than 100,000 monthly active users or 500,000\npage views per month. If your project is larger than that, email us at [api@rawg.io](mailto:api@rawg.io) for\ncommercial terms.\n- No cloning. It would not be cool if you used our API to launch a clone of RAWG. We know it is not always easy\nto say what is a duplicate and what isn't. Drop us a line at [api@rawg.io](mailto:api@rawg.io) if you are in doubt,\nand we will talk it through.\n- You must include an API key with every request. The key can be obtained at https://rawg.io/apidocs.\nIf you don’t provide it, we may ban your requests.\n\n__[Read more](https://rawg.io/apidocs)__.\n",
  "apiTitle": "RAWG Video Games Database API",
  "endpoints": 30,
  "sdkMethods": 60,
  "schemas": 27,
  "parameters": 68,
  "difficultyScore": 90.5,
  "difficulty": "Medium"
}