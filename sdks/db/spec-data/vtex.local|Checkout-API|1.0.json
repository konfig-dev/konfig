{
  "providerName": "vtex.local",
  "openApiRaw": "https://raw.githubusercontent.com/vtex/openapi-schemas/master/VTEX - Checkout API.json",
  "securitySchemes": {
    "appKey": {
      "in": "header",
      "name": "X-VTEX-API-AppKey",
      "type": "apiKey"
    },
    "appToken": {
      "in": "header",
      "name": "X-VTEX-API-AppToken",
      "type": "apiKey"
    }
  },
  "homepage": "vtex.local",
  "serviceName": "Checkout-API",
  "apiVersion": "1.0",
  "methods": [
    {
      "url": "/api/checkout/pub/gatewayCallback/{orderGroup}",
      "method": "processOrder",
      "httpMethod": "post",
      "tag": "Order placement",
      "description": "Process order",
      "parameters": [
        {
          "name": "orderGroup",
          "schema": "string",
          "required": true,
          "description": "Order group. It is the part of the `orderId` that comes before the `-`. For example, the `orderGroup` of the order `123456789-01` is `123456789`."
        },
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "cookie",
          "schema": "string",
          "required": true,
          "description": "VTEX Chekout cookie associated with a specific order. Use the `Vtex_CHKO_Auth` and the `CheckoutDataAccess` cookies returned by the [Place order](https://developers.vtex.com/vtex-rest-api/reference/order-placement-1#placeorder) or [Place order from existing cart](https://developers.vtex.com/vtex-rest-api/reference/order-placement-1#placeorderfromexistingorderform) API requests, like a browser would."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "500",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/checkout/pub/orderForm",
      "method": "createANewCart",
      "httpMethod": "get",
      "tag": "Shopping cart",
      "description": "Get current or create a new cart",
      "parameters": [
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "forceNewCart",
          "schema": "boolean",
          "required": false,
          "description": "Use this query parameter to create a new empty shopping cart."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/checkout/pub/orderForm/{orderFormId}",
      "method": "getCartInformationById",
      "httpMethod": "get",
      "tag": "Shopping cart",
      "description": "Get cart information by ID",
      "parameters": [
        {
          "name": "orderFormId",
          "schema": "string",
          "required": true,
          "description": "ID of the orderForm corresponding to the cart whose information you want to retrieve."
        },
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "refreshOutdatedData",
          "schema": "boolean",
          "required": false,
          "description": "It is possible to use the [Update cart items request](https://developers.vtex.com/vtex-rest-api/reference/cart-update#itemsupdate) so as to allow outdated information in the `orderForm`, which may improve performance in some cases. To guarantee that all cart information is updated, send this request with this parameter as `true`. We recommend doing this in the final stages of the shopping experience, starting from the checkout page."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/checkout/pub/orderForm/{orderFormId}/attachments/clientPreferencesData",
      "method": "addClientPreferences",
      "httpMethod": "post",
      "tag": "Cart attachments",
      "description": "Add client preferences",
      "parameters": [
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "orderFormId",
          "schema": "string",
          "required": true,
          "description": "ID of the orderForm that will receive client profile information."
        },
        {
          "name": "locale",
          "schema": "string",
          "description": ""
        },
        {
          "name": "optinNewsLetter",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/checkout/pub/orderForm/{orderFormId}/attachments/clientProfileData",
      "method": "addClientProfile",
      "httpMethod": "post",
      "tag": "Cart attachments",
      "description": "Add client profile",
      "parameters": [
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "orderFormId",
          "schema": "string",
          "required": true,
          "description": "ID of the orderForm that will receive client profile information."
        },
        {
          "name": "corporateDocument",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "corporateName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "corporatePhone",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "document",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "documentType",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "firstName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "isCorporate",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "lastName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "phone",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "stateInscription",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tradeName",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/checkout/pub/orderForm/{orderFormId}/attachments/marketingData",
      "method": "addMarketingData",
      "httpMethod": "post",
      "tag": "Cart attachments",
      "description": "Add marketing data",
      "parameters": [
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "orderFormId",
          "schema": "string",
          "required": true,
          "description": "ID of the orderForm that will receive client profile information."
        },
        {
          "name": "coupon",
          "schema": "string",
          "description": ""
        },
        {
          "name": "marketingTags",
          "schema": "array",
          "description": ""
        },
        {
          "name": "utmCampaign",
          "schema": "string",
          "description": ""
        },
        {
          "name": "utmMedium",
          "schema": "string",
          "description": ""
        },
        {
          "name": "utmSource",
          "schema": "string",
          "description": ""
        },
        {
          "name": "utmiCampaign",
          "schema": "string",
          "description": ""
        },
        {
          "name": "utmiPage",
          "schema": "string",
          "description": ""
        },
        {
          "name": "utmiPart",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/checkout/pub/orderForm/{orderFormId}/attachments/merchantContextData",
      "method": "addMerchantContextData",
      "httpMethod": "post",
      "tag": "Cart attachments",
      "description": "Add merchant context data",
      "parameters": [
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "orderFormId",
          "schema": "string",
          "required": true,
          "description": "ID of the orderForm that will receive the relevant information added by the merchant."
        },
        {
          "name": "salesAssociateData",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/checkout/pub/orderForm/{orderFormId}/attachments/paymentData",
      "method": "addPaymentData",
      "httpMethod": "post",
      "tag": "Cart attachments",
      "description": "Add payment data",
      "parameters": [
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "orderFormId",
          "schema": "string",
          "required": true,
          "description": "ID of the orderForm that will receive client profile information."
        },
        {
          "name": "payments",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/checkout/pub/orderForm/{orderFormId}/attachments/shippingData",
      "method": "addShippingAddress",
      "httpMethod": "post",
      "tag": "Cart attachments",
      "description": "Add shipping address and select delivery option",
      "parameters": [
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "orderFormId",
          "schema": "string",
          "required": true,
          "description": "ID of the orderForm that will receive client profile information."
        },
        {
          "name": "clearAddressIfPostalCodeNotFound",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "logisticsInfo",
          "schema": "array",
          "description": ""
        },
        {
          "name": "selectedAddresses",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/checkout/pub/orderForm/{orderFormId}/coupons",
      "method": "addCoupons",
      "httpMethod": "post",
      "tag": "Shopping cart",
      "description": "Add coupons to the cart",
      "parameters": [
        {
          "name": "orderFormId",
          "schema": "string",
          "required": true,
          "description": "ID of the orderForm that will receive coupon information."
        },
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "text",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/checkout/pub/orderForm/{orderFormId}/customData/{appId}",
      "method": "setMultipleCustomFieldValues",
      "httpMethod": "put",
      "tag": "Custom data",
      "description": "Set multiple custom field values",
      "parameters": [
        {
          "name": "orderFormId",
          "schema": "string",
          "required": true,
          "description": "ID of the orderForm that will receive the new custom field values."
        },
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "appId",
          "schema": "string",
          "required": true,
          "description": "ID of the app created with the configuration API."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/checkout/pub/orderForm/{orderFormId}/customData/{appId}/{appFieldName}",
      "method": "removesinglecustomfieldvalue",
      "httpMethod": "delete",
      "tag": "Custom data",
      "description": "Remove single custom field value",
      "parameters": [
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "orderFormId",
          "schema": "string",
          "required": true,
          "description": "The ID of the orderForm from which you want to remove the custom field value."
        },
        {
          "name": "appId",
          "schema": "string",
          "required": true,
          "description": "ID of the app created through the Update orderForm Configuration endpoint."
        },
        {
          "name": "appFieldName",
          "schema": "string",
          "required": true,
          "description": "Name of the app's field created through the Update orderForm Configuration endpoint and which will be deleted."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/checkout/pub/orderForm/{orderFormId}/customData/{appId}/{appFieldName}",
      "method": "setSingleCustomFieldValue",
      "httpMethod": "put",
      "tag": "Custom data",
      "description": "Set single custom field value",
      "parameters": [
        {
          "name": "orderFormId",
          "schema": "string",
          "required": true,
          "description": "The ID of the orderForm whose custom field's value you want to change."
        },
        {
          "name": "appId",
          "schema": "string",
          "required": true,
          "description": "ID of the app created through the Update orderForm Configuration endpoint."
        },
        {
          "name": "appFieldName",
          "schema": "string",
          "required": true,
          "description": "Name of the app's field created through the Update orderForm Configuration endpoint."
        },
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "value",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/checkout/pub/orderForm/{orderFormId}/installments",
      "method": "getCartInstallments",
      "httpMethod": "get",
      "tag": "Shopping cart",
      "description": "Cart installments",
      "parameters": [
        {
          "name": "orderFormId",
          "schema": "string",
          "required": true,
          "description": "ID of the `orderForm` to be consulted for installments."
        },
        {
          "name": "paymentSystem",
          "schema": "integer",
          "required": true,
          "description": "ID of the payment method to be consulted for installments."
        },
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/checkout/pub/orderForm/{orderFormId}/items",
      "method": "items",
      "httpMethod": "post",
      "tag": "Shopping cart",
      "description": "Add cart items",
      "parameters": [
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "orderFormId",
          "schema": "string",
          "required": true,
          "description": "ID of the orderForm corresponding to the cart in which the new item will be added."
        },
        {
          "name": "allowedOutdatedData",
          "schema": "array",
          "required": false,
          "description": "In order to optimize performance, this parameter allows some information to not be updated when there are changes in the minicart. For instance, if a shopper adds another unit of a given SKU to the cart, it may not be necessary to recalculate payment information, which could impact performance.\n\r\n\rThis array accepts strings and currently the only possible value is `”paymentData”`."
        },
        {
          "name": "orderItems",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/checkout/pub/orderForm/{orderFormId}/items/removeAll",
      "method": "removeAllItems",
      "httpMethod": "post",
      "tag": "Shopping cart",
      "description": "Remove all items",
      "parameters": [
        {
          "name": "orderFormId",
          "schema": "string",
          "required": true,
          "description": "ID of the orderForm corresponding to the cart whose items you want to remove."
        },
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/checkout/pub/orderForm/{orderFormId}/items/update",
      "method": "itemsUpdate",
      "httpMethod": "post",
      "tag": "Shopping cart",
      "description": "Update cart items",
      "parameters": [
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "orderFormId",
          "schema": "string",
          "required": true,
          "description": "ID of the `orderForm` corresponding to the cart whose items you want to update."
        },
        {
          "name": "allowedOutdatedData",
          "schema": "array",
          "required": false,
          "description": "In order to optimize performance, this parameter allows some information to not be updated when there are changes in the minicart. For instance, if a shopper adds another unit of a given SKU to the cart, it may not be necessary to recalculate payment information, which could impact performance.\n\r\n\rThis array accepts strings and currently the only possible value is `”paymentData”`."
        },
        {
          "name": "orderItems",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/checkout/pub/orderForm/{orderFormId}/items/{itemIndex}/price",
      "method": "priceChange",
      "httpMethod": "put",
      "tag": "Shopping cart",
      "description": "Change price",
      "parameters": [
        {
          "name": "orderFormId",
          "schema": "string",
          "required": true,
          "description": "ID of the orderForm corresponding to the cart whose items will have the price changed."
        },
        {
          "name": "itemIndex",
          "schema": "string",
          "required": true,
          "description": "The index of the item in the cart. Each cart item is identified by an index, starting in 0."
        },
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "price",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/checkout/pub/orderForm/{orderFormId}/messages/clear",
      "method": "clearorderFormMessages",
      "httpMethod": "post",
      "tag": "Configuration",
      "description": "Clear orderForm messages",
      "parameters": [
        {
          "name": "orderFormId",
          "schema": "string",
          "required": true,
          "description": "ID of the orderForm corresponding to the cart whose messages you want to remove."
        },
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/checkout/pub/orderForm/{orderFormId}/profile",
      "method": "ignoreProfileData",
      "httpMethod": "patch",
      "tag": "Shopping cart",
      "description": "Ignore profile data",
      "parameters": [
        {
          "name": "orderFormId",
          "schema": "string",
          "required": true,
          "description": "ID of the orderForm corresponding to the cart whose items will have the price changed."
        },
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "ignoreProfileData",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/checkout/pub/orderForm/{orderFormId}/transaction",
      "method": "placeOrderFromExistingOrderForm",
      "httpMethod": "post",
      "tag": "Order placement",
      "description": "Place order from an existing cart",
      "parameters": [
        {
          "name": "orderFormId",
          "schema": "string",
          "required": true,
          "description": "ID of the `orderForm` corresponding to the cart from which to place the order."
        },
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "interestValue",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "optinNewsLetter",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "referenceId",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "referenceValue",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "savePersonalData",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "value",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/checkout/pub/orderForms/simulation",
      "method": "cartSimulation",
      "httpMethod": "post",
      "tag": "Shopping cart",
      "description": "Cart simulation",
      "parameters": [
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "rnbBehavior",
          "schema": "integer",
          "required": false,
          "description": "This parameter defines which promotions apply to the simulation. Use `0` for simulations at cart stage, which means all promotions apply. In case of window simulation use `1`, which indicates promotions that apply nominal discounts over the total purchase value shouldn't be considered on the simulation.\n\r\n\rNote that if this not sent, the parameter is `1`."
        },
        {
          "name": "sc",
          "schema": "integer",
          "required": false,
          "description": "Trade Policy (Sales Channel) identification."
        },
        {
          "name": "country",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "geoCoordinates",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "items",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "postalCode",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/checkout/pub/orders",
      "method": "placeOrder",
      "httpMethod": "put",
      "tag": "Order placement",
      "description": "Place order",
      "parameters": [
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "sc",
          "schema": "integer",
          "required": false,
          "description": "Trade Policy (Sales Channel) identification. This query can be used to create an order for a specific sales channel."
        },
        {
          "name": "clientProfileData",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "items",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "marketingData",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "openTextField",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "paymentData",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "salesAssociateData",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "shippingData",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/checkout/pub/pickup-points",
      "method": "listPickupPpointsByLocation",
      "httpMethod": "get",
      "tag": "Fulfillment",
      "description": "List pickup points by location",
      "parameters": [
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "geoCoordinates",
          "schema": "array",
          "required": false,
          "description": "Geocoordinates (first longitude, then latitude) around which to search for pickup points. If you use this type of search, do not pass postal and country codes."
        },
        {
          "name": "postalCode",
          "schema": "string",
          "required": false,
          "description": "Postal code around which to search for pickup points. If you use this type of search, make sure to pass a `countryCode` and do not pass `geoCoordinates`."
        },
        {
          "name": "countryCode",
          "schema": "string",
          "required": false,
          "description": "Three letter country code refering to the `postalCode` field. Pass the country code only if you are searching pickup points by postal code."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/checkout/pub/postal-code/{countryCode}/{postalCode}",
      "method": "getAddressByPostalCode",
      "httpMethod": "get",
      "tag": "Fulfillment",
      "description": "Get address by postal code",
      "parameters": [
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "countryCode",
          "schema": "string",
          "required": true,
          "description": "Three letter country code refering to the `postalCode` field."
        },
        {
          "name": "postalCode",
          "schema": "string",
          "required": true,
          "description": "Postal code."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/checkout/pub/profiles",
      "method": "getClientProfileByEmail",
      "httpMethod": "get",
      "tag": "Cart attachments",
      "description": "Get client profile by email",
      "parameters": [
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "email",
          "schema": "string",
          "required": true,
          "description": "Client's email address to be searched."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/checkout/pub/regions/{regionId}",
      "method": "getSellersByRegion",
      "httpMethod": "get",
      "tag": "Region",
      "description": "Get sellers by region or address",
      "parameters": [
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "regionId",
          "schema": "string",
          "required": true,
          "description": "ID of the region corresponding to the shopper's location."
        },
        {
          "name": "country",
          "schema": "string",
          "required": true,
          "description": "Three letter country code refering to the `postalCode` field."
        },
        {
          "name": "postalCode",
          "schema": "string",
          "required": false,
          "description": "Postal code corresponding to the shopper's location."
        },
        {
          "name": "geoCoordinates",
          "schema": "array",
          "required": false,
          "description": "Geocoordinates (first longitude, semicolon, then latitude) corresponding to the shopper's location."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/checkout/pvt/configuration/orderForm",
      "method": "getorderFormconfiguration",
      "httpMethod": "get",
      "tag": "Configuration",
      "description": "Get orderForm configuration",
      "parameters": [
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/checkout/pvt/configuration/orderForm",
      "method": "updateorderFormconfiguration",
      "httpMethod": "post",
      "tag": "Configuration",
      "description": "Update orderForm configuration",
      "parameters": [
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "allowManualPrice",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "allowMultipleDeliveries",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "apps",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "decimalDigitsPrecision",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "maskFirstPurchaseData",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "maxNumberOfWhiteLabelSellers",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "minimumQuantityAccumulatedForItems",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "minimumValueAccumulated",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "paymentConfiguration",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "paymentSystemToCheckFirstInstallment",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "recaptchaValidation",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "taxConfiguration",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/api/checkout/pvt/configuration/window-to-change-seller",
      "method": "getWindowToChangeSeller",
      "httpMethod": "get",
      "tag": "Configuration",
      "description": "Get window to change seller",
      "parameters": [
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/checkout/pvt/configuration/window-to-change-seller",
      "method": "updateWindowToChangeSeller",
      "httpMethod": "post",
      "tag": "Configuration",
      "description": "Update window to change seller",
      "parameters": [
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "waitingTime",
          "schema": "integer",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/checkout/changeToAnonymousUser/{orderFormId}",
      "method": "removeallpersonaldata",
      "httpMethod": "get",
      "tag": "Shopping cart",
      "description": "Remove all personal data",
      "parameters": [
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "orderFormId",
          "schema": "string",
          "required": true,
          "description": "ID of the orderForm corresponding to the cart whose user's personal data you want to remove."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://vtex.local",
  "apiDescription": ">ℹ️ Check the new [Checkout onboarding guide](https://developers.vtex.com/vtex-rest-api/docs/checkout-overview). We created this guide to improve the onboarding experience for developers at VTEX. It assembles all documentation on our Developer Portal about the Checkout and is organized by focusing on the developer's journey.\r\n\r\nThe Checkout API allows you to obtain and configure information about the shopping cart and its attachments, personalization of custom fields, orderForm structure, fulfillment data, order management, and identification of the sellers delivery region.\r\n\r\n>ℹ️ Data modification operations (`POST`, `PATCH`, `PUT` or `DELETE` endpoints) shall not be performed in parallel in the Checkout APIs. They need to be enqueued by the client/requester. Otherwise, old values ​​can be overwritten incorrectly or competition errors may occur.\r\n\r\n>⚠️ All endpoints that consult or edit the orderForm can change the authentication depending on the customer context. If you are handling information from a customer with a complete profile on the store, authentication will be required. You can only access or modify the customer data for these profiles with an authenticated request.\r\n\r\n## Shopping cart\r\n\r\nAllows merchants to simulate, configure and customize shopping cart information.\r\n\r\n- [POST - Cart Simulation](https://developers.vtex.com/vtex-rest-api/reference/cartsimulation)\r\n- [GET - Get current or create a new cart](https://developers.vtex.com/vtex-rest-api/reference/createanewcart)\r\n- [GET - Get cart information by ID](https://developers.vtex.com/vtex-rest-api/reference/getcartinformationbyid)\r\n- [POST - Remove all items](https://developers.vtex.com/vtex-rest-api/reference/removeallitems)\r\n- [GET - Remove all personal data](https://developers.vtex.com/vtex-rest-api/reference/removeallpersonaldata)\r\n- [POST - Update cart items](https://developers.vtex.com/vtex-rest-api/reference/itemsupdate)\r\n- [POST - Add cart items](https://developers.vtex.com/vtex-rest-api/reference/items)\r\n- [PUT - Change price](https://developers.vtex.com/vtex-rest-api/reference/pricechange)\r\n- [PATCH - Ignore profile data](https://developers.vtex.com/vtex-rest-api/reference/ignoreprofiledata)\r\n- [GET - Cart installments](https://developers.vtex.com/vtex-rest-api/reference/getcartinstallments)\r\n- [POST - Add coupons to the cart](https://developers.vtex.com/vtex-rest-api/reference/addcoupons)\r\n\r\n\r\n## Cart attachments\r\n\r\nAllows merchants to obtain client profiles and add information to a given shopping cart.\r\n\r\n- [GET - Get client profile by email](https://developers.vtex.com/vtex-rest-api/reference/getclientprofilebyemail)\r\n- [POST - Add client profile](https://developers.vtex.com/vtex-rest-api/reference/addclientprofile)\r\n- [POST - Add shipping address and select delivery option](https://developers.vtex.com/vtex-rest-api/reference/addshippingaddress)\r\n- [POST - Add client preferences](https://developers.vtex.com/vtex-rest-api/reference/addclientpreferences)\r\n- [POST - Add marketing data](https://developers.vtex.com/vtex-rest-api/reference/addmarketingdata)\r\n- [POST - Add payment data](https://developers.vtex.com/vtex-rest-api/reference/addpaymentdata)\r\n- [POST - Add merchant context data](https://developers.vtex.com/vtex-rest-api/reference/addmerchantcontextdata)\r\n\r\n\r\n## Custom data\r\n\r\nAllows merchants to manage custom fields that were created by an app in their account.\r\n\r\n- [PUT - Set multiple custom field values](https://developers.vtex.com/vtex-rest-api/reference/setmultiplecustomfieldvalues)\r\n- [PUT - Set single custom field value](https://developers.vtex.com/vtex-rest-api/reference/setsinglecustomfieldvalue)\r\n- [DELETE - Remove single custom field value](https://developers.vtex.com/vtex-rest-api/reference/removesinglecustomfieldvalue)\r\n\r\n\r\n## Configuration\r\n\r\nAllows merchants to configure orderForm in the account and seller exchange on a given order.\r\n\r\n- [GET - Get orderForm configuration](https://developers.vtex.com/vtex-rest-api/reference/getorderformconfiguration)\r\n- [POST - Update orderForm configuration](https://developers.vtex.com/vtex-rest-api/reference/updateorderformconfiguration)\r\n- [GET - Get window to change seller](https://developers.vtex.com/vtex-rest-api/reference/getwindowtochangeseller)\r\n- [POST - Update window to change seller](https://developers.vtex.com/vtex-rest-api/reference/updatewindowtochangeseller)\r\n- [POST - Clear orderForm messages](https://developers.vtex.com/vtex-rest-api/reference/clearorderformmessages)\r\n\r\n\r\n## Fulfillment\r\n\r\nAllows merchants to obtain pickup points and address information.\r\n\r\n- [GET - List pickup points by location](https://developers.vtex.com/vtex-rest-api/reference/listpickupppointsbylocation)\r\n- [GET - Get address by postal code](https://developers.vtex.com/vtex-rest-api/reference/getaddressbypostalcode)\r\n\r\n\r\n## Order placement\r\n\r\nAllows merchants to place and process orders by creating a new cart or using an existing cart.\r\n\r\n- [POST - Place order from an existing cart](https://developers.vtex.com/vtex-rest-api/reference/placeorderfromexistingorderform)\r\n- [PUT - Place order](https://developers.vtex.com/vtex-rest-api/reference/placeorder)\r\n- [POST - Process order](https://developers.vtex.com/vtex-rest-api/reference/processorder)\r\n\r\n\r\n## Region\r\n\r\nAllows merchants to obtain a list of sellers serving a specific delivery region.\r\n\r\n- [GET - Get sellers by region or address](https://developers.vtex.com/vtex-rest-api/reference/getsellersbyregion)",
  "apiTitle": "Checkout API",
  "endpoints": 29,
  "sdkMethods": 32,
  "schemas": 7,
  "parameters": 173,
  "difficultyScore": 78.75,
  "difficulty": "Easy"
}