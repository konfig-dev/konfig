{
  "providerName": "schooldigger.com",
  "openApiRaw": "https://api.schooldigger.com/swagger/docs/v2.0",
  "securitySchemes": {},
  "homepage": "schooldigger.com",
  "apiVersion": "v2.0",
  "methods": [
    {
      "url": "/v2.0/autocomplete/schools",
      "method": "autocompleteGetSchools",
      "httpMethod": "get",
      "tag": "Autocomplete",
      "description": "Returns a simple and quick list of schools for use in a client-typed autocomplete",
      "parameters": [
        {
          "name": "q",
          "schema": "string",
          "required": false,
          "description": "Search term for autocomplete (e.g. 'Lincol') (required)"
        },
        {
          "name": "qSearchCityStateName",
          "schema": "boolean",
          "required": false,
          "description": "Extend the search term to include city and state (e.g. 'Lincoln el paso' matches Lincoln Middle School in El Paso) (optional)"
        },
        {
          "name": "st",
          "schema": "string",
          "required": false,
          "description": "Two character state (e.g. 'CA') (optional -- leave blank to search entire U.S.)"
        },
        {
          "name": "level",
          "schema": "string",
          "required": false,
          "description": "Search for schools at this level only. Valid values: 'Elementary', 'Middle', 'High', 'Alt', 'Private' (optional - leave blank to search for all schools)"
        },
        {
          "name": "boxLatitudeNw",
          "schema": "number",
          "required": false,
          "description": "Search within a 'box' defined by (BoxLatitudeNW/BoxLongitudeNW) to (BoxLongitudeSE/BoxLatitudeSE) (optional. Pro, Enterprise API levels only.)"
        },
        {
          "name": "boxLongitudeNw",
          "schema": "number",
          "required": false,
          "description": "Search within a 'box' defined by (BoxLatitudeNW/BoxLongitudeNW) to (BoxLongitudeSE/BoxLatitudeSE) (optional. Pro, Enterprise API levels only.)"
        },
        {
          "name": "boxLatitudeSe",
          "schema": "number",
          "required": false,
          "description": "Search within a 'box' defined by (BoxLatitudeNW/BoxLongitudeNW) to (BoxLongitudeSE/BoxLatitudeSE) (optional. Pro, Enterprise API levels only.)"
        },
        {
          "name": "boxLongitudeSe",
          "schema": "number",
          "required": false,
          "description": "Search within a 'box' defined by (BoxLatitudeNW/BoxLongitudeNW) to (BoxLongitudeSE/BoxLatitudeSE) (optional. Pro, Enterprise API levels only.)"
        },
        {
          "name": "returnCount",
          "schema": "integer",
          "required": false,
          "description": "Number of schools to return. Valid values: 1-20. (default: 10)"
        },
        {
          "name": "appId",
          "schema": "string",
          "required": true,
          "description": "Your API app id"
        },
        {
          "name": "appKey",
          "schema": "string",
          "required": true,
          "description": "Your API app key"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2.0/districts",
      "method": "districtsGetAllDistricts2",
      "httpMethod": "get",
      "tag": "Districts",
      "description": "Returns a list of districts",
      "parameters": [
        {
          "name": "st",
          "schema": "string",
          "required": true,
          "description": "Two character state (e.g. 'CA') - required"
        },
        {
          "name": "q",
          "schema": "string",
          "required": false,
          "description": "Search term - note: will match district name or city (optional)"
        },
        {
          "name": "city",
          "schema": "string",
          "required": false,
          "description": "Search for districts in this city (optional)"
        },
        {
          "name": "zip",
          "schema": "string",
          "required": false,
          "description": "Search for districts in this 5-digit zip code (optional)"
        },
        {
          "name": "nearLatitude",
          "schema": "number",
          "required": false,
          "description": "Search for districts within (distanceMiles) of (nearLatitude)/(nearLongitude) (e.g. 44.982560) (optional) (Pro, Enterprise API levels only. Enterprise API level will flag districts that include lat/long in its attendance boundary.)"
        },
        {
          "name": "nearLongitude",
          "schema": "number",
          "required": false,
          "description": "Search for districts within (distanceMiles) of (nearLatitude)/(nearLongitude) (e.g. -124.289185) (optional) (Pro, Enterprise API levels only. Enterprise API level will flag districts that include lat/long in its attendance boundary.)"
        },
        {
          "name": "boundaryAddress",
          "schema": "string",
          "required": false,
          "description": "Full U.S. address: flag returned districts that include this address in its attendance boundary. Example: '123 Main St. AnyTown CA 90001' (optional) (Enterprise API level only)"
        },
        {
          "name": "distanceMiles",
          "schema": "integer",
          "required": false,
          "description": "Search for districts within (distanceMiles) of (nearLatitude)/(nearLongitude) (Default 50 miles) (optional) (Pro, Enterprise API levels only)"
        },
        {
          "name": "isInBoundaryOnly",
          "schema": "boolean",
          "required": false,
          "description": "Return only the districts that include given location (nearLatitude/nearLongitude) or (boundaryAddress) in its attendance boundary (Enterprise API level only)"
        },
        {
          "name": "boxLatitudeNw",
          "schema": "number",
          "required": false,
          "description": "Search for districts within a 'box' defined by (BoxLatitudeNW/BoxLongitudeNW) to (BoxLongitudeSE/BoxLatitudeSE) (optional)"
        },
        {
          "name": "boxLongitudeNw",
          "schema": "number",
          "required": false,
          "description": "Search for districts within a 'box' defined by (BoxLatitudeNW/BoxLongitudeNW) to (BoxLongitudeSE/BoxLatitudeSE) (optional)"
        },
        {
          "name": "boxLatitudeSe",
          "schema": "number",
          "required": false,
          "description": "Search for districts within a 'box' defined by (BoxLatitudeNW/BoxLongitudeNW) to (BoxLongitudeSE/BoxLatitudeSE) (optional)"
        },
        {
          "name": "boxLongitudeSe",
          "schema": "number",
          "required": false,
          "description": "Search for districts within a 'box' defined by (BoxLatitudeNW/BoxLongitudeNW) to (BoxLongitudeSE/BoxLatitudeSE) (optional)"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Page number to retrieve (optional, default: 1)"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of districts to retrieve on a page (50 max) (optional, default: 10)"
        },
        {
          "name": "sortBy",
          "schema": "string",
          "required": false,
          "description": "Sort list. Values are: districtname, distance, rank. For descending order, precede with '-' i.e. -districtname (optional, default: districtname)"
        },
        {
          "name": "includeUnrankedDistrictsInRankSort",
          "schema": "boolean",
          "required": false,
          "description": "If sortBy is 'rank', this boolean determines if districts with no rank are included in the result (optional, default: false)"
        },
        {
          "name": "appId",
          "schema": "string",
          "required": true,
          "description": "Your API app id"
        },
        {
          "name": "appKey",
          "schema": "string",
          "required": true,
          "description": "Your API app key"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2.0/districts/{id}",
      "method": "districtsGetDistrict2",
      "httpMethod": "get",
      "tag": "Districts",
      "description": "Returns a detailed record for one district",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The 7 digit District ID (e.g. 0642150)"
        },
        {
          "name": "appId",
          "schema": "string",
          "required": true,
          "description": "Your API app id"
        },
        {
          "name": "appKey",
          "schema": "string",
          "required": true,
          "description": "Your API app key"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2.0/rankings/districts/{st}",
      "method": "rankingsGetRankDistrict",
      "httpMethod": "get",
      "tag": "Rankings",
      "description": "Returns a SchoolDigger district ranking list",
      "parameters": [
        {
          "name": "st",
          "schema": "string",
          "required": true,
          "description": "Two character state (e.g. 'CA')"
        },
        {
          "name": "year",
          "schema": "integer",
          "required": false,
          "description": "The ranking year (leave blank for most recent year)"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Page number to retrieve (optional, default: 1)"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of districts to retrieve on a page (50 max) (optional, default: 10)"
        },
        {
          "name": "appId",
          "schema": "string",
          "required": true,
          "description": "Your API app id"
        },
        {
          "name": "appKey",
          "schema": "string",
          "required": true,
          "description": "Your API app key"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2.0/rankings/schools/{st}",
      "method": "rankingsGetSchoolRank2",
      "httpMethod": "get",
      "tag": "Rankings",
      "description": "Returns a SchoolDigger school ranking list",
      "parameters": [
        {
          "name": "st",
          "schema": "string",
          "required": true,
          "description": "Two character state (e.g. 'CA')"
        },
        {
          "name": "year",
          "schema": "integer",
          "required": false,
          "description": "The ranking year (leave blank for most recent year)"
        },
        {
          "name": "level",
          "schema": "string",
          "required": false,
          "description": "Level of ranking: 'Elementary', 'Middle', or 'High'"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Page number to retrieve (optional, default: 1)"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of schools to retrieve on a page (50 max) (optional, default: 10)"
        },
        {
          "name": "appId",
          "schema": "string",
          "required": true,
          "description": "Your API app id"
        },
        {
          "name": "appKey",
          "schema": "string",
          "required": true,
          "description": "Your API app key"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2.0/schools",
      "method": "schoolsGetAllSchools20",
      "httpMethod": "get",
      "tag": "Schools",
      "description": "Returns a list of schools",
      "parameters": [
        {
          "name": "st",
          "schema": "string",
          "required": true,
          "description": "Two character state (e.g. 'CA') - required"
        },
        {
          "name": "q",
          "schema": "string",
          "required": false,
          "description": "Search term - note: will match school name or city (optional)"
        },
        {
          "name": "qSearchSchoolNameOnly",
          "schema": "boolean",
          "required": false,
          "description": "For parameter 'q', only search school names instead of school and city (optional)"
        },
        {
          "name": "districtId",
          "schema": "string",
          "required": false,
          "description": "Search for schools within this district (7 digit district id) (optional)"
        },
        {
          "name": "level",
          "schema": "string",
          "required": false,
          "description": "Search for schools at this level. Valid values: 'Elementary', 'Middle', 'High', 'Alt', 'Public', 'Private' (optional). 'Public' returns all Elementary, Middle, High and Alternative schools"
        },
        {
          "name": "city",
          "schema": "string",
          "required": false,
          "description": "Search for schools in this city (optional)"
        },
        {
          "name": "zip",
          "schema": "string",
          "required": false,
          "description": "Search for schools in this 5-digit zip code (optional)"
        },
        {
          "name": "isMagnet",
          "schema": "boolean",
          "required": false,
          "description": "True = return only magnet schools, False = return only non-magnet schools (optional) (Pro, Enterprise API levels only)"
        },
        {
          "name": "isCharter",
          "schema": "boolean",
          "required": false,
          "description": "True = return only charter schools, False = return only non-charter schools (optional) (Pro, Enterprise API levels only)"
        },
        {
          "name": "isVirtual",
          "schema": "boolean",
          "required": false,
          "description": "True = return only virtual schools, False = return only non-virtual schools (optional) (Pro, Enterprise API levels only)"
        },
        {
          "name": "isTitleI",
          "schema": "boolean",
          "required": false,
          "description": "True = return only Title I schools, False = return only non-Title I schools (optional) (Pro, Enterprise API levels only)"
        },
        {
          "name": "isTitleISchoolwide",
          "schema": "boolean",
          "required": false,
          "description": "True = return only Title I school-wide schools, False = return only non-Title I school-wide schools (optional) (Pro, Enterprise API levels only)"
        },
        {
          "name": "nearLatitude",
          "schema": "number",
          "required": false,
          "description": "Search for schools within (distanceMiles) of (nearLatitude)/(nearLongitude) (e.g. 44.982560) (optional) (Pro, Enterprise API levels only.)"
        },
        {
          "name": "nearLongitude",
          "schema": "number",
          "required": false,
          "description": "Search for schools within (distanceMiles) of (nearLatitude)/(nearLongitude) (e.g. -124.289185) (optional) (Pro, Enterprise API levels only.)"
        },
        {
          "name": "nearAddress",
          "schema": "string",
          "required": false,
          "description": "Search for schools within (distanceMiles) of this address. Example: '123 Main St. AnyTown CA 90001' (optional) (Pro, Enterprise API level only) IMPORTANT NOTE: If you have the lat/long of the address, use nearLatitude and nearLongitude instead for much faster response times"
        },
        {
          "name": "distanceMiles",
          "schema": "integer",
          "required": false,
          "description": "Search for schools within (distanceMiles) of (nearLatitude)/(nearLongitude) (Default 5 miles) (optional) (Pro, Enterprise API levels only)"
        },
        {
          "name": "boundaryLatitude",
          "schema": "number",
          "required": false,
          "description": "Search for schools that include this (boundaryLatitude)/(boundaryLongitude) in its attendance boundary (e.g. 44.982560) (optional) (Requires School Boundary API Plan add-on. Calls with this parameter supplied will count toward your monthly call limit.)"
        },
        {
          "name": "boundaryLongitude",
          "schema": "number",
          "required": false,
          "description": "Search for schools that include this (boundaryLatitude)/(boundaryLongitude) in its attendance boundary (e.g. -124.289185) (optional) (Requires School Boundary API Plan add-on. Calls with this parameter supplied will count toward your monthly call limit."
        },
        {
          "name": "boundaryAddress",
          "schema": "string",
          "required": false,
          "description": "Full U.S. address: flag returned schools that include this address in its attendance boundary. Example: '123 Main St. AnyTown CA 90001' (optional) (Requires School Boundary API Plan add-on. Calls with this parameter supplied will count toward your monthly call limit.) IMPORTANT NOTE: If you have the lat/long of the address, use boundaryLatitude and boundaryLongitude instead for much faster response times"
        },
        {
          "name": "isInBoundaryOnly",
          "schema": "boolean",
          "required": false,
          "description": "Return only the schools that include given location (boundaryLatitude/boundaryLongitude) or (boundaryAddress) in its attendance boundary (Requires School Boundary API Plan add-on.)"
        },
        {
          "name": "boxLatitudeNw",
          "schema": "number",
          "required": false,
          "description": "Search for schools within a 'box' defined by (boxLatitudeNW/boxLongitudeNW) to (boxLongitudeSE/boxLatitudeSE) (optional)"
        },
        {
          "name": "boxLongitudeNw",
          "schema": "number",
          "required": false,
          "description": "Search for schools within a 'box' defined by (boxLatitudeNW/boxLongitudeNW) to (boxLongitudeSE/boxLatitudeSE) (optional)"
        },
        {
          "name": "boxLatitudeSe",
          "schema": "number",
          "required": false,
          "description": "Search for schools within a 'box' defined by (boxLatitudeNW/boxLongitudeNW) to (boxLongitudeSE/boxLatitudeSE) (optional)"
        },
        {
          "name": "boxLongitudeSe",
          "schema": "number",
          "required": false,
          "description": "Search for schools within a 'box' defined by (boxLatitudeNW/boxLongitudeNW) to (boxLongitudeSE/boxLatitudeSE) (optional)"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Page number to retrieve (optional, default: 1)"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "required": false,
          "description": "Number of schools to retrieve on a page (50 max) (optional, default: 10)"
        },
        {
          "name": "sortBy",
          "schema": "string",
          "required": false,
          "description": "Sort list. Values are: schoolname, distance, rank. For descending order, precede with '-' i.e. -schoolname (optional, default: schoolname)"
        },
        {
          "name": "includeUnrankedSchoolsInRankSort",
          "schema": "boolean",
          "required": false,
          "description": "If sortBy is 'rank', this boolean determines if schools with no rank are included in the result (optional, default: false)"
        },
        {
          "name": "appId",
          "schema": "string",
          "required": true,
          "description": "Your API app id"
        },
        {
          "name": "appKey",
          "schema": "string",
          "required": true,
          "description": "Your API app key"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/v2.0/schools/{id}",
      "method": "schoolsGetSchool20",
      "httpMethod": "get",
      "tag": "Schools",
      "description": "Returns a detailed record for one school",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "The 12 digit School ID (e.g. 064215006903)"
        },
        {
          "name": "appId",
          "schema": "string",
          "required": true,
          "description": "Your API app id"
        },
        {
          "name": "appKey",
          "schema": "string",
          "required": true,
          "description": "Your API app key"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://api.schooldigger.com",
  "apiDescription": "Get detailed data on over 120,000 schools and 18,500 districts in the U.S.<br />Version 2.0 incorporates the ATTOM School Boundary Level add-on and spending per pupil metrics",
  "apiTitle": "SchoolDigger API V2.0",
  "endpoints": 7,
  "sdkMethods": 7,
  "schemas": 24,
  "parameters": 79,
  "contactEmail": "api@schooldigger.com",
  "difficultyScore": 38.75,
  "difficulty": "Easy"
}