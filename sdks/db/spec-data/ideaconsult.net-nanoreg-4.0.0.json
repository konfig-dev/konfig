{
  "providerName": "ideaconsult.net",
  "openApiRaw": "https://api.ideaconsult.net/management/apis/7d2c3a0e-ddc5-4553-ac3a-0eddc5e5532a/pages/161df366-7bae-410c-9df3-667bae510c7c/content",
  "securitySchemes": {},
  "homepage": "ideaconsult.net",
  "serviceName": "nanoreg",
  "apiVersion": "4.0.0",
  "methods": [
    {
      "url": "/enm/{db}/investigation",
      "method": "getInvestigationResults",
      "httpMethod": "get",
      "tag": "Studies",
      "description": "Details of multiple studies",
      "parameters": [
        {
          "name": "db",
          "schema": "string",
          "required": true,
          "description": "Database ID"
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": "query type"
        },
        {
          "name": "search",
          "schema": "string",
          "required": true,
          "description": "Search parameter, UUID of the investigation or a substance"
        },
        {
          "name": "inchikey",
          "schema": "string",
          "required": false,
          "description": "Search parameter, InChI key(s) of the substance component(s), comma delimited"
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": "Search parameter, chemical structure or substance identifier(s), comma delimited"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Starting page"
        },
        {
          "name": "pagesize",
          "schema": "integer",
          "required": false,
          "description": "Page size"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/enm/{db}/query/compound/{term}/{representation}",
      "method": "searchByIdentifier",
      "httpMethod": "get",
      "tag": "Structures",
      "description": "Exact chemical structure search",
      "parameters": [
        {
          "name": "db",
          "schema": "string",
          "required": true,
          "description": "Database ID"
        },
        {
          "name": "term",
          "schema": "string",
          "required": true,
          "description": "search term type"
        },
        {
          "name": "representation",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "search",
          "schema": "string",
          "required": false,
          "description": "Compound identifier (SMILES, InChI, name, registry identifiers)"
        },
        {
          "name": "b64Search",
          "schema": "string",
          "required": false,
          "description": "Base64 encoded mol file; if included, will be used instead of the 'search' parameter"
        },
        {
          "name": "casesens",
          "schema": "boolean",
          "required": false,
          "description": "Case sensitive search if yes"
        },
        {
          "name": "bundleUri",
          "schema": "string",
          "required": false,
          "description": "Bundle URI"
        },
        {
          "name": "sameas",
          "schema": "string",
          "required": false,
          "description": "Ontology URI to define groups of columns"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Starting page"
        },
        {
          "name": "pagesize",
          "schema": "integer",
          "required": false,
          "description": "Page size"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/enm/{db}/query/similarity",
      "method": "searchBySimilarity",
      "httpMethod": "get",
      "tag": "Structures",
      "description": "Exact similarity search",
      "parameters": [
        {
          "name": "db",
          "schema": "string",
          "required": true,
          "description": "Database ID"
        },
        {
          "name": "search",
          "schema": "string",
          "required": false,
          "description": "Compound identifier (SMILES, InChI, name, registry identifiers)"
        },
        {
          "name": "b64Search",
          "schema": "string",
          "required": false,
          "description": "Base64 encoded mol file; if included, will be used instead of the 'search' parameter"
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": "Defines the expected content of the search parameter"
        },
        {
          "name": "threshold",
          "schema": "number",
          "required": false,
          "description": "Similarity threshold"
        },
        {
          "name": "datasetUri",
          "schema": "string",
          "required": false,
          "description": "Restrict the search within the AMBIT dataset specified with the URI"
        },
        {
          "name": "filterBySubstance",
          "schema": "boolean",
          "required": false,
          "description": "Restrict the search within the set of structures with assigned substances"
        },
        {
          "name": "bundleUri",
          "schema": "string",
          "required": false,
          "description": "If the structure is used in the specified bundle URI, the selection tag will be returned"
        },
        {
          "name": "sameas",
          "schema": "string",
          "required": false,
          "description": "Ontology URI to define groups of columns"
        },
        {
          "name": "mol",
          "schema": "boolean",
          "required": false,
          "description": "Only for application/json; to include mol as JSON field"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Starting page"
        },
        {
          "name": "pagesize",
          "schema": "integer",
          "required": false,
          "description": "Page size"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/enm/{db}/query/smarts",
      "method": "searchBySmarts",
      "httpMethod": "get",
      "tag": "Structures",
      "description": "Substructure search",
      "parameters": [
        {
          "name": "db",
          "schema": "string",
          "required": true,
          "description": "Database ID"
        },
        {
          "name": "search",
          "schema": "string",
          "required": false,
          "description": "Compound identifier (SMILES, InChI, name, registry identifiers)"
        },
        {
          "name": "b64Search",
          "schema": "string",
          "required": false,
          "description": "Base64 encoded mol file; if included, will be used instead of the 'search' parameter"
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": "Defines the expected content of the search parameter"
        },
        {
          "name": "datasetUri",
          "schema": "string",
          "required": false,
          "description": "Restrict the search within the AMBIT dataset specified with the URI"
        },
        {
          "name": "filterBySubstance",
          "schema": "boolean",
          "required": false,
          "description": "Restrict the search within the set of structures with assigned substances"
        },
        {
          "name": "bundleUri",
          "schema": "string",
          "required": false,
          "description": "If the structure is used in the specified bundle URI, the selection tag will be returned"
        },
        {
          "name": "sameas",
          "schema": "string",
          "required": false,
          "description": "Ontology URI to define groups of columns"
        },
        {
          "name": "mol",
          "schema": "boolean",
          "required": false,
          "description": "Only for application/json; to include mol as JSON field"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Starting page"
        },
        {
          "name": "pagesize",
          "schema": "integer",
          "required": false,
          "description": "Page size"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/enm/{db}/query/study",
      "method": "getEndpointSummary",
      "httpMethod": "get",
      "tag": "Studies",
      "description": "Search endpoint summary",
      "parameters": [
        {
          "name": "db",
          "schema": "string",
          "required": true,
          "description": "Database ID"
        },
        {
          "name": "top",
          "schema": "string",
          "required": false,
          "description": "Top endpoint category"
        },
        {
          "name": "category",
          "schema": "string",
          "required": false,
          "description": "Endpoint category (The value in the protocol.category.code field)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/enm/{db}/substance",
      "method": "getSubstances",
      "httpMethod": "get",
      "tag": "Substances",
      "description": "List substances",
      "parameters": [
        {
          "name": "db",
          "schema": "string",
          "required": true,
          "description": "Database ID"
        },
        {
          "name": "search",
          "schema": "string",
          "required": false,
          "description": "Search parameter"
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "compoundUri",
          "schema": "string",
          "required": false,
          "description": "If type=related finds all substances containing this compound; if typ =reference - finds all substances with this compound as reference structure"
        },
        {
          "name": "bundleUri",
          "schema": "string",
          "required": false,
          "description": "Retrieves if selected in this bundle"
        },
        {
          "name": "addDummySubstance",
          "schema": "boolean",
          "required": false,
          "description": "Adds a compound record as substance in JSON; only if type=related"
        },
        {
          "name": "studysummary",
          "schema": "boolean",
          "required": false,
          "description": "If true retrieves study summary for each substance"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Starting page"
        },
        {
          "name": "pagesize",
          "schema": "integer",
          "required": false,
          "description": "Page size"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/enm/{db}/substance/{uuid}",
      "method": "getSubstanceByUuid",
      "httpMethod": "get",
      "tag": "Substances",
      "description": "Get a substance",
      "parameters": [
        {
          "name": "db",
          "schema": "string",
          "required": true,
          "description": "Database ID"
        },
        {
          "name": "uuid",
          "schema": "string",
          "required": true,
          "description": "Substance UUID"
        },
        {
          "name": "propertyUris[]",
          "schema": "string",
          "required": false,
          "description": "Property URIs"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Starting page"
        },
        {
          "name": "pagesize",
          "schema": "integer",
          "required": false,
          "description": "Page size"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/enm/{db}/substance/{uuid}/composition",
      "method": "getSubstanceComposition",
      "httpMethod": "get",
      "tag": "Structures",
      "description": "Substance composition",
      "parameters": [
        {
          "name": "db",
          "schema": "string",
          "required": true,
          "description": "Database ID"
        },
        {
          "name": "uuid",
          "schema": "string",
          "required": true,
          "description": "Substance UUID"
        },
        {
          "name": "all",
          "schema": "boolean",
          "required": false,
          "description": "true (Show all compositions) false (do not show hidden compositions)"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Starting page"
        },
        {
          "name": "pagesize",
          "schema": "integer",
          "required": false,
          "description": "Page size"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/enm/{db}/substance/{uuid}/structures",
      "method": "getSubstanceStructures",
      "httpMethod": "get",
      "tag": "Structures",
      "description": "Get substance composition as a dataset",
      "parameters": [
        {
          "name": "db",
          "schema": "string",
          "required": true,
          "description": "Database ID"
        },
        {
          "name": "uuid",
          "schema": "string",
          "required": true,
          "description": "Substance UUID"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Starting page"
        },
        {
          "name": "pagesize",
          "schema": "integer",
          "required": false,
          "description": "Page size"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/enm/{db}/substance/{uuid}/study",
      "method": "getSubstanceStudy",
      "httpMethod": "get",
      "tag": "Studies",
      "description": "get substance study",
      "parameters": [
        {
          "name": "db",
          "schema": "string",
          "required": true,
          "description": "Database ID"
        },
        {
          "name": "uuid",
          "schema": "string",
          "required": true,
          "description": "Substance UUID"
        },
        {
          "name": "top",
          "schema": "string",
          "required": false,
          "description": "Top endpoint category"
        },
        {
          "name": "category",
          "schema": "string",
          "required": false,
          "description": "Endpoint category (The value in the protocol.category.code field)"
        },
        {
          "name": "propertyUri",
          "schema": "string",
          "required": false,
          "description": "Property URI https://data.enanomapper.net/property/{UUID} , see Property service"
        },
        {
          "name": "property",
          "schema": "string",
          "required": false,
          "description": "Property UUID"
        },
        {
          "name": "investigationUuid",
          "schema": "string",
          "required": false,
          "description": "Investigation UUID, a code to link different studies"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Starting page"
        },
        {
          "name": "pagesize",
          "schema": "integer",
          "required": false,
          "description": "Page size"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/enm/{db}/substance/{uuid}/studySummary",
      "method": "getSubstanceStudySummary",
      "httpMethod": "get",
      "tag": "Studies",
      "description": "Get study summary for the substance",
      "parameters": [
        {
          "name": "db",
          "schema": "string",
          "required": true,
          "description": "Database ID"
        },
        {
          "name": "uuid",
          "schema": "string",
          "required": true,
          "description": "Substance UUID"
        },
        {
          "name": "top",
          "schema": "string",
          "required": false,
          "description": "Top endpoint category"
        },
        {
          "name": "category",
          "schema": "string",
          "required": false,
          "description": "Endpoint category (The value in the protocol.category.code field)"
        },
        {
          "name": "propertyUri",
          "schema": "string",
          "required": false,
          "description": "Property URI https://data.enanomapper.net/property/{UUID} , see Property service"
        },
        {
          "name": "property",
          "schema": "string",
          "required": false,
          "description": "Property UUID, see Property service"
        },
        {
          "name": "result",
          "schema": "boolean",
          "required": false,
          "description": "If true will group by topcategory,endpointcategory,interpretation result"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Starting page"
        },
        {
          "name": "pagesize",
          "schema": "integer",
          "required": false,
          "description": "Page size"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/select",
      "method": "solrqueryGet",
      "httpMethod": "get",
      "tag": "Search",
      "description": "Apache Solr powered search",
      "parameters": [
        {
          "name": "q",
          "schema": "string",
          "required": false,
          "description": "The query"
        },
        {
          "name": "start",
          "schema": "integer",
          "required": false,
          "description": "Starting page"
        },
        {
          "name": "rows",
          "schema": "integer",
          "required": false,
          "description": "Page size"
        },
        {
          "name": "wt",
          "schema": "string",
          "required": false,
          "description": "Response format"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/select",
      "method": "solrqueryPost",
      "httpMethod": "post",
      "tag": "Search",
      "description": "Apache Solr powered search",
      "parameters": [
        {
          "name": "wt",
          "schema": "string",
          "required": false,
          "description": "Response format"
        },
        {
          "name": "facet",
          "schema": "object",
          "description": ""
        },
        {
          "name": "params",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://api.ideaconsult.net/nanoreg1",
  "apiDescription": "AMBIT REST web services [eNanoMapper profile] with free text & faceted search",
  "apiTitle": "eNanoMapper database",
  "endpoints": 12,
  "sdkMethods": 15,
  "schemas": 9,
  "parameters": 91,
  "contactUrl": "https://phabricator.ideaconsult.net",
  "contactEmail": "support@ideaconsult.net",
  "difficultyScore": 42.25,
  "difficulty": "Easy"
}