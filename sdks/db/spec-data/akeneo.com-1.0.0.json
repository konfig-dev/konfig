{
  "providerName": "akeneo.com",
  "openApiRaw": "https://raw.githubusercontent.com/akeneo/pim-api-docs/master/content/swagger/akeneo-web-api.json",
  "securitySchemes": {},
  "homepage": "akeneo.com",
  "apiVersion": "1.0.0",
  "methods": [
    {
      "url": "/api/oauth/v1/token",
      "method": "postToken",
      "httpMethod": "post",
      "tag": "Authentication",
      "description": "Get authentication token",
      "parameters": [
        {
          "name": "Content-type",
          "schema": "string",
          "required": true,
          "description": "Equal to 'application/json' or 'application/x-www-form-urlencoded', no other value allowed"
        },
        {
          "name": "Authorization",
          "schema": "string",
          "required": true,
          "description": "Equal to 'Basic xx', where 'xx' is the base 64 encoding of the client id and secret. Find out how to generate them in the <a href=\"/documentation/authentication.html#client-idsecret-generation\">Client ID/secret generation</a> section."
        },
        {
          "name": "grant_type",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "username",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1",
      "method": "getEndpoints",
      "httpMethod": "get",
      "tag": "Overview",
      "description": "Get list of all endpoints",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/asset-categories",
      "method": "getAssetCategories",
      "httpMethod": "get",
      "tag": "PAM asset category",
      "description": "Get list of PAM asset categories",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section"
        },
        {
          "name": "with_count",
          "schema": "boolean",
          "required": false,
          "description": "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/asset-categories",
      "method": "patchAssetCategories",
      "httpMethod": "patch",
      "tag": "PAM asset category",
      "description": "Update/create several PAM asset categories",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "labels",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "parent",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "413",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/asset-categories",
      "method": "postAssetCategories",
      "httpMethod": "post",
      "tag": "PAM asset category",
      "description": "Create a new PAM asset category",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "labels",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "parent",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/asset-categories/{code}",
      "method": "getAssetCategoriesCode",
      "httpMethod": "get",
      "tag": "PAM asset category",
      "description": "Get a PAM asset category",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/asset-categories/{code}",
      "method": "patchAssetCategoriesCode",
      "httpMethod": "patch",
      "tag": "PAM asset category",
      "description": "Update/create a PAM asset category",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "labels",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "parent",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/asset-families",
      "method": "getAssetFamilies",
      "httpMethod": "get",
      "tag": "Asset family",
      "description": "Get list of asset families",
      "parameters": [
        {
          "name": "search_after",
          "schema": "string",
          "required": false,
          "description": "Cursor when using the `search_after` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\">Pagination</a> section"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/asset-families/{asset_family_code}/assets",
      "method": "getAssets",
      "httpMethod": "get",
      "tag": "Asset",
      "description": "Get the list of the assets of a given asset family",
      "parameters": [
        {
          "name": "search",
          "schema": "string",
          "required": false,
          "description": "Filter assets, for more details see the <a href=\"/documentation/filter.html#filter-assets\">Asset filters</a> section"
        },
        {
          "name": "channel",
          "schema": "string",
          "required": false,
          "description": "Filter asset values to return scopable asset attributes for the given channel as well as the non localizable/non scopable asset attributes, for more details see the <a href=\"/documentation/filter.html#asset-values-by-channel\">Filter asset values by channel</a> section"
        },
        {
          "name": "locales",
          "schema": "string",
          "required": false,
          "description": "Filter asset values to return localizable attributes for the given locales as well as the non localizable/non scopable asset attributes, for more details see the <a href=\"/documentation/filter.html#asset-values-by-locale\">Filter asset values by locale</a> section"
        },
        {
          "name": "asset_family_code",
          "schema": "string",
          "required": true,
          "description": "Code of the asset family"
        },
        {
          "name": "search_after",
          "schema": "string",
          "required": false,
          "description": "Cursor when using the `search_after` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\">Pagination</a> section"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/asset-families/{asset_family_code}/assets",
      "method": "patchAssets",
      "httpMethod": "patch",
      "tag": "Asset",
      "description": "Update/create several assets",
      "parameters": [
        {
          "name": "asset_family_code",
          "schema": "string",
          "required": true,
          "description": "Code of the asset family"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "413",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/asset-families/{asset_family_code}/assets/{code}",
      "method": "deleteAssetsCode",
      "httpMethod": "delete",
      "tag": "Asset",
      "description": "Delete an asset",
      "parameters": [
        {
          "name": "asset_family_code",
          "schema": "string",
          "required": true,
          "description": "Code of the asset family"
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/asset-families/{asset_family_code}/assets/{code}",
      "method": "getAssetsCode",
      "httpMethod": "get",
      "tag": "Asset",
      "description": "Get an asset of a given asset family",
      "parameters": [
        {
          "name": "asset_family_code",
          "schema": "string",
          "required": true,
          "description": "Code of the asset family"
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/asset-families/{asset_family_code}/assets/{code}",
      "method": "patchAssetCode",
      "httpMethod": "patch",
      "tag": "Asset",
      "description": "Update/create an asset",
      "parameters": [
        {
          "name": "asset_family_code",
          "schema": "string",
          "required": true,
          "description": "Code of the asset family"
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "created",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "updated",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "values",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/asset-families/{asset_family_code}/attributes",
      "method": "getAssetFamiliesCodeAttributes",
      "httpMethod": "get",
      "tag": "Asset attribute",
      "description": "Get the list of attributes of a given asset family",
      "parameters": [
        {
          "name": "asset_family_code",
          "schema": "string",
          "required": true,
          "description": "Code of the asset family"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/asset-families/{asset_family_code}/attributes/{attribute_code}/options",
      "method": "getAssetFamilyAttributesAttributeCodeOptions",
      "httpMethod": "get",
      "tag": "Asset attribute option",
      "description": "Get a list of attribute options of a given attribute for a given asset family",
      "parameters": [
        {
          "name": "asset_family_code",
          "schema": "string",
          "required": true,
          "description": "Code of the asset family"
        },
        {
          "name": "attribute_code",
          "schema": "string",
          "required": true,
          "description": "Code of the attribute"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/asset-families/{asset_family_code}/attributes/{attribute_code}/options/{code}",
      "method": "getAssetAttributesAttributeCodeOptionsCode",
      "httpMethod": "get",
      "tag": "Asset attribute option",
      "description": "Get an attribute option for a given attribute of a given asset family",
      "parameters": [
        {
          "name": "asset_family_code",
          "schema": "string",
          "required": true,
          "description": "Code of the asset family"
        },
        {
          "name": "attribute_code",
          "schema": "string",
          "required": true,
          "description": "Code of the attribute"
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/asset-families/{asset_family_code}/attributes/{attribute_code}/options/{code}",
      "method": "patchAssetAttributesAttributeCodeOptionsCode",
      "httpMethod": "patch",
      "tag": "Asset attribute option",
      "description": "Update/create an asset attribute option for a given asset family",
      "parameters": [
        {
          "name": "asset_family_code",
          "schema": "string",
          "required": true,
          "description": "Code of the asset family"
        },
        {
          "name": "attribute_code",
          "schema": "string",
          "required": true,
          "description": "Code of the attribute"
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "labels",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/asset-families/{asset_family_code}/attributes/{code}",
      "method": "getAssetFamilyAttributesCode",
      "httpMethod": "get",
      "tag": "Asset attribute",
      "description": "Get an attribute of a given asset family",
      "parameters": [
        {
          "name": "asset_family_code",
          "schema": "string",
          "required": true,
          "description": "Code of the asset family"
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/asset-families/{asset_family_code}/attributes/{code}",
      "method": "patchAssetFamilyAttributesCode",
      "httpMethod": "patch",
      "tag": "Asset attribute",
      "description": "Update/create an attribute of a given asset family",
      "parameters": [
        {
          "name": "asset_family_code",
          "schema": "string",
          "required": true,
          "description": "Code of the asset family"
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        },
        {
          "name": "allowed_extensions",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "decimals_allowed",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "is_read_only",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "is_required_for_completeness",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "is_rich_text_editor",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "is_textarea",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "labels",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "max_characters",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "max_file_size",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "max_value",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "media_type",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "min_value",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "prefix",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "suffix",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "validation_regexp",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "validation_rule",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "value_per_channel",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "value_per_locale",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/asset-families/{code}",
      "method": "getAssetFamilyCode",
      "httpMethod": "get",
      "tag": "Asset family",
      "description": "Get an asset family",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/asset-families/{code}",
      "method": "patchAssetFamilyCode",
      "httpMethod": "patch",
      "tag": "Asset family",
      "description": "Update/create an asset family",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        },
        {
          "name": "attribute_as_main_media",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "labels",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "naming_convention",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "product_link_rules",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "transformations",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/asset-media-files",
      "method": "postAssetMediaFiles",
      "httpMethod": "post",
      "tag": "Asset media file",
      "description": "Create a new media file for an asset",
      "parameters": [
        {
          "name": "Content-type",
          "schema": "string",
          "required": true,
          "description": "Equal to 'multipart/form-data', no other value allowed"
        },
        {
          "name": "file",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/asset-media-files/{code}",
      "method": "getAssetMediaFilesCode",
      "httpMethod": "get",
      "tag": "Asset media file",
      "description": "Download the media file associated to an asset",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/asset-tags",
      "method": "getAssetTags",
      "httpMethod": "get",
      "tag": "PAM asset tag",
      "description": "Get list of PAM asset tags",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section"
        },
        {
          "name": "with_count",
          "schema": "boolean",
          "required": false,
          "description": "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/asset-tags/{code}",
      "method": "getAssetTagsCode",
      "httpMethod": "get",
      "tag": "PAM asset tag",
      "description": "Get a PAM asset tag",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/asset-tags/{code}",
      "method": "patchAssetTagsCode",
      "httpMethod": "patch",
      "tag": "PAM asset tag",
      "description": "Update/create a PAM asset tag",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/assets",
      "method": "getPamAssets",
      "httpMethod": "get",
      "tag": "PAM asset",
      "description": "Get list of PAM assets",
      "parameters": [
        {
          "name": "pagination_type",
          "schema": "string",
          "required": false,
          "description": "Pagination method type, see <a href=\"/documentation/pagination.html\">Pagination</a> section"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section"
        },
        {
          "name": "search_after",
          "schema": "string",
          "required": false,
          "description": "Cursor when using the `search_after` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\">Pagination</a> section"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section"
        },
        {
          "name": "with_count",
          "schema": "boolean",
          "required": false,
          "description": "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/assets",
      "method": "patchPamAssets",
      "httpMethod": "patch",
      "tag": "PAM asset",
      "description": "Update/create several PAM assets",
      "parameters": [
        {
          "name": "categories",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "end_of_use",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "localizable",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "reference_files",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "tags",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "variation_files",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "413",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/assets",
      "method": "postPamAssets",
      "httpMethod": "post",
      "tag": "PAM asset",
      "description": "Create a new PAM asset",
      "parameters": [
        {
          "name": "categories",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "end_of_use",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "localizable",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "reference_files",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "tags",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "variation_files",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/assets/{asset_code}/reference-files/{locale_code}",
      "method": "getReferenceFilesLocaleCode",
      "httpMethod": "get",
      "tag": "PAM asset reference file",
      "description": "Get a reference file",
      "parameters": [
        {
          "name": "asset_code",
          "schema": "string",
          "required": true,
          "description": "Code of the asset"
        },
        {
          "name": "locale_code",
          "schema": "string",
          "required": true,
          "description": "Code of the locale if the asset is localizable or equal to `no-locale` if the asset is not localizable"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/assets/{asset_code}/reference-files/{locale_code}",
      "method": "postReferenceFilesLocaleCode",
      "httpMethod": "post",
      "tag": "PAM asset reference file",
      "description": "Upload a new reference file",
      "parameters": [
        {
          "name": "asset_code",
          "schema": "string",
          "required": true,
          "description": "Code of the asset"
        },
        {
          "name": "locale_code",
          "schema": "string",
          "required": true,
          "description": "Code of the locale if the asset is localizable or equal to `no-locale` if the asset is not localizable"
        },
        {
          "name": "Content-type",
          "schema": "string",
          "required": true,
          "description": "Equal to 'multipart/form-data', no other value allowed"
        },
        {
          "name": "file",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/assets/{asset_code}/reference-files/{locale_code}/download",
      "method": "getReferenceFilesChannelCodeLocaleCodeDownload",
      "httpMethod": "get",
      "tag": "PAM asset reference file",
      "description": "Download a reference file",
      "parameters": [
        {
          "name": "asset_code",
          "schema": "string",
          "required": true,
          "description": "Code of the asset"
        },
        {
          "name": "locale_code",
          "schema": "string",
          "required": true,
          "description": "Code of the locale if the asset is localizable or equal to `no-locale` if the asset is not localizable"
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/assets/{asset_code}/variation-files/{channel_code}/{locale_code}",
      "method": "getVariationFilesChannelCodeLocaleCode",
      "httpMethod": "get",
      "tag": "PAM asset variation file",
      "description": "Get a variation file",
      "parameters": [
        {
          "name": "asset_code",
          "schema": "string",
          "required": true,
          "description": "Code of the asset"
        },
        {
          "name": "channel_code",
          "schema": "string",
          "required": true,
          "description": "Code of the channel"
        },
        {
          "name": "locale_code",
          "schema": "string",
          "required": true,
          "description": "Code of the locale if the asset is localizable or equal to `no-locale` if the asset is not localizable"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/assets/{asset_code}/variation-files/{channel_code}/{locale_code}",
      "method": "postVariationFilesChannelCodeLocaleCode",
      "httpMethod": "post",
      "tag": "PAM asset variation file",
      "description": "Upload a new variation file",
      "parameters": [
        {
          "name": "asset_code",
          "schema": "string",
          "required": true,
          "description": "Code of the asset"
        },
        {
          "name": "channel_code",
          "schema": "string",
          "required": true,
          "description": "Code of the channel"
        },
        {
          "name": "locale_code",
          "schema": "string",
          "required": true,
          "description": "Code of the locale if the asset is localizable or equal to `no-locale` if the asset is not localizable"
        },
        {
          "name": "Content-type",
          "schema": "string",
          "required": true,
          "description": "Equal to 'multipart/form-data', no other value allowed"
        },
        {
          "name": "file",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/assets/{asset_code}/variation-files/{channel_code}/{locale_code}/download",
      "method": "getVariationFilesChannelCodeLocaleCodeDownload",
      "httpMethod": "get",
      "tag": "PAM asset variation file",
      "description": "Download a variation file",
      "parameters": [
        {
          "name": "asset_code",
          "schema": "string",
          "required": true,
          "description": "Code of the asset"
        },
        {
          "name": "channel_code",
          "schema": "string",
          "required": true,
          "description": "Code of the channel"
        },
        {
          "name": "locale_code",
          "schema": "string",
          "required": true,
          "description": "Code of the locale if the asset is localizable or equal to `no-locale` if the asset is not localizable"
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/assets/{code}",
      "method": "getPamAssetsCode",
      "httpMethod": "get",
      "tag": "PAM asset",
      "description": "Get a PAM asset",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/assets/{code}",
      "method": "patchPamAssetsCode",
      "httpMethod": "patch",
      "tag": "PAM asset",
      "description": "Update/create a PAM asset",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        },
        {
          "name": "categories",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "end_of_use",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "localizable",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "reference_files",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "tags",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "variation_files",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/association-types",
      "method": "associationTypesGetList",
      "httpMethod": "get",
      "tag": "Association type",
      "description": "Get a list of association types",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section"
        },
        {
          "name": "with_count",
          "schema": "boolean",
          "required": false,
          "description": "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/association-types",
      "method": "severalAssociationTypesPatch",
      "httpMethod": "patch",
      "tag": "Association type",
      "description": "Update/create several association types",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "is_quantified",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "is_two_way",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "labels",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "413",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/association-types",
      "method": "associationTypesPost",
      "httpMethod": "post",
      "tag": "Association type",
      "description": "Create a new association type",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "is_quantified",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "is_two_way",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "labels",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/association-types/{code}",
      "method": "associationTypesGet",
      "httpMethod": "get",
      "tag": "Association type",
      "description": "Get an association type",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/association-types/{code}",
      "method": "associationTypesPatch",
      "httpMethod": "patch",
      "tag": "Association type",
      "description": "Update/create an association type",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "is_quantified",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "is_two_way",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "labels",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/attribute-groups",
      "method": "attributeGroupsGetList",
      "httpMethod": "get",
      "tag": "Attribute group",
      "description": "Get list of attribute groups",
      "parameters": [
        {
          "name": "search",
          "schema": "string",
          "required": false,
          "description": "Filter attribute groups, for more details see the <a href=\"/documentation/filter.html#filter-attribute-groups\">Filters</a> section."
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section"
        },
        {
          "name": "with_count",
          "schema": "boolean",
          "required": false,
          "description": "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/attribute-groups",
      "method": "severalAttributeGroupsPatch",
      "httpMethod": "patch",
      "tag": "Attribute group",
      "description": "Update/create several attribute groups",
      "parameters": [
        {
          "name": "attributes",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "labels",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "sort_order",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "413",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/attribute-groups",
      "method": "attributeGroupsPost",
      "httpMethod": "post",
      "tag": "Attribute group",
      "description": "Create a new attribute group",
      "parameters": [
        {
          "name": "attributes",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "labels",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "sort_order",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/attribute-groups/{code}",
      "method": "attributeGroupsGet",
      "httpMethod": "get",
      "tag": "Attribute group",
      "description": "Get an attribute group",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/attribute-groups/{code}",
      "method": "attributeGroupsPatch",
      "httpMethod": "patch",
      "tag": "Attribute group",
      "description": "Update/create an attribute group",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        },
        {
          "name": "attributes",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "labels",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "sort_order",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/attributes",
      "method": "getAttributes",
      "httpMethod": "get",
      "tag": "Attribute",
      "description": "Get list of attributes",
      "parameters": [
        {
          "name": "search",
          "schema": "string",
          "required": false,
          "description": "Filter attributes, for more details see the <a href=\"/documentation/filter.html#filter-attributes\">Filters</a> section."
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section"
        },
        {
          "name": "with_count",
          "schema": "boolean",
          "required": false,
          "description": "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way"
        },
        {
          "name": "with_table_select_options",
          "schema": "boolean",
          "required": false,
          "description": "Return the options of 'select' column types (of a table attribute) in the response. (Only available since the 7.0 version)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/attributes",
      "method": "patchAttributes",
      "httpMethod": "patch",
      "tag": "Attribute",
      "description": "Update/create several attributes",
      "parameters": [
        {
          "name": "allowed_extensions",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "available_locales",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "date_max",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "date_min",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "decimals_allowed",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "default_metric_unit",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "default_value",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "group",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "group_labels",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "labels",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "localizable",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "max_characters",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "max_file_size",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "metric_family",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "negative_allowed",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "number_max",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "number_min",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "reference_data_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "scopable",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "sort_order",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "table_configuration",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "unique",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "useable_as_grid_filter",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "validation_regexp",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "validation_rule",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "wysiwyg_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "413",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/attributes",
      "method": "postAttributes",
      "httpMethod": "post",
      "tag": "Attribute",
      "description": "Create a new attribute",
      "parameters": [
        {
          "name": "allowed_extensions",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "available_locales",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "date_max",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "date_min",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "decimals_allowed",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "default_metric_unit",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "default_value",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "group",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "group_labels",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "labels",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "localizable",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "max_characters",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "max_file_size",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "metric_family",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "negative_allowed",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "number_max",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "number_min",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "reference_data_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "scopable",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "sort_order",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "table_configuration",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "unique",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "useable_as_grid_filter",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "validation_regexp",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "validation_rule",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "wysiwyg_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/attributes/{attribute_code}/options",
      "method": "getAttributesAttributeCodeOptions",
      "httpMethod": "get",
      "tag": "Attribute option",
      "description": "Get list of attribute options",
      "parameters": [
        {
          "name": "attribute_code",
          "schema": "string",
          "required": true,
          "description": "Code of the attribute"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section"
        },
        {
          "name": "with_count",
          "schema": "boolean",
          "required": false,
          "description": "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/attributes/{attribute_code}/options",
      "method": "patchAttributesAttributeCodeOptions",
      "httpMethod": "patch",
      "tag": "Attribute option",
      "description": "Update/create several attribute options",
      "parameters": [
        {
          "name": "attribute_code",
          "schema": "string",
          "required": true,
          "description": "Code of the attribute"
        },
        {
          "name": "attribute",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "labels",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "sort_order",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "413",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/attributes/{attribute_code}/options",
      "method": "postAttributesAttributeCodeOptions",
      "httpMethod": "post",
      "tag": "Attribute option",
      "description": "Create a new attribute option",
      "parameters": [
        {
          "name": "attribute_code",
          "schema": "string",
          "required": true,
          "description": "Code of the attribute"
        },
        {
          "name": "attribute",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "labels",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "sort_order",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/attributes/{attribute_code}/options/{code}",
      "method": "getAttributesAttributeCodeOptionsCode",
      "httpMethod": "get",
      "tag": "Attribute option",
      "description": "Get an attribute option",
      "parameters": [
        {
          "name": "attribute_code",
          "schema": "string",
          "required": true,
          "description": "Code of the attribute"
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/attributes/{attribute_code}/options/{code}",
      "method": "patchAttributesAttributeCodeOptionsCode",
      "httpMethod": "patch",
      "tag": "Attribute option",
      "description": "Update/create an attribute option",
      "parameters": [
        {
          "name": "attribute_code",
          "schema": "string",
          "required": true,
          "description": "Code of the attribute"
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        },
        {
          "name": "attribute",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "labels",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "sort_order",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/attributes/{code}",
      "method": "getAttributesCode",
      "httpMethod": "get",
      "tag": "Attribute",
      "description": "Get an attribute",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        },
        {
          "name": "with_table_select_options",
          "schema": "boolean",
          "required": false,
          "description": "Return the options of 'select' column types (of a table attribute) in the response. (Only available since the 7.0 version)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/attributes/{code}",
      "method": "patchAttributesCode",
      "httpMethod": "patch",
      "tag": "Attribute",
      "description": "Update/create an attribute",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        },
        {
          "name": "allowed_extensions",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "available_locales",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "date_max",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "date_min",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "decimals_allowed",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "default_metric_unit",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "default_value",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "group",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "group_labels",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "labels",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "localizable",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "max_characters",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "max_file_size",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "metric_family",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "negative_allowed",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "number_max",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "number_min",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "reference_data_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "scopable",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "sort_order",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "table_configuration",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "unique",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "useable_as_grid_filter",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "validation_regexp",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "validation_rule",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "wysiwyg_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/catalogs",
      "method": "getAppCatalogs",
      "httpMethod": "get",
      "tag": "Catalogs",
      "description": "Get the list of owned catalogs",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/catalogs",
      "method": "postAppCatalog",
      "httpMethod": "post",
      "tag": "Catalogs",
      "description": "Create a new catalog",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/catalogs/{id}",
      "method": "deleteAppCatalog",
      "httpMethod": "delete",
      "tag": "Catalogs",
      "description": "Delete a catalog",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Catalog ID"
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/catalogs/{id}",
      "method": "getAppCatalog",
      "httpMethod": "get",
      "tag": "Catalogs",
      "description": "Get a catalog",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Catalog ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/catalogs/{id}",
      "method": "patchAppCatalog",
      "httpMethod": "patch",
      "tag": "Catalogs",
      "description": "Update a catalog",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Catalog ID"
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/catalogs/{id}/mapped-products",
      "method": "getAppCatalogMappedProducts",
      "httpMethod": "get",
      "tag": "Catalog products",
      "description": "Get the list of mapped products related to a catalog",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Catalog ID"
        },
        {
          "name": "search_after",
          "schema": "string",
          "required": false,
          "description": "Cursor when using the `search_after` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\">Pagination</a> section"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section"
        },
        {
          "name": "updated_before",
          "schema": "string",
          "required": false,
          "description": "Filter products that have been updated BEFORE the provided date (Only available on Catalogs endpoints)"
        },
        {
          "name": "updated_after",
          "schema": "string",
          "required": false,
          "description": "Filter products that have been updated AFTER the provided date (Only available on Catalogs endpoints)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/catalogs/{id}/mapping-schemas/product",
      "method": "deleteAppCatalogsMappingSchemaProduct",
      "httpMethod": "delete",
      "tag": "Mapping schema for products",
      "description": "Delete the product mapping schema related to a catalog",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Catalog ID"
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/catalogs/{id}/mapping-schemas/product",
      "method": "getAppCatalogsMappingSchemaProduct",
      "httpMethod": "get",
      "tag": "Mapping schema for products",
      "description": "Get the product mapping schema related to a catalog",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Catalog ID"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/catalogs/{id}/mapping-schemas/product",
      "method": "putAppCatalogsMappingSchemaProduct",
      "httpMethod": "put",
      "tag": "Mapping schema for products",
      "description": "Create or update the product mapping schema related to a catalog",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Catalog ID"
        },
        {
          "name": "$comment",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "$id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "$schema",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "properties",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/catalogs/{id}/product-uuids",
      "method": "getAppCatalogProductUuids",
      "httpMethod": "get",
      "tag": "Catalog products",
      "description": "Get the list of product uuids",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Id of the catalog"
        },
        {
          "name": "search_after",
          "schema": "string",
          "required": false,
          "description": "Cursor when using the `search_after` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\">Pagination</a> section"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section"
        },
        {
          "name": "updated_before",
          "schema": "string",
          "required": false,
          "description": "Filter products that have been updated BEFORE the provided date (Only available on Catalogs endpoints)"
        },
        {
          "name": "updated_after",
          "schema": "string",
          "required": false,
          "description": "Filter products that have been updated AFTER the provided date (Only available on Catalogs endpoints)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/catalogs/{id}/products",
      "method": "getAppCatalogProducts",
      "httpMethod": "get",
      "tag": "Catalog products",
      "description": "Get the list of products related to a catalog",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Catalog ID"
        },
        {
          "name": "search_after",
          "schema": "string",
          "required": false,
          "description": "Cursor when using the `search_after` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\">Pagination</a> section"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section"
        },
        {
          "name": "updated_before",
          "schema": "string",
          "required": false,
          "description": "Filter products that have been updated BEFORE the provided date (Only available on Catalogs endpoints)"
        },
        {
          "name": "updated_after",
          "schema": "string",
          "required": false,
          "description": "Filter products that have been updated AFTER the provided date (Only available on Catalogs endpoints)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/catalogs/{id}/products/{uuid}",
      "method": "getAppCatalogProductsUuid",
      "httpMethod": "get",
      "tag": "Catalog products",
      "description": "Get a product related to a catalog",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": "Catalog ID"
        },
        {
          "name": "uuid",
          "schema": "string",
          "required": true,
          "description": "Product UUID"
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/categories",
      "method": "getCategories",
      "httpMethod": "get",
      "tag": "Category",
      "description": "Get list of categories",
      "parameters": [
        {
          "name": "search",
          "schema": "string",
          "required": false,
          "description": "Filter categories, for more details see the <a href=\"/documentation/filter.html#filter-categories\">Filters</a> section."
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section"
        },
        {
          "name": "with_count",
          "schema": "boolean",
          "required": false,
          "description": "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way"
        },
        {
          "name": "with_position",
          "schema": "boolean",
          "required": false,
          "description": "Return information about category position into its category tree (only available since the 7.0 version)"
        },
        {
          "name": "with_enriched_attributes",
          "schema": "boolean",
          "required": false,
          "description": "Return attribute values of the category (only available on SaaS platforms)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/categories",
      "method": "patchCategories",
      "httpMethod": "patch",
      "tag": "Category",
      "description": "Update/create several categories",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "labels",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "parent",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "position",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "updated",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "values",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "413",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/categories",
      "method": "postCategories",
      "httpMethod": "post",
      "tag": "Category",
      "description": "Create a new category",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "labels",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "parent",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "position",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "updated",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "values",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/categories/{code}",
      "method": "getCategoriesCode",
      "httpMethod": "get",
      "tag": "Category",
      "description": "Get a category",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        },
        {
          "name": "with_position",
          "schema": "boolean",
          "required": false,
          "description": "Return information about category position into its category tree (only available since the 7.0 version)"
        },
        {
          "name": "with_enriched_attributes",
          "schema": "boolean",
          "required": false,
          "description": "Return attribute values of the category (only available on SaaS platforms)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/categories/{code}",
      "method": "patchCategoriesCode",
      "httpMethod": "patch",
      "tag": "Category",
      "description": "Update/create a category",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "labels",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "parent",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "position",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "updated",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "values",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/category-media-files/{code}/download",
      "method": "getCategoryMediaFilesCodeDownload",
      "httpMethod": "get",
      "tag": "Category",
      "description": "Download a category media file",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/channels",
      "method": "getChannels",
      "httpMethod": "get",
      "tag": "Channel",
      "description": "Get a list of channels",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section"
        },
        {
          "name": "with_count",
          "schema": "boolean",
          "required": false,
          "description": "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/channels",
      "method": "severalChannelsPatch",
      "httpMethod": "patch",
      "tag": "Channel",
      "description": "Update/create several channels",
      "parameters": [
        {
          "name": "category_tree",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "conversion_units",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "currencies",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "labels",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "locales",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "413",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/channels",
      "method": "channelsPost",
      "httpMethod": "post",
      "tag": "Channel",
      "description": "Create a new channel",
      "parameters": [
        {
          "name": "category_tree",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "conversion_units",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "currencies",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "labels",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "locales",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/channels/{code}",
      "method": "getChannelsCode",
      "httpMethod": "get",
      "tag": "Channel",
      "description": "Get a channel",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/channels/{code}",
      "method": "channelsPatch",
      "httpMethod": "patch",
      "tag": "Channel",
      "description": "Update/create a channel",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        },
        {
          "name": "category_tree",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "conversion_units",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "currencies",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "labels",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "locales",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/currencies",
      "method": "currenciesGetList",
      "httpMethod": "get",
      "tag": "Currency",
      "description": "Get a list of currencies",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section"
        },
        {
          "name": "with_count",
          "schema": "boolean",
          "required": false,
          "description": "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/currencies/{code}",
      "method": "currenciesGet",
      "httpMethod": "get",
      "tag": "Currency",
      "description": "Get a currency",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/families",
      "method": "getFamilies",
      "httpMethod": "get",
      "tag": "Family",
      "description": "Get list of families",
      "parameters": [
        {
          "name": "search",
          "schema": "string",
          "required": false,
          "description": "Filter families, for more details see the <a href=\"/documentation/filter.html#filter-families\">Filters</a> section."
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section"
        },
        {
          "name": "with_count",
          "schema": "boolean",
          "required": false,
          "description": "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/families",
      "method": "patchFamilies",
      "httpMethod": "patch",
      "tag": "Family",
      "description": "Update/create several families",
      "parameters": [
        {
          "name": "attribute_as_image",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "attribute_as_label",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "attribute_requirements",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "attributes",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "labels",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "413",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/families",
      "method": "postFamilies",
      "httpMethod": "post",
      "tag": "Family",
      "description": "Create a new family",
      "parameters": [
        {
          "name": "attribute_as_image",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "attribute_as_label",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "attribute_requirements",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "attributes",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "labels",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/families/{code}",
      "method": "getFamiliesCode",
      "httpMethod": "get",
      "tag": "Family",
      "description": "Get a family",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/families/{code}",
      "method": "patchFamiliesCode",
      "httpMethod": "patch",
      "tag": "Family",
      "description": "Update/create a family",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        },
        {
          "name": "attribute_as_image",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "attribute_as_label",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "attribute_requirements",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "attributes",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "labels",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/families/{family_code}/variants",
      "method": "getFamiliesFamilyCodeVariants",
      "httpMethod": "get",
      "tag": "Family variant",
      "description": "Get list of family variants",
      "parameters": [
        {
          "name": "family_code",
          "schema": "string",
          "required": true,
          "description": "Code of the family"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section"
        },
        {
          "name": "with_count",
          "schema": "boolean",
          "required": false,
          "description": "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/families/{family_code}/variants",
      "method": "patchFamiliesFamilyCodeVariants",
      "httpMethod": "patch",
      "tag": "Family variant",
      "description": "Update/create several family variants",
      "parameters": [
        {
          "name": "family_code",
          "schema": "string",
          "required": true,
          "description": "Code of the family"
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "labels",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "variant_attribute_sets",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "413",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/families/{family_code}/variants",
      "method": "postFamiliesFamilyCodeVariants",
      "httpMethod": "post",
      "tag": "Family",
      "description": "Create a new family variant",
      "parameters": [
        {
          "name": "family_code",
          "schema": "string",
          "required": true,
          "description": "Code of the family"
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "labels",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "variant_attribute_sets",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/families/{family_code}/variants/{code}",
      "method": "getFamiliesFamilyCodeVariantsCode",
      "httpMethod": "get",
      "tag": "Family variant",
      "description": "Get a family variant",
      "parameters": [
        {
          "name": "family_code",
          "schema": "string",
          "required": true,
          "description": "Code of the family"
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/families/{family_code}/variants/{code}",
      "method": "patchFamiliesFamilyCodeVariantsCode",
      "httpMethod": "patch",
      "tag": "Family variant",
      "description": "Update/create a family variant",
      "parameters": [
        {
          "name": "family_code",
          "schema": "string",
          "required": true,
          "description": "Code of the family"
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "labels",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "variant_attribute_sets",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/locales",
      "method": "getLocales",
      "httpMethod": "get",
      "tag": "Locale",
      "description": "Get a list of locales",
      "parameters": [
        {
          "name": "search",
          "schema": "string",
          "required": false,
          "description": "Filter locales, for more details see the <a href=\"/documentation/filter.html\">Filters</a> section"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section"
        },
        {
          "name": "with_count",
          "schema": "boolean",
          "required": false,
          "description": "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/locales/{code}",
      "method": "getLocalesCode",
      "httpMethod": "get",
      "tag": "Locale",
      "description": "Get a locale",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/measure-families",
      "method": "measureFamiliesGetList",
      "httpMethod": "get",
      "tag": "Measure family",
      "description": "Get list of measure familiy",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/measure-families/{code}",
      "method": "measureFamiliesGet",
      "httpMethod": "get",
      "tag": "Measure family",
      "description": "Get a measure family",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/measurement-families",
      "method": "measurementFamiliesGetList",
      "httpMethod": "get",
      "tag": "Measurement family",
      "description": "Get list of measurement families",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/measurement-families",
      "method": "patchMeasurementFamilies",
      "httpMethod": "patch",
      "tag": "Measurement family",
      "description": "Update/create several measurement families",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "413",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/media-files",
      "method": "getMediaFiles",
      "httpMethod": "get",
      "tag": "Product media file",
      "description": "Get a list of product media files",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section"
        },
        {
          "name": "with_count",
          "schema": "boolean",
          "required": false,
          "description": "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/media-files",
      "method": "postMediaFiles",
      "httpMethod": "post",
      "tag": "Product media file",
      "description": "Create a new product media file",
      "parameters": [
        {
          "name": "Content-type",
          "schema": "string",
          "required": true,
          "description": "Equal to 'multipart/form-data', no other value allowed"
        },
        {
          "name": "file",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "product",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "product_model",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/media-files/{code}",
      "method": "getMediaFilesCode",
      "httpMethod": "get",
      "tag": "Product media file",
      "description": "Get a product media file",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/media-files/{code}/download",
      "method": "getMediaFilesCodeDownload",
      "httpMethod": "get",
      "tag": "Product media file",
      "description": "Download a product media file",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/product-models",
      "method": "getProductModels",
      "httpMethod": "get",
      "tag": "Product model",
      "description": "Get list of product models",
      "parameters": [
        {
          "name": "search",
          "schema": "string",
          "required": false,
          "description": "Filter product models, for more details see the <a href=\"/documentation/filter.html\">Filters</a> section"
        },
        {
          "name": "scope",
          "schema": "string",
          "required": false,
          "description": "Filter product values to return scopable attributes for the given channel as well as the non localizable/non scopable attributes, for more details see the <a href=\"/documentation/filter.html#via-channel\">Filter product values via channel</a> section"
        },
        {
          "name": "locales",
          "schema": "string",
          "required": false,
          "description": "Filter product values to return localizable attributes for the given locales as well as the non localizable/non scopable attributes, for more details see the <a href=\"/documentation/filter.html#via-locale\">Filter product values via locale</a> section"
        },
        {
          "name": "attributes",
          "schema": "string",
          "required": false,
          "description": "Filter product values to only return those concerning the given attributes, for more details see the <a href=\"/documentation/filter.html#filter-product-values\">Filter on product values</a> section and the <a href=\"/documentation/filter.html#filter-on-product-model-properties\">Filter on product model properties</a> section"
        },
        {
          "name": "pagination_type",
          "schema": "string",
          "required": false,
          "description": "Pagination method type, see <a href=\"/documentation/pagination.html\">Pagination</a> section"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section"
        },
        {
          "name": "search_after",
          "schema": "string",
          "required": false,
          "description": "Cursor when using the `search_after` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\">Pagination</a> section"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section"
        },
        {
          "name": "with_count",
          "schema": "boolean",
          "required": false,
          "description": "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way"
        },
        {
          "name": "with_quality_scores",
          "schema": "boolean",
          "required": false,
          "description": "Return product model quality scores in the response. <strong>(Only available since the 6.0 version)</strong>"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/product-models",
      "method": "patchProductModels",
      "httpMethod": "patch",
      "tag": "Product model",
      "description": "Update/create several product models",
      "parameters": [
        {
          "name": "associations",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "categories",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "created",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "family",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "family_variant",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "metadata",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "parent",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "quality_scores",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "quantified_associations",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "updated",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "values",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "413",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/product-models",
      "method": "postProductModels",
      "httpMethod": "post",
      "tag": "Product model",
      "description": "Create a new product model",
      "parameters": [
        {
          "name": "associations",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "categories",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "created",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "family",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "family_variant",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "metadata",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "parent",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "quality_scores",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "quantified_associations",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "updated",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "values",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/product-models/{code}",
      "method": "deleteProductModelsCode",
      "httpMethod": "delete",
      "tag": "Product model",
      "description": "Delete a product model",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/product-models/{code}",
      "method": "getProductModelsCode",
      "httpMethod": "get",
      "tag": "Product model",
      "description": "Get a product model",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        },
        {
          "name": "with_quality_scores",
          "schema": "boolean",
          "required": false,
          "description": "Return product model quality scores in the response. <strong>(Only available since the 6.0 version)</strong>"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/product-models/{code}",
      "method": "patchProductModelsCode",
      "httpMethod": "patch",
      "tag": "Product model",
      "description": "Update/create a product model",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        },
        {
          "name": "associations",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "categories",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "created",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "family",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "family_variant",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "metadata",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "parent",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "quality_scores",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "quantified_associations",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "updated",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "values",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/product-models/{code}/draft",
      "method": "getProductModelDraftCode",
      "httpMethod": "get",
      "tag": "Product model",
      "description": "Get a draft",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/product-models/{code}/proposal",
      "method": "postProductModelProposal",
      "httpMethod": "post",
      "tag": "Product model",
      "description": "Submit a draft for approval",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/products",
      "method": "getProducts",
      "httpMethod": "get",
      "tag": "Product [identifier]",
      "description": "Get list of products",
      "parameters": [
        {
          "name": "search",
          "schema": "string",
          "required": false,
          "description": "Filter products, for more details see the <a href=\"/documentation/filter.html\">Filters</a> section"
        },
        {
          "name": "scope",
          "schema": "string",
          "required": false,
          "description": "Filter product values to return scopable attributes for the given channel as well as the non localizable/non scopable attributes, for more details see the <a href=\"/documentation/filter.html#via-channel\">Filter product values via channel</a> section"
        },
        {
          "name": "locales",
          "schema": "string",
          "required": false,
          "description": "Filter product values to return localizable attributes for the given locales as well as the non localizable/non scopable attributes, for more details see the <a href=\"/documentation/filter.html#via-locale\">Filter product values via locale</a> section"
        },
        {
          "name": "attributes",
          "schema": "string",
          "required": false,
          "description": "Filter product values to only return those concerning the given attributes, for more details see the <a href=\"/documentation/filter.html#filter-product-values\">Filter on product values</a> section"
        },
        {
          "name": "pagination_type",
          "schema": "string",
          "required": false,
          "description": "Pagination method type, see <a href=\"/documentation/pagination.html\">Pagination</a> section"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section"
        },
        {
          "name": "search_after",
          "schema": "string",
          "required": false,
          "description": "Cursor when using the `search_after` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\">Pagination</a> section"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section"
        },
        {
          "name": "with_count",
          "schema": "boolean",
          "required": false,
          "description": "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way"
        },
        {
          "name": "with_attribute_options",
          "schema": "boolean",
          "required": false,
          "description": "Return labels of attribute options in the response. (Only available since the 5.0 version)"
        },
        {
          "name": "with_quality_scores",
          "schema": "boolean",
          "required": false,
          "description": "Return product quality scores in the response. (Only available since the 5.0 version)"
        },
        {
          "name": "with_completenesses",
          "schema": "boolean",
          "required": false,
          "description": "Return product completenesses in the response. (Only available since the 6.0 version)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/products",
      "method": "patchProducts",
      "httpMethod": "patch",
      "tag": "Product [identifier]",
      "description": "Update/create several products",
      "parameters": [
        {
          "name": "associations",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "categories",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "completenesses",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "created",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "family",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "groups",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "identifier",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "metadata",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "parent",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "quality_scores",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "quantified_associations",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "updated",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "uuid",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "values",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "413",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/products",
      "method": "postProducts",
      "httpMethod": "post",
      "tag": "Product [identifier]",
      "description": "Create a new product",
      "parameters": [
        {
          "name": "associations",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "categories",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "completenesses",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "created",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "family",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "groups",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "identifier",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "metadata",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "parent",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "quality_scores",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "quantified_associations",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "updated",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "uuid",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "values",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/products-uuid",
      "method": "getProductsUuid",
      "httpMethod": "get",
      "tag": "Product [uuid]",
      "description": "Get list of products",
      "parameters": [
        {
          "name": "search",
          "schema": "string",
          "required": false,
          "description": "Filter products, for more details see the <a href=\"/documentation/filter.html\">Filters</a> section"
        },
        {
          "name": "scope",
          "schema": "string",
          "required": false,
          "description": "Filter product values to return scopable attributes for the given channel as well as the non localizable/non scopable attributes, for more details see the <a href=\"/documentation/filter.html#via-channel\">Filter product values via channel</a> section"
        },
        {
          "name": "locales",
          "schema": "string",
          "required": false,
          "description": "Filter product values to return localizable attributes for the given locales as well as the non localizable/non scopable attributes, for more details see the <a href=\"/documentation/filter.html#via-locale\">Filter product values via locale</a> section"
        },
        {
          "name": "attributes",
          "schema": "string",
          "required": false,
          "description": "Filter product values to only return those concerning the given attributes, for more details see the <a href=\"/documentation/filter.html#filter-product-values\">Filter on product values</a> section"
        },
        {
          "name": "pagination_type",
          "schema": "string",
          "required": false,
          "description": "Pagination method type, see <a href=\"/documentation/pagination.html\">Pagination</a> section"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section"
        },
        {
          "name": "search_after",
          "schema": "string",
          "required": false,
          "description": "Cursor when using the `search_after` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\">Pagination</a> section"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section"
        },
        {
          "name": "with_count",
          "schema": "boolean",
          "required": false,
          "description": "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way"
        },
        {
          "name": "with_attribute_options",
          "schema": "boolean",
          "required": false,
          "description": "Return labels of attribute options in the response. (Only available since the 5.0 version)"
        },
        {
          "name": "with_quality_scores",
          "schema": "boolean",
          "required": false,
          "description": "Return product quality scores in the response. (Only available since the 5.0 version)"
        },
        {
          "name": "with_completenesses",
          "schema": "boolean",
          "required": false,
          "description": "Return product completenesses in the response. (Only available since the 6.0 version)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/products-uuid",
      "method": "patchProductsUuid",
      "httpMethod": "patch",
      "tag": "Product [uuid]",
      "description": "Update/create several products",
      "parameters": [
        {
          "name": "associations",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "categories",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "completenesses",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "created",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "family",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "groups",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "metadata",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "parent",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "quality_scores",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "quantified_associations",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "updated",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "uuid",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "values",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "413",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/products-uuid",
      "method": "postProductsUuid",
      "httpMethod": "post",
      "tag": "Product [uuid]",
      "description": "Create a new product",
      "parameters": [
        {
          "name": "associations",
          "schema": "object",
          "description": ""
        },
        {
          "name": "categories",
          "schema": "array",
          "description": ""
        },
        {
          "name": "completenesses",
          "schema": "array",
          "description": ""
        },
        {
          "name": "created",
          "schema": "string",
          "description": ""
        },
        {
          "name": "enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "family",
          "schema": "string",
          "description": ""
        },
        {
          "name": "groups",
          "schema": "array",
          "description": ""
        },
        {
          "name": "metadata",
          "schema": "object",
          "description": ""
        },
        {
          "name": "parent",
          "schema": "string",
          "description": ""
        },
        {
          "name": "quality_scores",
          "schema": "object",
          "description": ""
        },
        {
          "name": "quantified_associations",
          "schema": "object",
          "description": ""
        },
        {
          "name": "updated",
          "schema": "string",
          "description": ""
        },
        {
          "name": "uuid",
          "schema": "string",
          "description": ""
        },
        {
          "name": "values",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/products-uuid/{uuid}",
      "method": "deleteProductsUuidUuid",
      "httpMethod": "delete",
      "tag": "Product [uuid]",
      "description": "Delete a product",
      "parameters": [
        {
          "name": "uuid",
          "schema": "string",
          "required": true,
          "description": "Uuid of the resource"
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/products-uuid/{uuid}",
      "method": "getProductsUuidUuid",
      "httpMethod": "get",
      "tag": "Product [uuid]",
      "description": "Get a product",
      "parameters": [
        {
          "name": "uuid",
          "schema": "string",
          "required": true,
          "description": "Uuid of the resource"
        },
        {
          "name": "with_attribute_options",
          "schema": "boolean",
          "required": false,
          "description": "Return labels of attribute options in the response. (Only available since the 5.0 version)"
        },
        {
          "name": "with_quality_scores",
          "schema": "boolean",
          "required": false,
          "description": "Return product quality scores in the response. (Only available since the 5.0 version)"
        },
        {
          "name": "with_completenesses",
          "schema": "boolean",
          "required": false,
          "description": "Return product completenesses in the response. (Only available since the 6.0 version)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/products-uuid/{uuid}",
      "method": "patchProductsUuidUuid",
      "httpMethod": "patch",
      "tag": "Product [uuid]",
      "description": "Update/create a product",
      "parameters": [
        {
          "name": "uuid",
          "schema": "string",
          "required": true,
          "description": "Uuid of the resource"
        },
        {
          "name": "associations",
          "schema": "object",
          "description": ""
        },
        {
          "name": "categories",
          "schema": "array",
          "description": ""
        },
        {
          "name": "completenesses",
          "schema": "array",
          "description": ""
        },
        {
          "name": "created",
          "schema": "string",
          "description": ""
        },
        {
          "name": "enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "family",
          "schema": "string",
          "description": ""
        },
        {
          "name": "groups",
          "schema": "array",
          "description": ""
        },
        {
          "name": "metadata",
          "schema": "object",
          "description": ""
        },
        {
          "name": "parent",
          "schema": "string",
          "description": ""
        },
        {
          "name": "quality_scores",
          "schema": "object",
          "description": ""
        },
        {
          "name": "quantified_associations",
          "schema": "object",
          "description": ""
        },
        {
          "name": "updated",
          "schema": "string",
          "description": ""
        },
        {
          "name": "uuid",
          "schema": "string",
          "description": ""
        },
        {
          "name": "values",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/products-uuid/{uuid}/draft",
      "method": "getDraftUuidUuid",
      "httpMethod": "get",
      "tag": "Product [uuid]",
      "description": "Get a draft",
      "parameters": [
        {
          "name": "uuid",
          "schema": "string",
          "required": true,
          "description": "Uuid of the resource"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/products-uuid/{uuid}/proposal",
      "method": "postProposalUuid",
      "httpMethod": "post",
      "tag": "Product [uuid]",
      "description": "Submit a draft for approval",
      "parameters": [
        {
          "name": "uuid",
          "schema": "string",
          "required": true,
          "description": "Uuid of the resource"
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/products/{code}",
      "method": "deleteProductsCode",
      "httpMethod": "delete",
      "tag": "Product [identifier]",
      "description": "Delete a product",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/products/{code}",
      "method": "getProductsCode",
      "httpMethod": "get",
      "tag": "Product [identifier]",
      "description": "Get a product",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        },
        {
          "name": "with_attribute_options",
          "schema": "boolean",
          "required": false,
          "description": "Return labels of attribute options in the response. (Only available since the 5.0 version)"
        },
        {
          "name": "with_quality_scores",
          "schema": "boolean",
          "required": false,
          "description": "Return product quality scores in the response. (Only available since the 5.0 version)"
        },
        {
          "name": "with_completenesses",
          "schema": "boolean",
          "required": false,
          "description": "Return product completenesses in the response. (Only available since the 6.0 version)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/products/{code}",
      "method": "patchProductsCode",
      "httpMethod": "patch",
      "tag": "Product [identifier]",
      "description": "Update/create a product",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        },
        {
          "name": "associations",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "categories",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "completenesses",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "created",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "family",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "groups",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "identifier",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "metadata",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "parent",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "quality_scores",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "quantified_associations",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "updated",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "uuid",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "values",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/products/{code}/draft",
      "method": "getDraftCode",
      "httpMethod": "get",
      "tag": "Product [identifier]",
      "description": "Get a draft",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/products/{code}/proposal",
      "method": "postProposal",
      "httpMethod": "post",
      "tag": "Product [identifier]",
      "description": "Submit a draft for approval",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/published-products",
      "method": "getPublishedProducts",
      "httpMethod": "get",
      "tag": "Published product",
      "description": "Get list of published products",
      "parameters": [
        {
          "name": "search",
          "schema": "string",
          "required": false,
          "description": "Filter published products, for more details see the <a href=\"/documentation/filter.html\">Filters</a> section"
        },
        {
          "name": "scope",
          "schema": "string",
          "required": false,
          "description": "Filter published product values to return scopable attributes for the given channel as well as the non localizable/non scopable attributes, for more details see the <a href=\"/documentation/filter.html#filter-published-product-values\">Filter on published product values</a> section"
        },
        {
          "name": "locales",
          "schema": "string",
          "required": false,
          "description": "Filter published product values to return localizable attributes for the given locales as well as the non localizable/non scopable attributes, for more details see the <a href=\"/documentation/filter.html#filter-published-product-values\">Filter on published product values</a> section"
        },
        {
          "name": "attributes",
          "schema": "string",
          "required": false,
          "description": "Filter published product values to only return those concerning the given attributes, for more details see the <a href=\"/documentation/filter.html#filter-product-values\">Filter on product values</a> section"
        },
        {
          "name": "pagination_type",
          "schema": "string",
          "required": false,
          "description": "Pagination method type, see <a href=\"/documentation/pagination.html\">Pagination</a> section"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "Number of the page to retrieve when using the `page` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html#pagination\">Pagination</a> section"
        },
        {
          "name": "search_after",
          "schema": "string",
          "required": false,
          "description": "Cursor when using the `search_after` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\">Pagination</a> section"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": "Number of results by page, see <a href=\"/documentation/pagination.html\">Pagination</a> section"
        },
        {
          "name": "with_count",
          "schema": "boolean",
          "required": false,
          "description": "Return the count of items in the response. Be carefull with that, on a big catalog, it can decrease performance in a significative way"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/published-products/{code}",
      "method": "getPublishedProductsCode",
      "httpMethod": "get",
      "tag": "Published product",
      "description": "Get a published product",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/reference-entities",
      "method": "getReferenceEntities",
      "httpMethod": "get",
      "tag": "Reference entity",
      "description": "Get list of reference entities",
      "parameters": [
        {
          "name": "search_after",
          "schema": "string",
          "required": false,
          "description": "Cursor when using the `search_after` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\">Pagination</a> section"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/reference-entities-media-files",
      "method": "postReferenceEntityMediaFiles",
      "httpMethod": "post",
      "tag": "Reference entity media file",
      "description": "Create a new media file for a reference entity or a record",
      "parameters": [
        {
          "name": "Content-type",
          "schema": "string",
          "required": true,
          "description": "Equal to 'multipart/form-data', no other value allowed"
        },
        {
          "name": "file",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/reference-entities-media-files/{code}",
      "method": "getReferenceEntityMediaFilesCode",
      "httpMethod": "get",
      "tag": "Reference entity media file",
      "description": "Download the media file associated to a reference entity or a record",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/reference-entities/{code}",
      "method": "getReferenceEntitiesCode",
      "httpMethod": "get",
      "tag": "Reference entity",
      "description": "Get a reference entity",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/reference-entities/{code}",
      "method": "patchReferenceEntityCode",
      "httpMethod": "patch",
      "tag": "Reference entity",
      "description": "Update/create a reference entity",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "image",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "labels",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/reference-entities/{reference_entity_code}/attributes",
      "method": "getReferenceEntitiesCodeAttributes",
      "httpMethod": "get",
      "tag": "Reference entity attribute",
      "description": "Get the list of attributes of a given reference entity",
      "parameters": [
        {
          "name": "reference_entity_code",
          "schema": "string",
          "required": true,
          "description": "Code of the reference entity"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/reference-entities/{reference_entity_code}/attributes/{attribute_code}/options",
      "method": "getReferenceEntityAttributesAttributeCodeOptions",
      "httpMethod": "get",
      "tag": "Reference entity attribute option",
      "description": "Get a list of attribute options of a given attribute for a given reference entity",
      "parameters": [
        {
          "name": "reference_entity_code",
          "schema": "string",
          "required": true,
          "description": "Code of the reference entity"
        },
        {
          "name": "attribute_code",
          "schema": "string",
          "required": true,
          "description": "Code of the attribute"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/reference-entities/{reference_entity_code}/attributes/{attribute_code}/options/{code}",
      "method": "getReferenceEntityAttributesAttributeCodeOptionsCode",
      "httpMethod": "get",
      "tag": "Reference entity attribute option",
      "description": "Get an attribute option for a given attribute of a given reference entity",
      "parameters": [
        {
          "name": "reference_entity_code",
          "schema": "string",
          "required": true,
          "description": "Code of the reference entity"
        },
        {
          "name": "attribute_code",
          "schema": "string",
          "required": true,
          "description": "Code of the attribute"
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/reference-entities/{reference_entity_code}/attributes/{attribute_code}/options/{code}",
      "method": "patchReferenceEntityAttributesAttributeCodeOptionsCode",
      "httpMethod": "patch",
      "tag": "Reference entity attribute option",
      "description": "Update/create a reference entity attribute option",
      "parameters": [
        {
          "name": "reference_entity_code",
          "schema": "string",
          "required": true,
          "description": "Code of the reference entity"
        },
        {
          "name": "attribute_code",
          "schema": "string",
          "required": true,
          "description": "Code of the attribute"
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "labels",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/reference-entities/{reference_entity_code}/attributes/{code}",
      "method": "getReferenceEntityAttributesCode",
      "httpMethod": "get",
      "tag": "Reference entity attribute",
      "description": "Get an attribute of a given reference entity",
      "parameters": [
        {
          "name": "reference_entity_code",
          "schema": "string",
          "required": true,
          "description": "Code of the reference entity"
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/reference-entities/{reference_entity_code}/attributes/{code}",
      "method": "patchReferenceEntityAttributesCode",
      "httpMethod": "patch",
      "tag": "Reference entity attribute",
      "description": "Update/create an attribute of a given reference entity",
      "parameters": [
        {
          "name": "reference_entity_code",
          "schema": "string",
          "required": true,
          "description": "Code of the reference entity"
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        },
        {
          "name": "allowed_extensions",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "decimals_allowed",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "is_required_for_completeness",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "is_rich_text_editor",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "is_textarea",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "labels",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "max_characters",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "max_file_size",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "max_value",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "min_value",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "reference_entity_code",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "validation_regexp",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "validation_rule",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "value_per_channel",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "value_per_locale",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/reference-entities/{reference_entity_code}/records",
      "method": "getReferenceEntityRecords",
      "httpMethod": "get",
      "tag": "Reference entity record",
      "description": "Get the list of the records of a reference entity",
      "parameters": [
        {
          "name": "search",
          "schema": "string",
          "required": false,
          "description": "Filter records of the reference entity, for more details see the <a href=\"/documentation/filter.html#filter-reference-entity-records\">Filters</a> section"
        },
        {
          "name": "channel",
          "schema": "string",
          "required": false,
          "description": "Filter attribute values to return scopable attributes for the given channel as well as the non localizable/non scopable attributes, for more details see the <a href=\"/documentation/filter.html#record-values-by-channel\">Filter attribute values by channel</a> section"
        },
        {
          "name": "locales",
          "schema": "string",
          "required": false,
          "description": "Filter attribute values to return localizable attributes for the given locales as well as the non localizable/non scopable attributes, for more details see the <a href=\"/documentation/filter.html#record-values-by-locale\">Filter attribute values by locale</a> section"
        },
        {
          "name": "reference_entity_code",
          "schema": "string",
          "required": true,
          "description": "Code of the reference entity"
        },
        {
          "name": "search_after",
          "schema": "string",
          "required": false,
          "description": "Cursor when using the `search_after` pagination method type. <strong>Should never be set manually</strong>, see <a href=\"/documentation/pagination.html\">Pagination</a> section"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/reference-entities/{reference_entity_code}/records",
      "method": "patchReferenceEntityRecords",
      "httpMethod": "patch",
      "tag": "Reference entity record",
      "description": "Update/create several reference entity records",
      "parameters": [
        {
          "name": "reference_entity_code",
          "schema": "string",
          "required": true,
          "description": "Code of the reference entity"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "413",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/reference-entities/{reference_entity_code}/records/{code}",
      "method": "getReferenceEntityRecordsCode",
      "httpMethod": "get",
      "tag": "Reference entity record",
      "description": "Get a record of a given reference entity",
      "parameters": [
        {
          "name": "reference_entity_code",
          "schema": "string",
          "required": true,
          "description": "Code of the reference entity"
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/reference-entities/{reference_entity_code}/records/{code}",
      "method": "patchReferenceEntityRecordsCode",
      "httpMethod": "patch",
      "tag": "Reference entity record",
      "description": "Update/create a record of a given reference entity",
      "parameters": [
        {
          "name": "reference_entity_code",
          "schema": "string",
          "required": true,
          "description": "Code of the reference entity"
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": "Code of the resource"
        },
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "created",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "updated",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "values",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "415",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/rest/v1/system-information",
      "method": "getSystemInformation",
      "httpMethod": "get",
      "tag": "System",
      "description": "Get system information",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "406",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "http://demo.akeneo.com",
  "apiTitle": "Akeneo PIM REST API",
  "endpoints": 81,
  "sdkMethods": 144,
  "schemas": 70,
  "parameters": 679,
  "difficultyScore": 348.75,
  "difficulty": "Hard"
}