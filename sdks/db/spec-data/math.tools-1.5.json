{
  "providerName": "math.tools",
  "openApiRaw": "https://api.math.tools/yaml/math.tools.numbers.openapi.yaml",
  "securitySchemes": {
    "X-Mathtools-Api-Secret": {
      "in": "header",
      "name": "X-Mathtools-Api-Secret",
      "type": "apiKey"
    }
  },
  "homepage": "math.tools",
  "apiVersion": "1.5",
  "methods": [
    {
      "url": "/numbers/base",
      "method": "/numbers/baseGet",
      "httpMethod": "get",
      "tag": "Base Conversion",
      "description": "Convert a given number from one base to another base",
      "parameters": [
        {
          "name": "number",
          "schema": "integer",
          "required": true,
          "description": "Number to convert to the target base"
        },
        {
          "name": "from",
          "schema": "integer",
          "required": false,
          "description": "Base of the supplied number (Optional base 10 assumed by default)"
        },
        {
          "name": "to",
          "schema": "integer",
          "required": true,
          "description": "Target base to convert to"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/numbers/base/binary",
      "method": "/numbers/base/binaryGet",
      "httpMethod": "get",
      "tag": "Base Conversion",
      "description": "Convert a given number to binary",
      "parameters": [
        {
          "name": "number",
          "schema": "integer",
          "required": true,
          "description": "Number to convert to binary"
        },
        {
          "name": "from",
          "schema": "integer",
          "required": false,
          "description": "Base of the supplied number (Optional base 10 assumed by default)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/numbers/base/hex",
      "method": "/numbers/base/hexGet",
      "httpMethod": "get",
      "tag": "Base Conversion",
      "description": "Convert a given number to hexadecimal",
      "parameters": [
        {
          "name": "number",
          "schema": "integer",
          "required": true,
          "description": "Number to convert to hex"
        },
        {
          "name": "from",
          "schema": "integer",
          "required": false,
          "description": "Base of the supplied number (Optional base 10 assumed by default)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/numbers/base/octal",
      "method": "/numbers/base/octalGet",
      "httpMethod": "get",
      "tag": "Base Conversion",
      "description": "Convert a given number to octal",
      "parameters": [
        {
          "name": "number",
          "schema": "integer",
          "required": true,
          "description": "Number to convert to octal"
        },
        {
          "name": "from",
          "schema": "integer",
          "required": false,
          "description": "Base of the supplied number (Optional base 10 assumed by default)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/numbers/cardinal",
      "method": "/numbers/cardinalGet",
      "httpMethod": "get",
      "tag": "Spell",
      "description": "Get the cardinal of the given number",
      "parameters": [
        {
          "name": "number",
          "schema": "integer",
          "required": false,
          "description": "Number value"
        },
        {
          "name": "language",
          "schema": "string",
          "required": false,
          "description": "Language to use"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/numbers/currency",
      "method": "/numbers/currencyGet",
      "httpMethod": "get",
      "tag": "Spell",
      "description": "Spells out the number as a currency",
      "parameters": [
        {
          "name": "number",
          "schema": "integer",
          "required": false,
          "description": "Number to spell"
        },
        {
          "name": "language",
          "schema": "string",
          "required": false,
          "description": "Language to use"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/numbers/fact",
      "method": "/numbers/factGet",
      "httpMethod": "get",
      "tag": "Number Facts",
      "description": "Get a random fact about a number",
      "parameters": [
        {
          "name": "number",
          "schema": "integer",
          "required": true,
          "description": "Number value"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/numbers/is-cube",
      "method": "/numbers/isCubeGet",
      "httpMethod": "get",
      "tag": "Number Checks",
      "description": "Checks whether a given number is a cube number or not.",
      "parameters": [
        {
          "name": "number",
          "schema": "integer",
          "required": false,
          "description": "Number to check"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/numbers/is-palindrome",
      "method": "/numbers/isPalindromeGet",
      "httpMethod": "get",
      "tag": "Number Checks",
      "description": "Checks whether a given number is a palindrome number or not.",
      "parameters": [
        {
          "name": "number",
          "schema": "integer",
          "required": false,
          "description": "Number to check"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/numbers/is-square",
      "method": "/numbers/isSquareGet",
      "httpMethod": "get",
      "tag": "Number Checks",
      "description": "Checks whether a given number is a square number or not.",
      "parameters": [
        {
          "name": "number",
          "schema": "integer",
          "required": false,
          "description": "Number to check"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/numbers/is-triangle",
      "method": "/numbers/isTriangleGet",
      "httpMethod": "get",
      "tag": "Number Checks",
      "description": "Checks whether a given number is a triangle number or not.",
      "parameters": [
        {
          "name": "number",
          "schema": "integer",
          "required": false,
          "description": "Number to check"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/numbers/nod",
      "method": "/numbers/nodGet",
      "httpMethod": "get",
      "tag": "Number of the day",
      "description": "Get the number of the day for current day",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/numbers/numeral/chinese",
      "method": "/numbers/numeral/chineseGet",
      "httpMethod": "get",
      "tag": "Number Systems Conversion",
      "description": "Convert base 10 representation of a given number to chinese numeral.",
      "parameters": [
        {
          "name": "number",
          "schema": "integer",
          "required": false,
          "description": "Number to convert"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/numbers/numeral/egyptian",
      "method": "/numbers/numeral/egyptianGet",
      "httpMethod": "get",
      "tag": "Number Systems Conversion",
      "description": "Convert base 10 representation of a given number to egyptian numeral.",
      "parameters": [
        {
          "name": "number",
          "schema": "integer",
          "required": false,
          "description": "Number to convert"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/numbers/numeral/roman",
      "method": "/numbers/numeral/romanGet",
      "httpMethod": "get",
      "tag": "Number Systems Conversion",
      "description": "Convert base 10 representation of a given number to roman numeral.",
      "parameters": [
        {
          "name": "number",
          "schema": "integer",
          "required": false,
          "description": "Number to convert"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/numbers/ordinal",
      "method": "/numbers/ordinalGet",
      "httpMethod": "get",
      "tag": "Spell",
      "description": "Get the ordinal of the given number",
      "parameters": [
        {
          "name": "number",
          "schema": "integer",
          "required": false,
          "description": "Number value"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/numbers/pi",
      "method": "/numbers/piGet",
      "httpMethod": "get",
      "tag": "PI",
      "description": "Get digits of pi (Ï€)",
      "parameters": [
        {
          "name": "from",
          "schema": "integer",
          "required": false,
          "description": "Optional start position"
        },
        {
          "name": "to",
          "schema": "integer",
          "required": false,
          "description": "Optional start position"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/numbers/prime/factors",
      "method": "/numbers/prime/factorsGet",
      "httpMethod": "get",
      "tag": "Prime",
      "description": "Get the prime factors of a given number.",
      "parameters": [
        {
          "name": "number",
          "schema": "integer",
          "required": false,
          "description": "Number to get the factors"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/numbers/prime/is-fermat-prime",
      "method": "/numbers/prime/isFermatPrimeGet",
      "httpMethod": "get",
      "tag": "Prime",
      "description": "Checks whether a given number is a known fermat prime number or not.",
      "parameters": [
        {
          "name": "number",
          "schema": "integer",
          "required": false,
          "description": "Number to check"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/numbers/prime/is-fibonacci-prime",
      "method": "/numbers/prime/isFibonacciPrimeGet",
      "httpMethod": "get",
      "tag": "Prime",
      "description": "Checks whether a given number is a known fibonacci prime number or not.",
      "parameters": [
        {
          "name": "number",
          "schema": "integer",
          "required": false,
          "description": "Number to check"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/numbers/prime/is-mersenne-prime",
      "method": "/numbers/prime/isMersennePrimeGet",
      "httpMethod": "get",
      "tag": "Prime",
      "description": "Checks whether a given number is a known mersenne prime number or not.",
      "parameters": [
        {
          "name": "number",
          "schema": "integer",
          "required": false,
          "description": "Number to check"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/numbers/prime/is-partition-prime",
      "method": "/numbers/prime/isPartitionPrimeGet",
      "httpMethod": "get",
      "tag": "Prime",
      "description": "Checks whether a given number is a known partition prime number or not.",
      "parameters": [
        {
          "name": "number",
          "schema": "integer",
          "required": false,
          "description": "Number to check"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/numbers/prime/is-pell-prime",
      "method": "/numbers/prime/isPellPrimeGet",
      "httpMethod": "get",
      "tag": "Prime",
      "description": "Checks whether a given number is a known pell prime number or not.",
      "parameters": [
        {
          "name": "number",
          "schema": "integer",
          "required": false,
          "description": "Number to check"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/numbers/prime/is-perfect",
      "method": "/numbers/prime/isPerfectGet",
      "httpMethod": "get",
      "tag": "Prime",
      "description": "Checks whether a given number is a perfect number or not.",
      "parameters": [
        {
          "name": "number",
          "schema": "integer",
          "required": false,
          "description": "Number to check"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/numbers/prime/is-prime",
      "method": "/numbers/prime/isPrimeGet",
      "httpMethod": "get",
      "tag": "Prime",
      "description": "Checks whether a given number is a known prime number or not.",
      "parameters": [
        {
          "name": "number",
          "schema": "integer",
          "required": false,
          "description": "Number to check"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    },
    {
      "url": "/numbers/random",
      "method": "/numbers/randomGet",
      "httpMethod": "get",
      "tag": "Number Generation",
      "description": "Generate random number(s)",
      "parameters": [
        {
          "name": "min",
          "schema": "integer",
          "required": false,
          "description": "Minimum Number value in the range"
        },
        {
          "name": "max",
          "schema": "integer",
          "required": false,
          "description": "Maximum Number value"
        },
        {
          "name": "total",
          "schema": "integer",
          "required": false,
          "description": "Total number of random numbers to generate. Defaults to 1"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://api.math.tools",
  "apiDescription": "All about Numbers. REST access with json/xml/jsonp result support. Below is the documentation for the Numbers API. You can try them out right here. Find more information and subscribe at [math.tools](https://math.tools/api/numbers/)  \n",
  "apiTitle": "Numbers API",
  "endpoints": 26,
  "sdkMethods": 26,
  "schemas": 0,
  "parameters": 35,
  "difficultyScore": 34.75,
  "difficulty": "Easy"
}