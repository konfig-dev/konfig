{
  "providerName": "spinitron.com",
  "openApiRaw": "https://raw.githubusercontent.com/spinitron/v2api/master/spinitron.yaml",
  "securitySchemes": {
    "accessToken": {
      "in": "query",
      "name": "access-token",
      "type": "apiKey"
    },
    "httpBearer": {
      "bearerFormat": "JWT",
      "scheme": "bearer",
      "type": "http"
    }
  },
  "categories": [
    "media"
  ],
  "homepage": "spinitron.com",
  "apiVersion": "1.0.0",
  "methods": [
    {
      "url": "/personas",
      "method": "/personasGet",
      "httpMethod": "get",
      "tag": "Persona",
      "typeScriptTag": "persona",
      "description": "Get Personas",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "description": "Filter by Persona name"
        },
        {
          "name": "count",
          "schema": "integer",
          "description": "Amount of items to return"
        },
        {
          "name": "page",
          "schema": "integer",
          "description": "Offset, used together with count"
        },
        {
          "name": "fields",
          "schema": "array",
          "description": "Allows to select only needed fields"
        },
        {
          "name": "expand",
          "schema": "array",
          "description": "Allows to select extra fields"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/personas/{id}",
      "method": "/personas/{id}Get",
      "httpMethod": "get",
      "tag": "Persona",
      "typeScriptTag": "persona",
      "description": "Get Persona by id",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "fields",
          "schema": "array",
          "description": "Allows to select only needed fields"
        },
        {
          "name": "expand",
          "schema": "array",
          "description": "Allows to select extra fields"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The `Persona` object describes a radio DJ/host. One person can have multiple personas"
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/playlists",
      "method": "/playlistsGet",
      "httpMethod": "get",
      "tag": "Playlist",
      "typeScriptTag": "playlist",
      "description": "Returns playlists optionally filtered by {start} and/or {end} datetimes",
      "parameters": [
        {
          "name": "start",
          "schema": "string",
          "description": "The datetime starting from items must be returned. Maximum 1 hour in future.\n"
        },
        {
          "name": "end",
          "schema": "string",
          "description": "The ending datetime. Maximum 1 hour in future.\n"
        },
        {
          "name": "showId",
          "schema": "integer",
          "description": "Filter by show"
        },
        {
          "name": "personaId",
          "schema": "integer",
          "description": "Filter by persona"
        },
        {
          "name": "count",
          "schema": "integer",
          "description": "Amount of items to return"
        },
        {
          "name": "page",
          "schema": "integer",
          "description": "Offset, used together with count"
        },
        {
          "name": "fields",
          "schema": "array",
          "description": "Allows to select only needed fields"
        },
        {
          "name": "expand",
          "schema": "array",
          "description": "Allows to select extra fields"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/playlists/{id}",
      "method": "/playlists/{id}Get",
      "httpMethod": "get",
      "tag": "Playlist",
      "typeScriptTag": "playlist",
      "description": "Get a Playlist by id",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "fields",
          "schema": "array",
          "description": "Allows to select only needed fields"
        },
        {
          "name": "expand",
          "schema": "array",
          "description": "Allows to select extra fields"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/shows",
      "method": "/showsGet",
      "httpMethod": "get",
      "tag": "Show",
      "typeScriptTag": "show",
      "description": "Returns scheduled shows optionally filtered by {start} and/or {end} datetimes",
      "parameters": [
        {
          "name": "start",
          "schema": "string",
          "description": "The datetime starting from items must be returned. Maximum 1 hour in past.\n"
        },
        {
          "name": "end",
          "schema": "string",
          "description": "The ending datetime. Maximum 1 hour in past.\n"
        },
        {
          "name": "count",
          "schema": "integer",
          "description": "Amount of items to return"
        },
        {
          "name": "page",
          "schema": "integer",
          "description": "Offset, used together with count"
        },
        {
          "name": "fields",
          "schema": "array",
          "description": "Allows to select only needed fields"
        },
        {
          "name": "expand",
          "schema": "array",
          "description": "Allows to select extra fields"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        }
      ]
    },
    {
      "url": "/shows/{id}",
      "method": "/shows/{id}Get",
      "httpMethod": "get",
      "tag": "Show",
      "typeScriptTag": "show",
      "description": "Get a Show by id",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "fields",
          "schema": "array",
          "description": "Allows to select only needed fields"
        },
        {
          "name": "expand",
          "schema": "array",
          "description": "Allows to select extra fields"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A `Show` object describes one occurrence of a radio program. A result set may contain multiple occurrences of the same show with difference `start` and `end` values."
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/spins",
      "method": "/spinsGet",
      "httpMethod": "get",
      "tag": "Spin",
      "typeScriptTag": "spin",
      "description": "Returns spins optionally filtered by {start} and/or {end} datetimes",
      "parameters": [
        {
          "name": "start",
          "schema": "string",
          "description": "The datetime starting from items must be returned.\n"
        },
        {
          "name": "end",
          "schema": "string",
          "description": "The ending datetime.\n"
        },
        {
          "name": "playlistId",
          "schema": "integer",
          "description": "Filter by playlist"
        },
        {
          "name": "showId",
          "schema": "integer",
          "description": "Filter by show"
        },
        {
          "name": "count",
          "schema": "integer",
          "description": "Amount of items to return"
        },
        {
          "name": "page",
          "schema": "integer",
          "description": "Offset, used together with count"
        },
        {
          "name": "fields",
          "schema": "array",
          "description": "Allows to select only needed fields"
        },
        {
          "name": "expand",
          "schema": "array",
          "description": "Allows to select extra fields"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/spins",
      "method": "/spinsPost",
      "httpMethod": "post",
      "tag": "Spin",
      "typeScriptTag": "spin",
      "description": "Log a Spin",
      "parameters": [
        {
          "name": "artist",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "composer",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "duration",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "genre",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "isrc",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "label",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "live",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "release",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "song",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "start",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "422",
          "description": ""
        },
        {
          "statusCode": "default",
          "description": ""
        }
      ]
    },
    {
      "url": "/spins/{id}",
      "method": "/spins/{id}Get",
      "httpMethod": "get",
      "tag": "Spin",
      "typeScriptTag": "spin",
      "description": "Get a Spin by id",
      "parameters": [
        {
          "name": "id",
          "schema": "integer",
          "required": true,
          "description": ""
        },
        {
          "name": "fields",
          "schema": "array",
          "description": "Allows to select only needed fields"
        },
        {
          "name": "expand",
          "schema": "array",
          "description": "Allows to select extra fields"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://spinitron.com/api",
  "apiDescription": "## Notes\n\n**Tutorial demo** using this API is at [https://spinitron.com/v2-api-demo/](https://spinitron.com/v2-api-demo/). For web integration using iframes and/or JavaScript instead of an API, see [https://spinitron.github.io/v2-web-integration/](https://spinitron.github.io/v2-web-integration/).\n\n**Your API key** is found in the Spinitron web app. Log in to Spinitron and go to *Automation & API* in the *Admin* menu.\n\n**Authenticate** by presenting your API key using either HTTP Bearer Authorization\n(preferred)\n\n    curl -H 'Authorization: Bearer YOURAPIKEY' 'https://spinitron.com/api/spins'\n\nor in the query parameter `access-token` (less secure owing to webserver\nlog files)\n\n    curl 'https://spinitron.com/api/spins?access-token=YOURAPIKEY'\n\n**Limit** per page of results is 20 by default and miximally 200.\n\n**Try it out** below works to\ngenerate example cURL requests but not to get responses from Spinitron. We\ndo not accept queries sent from web browsers. Copy-paste the cURL commands\nand run them from your computer.\n\n**Cache** the data you get from the API if you are using it in web or mobile integration. It's not ok to query the API on *every* page request you serve. The [demo](https://spinitron.com/v2-api-demo/) shows how easy it can be to implement a file cache.\n\nAn extension to this API with access to all stations for partner applications is available. Contact us.\n",
  "apiTitle": "Spinitron v2 API",
  "endpoints": 8,
  "sdkMethods": 9,
  "schemas": 9,
  "parameters": 49,
  "difficultyScore": 25.75,
  "difficulty": "Easy"
}