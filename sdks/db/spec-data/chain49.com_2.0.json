{
  "providerName": "chain49.com",
  "openApiRaw": "https://docs.chain49.com/schema/openapi.yaml",
  "securitySchemes": {
    "X-API-Key": {
      "description": "Direct Auth: \"X-API-Key\"",
      "in": "header",
      "name": "X-API-Key",
      "type": "apiKey"
    },
    "X-RapidAPI-Host": {
      "description": "RapidAPI Auth: \"X-RapidAPI-Host\" More info: [RapidAPI Hub](https://rapidapi.com/hartmann-it-solutions-gmbh-main/api/chain49)",
      "in": "header",
      "name": "X-RapidAPI-Host",
      "type": "apiKey"
    },
    "X-RapidAPI-Key": {
      "description": "RapidAPI Auth: \"X-RapidAPI-Key\" More info: [RapidAPI Hub](https://rapidapi.com/hartmann-it-solutions-gmbh-main/api/chain49)",
      "in": "header",
      "name": "X-RapidAPI-Key",
      "type": "apiKey"
    }
  },
  "homepage": "chain49.com",
  "apiVersion": "2.0",
  "methods": [
    {
      "url": "/",
      "method": "getAvailableBlockchains",
      "httpMethod": "get",
      "tag": "Status",
      "typeScriptTag": "status",
      "description": "List available blockchains",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{blockchain}",
      "method": "getBlockchain",
      "httpMethod": "get",
      "tag": "Status",
      "typeScriptTag": "status",
      "description": "Blockchain Info Summary",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{blockchain}/v2/address/{address}",
      "method": "getAddressV2",
      "httpMethod": "get",
      "tag": "Addresses",
      "typeScriptTag": "addresses",
      "description": "Get address V2",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "specifies page of returned transactions, starting from 1. If out of range, Blockbook returns the closest possible page."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "number of transactions returned by call (default and maximum 1000)"
        },
        {
          "name": "fromBlock",
          "schema": "integer",
          "required": false,
          "description": "filter of the returned transactions from block height to block height (default no filter)"
        },
        {
          "name": "toBlock",
          "schema": "integer",
          "required": false,
          "description": "filter of the returned transactions from block height to block height (default no filter)"
        },
        {
          "name": "details",
          "schema": "string",
          "required": false,
          "description": "specifies level of details returned by request"
        },
        {
          "name": "contract",
          "schema": "string",
          "required": false,
          "description": "return only transactions which affect specified contract (applicable only to coins which support contracts)"
        },
        {
          "name": "secondary",
          "schema": "string",
          "required": false,
          "description": "specifies secondary (fiat) currency in which the token and total balances are returned in addition to crypto values"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{blockchain}/v2/balancehistory/{addressOrXpub}",
      "method": "getBalanceHistoryV2",
      "httpMethod": "get",
      "tag": "Addresses",
      "typeScriptTag": "addresses",
      "description": "Get Balance History V2",
      "parameters": [
        {
          "name": "fromDate",
          "schema": "string",
          "required": false,
          "description": "specifies a start date as a Unix timestamp"
        },
        {
          "name": "toDate",
          "schema": "string",
          "required": false,
          "description": "specifies an end date as a Unix timestamp"
        },
        {
          "name": "fiatcurrency",
          "schema": "string",
          "required": false,
          "description": "if specified, the response will contain secondary (fiat) rate at the time of transaction. If not, all available currencies will be returned"
        },
        {
          "name": "groupBy",
          "schema": "number",
          "required": false,
          "description": "an interval in seconds, to group results by. Default is 3600 seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{blockchain}/v2/block-index/{blockHeight}",
      "method": "getBlockHashV2",
      "httpMethod": "get",
      "tag": "Blocks",
      "typeScriptTag": "blocks",
      "description": "Get block hash V2",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{blockchain}/v2/block/{blockHashOrHeight}",
      "method": "getBlockV2",
      "httpMethod": "get",
      "tag": "Blocks",
      "typeScriptTag": "blocks",
      "description": "Get Block V2",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "specifies page of returned transactions, starting from 1. If out of range, Blockbook returns the closest possible page."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "number of transactions returned by call (default and maximum 1000)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{blockchain}/v2/estimatefee/{confirmationTarget}",
      "method": "getEstimateFeeV2",
      "httpMethod": "get",
      "tag": "Fee Estimation",
      "typeScriptTag": "feeEstimation",
      "description": "Estimate transaction fee V2",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{blockchain}/v2/mempool/",
      "method": "getMempoolV2",
      "httpMethod": "get",
      "tag": "Transactions",
      "typeScriptTag": "transactions",
      "description": "Get Mempool V2",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "specifies page of returned transactions, starting from 1. If out of range, Blockbook returns the closest possible page."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "number of transactions returned by call (default and maximum 1000)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{blockchain}/v2/nft/{nftContract}/{nftTokenId}",
      "method": "getNftMetaV2",
      "httpMethod": "get",
      "tag": "NFT",
      "typeScriptTag": "nft",
      "description": "Get NFT metadata V2",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{blockchain}/v2/rawblock/{blockHashOrHeight}",
      "method": "getRawBlockV2",
      "httpMethod": "get",
      "tag": "Blocks",
      "typeScriptTag": "blocks",
      "description": "Get raw block data V2",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{blockchain}/v2/sendtx/",
      "method": "postSendTxV2",
      "httpMethod": "post",
      "tag": "Transactions",
      "typeScriptTag": "transactions",
      "description": "Send transaction (POST) V2",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{blockchain}/v2/sendtx/{hex}",
      "method": "getSendTxV2",
      "httpMethod": "get",
      "tag": "Transactions",
      "typeScriptTag": "transactions",
      "description": "Send transaction (in URL) V2",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{blockchain}/v2/tickers-list/",
      "method": "getTickersListV2",
      "httpMethod": "get",
      "tag": "Tickers",
      "typeScriptTag": "tickers",
      "description": "Get Tickers list V2",
      "parameters": [
        {
          "name": "timestamp",
          "schema": "string",
          "required": false,
          "description": "specifies a Unix timestamp to (/tickers-list) return available tickers for or (/tickers) that specifies a date to return currency rates for. If not specified, the last available rate will be returned."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{blockchain}/v2/tickers/",
      "method": "getTickersV2",
      "httpMethod": "get",
      "tag": "Tickers",
      "typeScriptTag": "tickers",
      "description": "Get Tickers V2",
      "parameters": [
        {
          "name": "timestamp",
          "schema": "string",
          "required": false,
          "description": "specifies a Unix timestamp to (/tickers-list) return available tickers for or (/tickers) that specifies a date to return currency rates for. If not specified, the last available rate will be returned."
        },
        {
          "name": "currency",
          "schema": "string",
          "required": false,
          "description": "specifies a currency of returned rate (\"usd\", \"eur\", \"eth\"...). If not specified, all available currencies will be returned"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{blockchain}/v2/tx-specific/{txId}",
      "method": "getTxSpecificV2",
      "httpMethod": "get",
      "tag": "Transactions",
      "typeScriptTag": "transactions",
      "description": "Get transaction (as is from Backend) V2",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{blockchain}/v2/tx/{txId}",
      "method": "getTransactionV2",
      "httpMethod": "get",
      "tag": "Transactions",
      "typeScriptTag": "transactions",
      "description": "Get transaction V2",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{blockchain}/v2/utxo/{addressOrXpub}",
      "method": "getUtxov2",
      "httpMethod": "get",
      "tag": "Addresses",
      "typeScriptTag": "addresses",
      "description": "Get UTXO V2",
      "parameters": [
        {
          "name": "confirmed",
          "schema": "boolean",
          "required": false,
          "description": "confirmed=true disables return of unconfirmed transactions"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/{blockchain}/v2/xpub/{xpub}",
      "method": "getXpubV2",
      "httpMethod": "get",
      "tag": "Addresses",
      "typeScriptTag": "addresses",
      "description": "Get xpub V2",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": "specifies page of returned transactions, starting from 1. If out of range, Blockbook returns the closest possible page."
        },
        {
          "name": "pageSize",
          "schema": "integer",
          "required": false,
          "description": "number of transactions returned by call (default and maximum 1000)"
        },
        {
          "name": "fromBlock",
          "schema": "integer",
          "required": false,
          "description": "filter of the returned transactions from block height to block height (default no filter)"
        },
        {
          "name": "toBlock",
          "schema": "integer",
          "required": false,
          "description": "filter of the returned transactions from block height to block height (default no filter)"
        },
        {
          "name": "details",
          "schema": "string",
          "required": false,
          "description": "specifies level of details returned by request"
        },
        {
          "name": "tokens",
          "schema": "string",
          "required": false,
          "description": "specifies what tokens (xpub addresses) are returned by the request (default nonzero)"
        },
        {
          "name": "secondary",
          "schema": "string",
          "required": false,
          "description": "specifies secondary (fiat) currency in which the token and total balances are returned in addition to crypto values"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://api.chain49.com",
  "apiDescription": "Kickstart your next crypto project - extended trezor/blockbook API with 10+ blockchains available instantly and 50+ possible on request running on the finest hardware in Germany's best datacenters at Hetzner\n\nWebsocket only via api.chain49.com endpoint possible (RapidAPI does not support it yet)",
  "apiTitle": "Chain49 API",
  "endpoints": 18,
  "sdkMethods": 36,
  "schemas": 0,
  "parameters": 26,
  "contactUrl": "https://chain49.com/",
  "contactEmail": "contact@chain49.com",
  "difficultyScore": 42.5,
  "difficulty": "Easy"
}