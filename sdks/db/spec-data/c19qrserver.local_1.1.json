{
  "providerName": "c19qrserver.local",
  "openApiRaw": "https://raw.githubusercontent.com/aijaz/qrCodeSigninServer/main/openapi.yaml",
  "securitySchemes": {
    "TokenHeader": {
      "description": "Token to authorize requests.",
      "in": "header",
      "name": "token",
      "type": "apiKey"
    }
  },
  "homepage": "c19qrserver.local",
  "apiVersion": "1.1",
  "methods": [
    {
      "url": "/changePassword",
      "method": "/changePasswordPost",
      "httpMethod": "post",
      "tag": "Passwords",
      "typeScriptTag": "passwords",
      "description": "Used for changing your password",
      "parameters": [
        {
          "name": "old_password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": "Invalid token"
        }
      ]
    },
    {
      "url": "/login",
      "method": "/loginPost",
      "httpMethod": "post",
      "tag": "Authentication",
      "typeScriptTag": "authentication",
      "description": "Log in to get an API token",
      "parameters": [
        {
          "name": "email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "source",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Payload of successful login"
        },
        {
          "statusCode": "401",
          "description": "Invalid token"
        }
      ]
    },
    {
      "url": "/logout",
      "method": "/logoutPost",
      "httpMethod": "post",
      "tag": "Authentication",
      "typeScriptTag": "authentication",
      "description": "Log out",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/requestPasswordReset",
      "method": "/requestPasswordResetPost",
      "httpMethod": "post",
      "tag": "Passwords",
      "typeScriptTag": "passwords",
      "description": "Used for requesting a password reset code",
      "parameters": [
        {
          "name": "email",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "This object contains the password reset code for the user"
        },
        {
          "statusCode": "401",
          "description": "Invalid token"
        }
      ]
    },
    {
      "url": "/signin",
      "method": "/signinPost",
      "httpMethod": "post",
      "tag": "Attendees signins",
      "typeScriptTag": "attendeesSignins",
      "description": "Create a new signin record",
      "parameters": [
        {
          "name": "dt",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "phone",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Response when you successfully create a signin record"
        },
        {
          "statusCode": "401",
          "description": "Invalid token"
        },
        {
          "statusCode": "503",
          "description": "Key Failure"
        }
      ]
    },
    {
      "url": "/signin/{signinId}",
      "method": "/signin/{signinId}Delete",
      "httpMethod": "delete",
      "tag": "Attendees signins",
      "typeScriptTag": "attendeesSignins",
      "description": "Delete a signin record",
      "parameters": [
        {
          "name": "signinId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the signin record to be deleted."
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": "Invalid token"
        }
      ]
    },
    {
      "url": "/signin/{signinId}",
      "method": "/signin/{signinId}Get",
      "httpMethod": "get",
      "tag": "Attendees signins",
      "typeScriptTag": "attendeesSignins",
      "description": "Retrieve the information associated with a signin record",
      "parameters": [
        {
          "name": "signinId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the signin record to be retrieved."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Payload of signin object"
        },
        {
          "statusCode": "401",
          "description": "Invalid token"
        }
      ]
    },
    {
      "url": "/signin/{signinId}",
      "method": "/signin/{signinId}Put",
      "httpMethod": "put",
      "tag": "Attendees signins",
      "typeScriptTag": "attendeesSignins",
      "description": "Update a signin record",
      "parameters": [
        {
          "name": "signinId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the signin record to be retrieved."
        },
        {
          "name": "dt",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "phone",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A team member user record"
        },
        {
          "statusCode": "401",
          "description": "Invalid token"
        }
      ]
    },
    {
      "url": "/signins",
      "method": "/signinsGet",
      "httpMethod": "get",
      "tag": "Attendees signins",
      "typeScriptTag": "attendeesSignins",
      "description": "Get signin info",
      "parameters": [
        {
          "name": "lessThan",
          "schema": "integer",
          "required": false,
          "description": "Return signins with IDs less than this value."
        },
        {
          "name": "returnCount",
          "schema": "integer",
          "required": false,
          "description": "Return this many objects"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": "Invalid token"
        },
        {
          "statusCode": "503",
          "description": "Key Failure"
        }
      ]
    },
    {
      "url": "/user",
      "method": "/userPost",
      "httpMethod": "post",
      "tag": "Team Members",
      "typeScriptTag": "teamMembers",
      "description": "Create a user",
      "parameters": [
        {
          "name": "admin",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "read_only",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "The object that's returned when a user record is created."
        },
        {
          "statusCode": "401",
          "description": "Invalid token"
        }
      ]
    },
    {
      "url": "/user/{userId}",
      "method": "/user/{userId}Delete",
      "httpMethod": "delete",
      "tag": "Team Members",
      "typeScriptTag": "teamMembers",
      "description": "Delete a team member's user record",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the user record to be deleted."
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": "Invalid token"
        }
      ]
    },
    {
      "url": "/user/{userId}",
      "method": "/user/{userId}Get",
      "httpMethod": "get",
      "tag": "Team Members",
      "typeScriptTag": "teamMembers",
      "description": "Retrieve the information associated with a team member's user record",
      "parameters": [
        {
          "name": "userId",
          "schema": "integer",
          "required": true,
          "description": "The ID of the user record to be retrieved."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "A team member user record"
        },
        {
          "statusCode": "401",
          "description": "Invalid token"
        }
      ]
    },
    {
      "url": "/users",
      "method": "/usersGet",
      "httpMethod": "get",
      "tag": "Team Members",
      "typeScriptTag": "teamMembers",
      "description": "Retrieve the information associated with all team members' user records",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": "Invalid token"
        }
      ]
    },
    {
      "url": "/verifyPasswordChange",
      "method": "/verifyPasswordChangePost",
      "httpMethod": "post",
      "tag": "Passwords",
      "typeScriptTag": "passwords",
      "description": "Used for resetting your password when you forgot it",
      "parameters": [
        {
          "name": "guid",
          "schema": "string",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": "Invalid token"
        }
      ]
    }
  ],
  "apiBaseUrl": "http://c19qrserver.local",
  "apiDescription": "This is the API for the COVID-19 Contact Tracing QRCode Signin Server",
  "apiTitle": "API for the COVID-19 Tracking QR Code Signin Server.",
  "endpoints": 11,
  "sdkMethods": 14,
  "schemas": 8,
  "parameters": 29,
  "difficultyScore": 25.25,
  "difficulty": "Easy"
}