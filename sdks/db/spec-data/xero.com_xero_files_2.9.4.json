{
  "providerName": "xero.com",
  "openApiRaw": "https://raw.githubusercontent.com/XeroAPI/Xero-OpenAPI/master/xero_files.yaml",
  "securitySchemes": {
    "OAuth2": {
      "description": "For more information",
      "flows": {
        "authorizationCode": {
          "authorizationUrl": "https://login.xero.com/identity/connect/authorize",
          "scopes": {
            "email": "Grant read-only access to your email",
            "files": "Grant read-write access to files and folders",
            "files.read": "Grant read-only access to files and folders",
            "openid": "Grant read-only access to your open id",
            "profile": "your profile information"
          },
          "tokenUrl": "https://identity.xero.com/connect/token"
        }
      },
      "type": "oauth2"
    }
  },
  "homepage": "xero.com",
  "serviceName": "xero_files",
  "apiVersion": "2.9.4",
  "methods": [
    {
      "url": "/Associations/{ObjectId}",
      "method": "getAssociationsByObject",
      "httpMethod": "get",
      "tag": "Files",
      "typeScriptTag": "files",
      "description": "Retrieves an association object using a unique object ID",
      "parameters": [
        {
          "name": "objectId",
          "schema": "string",
          "required": true,
          "description": "Object id for single object"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Files",
      "method": "getFiles",
      "httpMethod": "get",
      "tag": "Files",
      "typeScriptTag": "files",
      "description": "Retrieves files",
      "parameters": [
        {
          "name": "pagesize",
          "schema": "integer",
          "description": "pass an optional page size value"
        },
        {
          "name": "page",
          "schema": "integer",
          "description": "number of records to skip for pagination"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "values to sort by"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Files",
      "method": "uploadFile",
      "httpMethod": "post",
      "tag": "Files",
      "typeScriptTag": "files",
      "description": "Uploads a File",
      "parameters": [
        {
          "name": "folderId",
          "schema": "string",
          "description": "pass an optional folder id to save file to specific folder"
        },
        {
          "name": "body",
          "schema": "string",
          "description": ""
        },
        {
          "name": "filename",
          "schema": "string",
          "description": ""
        },
        {
          "name": "mimeType",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/Files/{FileId}",
      "method": "deleteFile",
      "httpMethod": "delete",
      "tag": "Files",
      "typeScriptTag": "files",
      "description": "Deletes a specific file",
      "parameters": [
        {
          "name": "fileId",
          "schema": "string",
          "required": true,
          "description": "File id for single object"
        }
      ],
      "responses": []
    },
    {
      "url": "/Files/{FileId}",
      "method": "getFile",
      "httpMethod": "get",
      "tag": "Files",
      "typeScriptTag": "files",
      "description": "Retrieves a file by a unique file ID",
      "parameters": [
        {
          "name": "fileId",
          "schema": "string",
          "required": true,
          "description": "File id for single object"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Files/{FileId}",
      "method": "updateFile",
      "httpMethod": "put",
      "tag": "Files",
      "typeScriptTag": "files",
      "description": "Update a file",
      "parameters": [
        {
          "name": "fileId",
          "schema": "string",
          "required": true,
          "description": "File id for single object"
        },
        {
          "name": "CreatedDateUtc",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "FolderId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "Id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "MimeType",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "Name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "Size",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "UpdatedDateUtc",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "User",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/Files/{FileId}/Associations",
      "method": "getFileAssociations",
      "httpMethod": "get",
      "tag": "Files",
      "typeScriptTag": "files",
      "description": "Retrieves a specific file associations",
      "parameters": [
        {
          "name": "fileId",
          "schema": "string",
          "required": true,
          "description": "File id for single object"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Files/{FileId}/Associations",
      "method": "createFileAssociation",
      "httpMethod": "post",
      "tag": "Files",
      "typeScriptTag": "files",
      "description": "Creates a new file association",
      "parameters": [
        {
          "name": "fileId",
          "schema": "string",
          "required": true,
          "description": "File id for single object"
        },
        {
          "name": "FileId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ObjectGroup",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ObjectId",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ObjectType",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/Files/{FileId}/Associations/{ObjectId}",
      "method": "deleteFileAssociation",
      "httpMethod": "delete",
      "tag": "Files",
      "typeScriptTag": "files",
      "description": "Deletes an existing file association",
      "parameters": [
        {
          "name": "fileId",
          "schema": "string",
          "required": true,
          "description": "File id for single object"
        },
        {
          "name": "objectId",
          "schema": "string",
          "required": true,
          "description": "Object id for single object"
        }
      ],
      "responses": []
    },
    {
      "url": "/Files/{FileId}/Content",
      "method": "getFileContent",
      "httpMethod": "get",
      "tag": "Files",
      "typeScriptTag": "files",
      "description": "Retrieves the content of a specific file",
      "parameters": [
        {
          "name": "fileId",
          "schema": "string",
          "required": true,
          "description": "File id for single object"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Folders",
      "method": "getFolders",
      "httpMethod": "get",
      "tag": "Files",
      "typeScriptTag": "files",
      "description": "Retrieves folders",
      "parameters": [
        {
          "name": "sort",
          "schema": "string",
          "description": "values to sort by"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Folders",
      "method": "createFolder",
      "httpMethod": "post",
      "tag": "Files",
      "typeScriptTag": "files",
      "description": "Creates a new folder",
      "parameters": [
        {
          "name": "Email",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "FileCount",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "Id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "IsInbox",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "Name",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/Folders/{FolderId}",
      "method": "deleteFolder",
      "httpMethod": "delete",
      "tag": "Files",
      "typeScriptTag": "files",
      "description": "Deletes a folder",
      "parameters": [
        {
          "name": "folderId",
          "schema": "string",
          "required": true,
          "description": "Folder id for single object"
        }
      ],
      "responses": []
    },
    {
      "url": "/Folders/{FolderId}",
      "method": "getFolder",
      "httpMethod": "get",
      "tag": "Files",
      "typeScriptTag": "files",
      "description": "Retrieves specific folder by using a unique folder ID",
      "parameters": [
        {
          "name": "folderId",
          "schema": "string",
          "required": true,
          "description": "Folder id for single object"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/Folders/{FolderId}",
      "method": "updateFolder",
      "httpMethod": "put",
      "tag": "Files",
      "typeScriptTag": "files",
      "description": "Updates an existing folder",
      "parameters": [
        {
          "name": "folderId",
          "schema": "string",
          "required": true,
          "description": "Folder id for single object"
        },
        {
          "name": "Email",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "FileCount",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "Id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "IsInbox",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "Name",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/Inbox",
      "method": "getInbox",
      "httpMethod": "get",
      "tag": "Files",
      "typeScriptTag": "files",
      "description": "Retrieves inbox folder",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://api.xero.com/files.xro/1.0/",
  "apiDescription": "These endpoints are specific to Xero Files API",
  "apiTitle": "Xero Files API",
  "endpoints": 9,
  "sdkMethods": 25,
  "schemas": 8,
  "parameters": 43,
  "contactUrl": "https://developer.xero.com",
  "contactEmail": "api@xero.com",
  "difficultyScore": 39.75,
  "difficulty": "Easy"
}