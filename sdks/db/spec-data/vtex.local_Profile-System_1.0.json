{
  "providerName": "vtex.local",
  "openApiRaw": "https://raw.githubusercontent.com/vtex/openapi-schemas/master/VTEX - Profile System.json",
  "securitySchemes": {
    "appKey": {
      "in": "header",
      "name": "X-VTEX-API-AppKey",
      "type": "apiKey"
    },
    "appToken": {
      "in": "header",
      "name": "X-VTEX-API-AppToken",
      "type": "apiKey"
    }
  },
  "homepage": "vtex.local",
  "serviceName": "Profile-System",
  "apiVersion": "1.0",
  "methods": [
    {
      "url": "/api/storage/profile-system/profiles",
      "method": "createClientProfile",
      "httpMethod": "post",
      "tag": "Profiles",
      "typeScriptTag": "profiles",
      "description": "Create client profile",
      "parameters": [
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "ttl",
          "schema": "integer",
          "required": false,
          "description": "This parameter sets the the Time To Live (TTL), in days, of the specific document being created or updated with this request. After this period of time from the moment of the request, the document is deleted. By sending this parameter you override the TTL set for the schema.\n\r\n\r> Currently, the available default document schemas have no TTL. This means that documents are stored indefinitely, unless a TTL is sent when creating or updating."
        },
        {
          "name": "birthDate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "document",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "documentType",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "firstName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "lastName",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/storage/profile-system/profiles/schema",
      "method": "createOrUpdateProfileSchema",
      "httpMethod": "put",
      "tag": "Schemas",
      "typeScriptTag": "schemas",
      "description": "Create or update profile schema",
      "parameters": [
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "description",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "documentTTL",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "properties",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "required",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "v-indexed",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "v-unique",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "version",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/storage/profile-system/profiles/{profileId}",
      "method": "deleteClientProfile",
      "httpMethod": "delete",
      "tag": "Profiles",
      "typeScriptTag": "profiles",
      "description": "Delete client profile",
      "parameters": [
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "profileId",
          "schema": "string",
          "required": true,
          "description": "ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter."
        }
      ],
      "responses": []
    },
    {
      "url": "/api/storage/profile-system/profiles/{profileId}",
      "method": "getProfile",
      "httpMethod": "get",
      "tag": "Profiles",
      "typeScriptTag": "profiles",
      "description": "Get profile",
      "parameters": [
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "profileId",
          "schema": "string",
          "required": true,
          "description": "ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter."
        },
        {
          "name": "alternativeKey",
          "schema": "string",
          "required": false,
          "description": "The `profileId` path parameter may be substituted by other profile fields in this request. When making this request, send the `alternativeKey` parameter with a value equal to the key of the field you wish to use as `profileId`.\n\r\n\r> Currently, there are two possible values for this parameter: `email` and `document`."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/storage/profile-system/profiles/{profileId}",
      "method": "updateClientProfile",
      "httpMethod": "patch",
      "tag": "Profiles",
      "typeScriptTag": "profiles",
      "description": "Updates client profile",
      "parameters": [
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "profileId",
          "schema": "string",
          "required": true,
          "description": "ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter."
        },
        {
          "name": "alternativeKey",
          "schema": "string",
          "required": false,
          "description": "The `profileId` path parameter may be substituted by other profile fields in this request. When making this request, send the `alternativeKey` parameter with a value equal to the key of the field you wish to use as `profileId`.\n\r\n\r> Currently, there are two possible values for this parameter: `email` and `document`."
        },
        {
          "name": "ttl",
          "schema": "integer",
          "required": false,
          "description": "This parameter sets the the Time To Live (TTL), in days, of the specific document being created or updated with this request. After this period of time from the moment of the request, the document is deleted. By sending this parameter you override the TTL set for the schema.\n\r\n\r> Currently, the available default document schemas have no TTL. This means that documents are stored indefinitely, unless a TTL is sent when creating or updating."
        },
        {
          "name": "birthDate",
          "schema": "string",
          "description": ""
        },
        {
          "name": "document",
          "schema": "string",
          "description": ""
        },
        {
          "name": "documentType",
          "schema": "string",
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "firstName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "lastName",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/storage/profile-system/profiles/{profileId}/addresses",
      "method": "getClientAddresses",
      "httpMethod": "get",
      "tag": "Addresses",
      "typeScriptTag": "addresses",
      "description": "Get client addresses",
      "parameters": [
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "profileId",
          "schema": "string",
          "required": true,
          "description": "ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter."
        },
        {
          "name": "alternativeKey",
          "schema": "string",
          "required": false,
          "description": "The `profileId` path parameter may be substituted by other profile fields in this request. When making this request, send the `alternativeKey` parameter with a value equal to the key of the field you wish to use as `profileId`.\n\r\n\r> Currently, there are two possible values for this parameter: `email` and `document`."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/storage/profile-system/profiles/{profileId}/addresses",
      "method": "createClientAddress",
      "httpMethod": "post",
      "tag": "Addresses",
      "typeScriptTag": "addresses",
      "description": "Create client address",
      "parameters": [
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "profileId",
          "schema": "string",
          "required": true,
          "description": "ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter."
        },
        {
          "name": "alternativeKey",
          "schema": "string",
          "required": false,
          "description": "The `profileId` path parameter may be substituted by other profile fields in this request. When making this request, send the `alternativeKey` parameter with a value equal to the key of the field you wish to use as `profileId`.\n\r\n\r> Currently, there are two possible values for this parameter: `email` and `document`."
        },
        {
          "name": "administrativeAreaLevel1",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "countryCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "countryName",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "locality",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "localityAreaLevel1",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "postalCode",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "route",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "streetNumber",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/storage/profile-system/profiles/{profileId}/addresses/unmask",
      "method": "getUnmaskedClientAddresses",
      "httpMethod": "get",
      "tag": "Addresses",
      "typeScriptTag": "addresses",
      "description": "Get unmasked client addresses",
      "parameters": [
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "profileId",
          "schema": "string",
          "required": true,
          "description": "ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter."
        },
        {
          "name": "alternativeKey",
          "schema": "string",
          "required": false,
          "description": "The `profileId` path parameter may be substituted by other profile fields in this request. When making this request, send the `alternativeKey` parameter with a value equal to the key of the field you wish to use as `profileId`.\n\r\n\r> Currently, there are two possible values for this parameter: `email` and `document`."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/storage/profile-system/profiles/{profileId}/addresses/{addressId}",
      "method": "deleteAddress",
      "httpMethod": "delete",
      "tag": "Addresses",
      "typeScriptTag": "addresses",
      "description": "Delete address",
      "parameters": [
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "profileId",
          "schema": "string",
          "required": true,
          "description": "ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter."
        },
        {
          "name": "addressId",
          "schema": "string",
          "required": true,
          "description": "ID of a client's specific address as returned in the Create client address endpoint's response, in the `id` field."
        },
        {
          "name": "alternativeKey",
          "schema": "string",
          "required": false,
          "description": "The `profileId` path parameter may be substituted by other profile fields in this request. When making this request, send the `alternativeKey` parameter with a value equal to the key of the field you wish to use as `profileId`.\n\r\n\r> Currently, there are two possible values for this parameter: `email` and `document`."
        }
      ],
      "responses": []
    },
    {
      "url": "/api/storage/profile-system/profiles/{profileId}/addresses/{addressId}",
      "method": "getAddress",
      "httpMethod": "get",
      "tag": "Addresses",
      "typeScriptTag": "addresses",
      "description": "Get address",
      "parameters": [
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "profileId",
          "schema": "string",
          "required": true,
          "description": "ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter."
        },
        {
          "name": "addressId",
          "schema": "string",
          "required": true,
          "description": "ID of a client's specific address as returned in the Create client address endpoint's response, in the `id` field."
        },
        {
          "name": "alternativeKey",
          "schema": "string",
          "required": false,
          "description": "The `profileId` path parameter may be substituted by other profile fields in this request. When making this request, send the `alternativeKey` parameter with a value equal to the key of the field you wish to use as `profileId`.\n\r\n\r> Currently, there are two possible values for this parameter: `email` and `document`."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/storage/profile-system/profiles/{profileId}/addresses/{addressId}",
      "method": "updateClientAddress",
      "httpMethod": "patch",
      "tag": "Addresses",
      "typeScriptTag": "addresses",
      "description": "Update client address",
      "parameters": [
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "profileId",
          "schema": "string",
          "required": true,
          "description": "ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter."
        },
        {
          "name": "addressId",
          "schema": "string",
          "required": true,
          "description": "ID of a client's specific address as returned in the Create client address endpoint's response, in the `id` field."
        },
        {
          "name": "alternativeKey",
          "schema": "string",
          "required": false,
          "description": "The `profileId` path parameter may be substituted by other profile fields in this request. When making this request, send the `alternativeKey` parameter with a value equal to the key of the field you wish to use as `profileId`.\n\r\n\r> Currently, there are two possible values for this parameter: `email` and `document`."
        },
        {
          "name": "administrativeAreaLevel1",
          "schema": "string",
          "description": ""
        },
        {
          "name": "countryCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "countryName",
          "schema": "string",
          "description": ""
        },
        {
          "name": "locality",
          "schema": "string",
          "description": ""
        },
        {
          "name": "localityAreaLevel1",
          "schema": "string",
          "description": ""
        },
        {
          "name": "postalCode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "route",
          "schema": "string",
          "description": ""
        },
        {
          "name": "streetNumber",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/storage/profile-system/profiles/{profileId}/addresses/{addressId}/unmask",
      "method": "getUnmaskedAddress",
      "httpMethod": "get",
      "tag": "Addresses",
      "typeScriptTag": "addresses",
      "description": "Get unmasked address",
      "parameters": [
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "profileId",
          "schema": "string",
          "required": true,
          "description": "ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter."
        },
        {
          "name": "addressId",
          "schema": "string",
          "required": true,
          "description": "ID of a client's specific address as returned in the Create client address endpoint's response, in the `id` field."
        },
        {
          "name": "reason",
          "schema": "string",
          "required": true,
          "description": "Reason for requesting unmasked data."
        },
        {
          "name": "alternativeKey",
          "schema": "string",
          "required": false,
          "description": "The `profileId` path parameter may be substituted by other profile fields in this request. When making this request, send the `alternativeKey` parameter with a value equal to the key of the field you wish to use as `profileId`.\n\r\n\r> Currently, there are two possible values for this parameter: `email` and `document`."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/storage/profile-system/profiles/{profileId}/addresses/{addressId}/versions/{addressVersionId}",
      "method": "getAddressByVersion",
      "httpMethod": "get",
      "tag": "Addresses",
      "typeScriptTag": "addresses",
      "description": "Get address by version",
      "parameters": [
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "profileId",
          "schema": "string",
          "required": true,
          "description": "ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter."
        },
        {
          "name": "addressId",
          "schema": "string",
          "required": true,
          "description": "ID of a client's specific address as returned in the Create client address endpoint's response, in the `id` field."
        },
        {
          "name": "addressVersionId",
          "schema": "string",
          "required": true,
          "description": "ID of the version of a given client's address as returned by endpoints that create or update address information in the `version` field."
        },
        {
          "name": "reason",
          "schema": "string",
          "required": true,
          "description": "Reason for requesting unmasked data."
        },
        {
          "name": "alternativeKey",
          "schema": "string",
          "required": false,
          "description": "The `profileId` path parameter may be substituted by other profile fields in this request. When making this request, send the `alternativeKey` parameter with a value equal to the key of the field you wish to use as `profileId`.\n\r\n\r> Currently, there are two possible values for this parameter: `email` and `document`."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/storage/profile-system/profiles/{profileId}/addresses/{addressId}/versions/{addressVersionId}/unmask",
      "method": "getUnmaskedAddressByVersion",
      "httpMethod": "get",
      "tag": "Addresses",
      "typeScriptTag": "addresses",
      "description": "Get unmasked address by version",
      "parameters": [
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "profileId",
          "schema": "string",
          "required": true,
          "description": "ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter."
        },
        {
          "name": "addressId",
          "schema": "string",
          "required": true,
          "description": "ID of a client's specific address as returned in the Create client address endpoint's response, in the `id` field."
        },
        {
          "name": "addressVersionId",
          "schema": "string",
          "required": true,
          "description": "ID of the version of a given client's address as returned by endpoints that create or update address information in the `version` field."
        },
        {
          "name": "reason",
          "schema": "string",
          "required": true,
          "description": "Reason for requesting unmasked data."
        },
        {
          "name": "alternativeKey",
          "schema": "string",
          "required": false,
          "description": "The `profileId` path parameter may be substituted by other profile fields in this request. When making this request, send the `alternativeKey` parameter with a value equal to the key of the field you wish to use as `profileId`.\n\r\n\r> Currently, there are two possible values for this parameter: `email` and `document`."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/storage/profile-system/profiles/{profileId}/purchase-info",
      "method": "deletePurchaseInformation",
      "httpMethod": "delete",
      "tag": "Purchase information",
      "typeScriptTag": "purchaseInformation",
      "description": "Delete purchase information",
      "parameters": [
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "profileId",
          "schema": "string",
          "required": true,
          "description": "ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter."
        },
        {
          "name": "alternativeKey",
          "schema": "string",
          "required": false,
          "description": "The `profileId` path parameter may be substituted by other profile fields in this request. When making this request, send the `alternativeKey` parameter with a value equal to the key of the field you wish to use as `profileId`.\n\r\n\r> Currently, there are two possible values for this parameter: `email` and `document`."
        }
      ],
      "responses": []
    },
    {
      "url": "/api/storage/profile-system/profiles/{profileId}/purchase-info",
      "method": "getPurchaseInformation",
      "httpMethod": "get",
      "tag": "Purchase information",
      "typeScriptTag": "purchaseInformation",
      "description": "Get purchase information",
      "parameters": [
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "profileId",
          "schema": "string",
          "required": true,
          "description": "ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter."
        },
        {
          "name": "alternativeKey",
          "schema": "string",
          "required": false,
          "description": "The `profileId` path parameter may be substituted by other profile fields in this request. When making this request, send the `alternativeKey` parameter with a value equal to the key of the field you wish to use as `profileId`.\n\r\n\r> Currently, there are two possible values for this parameter: `email` and `document`."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/storage/profile-system/profiles/{profileId}/purchase-info",
      "method": "updatePurchaseInformation",
      "httpMethod": "patch",
      "tag": "Purchase information",
      "typeScriptTag": "purchaseInformation",
      "description": "Update purchase information",
      "parameters": [
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "profileId",
          "schema": "string",
          "required": true,
          "description": "ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter."
        },
        {
          "name": "alternativeKey",
          "schema": "string",
          "required": false,
          "description": "The `profileId` path parameter may be substituted by other profile fields in this request. When making this request, send the `alternativeKey` parameter with a value equal to the key of the field you wish to use as `profileId`.\n\r\n\r> Currently, there are two possible values for this parameter: `email` and `document`."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/storage/profile-system/profiles/{profileId}/purchase-info",
      "method": "createPurchaseInformation",
      "httpMethod": "post",
      "tag": "Purchase information",
      "typeScriptTag": "purchaseInformation",
      "description": "Create purchase information",
      "parameters": [
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "profileId",
          "schema": "string",
          "required": true,
          "description": "ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter."
        },
        {
          "name": "alternativeKey",
          "schema": "string",
          "required": false,
          "description": "The `profileId` path parameter may be substituted by other profile fields in this request. When making this request, send the `alternativeKey` parameter with a value equal to the key of the field you wish to use as `profileId`.\n\r\n\r> Currently, there are two possible values for this parameter: `email` and `document`."
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/storage/profile-system/profiles/{profileId}/purchase-info/unmask",
      "method": "getUnmaskedPurchaseInformation",
      "httpMethod": "get",
      "tag": "Purchase information",
      "typeScriptTag": "purchaseInformation",
      "description": "Get unmasked purchase information",
      "parameters": [
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "profileId",
          "schema": "string",
          "required": true,
          "description": "ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/storage/profile-system/profiles/{profileId}/unmask",
      "method": "getUnmaskedProfile",
      "httpMethod": "get",
      "tag": "Profiles",
      "typeScriptTag": "profiles",
      "description": "Get unmasked profile",
      "parameters": [
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "profileId",
          "schema": "string",
          "required": true,
          "description": "ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter."
        },
        {
          "name": "reason",
          "schema": "string",
          "required": true,
          "description": "Reason for requesting unmasked data."
        },
        {
          "name": "alternativeKey",
          "schema": "string",
          "required": false,
          "description": "The `profileId` path parameter may be substituted by other profile fields in this request. When making this request, send the `alternativeKey` parameter with a value equal to the key of the field you wish to use as `profileId`.\n\r\n\r> Currently, there are two possible values for this parameter: `email` and `document`."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/storage/profile-system/profiles/{profileId}/versions/{profileVersionId}",
      "method": "getProfileByVersion",
      "httpMethod": "get",
      "tag": "Profiles",
      "typeScriptTag": "profiles",
      "description": "Get profile by version",
      "parameters": [
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "profileId",
          "schema": "string",
          "required": true,
          "description": "ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter."
        },
        {
          "name": "profileVersionId",
          "schema": "string",
          "required": true,
          "description": "ID of the version of the client's profile as returned by endpoints that create or update profile information in the `version` field."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/storage/profile-system/profiles/{profileId}/versions/{profileVersionId}/unmask",
      "method": "getUnmaskedProfileByVersion",
      "httpMethod": "get",
      "tag": "Profiles",
      "typeScriptTag": "profiles",
      "description": "Get unmasked profile by version",
      "parameters": [
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "profileId",
          "schema": "string",
          "required": true,
          "description": "ID of the client's profile as returned by the Create profile endpoint's response, in the `id` field. It can also be an `alternativeKey` according to your custom profile schema. In this case, this request should also send the `alternativeKey` parameter."
        },
        {
          "name": "profileVersionId",
          "schema": "string",
          "required": true,
          "description": "ID of the version of the client's profile as returned by endpoints that create or update profile information in the `version` field."
        },
        {
          "name": "reason",
          "schema": "string",
          "required": true,
          "description": "Reason for requesting unmasked data."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/storage/profile-system/prospects",
      "method": "createProspect",
      "httpMethod": "post",
      "tag": "Prospects",
      "typeScriptTag": "prospects",
      "description": "Create prospect",
      "parameters": [
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        }
      ],
      "responses": [
        {
          "statusCode": "201",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/storage/profile-system/prospects/{prospectId}",
      "method": "deleteProspect",
      "httpMethod": "delete",
      "tag": "Prospects",
      "typeScriptTag": "prospects",
      "description": "Delete prospect",
      "parameters": [
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "prospectId",
          "schema": "string",
          "required": true,
          "description": "ID of the prospect as returned by the Create prospect endpoint's response, in the `id` field."
        }
      ],
      "responses": []
    },
    {
      "url": "/api/storage/profile-system/prospects/{prospectId}",
      "method": "getProspect",
      "httpMethod": "get",
      "tag": "Prospects",
      "typeScriptTag": "prospects",
      "description": "Get prospect",
      "parameters": [
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "prospectId",
          "schema": "string",
          "required": true,
          "description": "ID of the prospect as returned by the Create prospect endpoint's response, in the `id` field."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/storage/profile-system/prospects/{prospectId}",
      "method": "updateProspect",
      "httpMethod": "patch",
      "tag": "Prospects",
      "typeScriptTag": "prospects",
      "description": "Update prospect",
      "parameters": [
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "prospectId",
          "schema": "string",
          "required": true,
          "description": "ID of the prospect as returned by the Create prospect endpoint's response, in the `id` field."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/storage/profile-system/prospects/{prospectId}/unmask",
      "method": "getUnmaskedProspect",
      "httpMethod": "get",
      "tag": "Prospects",
      "typeScriptTag": "prospects",
      "description": "Get unmasked prospect",
      "parameters": [
        {
          "name": "contentType",
          "schema": "string",
          "required": true,
          "description": "Type of the content being sent."
        },
        {
          "name": "accept",
          "schema": "string",
          "required": true,
          "description": "HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand."
        },
        {
          "name": "prospectId",
          "schema": "string",
          "required": true,
          "description": "ID of the prospect as returned by the Create prospect endpoint's response, in the `id` field."
        },
        {
          "name": "reason",
          "schema": "string",
          "required": true,
          "description": "Reason for requesting unmasked data."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://vtex.local",
  "apiDescription": "Create shopper profiles and manage their information.",
  "apiTitle": "Profile System",
  "endpoints": 17,
  "sdkMethods": 27,
  "schemas": 4,
  "parameters": 149,
  "difficultyScore": 66.25,
  "difficulty": "Easy"
}