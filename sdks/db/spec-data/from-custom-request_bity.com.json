{
  "securitySchemes": {
    "bity_account_client_oauth": {
      "flows": {
        "clientCredentials": {
          "scopes": {
            "https://auth.bity.com/scopes/exchange.audit": "List and consult all orders associated to a Bity account.",
            "https://auth.bity.com/scopes/exchange.history": "List and consult orders associated to a Bity account and previously placed by the client.",
            "https://auth.bity.com/scopes/exchange.place": "Place orders for a Bity account and consult the details of orders the client previously placed."
          },
          "tokenUrl": "https://connect.bity.com/oauth2/token"
        }
      },
      "type": "oauth2"
    },
    "bity_account_oauth": {
      "flows": {
        "authorizationCode": {
          "authorizationUrl": "https://connect.bity.com/oauth2/auth",
          "scopes": {
            "https://auth.bity.com/scopes/exchange.audit": "List and consult all orders associated to a Bity account.",
            "https://auth.bity.com/scopes/exchange.history": "List and consult orders associated to a Bity account and previously placed by the client.",
            "https://auth.bity.com/scopes/exchange.place": "Place orders for a Bity account and consult the details of orders the client previously placed."
          },
          "tokenUrl": "https://connect.bity.com/oauth2/token"
        }
      },
      "type": "oauth2"
    },
    "client_oauth": {
      "flows": {
        "clientCredentials": {
          "scopes": {
            "https://auth.bity.com/scopes/exchange.client-history": "List and consult orders placed by the authenticated client that have not yet been cancelled or executed, or that have been cancelled or executed recently.",
            "https://auth.bity.com/scopes/exchange.client-history-full": "List and consult orders placed by the authenticated client."
          },
          "tokenUrl": "https://connect.bity.com/oauth2/token"
        }
      },
      "type": "oauth2"
    }
  },
  "apiBaseUrl": "https://exchange.api.bity.com/v2",
  "apiVersion": "2.6.0",
  "apiDescription": "The present document gives the technical details enabling one to make\nrequest to and understand the responses of the Exchange API. Should you\nwant to know what is possible to do with the API, please consult the\nproduct guide or have a look at the\n[product page](https://go.bity.com/Exchange API).\n\nVersion 2 of the Exchange API (this version) is stable and should be\nconsidered reliable. However, Bity reserves itself the right to correct\nbugs in these API endpoints without considering such corrections as being\nbreaking changes.\n\nConnection to the API happens over HTTP/1.1 (RFC 7231) and HTTP State\nManagement (RFC 6265) is required. Most libraries and user-agents allowing\nHTTP requests to be performed already implements that for you as long as\ncookies are not disabled and that you are requesting credentials to be\nincluded in the requests.\n\nAPI clients of registered partners add an optional `Client-ID` header to\nthe requests. This enables partners to benefit from profit sharing. See the\n[corresponding section of the product guide\n](https://doc.bity.com/exchange/guide.html#financial-partners)\nfor more details.\n\nEnd-users can access the order status page via\n[https://go.bity.com/order-status](https://go.bity.com/order-status). A\nlink to the status of a specific order can be constructed by appending the\norder identifier to `https://go.bity.com/order-status?id=`. The order\nstatus page allows to contact the Bity Support Team about a specific order.\n\nThe OpenAPI definition in YAML format is available\n[here](https://doc.bity.com/exchange/exchange_api_v2.openapi.yaml).\n",
  "apiTitle": "Bity Exchange API",
  "endpoints": 13,
  "sdkMethods": 23,
  "schemas": 83,
  "parameters": 20,
  "contactUrl": "https://bity.com/",
  "originalCustomRequest": {
    "type": "GET",
    "url": "https://doc.bity.com/exchange/exchange_api_v2.openapi.yaml"
  },
  "customRequestSpecFilename": "bity.com.yaml",
  "difficultyScore": 69.5,
  "difficulty": "Easy"
}