{
  "providerName": "mist.com",
  "openApiRaw": "https://raw.githubusercontent.com/tmunzer/mist_openapi/main/mist.openapi.yml",
  "homepage": "mist.com",
  "apiVersion": "0.37.7",
  "methods": [
    {
      "url": "/api/v1/const/alarm_defs",
      "method": "listAlarmDefinitions",
      "httpMethod": "get",
      "tag": "Constants",
      "description": "listAlarmDefinitions",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/const/ap_channels",
      "method": "listApChannels",
      "httpMethod": "get",
      "tag": "Constants",
      "description": "listApChannels",
      "parameters": [
        {
          "name": "country_code",
          "schema": "string",
          "description": "country code, in two-character"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/const/ap_led_status",
      "method": "listApLedDefinition",
      "httpMethod": "get",
      "tag": "Constants",
      "description": "listApLedDefinition",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/const/applications",
      "method": "listApplications",
      "httpMethod": "get",
      "tag": "Constants",
      "description": "listApplications",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/const/call_events",
      "method": "listCallEventsDefinitions",
      "httpMethod": "get",
      "tag": "Constants",
      "description": "listCallEventsDefinitions",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/const/client_events",
      "method": "listClientEventsDefinitions",
      "httpMethod": "get",
      "tag": "Constants",
      "description": "listClientEventsDefinitions",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/const/countries",
      "method": "listCountryCodes",
      "httpMethod": "get",
      "tag": "Constants",
      "description": "listCountryCodes",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/const/default_gateway_config",
      "method": "getGatawayDefaultConfig",
      "httpMethod": "get",
      "tag": "Constants",
      "description": "getGatawayDefaultConfig",
      "parameters": [
        {
          "name": "model",
          "schema": "string",
          "description": "model the default gateway config is intended (as the default LAN/WAN port can differ)"
        },
        {
          "name": "ha",
          "schema": "string",
          "description": "whether the config is intended for HA"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/const/device_events",
      "method": "listDeviceEventsDefinitions",
      "httpMethod": "get",
      "tag": "Constants",
      "description": "listDeviceEventsDefinitions",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/const/device_models",
      "method": "listDeviceModels",
      "httpMethod": "get",
      "tag": "Constants",
      "description": "listDeviceModels",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/const/insight_metrics",
      "method": "listSiteAvailableInsightMetrics",
      "httpMethod": "get",
      "tag": "Constants",
      "description": "listSiteAvailableInsightMetrics",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "The property key is the metric name"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/const/languages",
      "method": "listSiteLanguages",
      "httpMethod": "get",
      "tag": "Constants",
      "description": "listSiteLanguages",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/const/mxedge_events",
      "method": "listMxEdgeEventsDefinitions",
      "httpMethod": "get",
      "tag": "Constants",
      "description": "listMxEdgeEventsDefinitions",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/const/mxedge_models",
      "method": "listMxEdgeModels",
      "httpMethod": "get",
      "tag": "Constants",
      "description": "listMxEdgeModels",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/const/traffic_types",
      "method": "listTrafficTypes",
      "httpMethod": "get",
      "tag": "Constants",
      "description": "listTrafficTypes",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "Get Traffic Types Constants"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/installer/orgs/{org_id}/alarmtemplates",
      "method": "listInstallerAlarmTemplates",
      "httpMethod": "get",
      "tag": "Installer",
      "description": "listInstallerAlarmTemplates",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/installer/orgs/{org_id}/deviceprofiles",
      "method": "listInstallerDeviceProfiles",
      "httpMethod": "get",
      "tag": "Installer",
      "description": "listInstallerDeviceProfiles",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/installer/orgs/{org_id}/devices",
      "method": "listInstallerListOfRenctlyClaimedDevices",
      "httpMethod": "get",
      "tag": "Installer",
      "description": "listInstallerListOfRenctlyClaimedDevices",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/installer/orgs/{org_id}/devices",
      "method": "claimInstallerDevices",
      "httpMethod": "post",
      "tag": "Installer",
      "description": "claimInstallerDevices",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/installer/orgs/{org_id}/devices/{device_mac}",
      "method": "unassignInstallerRecentlyClaimedDevice",
      "httpMethod": "delete",
      "tag": "Installer",
      "description": "unassignInstallerRecentlyClaimedDevice",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/installer/orgs/{org_id}/devices/{device_mac}",
      "method": "provisionInstallerDevices",
      "httpMethod": "put",
      "tag": "Installer",
      "description": "provisionInstallerDevices",
      "parameters": [
        {
          "name": "deviceprofile_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "height",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "map_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "orientation",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "replacing_mac",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "role",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "site_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "x",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "y",
          "schema": "number",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/installer/orgs/{org_id}/devices/{device_mac}/locate",
      "method": "startInstallerLocateDevice",
      "httpMethod": "post",
      "tag": "Installer",
      "description": "startInstallerLocateDevice",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/installer/orgs/{org_id}/devices/{device_mac}/unlocate",
      "method": "stopInstallerLocateDevice",
      "httpMethod": "post",
      "tag": "Installer",
      "description": "stopInstallerLocateDevice",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/installer/orgs/{org_id}/devices/{device_mac}/{image_name}",
      "method": "deleteInstallerDeviceImage",
      "httpMethod": "delete",
      "tag": "Installer",
      "description": "deleteInstallerDeviceImage",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/installer/orgs/{org_id}/devices/{device_mac}/{image_name}",
      "method": "addInstallerDeviceImage",
      "httpMethod": "post",
      "tag": "Installer",
      "description": "addInstallerDeviceImage",
      "parameters": [
        {
          "name": "file",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "json",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/installer/orgs/{org_id}/rftemplates",
      "method": "listInstallerRfTemplatesNames",
      "httpMethod": "get",
      "tag": "Installer",
      "description": "listInstallerRfTemplatesNames",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/installer/orgs/{org_id}/secpolicies",
      "method": "listInstallerSecPolicies",
      "httpMethod": "get",
      "tag": "Installer",
      "description": "listInstallerSecPolicies",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/installer/orgs/{org_id}/sitegroups",
      "method": "listInstallerSiteGroups",
      "httpMethod": "get",
      "tag": "Installer",
      "description": "listInstallerSiteGroups",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/installer/orgs/{org_id}/sites",
      "method": "listInstallerSites",
      "httpMethod": "get",
      "tag": "Installer",
      "description": "listInstallerSites",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/installer/orgs/{org_id}/sites/{site_name}",
      "method": "createOrUpdateInstallerSites",
      "httpMethod": "put",
      "tag": "Installer",
      "description": "createOrUpdateInstallerSites",
      "parameters": [
        {
          "name": "address",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "alarmtemplate_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "aptemplate_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "country_code",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "gatewaytemplate_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "latlng",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "networktemplate_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "notes",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "rftemplate_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "secpolicy_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sitegroup_ids",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "sitetemplate_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "timezone",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/installer/orgs/{org_id}/sites/{site_name}/maps",
      "method": "listInstallerMaps",
      "httpMethod": "get",
      "tag": "Installer",
      "description": "listInstallerMaps",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/installer/orgs/{org_id}/sites/{site_name}/maps/import",
      "method": "importInstallerMap",
      "httpMethod": "post",
      "tag": "Installer",
      "description": "importInstallerMap",
      "parameters": [
        {
          "name": "csv",
          "schema": "string",
          "description": ""
        },
        {
          "name": "file",
          "schema": "string",
          "description": ""
        },
        {
          "name": "json",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/installer/orgs/{org_id}/sites/{site_name}/maps/{map_id}",
      "method": "deleteInstallerMap",
      "httpMethod": "delete",
      "tag": "Installer",
      "description": "deleteInstallerMap",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/installer/orgs/{org_id}/sites/{site_name}/maps/{map_id}",
      "method": "createInstallerMap",
      "httpMethod": "post",
      "tag": "Installer",
      "description": "createInstallerMap",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "flags",
          "schema": "object",
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "height",
          "schema": "number",
          "description": ""
        },
        {
          "name": "height_m",
          "schema": "number",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "latlng_br",
          "schema": "object",
          "description": ""
        },
        {
          "name": "latlng_tl",
          "schema": "object",
          "description": ""
        },
        {
          "name": "locked",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "occupancy_limit",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "orientation",
          "schema": "number",
          "description": ""
        },
        {
          "name": "origin_x",
          "schema": "number",
          "description": ""
        },
        {
          "name": "origin_y",
          "schema": "number",
          "description": ""
        },
        {
          "name": "ppm",
          "schema": "number",
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "sitesurvey_path",
          "schema": "array",
          "description": ""
        },
        {
          "name": "thumbnail_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "use_auto_orientation",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "use_auto_placement",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "view",
          "schema": "string",
          "description": ""
        },
        {
          "name": "wall_path",
          "schema": "object",
          "description": ""
        },
        {
          "name": "wayfinding",
          "schema": "object",
          "description": ""
        },
        {
          "name": "wayfinding_path",
          "schema": "object",
          "description": ""
        },
        {
          "name": "width",
          "schema": "number",
          "description": ""
        },
        {
          "name": "width_m",
          "schema": "number",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Map"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/installer/orgs/{org_id}/sites/{site_name}/maps/{map_id}",
      "method": "updateInstallerMap",
      "httpMethod": "put",
      "tag": "Installer",
      "description": "updateInstallerMap",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "flags",
          "schema": "object",
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "height",
          "schema": "number",
          "description": ""
        },
        {
          "name": "height_m",
          "schema": "number",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "latlng_br",
          "schema": "object",
          "description": ""
        },
        {
          "name": "latlng_tl",
          "schema": "object",
          "description": ""
        },
        {
          "name": "locked",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "occupancy_limit",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "orientation",
          "schema": "number",
          "description": ""
        },
        {
          "name": "origin_x",
          "schema": "number",
          "description": ""
        },
        {
          "name": "origin_y",
          "schema": "number",
          "description": ""
        },
        {
          "name": "ppm",
          "schema": "number",
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "sitesurvey_path",
          "schema": "array",
          "description": ""
        },
        {
          "name": "thumbnail_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "use_auto_orientation",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "use_auto_placement",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "view",
          "schema": "string",
          "description": ""
        },
        {
          "name": "wall_path",
          "schema": "object",
          "description": ""
        },
        {
          "name": "wayfinding",
          "schema": "object",
          "description": ""
        },
        {
          "name": "wayfinding_path",
          "schema": "object",
          "description": ""
        },
        {
          "name": "width",
          "schema": "number",
          "description": ""
        },
        {
          "name": "width_m",
          "schema": "number",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Map"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/installer/sites/{site_name}/optimize",
      "method": "optimizeInstallerRrm",
      "httpMethod": "get",
      "tag": "Installer",
      "description": "optimizeInstallerRrm",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/invite/verify/{token}",
      "method": "verifyAdminInvite",
      "httpMethod": "post",
      "tag": "Admin",
      "description": "verifyAdminInvite",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/login",
      "method": "login",
      "httpMethod": "post",
      "tag": "Login",
      "description": "login",
      "parameters": [
        {
          "name": "email",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "two_factor",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/login/lookup",
      "method": "lookup",
      "httpMethod": "post",
      "tag": "Login",
      "description": "lookup",
      "parameters": [
        {
          "name": "email",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/login/oauth/{provider}",
      "method": "unlinkOAuth2Provider",
      "httpMethod": "delete",
      "tag": "Login With OAuth2",
      "description": "unlinkOAuth2Provider",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/login/oauth/{provider}",
      "method": "getOAuth2AuthorizationUrlForLogin",
      "httpMethod": "get",
      "tag": "Login With OAuth2",
      "description": "getOAuth2AuthorizationUrlForLogin",
      "parameters": [
        {
          "name": "forward",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/login/oauth/{provider}",
      "method": "loginOAuth2",
      "httpMethod": "post",
      "tag": "Login With OAuth2",
      "description": "loginOAuth2",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/login/two_factor",
      "method": "twoFactor",
      "httpMethod": "post",
      "tag": "Login With OAuth2",
      "description": "twoFactor",
      "parameters": [
        {
          "name": "two_factor",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/logout",
      "method": "logout",
      "httpMethod": "post",
      "tag": "Login",
      "description": "logout",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/mobile/verify/{secret}",
      "method": "activateSdkInvite",
      "httpMethod": "post",
      "tag": "Mobile",
      "description": "activateSdkInvite",
      "parameters": [
        {
          "name": "device_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/msps",
      "method": "createMsp",
      "httpMethod": "post",
      "tag": "Msps",
      "description": "createMsp",
      "parameters": [
        {
          "name": "allow_mist",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "created_time",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "logo_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "tier",
          "schema": "string",
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/msps/{msp_id}",
      "method": "deleteMsp",
      "httpMethod": "delete",
      "tag": "Msps",
      "description": "deleteMsp",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/msps/{msp_id}",
      "method": "getMspDetails",
      "httpMethod": "get",
      "tag": "Msps",
      "description": "getMspDetails",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/msps/{msp_id}",
      "method": "updateMsp",
      "httpMethod": "put",
      "tag": "Msps",
      "description": "updateMsp",
      "parameters": [
        {
          "name": "allow_mist",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "created_time",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "logo_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "tier",
          "schema": "string",
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/msps/{msp_id}/admins",
      "method": "listMspAdmins",
      "httpMethod": "get",
      "tag": "Msps Admins",
      "description": "listMspAdmins",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/msps/{msp_id}/admins/{admin_id}",
      "method": "revokeMspAdmin",
      "httpMethod": "delete",
      "tag": "Msps Admins",
      "description": "revokeMspAdmin",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/msps/{msp_id}/admins/{admin_id}",
      "method": "getMspAdmin",
      "httpMethod": "get",
      "tag": "Msps Admins",
      "description": "getMspAdmin",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "Admin"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/msps/{msp_id}/admins/{admin_id}",
      "method": "updateMspAdmin",
      "httpMethod": "put",
      "tag": "Msps Admins",
      "description": "updateMspAdmin",
      "parameters": [
        {
          "name": "admin_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "enable_two_factor",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "first_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "hours",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "last_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "oauth_google",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "phone",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "phone2",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "privileges",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "session_expiry",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "tags",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "two_factor_verified",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "via_sso",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Admin"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/msps/{msp_id}/claim",
      "method": "claimMspLicence",
      "httpMethod": "post",
      "tag": "Msps Licenses",
      "description": "claimMspLicence",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/msps/{msp_id}/insights/{metric}",
      "method": "getMspSle",
      "httpMethod": "get",
      "tag": "Msps SLEs",
      "description": "getMspSle",
      "parameters": [
        {
          "name": "sle",
          "schema": "string",
          "description": "see /api/v1/const/insight_metrics for more details"
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        },
        {
          "name": "interval",
          "schema": "string",
          "required": false,
          "description": "Aggregation works by giving a time range plus interval (e.g. 1d, 1h, 10m) where aggregation function would be applied to."
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/msps/{msp_id}/inventory/{device_mac}",
      "method": "getMspInventoryByMac",
      "httpMethod": "get",
      "tag": "Msps Inventory",
      "description": "getMspInventoryByMac",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/msps/{msp_id}/invites",
      "method": "inviteMspAdmin",
      "httpMethod": "post",
      "tag": "Msps Invites",
      "description": "inviteMspAdmin",
      "parameters": [
        {
          "name": "admin_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "enable_two_factor",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "first_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "hours",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "last_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "oauth_google",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "phone",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "phone2",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "privileges",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "session_expiry",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "tags",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "two_factor_verified",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "via_sso",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Admin"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/msps/{msp_id}/invites/{invite_id}",
      "method": "uninviteMspAdmin",
      "httpMethod": "delete",
      "tag": "Msps Invites",
      "description": "uninviteMspAdmin",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/msps/{msp_id}/invites/{invite_id}",
      "method": "updateMspAdminInvite",
      "httpMethod": "put",
      "tag": "Msps Invites",
      "description": "updateMspAdminInvite",
      "parameters": [
        {
          "name": "admin_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "enable_two_factor",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "first_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "hours",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "last_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "oauth_google",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "phone",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "phone2",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "privileges",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "session_expiry",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "tags",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "two_factor_verified",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "via_sso",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Admin"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/msps/{msp_id}/licenses",
      "method": "listMspLicenses",
      "httpMethod": "get",
      "tag": "Msps Licenses",
      "description": "listMspLicenses",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "License"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/msps/{msp_id}/licenses",
      "method": "moveOrDeleteMspLicenseToAnotherOrg",
      "httpMethod": "put",
      "tag": "Msps Licenses",
      "description": "moveOrDeleteMspLicenseToAnotherOrg",
      "parameters": [
        {
          "name": "dst_org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "notes",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "op",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "quantity",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "subscription_id",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/msps/{msp_id}/logo",
      "method": "deleteMspLogo",
      "httpMethod": "delete",
      "tag": "Msps Logo",
      "description": "deleteMspLogo",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/msps/{msp_id}/logo",
      "method": "postMspLogo",
      "httpMethod": "post",
      "tag": "Msps Logo",
      "description": "postMspLogo",
      "parameters": [
        {
          "name": "logo_url",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/msps/{msp_id}/logs",
      "method": "listMspLogs",
      "httpMethod": "get",
      "tag": "Msps Logs",
      "description": "listMspLogs",
      "parameters": [
        {
          "name": "org_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "admin_name",
          "schema": "string",
          "description": "admin name or email"
        },
        {
          "name": "message",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/msps/{msp_id}/logs/count",
      "method": "countMspLogs",
      "httpMethod": "get",
      "tag": "Msps Logs",
      "description": "countMspLogs",
      "parameters": [
        {
          "name": "distinct",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/msps/{msp_id}/orggroups",
      "method": "listMspOrgGroups",
      "httpMethod": "get",
      "tag": "Msps Org Groups",
      "description": "listMspOrgGroups",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/msps/{msp_id}/orggroups",
      "method": "createMspOrgGroup",
      "httpMethod": "post",
      "tag": "Msps Org Groups",
      "description": "createMspOrgGroup",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "msp_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "org_ids",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Organizations Group"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/msps/{msp_id}/orggroups/{orggroup_id}",
      "method": "deleteMspOrgGroup",
      "httpMethod": "delete",
      "tag": "Msps Org Groups",
      "description": "deleteMspOrgGroup",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/msps/{msp_id}/orggroups/{orggroup_id}",
      "method": "getMspOrgGroup",
      "httpMethod": "get",
      "tag": "Msps Org Groups",
      "description": "getMspOrgGroup",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "Organizations Group"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/msps/{msp_id}/orggroups/{orggroup_id}",
      "method": "updateMspOrgGroup",
      "httpMethod": "put",
      "tag": "Msps Org Groups",
      "description": "updateMspOrgGroup",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "msp_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "org_ids",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Organizations Group"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/msps/{msp_id}/orgs",
      "method": "listMspOrgs",
      "httpMethod": "get",
      "tag": "Msps Orgs",
      "description": "listMspOrgs",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/msps/{msp_id}/orgs",
      "method": "createMspOrg",
      "httpMethod": "post",
      "tag": "Msps Orgs",
      "description": "createMspOrg",
      "parameters": [
        {
          "name": "alarmtemplate_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "allow_mist",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "msp_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "orggroup_ids",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "session_expiry",
          "schema": "number",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "An organization usualy represents a customer - which has inventories, licenses. An Organization can contain multiple sites. A site usually represents a deployment at the same location (a campus, an office)."
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/msps/{msp_id}/orgs",
      "method": "manageMspOrgs",
      "httpMethod": "put",
      "tag": "Msps Orgs",
      "description": "manageMspOrgs",
      "parameters": [
        {
          "name": "op",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "org_ids",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/msps/{msp_id}/orgs/search",
      "method": "searchMspOrgs",
      "httpMethod": "get",
      "tag": "Msps Orgs",
      "description": "searchMspOrgs",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "description": "org id"
        },
        {
          "name": "sub_insufficient",
          "schema": "boolean",
          "description": "if this org has sufficient subscription"
        },
        {
          "name": "trial_enabled",
          "schema": "boolean",
          "description": "if this org is under trial period"
        },
        {
          "name": "usage_types",
          "schema": "array",
          "description": "a list of types that enabled by usage"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/msps/{msp_id}/orgs/{org_id}",
      "method": "getMspOrg",
      "httpMethod": "get",
      "tag": "Msps Orgs",
      "description": "getMspOrg",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "An organization usualy represents a customer - which has inventories, licenses. An Organization can contain multiple sites. A site usually represents a deployment at the same location (a campus, an office)."
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/msps/{msp_id}/search",
      "method": "searchMspOrgGroup",
      "httpMethod": "get",
      "tag": "Msps Search",
      "description": "searchMspOrgGroup",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": "orgs"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "search string"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/msps/{msp_id}/ssoroles",
      "method": "listMspSsoRoles",
      "httpMethod": "get",
      "tag": "Msps SSO Roles",
      "description": "listMspSsoRoles",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/msps/{msp_id}/ssoroles",
      "method": "createMspSsoRole",
      "httpMethod": "post",
      "tag": "Msps SSO Roles",
      "description": "createMspSsoRole",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "msp_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "privileges",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "SSO Role response"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/msps/{msp_id}/ssoroles/{ssorole_id}",
      "method": "deleteMspSsoRole",
      "httpMethod": "delete",
      "tag": "Msps SSO Roles",
      "description": "deleteMspSsoRole",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/msps/{msp_id}/ssoroles/{ssorole_id}",
      "method": "updateMspSsoRole",
      "httpMethod": "put",
      "tag": "Msps SSO Roles",
      "description": "updateMspSsoRole",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "msp_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "privileges",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "SSO Role response"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/msps/{msp_id}/ssos",
      "method": "getMspSso",
      "httpMethod": "get",
      "tag": "Msps SSO",
      "description": "getMspSso",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/msps/{msp_id}/ssos",
      "method": "createMspSso",
      "httpMethod": "post",
      "tag": "Msps SSO",
      "description": "createMspSso",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "custom_logout_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "default_role",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "domain",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "idp_cert",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "idp_sign_algo",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "idp_sso_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "idp_type",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ignore_unmatched_roles",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "issuer",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ldap_base_dn",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ldap_bind_dn",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ldap_bind_password",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ldap_certs",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "ldap_client_cert",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ldap_client_key",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ldap_group_attr",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ldap_group_dn",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ldap_group_filter",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ldap_server_hosts",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "ldap_type",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ldap_user_filter",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "msp_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "nameid_format",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "oauth_cc_client_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "oauth_cc_client_secret",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "oauth_discovery_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "oauth_ropc_client_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "oauth_ropc_secret",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "oauth_tenant_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "oauth_type",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "role_attr_extraction",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "role_attr_from",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "SSO"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/msps/{msp_id}/ssos/{sso_id}",
      "method": "deleteMspSso",
      "httpMethod": "delete",
      "tag": "Msps SSO",
      "description": "deleteMspSso",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/msps/{msp_id}/ssos/{sso_id}",
      "method": "updateMspSso",
      "httpMethod": "put",
      "tag": "Msps SSO",
      "description": "updateMspSso",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "custom_logout_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "default_role",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "domain",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "idp_cert",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "idp_sign_algo",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "idp_sso_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "idp_type",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ignore_unmatched_roles",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "issuer",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ldap_base_dn",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ldap_bind_dn",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ldap_bind_password",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ldap_certs",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "ldap_client_cert",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ldap_client_key",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ldap_group_attr",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ldap_group_dn",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ldap_group_filter",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ldap_server_hosts",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "ldap_type",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ldap_user_filter",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "msp_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "nameid_format",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "oauth_cc_client_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "oauth_cc_client_secret",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "oauth_discovery_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "oauth_ropc_client_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "oauth_ropc_secret",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "oauth_tenant_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "oauth_type",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "role_attr_extraction",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "role_attr_from",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "SSO"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/msps/{msp_id}/ssos/{sso_id}/failures",
      "method": "listMspSsoLatestFailures",
      "httpMethod": "get",
      "tag": "Msps SSO",
      "description": "listMspSsoLatestFailures",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/msps/{msp_id}/ssos/{sso_id}/metadata",
      "method": "getMspSsoSamlMetadata",
      "httpMethod": "get",
      "tag": "Msps SSO",
      "description": "getMspSsoSamlMetadata",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/msps/{msp_id}/ssos/{sso_id}/metadata.xml",
      "method": "downloadMspSsoSamlMetadata",
      "httpMethod": "get",
      "tag": "Msps SSO",
      "description": "downloadMspSsoSamlMetadata",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "File"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/msps/{msp_id}/stats/licenses",
      "method": "listMspOrgLicenses",
      "httpMethod": "get",
      "tag": "Msps Stats",
      "description": "listMspOrgLicenses",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "License"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/msps/{msp_id}/stats/orgs",
      "method": "listMspOrgStats",
      "httpMethod": "get",
      "tag": "Msps Stats",
      "description": "listMspOrgStats",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/msps/{msp_id}/tickets",
      "method": "listMspTickets",
      "httpMethod": "get",
      "tag": "Msps Tickets",
      "description": "listMspTickets",
      "parameters": [
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/msps/{msp_id}/tickets/count",
      "method": "countMspTickets",
      "httpMethod": "get",
      "tag": "Msps Tickets",
      "description": "countMspTickets",
      "parameters": [
        {
          "name": "distinct",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs",
      "method": "createOrg",
      "httpMethod": "post",
      "tag": "Orgs",
      "description": "createOrg",
      "parameters": [
        {
          "name": "alarmtemplate_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "allow_mist",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "msp_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "orggroup_ids",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "session_expiry",
          "schema": "number",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "An organization usualy represents a customer - which has inventories, licenses. An Organization can contain multiple sites. A site usually represents a deployment at the same location (a campus, an office)."
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}",
      "method": "deleteOrg",
      "httpMethod": "delete",
      "tag": "Orgs",
      "description": "deleteOrg",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}",
      "method": "getOrgInfo",
      "httpMethod": "get",
      "tag": "Orgs",
      "description": "getOrg",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}",
      "method": "updateOrg",
      "httpMethod": "put",
      "tag": "Orgs",
      "description": "updateOrg",
      "parameters": [
        {
          "name": "alarmtemplate_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "allow_mist",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "msp_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "orggroup_ids",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "session_expiry",
          "schema": "number",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "An organization usualy represents a customer - which has inventories, licenses. An Organization can contain multiple sites. A site usually represents a deployment at the same location (a campus, an office)."
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/128routers/register_cmd",
      "method": "getOrg128TRegistrationCommands",
      "httpMethod": "get",
      "tag": "Orgs 128T",
      "description": "getOrg128TRegistrationCommands",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/admins",
      "method": "listOrgAdmins",
      "httpMethod": "get",
      "tag": "Orgs Admins",
      "description": "listOrgAdmins",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/admins/{admin_id}",
      "method": "revokeOrgAdmin",
      "httpMethod": "delete",
      "tag": "Orgs Admins",
      "description": "revokeOrgAdmin",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/admins/{admin_id}",
      "method": "updateOrgAdmin",
      "httpMethod": "put",
      "tag": "Orgs Admins",
      "description": "updateOrgAdmin",
      "parameters": [
        {
          "name": "admin_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "enable_two_factor",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "first_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "hours",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "last_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "oauth_google",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "phone",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "phone2",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "privileges",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "session_expiry",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "tags",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "two_factor_verified",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "via_sso",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Admin"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/alarms/ack",
      "method": "multiAckOrgAlarms",
      "httpMethod": "post",
      "tag": "Orgs Alarms",
      "description": "multiAckOrgAlarms",
      "parameters": [
        {
          "name": "alarm_ids",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "note",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/alarms/ack_all",
      "method": "ackOrgAllAlarms",
      "httpMethod": "post",
      "tag": "Orgs Alarms",
      "description": "ackOrgAllAlarms",
      "parameters": [
        {
          "name": "note",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/alarms/count",
      "method": "countOrgAlarms",
      "httpMethod": "get",
      "tag": "Orgs Alarms",
      "description": "countOrgAlarms",
      "parameters": [
        {
          "name": "distinct",
          "schema": "string",
          "description": ""
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/alarms/search",
      "method": "searchOrgAlarms",
      "httpMethod": "get",
      "tag": "Orgs Alarms",
      "description": "searchOrgAlarms",
      "parameters": [
        {
          "name": "site_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/alarms/unack",
      "method": "multiUnackOrgAlarms",
      "httpMethod": "post",
      "tag": "Orgs Alarms",
      "description": "multiUnackOrgAlarms",
      "parameters": [
        {
          "name": "alarm_ids",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "note",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/alarms/unack_all",
      "method": "unackOrgAllArlarms",
      "httpMethod": "post",
      "tag": "Orgs Alarms",
      "description": "unackOrgAllArlarms",
      "parameters": [
        {
          "name": "note",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/alarms/{alarm_id}/ack",
      "method": "ackOrgAlarm",
      "httpMethod": "post",
      "tag": "Orgs Alarms",
      "description": "ackOrgAlarm",
      "parameters": [
        {
          "name": "note",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/alarmtemplates",
      "method": "listOrgAlarmTemplates",
      "httpMethod": "get",
      "tag": "Orgs Alarm Templates",
      "description": "listOrgAlarmTemplates",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/alarmtemplates",
      "method": "createOrgAlarmTemplate",
      "httpMethod": "post",
      "tag": "Orgs Alarm Templates",
      "description": "createOrgAlarmTemplate",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "delivery",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "rules",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Alarm Template"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/alarmtemplates/suppress",
      "method": "unsuppressOrgSuppressedAlarms",
      "httpMethod": "delete",
      "tag": "Orgs Alarm Templates",
      "description": "unsuppressOrgSuppressedAlarms",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/alarmtemplates/suppress",
      "method": "listOrgSuppressedAlarms",
      "httpMethod": "get",
      "tag": "Orgs Alarm Templates",
      "description": "listOrgSuppressedAlarms",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/alarmtemplates/suppress",
      "method": "suppressOrgAlarm",
      "httpMethod": "post",
      "tag": "Orgs Alarm Templates",
      "description": "suppressOrgAlarm",
      "parameters": [
        {
          "name": "applies",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "duration",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "scheduled_time",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/alarmtemplates/{alarmtemplate_id}",
      "method": "deleteOrgAlarmTemplate",
      "httpMethod": "delete",
      "tag": "Orgs Alarm Templates",
      "description": "deleteOrgAlarmTemplate",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/alarmtemplates/{alarmtemplate_id}",
      "method": "getOrgAlarmTemplate",
      "httpMethod": "get",
      "tag": "Orgs Alarm Templates",
      "description": "getOrgAlarmTemplate",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "Alarm Template"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/alarmtemplates/{alarmtemplate_id}",
      "method": "updateOrgAlarmTemplate",
      "httpMethod": "put",
      "tag": "Orgs Alarm Templates",
      "description": "updateOrgAlarmTemplate",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "delivery",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "rules",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Alarm Template"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/apitokens",
      "method": "listOrgApiTokens",
      "httpMethod": "get",
      "tag": "Orgs API Tokens",
      "description": "listOrgApiTokens",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/apitokens",
      "method": "createOrgApiToken",
      "httpMethod": "post",
      "tag": "Orgs API Tokens",
      "description": "createOrgApiToken",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "privileges",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "API Token"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/apitokens/{apitoken_id}",
      "method": "deleteOrgApiToken",
      "httpMethod": "delete",
      "tag": "Orgs API Tokens",
      "description": "deleteOrgApiToken",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/apitokens/{apitoken_id}",
      "method": "getOrgApiToken",
      "httpMethod": "get",
      "tag": "Orgs API Tokens",
      "description": "getOrgApiToken",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "API Token"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/apitokens/{apitoken_id}",
      "method": "updateOrgApiToken",
      "httpMethod": "put",
      "tag": "Orgs API Tokens",
      "description": "updateOrgApiToken",
      "parameters": [
        {
          "name": "created_by",
          "schema": "string",
          "description": ""
        },
        {
          "name": "created_time",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "key",
          "schema": "string",
          "description": ""
        },
        {
          "name": "last_used",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "privileges",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "API Token"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/aptemplates",
      "method": "listOrgAptemplates",
      "httpMethod": "get",
      "tag": "Orgs AP Templates",
      "description": "listOrgAptemplates",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/aptemplates",
      "method": "createOrgAptemplate",
      "httpMethod": "post",
      "tag": "Orgs AP Templates",
      "description": "createOrgAptemplate",
      "parameters": [
        {
          "name": "ap_matching",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "wifi",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/aptemplates/{aptemplate_id}",
      "method": "deleteOrgAptemplate",
      "httpMethod": "delete",
      "tag": "Orgs AP Templates",
      "description": "deleteOrgAptemplate",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/aptemplates/{aptemplate_id}",
      "method": "getOrgAptemplate",
      "httpMethod": "get",
      "tag": "Orgs AP Templates",
      "description": "getOrgAptemplate",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/aptemplates/{aptemplate_id}",
      "method": "updateOrgAptemplate",
      "httpMethod": "put",
      "tag": "Orgs AP Templates",
      "description": "updateOrgAptemplate",
      "parameters": [
        {
          "name": "ap_matching",
          "schema": "object",
          "required": true,
          "description": ""
        },
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "wifi",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/assetfilters",
      "method": "listOrgAssetFilters",
      "httpMethod": "get",
      "tag": "Orgs Asset Filters",
      "description": "listOrgAssetFilters",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/assetfilters",
      "method": "createOrgAssetFilters",
      "httpMethod": "post",
      "tag": "Orgs Asset Filters",
      "description": "createOrgAssetFilters",
      "parameters": [
        {
          "name": "ap_mac",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "beam",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "disasbled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "eddystone_uid_namespace",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "eddystone_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "ibeacon_major",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "ibeacon_uuid",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mfg_company_id",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "rssi",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "service_uuid",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Asset Filter"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/assetfilters/{assetfilter_id}",
      "method": "deleteOrgAssetFilter",
      "httpMethod": "delete",
      "tag": "Orgs Asset Filters",
      "description": "deleteOrgAssetFilter",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/assetfilters/{assetfilter_id}",
      "method": "getOrgAssetFilter",
      "httpMethod": "get",
      "tag": "Orgs Asset Filters",
      "description": "getOrgAssetFilter",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "Asset Filter"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/assetfilters/{assetfilter_id}",
      "method": "updateOrgAssetFilters",
      "httpMethod": "put",
      "tag": "Orgs Asset Filters",
      "description": "updateOrgAssetFilters",
      "parameters": [
        {
          "name": "ap_mac",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "beam",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "disasbled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "eddystone_uid_namespace",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "eddystone_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "ibeacon_major",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "ibeacon_uuid",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mfg_company_id",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "rssi",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "service_uuid",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Asset Filter"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/assets",
      "method": "listOrgAssets",
      "httpMethod": "get",
      "tag": "Orgs Assets",
      "description": "listOrgAssets",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/assets",
      "method": "createOrgAsset",
      "httpMethod": "post",
      "tag": "Orgs Assets",
      "description": "createOrgAsset",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mac",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "map_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tag_id",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Asset"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/assets/import",
      "method": "importOrgAssets",
      "httpMethod": "post",
      "tag": "Orgs Assets",
      "description": "importOrgAssets",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/assets/{asset_id}",
      "method": "deleteOrgAsset",
      "httpMethod": "delete",
      "tag": "Orgs Assets",
      "description": "deleteOrgAsset",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/assets/{asset_id}",
      "method": "getOrgAsset",
      "httpMethod": "get",
      "tag": "Orgs Assets",
      "description": "getOrgAsset",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "Asset"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/assets/{asset_id}",
      "method": "updateOrgAsset",
      "httpMethod": "put",
      "tag": "Orgs Assets",
      "description": "updateOrgAsset",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mac",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "map_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tag_id",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Asset"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/call/events/count",
      "method": "countOrgCallEvents",
      "httpMethod": "get",
      "tag": "Orgs Calls",
      "description": "countOrgCallEvents",
      "parameters": [
        {
          "name": "distinct",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/call/events/search",
      "method": "searchOrgCallEvents",
      "httpMethod": "get",
      "tag": "Orgs Calls",
      "description": "searchOrgCallEvents",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "description": "Event Type. See [getCallEventsDefinitions](#tag/Constants/operation/getCallEventsDefinitions)"
        },
        {
          "name": "ap",
          "schema": "string",
          "description": ""
        },
        {
          "name": "mac",
          "schema": "string",
          "description": ""
        },
        {
          "name": "app",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/cert",
      "method": "getOrgCertificates",
      "httpMethod": "get",
      "tag": "Orgs Cert",
      "description": "getOrgCertificates",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/cert/regenerate",
      "method": "clearOrgCertificates",
      "httpMethod": "post",
      "tag": "Orgs Cert",
      "description": "clearOrgCertificates",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/claim",
      "method": "claimOrgLicense",
      "httpMethod": "post",
      "tag": "Orgs Licenses",
      "description": "claimOrgLicense",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/clients/count",
      "method": "countOrgClientsWireless",
      "httpMethod": "get",
      "tag": "Orgs Clients",
      "description": "countOrgClientsWireless",
      "parameters": [
        {
          "name": "distinct",
          "schema": "string",
          "description": ""
        },
        {
          "name": "mac",
          "schema": "string",
          "description": "partial / full MAC address"
        },
        {
          "name": "hostname",
          "schema": "string",
          "description": "partial / full hostname"
        },
        {
          "name": "device",
          "schema": "string",
          "description": "device type, e.g. Mac, Nvidia, iPhone"
        },
        {
          "name": "os",
          "schema": "string",
          "description": "os, e.g. Sierra, Yosemite, Windows 10"
        },
        {
          "name": "model",
          "schema": "string",
          "description": "model, e.g. “MBP 15 late 2013”, 6, 6s, “8+ GSM”"
        },
        {
          "name": "ap",
          "schema": "string",
          "description": "AP mac where the client has connected to"
        },
        {
          "name": "vlan",
          "schema": "string",
          "description": "vlan"
        },
        {
          "name": "ssid",
          "schema": "string",
          "description": "SSID"
        },
        {
          "name": "ip address",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/clients/events/search",
      "method": "searchOrgClientsEvents",
      "httpMethod": "get",
      "tag": "Orgs Clients",
      "description": "searchOrgClientsEvents",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "description": "event type, e.g. MARVIS_EVENT_CLIENT_FBT_FAILURE"
        },
        {
          "name": "reason_code",
          "schema": "integer",
          "description": "for assoc/disassoc events"
        },
        {
          "name": "ssid",
          "schema": "string",
          "description": "SSID Name"
        },
        {
          "name": "ap",
          "schema": "string",
          "description": "AP MAC"
        },
        {
          "name": "proto",
          "schema": "string",
          "description": "802.11 standard"
        },
        {
          "name": "band",
          "schema": "string",
          "description": "24 / 5"
        },
        {
          "name": "wlan_id",
          "schema": "string",
          "description": "wlan_id"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/clients/search",
      "method": "searchOrgClientsWireless",
      "httpMethod": "get",
      "tag": "Orgs Clients",
      "description": "searchOrgClientsWireless",
      "parameters": [
        {
          "name": "site_id",
          "schema": "string",
          "description": "Site ID"
        },
        {
          "name": "mac",
          "schema": "string",
          "description": "partial / full MAC address"
        },
        {
          "name": "ip address",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "hostname",
          "schema": "string",
          "description": "partial / full hostname"
        },
        {
          "name": "device",
          "schema": "string",
          "description": "device type, e.g. Mac, Nvidia, iPhone"
        },
        {
          "name": "os",
          "schema": "string",
          "description": "os, e.g. Sierra, Yosemite, Windows 10"
        },
        {
          "name": "model",
          "schema": "string",
          "description": "model, e.g. “MBP 15 late 2013”, 6, 6s, “8+ GSM”"
        },
        {
          "name": "ap",
          "schema": "string",
          "description": "AP mac where the client has connected to"
        },
        {
          "name": "psk_id",
          "schema": "string",
          "required": false,
          "description": "PSK ID"
        },
        {
          "name": "psk_name",
          "schema": "string",
          "description": "PSK Name"
        },
        {
          "name": "vlan",
          "schema": "string",
          "description": "vlan"
        },
        {
          "name": "ssid",
          "schema": "string",
          "description": "SSID"
        },
        {
          "name": "text",
          "schema": "string",
          "description": "partial / full MAC address, hostname"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/clients/sessions/count",
      "method": "countOrgWirelessClientsSessions",
      "httpMethod": "get",
      "tag": "Orgs Clients",
      "description": "countOrgWirelessClientsSessions",
      "parameters": [
        {
          "name": "distinct",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ap",
          "schema": "string",
          "description": "AP MAC"
        },
        {
          "name": "band",
          "schema": "string",
          "description": "5 / 24"
        },
        {
          "name": "client_family",
          "schema": "string",
          "description": "E.g. “Mac”, “iPhone”, “Apple watch”"
        },
        {
          "name": "client_manufacture",
          "schema": "string",
          "description": "E.g. “Apple”"
        },
        {
          "name": "client_model",
          "schema": "string",
          "description": "E.g. “8+”, “XS”"
        },
        {
          "name": "client_os",
          "schema": "string",
          "description": "E.g. “Mojave”, “Windows 10”, “Linux”"
        },
        {
          "name": "ssid",
          "schema": "string",
          "description": "SSID"
        },
        {
          "name": "wlan_id",
          "schema": "string",
          "description": "wlan_id"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/clients/sessions/search",
      "method": "searchOrgClientWirelessSessions",
      "httpMethod": "get",
      "tag": "Orgs Clients",
      "description": "searchOrgClientWirelessSessions",
      "parameters": [
        {
          "name": "ap",
          "schema": "string",
          "description": "AP MAC"
        },
        {
          "name": "band",
          "schema": "string",
          "description": "5 / 24"
        },
        {
          "name": "client_family",
          "schema": "string",
          "description": "E.g. “Mac”, “iPhone”, “Apple watch”"
        },
        {
          "name": "client_manufacture",
          "schema": "string",
          "description": "E.g. “Apple”"
        },
        {
          "name": "client_model",
          "schema": "string",
          "description": "E.g. “8+”, “XS”"
        },
        {
          "name": "client_username",
          "schema": "string",
          "description": "Username"
        },
        {
          "name": "client_os",
          "schema": "string",
          "description": "E.g. “Mojave”, “Windows 10”, “Linux”"
        },
        {
          "name": "ssid",
          "schema": "string",
          "description": "SSID"
        },
        {
          "name": "wlan_id",
          "schema": "string",
          "description": "wlan_id"
        },
        {
          "name": "psk_id",
          "schema": "string",
          "required": false,
          "description": "PSK ID"
        },
        {
          "name": "psk_name",
          "schema": "string",
          "description": "PSK Name"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/clone",
      "method": "cloneOrg",
      "httpMethod": "post",
      "tag": "Orgs",
      "description": "cloneOrg",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "An organization usualy represents a customer - which has inventories, licenses. An Organization can contain multiple sites. A site usually represents a deployment at the same location (a campus, an office)."
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/crl",
      "method": "getOrgCrlFile",
      "httpMethod": "get",
      "tag": "Orgs CRL",
      "description": "getOrgCrlFile",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "File"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/crl/truncate",
      "method": "truncateOrgCrlFile",
      "httpMethod": "post",
      "tag": "Orgs Cert",
      "description": "truncateOrgCrlFile",
      "parameters": [
        {
          "name": "days",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/deviceprofiles",
      "method": "listOrgDeviceProfiles",
      "httpMethod": "get",
      "tag": "Orgs Device Profiles",
      "description": "listOrgDeviceProfiles",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/deviceprofiles",
      "method": "createOrgDeviceProfiles",
      "httpMethod": "post",
      "tag": "Orgs Device Profiles",
      "description": "createOrgDeviceProfiles",
      "parameters": [
        {
          "name": "aeroscout",
          "schema": "object",
          "description": ""
        },
        {
          "name": "ble_config",
          "schema": "object",
          "description": ""
        },
        {
          "name": "created_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "disable_eth1",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "disable_eth2",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "disable_eth3",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "disable_module",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "height",
          "schema": "number",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "iot_config",
          "schema": "object",
          "description": ""
        },
        {
          "name": "ip_config",
          "schema": "object",
          "description": ""
        },
        {
          "name": "led",
          "schema": "object",
          "description": ""
        },
        {
          "name": "map_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "mesh",
          "schema": "object",
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "notes",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ntp_servers",
          "schema": "array",
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "orientation",
          "schema": "number",
          "description": ""
        },
        {
          "name": "orientation_overwrite",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "poe_passthrough",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "port_config",
          "schema": "object",
          "description": ""
        },
        {
          "name": "pwr_config",
          "schema": "object",
          "description": ""
        },
        {
          "name": "radio_config",
          "schema": "object",
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "switch_config",
          "schema": "object",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "usb_config",
          "schema": "object",
          "description": ""
        },
        {
          "name": "vars",
          "schema": "object",
          "description": ""
        },
        {
          "name": "x",
          "schema": "number",
          "description": ""
        },
        {
          "name": "y",
          "schema": "number",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Device Profile"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/deviceprofiles/{deviceprofile_id}",
      "method": "deleteOrgDeviceProfile",
      "httpMethod": "delete",
      "tag": "Orgs Device Profiles",
      "description": "deleteOrgDeviceProfile",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/deviceprofiles/{deviceprofile_id}",
      "method": "getOrgDeviceProfile",
      "httpMethod": "get",
      "tag": "Orgs Device Profiles",
      "description": "getOrgDeviceProfile",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "Device Profile"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/deviceprofiles/{deviceprofile_id}",
      "method": "updateOrgDeviceProfile",
      "httpMethod": "put",
      "tag": "Orgs Device Profiles",
      "description": "updateOrgDeviceProfiles",
      "parameters": [
        {
          "name": "aeroscout",
          "schema": "object",
          "description": ""
        },
        {
          "name": "ble_config",
          "schema": "object",
          "description": ""
        },
        {
          "name": "created_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "disable_eth1",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "disable_eth2",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "disable_eth3",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "disable_module",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "height",
          "schema": "number",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "iot_config",
          "schema": "object",
          "description": ""
        },
        {
          "name": "ip_config",
          "schema": "object",
          "description": ""
        },
        {
          "name": "led",
          "schema": "object",
          "description": ""
        },
        {
          "name": "map_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "mesh",
          "schema": "object",
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "notes",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ntp_servers",
          "schema": "array",
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "orientation",
          "schema": "number",
          "description": ""
        },
        {
          "name": "orientation_overwrite",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "poe_passthrough",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "port_config",
          "schema": "object",
          "description": ""
        },
        {
          "name": "pwr_config",
          "schema": "object",
          "description": ""
        },
        {
          "name": "radio_config",
          "schema": "object",
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "switch_config",
          "schema": "object",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "usb_config",
          "schema": "object",
          "description": ""
        },
        {
          "name": "vars",
          "schema": "object",
          "description": ""
        },
        {
          "name": "x",
          "schema": "number",
          "description": ""
        },
        {
          "name": "y",
          "schema": "number",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Device Profile"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/deviceprofiles/{deviceprofile_id}/assign",
      "method": "assignOrgDeviceProfile",
      "httpMethod": "post",
      "tag": "Orgs Device Profiles",
      "description": "assignOrgDeviceProfile",
      "parameters": [
        {
          "name": "macs",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/deviceprofiles/{deviceprofile_id}/unassign",
      "method": "unassignOrgDeviceProfiles",
      "httpMethod": "post",
      "tag": "Orgs Device Profiles",
      "description": "unassignOrgDeviceProfiles",
      "parameters": [
        {
          "name": "macs",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/devices",
      "method": "listOrgDevices",
      "httpMethod": "get",
      "tag": "Orgs Devices",
      "description": "listOrgDevices",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/devices/count",
      "method": "countOrgDevices",
      "httpMethod": "get",
      "tag": "Orgs Devices",
      "description": "countOrgDevices",
      "parameters": [
        {
          "name": "distinct",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "hostname",
          "schema": "string",
          "description": "partial / full hostname"
        },
        {
          "name": "site_id",
          "schema": "string",
          "description": "site id"
        },
        {
          "name": "model",
          "schema": "string",
          "description": "device model"
        },
        {
          "name": "mac",
          "schema": "string",
          "description": "AP mac"
        },
        {
          "name": "version",
          "schema": "string",
          "description": "version"
        },
        {
          "name": "ip address",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mxtunnel_status",
          "schema": "string",
          "description": "MxTunnel status, up / down"
        },
        {
          "name": "mxedge_id",
          "schema": "string",
          "description": "Mist Edge id, if AP is connecting to a Mist Edge"
        },
        {
          "name": "lldp_system_name",
          "schema": "string",
          "description": "LLDP system name"
        },
        {
          "name": "lldp_system_desc",
          "schema": "string",
          "description": "LLDP system description"
        },
        {
          "name": "lldp_port_id",
          "schema": "string",
          "description": "LLDP port id"
        },
        {
          "name": "lldp_mgmt_addr",
          "schema": "string",
          "description": "LLDP management ip address"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/devices/events/count",
      "method": "countOrgDevicesEvents",
      "httpMethod": "get",
      "tag": "Orgs Devices",
      "description": "countOrgDevicesEvents",
      "parameters": [
        {
          "name": "distinct",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "description": "site id"
        },
        {
          "name": "ap",
          "schema": "string",
          "description": "AP mac"
        },
        {
          "name": "apfw",
          "schema": "string",
          "description": "AP Firmware"
        },
        {
          "name": "model",
          "schema": "string",
          "description": "device model"
        },
        {
          "name": "text",
          "schema": "string",
          "description": "event message"
        },
        {
          "name": "timestamp",
          "schema": "string",
          "description": "event time"
        },
        {
          "name": "type",
          "schema": "string",
          "description": "Events Type"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/devices/events/search",
      "method": "searchOrgDevicesEvents",
      "httpMethod": "get",
      "tag": "Orgs Devices",
      "description": "searchOrgDevicesEvents",
      "parameters": [
        {
          "name": "mac",
          "schema": "string",
          "description": "device mac"
        },
        {
          "name": "model",
          "schema": "string",
          "description": "device model"
        },
        {
          "name": "text",
          "schema": "string",
          "description": "event message"
        },
        {
          "name": "timestamp",
          "schema": "string",
          "description": "event time"
        },
        {
          "name": "type",
          "schema": "string",
          "description": "see [Event Types Definition](/#tag/Constants/operation/getDeviceEventsDefinitions)"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/devices/last_config/count",
      "method": "countOrgDeviceLastConfigs",
      "httpMethod": "get",
      "tag": "Orgs Devices",
      "description": "countOrgDeviceLastConfigs",
      "parameters": [
        {
          "name": "device_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "distinct",
          "schema": "string",
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/devices/last_config/search",
      "method": "searchOrgDeviceLastConfigs",
      "httpMethod": "get",
      "tag": "Orgs Devices",
      "description": "searchOrgDeviceLastConfigs",
      "parameters": [
        {
          "name": "device_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "mac",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "version",
          "schema": "string",
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/devices/radio_macs",
      "method": "listOrgApsMacs",
      "httpMethod": "get",
      "tag": "Orgs Devices",
      "description": "listOrgApsMacs",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/devices/search",
      "method": "searchOrgDevices",
      "httpMethod": "get",
      "tag": "Orgs Devices",
      "description": "searchOrgDevices",
      "parameters": [
        {
          "name": "hostname",
          "schema": "string",
          "description": "partial / full hostname"
        },
        {
          "name": "site_id",
          "schema": "string",
          "description": "site id"
        },
        {
          "name": "model",
          "schema": "string",
          "description": "device model"
        },
        {
          "name": "mac",
          "schema": "string",
          "description": "AP mac"
        },
        {
          "name": "version",
          "schema": "string",
          "description": "version"
        },
        {
          "name": "power_constrained",
          "schema": "boolean",
          "description": "power_constrained"
        },
        {
          "name": "ip address",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mxtunnel_status",
          "schema": "string",
          "description": "MxTunnel status, up / down"
        },
        {
          "name": "mxedge_id",
          "schema": "string",
          "description": "Mist Edge id, if AP is connecting to a Mist Edge"
        },
        {
          "name": "lldp_system_name",
          "schema": "string",
          "description": "LLDP system name"
        },
        {
          "name": "lldp_system_desc",
          "schema": "string",
          "description": "LLDP system description"
        },
        {
          "name": "lldp_port_id",
          "schema": "string",
          "description": "LLDP port id"
        },
        {
          "name": "lldp_mgmt_addr",
          "schema": "string",
          "description": "LLDP management ip address"
        },
        {
          "name": "band_24_bandwith",
          "schema": "integer",
          "description": "Bandwith of band_24"
        },
        {
          "name": "band_5_bandwith",
          "schema": "integer",
          "description": "Bandwith of band_5"
        },
        {
          "name": "band_6_bandwith",
          "schema": "integer",
          "description": "Bandwith of band_6"
        },
        {
          "name": "band_24_channel",
          "schema": "integer",
          "description": "Channel of band_24"
        },
        {
          "name": "band_5_channel",
          "schema": "integer",
          "description": "Channel of band_5"
        },
        {
          "name": "band_6_channel",
          "schema": "integer",
          "description": "Channel of band_6"
        },
        {
          "name": "eth0_port_speed",
          "schema": "integer",
          "description": "Port speed of eth0"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/devices/upgrade",
      "method": "listOrgMultiSitesDevicesUpgrades",
      "httpMethod": "get",
      "tag": "Orgs Devices Upgrades",
      "description": "listOrgMultiSitesDevicesUpgrades",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/devices/upgrade",
      "method": "upgradeOrgMultiSitesDevices",
      "httpMethod": "post",
      "tag": "Orgs Devices Upgrades",
      "description": "upgradeOrgMultiSitesDevices",
      "parameters": [
        {
          "name": "canary_phases",
          "schema": "array",
          "description": ""
        },
        {
          "name": "device_ids",
          "schema": "array",
          "description": ""
        },
        {
          "name": "enable_p2p",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "force",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "max_failure_percentage",
          "schema": "number",
          "description": ""
        },
        {
          "name": "max_failures",
          "schema": "array",
          "description": ""
        },
        {
          "name": "models",
          "schema": "array",
          "description": ""
        },
        {
          "name": "p2p_cluster_size",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "p2p_parallelism",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "reboot",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "reboot_at",
          "schema": "number",
          "description": ""
        },
        {
          "name": "rrm_first_batch_percentage",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "rrm_max_batch_percentage",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "rrm_mesh_upgrade",
          "schema": "string",
          "description": ""
        },
        {
          "name": "rrm_node_order",
          "schema": "string",
          "description": ""
        },
        {
          "name": "rrm_slow_ramp",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "snapshot",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "start_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "strategy",
          "schema": "string",
          "description": ""
        },
        {
          "name": "version",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/devices/upgrade/{upgrade_id}",
      "method": "getOrgMultiSitesUpgrade",
      "httpMethod": "get",
      "tag": "Orgs Devices Upgrades",
      "description": "getOrgMultiSitesUpgrade",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/devices/{device_id}/clear_tunnels",
      "method": "removeOrgGatewaysTunnel",
      "httpMethod": "post",
      "tag": "Orgs Devices Others",
      "description": "removeOrgGatewaysTunnel",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "provider",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/devices/{device_id}/provision_tunnels",
      "method": "createOrgGatewaysCredentials",
      "httpMethod": "post",
      "tag": "Orgs Devices Others",
      "description": "createOrgGatewaysCredentials",
      "parameters": [
        {
          "name": "latlng",
          "schema": "object",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "primary",
          "schema": "object",
          "description": ""
        },
        {
          "name": "provider",
          "schema": "string",
          "description": ""
        },
        {
          "name": "region",
          "schema": "string",
          "description": ""
        },
        {
          "name": "secondary",
          "schema": "object",
          "description": ""
        },
        {
          "name": "vars_only",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/evpn_topologies",
      "method": "listOrgEvpnTopologies",
      "httpMethod": "get",
      "tag": "Orgs EVPN Topologies",
      "description": "listOrgEvpnTopologies",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/evpn_topologies",
      "method": "createOrgEvpnTopology",
      "httpMethod": "post",
      "tag": "Orgs EVPN Topologies",
      "description": "createOrgEvpnTopology",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pod_names",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "switches",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/evpn_topologies/{evpn_topology_id}",
      "method": "deleteOrgEvpnTopology",
      "httpMethod": "delete",
      "tag": "Orgs EVPN Topologies",
      "description": "deleteOrgEvpnTopology",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/evpn_topologies/{evpn_topology_id}",
      "method": "getOrgEvpnTolopogy",
      "httpMethod": "get",
      "tag": "Orgs EVPN Topologies",
      "description": "getOrgEvpnTolopogy",
      "parameters": [],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/evpn_topologies/{evpn_topology_id}",
      "method": "updateOrgEvpnTopology",
      "httpMethod": "put",
      "tag": "Orgs EVPN Topologies",
      "description": "updateOrgEvpnTopology",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pod_names",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "switches",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/gatewaytemplates",
      "method": "listOrgGatewayTemplates",
      "httpMethod": "get",
      "tag": "Orgs Gateway Templates",
      "description": "listOrgGatewayTemplates",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/gatewaytemplates",
      "method": "createOrgGatewayTemplate",
      "httpMethod": "post",
      "tag": "Orgs Gateway Templates",
      "description": "createOrgGatewayTemplate",
      "parameters": [
        {
          "name": "additional_config_cmds",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "bgp_config",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "dhcpd_config",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "extra_routes",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "gateway_matching",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ip_configs",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "networks",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "oob_ip_config",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "path_preferences",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "port_config",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "routing_policies",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "service_policies",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "tunnel_configs",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Gateway Template is applied to a site for gateway(s) in a site."
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/gatewaytemplates/{gatewaytemplate_id}",
      "method": "deleteOrgGatewayTemplate",
      "httpMethod": "delete",
      "tag": "Orgs Gateway Templates",
      "description": "deleteOrgGatewayTemplate",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/gatewaytemplates/{gatewaytemplate_id}",
      "method": "getOrgGatewayTemplate",
      "httpMethod": "get",
      "tag": "Orgs Gateway Templates",
      "description": "getOrgGatewayTemplate",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "Gateway Template is applied to a site for gateway(s) in a site."
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/gatewaytemplates/{gatewaytemplate_id}",
      "method": "updateOrgGatewayTemplate",
      "httpMethod": "put",
      "tag": "Orgs Gateway Templates",
      "description": "updateOrgGatewayTemplate",
      "parameters": [
        {
          "name": "additional_config_cmds",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "bgp_config",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "dhcpd_config",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "extra_routes",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "gateway_matching",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ip_configs",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "networks",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "oob_ip_config",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "path_preferences",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "port_config",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "routing_policies",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "service_policies",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "tunnel_configs",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Gateway Template is applied to a site for gateway(s) in a site."
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/guests",
      "method": "listOrgGuestAuthorizations",
      "httpMethod": "get",
      "tag": "Orgs Guests",
      "description": "listOrgGuestAuthorizations",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/guests/count",
      "method": "countOrgGuestAuthorizations",
      "httpMethod": "get",
      "tag": "Orgs Guests",
      "description": "countOrgGuestAuthorizations",
      "parameters": [
        {
          "name": "distinct",
          "schema": "string",
          "description": ""
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/guests/search",
      "method": "searchOrgGuestAuthorization",
      "httpMethod": "get",
      "tag": "Orgs Guests",
      "description": "searchOrgGuestAuthorization",
      "parameters": [
        {
          "name": "wlan_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "auth_method",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ssid",
          "schema": "string",
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/guests/{guest_mac}",
      "method": "deleteOrgGuestAuthorization",
      "httpMethod": "delete",
      "tag": "Orgs Guests",
      "description": "deleteOrgGuestAuthorization",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/guests/{guest_mac}",
      "method": "getOrgGuestAuthorization",
      "httpMethod": "get",
      "tag": "Orgs Guests",
      "description": "getOrgGuestAuthorization",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "Guest"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/guests/{guest_mac}",
      "method": "updateOrgGuestAuthorization",
      "httpMethod": "put",
      "tag": "Orgs Guests",
      "description": "updateOrgGuestAuthorization",
      "parameters": [
        {
          "name": "authorized",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "authorized_expiring_time",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "authorized_time",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "company",
          "schema": "string",
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "field1",
          "schema": "string",
          "description": ""
        },
        {
          "name": "field2",
          "schema": "string",
          "description": ""
        },
        {
          "name": "field3",
          "schema": "string",
          "description": ""
        },
        {
          "name": "field4",
          "schema": "string",
          "description": ""
        },
        {
          "name": "mac",
          "schema": "string",
          "description": ""
        },
        {
          "name": "minutes",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ssid",
          "schema": "string",
          "description": ""
        },
        {
          "name": "wlan_id",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Guest"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/insights/sites-sle",
      "method": "getOrgSitesSle",
      "httpMethod": "get",
      "tag": "Orgs SLEs",
      "description": "getOrgSitesSle",
      "parameters": [
        {
          "name": "sle",
          "schema": "string",
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        },
        {
          "name": "interval",
          "schema": "string",
          "required": false,
          "description": "Aggregation works by giving a time range plus interval (e.g. 1d, 1h, 10m) where aggregation function would be applied to."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/insights/{metric}",
      "method": "getOrgSle",
      "httpMethod": "get",
      "tag": "Orgs SLEs",
      "description": "getOrgSle",
      "parameters": [
        {
          "name": "sle",
          "schema": "string",
          "description": "see [/api/v1/const/insight_metrics](/#tag/Constants/operation/getSiteAvailableInsightMetrics) for more details"
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        },
        {
          "name": "interval",
          "schema": "string",
          "required": false,
          "description": "Aggregation works by giving a time range plus interval (e.g. 1d, 1h, 10m) where aggregation function would be applied to."
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/inventory",
      "method": "getOrgInventory",
      "httpMethod": "get",
      "tag": "Orgs Inventory",
      "description": "getOrgInventory",
      "parameters": [
        {
          "name": "serial",
          "schema": "string",
          "description": "device serial"
        },
        {
          "name": "model",
          "schema": "string",
          "description": "device model"
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "mac",
          "schema": "string",
          "description": "MAC address"
        },
        {
          "name": "site_id",
          "schema": "string",
          "description": "site id if assigned, null if not assigned"
        },
        {
          "name": "vc_mac",
          "schema": "string",
          "description": ""
        },
        {
          "name": "vc",
          "schema": "string",
          "description": ""
        },
        {
          "name": "unassigned",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/inventory",
      "method": "addOrgInventory",
      "httpMethod": "post",
      "tag": "Orgs Inventory",
      "description": "addOrgInventory",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/inventory",
      "method": "updateOrgInventoryAssignment",
      "httpMethod": "put",
      "tag": "Orgs Inventory",
      "description": "updateOrgInventoryAssignment",
      "parameters": [
        {
          "name": "disable_auto_config",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "macs",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "managed",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "no_reassign",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "op",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "serials",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/inventory/reevaluate_auto_assignment",
      "method": "reevaluateOrgAutoAssignment",
      "httpMethod": "post",
      "tag": "Orgs Inventory",
      "description": "reevaluateOrgAutoAssignment",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/inventory/replace",
      "method": "replaceOrgDevices",
      "httpMethod": "post",
      "tag": "Orgs Inventory",
      "description": "replaceOrgDevices",
      "parameters": [
        {
          "name": "discard",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "inventory_mac",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "mac",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/invites",
      "method": "inviteOrgAdmin",
      "httpMethod": "post",
      "tag": "Orgs Invites",
      "description": "inviteOrgAdmin",
      "parameters": [
        {
          "name": "admin_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "enable_two_factor",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "first_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "hours",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "last_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "oauth_google",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "phone",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "phone2",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "privileges",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "session_expiry",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "tags",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "two_factor_verified",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "via_sso",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/invites/{invite_id}",
      "method": "uninviteOrgAdmin",
      "httpMethod": "delete",
      "tag": "Orgs Invites",
      "description": "uninviteOrgAdmin",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/invites/{invite_id}",
      "method": "updateOrgAdminInvite",
      "httpMethod": "put",
      "tag": "Orgs Invites",
      "description": "updateOrgAdminInvite",
      "parameters": [
        {
          "name": "admin_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "enable_two_factor",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "first_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "hours",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "last_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "oauth_google",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "phone",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "phone2",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "privileges",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "session_expiry",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "tags",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "two_factor_verified",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "via_sso",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/jsi/devices",
      "method": "listOrgJsiDevices",
      "httpMethod": "get",
      "tag": "Orgs JSI",
      "description": "listOrgJsiDevices",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "model",
          "schema": "string",
          "description": ""
        },
        {
          "name": "serial",
          "schema": "string",
          "description": ""
        },
        {
          "name": "mac",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/jsi/devices/outbound_ssh_cmd",
      "method": "adoptOrgJsiDevice",
      "httpMethod": "get",
      "tag": "Orgs JSI",
      "description": "adoptOrgJsiDevice",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/jsi/devices/{device_mac}/shell",
      "method": "createOrgJsiDeviceShellSession",
      "httpMethod": "post",
      "tag": "Orgs JSI",
      "description": "createOrgJsiDeviceShellSession",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/jsi/devices/{device_mac}/upgrade",
      "method": "upgradeOrgJsiDevice",
      "httpMethod": "post",
      "tag": "Orgs Devices Upgrades",
      "description": "upgradeOrgJsiDevice",
      "parameters": [
        {
          "name": "version",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/jsi/inventory",
      "method": "listOrgJsiPastPurchases",
      "httpMethod": "get",
      "tag": "Orgs JSI",
      "description": "listOrgJsiPastPurchases",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "model",
          "schema": "string",
          "description": ""
        },
        {
          "name": "serial",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/licenses",
      "method": "getOrgLicencesSummary",
      "httpMethod": "get",
      "tag": "Orgs Licenses",
      "description": "getOrgLicencesSummary",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "License"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/licenses",
      "method": "moveOrDeleteOrgLicenseToAnotherOrg",
      "httpMethod": "put",
      "tag": "Orgs Licenses",
      "description": "moveOrDeleteOrgLicenseToAnotherOrg",
      "parameters": [
        {
          "name": "amendment_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dst_org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "notes",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "op",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "quantity",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "subscription_id",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/licenses/usages",
      "method": "getOrgLicencesBySite",
      "httpMethod": "get",
      "tag": "Orgs Licenses",
      "description": "getOrgLicencesBySite",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/logs",
      "method": "listOrgLogs",
      "httpMethod": "get",
      "tag": "Orgs Logs",
      "description": "listOrgLogs",
      "parameters": [
        {
          "name": "site_id",
          "schema": "string",
          "description": "site id"
        },
        {
          "name": "admin_name",
          "schema": "string",
          "description": "admin name or email"
        },
        {
          "name": "message",
          "schema": "string",
          "description": "message"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/logs/count",
      "method": "countOrgLogs",
      "httpMethod": "get",
      "tag": "Orgs Logs",
      "description": "countOrgLogs",
      "parameters": [
        {
          "name": "distinct",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "admin_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "admin_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "message",
          "schema": "string",
          "description": ""
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/maps/import",
      "method": "importOrgMaps",
      "httpMethod": "post",
      "tag": "Orgs Maps",
      "description": "importOrgMaps",
      "parameters": [
        {
          "name": "auto_deviceprofile_assignment",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "csv",
          "schema": "string",
          "description": ""
        },
        {
          "name": "file",
          "schema": "string",
          "description": ""
        },
        {
          "name": "json",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/mxclusters",
      "method": "listOrgMxEdgeClusters",
      "httpMethod": "get",
      "tag": "Orgs MxClusters",
      "description": "listOrgMxEdgeClusters",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/mxclusters",
      "method": "createOrgMxEdgeCluster",
      "httpMethod": "post",
      "tag": "Orgs MxClusters",
      "description": "createOrgMxEdgeCluster",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "mist_das",
          "schema": "object",
          "description": ""
        },
        {
          "name": "mist_nac",
          "schema": "object",
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "proxy",
          "schema": "object",
          "description": ""
        },
        {
          "name": "radsec",
          "schema": "object",
          "description": ""
        },
        {
          "name": "radsec_tls",
          "schema": "object",
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "tunterm_ap_subnets",
          "schema": "array",
          "description": ""
        },
        {
          "name": "tunterm_dhcpd_config",
          "schema": "object",
          "description": ""
        },
        {
          "name": "tunterm_extra_routes",
          "schema": "object",
          "description": ""
        },
        {
          "name": "tunterm_hosts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "tunterm_hosts_order",
          "schema": "array",
          "description": ""
        },
        {
          "name": "tunterm_hosts_selection",
          "schema": "string",
          "description": ""
        },
        {
          "name": "tunterm_monitoring",
          "schema": "array",
          "description": ""
        },
        {
          "name": "tunterm_monitoring_disabled",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "mxCluster"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/mxclusters/{mxcluster_id}",
      "method": "deleteOrgMxEdgeCluster",
      "httpMethod": "delete",
      "tag": "Orgs MxClusters",
      "description": "deleteOrgMxEdgeCluster",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/mxclusters/{mxcluster_id}",
      "method": "getOrgMxEdgeCluster",
      "httpMethod": "get",
      "tag": "Orgs MxClusters",
      "description": "getOrgMxEdgeCluster",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "mxCluster"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/mxclusters/{mxcluster_id}",
      "method": "updateOrgMxEdgeCluster",
      "httpMethod": "put",
      "tag": "Orgs MxClusters",
      "description": "updateOrgMxEdgeCluster",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "mist_das",
          "schema": "object",
          "description": ""
        },
        {
          "name": "mist_nac",
          "schema": "object",
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "proxy",
          "schema": "object",
          "description": ""
        },
        {
          "name": "radsec",
          "schema": "object",
          "description": ""
        },
        {
          "name": "radsec_tls",
          "schema": "object",
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "tunterm_ap_subnets",
          "schema": "array",
          "description": ""
        },
        {
          "name": "tunterm_dhcpd_config",
          "schema": "object",
          "description": ""
        },
        {
          "name": "tunterm_extra_routes",
          "schema": "object",
          "description": ""
        },
        {
          "name": "tunterm_hosts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "tunterm_hosts_order",
          "schema": "array",
          "description": ""
        },
        {
          "name": "tunterm_hosts_selection",
          "schema": "string",
          "description": ""
        },
        {
          "name": "tunterm_monitoring",
          "schema": "array",
          "description": ""
        },
        {
          "name": "tunterm_monitoring_disabled",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "mxCluster"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/mxedges",
      "method": "listOrgMxEdges",
      "httpMethod": "get",
      "tag": "Orgs MxEdges",
      "description": "listOrgMxEdges",
      "parameters": [
        {
          "name": "for_sites",
          "schema": "string",
          "description": "filter for site level mist edges"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/mxedges",
      "method": "createOrgMxEdge",
      "httpMethod": "post",
      "tag": "Orgs MxEdges",
      "description": "createOrgMxEdge",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "magic",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "model",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "mxagent_registered",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "mxcluster_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mxedge_mgmt",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ntp_servers",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "oob_ip_config",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "proxy",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "services",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tunterm_dhcpd_config",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "tunterm_extra_routes",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "tunterm_igmp_snooping_config",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "tunterm_ip_config",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "tunterm_monitoring",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "tunterm_other_ip_configs",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "tunterm_port_config",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "tunterm_registered",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "tunterm_switch_config",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "versions",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "MxEdge"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/mxedges/assign",
      "method": "assignOrgMxEdgeToSite",
      "httpMethod": "post",
      "tag": "Orgs MxEdges",
      "description": "assignOrgMxEdgeToSite",
      "parameters": [
        {
          "name": "mxedge_ids",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/mxedges/claim",
      "method": "claimOrgMxEdge",
      "httpMethod": "post",
      "tag": "Orgs MxEdges",
      "description": "claimOrgMxEdge",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/mxedges/unassign",
      "method": "unassignOrgMxEdgeFromSite",
      "httpMethod": "post",
      "tag": "Orgs MxEdges",
      "description": "unassignOrgMxEdgeFromSite",
      "parameters": [
        {
          "name": "mxedge_ids",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/mxedges/upgrade",
      "method": "listOrgMxEdgeUpgrades",
      "httpMethod": "get",
      "tag": "Orgs Devices Upgrades",
      "description": "listOrgMxEdgeUpgrades",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/mxedges/upgrade",
      "method": "upgradeOrgMxEdges",
      "httpMethod": "post",
      "tag": "Orgs Devices Upgrades",
      "description": "upgradeOrgMxEdges",
      "parameters": [
        {
          "name": "allow_downgrades",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "channel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "distro",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mxedge_ids",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "strategy",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "versions",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/mxedges/upgrade/{upgrade_id}",
      "method": "getOrgMxEdgeUpgrade",
      "httpMethod": "get",
      "tag": "Orgs Devices Upgrades",
      "description": "getOrgMxEdgeUpgrade",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/mxedges/version",
      "method": "getOrgMxEdgeUpgradeInfo",
      "httpMethod": "get",
      "tag": "Orgs MxEdges",
      "description": "getOrgMxEdgeUpgradeInfo",
      "parameters": [
        {
          "name": "channel",
          "schema": "string",
          "description": "upgrade channel to follow, stable (default) / beta / alpha"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/mxedges/{mxedge_id}",
      "method": "deleteOrgMxEdge",
      "httpMethod": "delete",
      "tag": "Orgs MxEdges",
      "description": "deleteOrgMxEdge",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/mxedges/{mxedge_id}",
      "method": "getOrgMxEdge",
      "httpMethod": "get",
      "tag": "Orgs MxEdges",
      "description": "getOrgMxEdge",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "MxEdge"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/mxedges/{mxedge_id}",
      "method": "updateOrgMxEdge",
      "httpMethod": "put",
      "tag": "Orgs MxEdges",
      "description": "updateOrgMxEdge",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "magic",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "model",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "mxagent_registered",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "mxcluster_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mxedge_mgmt",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ntp_servers",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "oob_ip_config",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "proxy",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "services",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tunterm_dhcpd_config",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "tunterm_extra_routes",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "tunterm_igmp_snooping_config",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "tunterm_ip_config",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "tunterm_monitoring",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "tunterm_other_ip_configs",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "tunterm_port_config",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "tunterm_registered",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "tunterm_switch_config",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "versions",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "MxEdge"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/mxedges/{mxedge_id}/restart",
      "method": "restartOrgMxEdge",
      "httpMethod": "post",
      "tag": "Orgs MxEdges",
      "description": "restartOrgMxEdge",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/mxedges/{mxedge_id}/services/tunterm/bounce_port",
      "method": "bounceOrgMxEdgeDataPorts",
      "httpMethod": "post",
      "tag": "Orgs MxEdges",
      "description": "bounceOrgMxEdgeDataPorts",
      "parameters": [
        {
          "name": "hold_time",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "ports",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/mxedges/{mxedge_id}/services/{name}/{action}",
      "method": "controlOrgMxEdgeServices",
      "httpMethod": "post",
      "tag": "Orgs MxEdges",
      "description": "controlOrgMxEdgeServices",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/mxedges/{mxedge_id}/support",
      "method": "uploadOrgMxEdgeSupportFiles",
      "httpMethod": "post",
      "tag": "Orgs MxEdges",
      "description": "uploadOrgMxEdgeSupportFiles",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/mxedges/{mxedge_id}/unregister",
      "method": "unregisterOrgMxEdge",
      "httpMethod": "post",
      "tag": "Orgs MxEdges",
      "description": "unregisterOrgMxEdge",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/mxedges/{mxedge_id}/upgrade",
      "method": "upgradeOrgMxEdge",
      "httpMethod": "post",
      "tag": "Orgs Devices Upgrades",
      "description": "upgradeOrgMxEdge",
      "parameters": [
        {
          "name": "channel",
          "schema": "string",
          "description": ""
        },
        {
          "name": "mxedge_ids",
          "schema": "array",
          "description": ""
        },
        {
          "name": "versions",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/mxtunnels",
      "method": "listOrgMxTunnels",
      "httpMethod": "get",
      "tag": "Orgs MxTunnels",
      "description": "listOrgMxTunnels",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/mxtunnels",
      "method": "createOrgMxTunnel",
      "httpMethod": "post",
      "tag": "Orgs MxTunnels",
      "description": "createOrgMxTunnel",
      "parameters": [
        {
          "name": "anchor_mxtunnel_ids",
          "schema": "array",
          "description": ""
        },
        {
          "name": "auto_preemption",
          "schema": "object",
          "description": ""
        },
        {
          "name": "created_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "hello_interval",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "hello_retries",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ipsec",
          "schema": "object",
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "mtu",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "mxcluster_ids",
          "schema": "array",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "protocol",
          "schema": "string",
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "vlan_ids",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "MxTunnel"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/mxtunnels/{mxtunnel_id}",
      "method": "deleteOrgMxTunnel",
      "httpMethod": "delete",
      "tag": "Orgs MxTunnels",
      "description": "deleteOrgMxTunnel",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/mxtunnels/{mxtunnel_id}",
      "method": "getOrgMxTunnel",
      "httpMethod": "get",
      "tag": "Orgs MxTunnels",
      "description": "getOrgMxTunnel",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "MxTunnel"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/mxtunnels/{mxtunnel_id}",
      "method": "updateOrgMxTunnel",
      "httpMethod": "put",
      "tag": "Orgs MxTunnels",
      "description": "updateOrgMxTunnel",
      "parameters": [
        {
          "name": "anchor_mxtunnel_ids",
          "schema": "array",
          "description": ""
        },
        {
          "name": "auto_preemption",
          "schema": "object",
          "description": ""
        },
        {
          "name": "created_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "hello_interval",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "hello_retries",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ipsec",
          "schema": "object",
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "mtu",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "mxcluster_ids",
          "schema": "array",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "protocol",
          "schema": "string",
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "vlan_ids",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "MxTunnel"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/nacrules",
      "method": "listOrgNacRules",
      "httpMethod": "get",
      "tag": "Orgs NAC Rules",
      "description": "listOrgNacRules",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/nacrules",
      "method": "createOrgNacRule",
      "httpMethod": "post",
      "tag": "Orgs NAC Rules",
      "description": "createOrgNacRule",
      "parameters": [
        {
          "name": "action",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "apply_tags",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "created_time",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "matching",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "not_matching",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "order",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/nacrules/{nacrule_id}",
      "method": "deleteOrgNacRule",
      "httpMethod": "delete",
      "tag": "Orgs NAC Rules",
      "description": "deleteOrgNacRule",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/nacrules/{nacrule_id}",
      "method": "getOrgNacRule",
      "httpMethod": "get",
      "tag": "Orgs NAC Rules",
      "description": "getOrgNacRule",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/nacrules/{nacrule_id}",
      "method": "updateOrgNacRule",
      "httpMethod": "put",
      "tag": "Orgs NAC Rules",
      "description": "updateOrgNacRule",
      "parameters": [
        {
          "name": "action",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "apply_tags",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "created_time",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "matching",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "not_matching",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "order",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/nactags",
      "method": "listOrgNacTags",
      "httpMethod": "get",
      "tag": "Orgs NAC Tags",
      "description": "listOrgNacTags",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/nactags",
      "method": "createOrgNacTag",
      "httpMethod": "post",
      "tag": "Orgs NAC Tags",
      "description": "createOrgNacTag",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "gbp_tag",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "match",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "radius_group",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "values",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "vlan",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/nactags/{nactag_id}",
      "method": "deleteOrgNacTag",
      "httpMethod": "delete",
      "tag": "Orgs NAC Tags",
      "description": "DeleteOrgNacTag",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/nactags/{nactag_id}",
      "method": "getOrgNacTag",
      "httpMethod": "get",
      "tag": "Orgs NAC Tags",
      "description": "getOrgNacTag",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/nactags/{nactag_id}",
      "method": "updateOrgNacTag",
      "httpMethod": "put",
      "tag": "Orgs NAC Tags",
      "description": "updateOrgNacTag",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "gbp_tag",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "match",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "radius_group",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "values",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "vlan",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/networks",
      "method": "listOrgNetworks",
      "httpMethod": "get",
      "tag": "Orgs Networks",
      "description": "listOrgNetworks",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/networks",
      "method": "createOrgNetwork",
      "httpMethod": "post",
      "tag": "Orgs Networks",
      "description": "createOrgNetwork",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "disallow_mist_services",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "gateway",
          "schema": "string",
          "description": ""
        },
        {
          "name": "hosts",
          "schema": "object",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "internal_access",
          "schema": "object",
          "description": ""
        },
        {
          "name": "internet_access",
          "schema": "object",
          "description": ""
        },
        {
          "name": "isolation",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "subnet",
          "schema": "string",
          "description": ""
        },
        {
          "name": "tenants",
          "schema": "object",
          "description": ""
        },
        {
          "name": "vlan_id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "vpn_access",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Networks are usually subnets that have cross-site significance. `networks`in Org Settings will got merged into `networks`in Site Setting. For gateways, they can be used to define Service Routes."
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/networks/{network_id}",
      "method": "deleteOrgNetwork",
      "httpMethod": "delete",
      "tag": "Orgs Networks",
      "description": "deleteOrgNetwork",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/networks/{network_id}",
      "method": "getOrgNetwork",
      "httpMethod": "get",
      "tag": "Orgs Gateway Templates",
      "description": "getOrgNetwork",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "Networks are usually subnets that have cross-site significance. `networks`in Org Settings will got merged into `networks`in Site Setting. For gateways, they can be used to define Service Routes."
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/networks/{network_id}",
      "method": "updateOrgNetwork",
      "httpMethod": "put",
      "tag": "Orgs Networks",
      "description": "updateOrgNetwork",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "disallow_mist_services",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "gateway",
          "schema": "string",
          "description": ""
        },
        {
          "name": "hosts",
          "schema": "object",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "internal_access",
          "schema": "object",
          "description": ""
        },
        {
          "name": "internet_access",
          "schema": "object",
          "description": ""
        },
        {
          "name": "isolation",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "subnet",
          "schema": "string",
          "description": ""
        },
        {
          "name": "tenants",
          "schema": "object",
          "description": ""
        },
        {
          "name": "vlan_id",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "vpn_access",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Networks are usually subnets that have cross-site significance. `networks`in Org Settings will got merged into `networks`in Site Setting. For gateways, they can be used to define Service Routes."
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/networktemplates",
      "method": "listOrgNetworkTemplates",
      "httpMethod": "get",
      "tag": "Orgs Network Templates",
      "description": "listOrgNetworkTemplates",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/networktemplates",
      "method": "createOrgNetworkTemplate",
      "httpMethod": "post",
      "tag": "Orgs Network Templates",
      "description": "createOrgNetworkTemplate",
      "parameters": [
        {
          "name": "additional_config_cmds",
          "schema": "array",
          "description": ""
        },
        {
          "name": "created_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "dhcp_snooping",
          "schema": "object",
          "description": ""
        },
        {
          "name": "dns_servers",
          "schema": "array",
          "description": ""
        },
        {
          "name": "dns_suffix",
          "schema": "array",
          "description": ""
        },
        {
          "name": "extra_routes",
          "schema": "object",
          "description": ""
        },
        {
          "name": "group_tags",
          "schema": "object",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "mist_nac",
          "schema": "object",
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "networks",
          "schema": "object",
          "description": ""
        },
        {
          "name": "ntp_servers",
          "schema": "array",
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "port_usages",
          "schema": "object",
          "description": ""
        },
        {
          "name": "radius_config",
          "schema": "object",
          "description": ""
        },
        {
          "name": "remote_syslog",
          "schema": "object",
          "description": ""
        },
        {
          "name": "snmp_config",
          "schema": "object",
          "description": ""
        },
        {
          "name": "switch_matching",
          "schema": "object",
          "description": ""
        },
        {
          "name": "switch_mgmt",
          "schema": "object",
          "description": ""
        },
        {
          "name": "vrf_config",
          "schema": "object",
          "description": ""
        },
        {
          "name": "vrf_instances",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Network Template"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/networktemplates/{networktemplate_id}",
      "method": "deleteOrgNetworkTemplate",
      "httpMethod": "delete",
      "tag": "Orgs Network Templates",
      "description": "deleteOrgNetworkTemplate",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/networktemplates/{networktemplate_id}",
      "method": "getOrgNetworkTemplate",
      "httpMethod": "get",
      "tag": "Orgs Network Templates",
      "description": "getOrgNetworkTemplate",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "Network Template"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/networktemplates/{networktemplate_id}",
      "method": "updateOrgNetworkTemplates",
      "httpMethod": "put",
      "tag": "Orgs Network Templates",
      "description": "updateOrgNetworkTemplates",
      "parameters": [
        {
          "name": "additional_config_cmds",
          "schema": "array",
          "description": ""
        },
        {
          "name": "created_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "dhcp_snooping",
          "schema": "object",
          "description": ""
        },
        {
          "name": "dns_servers",
          "schema": "array",
          "description": ""
        },
        {
          "name": "dns_suffix",
          "schema": "array",
          "description": ""
        },
        {
          "name": "extra_routes",
          "schema": "object",
          "description": ""
        },
        {
          "name": "group_tags",
          "schema": "object",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "mist_nac",
          "schema": "object",
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "networks",
          "schema": "object",
          "description": ""
        },
        {
          "name": "ntp_servers",
          "schema": "array",
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "port_usages",
          "schema": "object",
          "description": ""
        },
        {
          "name": "radius_config",
          "schema": "object",
          "description": ""
        },
        {
          "name": "remote_syslog",
          "schema": "object",
          "description": ""
        },
        {
          "name": "snmp_config",
          "schema": "object",
          "description": ""
        },
        {
          "name": "switch_matching",
          "schema": "object",
          "description": ""
        },
        {
          "name": "switch_mgmt",
          "schema": "object",
          "description": ""
        },
        {
          "name": "vrf_config",
          "schema": "object",
          "description": ""
        },
        {
          "name": "vrf_instances",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Network Template"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/ocdevices/outbound_ssh_cmd",
      "method": "getOrgJuniperDevicesCommand",
      "httpMethod": "get",
      "tag": "Orgs Devices",
      "description": "getOrgJuniperDevicesCommand",
      "parameters": [
        {
          "name": "site_id",
          "schema": "string",
          "description": "site_id would be used for proxy config check of the site and automatic site assignment"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/otherdevices",
      "method": "listOrgOtherDevices",
      "httpMethod": "get",
      "tag": "Orgs Devices Others",
      "description": "listOrgOtherDevices",
      "parameters": [
        {
          "name": "vendor",
          "schema": "string",
          "description": ""
        },
        {
          "name": "mac",
          "schema": "string",
          "description": ""
        },
        {
          "name": "serial",
          "schema": "string",
          "description": ""
        },
        {
          "name": "model",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/otherdevices",
      "method": "updateOrgOtherDevices",
      "httpMethod": "put",
      "tag": "Orgs Devices Others",
      "description": "updateOrgOtherDevices",
      "parameters": [
        {
          "name": "device_mac",
          "schema": "string",
          "description": ""
        },
        {
          "name": "macs",
          "schema": "array",
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/otherdevices/{device_mac}",
      "method": "deleteOrgOtherDevice",
      "httpMethod": "delete",
      "tag": "Orgs Devices Others",
      "description": "deleteOrgOtherDevice",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/otherdevices/{device_mac}",
      "method": "getOrgOtherDevice",
      "httpMethod": "get",
      "tag": "Orgs Devices Others",
      "description": "getOrgOtherDevice",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/otherdevices/{device_mac}",
      "method": "updateOrgOtherDevice",
      "httpMethod": "put",
      "tag": "Orgs Devices Others",
      "description": "updateOrgOtherDevice",
      "parameters": [
        {
          "name": "device_mac",
          "schema": "string",
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/pma/dashboards",
      "method": "listOrgPmaDashboards",
      "httpMethod": "get",
      "tag": "Orgs Premium Analytics",
      "description": "listOrgPmaDashboards",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/pskportals",
      "method": "listOrgPskPortals",
      "httpMethod": "get",
      "tag": "Orgs Psk Portals",
      "description": "listOrgPskPortals",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/pskportals",
      "method": "createOrgPskPortal",
      "httpMethod": "post",
      "tag": "Orgs Psk Portals",
      "description": "createOrgPskPortal",
      "parameters": [
        {
          "name": "auth",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "bg_image_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "cleanup_psk",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "created_time",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "expire_time",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "expiry_notification_time",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "hide_psks_created_by_other_admins",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "max_usage",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "notify_expiry",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "notify_on_create_or_edit",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "passphrase_rules",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "required_fields",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "role",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ssid",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sso",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "template_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "thumbnail_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "vlan_id",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/pskportals/{pskportal_id}",
      "method": "deleteOrgPskPortal",
      "httpMethod": "delete",
      "tag": "Orgs Psk Portals",
      "description": "deleteOrgPskPortal",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/pskportals/{pskportal_id}",
      "method": "getOrgPskPortal",
      "httpMethod": "get",
      "tag": "Orgs Psk Portals",
      "description": "getOrgPskPortal",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/pskportals/{pskportal_id}",
      "method": "updateOrgPskPortal",
      "httpMethod": "put",
      "tag": "Orgs Psk Portals",
      "description": "updateOrgPskPortal",
      "parameters": [
        {
          "name": "auth",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "bg_image_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "cleanup_psk",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "created_time",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "expire_time",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "expiry_notification_time",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "hide_psks_created_by_other_admins",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "max_usage",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "notify_expiry",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "notify_on_create_or_edit",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "passphrase_rules",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "required_fields",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "role",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ssid",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sso",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "template_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "thumbnail_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "vlan_id",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/psks",
      "method": "listOrgPsks",
      "httpMethod": "get",
      "tag": "Orgs Psks",
      "description": "listOrgPsks",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ssid",
          "schema": "string",
          "description": ""
        },
        {
          "name": "role",
          "schema": "string",
          "description": ""
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/psks",
      "method": "createOrgPsk",
      "httpMethod": "post",
      "tag": "Orgs Psks",
      "description": "createOrgPsk",
      "parameters": [
        {
          "name": "upsert",
          "schema": "boolean",
          "description": "if a key exists with the same `name`, replace it with the new one"
        },
        {
          "name": "admin_sso_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "expire_time",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "expiry_notification_time",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mac",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "max_usage",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "note",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "notify_expiry",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "notify_on_create_or_edit",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "old_passphrase",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "passphrase",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "role",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ssid",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "usage",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "vlan_id",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "PSK"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/psks",
      "method": "updateOrgMultiPsks",
      "httpMethod": "put",
      "tag": "Orgs Psks",
      "description": "updateOrgMultiPsks",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/psks/import",
      "method": "importOrgPsks",
      "httpMethod": "post",
      "tag": "Orgs Psks",
      "description": "importOrgPsks",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/psks/{psk_id}",
      "method": "deleteOrgPsk",
      "httpMethod": "delete",
      "tag": "Orgs Psks",
      "description": "deleteOrgPsk",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/psks/{psk_id}",
      "method": "getOrgPsk",
      "httpMethod": "get",
      "tag": "Orgs Psks",
      "description": "getOrgPsk",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "PSK"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/psks/{psk_id}",
      "method": "updateOrgPsk",
      "httpMethod": "put",
      "tag": "Orgs Psks",
      "description": "updateOrgPsk",
      "parameters": [
        {
          "name": "admin_sso_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "expire_time",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "expiry_notification_time",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mac",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "max_usage",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "note",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "notify_expiry",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "notify_on_create_or_edit",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "old_passphrase",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "passphrase",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "role",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ssid",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "usage",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "vlan_id",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "PSK"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/psks/{psk_id}/delete_old_passphrase",
      "method": "deleteOrgPskOldPassphrase",
      "httpMethod": "post",
      "tag": "Orgs Psks",
      "description": "deleteOrgPskOldPassphrase",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "PSK"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/rftemplates",
      "method": "listOrgRfTemplates",
      "httpMethod": "get",
      "tag": "Orgs RF Templates",
      "description": "listOrgRfTemplates",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/rftemplates",
      "method": "createOrgRfTemplate",
      "httpMethod": "post",
      "tag": "Orgs RF Templates",
      "description": "createOrgRfTemplate",
      "parameters": [
        {
          "name": "ant_gain_24",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "ant_gain_5",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "band_24",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "band_24_usage",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "band_5",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "band_5_on_24_radio",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "country_code",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "model_specific",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "scanning_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "RF Template"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/rftemplates/{rftemplate_id}",
      "method": "deleteOrgRfTemplate",
      "httpMethod": "delete",
      "tag": "Orgs RF Templates",
      "description": "deleteOrgRfTemplate",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/rftemplates/{rftemplate_id}",
      "method": "getOrgRfTemplate",
      "httpMethod": "get",
      "tag": "Orgs RF Templates",
      "description": "getOrgRfTemplate",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "RF Template"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/rftemplates/{rftemplate_id}",
      "method": "updateOrgRfTemplate",
      "httpMethod": "put",
      "tag": "Orgs RF Templates",
      "description": "updateOrgRfTemplate",
      "parameters": [
        {
          "name": "ant_gain_24",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "ant_gain_5",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "band_24",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "band_24_usage",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "band_5",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "band_5_on_24_radio",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "country_code",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "model_specific",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "scanning_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "RF Template"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/sdkclients/{sdkclient_id}",
      "method": "updateSdkClient",
      "httpMethod": "put",
      "tag": "Orgs SDK Clients",
      "description": "updateSdkClient",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/sdkinvites",
      "method": "listSdkInvites",
      "httpMethod": "get",
      "tag": "Orgs SDK Invites",
      "description": "listSdkInvites",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/sdkinvites",
      "method": "createSdkInvite",
      "httpMethod": "post",
      "tag": "Orgs SDK Invites",
      "description": "createSdkInvite",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "expire_time",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "quota",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "quota_limited",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "SDK invite"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/sdkinvites/{sdkinvite_id}",
      "method": "revokeSdkInvite",
      "httpMethod": "delete",
      "tag": "Orgs SDK Invites",
      "description": "revokeSdkInvite",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/sdkinvites/{sdkinvite_id}",
      "method": "getSdkInvite",
      "httpMethod": "get",
      "tag": "Orgs SDK Invites",
      "description": "getSdkInvite",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "SDK invite"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/sdkinvites/{sdkinvite_id}",
      "method": "updateSdkInvite",
      "httpMethod": "put",
      "tag": "Orgs SDK Invites",
      "description": "updateSdkInvite",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "expire_time",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "quota",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "quota_limited",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "SDK invite"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/sdkinvites/{sdkinvite_id}/email",
      "method": "sendSdkInviteEmail",
      "httpMethod": "post",
      "tag": "Orgs SDK Invites",
      "description": "sendSdkInviteEmail",
      "parameters": [
        {
          "name": "email",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/sdkinvites/{sdkinvite_id}/qrcode",
      "method": "getSdkInviteQrCode",
      "httpMethod": "get",
      "tag": "Orgs SDK Invites",
      "description": "getSdkInviteQrCode",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "File"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/sdkinvites/{sdkinvite_id}/sms",
      "method": "sendSdkInviteSms",
      "httpMethod": "post",
      "tag": "Orgs SDK Invites",
      "description": "sendSdkInviteSms",
      "parameters": [
        {
          "name": "number",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/sdktemplates",
      "method": "listSdkTemplates",
      "httpMethod": "get",
      "tag": "Orgs SDK Templates",
      "description": "listSdkTemplates",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/sdktemplates",
      "method": "createSdkTemplate",
      "httpMethod": "post",
      "tag": "Orgs SDK Templates",
      "description": "createSdkTemplate",
      "parameters": [
        {
          "name": "bg_image",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "btn_flr_bgcolor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "default",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "header_txt",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "search_txtcolor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "welcome_msg",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "SDK Template"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/sdktemplates/{sdktemplate_id}",
      "method": "deleteSdkTemplate",
      "httpMethod": "delete",
      "tag": "Orgs SDK Templates",
      "description": "deleteSdkTemplate",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/sdktemplates/{sdktemplate_id}",
      "method": "getSdkTemplate",
      "httpMethod": "get",
      "tag": "Orgs SDK Templates",
      "description": "getSdkTemplate",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "SDK Template"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/sdktemplates/{sdktemplate_id}",
      "method": "updateSdkTemplate",
      "httpMethod": "put",
      "tag": "Orgs SDK Templates",
      "description": "updateSdkTemplate",
      "parameters": [
        {
          "name": "bg_image",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "btn_flr_bgcolor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "default",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "header_txt",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "search_txtcolor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "welcome_msg",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "SDK Template"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/secpolicies",
      "method": "listOrgSecPolicies",
      "httpMethod": "get",
      "tag": "Orgs SecPolicies",
      "description": "listOrgSecPolicies",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/secpolicies",
      "method": "createOrgSecPolicies",
      "httpMethod": "post",
      "tag": "Orgs SecPolicies",
      "description": "createOrgSecPolicies",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "wlans",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Security Policy is designed to audit / catch discripancies between “what’s intended to be running” versus “what’s actually running” in a network. Many big organizations have separated Security and IT team (for good reasons). Each site can be assigned a security policy. Whenever an AP is provisioned, the configuration will be checked against the security policy. Any violations will be flagged in Device Config History where you can search for the when and where the violation occurs."
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/secpolicies/{secpolicy_id}",
      "method": "deleteOrgSecPolicy",
      "httpMethod": "delete",
      "tag": "Orgs SecPolicies",
      "description": "deleteOrgSecPolicy",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/secpolicies/{secpolicy_id}",
      "method": "getOrgSecPolicy",
      "httpMethod": "get",
      "tag": "Orgs SecPolicies",
      "description": "getOrgSecPolicy",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "Security Policy is designed to audit / catch discripancies between “what’s intended to be running” versus “what’s actually running” in a network. Many big organizations have separated Security and IT team (for good reasons). Each site can be assigned a security policy. Whenever an AP is provisioned, the configuration will be checked against the security policy. Any violations will be flagged in Device Config History where you can search for the when and where the violation occurs."
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/secpolicies/{secpolicy_id}",
      "method": "updateOrgSecPolicies",
      "httpMethod": "put",
      "tag": "Orgs SecPolicies",
      "description": "updateOrgSecPolicies",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "wlans",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Security Policy is designed to audit / catch discripancies between “what’s intended to be running” versus “what’s actually running” in a network. Many big organizations have separated Security and IT team (for good reasons). Each site can be assigned a security policy. Whenever an AP is provisioned, the configuration will be checked against the security policy. Any violations will be flagged in Device Config History where you can search for the when and where the violation occurs."
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/servicepolicies",
      "method": "listOrgServicePolicies",
      "httpMethod": "get",
      "tag": "Orgs Service Policies",
      "description": "listOrgServicePolicies",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/servicepolicies",
      "method": "createOrgServicePolicy",
      "httpMethod": "post",
      "tag": "Orgs Service Policies",
      "description": "createOrgServicePolicy",
      "parameters": [
        {
          "name": "action",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "services",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "tenants",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/servicepolicies/{servicepolicy_id}",
      "method": "deleteOrgServicePolicy",
      "httpMethod": "delete",
      "tag": "Orgs Service Policies",
      "description": "deleteOrgServicePolicy",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/servicepolicies/{servicepolicy_id}",
      "method": "getOrgServicePolicy",
      "httpMethod": "get",
      "tag": "Orgs Service Policies",
      "description": "getOrgServicePolicy",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/servicepolicies/{servicepolicy_id}",
      "method": "updateOrgServicePolicy",
      "httpMethod": "put",
      "tag": "Orgs Service Policies",
      "description": "updateOrgServicePolicy",
      "parameters": [
        {
          "name": "action",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "services",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "tenants",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/services",
      "method": "listOrgServices",
      "httpMethod": "get",
      "tag": "Orgs Services",
      "description": "listOrgServices",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/services",
      "method": "createOrgService",
      "httpMethod": "post",
      "tag": "Orgs Services",
      "description": "createOrgService",
      "parameters": [
        {
          "name": "addresses",
          "schema": "array",
          "description": ""
        },
        {
          "name": "app_caetgories",
          "schema": "array",
          "description": ""
        },
        {
          "name": "apps",
          "schema": "array",
          "description": ""
        },
        {
          "name": "created_time",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "dscp",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "failover_policy",
          "schema": "string",
          "description": ""
        },
        {
          "name": "hostnames",
          "schema": "array",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "max_jitter",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "max_latency",
          "schema": "string",
          "description": ""
        },
        {
          "name": "max_loss",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "sle_enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "specs",
          "schema": "array",
          "description": ""
        },
        {
          "name": "traffic_class",
          "schema": "string",
          "description": ""
        },
        {
          "name": "traffic_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "vpn_name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "WIP"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/services/{service_id}",
      "method": "deleteOrgService",
      "httpMethod": "delete",
      "tag": "Orgs Services",
      "description": "deleteOrgService",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/services/{service_id}",
      "method": "getOrgService",
      "httpMethod": "get",
      "tag": "Orgs Services",
      "description": "getOrgService",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "WIP"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/services/{service_id}",
      "method": "updateOrgService",
      "httpMethod": "put",
      "tag": "Orgs Services",
      "description": "updateOrgService",
      "parameters": [
        {
          "name": "addresses",
          "schema": "array",
          "description": ""
        },
        {
          "name": "app_caetgories",
          "schema": "array",
          "description": ""
        },
        {
          "name": "apps",
          "schema": "array",
          "description": ""
        },
        {
          "name": "created_time",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "description": ""
        },
        {
          "name": "dscp",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "failover_policy",
          "schema": "string",
          "description": ""
        },
        {
          "name": "hostnames",
          "schema": "array",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "max_jitter",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "max_latency",
          "schema": "string",
          "description": ""
        },
        {
          "name": "max_loss",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "sle_enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "specs",
          "schema": "array",
          "description": ""
        },
        {
          "name": "traffic_class",
          "schema": "string",
          "description": ""
        },
        {
          "name": "traffic_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "vpn_name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "WIP"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/setting",
      "method": "getOrgSettings",
      "httpMethod": "get",
      "tag": "Orgs Setting",
      "description": "getOrgSettings",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "Org Settings"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/setting",
      "method": "updateOrgSettings",
      "httpMethod": "put",
      "tag": "Orgs Setting",
      "description": "updateOrgSettings",
      "parameters": [
        {
          "name": "auto_device_naming",
          "schema": "object",
          "description": ""
        },
        {
          "name": "auto_deviceprofile_assignment",
          "schema": "object",
          "description": ""
        },
        {
          "name": "auto_site_assignment",
          "schema": "object",
          "description": ""
        },
        {
          "name": "blacklist_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "cacerts",
          "schema": "array",
          "description": ""
        },
        {
          "name": "celona",
          "schema": "object",
          "description": ""
        },
        {
          "name": "cloudshark",
          "schema": "object",
          "description": ""
        },
        {
          "name": "cradlepoint",
          "schema": "object",
          "description": ""
        },
        {
          "name": "created_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "device_cert",
          "schema": "object",
          "description": ""
        },
        {
          "name": "device_updown_threshold",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "disable_pcap",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "disable_remote_shell",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "gateway_mgmt",
          "schema": "object",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "installer",
          "schema": "object",
          "description": ""
        },
        {
          "name": "juniper",
          "schema": "object",
          "description": ""
        },
        {
          "name": "mgmt",
          "schema": "object",
          "description": ""
        },
        {
          "name": "mist_nac",
          "schema": "object",
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "msp_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "mxedge_mgmt",
          "schema": "object",
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "password_policy",
          "schema": "object",
          "description": ""
        },
        {
          "name": "pcap",
          "schema": "object",
          "description": ""
        },
        {
          "name": "pcap_bucket_verified",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "remote_syslog",
          "schema": "object",
          "description": ""
        },
        {
          "name": "security",
          "schema": "object",
          "description": ""
        },
        {
          "name": "simple_alert",
          "schema": "object",
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "switch_mgmt",
          "schema": "object",
          "description": ""
        },
        {
          "name": "tags",
          "schema": "array",
          "description": ""
        },
        {
          "name": "ui_idle_timeout",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "vpn_options",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Org Settings"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/setting/blacklist",
      "method": "deleteOrgClientsBlocklist",
      "httpMethod": "delete",
      "tag": "Orgs Setting",
      "description": "deleteOrgClientsBlocklist",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/setting/blacklist",
      "method": "createOrgClientsBlocklist",
      "httpMethod": "post",
      "tag": "Orgs Setting",
      "description": "createOrgClientsBlocklist",
      "parameters": [
        {
          "name": "macs",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/setting/cradlepoint/setup",
      "method": "setupOrgCradlepointConnectionToMist",
      "httpMethod": "post",
      "tag": "Orgs Devices Others",
      "description": "setupOrgCradlepointConnectionToMist",
      "parameters": [
        {
          "name": "cp_api_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "cp_api_key",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ecm_api_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ecm_api_key",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/setting/cradlepoint/setup",
      "method": "updateOrgCradlepointConnectionToMist",
      "httpMethod": "put",
      "tag": "Orgs Devices Others",
      "description": "updateOrgCradlepointConnectionToMist",
      "parameters": [
        {
          "name": "cp_api_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "cp_api_key",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ecm_api_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ecm_api_key",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/setting/cradlepoint/sync",
      "method": "syncOrgCradlepointRouters",
      "httpMethod": "post",
      "tag": "Orgs Devices Others",
      "description": "syncOrgCradlepointRouters",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/setting/juniper/link_accounts",
      "method": "linkOrgToJuniperJuniperAccount",
      "httpMethod": "post",
      "tag": "Orgs",
      "description": "linkOrgToJuniperJuniperAccount",
      "parameters": [
        {
          "name": "password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "username",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/setting/juniper/linked_account",
      "method": "unlinkOrgFromJuniperCustomerId",
      "httpMethod": "delete",
      "tag": "Orgs",
      "description": "unlinkOrgFromJuniperCustomerId",
      "parameters": [
        {
          "name": "account_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "linked_by",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/setting/pcap_bucket/setup",
      "method": "setOrgCustomBucket",
      "httpMethod": "post",
      "tag": "Orgs Setting",
      "description": "setOrgCustomBucket",
      "parameters": [
        {
          "name": "bucket",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/setting/pcap_bucket/verify",
      "method": "verifyOrgCustomBucket",
      "httpMethod": "post",
      "tag": "Orgs Setting",
      "description": "verifyOrgCustomBucket",
      "parameters": [
        {
          "name": "bucket",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "verify_token",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/setting/zscaler/setup",
      "method": "deleteOrgZscalerCredential",
      "httpMethod": "delete",
      "tag": "Orgs Devices Zscaler",
      "description": "deleteOrgZscalerCredential",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/setting/zscaler/setup",
      "method": "getOrgZscalerCredential",
      "httpMethod": "get",
      "tag": "Orgs Devices Zscaler",
      "description": "getOrgZscalerCredential",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/setting/zscaler/setup",
      "method": "setupOrgZscalerCredential",
      "httpMethod": "post",
      "tag": "Orgs Devices Zscaler",
      "description": "setupOrgZscalerCredential",
      "parameters": [
        {
          "name": "cloud_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "partner_key",
          "schema": "string",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "username",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/setting/zscaler/setup",
      "method": "udpateOrgZscalerCredential",
      "httpMethod": "put",
      "tag": "Orgs Devices Zscaler",
      "description": "udpateOrgZscalerCredential",
      "parameters": [
        {
          "name": "cloud_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "partner_key",
          "schema": "string",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "username",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/setting/{app_name}/link_accounts",
      "method": "deleteOrgOauthAppAuthorization",
      "httpMethod": "delete",
      "tag": "Orgs OAuth",
      "description": "deleteOrgOauthAppAuthorization",
      "parameters": [
        {
          "name": "account_id",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/setting/{app_name}/link_accounts",
      "method": "getOrgOauthAppLinkedStatus",
      "httpMethod": "get",
      "tag": "Orgs OAuth",
      "description": "getOrgOauthAppLinkedStatus",
      "parameters": [
        {
          "name": "forward",
          "schema": "string",
          "description": "Mist portal url to which backend needs to redirect after succesful OAuth authorization. **Required** to get the `authorization_url`"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/sitegroups",
      "method": "listOrgSiteGroups",
      "httpMethod": "get",
      "tag": "Orgs Sitegroups",
      "description": "listOrgSiteGroups",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/sitegroups",
      "method": "createOrgSiteGroup",
      "httpMethod": "post",
      "tag": "Orgs Sitegroups",
      "description": "createOrgSiteGroup",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "site_ids",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Sites Group"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/sitegroups/{sitegroup_id}",
      "method": "deleteOrgSiteGroup",
      "httpMethod": "delete",
      "tag": "Orgs Sitegroups",
      "description": "deleteOrgSiteGroup",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/sitegroups/{sitegroup_id}",
      "method": "getOrgSiteGroup",
      "httpMethod": "get",
      "tag": "Orgs Sitegroups",
      "description": "getOrgSiteGroup",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "Sites Group"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/sitegroups/{sitegroup_id}",
      "method": "updateOrgSiteGroup",
      "httpMethod": "put",
      "tag": "Orgs Sitegroups",
      "description": "updateOrgSiteGroup",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Sites Group"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/sites",
      "method": "listOrgSites",
      "httpMethod": "get",
      "tag": "Orgs Sites",
      "description": "listOrgSites",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/sites",
      "method": "createOrgSite",
      "httpMethod": "post",
      "tag": "Orgs Sites",
      "description": "createOrgSite",
      "parameters": [
        {
          "name": "address",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "alarmtemplate_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "aptemplate_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "country_code",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "gatewaytemplate_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "latlng",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "networktemplate_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "notes",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "rftemplate_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "secpolicy_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sitegroup_ids",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "sitetemplate_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "timezone",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Site"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/sites/count",
      "method": "countOrgSites",
      "httpMethod": "get",
      "tag": "Orgs Sites",
      "description": "countOrgSites",
      "parameters": [
        {
          "name": "distinct",
          "schema": "string",
          "description": ""
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/sites/search",
      "method": "searchOrgSites",
      "httpMethod": "get",
      "tag": "Orgs Sites",
      "description": "searchOrgSites",
      "parameters": [
        {
          "name": "analytic_enabled",
          "schema": "boolean",
          "description": "if Advanced Analytic feature is enabled"
        },
        {
          "name": "app_waking",
          "schema": "boolean",
          "description": "if App Waking feature is enabled"
        },
        {
          "name": "asset_enabled",
          "schema": "boolean",
          "description": "if Asset Tracking is enabled"
        },
        {
          "name": "auto_upgrade_enabled",
          "schema": "boolean",
          "description": "if Auto Upgrade feature is enabled"
        },
        {
          "name": "auto_upgrade_version",
          "schema": "string",
          "description": "if Auto Upgrade feature is enabled"
        },
        {
          "name": "country_code",
          "schema": "string",
          "description": "site country code"
        },
        {
          "name": "honeypot_enabled",
          "schema": "boolean",
          "description": "if Honeypot detection is enabled"
        },
        {
          "name": "id",
          "schema": "string",
          "description": "site id"
        },
        {
          "name": "locate_unconnected",
          "schema": "boolean",
          "description": "if unconnected client are located"
        },
        {
          "name": "mesh_enabled",
          "schema": "boolean",
          "description": "if Mesh feature is enabled"
        },
        {
          "name": "name",
          "schema": "string",
          "description": "site name"
        },
        {
          "name": "rogue_enabled",
          "schema": "boolean",
          "description": "if Rogue detection is enabled"
        },
        {
          "name": "remote_syslog_enabled",
          "schema": "boolean",
          "description": "if Remote Syslog is enabled"
        },
        {
          "name": "rtsa_enabled",
          "schema": "boolean",
          "description": "if managed mobility feature is enabled"
        },
        {
          "name": "vna_enabled",
          "schema": "boolean",
          "description": "if Virtual Network Assistant is enabled"
        },
        {
          "name": "wifi_enabled",
          "schema": "boolean",
          "description": "if WIFI feature is enabled"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/sites/{site_name}/maps/import",
      "method": "importOrgMapToSite",
      "httpMethod": "post",
      "tag": "Orgs Sites",
      "description": "importOrgMapToSite",
      "parameters": [
        {
          "name": "csv",
          "schema": "string",
          "description": ""
        },
        {
          "name": "file",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/sitetemplates",
      "method": "listOrgSiteTemplates",
      "httpMethod": "get",
      "tag": "Orgs Site Templates",
      "description": "listOrgSiteTemplates",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/sitetemplates",
      "method": "createOrgSiteTemplates",
      "httpMethod": "post",
      "tag": "Orgs Site Templates",
      "description": "createOrgSiteTemplates",
      "parameters": [
        {
          "name": "auto_upgrade",
          "schema": "object",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "vars",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/sitetemplates/{sitetemplate_id}",
      "method": "deleteOrgSiteTemplate",
      "httpMethod": "delete",
      "tag": "Orgs Site Templates",
      "description": "deleteOrgSiteTemplate",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/sitetemplates/{sitetemplate_id}",
      "method": "getOrgSiteTemplate",
      "httpMethod": "get",
      "tag": "Orgs Site Templates",
      "description": "getOrgSiteTemplate",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/sitetemplates/{sitetemplate_id}",
      "method": "updateOrgSiteTemplate",
      "httpMethod": "put",
      "tag": "Orgs Site Templates",
      "description": "updateOrgSiteTemplate",
      "parameters": [
        {
          "name": "auto_upgrade",
          "schema": "object",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "vars",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/ssoroles",
      "method": "listOrgSsoRoles",
      "httpMethod": "get",
      "tag": "Orgs SSO Roles",
      "description": "listOrgSsoRoles",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/ssoroles",
      "method": "createOrgSsoRole",
      "httpMethod": "post",
      "tag": "Orgs SSO Roles",
      "description": "createOrgSsoRole",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "msp_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "privileges",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "SSO Role response"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/ssoroles/{ssorole_id}",
      "method": "deleteOrgSsoRole",
      "httpMethod": "delete",
      "tag": "Orgs SSO Roles",
      "description": "deleteOrgSsoRole",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/ssoroles/{ssorole_id}",
      "method": "getOrgSsoRole",
      "httpMethod": "get",
      "tag": "Orgs SSO Roles",
      "description": "getOrgSsoRole",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "SSO Role response"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/ssoroles/{ssorole_id}",
      "method": "updateOrgSsoRole",
      "httpMethod": "put",
      "tag": "Orgs SSO Roles",
      "description": "updateOrgSsoRole",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "msp_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "privileges",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "SSO Role response"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/ssos",
      "method": "listOrgSsos",
      "httpMethod": "get",
      "tag": "Orgs SSO",
      "description": "listOrgSsos",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/ssos",
      "method": "createOrgSso",
      "httpMethod": "post",
      "tag": "Orgs SSO",
      "description": "createOrgSso",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "custom_logout_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "default_role",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "domain",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "idp_cert",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "idp_sign_algo",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "idp_sso_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "idp_type",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ignore_unmatched_roles",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "issuer",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ldap_base_dn",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ldap_bind_dn",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ldap_bind_password",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ldap_certs",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "ldap_client_cert",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ldap_client_key",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ldap_group_attr",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ldap_group_dn",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ldap_group_filter",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ldap_server_hosts",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "ldap_type",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ldap_user_filter",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "msp_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "nameid_format",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "oauth_cc_client_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "oauth_cc_client_secret",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "oauth_discovery_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "oauth_ropc_client_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "oauth_ropc_secret",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "oauth_tenant_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "oauth_type",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "role_attr_extraction",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "role_attr_from",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "SSO"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/ssos/{sso_id}",
      "method": "deleteOrgSso",
      "httpMethod": "delete",
      "tag": "Orgs SSO",
      "description": "deleteOrgSso",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/ssos/{sso_id}",
      "method": "getOrgSso",
      "httpMethod": "get",
      "tag": "Orgs SSO",
      "description": "getOrgSso",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "SSO"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/ssos/{sso_id}",
      "method": "updateOrgSso",
      "httpMethod": "put",
      "tag": "Orgs SSO",
      "description": "updateOrgSso",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "custom_logout_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "default_role",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "domain",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "idp_cert",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "idp_sign_algo",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "idp_sso_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "idp_type",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ignore_unmatched_roles",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "issuer",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ldap_base_dn",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ldap_bind_dn",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ldap_bind_password",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ldap_certs",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "ldap_client_cert",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ldap_client_key",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ldap_group_attr",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ldap_group_dn",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ldap_group_filter",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ldap_server_hosts",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "ldap_type",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ldap_user_filter",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "msp_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "nameid_format",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "oauth_cc_client_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "oauth_cc_client_secret",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "oauth_discovery_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "oauth_ropc_client_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "oauth_ropc_secret",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "oauth_tenant_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "oauth_type",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "role_attr_extraction",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "role_attr_from",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "SSO"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/ssos/{sso_id}/failures",
      "method": "listOrgSsoLatestFailures",
      "httpMethod": "get",
      "tag": "Orgs SSO",
      "description": "listOrgSsoLatestFailures",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/ssos/{sso_id}/metadata",
      "method": "getOrgSsoSamlMetadata",
      "httpMethod": "get",
      "tag": "Orgs SSO",
      "description": "getOrgSsoSamlMetadata",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/ssos/{sso_id}/metadata.xml",
      "method": "downloadOrgSsoSamlMetadata",
      "httpMethod": "get",
      "tag": "Orgs SSO",
      "description": "downloadOrgSsoSamlMetadata",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "File"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/ssr/upgrade",
      "method": "listOrgSsrUpgrades",
      "httpMethod": "get",
      "tag": "Orgs Devices Upgrades",
      "description": "listOrgSsrUpgrades",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/ssr/upgrade",
      "method": "upgradeOrgSsrs",
      "httpMethod": "post",
      "tag": "Orgs Devices Upgrades",
      "description": "upgradeOrgSsrs",
      "parameters": [
        {
          "name": "channel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "device_ids",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "reboot_at",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start_time",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "strategy",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "version",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/ssr/upgrade/{upgrade_id}/cancel",
      "method": "cancelOrgSsrUpgrade",
      "httpMethod": "post",
      "tag": "Orgs Devices Upgrades",
      "description": "cancelOrgSsrUpgrade",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/ssr/versions",
      "method": "getOrgSsrUpgradeInfo",
      "httpMethod": "get",
      "tag": "Orgs Devices Upgrades",
      "description": "getOrgSsrUpgradeInfo",
      "parameters": [
        {
          "name": "channel",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/stats",
      "method": "getOrgStats",
      "httpMethod": "get",
      "tag": "Orgs Stats",
      "description": "getOrgStats",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Org statistics"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/stats/assets",
      "method": "listOrgAssetsStats",
      "httpMethod": "get",
      "tag": "Orgs Stats",
      "description": "listOrgAssetsStats",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/stats/assets/count",
      "method": "countOrgAssetsByDistanceField",
      "httpMethod": "get",
      "tag": "Orgs Assets",
      "description": "countOrgAssetsByDistanceField",
      "parameters": [
        {
          "name": "distinct",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/stats/assets/search",
      "method": "searchOrgAssets",
      "httpMethod": "get",
      "tag": "Orgs Assets",
      "description": "searchOrgAssets",
      "parameters": [
        {
          "name": "site_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "mac",
          "schema": "string",
          "description": ""
        },
        {
          "name": "device_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "map_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ibeacon_uuid",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ibeacon_major",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ibeacon_minor",
          "schema": "string",
          "description": ""
        },
        {
          "name": "eddystone_uid_namespace",
          "schema": "string",
          "description": ""
        },
        {
          "name": "eddystone_uid_instance",
          "schema": "string",
          "description": ""
        },
        {
          "name": "eddystone_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ap_mac",
          "schema": "string",
          "description": ""
        },
        {
          "name": "beam",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "rssi",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/stats/bgp_peers/count",
      "method": "countOrgBgpStats",
      "httpMethod": "get",
      "tag": "Orgs Devices Stats",
      "description": "countOrgBgpStats",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/stats/bgp_peers/search",
      "method": "searchOrgBgpStats",
      "httpMethod": "get",
      "tag": "Orgs Devices Stats",
      "description": "searchOrgBgpStats",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/stats/devices",
      "method": "listOrgDevicesStats",
      "httpMethod": "get",
      "tag": "Orgs Stats",
      "description": "listOrgDevicesStats",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "mac",
          "schema": "string",
          "description": ""
        },
        {
          "name": "evpntopo_id",
          "schema": "string",
          "description": "EVPN Topology ID"
        },
        {
          "name": "evpn_unused",
          "schema": "string",
          "description": "if `evpn_unused`==`true`, find EVPN eligible switches which don’t belong to any EVPN Topology yet"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/stats/mxedges",
      "method": "listOrgMxEdgesStats",
      "httpMethod": "get",
      "tag": "Orgs Stats",
      "description": "listOrgMxEdgesStats",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        },
        {
          "name": "for_site",
          "schema": "string",
          "description": "filter for site level mist edges"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/stats/mxedges/{mxedge_id}",
      "method": "getOrgMxEdgeStats",
      "httpMethod": "get",
      "tag": "Orgs Stats",
      "description": "getOrgMxEdgeStats",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/stats/otherdevices/{device_mac}",
      "method": "getOrgOtherDeviceStats",
      "httpMethod": "get",
      "tag": "Orgs Devices Others",
      "description": "getOrgOtherDeviceStats",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/stats/ports/search",
      "method": "searchOrgSwOrGwPorts",
      "httpMethod": "get",
      "tag": "Sites Devices Stats",
      "description": "searchOrgSwOrGwPorts",
      "parameters": [
        {
          "name": "full_duplex",
          "schema": "boolean",
          "description": "indicates full or half duplex"
        },
        {
          "name": "mac",
          "schema": "string",
          "description": "device identifier"
        },
        {
          "name": "neighbor_mac",
          "schema": "string",
          "description": "Chassis identifier of the chassis type listed"
        },
        {
          "name": "neighbor_port_desc",
          "schema": "string",
          "description": "Description supplied by the system on the interface E.g. “GigabitEthernet2/0/39”"
        },
        {
          "name": "neighbor_system_name",
          "schema": "string",
          "description": "Name supplied by the system on the interface E.g. neighbor system name E.g. “Kumar-Acc-SW.mist.local”"
        },
        {
          "name": "poe_disabled",
          "schema": "boolean",
          "description": "is the POE configured not be disabled."
        },
        {
          "name": "poe_mode",
          "schema": "string",
          "description": "poe mode depending on class E.g. “802.3at”"
        },
        {
          "name": "poe_on",
          "schema": "boolean",
          "description": "is the device attached to POE"
        },
        {
          "name": "port_id",
          "schema": "string",
          "description": "interface name"
        },
        {
          "name": "port_mac",
          "schema": "string",
          "description": "interface mac address"
        },
        {
          "name": "power_draw",
          "schema": "number",
          "description": "Amount of power being used by the interface at the time the command is executed. Unit in watts."
        },
        {
          "name": "tx_pkts",
          "schema": "integer",
          "description": "Output packets"
        },
        {
          "name": "rx_pkts",
          "schema": "integer",
          "description": "Input packets"
        },
        {
          "name": "rx_bytes",
          "schema": "integer",
          "description": "Input bytes"
        },
        {
          "name": "tx_bps",
          "schema": "integer",
          "description": "Output rate"
        },
        {
          "name": "rx_bps",
          "schema": "integer",
          "description": "Input rate"
        },
        {
          "name": "tx_errors",
          "schema": "integer",
          "description": "Output errors"
        },
        {
          "name": "rx_errors",
          "schema": "integer",
          "description": "Input errors"
        },
        {
          "name": "tx_mcast_pkts",
          "schema": "integer",
          "description": "Multicast output packets"
        },
        {
          "name": "tx_bcast_pkts",
          "schema": "integer",
          "description": "Broadcast output packets"
        },
        {
          "name": "rx_mcast_pkts",
          "schema": "integer",
          "description": "Multicast input packets"
        },
        {
          "name": "rx_bcast_pkts",
          "schema": "integer",
          "description": "Broadcast input packets"
        },
        {
          "name": "speed",
          "schema": "integer",
          "description": "port speed"
        },
        {
          "name": "mac_limit",
          "schema": "integer",
          "description": "Limit on number of dynamically learned macs"
        },
        {
          "name": "mac_count",
          "schema": "integer",
          "description": "Number of mac addresses in the forwarding table"
        },
        {
          "name": "up",
          "schema": "boolean",
          "description": "indicates if interface is up"
        },
        {
          "name": "stp_state",
          "schema": "string",
          "description": "if `up`==`true`"
        },
        {
          "name": "stp_role",
          "schema": "string",
          "description": "if `up`==`true`"
        },
        {
          "name": "auth_state",
          "schema": "string",
          "description": "if `up`==`true` && has Authenticator role"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/stats/switch_ports/count",
      "method": "countOrgByDisctinctAttributesOfSwitchPorts",
      "httpMethod": "get",
      "tag": "Orgs Stats",
      "description": "countOrgByDisctinctAttributesOfSwitchPorts",
      "parameters": [
        {
          "name": "distinct",
          "schema": "string",
          "description": "port_id, port_mac, full_duplex, mac, neighbor_macneighbor_port_desc, neighbor_system_name, poe_disabled, poe_mode, poe_on, speed, up"
        },
        {
          "name": "full_duplex",
          "schema": "boolean",
          "description": "indicates full or half duplex"
        },
        {
          "name": "mac",
          "schema": "string",
          "description": "device identifier"
        },
        {
          "name": "neighbor_mac",
          "schema": "string",
          "description": "Chassis identifier of the chassis type listed"
        },
        {
          "name": "neighbor_port_desc",
          "schema": "string",
          "description": "Description supplied by the system on the interface E.g. “GigabitEthernet2/0/39”"
        },
        {
          "name": "neighbor_system_name",
          "schema": "string",
          "description": "Name supplied by the system on the interface E.g. neighbor system name E.g. “Kumar-Acc-SW.mist.local”"
        },
        {
          "name": "poe_disabled",
          "schema": "boolean",
          "description": "is the POE configured not be disabled."
        },
        {
          "name": "poe_mode",
          "schema": "string",
          "description": "poe mode depending on class E.g. “802.3at”"
        },
        {
          "name": "poe_on",
          "schema": "boolean",
          "description": "is the device attached to POE"
        },
        {
          "name": "port_id",
          "schema": "string",
          "description": "interface name"
        },
        {
          "name": "port_mac",
          "schema": "string",
          "description": "interface mac address"
        },
        {
          "name": "power_draw",
          "schema": "number",
          "description": "Amount of power being used by the interface at the time the command is executed. Unit in watts."
        },
        {
          "name": "tx_pkts",
          "schema": "integer",
          "description": "Output packets"
        },
        {
          "name": "rx_pkts",
          "schema": "integer",
          "description": "Input packets"
        },
        {
          "name": "rx_bytes",
          "schema": "integer",
          "description": "Input bytes"
        },
        {
          "name": "tx_bps",
          "schema": "integer",
          "description": "Output rate"
        },
        {
          "name": "rx_bps",
          "schema": "integer",
          "description": "Input rate"
        },
        {
          "name": "tx_mcast_pkts",
          "schema": "integer",
          "description": "Multicast output packets"
        },
        {
          "name": "tx_bcast_pkts",
          "schema": "integer",
          "description": "Broadcast output packets"
        },
        {
          "name": "rx_mcast_pkts",
          "schema": "integer",
          "description": "Multicast input packets"
        },
        {
          "name": "rx_bcast_pkts",
          "schema": "integer",
          "description": "Broadcast input packets"
        },
        {
          "name": "speed",
          "schema": "integer",
          "description": "port speed"
        },
        {
          "name": "stp_state",
          "schema": "string",
          "description": "if `up`==`true`"
        },
        {
          "name": "stp_role",
          "schema": "string",
          "description": "if `up`==`true`"
        },
        {
          "name": "auth_state",
          "schema": "string",
          "description": "if `up`==`true`"
        },
        {
          "name": "up",
          "schema": "boolean",
          "description": "indicates if interface is up"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/stats/tunnels/count",
      "method": "countOrgTunnelsStats",
      "httpMethod": "get",
      "tag": "Orgs Stats Tunnels",
      "description": "countOrgTunnelsStats",
      "parameters": [
        {
          "name": "distinct",
          "schema": "string",
          "description": "- If `type`==`wxtunnel`: wxtunnel_id / ap / remote_ip / remote_port / state / mxedge_id / mxcluster_id / site_id / peer_mxedge_id; default is wxtunnel_id \n- If `type`==`wan`: mac / site_id / node / peer_ip / peer_host/ ip / tunnel_name / protocol / auth_algo / encrypt_algo / ike_version / last_event / up"
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/stats/tunnels/search",
      "method": "searchOrgTunnelsStats",
      "httpMethod": "get",
      "tag": "Orgs Stats Tunnels",
      "description": "searchOrgTunnelsStats",
      "parameters": [
        {
          "name": "mxcluster_id",
          "schema": "string",
          "description": "if `type`==`wxtunnel`"
        },
        {
          "name": "site_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "wxtunnel_id",
          "schema": "string",
          "description": "if `type`==`wxtunnel`"
        },
        {
          "name": "ap",
          "schema": "string",
          "description": "if `type`==`wxtunnel`"
        },
        {
          "name": "mac",
          "schema": "string",
          "description": "if `type`==`wan`"
        },
        {
          "name": "node",
          "schema": "string",
          "description": "if `type`==`wan`"
        },
        {
          "name": "peer_ip",
          "schema": "string",
          "description": "if `type`==`wan`"
        },
        {
          "name": "peer_host",
          "schema": "string",
          "description": "if `type`==`wan`"
        },
        {
          "name": "ip",
          "schema": "string",
          "description": "if `type`==`wan`"
        },
        {
          "name": "tunnel_name",
          "schema": "string",
          "description": "if `type`==`wan`"
        },
        {
          "name": "protocol",
          "schema": "string",
          "description": "if `type`==`wan`"
        },
        {
          "name": "auth_algo",
          "schema": "string",
          "description": "if `type`==`wan`"
        },
        {
          "name": "encrypt_algo",
          "schema": "string",
          "description": "if `type`==`wan`"
        },
        {
          "name": "ike_version",
          "schema": "string",
          "description": "if `type`==`wan`"
        },
        {
          "name": "up",
          "schema": "string",
          "description": "if `type`==`wan`"
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/stats/vpn_peers/count",
      "method": "countOrgPeerPathStats",
      "httpMethod": "get",
      "tag": "Orgs VPNs",
      "description": "countOrgPeerPathStats",
      "parameters": [
        {
          "name": "distinct",
          "schema": "string",
          "description": ""
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/stats/vpn_peers/search",
      "method": "searchOrgPeerPathStats",
      "httpMethod": "get",
      "tag": "Orgs VPNs",
      "description": "searchOrgPeerPathStats",
      "parameters": [
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/subscriptions",
      "method": "unsubscribeOrgAlarmsReports",
      "httpMethod": "delete",
      "tag": "Orgs Subscriptions",
      "description": "unsubscribeOrgAlarmsReports",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/subscriptions",
      "method": "subscribeOrgAlarmsReports",
      "httpMethod": "post",
      "tag": "Orgs Subscriptions",
      "description": "subscribeOrgAlarmsReports",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/templates",
      "method": "listOrgTemplates",
      "httpMethod": "get",
      "tag": "Orgs Templates",
      "description": "listOrgTemplates",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/templates",
      "method": "createOrgTemplate",
      "httpMethod": "post",
      "tag": "Orgs Templates",
      "description": "createOrgTemplate",
      "parameters": [
        {
          "name": "applies",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "deviceprofile_ids",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "exceptions",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "filter_by_deviceprofile",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Template"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/templates/{template_id}",
      "method": "deleteOrgTemplate",
      "httpMethod": "delete",
      "tag": "Orgs Templates",
      "description": "deleteOrgTemplate",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/templates/{template_id}",
      "method": "getOrgTemplate",
      "httpMethod": "get",
      "tag": "Orgs Templates",
      "description": "getOrgTemplate",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "Template"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/templates/{template_id}",
      "method": "updateOrgTemplate",
      "httpMethod": "put",
      "tag": "Orgs Templates",
      "description": "updateOrgTemplate",
      "parameters": [
        {
          "name": "applies",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "deviceprofile_ids",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "exceptions",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "filter_by_deviceprofile",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Template"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/templates/{template_id}/clone",
      "method": "cloneOrgTemplate",
      "httpMethod": "post",
      "tag": "Orgs Templates",
      "description": "cloneOrgTemplate",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Template"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/tickets",
      "method": "listOrgTickets",
      "httpMethod": "get",
      "tag": "Orgs Tickets",
      "description": "listOrgTickets",
      "parameters": [
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/tickets",
      "method": "createOrgTicket",
      "httpMethod": "post",
      "tag": "Orgs Tickets",
      "description": "createOrgTicket",
      "parameters": [
        {
          "name": "case_number",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "comments",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "created_at",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "requester",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "requester_email",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "subject",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "updated_at",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Support Ticket"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/tickets/count",
      "method": "countOrgTickets",
      "httpMethod": "get",
      "tag": "Orgs Tickets",
      "description": "countOrgTickets",
      "parameters": [
        {
          "name": "distinct",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/tickets/{ticket_id}",
      "method": "getOrgTicket",
      "httpMethod": "get",
      "tag": "Orgs Tickets",
      "description": "getOrgTicket",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "Support Ticket"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/tickets/{ticket_id}",
      "method": "updateOrgTicket",
      "httpMethod": "put",
      "tag": "Orgs Tickets",
      "description": "updateOrgTicket",
      "parameters": [
        {
          "name": "case_number",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "comments",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "created_at",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "requester",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "requester_email",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "subject",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "updated_at",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Support Ticket"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/tickets/{ticket_id}/comments",
      "method": "addOrgTicketComment",
      "httpMethod": "post",
      "tag": "Orgs Tickets",
      "description": "addOrgTicketComment",
      "parameters": [
        {
          "name": "comment",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Support Ticket"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/troubleshoot",
      "method": "troubleshootOrgClient",
      "httpMethod": "get",
      "tag": "Orgs Marvis",
      "description": "troubleshootOrgClient",
      "parameters": [
        {
          "name": "mac",
          "schema": "string",
          "description": "**required** when troubleshooting device"
        },
        {
          "name": "site_id",
          "schema": "string",
          "description": "**required** when troubleshooting site"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": "when troubleshooting site, type of network to troubleshoot"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/vpns",
      "method": "listOrgsVpns",
      "httpMethod": "get",
      "tag": "Orgs VPNs",
      "description": "listOrgsVpns",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/vpns",
      "method": "createOrgVpns",
      "httpMethod": "post",
      "tag": "Orgs VPNs",
      "description": "createOrgVpns",
      "parameters": [
        {
          "name": "created_time",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "paths",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/vpns/{vpn_id}",
      "method": "deleteOrgVpn",
      "httpMethod": "delete",
      "tag": "Orgs VPNs",
      "description": "deleteOrgVpn",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/vpns/{vpn_id}",
      "method": "getOrgVpn",
      "httpMethod": "get",
      "tag": "Orgs VPNs",
      "description": "getOrgVpn",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/vpns/{vpn_id}",
      "method": "updateOrgVpn",
      "httpMethod": "put",
      "tag": "Orgs VPNs",
      "description": "updateOrgVpn",
      "parameters": [
        {
          "name": "created_time",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "paths",
          "schema": "object",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/webhooks",
      "method": "listOrgWebhooks",
      "httpMethod": "get",
      "tag": "Orgs Webhooks",
      "description": "listOrgWebhooks",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/webhooks",
      "method": "createOrgWebhook",
      "httpMethod": "post",
      "tag": "Orgs Webhooks",
      "description": "createOrgWebhook",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "headers",
          "schema": "object",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "secret",
          "schema": "string",
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "splunk_token",
          "schema": "string",
          "description": ""
        },
        {
          "name": "topics",
          "schema": "array",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "verify_cert",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/webhooks/{webhook_id}",
      "method": "deleteOrgWebhook",
      "httpMethod": "delete",
      "tag": "Orgs Webhooks",
      "description": "deleteOrgWebhook",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/webhooks/{webhook_id}",
      "method": "getOrgWebhook",
      "httpMethod": "get",
      "tag": "Orgs Webhooks",
      "description": "getOrgWebhook",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/webhooks/{webhook_id}",
      "method": "updateOrgWebhook",
      "httpMethod": "put",
      "tag": "Orgs Webhooks",
      "description": "updateOrgWebhook",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "headers",
          "schema": "object",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "secret",
          "schema": "string",
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "splunk_token",
          "schema": "string",
          "description": ""
        },
        {
          "name": "topics",
          "schema": "array",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "verify_cert",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/wired_clients/count",
      "method": "countOrgClientsWired",
      "httpMethod": "get",
      "tag": "Orgs Clients",
      "description": "countOrgClientsWired",
      "parameters": [
        {
          "name": "distinct",
          "schema": "string",
          "description": ""
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/wired_clients/search",
      "method": "searchOrgClientsWired",
      "httpMethod": "get",
      "tag": "Orgs Clients",
      "description": "searchOrgClientsWired",
      "parameters": [
        {
          "name": "site_id",
          "schema": "string",
          "description": "Site ID"
        },
        {
          "name": "device_mac",
          "schema": "string",
          "description": "device mac"
        },
        {
          "name": "mac",
          "schema": "string",
          "description": "client mac"
        },
        {
          "name": "port_id",
          "schema": "string",
          "description": "port id"
        },
        {
          "name": "vlan",
          "schema": "integer",
          "description": "vlan"
        },
        {
          "name": "ip",
          "schema": "string",
          "description": "ip"
        },
        {
          "name": "manufacture",
          "schema": "string",
          "description": "client manufacture"
        },
        {
          "name": "text",
          "schema": "string",
          "description": "single entry of hostname/mac"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/wlans",
      "method": "listOrgWlans",
      "httpMethod": "get",
      "tag": "Orgs Wlans",
      "description": "listOrgWlans",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/wlans",
      "method": "createOrgWlan",
      "httpMethod": "post",
      "tag": "Orgs Wlans",
      "description": "createOrgWlan",
      "parameters": [
        {
          "name": "acct_interim_interval",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "acct_servers",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "airwatch",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "allow_ipv6_ndp",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "allow_mdns",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "allow_ssdp",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "ap_ids",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "app_limit",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "app_qos",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "apply_to",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "arp_filter",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "auth",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "auth_server_selection",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "auth_servers",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "auth_servers_nas_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "auth_servers_nas_ip",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "auth_servers_retries",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "auth_servers_timeout",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "band",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "band_steer",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "band_steer_force_band5",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "bands",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "block_blacklist_clients",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "bonjour",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "cisco_cwa",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "client_limit_down",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "client_limit_down_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "client_limit_up",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "client_limit_up_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "coa_servers",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "disable_11ax",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "disable_ht_vht_rates",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "disable_uapsd",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "disable_v1_roam_notify",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "disable_v2_roam_notify",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "disable_wmm",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "dns_server_rewrite",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "dtim",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "dynamic_psk",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "dynamic_vlan",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "enable_local_keycaching",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "enable_wireless_bridging",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "hide_ssid",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "hostname_ie",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "hotspot20",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "interface",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "isolation",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "l2_isolation",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "legacy_overds",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "limit_bcast",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "limit_probe_response",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "max_idletime",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "mist_nac",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "msp_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mxtunnel",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "mxtunnel_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mxtunnel_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "no_static_dns",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "no_static_ip",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "portal",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "portal_allowed_hostnames",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "portal_allowed_subnets",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "portal_api_secret",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "portal_denied_hostnames",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "portal_image",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "portal_sso_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "portal_template_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "qos",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "radsec",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "rateset",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "roam_mode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "schedule",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sle_excluded",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "ssid",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "template_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "thumbnail",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "use_eapol_v1",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "vlan_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "vlan_id",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "vlan_ids",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "vlan_pooling",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "wlan_limit_down",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "wlan_limit_down_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "wlan_limit_up",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "wlan_limit_up_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "wxtag_ids",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "wxtunnel_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "wxtunnel_remote_id",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "WLAN\n\n**Note**: portal_template will be forked out of wlan objects soon. To fetch portal_template, please query portal_template_url. To update portal_template, use Wlan Portal Template."
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/wlans/derived",
      "method": "getOrgWlanDerived",
      "httpMethod": "get",
      "tag": "Orgs Wlans",
      "description": "getOrgWlanDerived",
      "parameters": [
        {
          "name": "resolve",
          "schema": "boolean",
          "description": "whether to resolve SITE_VARS"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "WLAN\n\n**Note**: portal_template will be forked out of wlan objects soon. To fetch portal_template, please query portal_template_url. To update portal_template, use Wlan Portal Template."
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/wlans/{wlan_id}",
      "method": "deleteOrgWlan",
      "httpMethod": "delete",
      "tag": "Orgs Wlans",
      "description": "deleteOrgWlan",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/wlans/{wlan_id}",
      "method": "getOrgWlan",
      "httpMethod": "get",
      "tag": "Orgs Wlans",
      "description": "getOrgWLAN",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/wlans/{wlan_id}",
      "method": "updateOrgWlan",
      "httpMethod": "put",
      "tag": "Orgs Wlans",
      "description": "updateOrgWlan",
      "parameters": [
        {
          "name": "acct_interim_interval",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "acct_servers",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "airwatch",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "allow_ipv6_ndp",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "allow_mdns",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "allow_ssdp",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "ap_ids",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "app_limit",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "app_qos",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "apply_to",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "arp_filter",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "auth",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "auth_server_selection",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "auth_servers",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "auth_servers_nas_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "auth_servers_nas_ip",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "auth_servers_retries",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "auth_servers_timeout",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "band",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "band_steer",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "band_steer_force_band5",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "bands",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "block_blacklist_clients",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "bonjour",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "cisco_cwa",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "client_limit_down",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "client_limit_down_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "client_limit_up",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "client_limit_up_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "coa_servers",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "disable_11ax",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "disable_ht_vht_rates",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "disable_uapsd",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "disable_v1_roam_notify",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "disable_v2_roam_notify",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "disable_wmm",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "dns_server_rewrite",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "dtim",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "dynamic_psk",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "dynamic_vlan",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "enable_local_keycaching",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "enable_wireless_bridging",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "hide_ssid",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "hostname_ie",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "hotspot20",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "interface",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "isolation",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "l2_isolation",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "legacy_overds",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "limit_bcast",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "limit_probe_response",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "max_idletime",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "mist_nac",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "msp_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mxtunnel",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "mxtunnel_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mxtunnel_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "no_static_dns",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "no_static_ip",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "portal",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "portal_allowed_hostnames",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "portal_allowed_subnets",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "portal_api_secret",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "portal_denied_hostnames",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "portal_image",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "portal_sso_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "portal_template_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "qos",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "radsec",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "rateset",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "roam_mode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "schedule",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sle_excluded",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "ssid",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "template_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "thumbnail",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "use_eapol_v1",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "vlan_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "vlan_id",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "vlan_ids",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "vlan_pooling",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "wlan_limit_down",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "wlan_limit_down_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "wlan_limit_up",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "wlan_limit_up_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "wxtag_ids",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "wxtunnel_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "wxtunnel_remote_id",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "WLAN\n\n**Note**: portal_template will be forked out of wlan objects soon. To fetch portal_template, please query portal_template_url. To update portal_template, use Wlan Portal Template."
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/wlans/{wlan_id}/portal_image",
      "method": "deleteOrgWlanPortalImage",
      "httpMethod": "delete",
      "tag": "Orgs Wlans",
      "description": "deleteOrgWlanPortalImage",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/wlans/{wlan_id}/portal_image",
      "method": "uploadOrgWlanPortalImage",
      "httpMethod": "post",
      "tag": "Orgs Wlans",
      "description": "uploadOrgWlanPortalImage",
      "parameters": [
        {
          "name": "file",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "json",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/wlans/{wlan_id}/portal_template",
      "method": "updateOrgWlanPortalTemplate",
      "httpMethod": "put",
      "tag": "Orgs Wlans",
      "description": "updateOrgWlanPortalTemplate",
      "parameters": [
        {
          "name": "accessCodeAlternateEmail",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "alignment",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "authButtonAmazon",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "authButtonAzure",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "authButtonEmail",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "authButtonFacebook",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "authButtonGoogle",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "authButtonMicrosoft",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "authButtonPassphrase",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "authButtonSms",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "authButtonSponsor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "authLabel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "backLink",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "color",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "colorDark",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "colorLight",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "company",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "companyError",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "companyLabel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "email",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "emailAccessDomainError",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "emailCancel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "emailCodeCancel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "emailCodeError",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "emailCodeFieldLabel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "emailCodeMessage",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "emailCodeSubmit",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "emailCodeTitle",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "emailError",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "emailFieldLabel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "emailLabel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "emailMessage",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "emailSubmit",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "emailTitle",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "field1",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "field1Error",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "field1Label",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "field1Required",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "field2",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "field2Error",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "field2Label",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "field2Required",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "field3",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "field3Error",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "field3Label",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "field3Required",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "field4",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "field4Error",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "field4Label",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "field4Required",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "message",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "nameError",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "nameLabel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "optout",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "optoutLabel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageTitle",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "passphraseCancel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "passphraseError",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "passphraseLabel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "passphraseMessage",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "passphraseSubmit",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "passphraseTitle",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "poweredBy",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "requiredFieldLabel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "signInLabel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsCarrierDefault",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsCarrierError",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsCarrierFieldLabel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsCodeCancel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsCodeError",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsCodeFieldLabel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsCodeMessage",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsCodeSubmit",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsCodeTitle",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsCountryFieldLabel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsCountryFormat",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsHaveAccessCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsMessageFormat",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsNumberCancel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsNumberError",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsNumberFieldLabel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsNumberFormat",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsNumberMessage",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsNumberSubmit",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsNumberTitle",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsUsernameFormat",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsValidityDuration",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "sponsorBackLink",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sponsorCancel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sponsorEmail",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sponsorEmailError",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sponsorEmailTemplate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sponsorInfoApproved",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sponsorInfoDenied",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sponsorInfoPending",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sponsorName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sponsorNameError",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sponsorNotePending",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sponsorRequestAccess",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sponsorSelectEmail",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sponsorStatusApproved",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sponsorStatusDenied",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sponsorStatusPending",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sponsorSubmit",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sponsorsError",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sponsorsInfoApproved",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sponsorsInfoDenied",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sponsorsInfoPending",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tos",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "tosAcceptLabel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tosError",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tosLink",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tosText",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Portal Template"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/wxrules",
      "method": "listOrgWxRules",
      "httpMethod": "get",
      "tag": "Orgs WxRules",
      "description": "listOrgWxRules",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/wxrules",
      "method": "createOrgWxRule",
      "httpMethod": "post",
      "tag": "Orgs WxRules",
      "description": "createOrgWxRule",
      "parameters": [
        {
          "name": "action",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "blocked_apps",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "dst_allow_wxtags",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "dst_deny_wxtags",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "order",
          "schema": "number",
          "required": true,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "src_wxtags",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "WXlan"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/wxrules/derived",
      "method": "getOrgWxRulesDerived",
      "httpMethod": "get",
      "tag": "Orgs WxRules",
      "description": "getOrgWxRulesDerived",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/wxrules/{wxrules_id}",
      "method": "deleteOrgWxRule",
      "httpMethod": "delete",
      "tag": "Orgs WxRules",
      "description": "deleteOrgWxRule",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/wxrules/{wxrules_id}",
      "method": "getOrgWxRule",
      "httpMethod": "get",
      "tag": "Orgs WxRules",
      "description": "getOrgWxRule",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "WXlan"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/wxrules/{wxrules_id}",
      "method": "updateOrgWxRule",
      "httpMethod": "put",
      "tag": "Orgs WxRules",
      "description": "updateOrgWxRule",
      "parameters": [
        {
          "name": "action",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "blocked_apps",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "dst_allow_wxtags",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "dst_deny_wxtags",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "order",
          "schema": "number",
          "required": true,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "src_wxtags",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "WXlan"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/wxtags",
      "method": "listOrgWxTags",
      "httpMethod": "get",
      "tag": "Orgs WxTags",
      "description": "listOrgWxTags",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/wxtags",
      "method": "createOrgWxTag",
      "httpMethod": "post",
      "tag": "Orgs WxTags",
      "description": "createOrgWxTag",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "last_ips",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "mac",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "match",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "op",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "resource_mac",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "services",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "specs",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "subnet",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "values",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "WxLAN Tag\n* type:\n** client: created manually (e.g. on wireless client table, when they spot a device of interest, they can create an wxlan tag for it\n** resource: created automatically when we discover a network resource\n** subnet: create automatically when a subnet is discovered\n\n* match:\n** wlan_id, ap_id: values are a list of Wlan / Device ids\n** client_mac: values are a list of MAC addresses\n\n* radius_group: this is a smart tag that matches RADIUS-Filter-ID, Airespace-ACL-Name (VendorID=14179, VendorType=6) / Aruba-User-Role (VendorID=14823, VendorType=1)\n* radius_username: this matches the ATTR-User-Name(1)\n* radius_class: thie matches the ATTR-Class(25)\n* radius_attr: the values are [ “6=1”, “26=10.2.3.4” ], this support other RADIUS attributes where we know the type\n* radius_vendor: the values are [ “14179.10=1”, “14178.16=1.2.3.4” ], this matches vendor attributes and will be dynamically evaluated"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/wxtags/apps",
      "method": "getOrgApplicationList",
      "httpMethod": "get",
      "tag": "Orgs WxTags",
      "description": "getOrgApplicationList",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/wxtags/{wxtag_id}",
      "method": "deleteOrgWxTag",
      "httpMethod": "delete",
      "tag": "Orgs WxTags",
      "description": "deleteOrgWxTag",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/wxtags/{wxtag_id}",
      "method": "getOrgWxTag",
      "httpMethod": "get",
      "tag": "Orgs WxTags",
      "description": "getOrgWxTag",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "WxLAN Tag\n* type:\n** client: created manually (e.g. on wireless client table, when they spot a device of interest, they can create an wxlan tag for it\n** resource: created automatically when we discover a network resource\n** subnet: create automatically when a subnet is discovered\n\n* match:\n** wlan_id, ap_id: values are a list of Wlan / Device ids\n** client_mac: values are a list of MAC addresses\n\n* radius_group: this is a smart tag that matches RADIUS-Filter-ID, Airespace-ACL-Name (VendorID=14179, VendorType=6) / Aruba-User-Role (VendorID=14823, VendorType=1)\n* radius_username: this matches the ATTR-User-Name(1)\n* radius_class: thie matches the ATTR-Class(25)\n* radius_attr: the values are [ “6=1”, “26=10.2.3.4” ], this support other RADIUS attributes where we know the type\n* radius_vendor: the values are [ “14179.10=1”, “14178.16=1.2.3.4” ], this matches vendor attributes and will be dynamically evaluated"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/wxtags/{wxtag_id}",
      "method": "updateOrgWxTag",
      "httpMethod": "put",
      "tag": "Orgs WxTags",
      "description": "updateOrgWxTag",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "last_ips",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "mac",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "match",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "op",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "resource_mac",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "services",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "specs",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "subnet",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "values",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "WxLAN Tag\n* type:\n** client: created manually (e.g. on wireless client table, when they spot a device of interest, they can create an wxlan tag for it\n** resource: created automatically when we discover a network resource\n** subnet: create automatically when a subnet is discovered\n\n* match:\n** wlan_id, ap_id: values are a list of Wlan / Device ids\n** client_mac: values are a list of MAC addresses\n\n* radius_group: this is a smart tag that matches RADIUS-Filter-ID, Airespace-ACL-Name (VendorID=14179, VendorType=6) / Aruba-User-Role (VendorID=14823, VendorType=1)\n* radius_username: this matches the ATTR-User-Name(1)\n* radius_class: thie matches the ATTR-Class(25)\n* radius_attr: the values are [ “6=1”, “26=10.2.3.4” ], this support other RADIUS attributes where we know the type\n* radius_vendor: the values are [ “14179.10=1”, “14178.16=1.2.3.4” ], this matches vendor attributes and will be dynamically evaluated"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/wxtags/{wxtag_id}/clients",
      "method": "getOrgCurrentMatchingClientsOfAWxTag",
      "httpMethod": "get",
      "tag": "Orgs WxTags",
      "description": "getOrgCurrentMatchingClientsOfAWxTag",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/wxtunnels",
      "method": "listOrgWxTunnels",
      "httpMethod": "get",
      "tag": "Orgs WxTunnels",
      "description": "listOrgWxTunnels",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/wxtunnels",
      "method": "createOrgWxTunnel",
      "httpMethod": "post",
      "tag": "Orgs WxTunnels",
      "description": "createOrgWxTunnel",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "dmvpn",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "for_mgmt",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "hello_interval",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "hello_retries",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "hostname",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ipsec",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "is_static",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "mtu",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "peers",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "router_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "secret",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sessions",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "udp_port",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "use_udp",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "WxLAn Tunnel"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/wxtunnels/{wxtunnel_id}",
      "method": "deleteOrgWxTunnel",
      "httpMethod": "delete",
      "tag": "Orgs WxTunnels",
      "description": "deleteOrgWxTunnel",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/wxtunnels/{wxtunnel_id}",
      "method": "getOrgWxTunnel",
      "httpMethod": "get",
      "tag": "Orgs WxTunnels",
      "description": "getOrgWxTunnel",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "WxLAn Tunnel"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/orgs/{org_id}/wxtunnels/{wxtunnel_id}",
      "method": "updateOrgWxTunnel",
      "httpMethod": "put",
      "tag": "Orgs WxTunnels",
      "description": "updateOrgWxTunnel",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "dmvpn",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "for_mgmt",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "hello_interval",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "hello_retries",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "hostname",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ipsec",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "is_static",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "mtu",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "peers",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "router_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "secret",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sessions",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "udp_port",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "use_udp",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "WxLAn Tunnel"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/recover",
      "method": "recoverPassword",
      "httpMethod": "post",
      "tag": "Self",
      "description": "recoverPassword",
      "parameters": [
        {
          "name": "email",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "recaptcha",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/recover/verify/{token}",
      "method": "verifyRecoverPasssword",
      "httpMethod": "post",
      "tag": "Self",
      "description": "verifyRecoverPasssword",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/register",
      "method": "registerNewAdmin",
      "httpMethod": "post",
      "tag": "Admin",
      "description": "registerNewAdmin",
      "parameters": [
        {
          "name": "account_only",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "allow_mist",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "first_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "invite_code",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "last_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "org_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "recaptcha",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "referer_invite_token",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "return_to",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/register/verify/{token}",
      "method": "verifyRegistration",
      "httpMethod": "post",
      "tag": "Admin",
      "description": "verifyRegistration",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/self",
      "method": "deleteSelf",
      "httpMethod": "delete",
      "tag": "Self",
      "description": "deleteSelf",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/self",
      "method": "getSelf",
      "httpMethod": "get",
      "tag": "Self",
      "description": "getSelf",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "Admin"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/self",
      "method": "updateSelf",
      "httpMethod": "put",
      "tag": "Self",
      "description": "updateSelf",
      "parameters": [
        {
          "name": "admin_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "enable_two_factor",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "first_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "hours",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "last_name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "oauth_google",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "phone",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "phone2",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "privileges",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "session_expiry",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "tags",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "two_factor_verified",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "via_sso",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Admin"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/self/apitokens",
      "method": "listApiTokens",
      "httpMethod": "get",
      "tag": "API Token",
      "description": "listApiTokens",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/self/apitokens",
      "method": "createApiToken",
      "httpMethod": "post",
      "tag": "API Token",
      "description": "createApiToken",
      "parameters": [
        {
          "name": "name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "API Token"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/self/apitokens/{apitoken_id}",
      "method": "deleteApiToken",
      "httpMethod": "delete",
      "tag": "API Token",
      "description": "deleteApiToken",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/self/logs",
      "method": "listSelfAuditLogs",
      "httpMethod": "get",
      "tag": "Self",
      "description": "listSelfAuditLogs",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/self/oauth/{provider}",
      "method": "getOAuth2UrlForLinking",
      "httpMethod": "get",
      "tag": "Login With OAuth2",
      "description": "getOAuth2UrlForLinking",
      "parameters": [
        {
          "name": "forward",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/self/oauth/{provider}",
      "method": "linkOAuth2MistAccount",
      "httpMethod": "post",
      "tag": "Login With OAuth2",
      "description": "linkOAuth2MistAccount",
      "parameters": [
        {
          "name": "code",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/self/subscriptions",
      "method": "listAlarmSubscriptions",
      "httpMethod": "get",
      "tag": "Self",
      "description": "listAlarmSubscriptions",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/self/two_factor/token",
      "method": "generateQrCodeForVerification",
      "httpMethod": "get",
      "tag": "Self",
      "description": "generateQrCodeForVerification",
      "parameters": [
        {
          "name": "by",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/self/two_factor/verify",
      "method": "verifyTwoFactor",
      "httpMethod": "post",
      "tag": "Self",
      "description": "verifyTwoFactor",
      "parameters": [
        {
          "name": "two_factor",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/self/update",
      "method": "updateSelfEmail",
      "httpMethod": "post",
      "tag": "Self",
      "description": "updateSelfEmail",
      "parameters": [
        {
          "name": "email",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/self/update/verify/{token}",
      "method": "verifySelfEmail",
      "httpMethod": "get",
      "tag": "Self",
      "description": "verifySelfEmail",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}",
      "method": "deleteSite",
      "httpMethod": "delete",
      "tag": "Sites",
      "description": "deleteSite",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}",
      "method": "getSiteInfo",
      "httpMethod": "get",
      "tag": "Sites",
      "description": "getSiteInfo",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "Site"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}",
      "method": "updateSiteInfo",
      "httpMethod": "put",
      "tag": "Sites",
      "description": "updateSiteInfo",
      "parameters": [
        {
          "name": "address",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "alarmtemplate_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "aptemplate_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "country_code",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "gatewaytemplate_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "latlng",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "networktemplate_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "notes",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "rftemplate_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "secpolicy_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sitegroup_ids",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "sitetemplate_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "timezone",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Site"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/alarms/ack",
      "method": "multiAckSiteAlarms",
      "httpMethod": "post",
      "tag": "Sites Alarms",
      "description": "multiAckSiteAlarms",
      "parameters": [
        {
          "name": "alarm_ids",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "note",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/alarms/ack_all",
      "method": "ackSiteAllAlarms",
      "httpMethod": "post",
      "tag": "Sites Alarms",
      "description": "ackSiteAllAlarms",
      "parameters": [
        {
          "name": "note",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/alarms/count",
      "method": "countSiteAlarms",
      "httpMethod": "get",
      "tag": "Sites Alarms",
      "description": "countSiteAlarms",
      "parameters": [
        {
          "name": "distinct",
          "schema": "string",
          "description": "Group by and count the alarms by some distinct field"
        },
        {
          "name": "ack_admin_name",
          "schema": "string",
          "description": "Name of the admins who have acked the alarms; accepts multiple values separated by comma"
        },
        {
          "name": "acked",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": "Key-name of the alarms; accepts multiple values separated by comma"
        },
        {
          "name": "severity",
          "schema": "string",
          "description": "Alarm severity; accepts multiple values separated by comma"
        },
        {
          "name": "group",
          "schema": "string",
          "description": "Alarm group name; accepts multiple values separated by comma"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/alarms/search",
      "method": "searchSiteAlarms",
      "httpMethod": "get",
      "tag": "Sites Alarms",
      "description": "searchSiteAlarms",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "description": "Key-name of the alarms; accepts multiple values separated by comma"
        },
        {
          "name": "ack_admin_name",
          "schema": "string",
          "description": "Name of the admins who have acked the alarms; accepts multiple values separated by comma"
        },
        {
          "name": "acked",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "severity",
          "schema": "string",
          "description": "Alarm severity; accepts multiple values separated by comma"
        },
        {
          "name": "group",
          "schema": "string",
          "description": "Alarm group name; accepts multiple values separated by comma"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/alarms/unack",
      "method": "multiUnackSiteAlarms",
      "httpMethod": "post",
      "tag": "Sites Alarms",
      "description": "multiUnackSiteAlarms",
      "parameters": [
        {
          "name": "alarm_ids",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "note",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/alarms/unack_all",
      "method": "unackSiteAllArlarms",
      "httpMethod": "post",
      "tag": "Sites Alarms",
      "description": "unackSiteAllArlarms",
      "parameters": [
        {
          "name": "note",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/alarms/{alarm_id}/ack",
      "method": "ackSiteAlarm",
      "httpMethod": "post",
      "tag": "Sites Alarms",
      "description": "ackSiteAlarm",
      "parameters": [
        {
          "name": "note",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/alarms/{alarm_id}/unack",
      "method": "unackSiteAlarm",
      "httpMethod": "post",
      "tag": "Sites Alarms",
      "description": "unackSiteAlarm",
      "parameters": [
        {
          "name": "note",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/anomaly/client/{client_mac}/{metric}",
      "method": "getSiteAnomalyEventsForClient",
      "httpMethod": "get",
      "tag": "Sites Anomaly",
      "description": "getSiteAnomalyEventsForClient",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/anomaly/device/{device_mac}/{metric}",
      "method": "getSiteAnomalyEventsforDevice",
      "httpMethod": "get",
      "tag": "Sites Anomaly",
      "description": "getSiteAnomalyEventsforDevice",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/anomaly/{metric}",
      "method": "getSiteAnomalyEvents",
      "httpMethod": "get",
      "tag": "Sites Anomaly",
      "description": "getSiteAnomalyEvents",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/apps",
      "method": "listSiteApps",
      "httpMethod": "get",
      "tag": "Sites Applications",
      "description": "listSiteApps",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/assetfilters",
      "method": "listSiteAssetFilters",
      "httpMethod": "get",
      "tag": "Sites Asset Filters",
      "description": "listSiteAssetFilters",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/assetfilters",
      "method": "createSiteAssetFilters",
      "httpMethod": "post",
      "tag": "Sites Asset Filters",
      "description": "createSiteAssetFilters",
      "parameters": [
        {
          "name": "ap_mac",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "beam",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "disasbled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "eddystone_uid_namespace",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "eddystone_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "ibeacon_major",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "ibeacon_uuid",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mfg_company_id",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "rssi",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "service_uuid",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Asset Filter"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/assetfilters/{assetfilter_id}",
      "method": "deleteSiteAssetFilter",
      "httpMethod": "delete",
      "tag": "Sites Asset Filters",
      "description": "deleteSiteAssetFilter",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/assetfilters/{assetfilter_id}",
      "method": "getSiteAssetFilter",
      "httpMethod": "get",
      "tag": "Sites Asset Filters",
      "description": "getSiteAssetFilter",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "Asset Filter"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/assetfilters/{assetfilter_id}",
      "method": "updateSiteAssetFilter",
      "httpMethod": "put",
      "tag": "Sites Asset Filters",
      "description": "updateSiteAssetFilter",
      "parameters": [
        {
          "name": "ap_mac",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "beam",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "disasbled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "eddystone_uid_namespace",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "eddystone_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "ibeacon_major",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "ibeacon_uuid",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mfg_company_id",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "rssi",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "service_uuid",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Asset Filter"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/assets",
      "method": "listSiteAssets",
      "httpMethod": "get",
      "tag": "Sites Assets",
      "description": "listSiteAssets",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/assets",
      "method": "createSiteAsset",
      "httpMethod": "post",
      "tag": "Sites Assets",
      "description": "createSiteAsset",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mac",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "map_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tag_id",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Asset"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/assets/import",
      "method": "importSiteAssets",
      "httpMethod": "post",
      "tag": "Sites Assets",
      "description": "importSiteAssets",
      "parameters": [
        {
          "name": "upsert",
          "schema": "string",
          "description": "API will replace the assets with same mac if provided `upsert`==`True`, otherwise will report in errors in response."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/assets/{asset_id}",
      "method": "deleteSiteAsset",
      "httpMethod": "delete",
      "tag": "Sites Assets",
      "description": "deleteSiteAsset",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/assets/{asset_id}",
      "method": "getSiteAsset",
      "httpMethod": "get",
      "tag": "Sites Assets",
      "description": "getSiteAsset",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "Asset"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/assets/{asset_id}",
      "method": "updateSiteAsset",
      "httpMethod": "put",
      "tag": "Sites Assets",
      "description": "updateSiteAsset",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mac",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "map_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tag_id",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Asset"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/beacons",
      "method": "listSiteBeacons",
      "httpMethod": "get",
      "tag": "Sites Beacons",
      "description": "listSiteBeacons",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/beacons",
      "method": "createSiteBeacon",
      "httpMethod": "post",
      "tag": "Sites Beacons",
      "description": "createSiteBeacon",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "eddystone_instance",
          "schema": "string",
          "description": ""
        },
        {
          "name": "eddystone_namespace",
          "schema": "string",
          "description": ""
        },
        {
          "name": "eddystone_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "ibeacon_major",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "ibeacon_minor",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "ibeacon_uuid",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "mac",
          "schema": "string",
          "description": ""
        },
        {
          "name": "map_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "power",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "x",
          "schema": "number",
          "description": ""
        },
        {
          "name": "y",
          "schema": "number",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Beacon"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/beacons/{beacon_id}",
      "method": "deleteSiteBeacons",
      "httpMethod": "delete",
      "tag": "Sites Beacons",
      "description": "deleteSiteBeacons",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/beacons/{beacon_id}",
      "method": "getSiteBeacon",
      "httpMethod": "get",
      "tag": "Sites Beacons",
      "description": "getSiteBeacon",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "Beacon"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/beacons/{beacon_id}",
      "method": "updateSiteBeacons",
      "httpMethod": "put",
      "tag": "Sites Beacons",
      "description": "updateSiteBeacons",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "eddystone_instance",
          "schema": "string",
          "description": ""
        },
        {
          "name": "eddystone_namespace",
          "schema": "string",
          "description": ""
        },
        {
          "name": "eddystone_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "ibeacon_major",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "ibeacon_minor",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "ibeacon_uuid",
          "schema": "string",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "mac",
          "schema": "string",
          "description": ""
        },
        {
          "name": "map_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "power",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "x",
          "schema": "number",
          "description": ""
        },
        {
          "name": "y",
          "schema": "number",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Beacon"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/call/events/count",
      "method": "countSiteCallEvents",
      "httpMethod": "get",
      "tag": "Sites Calls",
      "description": "countSiteCallEvents",
      "parameters": [
        {
          "name": "distinct",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/call/events/search",
      "method": "searchSiteCallEvents",
      "httpMethod": "get",
      "tag": "Sites Calls",
      "description": "searchSiteCallEvents",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "description": "Event Type. See [getCallEventsDefinitions](#tag/Constants/operation/getCallEventsDefinitions)"
        },
        {
          "name": "ap",
          "schema": "string",
          "description": ""
        },
        {
          "name": "mac",
          "schema": "string",
          "description": ""
        },
        {
          "name": "app",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/clients/count",
      "method": "countSiteClients",
      "httpMethod": "get",
      "tag": "Sites Clients",
      "description": "countSiteClients",
      "parameters": [
        {
          "name": "distinct",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ssid",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ap",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ip address",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "vlan",
          "schema": "string",
          "description": ""
        },
        {
          "name": "hostname",
          "schema": "string",
          "description": ""
        },
        {
          "name": "os",
          "schema": "string",
          "description": ""
        },
        {
          "name": "model",
          "schema": "string",
          "description": ""
        },
        {
          "name": "device",
          "schema": "string",
          "description": ""
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/clients/disconnect",
      "method": "disconnectSiteMultipleClients",
      "httpMethod": "post",
      "tag": "Sites Clients",
      "description": "disconnectSiteMultipleClients",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/clients/events/count",
      "method": "countSiteClientsEvents",
      "httpMethod": "get",
      "tag": "Sites Clients",
      "description": "countSiteClientsEvents",
      "parameters": [
        {
          "name": "distinct",
          "schema": "string",
          "description": "type / proto / band / channel / wlan_id / ssid"
        },
        {
          "name": "type",
          "schema": "string",
          "description": "event type, e.g. MARVIS_EVENT_CLIENT_FBT_FAILURE"
        },
        {
          "name": "reason_code",
          "schema": "integer",
          "description": "for assoc/disassoc events"
        },
        {
          "name": "ssid",
          "schema": "string",
          "description": "SSID Name"
        },
        {
          "name": "ap",
          "schema": "string",
          "description": "AP MAC"
        },
        {
          "name": "proto",
          "schema": "string",
          "description": "802.11 standard"
        },
        {
          "name": "band",
          "schema": "string",
          "description": "24 / 5"
        },
        {
          "name": "wlan_id",
          "schema": "string",
          "description": "wlan_id"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/clients/events/search",
      "method": "searchSiteClientsEvents",
      "httpMethod": "get",
      "tag": "Sites Clients",
      "description": "searchSiteClientsEvents",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "description": "event type, e.g. MARVIS_EVENT_CLIENT_FBT_FAILURE"
        },
        {
          "name": "reason_code",
          "schema": "integer",
          "description": "for assoc/disassoc events"
        },
        {
          "name": "ssid",
          "schema": "string",
          "description": "SSID Name"
        },
        {
          "name": "ap",
          "schema": "string",
          "description": "AP MAC"
        },
        {
          "name": "proto",
          "schema": "string",
          "description": "802.11 standard"
        },
        {
          "name": "band",
          "schema": "string",
          "description": "24 / 5"
        },
        {
          "name": "wlan_id",
          "schema": "string",
          "description": "wlan_id"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/clients/search",
      "method": "searchSiteClientsWireless",
      "httpMethod": "get",
      "tag": "Sites Clients",
      "description": "searchSiteClientsWireless",
      "parameters": [
        {
          "name": "mac",
          "schema": "string",
          "description": "partial / full MAC address"
        },
        {
          "name": "ip address",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "hostname",
          "schema": "string",
          "description": "partial / full hostname"
        },
        {
          "name": "device",
          "schema": "string",
          "description": "device type, e.g. Mac, Nvidia, iPhone"
        },
        {
          "name": "os",
          "schema": "string",
          "description": "os, e.g. Sierra, Yosemite, Windows 10"
        },
        {
          "name": "model",
          "schema": "string",
          "description": "model, e.g. “MBP 15 late 2013”, 6, 6s, “8+ GSM”"
        },
        {
          "name": "ap",
          "schema": "string",
          "description": "AP mac where the client has connected to"
        },
        {
          "name": "ssid",
          "schema": "string",
          "description": ""
        },
        {
          "name": "text",
          "schema": "string",
          "description": "partial / full MAC address, hostname, username or ip"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/clients/sessions/count",
      "method": "countSiteClientSessions",
      "httpMethod": "get",
      "tag": "Sites Clients",
      "description": "countSiteClientSessions",
      "parameters": [
        {
          "name": "distinct",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ap",
          "schema": "string",
          "description": "AP MAC"
        },
        {
          "name": "band",
          "schema": "string",
          "description": "24 /5"
        },
        {
          "name": "client_family",
          "schema": "string",
          "description": "E.g. “Mac”, “iPhone”, “Apple watch”"
        },
        {
          "name": "client_manufacture",
          "schema": "string",
          "description": "E.g. “Apple”"
        },
        {
          "name": "client_model",
          "schema": "string",
          "description": "E.g. “8+”, “XS”"
        },
        {
          "name": "client_os",
          "schema": "string",
          "description": "E.g. “Mojave”, “Windows 10”, “Linux”"
        },
        {
          "name": "ssid",
          "schema": "string",
          "description": "SSID"
        },
        {
          "name": "wlan_id",
          "schema": "string",
          "description": "wlan_id"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/clients/sessions/search",
      "method": "searchSiteClientWirelessSessions",
      "httpMethod": "get",
      "tag": "Sites Clients",
      "description": "searchSiteClientWirelessSessions",
      "parameters": [
        {
          "name": "ap",
          "schema": "string",
          "description": "AP MAC"
        },
        {
          "name": "band",
          "schema": "string",
          "description": "5 / 24"
        },
        {
          "name": "client_family",
          "schema": "string",
          "description": "E.g. “Mac”, “iPhone”, “Apple watch”"
        },
        {
          "name": "client_manufacture",
          "schema": "string",
          "description": "E.g. “Apple”"
        },
        {
          "name": "client_model",
          "schema": "string",
          "description": "E.g. “8+”, “XS”"
        },
        {
          "name": "client_username",
          "schema": "string",
          "description": "Username"
        },
        {
          "name": "client_os",
          "schema": "string",
          "description": "E.g. “Mojave”, “Windows 10”, “Linux”"
        },
        {
          "name": "ssid",
          "schema": "string",
          "description": "SSID"
        },
        {
          "name": "wlan_id",
          "schema": "string",
          "description": "wlan_id"
        },
        {
          "name": "psk_id",
          "schema": "string",
          "required": false,
          "description": "PSK ID"
        },
        {
          "name": "psk_name",
          "schema": "string",
          "description": "PSK Name"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/clients/unauthorize",
      "method": "unauthorizeSiteMultipleClients",
      "httpMethod": "post",
      "tag": "Sites Clients",
      "description": "unauthorizeSiteMultipleClients",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/clients/{client_mac}/disconnect",
      "method": "disconnectSiteClient",
      "httpMethod": "post",
      "tag": "Sites Clients",
      "description": "disconnectSiteClient",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/clients/{client_mac}/events",
      "method": "getSiteEventsForClient",
      "httpMethod": "get",
      "tag": "Sites Clients",
      "description": "getSiteEventsForClient",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "description": "e.g. MARVIS_EVENT_CLIENT_DHCP_STUCK"
        },
        {
          "name": "proto",
          "schema": "string",
          "description": "a / b / g / n / ac / ax"
        },
        {
          "name": "band",
          "schema": "string",
          "description": "24 / 5"
        },
        {
          "name": "channel",
          "schema": "string",
          "description": ""
        },
        {
          "name": "wlan_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ssid",
          "schema": "string",
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/clients/{client_mac}/unauthorize",
      "method": "unauthorizeSiteClient",
      "httpMethod": "post",
      "tag": "Sites Clients",
      "description": "unauthorizeSiteClient",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices",
      "method": "listSiteDevices",
      "httpMethod": "get",
      "tag": "Sites Devices",
      "description": "listSiteDevices",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "description": "device type"
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/ap_channels",
      "method": "getSiteDeviceRadioChannels",
      "httpMethod": "get",
      "tag": "Sites Devices APs",
      "description": "getSiteDeviceRadioChannels",
      "parameters": [
        {
          "name": "country_code",
          "schema": "string",
          "description": "country code for the site (for AP config generation), in [two-character](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/config_history/count",
      "method": "countSiteDeviceConfigHistory",
      "httpMethod": "get",
      "tag": "Sites Devices",
      "description": "countSiteDeviceConfigHistory",
      "parameters": [
        {
          "name": "distinct",
          "schema": "string",
          "description": ""
        },
        {
          "name": "mac",
          "schema": "string",
          "description": ""
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/config_history/search",
      "method": "searchSiteDeviceConfigHistory",
      "httpMethod": "get",
      "tag": "Sites Devices",
      "description": "searchSiteDeviceConfigHistory",
      "parameters": [
        {
          "name": "device_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "mac",
          "schema": "string",
          "description": "Device MAC Address"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/count",
      "method": "countSiteDevices",
      "httpMethod": "get",
      "tag": "Sites Devices",
      "description": "countSiteDevices",
      "parameters": [
        {
          "name": "distinct",
          "schema": "string",
          "description": ""
        },
        {
          "name": "hostname",
          "schema": "string",
          "description": ""
        },
        {
          "name": "model",
          "schema": "string",
          "description": ""
        },
        {
          "name": "mac",
          "schema": "string",
          "description": ""
        },
        {
          "name": "version",
          "schema": "string",
          "description": ""
        },
        {
          "name": "mxtunnel_status",
          "schema": "string",
          "description": ""
        },
        {
          "name": "mxedge_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "lldp_system_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "lldp_system_desc",
          "schema": "string",
          "description": ""
        },
        {
          "name": "lldp_port_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "lldp_mgmt_addr",
          "schema": "string",
          "description": ""
        },
        {
          "name": "map_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/events/count",
      "method": "countSiteDeviceEvents",
      "httpMethod": "get",
      "tag": "Sites Devices",
      "description": "countSiteDeviceEvents",
      "parameters": [
        {
          "name": "distinct",
          "schema": "string",
          "description": ""
        },
        {
          "name": "model",
          "schema": "string",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "type_code",
          "schema": "string",
          "description": ""
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/events/search",
      "method": "searchSiteDevicesEvents",
      "httpMethod": "get",
      "tag": "Sites Devices",
      "description": "searchSiteDevicesEvents",
      "parameters": [
        {
          "name": "device_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "mac",
          "schema": "string",
          "description": "device mac"
        },
        {
          "name": "model",
          "schema": "string",
          "description": "device model"
        },
        {
          "name": "text",
          "schema": "string",
          "description": "event message"
        },
        {
          "name": "timestamp",
          "schema": "string",
          "description": "event time"
        },
        {
          "name": "type",
          "schema": "string",
          "description": "see [Event Types Definition](/#tag/Constants/operation/getDeviceEventsDefinitions)"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/export",
      "method": "exportSiteDevices",
      "httpMethod": "get",
      "tag": "Sites Devices",
      "description": "exportSiteDevices",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "File"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/import",
      "method": "importSiteDevices",
      "httpMethod": "post",
      "tag": "Sites Devices",
      "description": "importSiteDevices",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/last_config/count",
      "method": "countSiteDeviceLastConfig",
      "httpMethod": "get",
      "tag": "Sites Devices",
      "description": "countSiteDeviceLastConfig",
      "parameters": [
        {
          "name": "distinct",
          "schema": "string",
          "description": ""
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/last_config/search",
      "method": "searchSiteDeviceLastConfigs",
      "httpMethod": "get",
      "tag": "Sites Devices",
      "description": "searchSiteDeviceLastConfigs",
      "parameters": [
        {
          "name": "device_type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "mac",
          "schema": "string",
          "description": ""
        },
        {
          "name": "version",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/reprovision",
      "method": "reprovisionSiteAllAps",
      "httpMethod": "post",
      "tag": "Sites Devices APs",
      "description": "reprovisionSiteAllAps",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/reset_radio_config",
      "method": "resetSiteAllApsToUseRrm",
      "httpMethod": "post",
      "tag": "Sites Devices APs",
      "description": "resetSiteAllApsToUseRrm",
      "parameters": [
        {
          "name": "bands",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "force",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/restart",
      "method": "multiRestartSiteDevices",
      "httpMethod": "post",
      "tag": "Sites Devices",
      "description": "multiRestartSiteDevices",
      "parameters": [
        {
          "name": "device_ids",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "node",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/search",
      "method": "searchSiteDevices",
      "httpMethod": "get",
      "tag": "Sites Devices",
      "description": "searchSiteDevices",
      "parameters": [
        {
          "name": "hostname",
          "schema": "string",
          "description": "partial / full hostname"
        },
        {
          "name": "type",
          "schema": "string",
          "description": "device type"
        },
        {
          "name": "model",
          "schema": "string",
          "description": "device model"
        },
        {
          "name": "mac",
          "schema": "string",
          "description": "device MAC"
        },
        {
          "name": "version",
          "schema": "string",
          "description": "version"
        },
        {
          "name": "power_constrained",
          "schema": "boolean",
          "description": "power_constrained"
        },
        {
          "name": "ip address",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mxtunnel_status",
          "schema": "string",
          "description": "MxTunnel status, up / down"
        },
        {
          "name": "mxedge_id",
          "schema": "string",
          "description": "Mist Edge id, if AP is connecting to a Mist Edge"
        },
        {
          "name": "lldp_system_name",
          "schema": "string",
          "description": "LLDP system name"
        },
        {
          "name": "lldp_system_desc",
          "schema": "string",
          "description": "LLDP system description"
        },
        {
          "name": "lldp_port_id",
          "schema": "string",
          "description": "LLDP port id"
        },
        {
          "name": "lldp_mgmt_addr",
          "schema": "string",
          "description": "LLDP management ip address"
        },
        {
          "name": "band_24_channel",
          "schema": "integer",
          "description": "Channel of band_24"
        },
        {
          "name": "band_5_channel",
          "schema": "integer",
          "description": "Channel of band_5"
        },
        {
          "name": "band_6_channel",
          "schema": "integer",
          "description": "Channel of band_6"
        },
        {
          "name": "eth0_port_speed",
          "schema": "integer",
          "description": "Port speed of eth0"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "sort options"
        },
        {
          "name": "desc-sort",
          "schema": "string",
          "description": "sort options in reverse order"
        },
        {
          "name": "stats",
          "schema": "boolean",
          "description": "whether to return device stats"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/upgrade",
      "method": "getSiteDevicesUpgrade",
      "httpMethod": "get",
      "tag": "Sites Devices Upgrades",
      "description": "getSiteDevicesUpgrade",
      "parameters": [
        {
          "name": "status",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/upgrade",
      "method": "multiUpgradeSiteDevices",
      "httpMethod": "post",
      "tag": "Sites Devices Upgrades",
      "description": "multiUpgradeSiteDevices",
      "parameters": [
        {
          "name": "canary_phases",
          "schema": "array",
          "description": ""
        },
        {
          "name": "device_ids",
          "schema": "array",
          "description": ""
        },
        {
          "name": "enable_p2p",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "force",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "max_failure_percentage",
          "schema": "number",
          "description": ""
        },
        {
          "name": "max_failures",
          "schema": "array",
          "description": ""
        },
        {
          "name": "models",
          "schema": "array",
          "description": ""
        },
        {
          "name": "p2p_cluster_size",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "p2p_parallelism",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "reboot",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "reboot_at",
          "schema": "number",
          "description": ""
        },
        {
          "name": "rrm_first_batch_percentage",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "rrm_max_batch_percentage",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "rrm_mesh_upgrade",
          "schema": "string",
          "description": ""
        },
        {
          "name": "rrm_node_order",
          "schema": "string",
          "description": ""
        },
        {
          "name": "rrm_slow_ramp",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "snapshot",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "start_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "strategy",
          "schema": "string",
          "description": ""
        },
        {
          "name": "version",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/upgrade/{upgrade_id}",
      "method": "getSiteUpgrade",
      "httpMethod": "get",
      "tag": "Sites Devices Upgrades",
      "description": "getSiteUpgrade",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/upgrade/{upgrade_id}/cancel",
      "method": "cancelSiteDeviceUpgrade",
      "httpMethod": "post",
      "tag": "Sites Devices Upgrades",
      "description": "cancelSiteDeviceUpgrade",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/versions",
      "method": "listSiteAvailableDeviceVersions",
      "httpMethod": "get",
      "tag": "Sites Devices Upgrades",
      "description": "listSiteAvailableDeviceVersions",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/zerioze",
      "method": "zeroizeSiteFipsAllAps",
      "httpMethod": "post",
      "tag": "Sites Devices APs",
      "description": "zeroizeSiteFipsAllAps",
      "parameters": [
        {
          "name": "password",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/{device_id}",
      "method": "deleteSiteDevice",
      "httpMethod": "delete",
      "tag": "Sites Devices",
      "description": "deleteSiteDevice",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/{device_id}",
      "method": "getSiteDevice",
      "httpMethod": "get",
      "tag": "Sites Devices",
      "description": "getSiteDevice",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/{device_id}",
      "method": "updateSiteDevice",
      "httpMethod": "put",
      "tag": "Sites Devices",
      "description": "updateSiteDevice",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/{device_id}/arp",
      "method": "arpFromDevice",
      "httpMethod": "post",
      "tag": "Sites Devices Utilities",
      "description": "arpFromDevice",
      "parameters": [
        {
          "name": "node",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/{device_id}/bounce_port",
      "method": "portsBounceFromSwitch",
      "httpMethod": "post",
      "tag": "Sites Devices Switches",
      "description": "portsBounceFromSwitch",
      "parameters": [
        {
          "name": "port",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ports",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/{device_id}/cable_test",
      "method": "cableTestFromSwitch",
      "httpMethod": "post",
      "tag": "Sites Devices Switches",
      "description": "cableTestFromSwitch",
      "parameters": [
        {
          "name": "port",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/{device_id}/check_radius_server",
      "method": "startSiteSwitchRadiusSyntheticTest",
      "httpMethod": "post",
      "tag": "Sites Synthetic Tests",
      "description": "triggerSiteSwitchRadiusSyntheticTest",
      "parameters": [
        {
          "name": "password",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "profile",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "user",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/{device_id}/clear_arp",
      "method": "clearSiteSsrArpCache",
      "httpMethod": "post",
      "tag": "Sites Devices WAN Edges",
      "description": "clearSiteSsrArpCache",
      "parameters": [
        {
          "name": "ip",
          "schema": "string",
          "description": ""
        },
        {
          "name": "node",
          "schema": "string",
          "description": ""
        },
        {
          "name": "port_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "vlan",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/{device_id}/clear_bgp",
      "method": "clearSiteSsrBgpRoutes",
      "httpMethod": "post",
      "tag": "Sites Devices WAN Edges",
      "description": "clearSiteSsrBgpRoutes",
      "parameters": [
        {
          "name": "neighbor",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "vrf",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/{device_id}/clear_bpdu_error",
      "method": "clearBpduErrosFromPortsOnSwitch",
      "httpMethod": "post",
      "tag": "Sites Devices Switches",
      "description": "clearBpduErrosFromPortsOnSwitch",
      "parameters": [
        {
          "name": "port",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/{device_id}/clear_macs",
      "method": "clearAllLearnedMacsFromPortOnSwitch",
      "httpMethod": "post",
      "tag": "Sites Devices Switches",
      "description": "clearAllLearnedMacsFromPortOnSwitch",
      "parameters": [
        {
          "name": "ports",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/{device_id}/config_cmd",
      "method": "getSiteDeviceConfigCmd",
      "httpMethod": "get",
      "tag": "Sites Devices",
      "description": "getSiteDeviceConfigCmd",
      "parameters": [
        {
          "name": "sort",
          "schema": "string",
          "description": "Make output cmds sorted (for better readability) or not."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/{device_id}/ha",
      "method": "deleteSiteDeviceHaCluster",
      "httpMethod": "delete",
      "tag": "Sites Devices WAN Edges HA",
      "description": "deleteSiteDeviceHaCluster",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/{device_id}/ha",
      "method": "createSiteDeviceHaCluster",
      "httpMethod": "post",
      "tag": "Sites Devices WAN Edges HA",
      "description": "createSiteDeviceHaCluster",
      "parameters": [
        {
          "name": "nodes",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/{device_id}/ha",
      "method": "swapSiteDeviceHaClusterNode",
      "httpMethod": "put",
      "tag": "Sites Devices WAN Edges HA",
      "description": "swapSiteDeviceHaClusterNode",
      "parameters": [
        {
          "name": "mac",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "op",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/{device_id}/image{image_number}",
      "method": "deleteSiteDeviceImage",
      "httpMethod": "delete",
      "tag": "Sites Devices",
      "description": "deleteSiteDeviceImage",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/{device_id}/image{image_number}",
      "method": "addSiteDeviceImage",
      "httpMethod": "post",
      "tag": "Sites Devices",
      "description": "addSiteDeviceImage",
      "parameters": [
        {
          "name": "file",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "json",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/{device_id}/iot",
      "method": "getSiteDeviceIotPort",
      "httpMethod": "get",
      "tag": "Sites Devices APs",
      "description": "getSiteDeviceIotPort",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "The property key is the IoT port name (e.g. \"A1\")"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/{device_id}/iot",
      "method": "setSiteDeviceIotPort",
      "httpMethod": "put",
      "tag": "Sites Devices APs",
      "description": "setSiteDeviceIotPort",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "The property key is the IoT port name (e.g. \"A1\")"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/{device_id}/local_port_config",
      "method": "deleteSiteLocalSwitchPortConfig",
      "httpMethod": "delete",
      "tag": "Sites Devices Switches",
      "description": "deleteSiteLocalSwitchPortConfig",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/{device_id}/local_port_config",
      "method": "updateSiteLocalSwitchPortConfig",
      "httpMethod": "put",
      "tag": "Sites Devices Switches",
      "description": "updateSiteLocalSwitchPortConfig",
      "parameters": [
        {
          "name": "ae_disable_lacp",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "ae_idx",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "aggregated",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "critical",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "disable_autoneg",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "duplex",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "dynamic_usage",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "esilag",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "mtu",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "no_local_overwrite",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "poe_disabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "speed",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "usage",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/{device_id}/locate",
      "method": "startSiteLocateDevice",
      "httpMethod": "post",
      "tag": "Sites Devices APs",
      "description": "startSiteLocateDevice",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/{device_id}/ping",
      "method": "pingFromDevice",
      "httpMethod": "post",
      "tag": "Sites Devices Utilities",
      "description": "pingFromDevice",
      "parameters": [
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "egress_interface",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "host",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "node",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "size",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/{device_id}/poll_stats",
      "method": "pollSiteSwitchStats",
      "httpMethod": "post",
      "tag": "Sites Devices Switches",
      "description": "pollSiteSwitchStats",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/{device_id}/release_dhcp",
      "method": "releaseSiteSsrDhcpLease",
      "httpMethod": "post",
      "tag": "Sites Devices WAN Edges",
      "description": "releaseSiteSsrDhcpLease",
      "parameters": [
        {
          "name": "node",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "port",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/{device_id}/request_ztp_password",
      "method": "getSiteDeviceZtpPassword",
      "httpMethod": "post",
      "tag": "Sites Devices",
      "description": "getSiteDeviceZtpPassword",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/{device_id}/resolve_dns",
      "method": "testSiteSsrDnsResolution",
      "httpMethod": "post",
      "tag": "Sites Devices WAN Edges",
      "description": "testSiteSsrDnsResolution",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/{device_id}/restart",
      "method": "restartSiteDevice",
      "httpMethod": "post",
      "tag": "Sites Devices",
      "description": "restartSiteDevice",
      "parameters": [
        {
          "name": "member",
          "schema": "string",
          "description": ""
        },
        {
          "name": "node",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/{device_id}/service_ping",
      "method": "servicePingFromSsr",
      "httpMethod": "post",
      "tag": "Sites Devices WAN Edges",
      "description": "servicePingFromSsr",
      "parameters": [
        {
          "name": "count",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "host",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "service",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "size",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "tenant",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/{device_id}/show_route",
      "method": "getSiteSsrAndSrxRoutes",
      "httpMethod": "post",
      "tag": "Sites Devices WAN Edges",
      "description": "getSiteSsrAndSrxRoutes",
      "parameters": [
        {
          "name": "neighbor",
          "schema": "string",
          "description": ""
        },
        {
          "name": "node",
          "schema": "string",
          "description": ""
        },
        {
          "name": "prefix",
          "schema": "string",
          "description": ""
        },
        {
          "name": "protocol",
          "schema": "string",
          "description": ""
        },
        {
          "name": "route",
          "schema": "string",
          "description": ""
        },
        {
          "name": "vrf_name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/{device_id}/show_service_path",
      "method": "getSiteSsrServicePath",
      "httpMethod": "post",
      "tag": "Sites Devices WAN Edges",
      "description": "getSiteSsrServicePath",
      "parameters": [
        {
          "name": "node",
          "schema": "string",
          "description": ""
        },
        {
          "name": "service_name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/{device_id}/show_session",
      "method": "getSiteSsrAndSrxSessions",
      "httpMethod": "post",
      "tag": "Sites Devices WAN Edges",
      "description": "getSiteSsrAndSrxSessions",
      "parameters": [
        {
          "name": "node",
          "schema": "string",
          "description": ""
        },
        {
          "name": "service_name",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/{device_id}/snapshot",
      "method": "createSiteDeviceSnapshot",
      "httpMethod": "post",
      "tag": "Sites Devices Utilities",
      "description": "createSiteDeviceSnapshot",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/{device_id}/support",
      "method": "uploadSiteDeviceSupportFile",
      "httpMethod": "post",
      "tag": "Sites Devices",
      "description": "uploadSiteDeviceSupportFile",
      "parameters": [
        {
          "name": "info",
          "schema": "string",
          "description": ""
        },
        {
          "name": "node",
          "schema": "string",
          "description": ""
        },
        {
          "name": "num_messages_files",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/{device_id}/synthetic_test",
      "method": "startSiteDeviceSyntheticTest",
      "httpMethod": "post",
      "tag": "Sites Synthetic Tests",
      "description": "triggerSiteDeviceSyntheticTest",
      "parameters": [
        {
          "name": "hostname",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ip",
          "schema": "string",
          "description": ""
        },
        {
          "name": "password",
          "schema": "string",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "username",
          "schema": "string",
          "description": ""
        },
        {
          "name": "vlan_id",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/{device_id}/traceroute",
      "method": "tracerouteFromDevice",
      "httpMethod": "post",
      "tag": "Sites Devices Utilities",
      "description": "tracerouteFromDevice",
      "parameters": [
        {
          "name": "host",
          "schema": "string",
          "description": ""
        },
        {
          "name": "port",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "protocol",
          "schema": "string",
          "description": ""
        },
        {
          "name": "timeout",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/{device_id}/unlocate",
      "method": "stopSiteLocateDevice",
      "httpMethod": "post",
      "tag": "Sites Devices APs",
      "description": "stopSiteLocateDevice",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/{device_id}/upgrade",
      "method": "upgradeSiteDevice",
      "httpMethod": "post",
      "tag": "Sites Devices Upgrades",
      "description": "upgradeSiteDevice",
      "parameters": [
        {
          "name": "version",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/{device_id}/vc",
      "method": "deleteSiteVirtualChassis",
      "httpMethod": "delete",
      "tag": "Sites Devices Switches Virtual Chassis",
      "description": "deleteSiteVirtualChassis",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/{device_id}/vc",
      "method": "getSiteDeviceVirtualChassis",
      "httpMethod": "get",
      "tag": "Sites Devices Switches Virtual Chassis",
      "description": "getSiteDeviceVirtualChassis",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/{device_id}/vc",
      "method": "createSiteVirtualChassis",
      "httpMethod": "post",
      "tag": "Sites Devices Switches Virtual Chassis",
      "description": "createSiteVirtualChassis",
      "parameters": [
        {
          "name": "member",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "members",
          "schema": "array",
          "description": ""
        },
        {
          "name": "new-member",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "op",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/{device_id}/vc",
      "method": "updateSiteVirtualChassisMember",
      "httpMethod": "put",
      "tag": "Sites Devices Switches Virtual Chassis",
      "description": "updateSiteVirtualChassisMember",
      "parameters": [
        {
          "name": "member",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "members",
          "schema": "array",
          "description": ""
        },
        {
          "name": "new-member",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "op",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/devices/{device_id}/vc/vc_port",
      "method": "setSiteVcPort",
      "httpMethod": "post",
      "tag": "Sites Devices Switches Virtual Chassis",
      "description": "setSiteVcPort",
      "parameters": [
        {
          "name": "members",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "op",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/events/fast_roam",
      "method": "getSiteRoamingEvents",
      "httpMethod": "get",
      "tag": "Sites Events",
      "description": "getSiteRoamingEvents",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "description": "event type"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/events/interference",
      "method": "getSiteInterferenceEvents",
      "httpMethod": "get",
      "tag": "Sites Events",
      "description": "getSiteInterferenceEvents",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/events/system/count",
      "method": "countSiteSystemEvents",
      "httpMethod": "get",
      "tag": "Sites Events",
      "description": "countSiteSystemEvents",
      "parameters": [
        {
          "name": "distinct",
          "schema": "string",
          "description": ""
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/events/system/search",
      "method": "searchSiteSystemEvents",
      "httpMethod": "get",
      "tag": "Sites Events",
      "description": "searchSiteSystemEvents",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/evpn_topologies",
      "method": "getSiteEvpnTopology",
      "httpMethod": "get",
      "tag": "Sites EVPN Topologies",
      "description": "getSiteEvpnTopology",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/evpn_topologies",
      "method": "createSiteEvpnTopology",
      "httpMethod": "post",
      "tag": "Sites EVPN Topologies",
      "description": "createSiteEvpnTopology",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pod_names",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "switches",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/evpn_topologies/{evpn_topology_id}",
      "method": "deleteSiteEvpnTopology",
      "httpMethod": "delete",
      "tag": "Sites EVPN Topologies",
      "description": "deleteSiteEvpnTopology",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/evpn_topologies/{evpn_topology_id}",
      "method": "getSiteEvpnTolopogy",
      "httpMethod": "get",
      "tag": "Sites EVPN Topologies",
      "description": "getSiteEvpnTolopogy",
      "parameters": [],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/evpn_topologies/{evpn_topology_id}",
      "method": "updateSiteEvpnTopology",
      "httpMethod": "put",
      "tag": "Sites EVPN Topologies",
      "description": "updateSiteEvpnTopology",
      "parameters": [
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pod_names",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "switches",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/guests",
      "method": "listSiteAllGuestAuthorizations",
      "httpMethod": "get",
      "tag": "Sites Guests",
      "description": "listSiteAllGuestAuthorizations",
      "parameters": [
        {
          "name": "wlan_id",
          "schema": "string",
          "description": "UUID of single or multiple (Comma separated) WLAN under Site `site_id` (to filter by WLAN)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/guests/count",
      "method": "countSiteGuestAuthorizations",
      "httpMethod": "get",
      "tag": "Sites Guests",
      "description": "countSiteGuestAuthorizations",
      "parameters": [
        {
          "name": "distinct",
          "schema": "string",
          "description": ""
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/guests/search",
      "method": "searchSiteGuestAuthorization",
      "httpMethod": "get",
      "tag": "Sites Guests",
      "description": "searchSiteGuestAuthorization",
      "parameters": [
        {
          "name": "wlan_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "auth_method",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ssid",
          "schema": "string",
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/guests/{guest_mac}",
      "method": "deleteSiteGuestAuthorization",
      "httpMethod": "delete",
      "tag": "Sites Guests",
      "description": "deleteSiteGuestAuthorization",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/guests/{guest_mac}",
      "method": "getSiteGuestAuthorization",
      "httpMethod": "get",
      "tag": "Sites Guests",
      "description": "getSiteGuestAuthorization",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "Guest"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/guests/{guest_mac}",
      "method": "updateSiteGuestAuthorization",
      "httpMethod": "put",
      "tag": "Sites Guests",
      "description": "updateSiteGuestAuthorization",
      "parameters": [
        {
          "name": "authorized",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "authorized_expiring_time",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "authorized_time",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "company",
          "schema": "string",
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "description": ""
        },
        {
          "name": "field1",
          "schema": "string",
          "description": ""
        },
        {
          "name": "field2",
          "schema": "string",
          "description": ""
        },
        {
          "name": "field3",
          "schema": "string",
          "description": ""
        },
        {
          "name": "field4",
          "schema": "string",
          "description": ""
        },
        {
          "name": "mac",
          "schema": "string",
          "description": ""
        },
        {
          "name": "minutes",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ssid",
          "schema": "string",
          "description": ""
        },
        {
          "name": "wlan_id",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Guest"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/insights/client/{client_mac}/{metric}",
      "method": "getSiteInsightMetricsForClient",
      "httpMethod": "get",
      "tag": "Sites Insights",
      "description": "getSiteInsightMetricsForClient",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        },
        {
          "name": "interval",
          "schema": "string",
          "required": false,
          "description": "Aggregation works by giving a time range plus interval (e.g. 1d, 1h, 10m) where aggregation function would be applied to."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/insights/device/{device_mac}/{metric}",
      "method": "getSiteInsightMetricsForDevice",
      "httpMethod": "get",
      "tag": "Sites Insights",
      "description": "getSiteInsightMetricsForDevice",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        },
        {
          "name": "interval",
          "schema": "string",
          "required": false,
          "description": "Aggregation works by giving a time range plus interval (e.g. 1d, 1h, 10m) where aggregation function would be applied to."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/insights/rogues",
      "method": "listSiteRogueAPs",
      "httpMethod": "get",
      "tag": "Sites Insights",
      "description": "listSiteRogueAPs",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        },
        {
          "name": "interval",
          "schema": "string",
          "required": false,
          "description": "Aggregation works by giving a time range plus interval (e.g. 1d, 1h, 10m) where aggregation function would be applied to."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/insights/rogues/clients",
      "method": "listSiteRogueClients",
      "httpMethod": "get",
      "tag": "Sites Insights",
      "description": "listSiteRogueClients",
      "parameters": [
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        },
        {
          "name": "interval",
          "schema": "string",
          "required": false,
          "description": "Aggregation works by giving a time range plus interval (e.g. 1d, 1h, 10m) where aggregation function would be applied to."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/insights/{metric}",
      "method": "getSiteInsightMetrics",
      "httpMethod": "get",
      "tag": "Sites Insights",
      "description": "getSiteInsightMetrics",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        },
        {
          "name": "interval",
          "schema": "string",
          "required": false,
          "description": "Aggregation works by giving a time range plus interval (e.g. 1d, 1h, 10m) where aggregation function would be applied to."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/licenses/usages",
      "method": "getSiteLicenseUsage",
      "httpMethod": "get",
      "tag": "Sites Licenses",
      "description": "getSiteLicenseUsage",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/location/coverage",
      "method": "getSiteBeamCoverageOverview",
      "httpMethod": "get",
      "tag": "Sites Location",
      "description": "getSiteBeamCoverageOverview",
      "parameters": [
        {
          "name": "map_id",
          "schema": "string",
          "description": "map_id (filter by map_id)"
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "description": "where the start time will be calculated (with end time is now)"
        },
        {
          "name": "resolution",
          "schema": "string",
          "description": ""
        },
        {
          "name": "client_type",
          "schema": "string",
          "description": "client_type (as filter. optional)"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/location/ml/current",
      "method": "getSiteMachineLearningCurrentStat",
      "httpMethod": "get",
      "tag": "Sites Location",
      "description": "getSiteMachineLearningCurrentStat",
      "parameters": [
        {
          "name": "map_id",
          "schema": "string",
          "description": "map_id (as filter, optional)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/location/ml/defaults",
      "method": "getSiteDefaultPlfForModels",
      "httpMethod": "get",
      "tag": "Sites Location",
      "description": "getSiteDefaultPlfForModels",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/location/ml/device/{device_id}",
      "method": "clearSiteMlOverwriteForDevice",
      "httpMethod": "delete",
      "tag": "Sites Location",
      "description": "clearSiteMlOverwriteForDevice",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/location/ml/device/{device_id}",
      "method": "overwriteSiteMlForDevice",
      "httpMethod": "put",
      "tag": "Sites Location",
      "description": "overwriteSiteMlForDevice",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/location/ml/map/{map_id}",
      "method": "clearSiteMlOverwriteForMap",
      "httpMethod": "delete",
      "tag": "Sites Location",
      "description": "clearSiteMlOverwriteForMap",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/location/ml/map/{map_id}",
      "method": "overwriteSiteMlForMap",
      "httpMethod": "put",
      "tag": "Sites Location",
      "description": "overwriteSiteMlForMap",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/location/ml/reset/map/{map_id}",
      "method": "resetSiteMlStatsByMap",
      "httpMethod": "post",
      "tag": "Sites Location",
      "description": "resetSiteMlStatsByMap",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/location/ml/updates",
      "method": "getSiteMachineLearningEvents",
      "httpMethod": "get",
      "tag": "Sites Location",
      "description": "getSiteMachineLearningEvents",
      "parameters": [
        {
          "name": "device_id",
          "schema": "string",
          "description": "device_id (as filter, optional)"
        },
        {
          "name": "map_ip",
          "schema": "string",
          "description": "map_id (as filter, optional)"
        },
        {
          "name": "client_type",
          "schema": "string",
          "description": "client_type (as filter, optional)"
        },
        {
          "name": "duration",
          "schema": "string",
          "description": "instead of start, you can use 1d, 30m, 5h, where the start will be calculated"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "interval",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/maps",
      "method": "listSiteMaps",
      "httpMethod": "get",
      "tag": "Sites Maps",
      "description": "listSiteMaps",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/maps",
      "method": "createSiteMap",
      "httpMethod": "post",
      "tag": "Sites Maps",
      "description": "createSiteMap",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "flags",
          "schema": "object",
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "height",
          "schema": "number",
          "description": ""
        },
        {
          "name": "height_m",
          "schema": "number",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "latlng_br",
          "schema": "object",
          "description": ""
        },
        {
          "name": "latlng_tl",
          "schema": "object",
          "description": ""
        },
        {
          "name": "locked",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "occupancy_limit",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "orientation",
          "schema": "number",
          "description": ""
        },
        {
          "name": "origin_x",
          "schema": "number",
          "description": ""
        },
        {
          "name": "origin_y",
          "schema": "number",
          "description": ""
        },
        {
          "name": "ppm",
          "schema": "number",
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "sitesurvey_path",
          "schema": "array",
          "description": ""
        },
        {
          "name": "thumbnail_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "use_auto_orientation",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "use_auto_placement",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "view",
          "schema": "string",
          "description": ""
        },
        {
          "name": "wall_path",
          "schema": "object",
          "description": ""
        },
        {
          "name": "wayfinding",
          "schema": "object",
          "description": ""
        },
        {
          "name": "wayfinding_path",
          "schema": "object",
          "description": ""
        },
        {
          "name": "width",
          "schema": "number",
          "description": ""
        },
        {
          "name": "width_m",
          "schema": "number",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Map"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/maps/import",
      "method": "importSiteMaps",
      "httpMethod": "post",
      "tag": "Sites Maps",
      "description": "importSiteMaps",
      "parameters": [
        {
          "name": "auto_deviceprofile_assignment",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "csv",
          "schema": "string",
          "description": ""
        },
        {
          "name": "file",
          "schema": "string",
          "description": ""
        },
        {
          "name": "json",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/maps/{map_id}",
      "method": "deleteSiteMap",
      "httpMethod": "delete",
      "tag": "Sites Maps",
      "description": "deleteSiteMap",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/maps/{map_id}",
      "method": "getSiteMap",
      "httpMethod": "get",
      "tag": "Sites Maps",
      "description": "getSiteMap",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "Map"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/maps/{map_id}",
      "method": "updateSiteMap",
      "httpMethod": "put",
      "tag": "Sites Maps",
      "description": "updateSiteMap",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "flags",
          "schema": "object",
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "height",
          "schema": "number",
          "description": ""
        },
        {
          "name": "height_m",
          "schema": "number",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "latlng_br",
          "schema": "object",
          "description": ""
        },
        {
          "name": "latlng_tl",
          "schema": "object",
          "description": ""
        },
        {
          "name": "locked",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "occupancy_limit",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "orientation",
          "schema": "number",
          "description": ""
        },
        {
          "name": "origin_x",
          "schema": "number",
          "description": ""
        },
        {
          "name": "origin_y",
          "schema": "number",
          "description": ""
        },
        {
          "name": "ppm",
          "schema": "number",
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "sitesurvey_path",
          "schema": "array",
          "description": ""
        },
        {
          "name": "thumbnail_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "use_auto_orientation",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "use_auto_placement",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "view",
          "schema": "string",
          "description": ""
        },
        {
          "name": "wall_path",
          "schema": "object",
          "description": ""
        },
        {
          "name": "wayfinding",
          "schema": "object",
          "description": ""
        },
        {
          "name": "wayfinding_path",
          "schema": "object",
          "description": ""
        },
        {
          "name": "width",
          "schema": "number",
          "description": ""
        },
        {
          "name": "width_m",
          "schema": "number",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Map"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/maps/{map_id}/auto_orient",
      "method": "deleteSiteApAutoOrientation",
      "httpMethod": "delete",
      "tag": "Sites Maps Auto-orientation",
      "description": "deleteSiteApAutoOrientation",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/maps/{map_id}/auto_orient",
      "method": "startSiteApAutoOrientation",
      "httpMethod": "post",
      "tag": "Sites Maps Auto-orientation",
      "description": "startSiteApAutoOrientation",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/maps/{map_id}/auto_placement",
      "method": "deleteSiteApAutoplacement",
      "httpMethod": "delete",
      "tag": "Sites Maps Auto-placement",
      "description": "deleteSiteApAutoplacement",
      "parameters": [],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/maps/{map_id}/auto_placement",
      "method": "getSiteApAutoPlacement",
      "httpMethod": "get",
      "tag": "Sites Maps Auto-placement",
      "description": "getSiteApAutoplacement",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/maps/{map_id}/auto_placement",
      "method": "runSiteApAutoplacement",
      "httpMethod": "post",
      "tag": "Sites Maps Auto-placement",
      "description": "runSiteApAutoplacement",
      "parameters": [
        {
          "name": "device_ids",
          "schema": "array",
          "description": ""
        },
        {
          "name": "force_collection",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/maps/{map_id}/clear_auto_orient",
      "method": "clearSiteApAutoOrient",
      "httpMethod": "post",
      "tag": "Sites Maps Auto-orientation",
      "description": "clearSiteApAutoOrient",
      "parameters": [
        {
          "name": "device_ids",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/maps/{map_id}/clear_autoplacement",
      "method": "clearSiteApAutoplacement",
      "httpMethod": "post",
      "tag": "Sites Maps Auto-placement",
      "description": "clearSiteApAutoplacement",
      "parameters": [
        {
          "name": "device_ids",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/maps/{map_id}/image",
      "method": "deleteSiteMapImage",
      "httpMethod": "delete",
      "tag": "Sites Maps",
      "description": "deleteSiteMapImage",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/maps/{map_id}/image",
      "method": "addSiteMapImage",
      "httpMethod": "post",
      "tag": "Sites Maps",
      "description": "addSiteMapImage",
      "parameters": [
        {
          "name": "file",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "json",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/maps/{map_id}/replace",
      "method": "replaceSiteMapImage",
      "httpMethod": "post",
      "tag": "Sites Maps",
      "description": "replaceSiteMapImage",
      "parameters": [
        {
          "name": "file",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "json",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/maps/{map_id}/set_map",
      "method": "bulkAssignSiteApsToMap",
      "httpMethod": "post",
      "tag": "Sites Maps",
      "description": "bulkAssignSiteApsToMap",
      "parameters": [
        {
          "name": "device_ids",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/maps/{map_id}/wayfinding/import",
      "method": "importSiteWayfindings",
      "httpMethod": "post",
      "tag": "Sites Maps",
      "description": "importSiteWayfindings",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/mxedges",
      "method": "listSiteMxEdges",
      "httpMethod": "get",
      "tag": "Sites MxEdges",
      "description": "listSiteMxEdges",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/mxedges",
      "method": "createSiteMxEdge",
      "httpMethod": "post",
      "tag": "Sites MxEdges",
      "description": "createSiteMxEdge",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "magic",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "model",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "mxagent_registered",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "mxcluster_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mxedge_mgmt",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ntp_servers",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "oob_ip_config",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "proxy",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "services",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tunterm_dhcpd_config",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "tunterm_extra_routes",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "tunterm_igmp_snooping_config",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "tunterm_ip_config",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "tunterm_monitoring",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "tunterm_other_ip_configs",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "tunterm_port_config",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "tunterm_registered",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "tunterm_switch_config",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "versions",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "MxEdge"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/mxedges/{mxedge_id}",
      "method": "deleteSiteMxEdge",
      "httpMethod": "delete",
      "tag": "Sites MxEdges",
      "description": "deleteSiteMxEdge",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/mxedges/{mxedge_id}",
      "method": "getSiteMxEdge",
      "httpMethod": "get",
      "tag": "Sites MxEdges",
      "description": "getSiteMxEdge",
      "parameters": [],
      "responses": [
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/mxedges/{mxedge_id}",
      "method": "updateSiteMxEdge",
      "httpMethod": "put",
      "tag": "Sites MxEdges",
      "description": "updateSiteMxEdge",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "magic",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "model",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "mxagent_registered",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "mxcluster_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mxedge_mgmt",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "ntp_servers",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "oob_ip_config",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "proxy",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "services",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tunterm_dhcpd_config",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "tunterm_extra_routes",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "tunterm_igmp_snooping_config",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "tunterm_ip_config",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "tunterm_monitoring",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "tunterm_other_ip_configs",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "tunterm_port_config",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "tunterm_registered",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "tunterm_switch_config",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "versions",
          "schema": "object",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "MxEdge"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/mxedges/{mxedge_id}/support",
      "method": "uploadSiteMxEdgeSupportFiles",
      "httpMethod": "post",
      "tag": "Sites MxEdges",
      "description": "uploadSiteMxEdgeSupportFiles",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/mxtunnels/{mxtunnel_id}/preempt_aps",
      "method": "preemptSitesMxTunnel",
      "httpMethod": "post",
      "tag": "Sites MxTunnels",
      "description": "preemptSitesMxTunnel",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/otherdevices",
      "method": "listSiteOtherDevices",
      "httpMethod": "get",
      "tag": "Sites Devices Others",
      "description": "listSiteOtherDevices",
      "parameters": [
        {
          "name": "vendor",
          "schema": "string",
          "description": ""
        },
        {
          "name": "mac",
          "schema": "string",
          "description": ""
        },
        {
          "name": "serial",
          "schema": "string",
          "description": ""
        },
        {
          "name": "model",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/pcaps",
      "method": "listSitePacketCaptures",
      "httpMethod": "get",
      "tag": "Sites Pcaps",
      "description": "listSitePacketCaptures",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        },
        {
          "name": "client_mac",
          "schema": "string",
          "description": "optional client mac filter"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/pcaps/capture",
      "method": "stopSitePacketCapture",
      "httpMethod": "delete",
      "tag": "Sites Pcaps",
      "description": "stopSitePacketCapture",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/pcaps/capture",
      "method": "getSiteCapturingStatus",
      "httpMethod": "get",
      "tag": "Sites Pcaps",
      "description": "getSiteCapturingStatus",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/pcaps/capture",
      "method": "startSitePacketCapture",
      "httpMethod": "post",
      "tag": "Sites Pcaps",
      "description": "startSitePacketCapture",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/pcaps/{pcap_id}",
      "method": "updateSitePacketCapture",
      "httpMethod": "put",
      "tag": "Sites Pcaps",
      "description": "updateSitePacketCapture",
      "parameters": [
        {
          "name": "notes",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/psks",
      "method": "listSitePsks",
      "httpMethod": "get",
      "tag": "Sites Psks",
      "description": "listSitePsks",
      "parameters": [
        {
          "name": "ssid",
          "schema": "string",
          "description": ""
        },
        {
          "name": "role",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/psks",
      "method": "createSitePsk",
      "httpMethod": "post",
      "tag": "Sites Psks",
      "description": "createSitePsk",
      "parameters": [
        {
          "name": "admin_sso_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "expire_time",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "expiry_notification_time",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mac",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "max_usage",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "note",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "notify_expiry",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "notify_on_create_or_edit",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "old_passphrase",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "passphrase",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "role",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ssid",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "usage",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "vlan_id",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "PSK"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/psks",
      "method": "updateSitePsks",
      "httpMethod": "put",
      "tag": "Sites Psks",
      "description": "updateSitePsks",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/psks/import",
      "method": "importSitePsks",
      "httpMethod": "post",
      "tag": "Sites Psks",
      "description": "importSitePsks",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/psks/{psk_id}",
      "method": "deleteSitePsk",
      "httpMethod": "delete",
      "tag": "Sites Psks",
      "description": "deleteSitePsk",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/psks/{psk_id}",
      "method": "getSitePsk",
      "httpMethod": "get",
      "tag": "Sites Psks",
      "description": "getSitePsk",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "PSK"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/psks/{psk_id}",
      "method": "updateSitePsk",
      "httpMethod": "put",
      "tag": "Sites Psks",
      "description": "updateSitePsk",
      "parameters": [
        {
          "name": "admin_sso_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "email",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "expire_time",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "expiry_notification_time",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mac",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "max_usage",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "note",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "notify_expiry",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "notify_on_create_or_edit",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "old_passphrase",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "passphrase",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "role",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ssid",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "usage",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "vlan_id",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "PSK"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/rfdiags",
      "method": "getSiteSiteRfdiagRecording",
      "httpMethod": "get",
      "tag": "Sites Rfdiags",
      "description": "getSiteSiteRfdiagRecording",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/rfdiags",
      "method": "startSiteRecording",
      "httpMethod": "post",
      "tag": "Sites Rfdiags",
      "description": "startSiteRecording",
      "parameters": [
        {
          "name": "duration",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "mac",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sdkclient_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "RF Diag response"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/rfdiags/{rfdiag_id}",
      "method": "deleteSiteRfdiagRecording",
      "httpMethod": "delete",
      "tag": "Sites Rfdiags",
      "description": "deleteSiteRfdiagRecording",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/rfdiags/{rfdiag_id}",
      "method": "getSiteRfdiagRecording",
      "httpMethod": "get",
      "tag": "Sites Rfdiags",
      "description": "getSiteRfdiagRecording",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "RF Diag response"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/rfdiags/{rfdiag_id}",
      "method": "updateSiteRfdiagRecording",
      "httpMethod": "put",
      "tag": "Sites Rfdiags",
      "description": "updateSiteRfdiagRecording",
      "parameters": [
        {
          "name": "duration",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "mac",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "sdkclient_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "RF Diag response"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/rfdiags/{rfdiag_id}/download",
      "method": "downloadSiteRfdiagRecording",
      "httpMethod": "get",
      "tag": "Sites Rfdiags",
      "description": "downloadSiteRfdiagRecording",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "File"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/rfdiags/{rfdiag_id}/stop",
      "method": "stopSiteRfdiagRecording",
      "httpMethod": "post",
      "tag": "Sites Rfdiags",
      "description": "stopSiteRfdiagRecording",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/rogues/events/count",
      "method": "countSiteRogueEvents",
      "httpMethod": "get",
      "tag": "Sites Rogues",
      "description": "countSiteRogueEvents",
      "parameters": [
        {
          "name": "distinct",
          "schema": "string",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ssid",
          "schema": "string",
          "description": "ssid of the network detected as threat"
        },
        {
          "name": "bssid",
          "schema": "string",
          "description": "bssid of the network detected as threat"
        },
        {
          "name": "ap_mac",
          "schema": "string",
          "description": "mac of the device that had strongest signal strength for ssid/bssid pair"
        },
        {
          "name": "channel",
          "schema": "string",
          "description": "channel over which ap_mac heard ssid/bssid pair"
        },
        {
          "name": "seen_on_lan",
          "schema": "boolean",
          "description": "whether the reporting AP see a wireless client (on LAN) connecting to it  "
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/rogues/events/search",
      "method": "searchSiteRogueEvents",
      "httpMethod": "get",
      "tag": "Sites Rogues",
      "description": "searchSiteRogueEvents",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ssid",
          "schema": "string",
          "description": "ssid of the network detected as threat"
        },
        {
          "name": "bssid",
          "schema": "string",
          "description": "bssid of the network detected as threat"
        },
        {
          "name": "ap_mac",
          "schema": "string",
          "description": "mac of the device that had strongest signal strength for ssid/bssid pair"
        },
        {
          "name": "channel",
          "schema": "integer",
          "description": "channel over which ap_mac heard ssid/bssid pair"
        },
        {
          "name": "seen_on_lan",
          "schema": "boolean",
          "description": "whether the reporting AP see a wireless client (on LAN) connecting to it  "
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/rogues/{rogue_bssid}",
      "method": "getSiteRogueAp",
      "httpMethod": "get",
      "tag": "Sites Rogues",
      "description": "getSiteRogueAP",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/rogues/{rogue_bssid}/deauth_clients",
      "method": "deauthSiteClientsConnectedToARogue",
      "httpMethod": "post",
      "tag": "Sites Rogues",
      "description": "deauthSiteClientsConnectedToARogue",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/rrm/current",
      "method": "getSiteCurrentChannelPlanning",
      "httpMethod": "get",
      "tag": "Sites RRM",
      "description": "getSiteCurrentChannelPlanning",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "RRM"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/rrm/current/devices/{device_id}/band/{band}",
      "method": "getSiteCurrentRrmConsiderationsForAnApOnASpecificBand",
      "httpMethod": "get",
      "tag": "Sites RRM",
      "description": "getSiteCurrentRrmConsiderationsForAnApOnASpecificBand",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/rrm/events",
      "method": "getSiteRrmEvents",
      "httpMethod": "get",
      "tag": "Sites RRM",
      "description": "getSiteRrmEvents",
      "parameters": [
        {
          "name": "band",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/rrm/optimize",
      "method": "optimizeSiteRrm",
      "httpMethod": "post",
      "tag": "Sites RRM",
      "description": "optimizeSiteRrm",
      "parameters": [
        {
          "name": "bands",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "macs",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "txpower_only",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/rssizones",
      "method": "listSiteRssiZones",
      "httpMethod": "get",
      "tag": "Sites Rssizones",
      "description": "listSiteRssiZones",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/rssizones",
      "method": "createSiteRssiZone",
      "httpMethod": "post",
      "tag": "Sites Rssizones",
      "description": "createSiteRssiZone",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "devices",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "RSSI Zone"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/rssizones/{rssizone_id}",
      "method": "deleteSiteRssiZone",
      "httpMethod": "delete",
      "tag": "Sites Rssizones",
      "description": "deleteSiteRssiZone",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/rssizones/{rssizone_id}",
      "method": "getSiteRssiZone",
      "httpMethod": "get",
      "tag": "Sites Rssizones",
      "description": "getSiteRssiZone",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/rssizones/{rssizone_id}",
      "method": "updateSiteRssiZone",
      "httpMethod": "put",
      "tag": "Sites Rssizones",
      "description": "updateSiteRssiZone",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "devices",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "RSSI Zone"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/setting",
      "method": "getSiteSetting",
      "httpMethod": "get",
      "tag": "Sites Setting",
      "description": "getSiteSetting",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "Site Settings"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/setting",
      "method": "updateSiteSettings",
      "httpMethod": "put",
      "tag": "Sites Setting",
      "description": "updateSiteSettings",
      "parameters": [
        {
          "name": "additional_config_cmds",
          "schema": "array",
          "description": ""
        },
        {
          "name": "analytic",
          "schema": "object",
          "description": ""
        },
        {
          "name": "ap_matching",
          "schema": "object",
          "description": ""
        },
        {
          "name": "ap_port_config",
          "schema": "object",
          "description": ""
        },
        {
          "name": "auto_placement",
          "schema": "object",
          "description": ""
        },
        {
          "name": "auto_preemption",
          "schema": "object",
          "description": ""
        },
        {
          "name": "auto_upgrade",
          "schema": "object",
          "description": ""
        },
        {
          "name": "blacklist_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ble_config",
          "schema": "object",
          "description": ""
        },
        {
          "name": "config_auto_revert",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "created_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "device_updown_threshold",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "dns_servers",
          "schema": "array",
          "description": ""
        },
        {
          "name": "dns_suffix",
          "schema": "array",
          "description": ""
        },
        {
          "name": "enable_channel_144",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "engagement",
          "schema": "object",
          "description": ""
        },
        {
          "name": "evpn_options",
          "schema": "object",
          "description": ""
        },
        {
          "name": "flags",
          "schema": "object",
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "gateway_additional_config_cmds",
          "schema": "array",
          "description": ""
        },
        {
          "name": "gateway_mgmt",
          "schema": "object",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "led",
          "schema": "object",
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "mxedge",
          "schema": "object",
          "description": ""
        },
        {
          "name": "mxedge_mgmt",
          "schema": "object",
          "description": ""
        },
        {
          "name": "mxtunnels",
          "schema": "object",
          "description": ""
        },
        {
          "name": "networks",
          "schema": "object",
          "description": ""
        },
        {
          "name": "ntp_servers",
          "schema": "array",
          "description": ""
        },
        {
          "name": "occupancy",
          "schema": "object",
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ospf_areas",
          "schema": "object",
          "description": ""
        },
        {
          "name": "persist_config_on_device",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "port_mirroring",
          "schema": "object",
          "description": ""
        },
        {
          "name": "port_usages",
          "schema": "object",
          "description": ""
        },
        {
          "name": "proxy",
          "schema": "object",
          "description": ""
        },
        {
          "name": "radio_config",
          "schema": "object",
          "description": ""
        },
        {
          "name": "radius_config",
          "schema": "object",
          "description": ""
        },
        {
          "name": "remote_syslog",
          "schema": "object",
          "description": ""
        },
        {
          "name": "report_gatt",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "rogue",
          "schema": "object",
          "description": ""
        },
        {
          "name": "rtsa",
          "schema": "object",
          "description": ""
        },
        {
          "name": "simple_alert",
          "schema": "object",
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "skyatp",
          "schema": "object",
          "description": ""
        },
        {
          "name": "srx_app",
          "schema": "object",
          "description": ""
        },
        {
          "name": "ssh_keys",
          "schema": "array",
          "description": ""
        },
        {
          "name": "ssr",
          "schema": "object",
          "description": ""
        },
        {
          "name": "status_portal",
          "schema": "object",
          "description": ""
        },
        {
          "name": "switch_matching",
          "schema": "object",
          "description": ""
        },
        {
          "name": "switch_mgmt",
          "schema": "object",
          "description": ""
        },
        {
          "name": "track_anonymous_devices",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "tunterm_monitoring",
          "schema": "array",
          "description": ""
        },
        {
          "name": "tunterm_monitoring_disabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "vars",
          "schema": "object",
          "description": ""
        },
        {
          "name": "vna",
          "schema": "object",
          "description": ""
        },
        {
          "name": "vrf_instances",
          "schema": "object",
          "description": ""
        },
        {
          "name": "vrrp_groups",
          "schema": "object",
          "description": ""
        },
        {
          "name": "vs_instances",
          "schema": "object",
          "description": ""
        },
        {
          "name": "wan_vna",
          "schema": "object",
          "description": ""
        },
        {
          "name": "watched_station_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "whitelist_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "wids",
          "schema": "object",
          "description": ""
        },
        {
          "name": "wifi",
          "schema": "object",
          "description": ""
        },
        {
          "name": "wired_vna",
          "schema": "object",
          "description": ""
        },
        {
          "name": "zone_occupancy_alert",
          "schema": "object",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Site Settings"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/setting/blacklist",
      "method": "deleteSiteClientsBlocklist",
      "httpMethod": "delete",
      "tag": "Sites Setting",
      "description": "deleteSiteClientsBlocklist",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/setting/blacklist",
      "method": "createSiteClientsBlocklist",
      "httpMethod": "post",
      "tag": "Sites Setting",
      "description": "createSiteClientsBlocklist",
      "parameters": [
        {
          "name": "macs",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/setting/watched_station",
      "method": "deleteSiteWatchedStations",
      "httpMethod": "delete",
      "tag": "Sites Setting",
      "description": "deleteSiteWatchedStations",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/setting/watched_station",
      "method": "createSiteWatchedStations",
      "httpMethod": "post",
      "tag": "Sites Setting",
      "description": "createSiteWatchedStations",
      "parameters": [
        {
          "name": "macs",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/setting/whitelist",
      "method": "deleteSiteClientsAllowlist",
      "httpMethod": "delete",
      "tag": "Sites Setting",
      "description": "deleteSiteClientsAllowlist",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/setting/whitelist",
      "method": "createSiteClientsAllowlist",
      "httpMethod": "post",
      "tag": "Sites Setting",
      "description": "createSiteClientsAllowlist",
      "parameters": [
        {
          "name": "macs",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/skyatp/events/count",
      "method": "countSiteByDistringAttributesOfSkyatpEvents",
      "httpMethod": "get",
      "tag": "Sites Skyatp",
      "description": "countSiteByDistringAttributesOfSkyatpEvents",
      "parameters": [
        {
          "name": "distinct",
          "schema": "string",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": "event type, e.g. cc, fs, mw"
        },
        {
          "name": "mac",
          "schema": "string",
          "description": "client MAC"
        },
        {
          "name": "device_mac",
          "schema": "string",
          "description": "device MAC"
        },
        {
          "name": "threat_level",
          "schema": "integer",
          "description": "threat level"
        },
        {
          "name": "ip address",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/skyatp/events/search",
      "method": "searchSiteSkyatpEvents",
      "httpMethod": "get",
      "tag": "Sites Skyatp",
      "description": "searchSiteSkyatpEvents",
      "parameters": [
        {
          "name": "type",
          "schema": "string",
          "description": "event type, e.g. cc, fs, mw"
        },
        {
          "name": "mac",
          "schema": "string",
          "description": "client MAC"
        },
        {
          "name": "device_mac",
          "schema": "string",
          "description": "device MAC"
        },
        {
          "name": "threat_level",
          "schema": "integer",
          "description": "threat level"
        },
        {
          "name": "ip address",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metric/{metric}/classifier/{classifier}/summary",
      "method": "getSiteSleClassifierDetails",
      "httpMethod": "get",
      "tag": "Sites SLEs",
      "description": "getSiteSleClassifierDetails",
      "parameters": [
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metric/{metric}/classifiers",
      "method": "getSiteSleMetricClassifiers",
      "httpMethod": "get",
      "tag": "Sites SLEs",
      "description": "getSiteSleMetricClassifiers",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metric/{metric}/histogram",
      "method": "getSiteSleHistogram",
      "httpMethod": "get",
      "tag": "Sites SLEs",
      "description": "getSiteSleHistogram",
      "parameters": [
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metric/{metric}/impact-summary",
      "method": "getSiteSleImpactSummary",
      "httpMethod": "get",
      "tag": "Sites SLEs",
      "description": "getSiteSleImpactSummary",
      "parameters": [
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        },
        {
          "name": "fields",
          "schema": "string",
          "description": ""
        },
        {
          "name": "classifier",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metric/{metric}/impacted-applications",
      "method": "getSiteSleImpactedApplications",
      "httpMethod": "get",
      "tag": "Sites SLEs",
      "description": "getSiteSleImpactedApplications",
      "parameters": [
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        },
        {
          "name": "classifier",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metric/{metric}/impacted-aps",
      "method": "getSiteSleImpactedAps",
      "httpMethod": "get",
      "tag": "Sites SLEs",
      "description": "getSiteSleImpactedAps",
      "parameters": [
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        },
        {
          "name": "classifier",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metric/{metric}/impacted-chassis",
      "method": "getSiteSleImpactedChassis",
      "httpMethod": "get",
      "tag": "Sites SLEs",
      "description": "getSiteSleImpactedChassis",
      "parameters": [
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        },
        {
          "name": "classifier",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metric/{metric}/impacted-clients",
      "method": "getSiteSleImpactedWiredClients",
      "httpMethod": "get",
      "tag": "Sites SLEs",
      "description": "getSiteSleImpactedWiredClients",
      "parameters": [
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        },
        {
          "name": "classifier",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metric/{metric}/impacted-gateways",
      "method": "getSiteSleImpactedGateways",
      "httpMethod": "get",
      "tag": "Sites SLEs",
      "description": "getSiteSleImpactedGateways",
      "parameters": [
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        },
        {
          "name": "classifier",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metric/{metric}/impacted-interfaces",
      "method": "getSiteSleImpactedInterfaces",
      "httpMethod": "get",
      "tag": "Sites SLEs",
      "description": "getSiteSleImpactedInterfaces",
      "parameters": [
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        },
        {
          "name": "classifier",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metric/{metric}/impacted-switches",
      "method": "getSiteSleImpactedSwitches",
      "httpMethod": "get",
      "tag": "Sites SLEs",
      "description": "getSiteSleImpactedSwitches",
      "parameters": [
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        },
        {
          "name": "classifier",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metric/{metric}/impacted-users",
      "method": "getSiteSleImpactedWirelessClients",
      "httpMethod": "get",
      "tag": "Sites SLEs",
      "description": "getSiteSleImpactedWirelessClients",
      "parameters": [
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        },
        {
          "name": "classifier",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metric/{metric}/summary",
      "method": "getSiteSleSummary",
      "httpMethod": "get",
      "tag": "Sites SLEs",
      "description": "getSiteSleSummary",
      "parameters": [
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metric/{metric}/threshold",
      "method": "getSiteSleThreshold",
      "httpMethod": "get",
      "tag": "Sites SLEs",
      "description": "getSiteSleThreshold",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metric/{metric}/threshold",
      "method": "replaceSiteSleThreshold",
      "httpMethod": "post",
      "tag": "Sites SLEs",
      "description": "replaceSiteSleThreshold",
      "parameters": [
        {
          "name": "default",
          "schema": "number",
          "description": ""
        },
        {
          "name": "direction",
          "schema": "string",
          "description": ""
        },
        {
          "name": "maximum",
          "schema": "number",
          "description": ""
        },
        {
          "name": "metric",
          "schema": "string",
          "description": ""
        },
        {
          "name": "minimum",
          "schema": "number",
          "description": ""
        },
        {
          "name": "threshold",
          "schema": "string",
          "description": ""
        },
        {
          "name": "units",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metric/{metric}/threshold",
      "method": "updateSiteSleThreshold",
      "httpMethod": "put",
      "tag": "Sites SLEs",
      "description": "updateSiteSleThreshold",
      "parameters": [
        {
          "name": "default",
          "schema": "number",
          "description": ""
        },
        {
          "name": "direction",
          "schema": "string",
          "description": ""
        },
        {
          "name": "maximum",
          "schema": "number",
          "description": ""
        },
        {
          "name": "metric",
          "schema": "string",
          "description": ""
        },
        {
          "name": "minimum",
          "schema": "number",
          "description": ""
        },
        {
          "name": "threshold",
          "schema": "string",
          "description": ""
        },
        {
          "name": "units",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/sle/{scope}/{scope_id}/metrics",
      "method": "getSiteSlesMetrics",
      "httpMethod": "get",
      "tag": "Sites SLEs",
      "description": "getSiteSlesMetrics",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/ssr/upgrade/{upgrade_id}",
      "method": "getSiteSsrUpgrade",
      "httpMethod": "get",
      "tag": "Sites Devices Upgrades",
      "description": "getSiteSsrUpgrade",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/ssr/{device_id}/upgrade",
      "method": "upgradeSiteSsr",
      "httpMethod": "post",
      "tag": "Sites Devices Upgrades",
      "description": "upgradeSiteSsr",
      "parameters": [
        {
          "name": "channel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "reboot_at",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start_time",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "version",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/stats",
      "method": "getSiteStats",
      "httpMethod": "get",
      "tag": "Sites Stats",
      "description": "getSiteStats",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "Site statistics"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/stats/apps/count",
      "method": "countSiteApps",
      "httpMethod": "get",
      "tag": "Sites Applications",
      "description": "countSiteApps",
      "parameters": [
        {
          "name": "distinct",
          "schema": "string",
          "description": "Default for wireless devices is `ap`. Default for wired devices is `device_mac`"
        },
        {
          "name": "device_mac",
          "schema": "string",
          "description": "MAC of the device"
        },
        {
          "name": "app",
          "schema": "string",
          "description": "Application name"
        },
        {
          "name": "wired",
          "schema": "string",
          "description": "If a device is wired or wireless. Default is False."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/stats/assets",
      "method": "listSiteAssetsStats",
      "httpMethod": "get",
      "tag": "Sites Stats",
      "description": "listSiteAssetsStats",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/stats/assets/asset_id",
      "method": "getSiteAssetStats",
      "httpMethod": "get",
      "tag": "Sites Stats",
      "description": "getSiteAssetStats",
      "parameters": [
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Asset statistics"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/stats/assets/count",
      "method": "countSiteAssets",
      "httpMethod": "get",
      "tag": "Sites Assets",
      "description": "countSiteAssets",
      "parameters": [
        {
          "name": "distinct",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/stats/assets/search",
      "method": "searchSiteAssets",
      "httpMethod": "get",
      "tag": "Sites Assets",
      "description": "searchSiteAssets",
      "parameters": [
        {
          "name": "mac",
          "schema": "string",
          "description": ""
        },
        {
          "name": "map_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ibeacon_uuid",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ibeacon_major",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "ibeacon_minor",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "eddystone_uid_namespace",
          "schema": "string",
          "description": ""
        },
        {
          "name": "eddystone_uid_instance",
          "schema": "string",
          "description": ""
        },
        {
          "name": "eddystone_url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "device_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "by",
          "schema": "string",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "ap_mac",
          "schema": "string",
          "description": ""
        },
        {
          "name": "beam",
          "schema": "string",
          "description": ""
        },
        {
          "name": "rssi",
          "schema": "string",
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/stats/beacons",
      "method": "listSiteBeaconsStats",
      "httpMethod": "get",
      "tag": "Sites Stats",
      "description": "listSiteBeaconsStats",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/stats/bgp_peers/count",
      "method": "countSiteBgpStats",
      "httpMethod": "get",
      "tag": "Sites Devices Stats",
      "description": "countSiteBgpStats",
      "parameters": [
        {
          "name": "state",
          "schema": "string",
          "description": ""
        },
        {
          "name": "distinct",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/stats/bgp_peers/search",
      "method": "searchSiteBgpStats",
      "httpMethod": "get",
      "tag": "Sites Devices Stats",
      "description": "searchSiteBgpStats",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/stats/calls/count",
      "method": "countSiteCalls",
      "httpMethod": "get",
      "tag": "Sites Calls",
      "description": "countSiteCalls",
      "parameters": [
        {
          "name": "distrinct",
          "schema": "string",
          "description": ""
        },
        {
          "name": "app",
          "schema": "string",
          "description": ""
        },
        {
          "name": "start",
          "schema": "string",
          "description": ""
        },
        {
          "name": "end",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/stats/calls/search",
      "method": "searchSiteCalls",
      "httpMethod": "get",
      "tag": "Sites Calls",
      "description": "searchSiteCalls",
      "parameters": [
        {
          "name": "mac",
          "schema": "string",
          "description": "device identifier"
        },
        {
          "name": "app",
          "schema": "string",
          "description": "Third party app name"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/stats/clients",
      "method": "listSiteClientsStats",
      "httpMethod": "get",
      "tag": "Sites Stats",
      "description": "listSiteClientsStats",
      "parameters": [
        {
          "name": "wired",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/stats/clients/{client_mac}",
      "method": "getSiteClientStats",
      "httpMethod": "get",
      "tag": "Sites Stats",
      "description": "getSiteClientStats",
      "parameters": [
        {
          "name": "wired",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/stats/devices",
      "method": "listSiteDevicesStats",
      "httpMethod": "get",
      "tag": "Sites Devices Stats",
      "description": "listSiteDevicesStats",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "status",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/stats/devices/{device_id}",
      "method": "getSiteDeviceStats",
      "httpMethod": "get",
      "tag": "Sites Devices Stats",
      "description": "getSiteDeviceStats",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/stats/devices/{device_id}/clients",
      "method": "getSiteAllClientsStatsByDevice",
      "httpMethod": "get",
      "tag": "Sites Devices Stats",
      "description": "getSiteAllClientsStatsByDevice",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/stats/discovered_assets",
      "method": "listSiteDiscoveredAssets",
      "httpMethod": "get",
      "tag": "Sites Stats",
      "description": "listSiteDiscoveredAssets",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/stats/discovered_switch_metrics/search",
      "method": "searchSiteDiscoveredSwitchesMetrics",
      "httpMethod": "get",
      "tag": "Sites Stats",
      "description": "searchSiteDiscoveredSwitchesMetrics",
      "parameters": [
        {
          "name": "scope",
          "schema": "string",
          "description": "metric scope, optional"
        },
        {
          "name": "type",
          "schema": "string",
          "description": "metric type, inactive_wired_vlans/switch_ap_affinity/poe_compliance/version_compliance, optional"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/stats/discovered_switches/count",
      "method": "countSiteDiscoveredSwitches",
      "httpMethod": "get",
      "tag": "Sites Stats",
      "description": "countSiteDiscoveredSwitches",
      "parameters": [
        {
          "name": "distinct",
          "schema": "string",
          "description": ""
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/stats/discovered_switches/metrics",
      "method": "getSiteDiscoveredSwitchesMetrics",
      "httpMethod": "get",
      "tag": "Sites Stats",
      "description": "getSiteDiscoveredSwitchesMetrics",
      "parameters": [
        {
          "name": "threshold",
          "schema": "string",
          "description": "configurable # ap per switch threshold, default 12"
        },
        {
          "name": "system_name",
          "schema": "string",
          "description": "system name for switch level metrics, optional"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/stats/discovered_switches/search",
      "method": "searchSiteDiscoveredSwitches",
      "httpMethod": "get",
      "tag": "Sites Stats",
      "description": "searchSiteDiscoveredSwitches",
      "parameters": [
        {
          "name": "adopted",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "system_name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "hostname",
          "schema": "string",
          "description": ""
        },
        {
          "name": "vendor",
          "schema": "string",
          "description": ""
        },
        {
          "name": "model",
          "schema": "string",
          "description": ""
        },
        {
          "name": "version",
          "schema": "string",
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/stats/filtered_assets",
      "method": "getSiteAssetsOfInterest",
      "httpMethod": "get",
      "tag": "Sites Assets",
      "description": "getSiteAssetsOfInterest",
      "parameters": [
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/stats/gateways/metrics",
      "method": "getSiteGatewayMetrics",
      "httpMethod": "get",
      "tag": "Sites Stats",
      "description": "getSiteGatewayMetrics",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/stats/maps/{map_id}/clients",
      "method": "getSiteClientsStatsByMap",
      "httpMethod": "get",
      "tag": "Sites Stats",
      "description": "getSiteClientsStatsByMap",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/stats/maps/{map_id}/discovered_assets",
      "method": "getSiteDiscoveredAssetByMap",
      "httpMethod": "get",
      "tag": "Sites Stats",
      "description": "getSiteDiscoveredAssetByMap",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/stats/maps/{map_id}/sdkclients",
      "method": "getSiteSdkStatsByMap",
      "httpMethod": "get",
      "tag": "Sites Stats",
      "description": "getSiteSdkStatsByMap",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/stats/maps/{map_id}/unconnected_clients",
      "method": "listSiteUnconnectedClientStats",
      "httpMethod": "get",
      "tag": "Sites Stats",
      "description": "listSiteUnconnectedClientStats",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/stats/mxedges",
      "method": "listSiteMxEdgesStats",
      "httpMethod": "get",
      "tag": "Sites Devices Stats",
      "description": "listSiteMxEdgesStats",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/stats/mxedges/{mxedge_id}",
      "method": "getSiteMxEdgeStats",
      "httpMethod": "get",
      "tag": "Sites Devices Stats",
      "description": "getSiteMxEdgeStats",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/stats/ports/count",
      "method": "countSiteByDisctinctAttributesOPorts",
      "httpMethod": "get",
      "tag": "Sites Devices Stats",
      "description": "countSiteByDisctinctAttributesOfSwitchPorts",
      "parameters": [
        {
          "name": "distinct",
          "schema": "string",
          "description": "port_id, port_mac, full_duplex, mac, neighbor_macneighbor_port_desc, neighbor_system_name, poe_disabled, poe_mode, poe_on, speed, up"
        },
        {
          "name": "full_duplex",
          "schema": "boolean",
          "description": "indicates full or half duplex"
        },
        {
          "name": "mac",
          "schema": "string",
          "description": "device identifier"
        },
        {
          "name": "neighbor_mac",
          "schema": "string",
          "description": "Chassis identifier of the chassis type listed"
        },
        {
          "name": "neighbor_port_desc",
          "schema": "string",
          "description": "Description supplied by the system on the interface E.g. “GigabitEthernet2/0/39”"
        },
        {
          "name": "neighbor_system_name",
          "schema": "string",
          "description": "Name supplied by the system on the interface E.g. neighbor system name E.g. “Kumar-Acc-SW.mist.local”"
        },
        {
          "name": "poe_disabled",
          "schema": "boolean",
          "description": "is the POE configured not be disabled."
        },
        {
          "name": "poe_mode",
          "schema": "string",
          "description": "poe mode depending on class E.g. “802.3at”"
        },
        {
          "name": "poe_on",
          "schema": "boolean",
          "description": "is the device attached to POE"
        },
        {
          "name": "port_id",
          "schema": "string",
          "description": "interface name"
        },
        {
          "name": "port_mac",
          "schema": "string",
          "description": "interface mac address"
        },
        {
          "name": "power_draw",
          "schema": "number",
          "description": "Amount of power being used by the interface at the time the command is executed. Unit in watts."
        },
        {
          "name": "tx_pkts",
          "schema": "integer",
          "description": "Output packets"
        },
        {
          "name": "rx_pkts",
          "schema": "integer",
          "description": "Input packets"
        },
        {
          "name": "rx_bytes",
          "schema": "integer",
          "description": "Input bytes"
        },
        {
          "name": "tx_bps",
          "schema": "integer",
          "description": "Output rate"
        },
        {
          "name": "rx_bps",
          "schema": "integer",
          "description": "Input rate"
        },
        {
          "name": "tx_mcast_pkts",
          "schema": "integer",
          "description": "Multicast output packets"
        },
        {
          "name": "tx_bcast_pkts",
          "schema": "integer",
          "description": "Broadcast output packets"
        },
        {
          "name": "rx_mcast_pkts",
          "schema": "integer",
          "description": "Multicast input packets"
        },
        {
          "name": "rx_bcast_pkts",
          "schema": "integer",
          "description": "Broadcast input packets"
        },
        {
          "name": "speed",
          "schema": "integer",
          "description": "port speed"
        },
        {
          "name": "stp_state",
          "schema": "string",
          "description": "if `up`==`true`"
        },
        {
          "name": "stp_role",
          "schema": "string",
          "description": "if `up`==`true`"
        },
        {
          "name": "auth_state",
          "schema": "string",
          "description": "if `up`==`true` && has Authenticator role"
        },
        {
          "name": "up",
          "schema": "boolean",
          "description": "indicates if interface is up"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/stats/ports/search",
      "method": "searchSiteSwOrGwPorts",
      "httpMethod": "get",
      "tag": "Sites Devices Stats",
      "description": "searchSiteSwOrGwPorts",
      "parameters": [
        {
          "name": "full_duplex",
          "schema": "boolean",
          "description": "indicates full or half duplex"
        },
        {
          "name": "mac",
          "schema": "string",
          "description": "device identifier"
        },
        {
          "name": "neighbor_mac",
          "schema": "string",
          "description": "Chassis identifier of the chassis type listed"
        },
        {
          "name": "neighbor_port_desc",
          "schema": "string",
          "description": "Description supplied by the system on the interface E.g. “GigabitEthernet2/0/39”"
        },
        {
          "name": "neighbor_system_name",
          "schema": "string",
          "description": "Name supplied by the system on the interface E.g. neighbor system name E.g. “Kumar-Acc-SW.mist.local”"
        },
        {
          "name": "poe_disabled",
          "schema": "boolean",
          "description": "is the POE configured not be disabled."
        },
        {
          "name": "poe_mode",
          "schema": "string",
          "description": "poe mode depending on class E.g. “802.3at”"
        },
        {
          "name": "poe_on",
          "schema": "boolean",
          "description": "is the device attached to POE"
        },
        {
          "name": "port_id",
          "schema": "string",
          "description": "interface name"
        },
        {
          "name": "port_mac",
          "schema": "string",
          "description": "interface mac address"
        },
        {
          "name": "power_draw",
          "schema": "number",
          "description": "Amount of power being used by the interface at the time the command is executed. Unit in watts."
        },
        {
          "name": "tx_pkts",
          "schema": "integer",
          "description": "Output packets"
        },
        {
          "name": "rx_pkts",
          "schema": "integer",
          "description": "Input packets"
        },
        {
          "name": "rx_bytes",
          "schema": "integer",
          "description": "Input bytes"
        },
        {
          "name": "tx_bps",
          "schema": "integer",
          "description": "Output rate"
        },
        {
          "name": "rx_bps",
          "schema": "integer",
          "description": "Input rate"
        },
        {
          "name": "tx_errors",
          "schema": "integer",
          "description": "Output errors"
        },
        {
          "name": "rx_errors",
          "schema": "integer",
          "description": "Input errors"
        },
        {
          "name": "tx_mcast_pkts",
          "schema": "integer",
          "description": "Multicast output packets"
        },
        {
          "name": "tx_bcast_pkts",
          "schema": "integer",
          "description": "Broadcast output packets"
        },
        {
          "name": "rx_mcast_pkts",
          "schema": "integer",
          "description": "Multicast input packets"
        },
        {
          "name": "rx_bcast_pkts",
          "schema": "integer",
          "description": "Broadcast input packets"
        },
        {
          "name": "speed",
          "schema": "integer",
          "description": "port speed"
        },
        {
          "name": "mac_limit",
          "schema": "integer",
          "description": "Limit on number of dynamically learned macs"
        },
        {
          "name": "mac_count",
          "schema": "integer",
          "description": "Number of mac addresses in the forwarding table"
        },
        {
          "name": "up",
          "schema": "boolean",
          "description": "indicates if interface is up"
        },
        {
          "name": "stp_state",
          "schema": "string",
          "description": "if `up`==`true`"
        },
        {
          "name": "stp_role",
          "schema": "string",
          "description": "if `up`==`true`"
        },
        {
          "name": "xcvr_part_number",
          "schema": "string",
          "description": "Optic Slot Partnumber, Check for null/empty"
        },
        {
          "name": "auth_state",
          "schema": "string",
          "description": "if `up`==`true` && has Authenticator role"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/stats/sdkclients/{sdkclient_id}",
      "method": "getSiteSdkStats",
      "httpMethod": "get",
      "tag": "Sites Stats",
      "description": "getSiteSdkStats",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "SDK Client Details statistics"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/stats/switch_ports/count",
      "method": "countSiteByDisctinctAttributesOfSwitchPorts",
      "httpMethod": "get",
      "tag": "Sites Devices Stats",
      "description": "countSiteByDisctinctAttributesOfSwitchPorts",
      "parameters": [
        {
          "name": "distinct",
          "schema": "string",
          "description": "port_id, port_mac, full_duplex, mac, neighbor_macneighbor_port_desc, neighbor_system_name, poe_disabled, poe_mode, poe_on, speed, up"
        },
        {
          "name": "full_duplex",
          "schema": "boolean",
          "description": "indicates full or half duplex"
        },
        {
          "name": "mac",
          "schema": "string",
          "description": "device identifier"
        },
        {
          "name": "neighbor_mac",
          "schema": "string",
          "description": "Chassis identifier of the chassis type listed"
        },
        {
          "name": "neighbor_port_desc",
          "schema": "string",
          "description": "Description supplied by the system on the interface E.g. “GigabitEthernet2/0/39”"
        },
        {
          "name": "neighbor_system_name",
          "schema": "string",
          "description": "Name supplied by the system on the interface E.g. neighbor system name E.g. “Kumar-Acc-SW.mist.local”"
        },
        {
          "name": "poe_disabled",
          "schema": "boolean",
          "description": "is the POE configured not be disabled."
        },
        {
          "name": "poe_mode",
          "schema": "string",
          "description": "poe mode depending on class E.g. “802.3at”"
        },
        {
          "name": "poe_on",
          "schema": "boolean",
          "description": "is the device attached to POE"
        },
        {
          "name": "port_id",
          "schema": "string",
          "description": "interface name"
        },
        {
          "name": "port_mac",
          "schema": "string",
          "description": "interface mac address"
        },
        {
          "name": "power_draw",
          "schema": "number",
          "description": "Amount of power being used by the interface at the time the command is executed. Unit in watts."
        },
        {
          "name": "tx_pkts",
          "schema": "integer",
          "description": "Output packets"
        },
        {
          "name": "rx_pkts",
          "schema": "integer",
          "description": "Input packets"
        },
        {
          "name": "rx_bytes",
          "schema": "integer",
          "description": "Input bytes"
        },
        {
          "name": "tx_bps",
          "schema": "integer",
          "description": "Output rate"
        },
        {
          "name": "rx_bps",
          "schema": "integer",
          "description": "Input rate"
        },
        {
          "name": "tx_mcast_pkts",
          "schema": "integer",
          "description": "Multicast output packets"
        },
        {
          "name": "tx_bcast_pkts",
          "schema": "integer",
          "description": "Broadcast output packets"
        },
        {
          "name": "rx_mcast_pkts",
          "schema": "integer",
          "description": "Multicast input packets"
        },
        {
          "name": "rx_bcast_pkts",
          "schema": "integer",
          "description": "Broadcast input packets"
        },
        {
          "name": "speed",
          "schema": "integer",
          "description": "port speed"
        },
        {
          "name": "stp_state",
          "schema": "string",
          "description": "if `up`==`true`"
        },
        {
          "name": "stp_role",
          "schema": "string",
          "description": "if `up`==`true`"
        },
        {
          "name": "auth_state",
          "schema": "string",
          "description": "if `up`==`true`"
        },
        {
          "name": "up",
          "schema": "boolean",
          "description": "indicates if interface is up"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/stats/switch_ports/search",
      "method": "searchSiteSwitchPorts",
      "httpMethod": "get",
      "tag": "Sites Devices Stats",
      "description": "searchSiteSwitchPorts",
      "parameters": [
        {
          "name": "full_duplex",
          "schema": "boolean",
          "description": "indicates full or half duplex"
        },
        {
          "name": "mac",
          "schema": "string",
          "description": "device identifier"
        },
        {
          "name": "neighbor_mac",
          "schema": "string",
          "description": "Chassis identifier of the chassis type listed"
        },
        {
          "name": "neighbor_port_desc",
          "schema": "string",
          "description": "Description supplied by the system on the interface E.g. “GigabitEthernet2/0/39”"
        },
        {
          "name": "neighbor_system_name",
          "schema": "string",
          "description": "Name supplied by the system on the interface E.g. neighbor system name E.g. “Kumar-Acc-SW.mist.local”"
        },
        {
          "name": "poe_disabled",
          "schema": "boolean",
          "description": "is the POE configured not be disabled."
        },
        {
          "name": "poe_mode",
          "schema": "string",
          "description": "poe mode depending on class E.g. “802.3at”"
        },
        {
          "name": "poe_on",
          "schema": "boolean",
          "description": "is the device attached to POE"
        },
        {
          "name": "port_id",
          "schema": "string",
          "description": "interface name"
        },
        {
          "name": "port_mac",
          "schema": "string",
          "description": "interface mac address"
        },
        {
          "name": "power_draw",
          "schema": "number",
          "description": "Amount of power being used by the interface at the time the command is executed. Unit in watts."
        },
        {
          "name": "tx_pkts",
          "schema": "integer",
          "description": "Output packets"
        },
        {
          "name": "rx_pkts",
          "schema": "integer",
          "description": "Input packets"
        },
        {
          "name": "rx_bytes",
          "schema": "integer",
          "description": "Input bytes"
        },
        {
          "name": "tx_bps",
          "schema": "integer",
          "description": "Output rate"
        },
        {
          "name": "rx_bps",
          "schema": "integer",
          "description": "Input rate"
        },
        {
          "name": "tx_mcast_pkts",
          "schema": "integer",
          "description": "Multicast output packets"
        },
        {
          "name": "tx_bcast_pkts",
          "schema": "integer",
          "description": "Broadcast output packets"
        },
        {
          "name": "rx_mcast_pkts",
          "schema": "integer",
          "description": "Multicast input packets"
        },
        {
          "name": "rx_bcast_pkts",
          "schema": "integer",
          "description": "Broadcast input packets"
        },
        {
          "name": "speed",
          "schema": "integer",
          "description": "port speed"
        },
        {
          "name": "stp_state",
          "schema": "string",
          "description": "if `up`==`true`"
        },
        {
          "name": "stp_role",
          "schema": "string",
          "description": "if `up`==`true`"
        },
        {
          "name": "auth_state",
          "schema": "string",
          "description": "if `up`==`true` && has Authenticator role"
        },
        {
          "name": "up",
          "schema": "boolean",
          "description": "indicates if interface is up"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/stats/switch_wired_clients/{device_id}/search",
      "method": "getSiteWiredClientAndParentInterface",
      "httpMethod": "get",
      "tag": "Sites Wired Clients",
      "description": "getSiteWiredClientAndParentInterface",
      "parameters": [
        {
          "name": "port_id",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/stats/switches/metrics",
      "method": "getSiteAdoptedSwitchesComplianceMetrics",
      "httpMethod": "get",
      "tag": "Sites Devices Switches",
      "description": "getSiteAdoptedSwitchesComplianceMetrics",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/stats/wxrules",
      "method": "getSiteWxRulesUsage",
      "httpMethod": "get",
      "tag": "Sites Stats",
      "description": "getSiteWxRulesUsage",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/stats/zones",
      "method": "listSiteZonesStats",
      "httpMethod": "get",
      "tag": "Sites Stats",
      "description": "listSiteZonesStats",
      "parameters": [
        {
          "name": "map_id",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/stats/{zone_type}/{zone_id}",
      "method": "getSiteZoneStats",
      "httpMethod": "get",
      "tag": "Sites Stats",
      "description": "getSiteZoneStats",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "Zone details statistics"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/subscriptions",
      "method": "unsubscribeSite",
      "httpMethod": "delete",
      "tag": "Sites Subscriptions",
      "description": "UnsubscribeSite",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/subscriptions",
      "method": "subscribeSite",
      "httpMethod": "post",
      "tag": "Sites Subscriptions",
      "description": "SubscribeSite",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/synthetic_test",
      "method": "getSiteSyntheticTestStatus",
      "httpMethod": "get",
      "tag": "Sites Synthetic Tests",
      "description": "getSiteSyntheticTestStatus",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/synthetic_test",
      "method": "triggerSiteSyntheticTest",
      "httpMethod": "post",
      "tag": "Sites Synthetic Tests",
      "description": "triggerSiteSyntheticTest",
      "parameters": [
        {
          "name": "email",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/uisettings",
      "method": "getSiteCurdSettings",
      "httpMethod": "get",
      "tag": "Sites UI Settings",
      "description": "getSiteCurdSettings",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/uisettings",
      "method": "createSiteCurdSettings",
      "httpMethod": "post",
      "tag": "Sites UI Settings",
      "description": "createSiteCurdSettings",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "required": true,
          "description": ""
        },
        {
          "name": "defaultScopeId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "defaultScopeType",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "defaultTimeRange",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "isCustomDataboard",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "isScopeLinked",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "isTimeRangeLinked",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "purpose",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "tiles",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "CURD UI Settings"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/uisettings/derived",
      "method": "getSiteDerivedCurdSetting",
      "httpMethod": "get",
      "tag": "Sites UI Settings",
      "description": "getSiteDerivedCurdSetting",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "CURD UI Settings"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/uisettings/{uisetting_id}",
      "method": "deleteSiteCurdSetting",
      "httpMethod": "delete",
      "tag": "Sites UI Settings",
      "description": "deleteSiteCurdSetting",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/uisettings/{uisetting_id}",
      "method": "getSiteCurdSetting",
      "httpMethod": "get",
      "tag": "Sites UI Settings",
      "description": "getSiteCurdSetting",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "CURD UI Settings"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/uisettings/{uisetting_id}",
      "method": "updateSiteCurdSetting",
      "httpMethod": "post",
      "tag": "Sites UI Settings",
      "description": "updateSiteCurdSetting",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "required": true,
          "description": ""
        },
        {
          "name": "defaultScopeId",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "defaultScopeType",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "defaultTimeRange",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "description",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "required": true,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "isCustomDataboard",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "isScopeLinked",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "isTimeRangeLinked",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": true,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "purpose",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "tiles",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "CURD UI Settings"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/vbeacons",
      "method": "listSiteVBeacons",
      "httpMethod": "get",
      "tag": "Sites vBeacons",
      "description": "listSiteVBeacons",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/vbeacons",
      "method": "createSiteVBeacon",
      "httpMethod": "post",
      "tag": "Sites vBeacons",
      "description": "createSiteVBeacon",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "major",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "map_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "message",
          "schema": "string",
          "description": ""
        },
        {
          "name": "minor",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "power",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "power_mode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "uuid",
          "schema": "string",
          "description": ""
        },
        {
          "name": "wayfinding_nodename",
          "schema": "string",
          "description": ""
        },
        {
          "name": "x",
          "schema": "number",
          "description": ""
        },
        {
          "name": "y",
          "schema": "number",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "vBeacon"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/vbeacons/{vbeacon_id}",
      "method": "deleteSiteVBeacon",
      "httpMethod": "delete",
      "tag": "Sites vBeacons",
      "description": "deleteSiteVBeacon",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/vbeacons/{vbeacon_id}",
      "method": "getSiteVBeacon",
      "httpMethod": "get",
      "tag": "Sites vBeacons",
      "description": "getSiteVBeacon",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "vBeacon"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/vbeacons/{vbeacon_id}",
      "method": "updateSiteVBeacon",
      "httpMethod": "put",
      "tag": "Sites vBeacons",
      "description": "updateSiteVBeacon",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "major",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "map_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "message",
          "schema": "string",
          "description": ""
        },
        {
          "name": "minor",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "power",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "power_mode",
          "schema": "string",
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "uuid",
          "schema": "string",
          "description": ""
        },
        {
          "name": "wayfinding_nodename",
          "schema": "string",
          "description": ""
        },
        {
          "name": "x",
          "schema": "number",
          "description": ""
        },
        {
          "name": "y",
          "schema": "number",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "vBeacon"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/webhooks",
      "method": "listSiteWebhooks",
      "httpMethod": "get",
      "tag": "Sites Webhooks",
      "description": "listSiteWebhooks",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/webhooks",
      "method": "createSiteWebhook",
      "httpMethod": "post",
      "tag": "Sites Webhooks",
      "description": "createSiteWebhook",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "headers",
          "schema": "object",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "secret",
          "schema": "string",
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "splunk_token",
          "schema": "string",
          "description": ""
        },
        {
          "name": "topics",
          "schema": "array",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "verify_cert",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/webhooks/{webhook_id}",
      "method": "deleteSiteWebhook",
      "httpMethod": "delete",
      "tag": "Sites Webhooks",
      "description": "deleteSiteWebhook",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/webhooks/{webhook_id}",
      "method": "getSiteWebhook",
      "httpMethod": "get",
      "tag": "Sites Webhooks",
      "description": "getSiteWebhook",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/webhooks/{webhook_id}",
      "method": "updateSiteWebhook",
      "httpMethod": "put",
      "tag": "Sites Webhooks",
      "description": "updateSiteWebhook",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "enabled",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "description": ""
        },
        {
          "name": "headers",
          "schema": "object",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "secret",
          "schema": "string",
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "description": ""
        },
        {
          "name": "splunk_token",
          "schema": "string",
          "description": ""
        },
        {
          "name": "topics",
          "schema": "array",
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "description": ""
        },
        {
          "name": "url",
          "schema": "string",
          "description": ""
        },
        {
          "name": "verify_cert",
          "schema": "boolean",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/webhooks/{webhook_id}/ping",
      "method": "pingSiteWebhook",
      "httpMethod": "post",
      "tag": "Sites Webhooks",
      "description": "pingSiteWebhook",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/wired_clients/count",
      "method": "countSiteClientsWired",
      "httpMethod": "get",
      "tag": "Sites Wired Clients",
      "description": "countSiteClientsWired",
      "parameters": [
        {
          "name": "distinct",
          "schema": "string",
          "description": ""
        },
        {
          "name": "mac",
          "schema": "string",
          "description": "client mac"
        },
        {
          "name": "device_mac",
          "schema": "string",
          "description": "device mac"
        },
        {
          "name": "port_id",
          "schema": "string",
          "description": "port id"
        },
        {
          "name": "vlan",
          "schema": "string",
          "description": "vlan"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/wired_clients/search",
      "method": "searchSiteClientsWired",
      "httpMethod": "get",
      "tag": "Sites Wired Clients",
      "description": "searchSiteClientsWired",
      "parameters": [
        {
          "name": "device_mac",
          "schema": "string",
          "description": "device mac"
        },
        {
          "name": "mac",
          "schema": "string",
          "description": "client mac"
        },
        {
          "name": "port_id",
          "schema": "string",
          "description": "port id"
        },
        {
          "name": "vlan",
          "schema": "string",
          "description": "vlan"
        },
        {
          "name": "ip address",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "manufacture",
          "schema": "string",
          "description": "manufacture"
        },
        {
          "name": "text",
          "schema": "string",
          "description": "single entry of hostname/mac"
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/wlans",
      "method": "listSiteWlans",
      "httpMethod": "get",
      "tag": "Sites Wlans",
      "description": "listSiteWlans",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/wlans",
      "method": "createSiteWlan",
      "httpMethod": "post",
      "tag": "Sites Wlans",
      "description": "createSiteWlan",
      "parameters": [
        {
          "name": "acct_interim_interval",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "acct_servers",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "airwatch",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "allow_ipv6_ndp",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "allow_mdns",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "allow_ssdp",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "ap_ids",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "app_limit",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "app_qos",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "apply_to",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "arp_filter",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "auth",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "auth_server_selection",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "auth_servers",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "auth_servers_nas_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "auth_servers_nas_ip",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "auth_servers_retries",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "auth_servers_timeout",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "band",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "band_steer",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "band_steer_force_band5",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "bands",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "block_blacklist_clients",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "bonjour",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "cisco_cwa",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "client_limit_down",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "client_limit_down_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "client_limit_up",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "client_limit_up_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "coa_servers",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "disable_11ax",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "disable_ht_vht_rates",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "disable_uapsd",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "disable_v1_roam_notify",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "disable_v2_roam_notify",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "disable_wmm",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "dns_server_rewrite",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "dtim",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "dynamic_psk",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "dynamic_vlan",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "enable_local_keycaching",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "enable_wireless_bridging",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "hide_ssid",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "hostname_ie",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "hotspot20",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "interface",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "isolation",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "l2_isolation",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "legacy_overds",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "limit_bcast",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "limit_probe_response",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "max_idletime",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "mist_nac",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "msp_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mxtunnel",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "mxtunnel_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mxtunnel_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "no_static_dns",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "no_static_ip",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "portal",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "portal_allowed_hostnames",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "portal_allowed_subnets",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "portal_api_secret",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "portal_denied_hostnames",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "portal_image",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "portal_sso_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "portal_template_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "qos",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "radsec",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "rateset",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "roam_mode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "schedule",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sle_excluded",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "ssid",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "template_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "thumbnail",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "use_eapol_v1",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "vlan_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "vlan_id",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "vlan_ids",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "vlan_pooling",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "wlan_limit_down",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "wlan_limit_down_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "wlan_limit_up",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "wlan_limit_up_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "wxtag_ids",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "wxtunnel_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "wxtunnel_remote_id",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "WLAN\n\n**Note**: portal_template will be forked out of wlan objects soon. To fetch portal_template, please query portal_template_url. To update portal_template, use Wlan Portal Template."
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/wlans/derived",
      "method": "getSiteWlanDerived",
      "httpMethod": "get",
      "tag": "Sites Wlans",
      "description": "getSiteWlanDerived",
      "parameters": [
        {
          "name": "resolve",
          "schema": "boolean",
          "description": "whether to resolve SITE_VARS"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/wlans/{wlan_id}",
      "method": "deleteSiteWlan",
      "httpMethod": "delete",
      "tag": "Sites Wlans",
      "description": "deleteSiteWlan",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/wlans/{wlan_id}",
      "method": "getSiteWlan",
      "httpMethod": "get",
      "tag": "Sites Wlans",
      "description": "getSiteWlan",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "WLAN\n\n**Note**: portal_template will be forked out of wlan objects soon. To fetch portal_template, please query portal_template_url. To update portal_template, use Wlan Portal Template."
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/wlans/{wlan_id}",
      "method": "updateSiteWlan",
      "httpMethod": "put",
      "tag": "Sites Wlans",
      "description": "updateSiteWlan",
      "parameters": [
        {
          "name": "acct_interim_interval",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "acct_servers",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "airwatch",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "allow_ipv6_ndp",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "allow_mdns",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "allow_ssdp",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "ap_ids",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "app_limit",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "app_qos",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "apply_to",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "arp_filter",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "auth",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "auth_server_selection",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "auth_servers",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "auth_servers_nas_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "auth_servers_nas_ip",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "auth_servers_retries",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "auth_servers_timeout",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "band",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "band_steer",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "band_steer_force_band5",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "bands",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "block_blacklist_clients",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "bonjour",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "cisco_cwa",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "client_limit_down",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "client_limit_down_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "client_limit_up",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "client_limit_up_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "coa_servers",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "disable_11ax",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "disable_ht_vht_rates",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "disable_uapsd",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "disable_v1_roam_notify",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "disable_v2_roam_notify",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "disable_wmm",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "dns_server_rewrite",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "dtim",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "dynamic_psk",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "dynamic_vlan",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "enable_local_keycaching",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "enable_wireless_bridging",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "hide_ssid",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "hostname_ie",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "hotspot20",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "interface",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "isolation",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "l2_isolation",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "legacy_overds",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "limit_bcast",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "limit_probe_response",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "max_idletime",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "mist_nac",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "msp_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mxtunnel",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "mxtunnel_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "mxtunnel_name",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "no_static_dns",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "no_static_ip",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "portal",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "portal_allowed_hostnames",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "portal_allowed_subnets",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "portal_api_secret",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "portal_denied_hostnames",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "portal_image",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "portal_sso_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "portal_template_url",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "qos",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "radsec",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "rateset",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "roam_mode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "schedule",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sle_excluded",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "ssid",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "template_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "thumbnail",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "use_eapol_v1",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "vlan_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "vlan_id",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "vlan_ids",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "vlan_pooling",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "wlan_limit_down",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "wlan_limit_down_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "wlan_limit_up",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "wlan_limit_up_enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "wxtag_ids",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "wxtunnel_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "wxtunnel_remote_id",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "WLAN\n\n**Note**: portal_template will be forked out of wlan objects soon. To fetch portal_template, please query portal_template_url. To update portal_template, use Wlan Portal Template."
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/wlans/{wlan_id}/portal_image",
      "method": "uploadSiteWlanPortalImage",
      "httpMethod": "post",
      "tag": "Sites Wlans",
      "description": "uploadSiteWlanPortalImage",
      "parameters": [
        {
          "name": "file",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "json",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/wlans/{wlan_id}/portal_template",
      "method": "updateSiteWlanPortalTemplate",
      "httpMethod": "put",
      "tag": "Sites Wlans",
      "description": "updateSiteWlanPortalTemplate",
      "parameters": [
        {
          "name": "accessCodeAlternateEmail",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "alignment",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "authButtonAmazon",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "authButtonAzure",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "authButtonEmail",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "authButtonFacebook",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "authButtonGoogle",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "authButtonMicrosoft",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "authButtonPassphrase",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "authButtonSms",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "authButtonSponsor",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "authLabel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "backLink",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "color",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "colorDark",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "colorLight",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "company",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "companyError",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "companyLabel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "email",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "emailAccessDomainError",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "emailCancel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "emailCodeCancel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "emailCodeError",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "emailCodeFieldLabel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "emailCodeMessage",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "emailCodeSubmit",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "emailCodeTitle",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "emailError",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "emailFieldLabel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "emailLabel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "emailMessage",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "emailSubmit",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "emailTitle",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "field1",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "field1Error",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "field1Label",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "field1Required",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "field2",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "field2Error",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "field2Label",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "field2Required",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "field3",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "field3Error",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "field3Label",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "field3Required",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "field4",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "field4Error",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "field4Label",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "field4Required",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "message",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "nameError",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "nameLabel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "optout",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "optoutLabel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "pageTitle",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "passphraseCancel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "passphraseError",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "passphraseLabel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "passphraseMessage",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "passphraseSubmit",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "passphraseTitle",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "poweredBy",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "requiredFieldLabel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "signInLabel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsCarrierDefault",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsCarrierError",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsCarrierFieldLabel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsCodeCancel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsCodeError",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsCodeFieldLabel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsCodeMessage",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsCodeSubmit",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsCodeTitle",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsCountryFieldLabel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsCountryFormat",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsHaveAccessCode",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsMessageFormat",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsNumberCancel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsNumberError",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsNumberFieldLabel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsNumberFormat",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsNumberMessage",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsNumberSubmit",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsNumberTitle",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsUsernameFormat",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "smsValidityDuration",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "sponsorBackLink",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sponsorCancel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sponsorEmail",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sponsorEmailError",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sponsorEmailTemplate",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sponsorInfoApproved",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sponsorInfoDenied",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sponsorInfoPending",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sponsorName",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sponsorNameError",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sponsorNotePending",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sponsorRequestAccess",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sponsorSelectEmail",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sponsorStatusApproved",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sponsorStatusDenied",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sponsorStatusPending",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sponsorSubmit",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sponsorsError",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sponsorsInfoApproved",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sponsorsInfoDenied",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sponsorsInfoPending",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tos",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "tosAcceptLabel",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tosError",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tosLink",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "tosText",
          "schema": "string",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Portal Template"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/wxrules",
      "method": "listSiteWxRules",
      "httpMethod": "get",
      "tag": "Sites WxRules",
      "description": "listSiteWxRules",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/wxrules",
      "method": "createSiteWxRule",
      "httpMethod": "post",
      "tag": "Sites WxRules",
      "description": "createSiteWxRule",
      "parameters": [
        {
          "name": "action",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "blocked_apps",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "dst_allow_wxtags",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "dst_deny_wxtags",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "order",
          "schema": "number",
          "required": true,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "src_wxtags",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "WXlan"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/wxrules/derived",
      "method": "getSiteWxRulesDerived",
      "httpMethod": "get",
      "tag": "Sites WxRules",
      "description": "getSiteWxRulesDerived",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/wxrules/{wxrules_id}",
      "method": "deleteSiteWxRule",
      "httpMethod": "delete",
      "tag": "Sites WxRules",
      "description": "deleteSiteWxRule",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/wxrules/{wxrules_id}",
      "method": "getSiteWxRule",
      "httpMethod": "get",
      "tag": "Sites WxRules",
      "description": "getSiteWxRule",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "WXlan"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/wxrules/{wxrules_id}",
      "method": "updateSiteWxRule",
      "httpMethod": "put",
      "tag": "Sites WxRules",
      "description": "updateSiteWxRule",
      "parameters": [
        {
          "name": "action",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "blocked_apps",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "dst_allow_wxtags",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "dst_deny_wxtags",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "enabled",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "order",
          "schema": "number",
          "required": true,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "src_wxtags",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "WXlan"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/wxtags",
      "method": "listSiteWxTags",
      "httpMethod": "get",
      "tag": "Sites WxTags",
      "description": "listSiteWxTags",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/wxtags",
      "method": "createSiteWxTag",
      "httpMethod": "post",
      "tag": "Sites WxTags",
      "description": "createSiteWxTag",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "last_ips",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "mac",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "match",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "op",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "resource_mac",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "services",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "specs",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "subnet",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "values",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "WxLAN Tag\n* type:\n** client: created manually (e.g. on wireless client table, when they spot a device of interest, they can create an wxlan tag for it\n** resource: created automatically when we discover a network resource\n** subnet: create automatically when a subnet is discovered\n\n* match:\n** wlan_id, ap_id: values are a list of Wlan / Device ids\n** client_mac: values are a list of MAC addresses\n\n* radius_group: this is a smart tag that matches RADIUS-Filter-ID, Airespace-ACL-Name (VendorID=14179, VendorType=6) / Aruba-User-Role (VendorID=14823, VendorType=1)\n* radius_username: this matches the ATTR-User-Name(1)\n* radius_class: thie matches the ATTR-Class(25)\n* radius_attr: the values are [ “6=1”, “26=10.2.3.4” ], this support other RADIUS attributes where we know the type\n* radius_vendor: the values are [ “14179.10=1”, “14178.16=1.2.3.4” ], this matches vendor attributes and will be dynamically evaluated"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/wxtags/apps",
      "method": "getSiteApplicationList",
      "httpMethod": "get",
      "tag": "Sites WxTags",
      "description": "getSiteApplicationList",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/wxtags/{wxtag_id}",
      "method": "deleteSiteWxTag",
      "httpMethod": "delete",
      "tag": "Sites WxTags",
      "description": "deleteSiteWxTag",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/wxtags/{wxtag_id}",
      "method": "getSiteWxTag",
      "httpMethod": "get",
      "tag": "Sites WxTags",
      "description": "getSiteWxTag",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "WxLAN Tag\n* type:\n** client: created manually (e.g. on wireless client table, when they spot a device of interest, they can create an wxlan tag for it\n** resource: created automatically when we discover a network resource\n** subnet: create automatically when a subnet is discovered\n\n* match:\n** wlan_id, ap_id: values are a list of Wlan / Device ids\n** client_mac: values are a list of MAC addresses\n\n* radius_group: this is a smart tag that matches RADIUS-Filter-ID, Airespace-ACL-Name (VendorID=14179, VendorType=6) / Aruba-User-Role (VendorID=14823, VendorType=1)\n* radius_username: this matches the ATTR-User-Name(1)\n* radius_class: thie matches the ATTR-Class(25)\n* radius_attr: the values are [ “6=1”, “26=10.2.3.4” ], this support other RADIUS attributes where we know the type\n* radius_vendor: the values are [ “14179.10=1”, “14178.16=1.2.3.4” ], this matches vendor attributes and will be dynamically evaluated"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/wxtags/{wxtag_id}",
      "method": "updateSiteWxTag",
      "httpMethod": "put",
      "tag": "Sites WxTags",
      "description": "updateSiteWxTag",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "last_ips",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "mac",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "match",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "op",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "resource_mac",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "services",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "specs",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "subnet",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "type",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "values",
          "schema": "array",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "WxLAN Tag\n* type:\n** client: created manually (e.g. on wireless client table, when they spot a device of interest, they can create an wxlan tag for it\n** resource: created automatically when we discover a network resource\n** subnet: create automatically when a subnet is discovered\n\n* match:\n** wlan_id, ap_id: values are a list of Wlan / Device ids\n** client_mac: values are a list of MAC addresses\n\n* radius_group: this is a smart tag that matches RADIUS-Filter-ID, Airespace-ACL-Name (VendorID=14179, VendorType=6) / Aruba-User-Role (VendorID=14823, VendorType=1)\n* radius_username: this matches the ATTR-User-Name(1)\n* radius_class: thie matches the ATTR-Class(25)\n* radius_attr: the values are [ “6=1”, “26=10.2.3.4” ], this support other RADIUS attributes where we know the type\n* radius_vendor: the values are [ “14179.10=1”, “14178.16=1.2.3.4” ], this matches vendor attributes and will be dynamically evaluated"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/wxtags/{wxtag_id}/clients",
      "method": "getSiteCurrentMatchingClientsOfAWxTag",
      "httpMethod": "get",
      "tag": "Sites WxTags",
      "description": "getSiteCurrentMatchingClientsOfAWxTag",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/wxtunnels",
      "method": "listSiteWxTunnels",
      "httpMethod": "get",
      "tag": "Sites WxTunnels",
      "description": "listSiteWxTunnels",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/wxtunnels",
      "method": "createSiteWxTunnel",
      "httpMethod": "post",
      "tag": "Sites WxTunnels",
      "description": "createSiteWxTunnel",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "dmvpn",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "for_mgmt",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "hello_interval",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "hello_retries",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "hostname",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ipsec",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "is_static",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "mtu",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "peers",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "router_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "secret",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sessions",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "udp_port",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "use_udp",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "WxLAn Tunnel"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/wxtunnels/{wxtunnel_id}",
      "method": "deleteSiteWxTunnel",
      "httpMethod": "delete",
      "tag": "Sites WxTunnels",
      "description": "deleteSiteWxTunnel",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/wxtunnels/{wxtunnel_id}",
      "method": "getSiteWxTunnel",
      "httpMethod": "get",
      "tag": "Sites WxTunnels",
      "description": "getSiteWxTunnel",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "WxLAn Tunnel"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/wxtunnels/{wxtunnel_id}",
      "method": "updateSiteWxTunnel",
      "httpMethod": "put",
      "tag": "Sites WxTunnels",
      "description": "updateSiteWxTunnel",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "dmvpn",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "for_mgmt",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "hello_interval",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "hello_retries",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "hostname",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "ipsec",
          "schema": "object",
          "required": false,
          "description": ""
        },
        {
          "name": "is_static",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "mtu",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "peers",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "router_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "secret",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "sessions",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "udp_port",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "use_udp",
          "schema": "boolean",
          "required": false,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "WxLAn Tunnel"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/zones",
      "method": "listSiteZones",
      "httpMethod": "get",
      "tag": "Sites Zones",
      "description": "listSiteZones",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/zones",
      "method": "createSiteZone",
      "httpMethod": "post",
      "tag": "Sites Zones",
      "description": "createSiteZone",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "map_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "vertices",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Zone"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/zones/{zone_id}",
      "method": "deleteSiteZone",
      "httpMethod": "delete",
      "tag": "Sites Zones",
      "description": "deleteSiteZone",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/zones/{zone_id}",
      "method": "getSiteZone",
      "httpMethod": "get",
      "tag": "Sites Zones",
      "description": "getSiteZone",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": "Zone"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/zones/{zone_id}",
      "method": "updateSiteZone",
      "httpMethod": "put",
      "tag": "Sites Zones",
      "description": "updateSiteZone",
      "parameters": [
        {
          "name": "created_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "for_site",
          "schema": "boolean",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "map_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "modified_time",
          "schema": "number",
          "required": false,
          "description": ""
        },
        {
          "name": "name",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "org_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "site_id",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "vertices",
          "schema": "array",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": "Zone"
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/{zone_type}/count",
      "method": "countSiteZoneSessions",
      "httpMethod": "get",
      "tag": "Sites Zones",
      "description": "countSiteZoneSessions",
      "parameters": [
        {
          "name": "distinct",
          "schema": "string",
          "description": ""
        },
        {
          "name": "user_type",
          "schema": "string",
          "description": "user type"
        },
        {
          "name": "user",
          "schema": "string",
          "description": "client MAC / Asset MAC / SDK UUID"
        },
        {
          "name": "scope_id",
          "schema": "string",
          "description": "if `scope`==`map`/`zone`/`rssizone`, the scope id"
        },
        {
          "name": "scope",
          "schema": "string",
          "description": "scope"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/sites/{site_id}/{zone_type}/visits/search",
      "method": "searchSiteZoneSessions",
      "httpMethod": "get",
      "tag": "Sites Zones",
      "description": "searchSiteZoneSessions",
      "parameters": [
        {
          "name": "user_type",
          "schema": "string",
          "description": "user type, client (default) / sdkclient / asset"
        },
        {
          "name": "user",
          "schema": "string",
          "description": "client MAC / Asset MAC / SDK UUID"
        },
        {
          "name": "scope_id",
          "schema": "string",
          "description": "if `scope`==`map`/`zone`/`rssizone`, the scope id"
        },
        {
          "name": "scope",
          "schema": "string",
          "description": "scope"
        },
        {
          "name": "page",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "limit",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "start",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "end",
          "schema": "integer",
          "description": ""
        },
        {
          "name": "duration",
          "schema": "string",
          "required": false,
          "description": "For historical stats and/or logs where time range is needed, you can specify the time range in a few different ways:\n  * ?start=1430000000&end=1430864000\tspecify the start / end\n  * ?end=1430864000&duration=1d\tspecify end time and duration\n  * ?duration=1d\tspecify duration, end will be now() in seconds"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/utils/test_telstra",
      "method": "testSiteWlanTelstraSetup",
      "httpMethod": "get",
      "tag": "Sites Wlans",
      "description": "testSiteWlanTelstraSetup",
      "parameters": [
        {
          "name": "telstra_client_id",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "telstra_client_secret",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "to",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/api/v1/utils/test_twilio",
      "method": "testSiteWlanTwilioSetup",
      "httpMethod": "post",
      "tag": "Sites Wlans",
      "description": "testSiteWlanTwilioSetup",
      "parameters": [
        {
          "name": "from",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "to",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "twilio_auth_token",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "twilio_sid",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        },
        {
          "statusCode": "401",
          "description": ""
        },
        {
          "statusCode": "403",
          "description": ""
        },
        {
          "statusCode": "404",
          "description": ""
        }
      ]
    },
    {
      "url": "/webhook_example/_alarm_",
      "method": "alarms",
      "httpMethod": "post",
      "tag": "Webhook Samples",
      "description": "alarms",
      "parameters": [
        {
          "name": "events",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "topic",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/webhook_example/_asset_raw_",
      "method": "assetRaw",
      "httpMethod": "post",
      "tag": "Webhook Samples",
      "description": "assetRaw",
      "parameters": [
        {
          "name": "events",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "topic",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/webhook_example/_audit_",
      "method": "audits",
      "httpMethod": "post",
      "tag": "Webhook Samples",
      "description": "audits",
      "parameters": [
        {
          "name": "events",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "topic",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/webhook_example/_client_join_",
      "method": "clientJoin",
      "httpMethod": "post",
      "tag": "Webhook Samples",
      "description": "clientJoin",
      "parameters": [
        {
          "name": "events",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "topic",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/webhook_example/_client_sessions_",
      "method": "clientSessions",
      "httpMethod": "post",
      "tag": "Webhook Samples",
      "description": "clientSessions",
      "parameters": [
        {
          "name": "events",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "topic",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        },
        {
          "statusCode": "400",
          "description": ""
        }
      ]
    },
    {
      "url": "/webhook_example/_device_events_",
      "method": "deviceEvents",
      "httpMethod": "post",
      "tag": "Webhook Samples",
      "description": "deviceEvents",
      "parameters": [
        {
          "name": "events",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "topic",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/webhook_example/_device_updowns_",
      "method": "deviceUpDown",
      "httpMethod": "post",
      "tag": "Webhook Samples",
      "description": "deviceUpDown",
      "parameters": [
        {
          "name": "events",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "topic",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/webhook_example/_discovered_raw_rssi_",
      "method": "discoveredRawRssi",
      "httpMethod": "post",
      "tag": "Webhook Samples",
      "description": "discovered-raw-rssi",
      "parameters": [
        {
          "name": "events",
          "schema": "array",
          "required": false,
          "description": ""
        },
        {
          "name": "topic",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/webhook_example/_location_",
      "method": "location",
      "httpMethod": "post",
      "tag": "Webhook Samples",
      "description": "location",
      "parameters": [
        {
          "name": "events",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "topic",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/webhook_example/_occupancy_alerts_",
      "method": "occupancyAlerts",
      "httpMethod": "post",
      "tag": "Webhook Samples",
      "description": "occupancyAlerts",
      "parameters": [
        {
          "name": "events",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "topic",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/webhook_example/_ping_",
      "method": "ping",
      "httpMethod": "post",
      "tag": "Webhook Samples",
      "description": "ping",
      "parameters": [
        {
          "name": "events",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "topic",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/webhook_example/_sdkclient_scan_data",
      "method": "sdkclientScanData",
      "httpMethod": "post",
      "tag": "Webhook Samples",
      "description": "sdkclientScanData",
      "parameters": [
        {
          "name": "events",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "topic",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/webhook_example/_zone_",
      "method": "zone",
      "httpMethod": "post",
      "tag": "Webhook Samples",
      "description": "zone",
      "parameters": [
        {
          "name": "events",
          "schema": "array",
          "required": true,
          "description": ""
        },
        {
          "name": "topic",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    }
  ],
  "apiBaseUrl": "https://api.mist.com",
  "apiDescription": "> Version: **0.37.7**\n>\n> Date: **April 21, 2023**\n\n---\n\n#### Available Documentation\n* [Postman](https://documenter.getpostman.com/view/224925/SzYgQufe)\n* [Open API](https://doc.mist-lab.fr/)\n\n---\n\n#### Useful links\n* [Mist Homepage](https://www.mist.com)\n* [Mist Documentation](https://www.mist.com/documentation)\n* [Official API Documentation](https://api.mist.com/api/v1/docs/Home) (Mist account required)\n* [Mist Blog](https://www.mist.com/news/?md_post_type=post)\n* [Mist Updates](https://www.mist.com/documentation/category/product-updates/)",
  "apiTitle": "Mist API",
  "endpoints": 541,
  "sdkMethods": 1288,
  "schemas": 231,
  "parameters": 4107,
  "contactEmail": "tmunzer@juniper.net",
  "difficultyScore": 2430.25,
  "difficulty": "Very Hard"
}