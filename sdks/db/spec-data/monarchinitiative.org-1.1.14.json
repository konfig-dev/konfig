{
  "providerName": "monarchinitiative.org",
  "openApiRaw": "https://api.monarchinitiative.org/api/swagger.json",
  "securitySchemes": {},
  "homepage": "monarchinitiative.org",
  "apiVersion": "1.1.14",
  "methods": [
    {
      "url": "/association/between/{subject}/{object}",
      "method": "getAssociationsBetween",
      "httpMethod": "get",
      "tag": "association",
      "description": "Returns associations connecting two entities",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/association/find/{subject_category}",
      "method": "getAssociationBySubjectCategorySearch",
      "httpMethod": "get",
      "tag": "association",
      "description": "Returns list of matching associations for a given subject category",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "subjectTaxon",
          "schema": "string",
          "description": "Subject taxon ID, e.g. NCBITaxon:9606 (Includes inferred associations, by default)"
        },
        {
          "name": "objectTaxon",
          "schema": "string",
          "description": "Object taxon ID, e.g. NCBITaxon:10090 (Includes inferred associations, by default)"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "Filter by relation CURIE, e.g. RO:0002200 (has_phenotype), RO:0002607 (is marker for), RO:HOM0000017 (orthologous to), etc."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/association/find/{subject_category}/{object_category}",
      "method": "getAssociationBySubjectAndObjectCategorySearch",
      "httpMethod": "get",
      "tag": "association",
      "description": "Returns list of matching associations between a given subject and object category",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "subject",
          "schema": "string",
          "description": "Subject CURIE"
        },
        {
          "name": "object",
          "schema": "string",
          "description": "Object CURIE"
        },
        {
          "name": "subjectTaxon",
          "schema": "string",
          "description": "Subject taxon ID, e.g. NCBITaxon:9606 (Includes inferred associations, by default)"
        },
        {
          "name": "objectTaxon",
          "schema": "string",
          "description": "Object taxon ID, e.g. NCBITaxon:10090 (Includes inferred associations, by default)"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "Filter by relation CURIE, e.g. RO:0002200 (has_phenotype), RO:0002607 (is marker for), RO:HOM0000017 (orthologous to), etc."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/association/from/{subject}",
      "method": "getAssociationsFrom",
      "httpMethod": "get",
      "tag": "association",
      "description": "Returns list of matching associations starting from a given subject (source)",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "objectTaxon",
          "schema": "string",
          "description": "Object taxon ID, e.g. NCBITaxon:10090 (Includes inferred associations, by default)"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "Filter by relation CURIE, e.g. RO:0002200 (has_phenotype), RO:0002607 (is marker for), RO:HOM0000017 (orthologous to), etc."
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/association/to/{object}",
      "method": "getAssociationsTo",
      "httpMethod": "get",
      "tag": "association",
      "description": "Returns list of matching associations pointing to a given object (target)",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/association/type/{association_type}",
      "method": "getAssociationBySubjectAndAssocType",
      "httpMethod": "get",
      "tag": "association",
      "description": "Returns list of matching associations of a given type",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "subject",
          "schema": "string",
          "description": "Subject CURIE"
        },
        {
          "name": "object",
          "schema": "string",
          "description": "Object CURIE"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/association/{id}",
      "method": "getAssociationObject",
      "httpMethod": "get",
      "tag": "association",
      "description": "Returns the association with a given identifier",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/anatomy/{id}/genes",
      "method": "getAnatomyGeneAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns genes associated with a given anatomy",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/anatomy/{id}/genes/{taxid}",
      "method": "getAnatomyGeneByTaxonAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns gene IDs for all genes associated with a given anatomy, filtered by taxon",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": []
    },
    {
      "url": "/bioentity/case/{id}/diseases",
      "method": "getCaseDiseaseAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns diseases associated with a case",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/case/{id}/genotypes",
      "method": "getCaseGenotypeAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns genotypes associated with a case",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/case/{id}/models",
      "method": "getCaseModelAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns models associated with a case",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/case/{id}/phenotypes",
      "method": "getCasePhenotypeAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns phenotypes associated with a case",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/case/{id}/variants",
      "method": "getCaseVariantAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns variants associated with a case",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/disease/{id}/cases",
      "method": "getDiseaseCaseAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns cases associated with a disease",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/disease/{id}/genes",
      "method": "getDiseaseGeneAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns genes associated with a disease",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        },
        {
          "name": "associationType",
          "schema": "string",
          "description": "Additional filters: causal, non_causal, both"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/disease/{id}/genotypes",
      "method": "getDiseaseGenotypeAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns genotypes associated with a disease",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/disease/{id}/models",
      "method": "getDiseaseModelAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns associations to models of the disease",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/disease/{id}/models/{taxon}",
      "method": "getDiseaseModelTaxonAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns associations to models of the disease constrained by taxon",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/disease/{id}/pathways",
      "method": "getDiseasePathwayAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns pathways associated with a disease",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/disease/{id}/phenotypes",
      "method": "getDiseasePhenotypeAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns phenotypes associated with disease",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/disease/{id}/publications",
      "method": "getDiseasePublicationAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns publications associated with a disease",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/disease/{id}/treatment",
      "method": "getDiseaseSubstanceAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns substances associated with a disease",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        }
      ],
      "responses": []
    },
    {
      "url": "/bioentity/disease/{id}/variants",
      "method": "getDiseaseVariantAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns variants associated with a disease",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/function/{id}",
      "method": "getFunctionAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns annotations associated to a function term",
      "parameters": [
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "evidence",
          "schema": "array",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        }
      ],
      "responses": []
    },
    {
      "url": "/bioentity/function/{id}/genes",
      "method": "getFunctionGeneAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns genes associated to a GO term",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        },
        {
          "name": "relationshipType",
          "schema": "string",
          "description": "relationship type ('involved_in', 'involved_in_regulation_of' or 'acts_upstream_of_or_within')"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/function/{id}/publications",
      "method": "getFunctionPublicationAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns publications associated to a GO term",
      "parameters": [
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "evidence",
          "schema": "array",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        }
      ],
      "responses": []
    },
    {
      "url": "/bioentity/function/{id}/taxons",
      "method": "getFunctionTaxonAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns taxons associated to a GO term",
      "parameters": [
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "evidence",
          "schema": "array",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        }
      ],
      "responses": []
    },
    {
      "url": "/bioentity/gene/{id}/anatomy",
      "method": "getGeneAnatomyAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns anatomical entities associated with a gene",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/gene/{id}/cases",
      "method": "getGeneCaseAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns cases associated with a gene",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/gene/{id}/diseases",
      "method": "getGeneDiseaseAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns diseases associated with gene",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        },
        {
          "name": "associationType",
          "schema": "string",
          "description": "Additional filters: causal, non_causal, both"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/gene/{id}/expression/anatomy",
      "method": "getGeneExpressionAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns expression events for a gene",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/gene/{id}/function",
      "method": "getGeneFunctionAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns function associations for a gene",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/gene/{id}/genotypes",
      "method": "getGeneGenotypeAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns genotypes associated with a gene",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/gene/{id}/homologs",
      "method": "getGeneHomologAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns homologs for a gene",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "Taxon CURIE of homolog, e.g. NCBITaxon:9606 (Can be an ancestral node in the ontology; includes inferred associations by default)"
        },
        {
          "name": "homologyType",
          "schema": "string",
          "description": "P (paralog), O (Ortholog) or LDO (least-diverged ortholog)"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/gene/{id}/interactions",
      "method": "getGeneInteractions",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns interactions for a gene",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/gene/{id}/models",
      "method": "getGeneModelAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns models associated with a gene",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/gene/{id}/ortholog/diseases",
      "method": "getGeneOrthologDiseaseAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Return diseases associated with orthologs of a gene",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/gene/{id}/ortholog/phenotypes",
      "method": "getGeneOrthologPhenotypeAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Return phenotypes associated with orthologs for a gene",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/gene/{id}/pathways",
      "method": "getGenePathwayAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns pathways associated with gene",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/gene/{id}/phenotypes",
      "method": "getGenePhenotypeAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns phenotypes associated with gene",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/gene/{id}/publications",
      "method": "getGenePublicationAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns publications associated with a gene",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/gene/{id}/variants",
      "method": "getGeneVariantAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns variants associated with a gene",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/genotype/{id}/cases",
      "method": "getGenotypeCaseAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns cases associated with a genotype",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/genotype/{id}/diseases",
      "method": "getGenotypeDiseaseAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns diseases associated with a genotype",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/genotype/{id}/genes",
      "method": "getGenotypeGeneAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns genes associated with a genotype",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/genotype/{id}/genotypes",
      "method": "getGenotypeGenotypeAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns genotypes-genotype associations",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/genotype/{id}/models",
      "method": "getGenotypeModelAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns models associated with a genotype",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/genotype/{id}/phenotypes",
      "method": "getGenotypePhenotypeAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns phenotypes associated with a genotype",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/genotype/{id}/publications",
      "method": "getGenotypePublicationAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns publications associated with a genotype",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/genotype/{id}/variants",
      "method": "getGenotypeVariantAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns genotypes-variant associations",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/goterm/{id}/genes",
      "method": "getGotermGeneAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns associations to GO terms for a gene",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "relationshipType",
          "schema": "string",
          "description": "relationship type ('involved_in', 'involved_in_regulation_of' or 'acts_upstream_of_or_within')"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/model/{id}/cases",
      "method": "getModelCaseAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns cases associated with a model",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/model/{id}/diseases",
      "method": "getModelDiseaseAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns diseases associated with a model",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/model/{id}/genes",
      "method": "getModelGeneAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns genes associated with a model",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/model/{id}/genotypes",
      "method": "getModelGenotypeAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns genotypes associated with a model",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/model/{id}/phenotypes",
      "method": "getModelPhenotypeAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns phenotypes associated with a model",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/model/{id}/publications",
      "method": "getModelPublicationAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns publications associated with a model",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/model/{id}/variants",
      "method": "getModelVariantAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns variants associated with a model",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/pathway/{id}/diseases",
      "method": "getPathwayDiseaseAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns diseases associated with a pathway",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/pathway/{id}/genes",
      "method": "getPathwayGeneAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns genes associated with a pathway",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/pathway/{id}/phenotypes",
      "method": "getPathwayPhenotypeAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns phenotypes associated with a pathway",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/phenotype/{id}/anatomy",
      "method": "getPhenotypeAnatomyAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns anatomical entities associated with a phenotype",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/phenotype/{id}/cases",
      "method": "getPhenotypeCaseAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns cases associated with a phenotype",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/phenotype/{id}/diseases",
      "method": "getPhenotypeDiseaseAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns diseases associated with a phenotype",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/phenotype/{id}/gene/{taxid}/ids",
      "method": "getPhenotypeGeneByTaxonAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns gene IDs for all genes associated with a given phenotype, filtered by taxon",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        }
      ],
      "responses": []
    },
    {
      "url": "/bioentity/phenotype/{id}/genes",
      "method": "getPhenotypeGeneAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns genes associated with a phenotype",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/phenotype/{id}/genotypes",
      "method": "getPhenotypeGenotypeAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns genotypes associated with a phenotype",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/phenotype/{id}/pathways",
      "method": "getPhenotypePathwayAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns pathways associated with a phenotype",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/phenotype/{id}/publications",
      "method": "getPhenotypePublicationAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns publications associated with a phenotype",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/phenotype/{id}/variants",
      "method": "getPhenotypeVariantAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns variants associated with a phenotype",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/publication/{id}/diseases",
      "method": "getPublicationDiseaseAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns diseases associated with a publication",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/publication/{id}/genes",
      "method": "getPublicationGeneAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns genes associated with a publication",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/publication/{id}/genotypes",
      "method": "getPublicationGenotypeAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns genotypes associated with a publication",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/publication/{id}/models",
      "method": "getPublicationModelAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns models associated with a publication",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/publication/{id}/phenotypes",
      "method": "getPublicationPhenotypeAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns phenotypes associated with a publication",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/publication/{id}/variants",
      "method": "getPublicationVariantAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns variants associated with a publication",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/substance/{id}/participant_in",
      "method": "getSubstanceParticipantInAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns associations between an activity and process and the specified substance",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/substance/{id}/roles",
      "method": "getSubstanceRoleAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns associations between given drug and roles",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/substance/{id}/treats",
      "method": "getSubstanceTreatsAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns substances associated with a disease",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        }
      ],
      "responses": []
    },
    {
      "url": "/bioentity/variant/{id}/cases",
      "method": "getVariantCaseAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns cases associated with a variant",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/variant/{id}/diseases",
      "method": "getVariantDiseaseAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns diseases associated with a variant",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/variant/{id}/genes",
      "method": "getVariantGeneAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns genes associated with a variant",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/variant/{id}/genotypes",
      "method": "getVariantGenotypeAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns genotypes associated with a variant",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/variant/{id}/models",
      "method": "getVariantModelAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns models associated with a variant",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/variant/{id}/phenotypes",
      "method": "getVariantPhenotypeAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns phenotypes associated with a variant",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/variant/{id}/publications",
      "method": "getVariantPublicationAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns publications associated with a variant",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/{id}",
      "method": "getGenericObject",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns basic info on object of any type",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/{id}/associations",
      "method": "getGenericAssociations",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Returns associations for an entity regardless of the type",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "One or more taxon CURIE to filter associations by subject taxon; includes inferred associations by default"
        },
        {
          "name": "directTaxon",
          "schema": "boolean",
          "description": "Set true to exclude inferred taxa"
        },
        {
          "name": "relation",
          "schema": "string",
          "description": "A relation CURIE to filter associations"
        },
        {
          "name": "sort",
          "schema": "string",
          "description": "Sorting responses <field> <desc,asc>"
        },
        {
          "name": "q",
          "schema": "string",
          "description": "Query string to filter documents"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentity/{type}/{id}",
      "method": "getGenericObjectByType",
      "httpMethod": "get",
      "tag": "bioentity",
      "description": "Return basic info on an object for a given type",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        },
        {
          "name": "facet",
          "schema": "boolean",
          "description": "Enable faceting"
        },
        {
          "name": "facetFields",
          "schema": "array",
          "description": "Fields to facet on"
        },
        {
          "name": "unselectEvidence",
          "schema": "boolean",
          "description": "If true, excludes evidence objects in response"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If true, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "fetchObjects",
          "schema": "boolean",
          "description": "If true, returns a distinct set of association.objects (typically ontology terms). This appears at the top level of the results payload"
        },
        {
          "name": "useCompactAssociations",
          "schema": "boolean",
          "description": "If true, returns results in compact associations format"
        },
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default) or a specific publication or other supporting object, e.g. ZFIN:ZDB-PUB-060503-2"
        },
        {
          "name": "direct",
          "schema": "boolean",
          "description": "Set true to only include direct associations, and false to include inferred (via subclass or subclass|part of), default=False"
        },
        {
          "name": "getAssociationCounts",
          "schema": "boolean",
          "description": "Get association counts"
        },
        {
          "name": "distinctCounts",
          "schema": "boolean",
          "description": "Get distinct counts for associations (to be used in conjunction with 'get_association_counts' parameter)"
        }
      ],
      "responses": []
    },
    {
      "url": "/bioentityset/associations",
      "method": "getEntitySetAssociations",
      "httpMethod": "get",
      "tag": "bioentityset",
      "description": "Returns compact associations for a given input set",
      "parameters": [
        {
          "name": "subject",
          "schema": "array",
          "description": "Entity ids to be examined, e.g. NCBIGene:9342, NCBIGene:7227, NCBIGene:8131, NCBIGene:157570, NCBIGene:51164, NCBIGene:6689, NCBIGene:6387"
        },
        {
          "name": "background",
          "schema": "array",
          "description": "Entity ids in background set, e.g. NCBIGene:84570, NCBIGene:3630; used in over-representation tests"
        },
        {
          "name": "objectCategory",
          "schema": "string",
          "description": "E.g. phenotype, function"
        },
        {
          "name": "objectSlim",
          "schema": "string",
          "description": "Slim or subset to which the descriptors are to be mapped, NOT IMPLEMENTED"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentityset/descriptor/counts",
      "method": "getEntitySetSummary",
      "httpMethod": "get",
      "tag": "bioentityset",
      "description": "Summary statistics for objects associated",
      "parameters": [
        {
          "name": "subject",
          "schema": "array",
          "description": "Entity ids to be examined, e.g. NCBIGene:9342, NCBIGene:7227, NCBIGene:8131, NCBIGene:157570, NCBIGene:51164, NCBIGene:6689, NCBIGene:6387"
        },
        {
          "name": "background",
          "schema": "array",
          "description": "Entity ids in background set, e.g. NCBIGene:84570, NCBIGene:3630; used in over-representation tests"
        },
        {
          "name": "objectCategory",
          "schema": "string",
          "description": "E.g. phenotype, function"
        },
        {
          "name": "objectSlim",
          "schema": "string",
          "description": "Slim or subset to which the descriptors are to be mapped, NOT IMPLEMENTED"
        }
      ],
      "responses": []
    },
    {
      "url": "/bioentityset/graph",
      "method": "getEntitySetGraphResource",
      "httpMethod": "get",
      "tag": "bioentityset",
      "description": "TODO Graph object spanning all entities",
      "parameters": [
        {
          "name": "subject",
          "schema": "array",
          "description": "Entity ids to be examined, e.g. NCBIGene:9342, NCBIGene:7227, NCBIGene:8131, NCBIGene:157570, NCBIGene:51164, NCBIGene:6689, NCBIGene:6387"
        },
        {
          "name": "background",
          "schema": "array",
          "description": "Entity ids in background set, e.g. NCBIGene:84570, NCBIGene:3630; used in over-representation tests"
        },
        {
          "name": "objectCategory",
          "schema": "string",
          "description": "E.g. phenotype, function"
        },
        {
          "name": "objectSlim",
          "schema": "string",
          "description": "Slim or subset to which the descriptors are to be mapped, NOT IMPLEMENTED"
        }
      ],
      "responses": []
    },
    {
      "url": "/bioentityset/homologs/",
      "method": "getEntitySetHomologs",
      "httpMethod": "get",
      "tag": "bioentityset/homologs",
      "description": "Returns homology associations for a given input set of genes",
      "parameters": [
        {
          "name": "subject",
          "schema": "array",
          "description": "Entity ids to be examined, e.g. NCBIGene:9342, NCBIGene:7227, NCBIGene:8131, NCBIGene:157570, NCBIGene:51164, NCBIGene:6689, NCBIGene:6387"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/bioentityset/overrepresentation",
      "method": "getOverRepresentation",
      "httpMethod": "get",
      "tag": "bioentityset",
      "description": "Summary statistics for objects associated",
      "parameters": [
        {
          "name": "objectCategory",
          "schema": "string",
          "description": "E.g. phenotype, function"
        },
        {
          "name": "subject",
          "schema": "array",
          "description": "Entity ids to be examined, e.g. NCBIGene:9342, NCBIGene:7227, NCBIGene:8131, NCBIGene:157570, NCBIGene:51164, NCBIGene:6689, NCBIGene:6387"
        },
        {
          "name": "background",
          "schema": "array",
          "description": "Entity ids in background set, e.g. NCBIGene:84570, NCBIGene:3630; used in over-representation tests"
        },
        {
          "name": "subjectCategory",
          "schema": "string",
          "description": "Default: gene. Other types may be used e.g. disease but statistics may not make sense"
        },
        {
          "name": "maxPValue",
          "schema": "string",
          "description": "Exclude results with p-value greater than this"
        },
        {
          "name": "ontology",
          "schema": "string",
          "description": "ontology id. Must be obo id. Examples: go, mp, hp, uberon (optional: will be inferred if left blank)"
        },
        {
          "name": "taxon",
          "schema": "string",
          "description": "must be NCBITaxon CURIE. Example: NCBITaxon:9606"
        }
      ],
      "responses": []
    },
    {
      "url": "/bioentityset/slimmer/anatomy",
      "method": "getEntitySetAnatomySlimmer",
      "httpMethod": "get",
      "tag": "bioentityset/slimmer",
      "description": "For a given gene(s), summarize its annotations over a defined set of slim",
      "parameters": [
        {
          "name": "subject",
          "schema": "array",
          "required": true,
          "description": "Entity ids to be examined, e.g. NCBIGene:9342, NCBIGene:7227, NCBIGene:8131, NCBIGene:157570, NCBIGene:51164, NCBIGene:6689, NCBIGene:6387"
        },
        {
          "name": "slim",
          "schema": "array",
          "required": true,
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID (IMPLEMENTED) or subset ID (TODO)"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If set, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        }
      ],
      "responses": []
    },
    {
      "url": "/bioentityset/slimmer/function",
      "method": "getEntitySetFunctionSlimmer",
      "httpMethod": "get",
      "tag": "bioentityset/slimmer",
      "description": "For a given gene(s), summarize its annotations over a defined set of slim",
      "parameters": [
        {
          "name": "relationshipType",
          "schema": "string",
          "description": "relationship type ('involved_in' or 'acts_upstream_of_or_within')"
        },
        {
          "name": "subject",
          "schema": "array",
          "required": true,
          "description": "Entity ids to be examined, e.g. NCBIGene:9342, NCBIGene:7227, NCBIGene:8131, NCBIGene:157570, NCBIGene:51164, NCBIGene:6689, NCBIGene:6387"
        },
        {
          "name": "slim",
          "schema": "array",
          "required": true,
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID (IMPLEMENTED) or subset ID (TODO)"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If set, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        }
      ],
      "responses": []
    },
    {
      "url": "/bioentityset/slimmer/phenotype",
      "method": "getEntitySetPhenotypeSlimmer",
      "httpMethod": "get",
      "tag": "bioentityset/slimmer",
      "description": "For a given gene(s), summarize its annotations over a defined set of slim",
      "parameters": [
        {
          "name": "subject",
          "schema": "array",
          "required": true,
          "description": "Entity ids to be examined, e.g. NCBIGene:9342, NCBIGene:7227, NCBIGene:8131, NCBIGene:157570, NCBIGene:51164, NCBIGene:6689, NCBIGene:6387"
        },
        {
          "name": "slim",
          "schema": "array",
          "required": true,
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID (IMPLEMENTED) or subset ID (TODO)"
        },
        {
          "name": "excludeAutomaticAssertions",
          "schema": "boolean",
          "description": "If set, excludes associations that involve IEAs (ECO:0000501)"
        },
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "integer",
          "description": "beginning row"
        }
      ],
      "responses": []
    },
    {
      "url": "/cam/activity",
      "method": "getActivityCollection",
      "httpMethod": "get",
      "tag": "cam",
      "description": "Returns list of models",
      "parameters": [
        {
          "name": "title",
          "schema": "string",
          "description": "string to search for in title of model"
        },
        {
          "name": "contributor",
          "schema": "string",
          "description": "string to search for in contributor of model"
        }
      ],
      "responses": []
    },
    {
      "url": "/cam/instance/{id}",
      "method": "getInstanceObject",
      "httpMethod": "get",
      "tag": "cam",
      "description": "Returns list of matches",
      "parameters": [
        {
          "name": "title",
          "schema": "string",
          "description": "string to search for in title of model"
        },
        {
          "name": "contributor",
          "schema": "string",
          "description": "string to search for in contributor of model"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/cam/instances",
      "method": "getModelInstances",
      "httpMethod": "get",
      "tag": "cam",
      "description": "Returns list of all instances",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/cam/model",
      "method": "getModelCollection",
      "httpMethod": "get",
      "tag": "cam",
      "description": "Returns list of ALL models",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/cam/model/contributors",
      "method": "getModelContributors",
      "httpMethod": "get",
      "tag": "cam",
      "description": "Returns list of all contributors across all models",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/cam/model/properties",
      "method": "getModelProperties",
      "httpMethod": "get",
      "tag": "cam",
      "description": "Returns list of all properties used across all models",
      "parameters": [
        {
          "name": "title",
          "schema": "string",
          "description": "string to search for in title of model"
        },
        {
          "name": "contributor",
          "schema": "string",
          "description": "string to search for in contributor of model"
        }
      ],
      "responses": []
    },
    {
      "url": "/cam/model/property_values",
      "method": "getModelPropertyValues",
      "httpMethod": "get",
      "tag": "cam",
      "description": "Returns list property-values for all models",
      "parameters": [
        {
          "name": "title",
          "schema": "string",
          "description": "string to search for in title of model"
        },
        {
          "name": "contributor",
          "schema": "string",
          "description": "string to search for in contributor of model"
        }
      ],
      "responses": []
    },
    {
      "url": "/cam/model/query",
      "method": "getModelQuery",
      "httpMethod": "get",
      "tag": "cam",
      "description": "Returns list of models matching query",
      "parameters": [
        {
          "name": "title",
          "schema": "string",
          "description": "string to search for in title of model"
        },
        {
          "name": "contributor",
          "schema": "string",
          "description": "string to search for in contributor of model"
        }
      ],
      "responses": []
    },
    {
      "url": "/cam/model/{id}",
      "method": "getModelObject",
      "httpMethod": "get",
      "tag": "cam",
      "description": "Returns a complete model",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/cam/physical_interaction",
      "method": "getPhysicalInteraction",
      "httpMethod": "get",
      "tag": "cam",
      "description": "Returns list of models",
      "parameters": [
        {
          "name": "title",
          "schema": "string",
          "description": "string to search for in title of model"
        },
        {
          "name": "contributor",
          "schema": "string",
          "description": "string to search for in contributor of model"
        }
      ],
      "responses": []
    },
    {
      "url": "/evidence/graph/{id}",
      "method": "getEvidenceGraphObject",
      "httpMethod": "get",
      "tag": "evidence/graph",
      "description": "Returns evidence graph object for a given association",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/evidence/graph/{id}/table",
      "method": "getEvidenceGraphTable",
      "httpMethod": "get",
      "tag": "evidence/graph",
      "description": "Returns evidence as a association_results object given an association",
      "parameters": [
        {
          "name": "isPublication",
          "schema": "boolean",
          "description": "If true, considers dc:source as edge"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/genome/features/within/{build}/{reference}/{begin}/{end}",
      "method": "getFeaturesWithinResource",
      "httpMethod": "get",
      "tag": "genome/features",
      "description": "Returns list of matches",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/graph/edges/from/{id}",
      "method": "getEdgeResource",
      "httpMethod": "get",
      "tag": "graph",
      "description": "Returns edges emanating from a given node",
      "parameters": [
        {
          "name": "depth",
          "schema": "integer",
          "description": "How far to traverse for neighbors"
        },
        {
          "name": "direction",
          "schema": "string",
          "description": "Which direction to traverse (used only if relationship_type is defined)"
        },
        {
          "name": "relationshipType",
          "schema": "array",
          "description": "Relationship type to traverse"
        },
        {
          "name": "entail",
          "schema": "boolean",
          "description": "Include sub-properties and equivalent properties"
        },
        {
          "name": "graph",
          "schema": "string",
          "description": "Which monarch graph to query"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/graph/node/{id}",
      "method": "getNodeResource",
      "httpMethod": "get",
      "tag": "graph",
      "description": "Returns a graph node",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/identifier/mapper/{source}/{target}/",
      "method": "getIdentifierMapper",
      "httpMethod": "get",
      "tag": "identifier/mapper",
      "description": "TODO maps a list of identifiers from a source to a target",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/identifier/prefixes/",
      "method": "getPrefixCollection",
      "httpMethod": "get",
      "tag": "identifier/prefixes",
      "description": "Returns list of prefixes",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/identifier/prefixes/contract/{uri}",
      "method": "getPrefixContract",
      "httpMethod": "get",
      "tag": "identifier/prefixes",
      "description": "Returns contracted URI",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/identifier/prefixes/expand/{id}",
      "method": "getPrefixExpand",
      "httpMethod": "get",
      "tag": "identifier/prefixes",
      "description": "Returns expanded URI",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/individual/pedigree/{id}",
      "method": "getPedigree",
      "httpMethod": "get",
      "tag": "individual",
      "description": "Returns list of matches",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/individual/{id}",
      "method": "getIndividual",
      "httpMethod": "get",
      "tag": "individual",
      "description": "Returns list of matches",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/mart/case/{object_category}/{taxon}",
      "method": "getMartCaseAssociationsResource",
      "httpMethod": "get",
      "tag": "mart",
      "description": "Bulk download of case associations",
      "parameters": [
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        }
      ],
      "responses": []
    },
    {
      "url": "/mart/disease/{object_category}/{taxon}",
      "method": "getMartDiseaseAssociationsResource",
      "httpMethod": "get",
      "tag": "mart",
      "description": "Bulk download of disease associations",
      "parameters": [
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        }
      ],
      "responses": []
    },
    {
      "url": "/mart/gene/{object_category}/{taxon}",
      "method": "getMartGeneAssociationsResource",
      "httpMethod": "get",
      "tag": "mart",
      "description": "Bulk download of gene associations",
      "parameters": [
        {
          "name": "slim",
          "schema": "array",
          "description": "Map objects up (slim) to a higher level category. Value can be ontology class ID or subset ID"
        }
      ],
      "responses": []
    },
    {
      "url": "/mart/ortholog/{taxon1}/{taxon2}",
      "method": "getMartOrthologAssociationsResource",
      "httpMethod": "get",
      "tag": "mart",
      "description": "Bulk download of orthologs",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/mart/paralog/{taxon1}/{taxon2}",
      "method": "getMartParalogAssociationsResource",
      "httpMethod": "get",
      "tag": "mart",
      "description": "Bulk download of paralogs",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/metadata/datasets",
      "method": "getMetadataForDatasets",
      "httpMethod": "get",
      "tag": "metadata",
      "description": "Get metadata for all datasets from SciGraph",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/mme/disease",
      "method": "postDiseaseMme",
      "httpMethod": "post",
      "tag": "mme",
      "description": "Match a patient to diseases based on their phenotypes",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/mme/fly",
      "method": "postFlyMme",
      "httpMethod": "post",
      "tag": "mme",
      "description": "Match a patient to fruit fly genes based on similar phenotypes",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/mme/mouse",
      "method": "postMouseMme",
      "httpMethod": "post",
      "tag": "mme",
      "description": "Match a patient to mouse genes based on similar phenotypes",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/mme/nematode",
      "method": "postNematodeMme",
      "httpMethod": "post",
      "tag": "mme",
      "description": "Match a patient to nematode genes based on similar phenotypes",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/mme/zebrafish",
      "method": "postZebrafishMme",
      "httpMethod": "post",
      "tag": "mme",
      "description": "Match a patient to zebrafish genes based on similar phenotypes",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/nlp/annotate/",
      "method": "getAnnotate",
      "httpMethod": "get",
      "tag": "nlp/annotate",
      "description": "Annotate a given text using SciGraph annotator",
      "parameters": [
        {
          "name": "content",
          "schema": "string",
          "description": "The text content to annotate"
        },
        {
          "name": "includeCategory",
          "schema": "array",
          "description": "Categories to include for annotation"
        },
        {
          "name": "excludeCategory",
          "schema": "array",
          "description": "Categories to exclude for annotation"
        },
        {
          "name": "minLength",
          "schema": "string",
          "description": "The minimum number of characters in the annotated entity"
        },
        {
          "name": "longestOnly",
          "schema": "boolean",
          "description": "Should only the longest entity be returned for an overlapping group"
        },
        {
          "name": "includeAbbreviation",
          "schema": "boolean",
          "description": "Should abbreviations be included"
        },
        {
          "name": "includeAcronym",
          "schema": "boolean",
          "description": "Should acronyms be included"
        },
        {
          "name": "includeNumbers",
          "schema": "boolean",
          "description": "Should numbers be included"
        }
      ],
      "responses": []
    },
    {
      "url": "/nlp/annotate/",
      "method": "postAnnotate",
      "httpMethod": "post",
      "tag": "nlp/annotate",
      "description": "Annotate a given text using SciGraph annotator",
      "parameters": [
        {
          "name": "content",
          "schema": "string",
          "description": "The text content to annotate"
        },
        {
          "name": "includeCategory",
          "schema": "array",
          "description": "Categories to include for annotation"
        },
        {
          "name": "excludeCategory",
          "schema": "array",
          "description": "Categories to exclude for annotation"
        },
        {
          "name": "minLength",
          "schema": "string",
          "description": "The minimum number of characters in the annotated entity"
        },
        {
          "name": "longestOnly",
          "schema": "boolean",
          "description": "Should only the longest entity be returned for an overlapping group"
        },
        {
          "name": "includeAbbreviation",
          "schema": "boolean",
          "description": "Should abbreviations be included"
        },
        {
          "name": "includeAcronym",
          "schema": "boolean",
          "description": "Should acronyms be included"
        },
        {
          "name": "includeNumbers",
          "schema": "boolean",
          "description": "Should numbers be included"
        }
      ],
      "responses": []
    },
    {
      "url": "/nlp/annotate/entities",
      "method": "getAnnotateEntities",
      "httpMethod": "get",
      "tag": "nlp/annotate",
      "description": "Annotate a given content using SciGraph annotator and get all entities from content",
      "parameters": [
        {
          "name": "content",
          "schema": "string",
          "description": "The text content to annotate"
        },
        {
          "name": "includeCategory",
          "schema": "array",
          "description": "Categories to include for annotation"
        },
        {
          "name": "excludeCategory",
          "schema": "array",
          "description": "Categories to exclude for annotation"
        },
        {
          "name": "minLength",
          "schema": "string",
          "description": "The minimum number of characters in the annotated entity"
        },
        {
          "name": "longestOnly",
          "schema": "boolean",
          "description": "Should only the longest entity be returned for an overlapping group"
        },
        {
          "name": "includeAbbreviation",
          "schema": "boolean",
          "description": "Should abbreviations be included"
        },
        {
          "name": "includeAcronym",
          "schema": "boolean",
          "description": "Should acronyms be included"
        },
        {
          "name": "includeNumbers",
          "schema": "boolean",
          "description": "Should numbers be included"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/nlp/annotate/entities",
      "method": "postAnnotateEntities",
      "httpMethod": "post",
      "tag": "nlp/annotate",
      "description": "Annotate a given content using SciGraph annotator and get all entities from content",
      "parameters": [
        {
          "name": "content",
          "schema": "string",
          "description": "The text content to annotate"
        },
        {
          "name": "includeCategory",
          "schema": "array",
          "description": "Categories to include for annotation"
        },
        {
          "name": "excludeCategory",
          "schema": "array",
          "description": "Categories to exclude for annotation"
        },
        {
          "name": "minLength",
          "schema": "string",
          "description": "The minimum number of characters in the annotated entity"
        },
        {
          "name": "longestOnly",
          "schema": "boolean",
          "description": "Should only the longest entity be returned for an overlapping group"
        },
        {
          "name": "includeAbbreviation",
          "schema": "boolean",
          "description": "Should abbreviations be included"
        },
        {
          "name": "includeAcronym",
          "schema": "boolean",
          "description": "Should acronyms be included"
        },
        {
          "name": "includeNumbers",
          "schema": "boolean",
          "description": "Should numbers be included"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/ontol/identifier/",
      "method": "getOntolIdentifierResource",
      "httpMethod": "get",
      "tag": "ontol/identifier",
      "description": "Fetches a map from CURIEs/IDs to labels",
      "parameters": [
        {
          "name": "label",
          "schema": "array",
          "required": true,
          "description": "List of labels"
        }
      ],
      "responses": []
    },
    {
      "url": "/ontol/identifier/",
      "method": "postOntolIdentifierResource",
      "httpMethod": "post",
      "tag": "ontol/identifier",
      "description": "Fetches a map from CURIEs/IDs to labels",
      "parameters": [
        {
          "name": "label",
          "schema": "array",
          "required": true,
          "description": "List of labels"
        }
      ],
      "responses": []
    },
    {
      "url": "/ontol/information_content/{subject_category}/{object_category}/{subject_taxon}",
      "method": "getInformationContentResource",
      "httpMethod": "get",
      "tag": "ontol",
      "description": "Returns information content (IC) for a set of relevant ontology classes",
      "parameters": [
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default)\n                    or a specific publication or other supporting ibject, e.g. ZFIN:ZDB-PUB-060503-2.\n                    "
        }
      ],
      "responses": []
    },
    {
      "url": "/ontol/labeler/",
      "method": "getOntolLabelerResource",
      "httpMethod": "get",
      "tag": "ontol/labeler",
      "description": "Fetches a map from CURIEs/IDs to labels",
      "parameters": [
        {
          "name": "id",
          "schema": "array",
          "required": true,
          "description": "List of ids"
        }
      ],
      "responses": []
    },
    {
      "url": "/ontol/subgraph/{ontology}/{node}",
      "method": "getExtractOntologySubgraphResource",
      "httpMethod": "get",
      "tag": "ontol",
      "description": "Extract a subgraph from an ontology",
      "parameters": [
        {
          "name": "cnode",
          "schema": "array",
          "description": "Additional classes"
        },
        {
          "name": "includeAncestors",
          "schema": "boolean",
          "description": "Include Ancestors"
        },
        {
          "name": "includeDescendants",
          "schema": "boolean",
          "description": "Include Descendants"
        },
        {
          "name": "relation",
          "schema": "array",
          "description": "Additional classes"
        },
        {
          "name": "includeMeta",
          "schema": "boolean",
          "description": "Include metadata in response"
        }
      ],
      "responses": []
    },
    {
      "url": "/ontol/subgraph/{ontology}/{node}",
      "method": "postExtractOntologySubgraphResource",
      "httpMethod": "post",
      "tag": "ontol",
      "description": "Extract a subgraph from an ontology",
      "parameters": [
        {
          "name": "cnode",
          "schema": "array",
          "description": "Additional classes"
        },
        {
          "name": "includeAncestors",
          "schema": "boolean",
          "description": "Include Ancestors"
        },
        {
          "name": "includeDescendants",
          "schema": "boolean",
          "description": "Include Descendants"
        },
        {
          "name": "relation",
          "schema": "array",
          "description": "Additional classes"
        },
        {
          "name": "includeMeta",
          "schema": "boolean",
          "description": "Include metadata in response"
        }
      ],
      "responses": []
    },
    {
      "url": "/ontology/shared/{subject}/{object}",
      "method": "getOntologyTermsSharedAncestor",
      "httpMethod": "get",
      "tag": "ontology",
      "description": "Returns the ancestor ontology terms shared by two ontology terms",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/ontology/subset/{id}",
      "method": "getOntologySubset",
      "httpMethod": "get",
      "tag": "ontology",
      "description": "Returns meta data of an ontology subset (slim)",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/ontology/term/{id}",
      "method": "getOntologyTerm",
      "httpMethod": "get",
      "tag": "ontology",
      "description": "Returns meta data of an ontology term",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/ontology/term/{id}/graph",
      "method": "getOntologyTermGraph",
      "httpMethod": "get",
      "tag": "ontology",
      "description": "Returns graph of an ontology term",
      "parameters": [
        {
          "name": "graphType",
          "schema": "string",
          "description": "graph type ('topology_graph', 'regulates_transitivity_graph' or 'neighborhood_graph')"
        }
      ],
      "responses": []
    },
    {
      "url": "/ontology/term/{id}/subgraph",
      "method": "getOntologyTermSubgraph",
      "httpMethod": "get",
      "tag": "ontology",
      "description": "Extract a subgraph from an ontology term",
      "parameters": [
        {
          "name": "cnode",
          "schema": "array",
          "description": "Additional classes"
        },
        {
          "name": "includeAncestors",
          "schema": "boolean",
          "description": "Include Ancestors"
        },
        {
          "name": "includeDescendants",
          "schema": "boolean",
          "description": "Include Descendants"
        },
        {
          "name": "relation",
          "schema": "array",
          "description": "Additional classes"
        },
        {
          "name": "includeMeta",
          "schema": "boolean",
          "description": "Include metadata in response"
        }
      ],
      "responses": []
    },
    {
      "url": "/ontology/term/{id}/subsets",
      "method": "getOntologyTermSubsets",
      "httpMethod": "get",
      "tag": "ontology",
      "description": "Returns subsets (slims) associated to an ontology term",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/owl/ontology/dlquery/{query}",
      "method": "getDlQuery",
      "httpMethod": "get",
      "tag": "owl/ontology",
      "description": "Placeholder - use OWLery for now",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/owl/ontology/sparql/{query}",
      "method": "getSparqlQuery",
      "httpMethod": "get",
      "tag": "owl/ontology",
      "description": "Placeholder - use direct SPARQL endpoint for now",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/pair/sim/jaccard/{id1}/{id2}",
      "method": "getPairSimJaccardResource",
      "httpMethod": "get",
      "tag": "pair/sim",
      "description": "Get pairwise similarity",
      "parameters": [
        {
          "name": "objectCategory",
          "schema": "string",
          "description": "e.g. disease, phenotype, gene. Two subjects will be compared based on overlap between associations to objects in this category"
        }
      ],
      "responses": []
    },
    {
      "url": "/relation/usage/",
      "method": "getRelationUsageResource",
      "httpMethod": "get",
      "tag": "relation/usage",
      "description": "All relations used plus count of associations",
      "parameters": [
        {
          "name": "subjectTaxon",
          "schema": "string",
          "description": "SUBJECT TAXON id, e.g. NCBITaxon:9606. Includes inferred by default"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default)\n                    or a specific publication or other supporting ibject, e.g. ZFIN:ZDB-PUB-060503-2.\n                    "
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/relation/usage/between/{subject_category}/{object_category}",
      "method": "getRelationUsageBetweenResource",
      "httpMethod": "get",
      "tag": "relation/usage",
      "description": "All relations used plus count of associations",
      "parameters": [
        {
          "name": "subjectTaxon",
          "schema": "string",
          "description": "SUBJECT TAXON id, e.g. NCBITaxon:9606. Includes inferred by default"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default)\n                    or a specific publication or other supporting ibject, e.g. ZFIN:ZDB-PUB-060503-2.\n                    "
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/relation/usage/pivot",
      "method": "getRelationUsagePivotResource",
      "httpMethod": "get",
      "tag": "relation/usage",
      "description": "Relation usage count for all subj x obj category combinations",
      "parameters": [
        {
          "name": "subjectTaxon",
          "schema": "string",
          "description": "SUBJECT TAXON id, e.g. NCBITaxon:9606. Includes inferred by default"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default)\n                    or a specific publication or other supporting ibject, e.g. ZFIN:ZDB-PUB-060503-2.\n                    "
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/relation/usage/pivot/label",
      "method": "getRelationUsagePivotLabelResource",
      "httpMethod": "get",
      "tag": "relation/usage",
      "description": "Relation usage count for all subj x obj category combinations, showing label",
      "parameters": [
        {
          "name": "subjectTaxon",
          "schema": "string",
          "description": "SUBJECT TAXON id, e.g. NCBITaxon:9606. Includes inferred by default"
        },
        {
          "name": "evidence",
          "schema": "string",
          "description": "Object id, e.g. ECO:0000501 (for IEA; Includes inferred by default)\n                    or a specific publication or other supporting ibject, e.g. ZFIN:ZDB-PUB-060503-2.\n                    "
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/search/entity/autocomplete/{term}",
      "method": "getAutocomplete",
      "httpMethod": "get",
      "tag": "search",
      "description": "Returns list of matching concepts or entities using lexical search",
      "parameters": [
        {
          "name": "fq",
          "schema": "array",
          "description": "fq string passed directly to solr, note that multiple filters will be combined with an AND operator. Combining fq_string with other parameters may result in unexpected behavior."
        },
        {
          "name": "category",
          "schema": "array",
          "description": "e.g. gene, disease"
        },
        {
          "name": "prefix",
          "schema": "array",
          "description": "ontology prefix: HP, -MONDO"
        },
        {
          "name": "includeEqs",
          "schema": "boolean",
          "description": "Include equivalent ids in prefix filter"
        },
        {
          "name": "boostFx",
          "schema": "array",
          "description": "boost function e.g. pow(edges,0.334)"
        },
        {
          "name": "boostQ",
          "schema": "array",
          "description": "boost query e.g. category:genotype^-10"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "taxon filter, eg NCBITaxon:9606, includes inferred taxa"
        },
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "string",
          "description": "row number to start from"
        },
        {
          "name": "highlightClass",
          "schema": "string",
          "description": "highlight class"
        },
        {
          "name": "minMatch",
          "schema": "string",
          "description": "minimum should match parameter, see solr docs for details"
        },
        {
          "name": "excludeGroups",
          "schema": "boolean",
          "description": "Exclude grouping classes (classes with subclasses)"
        },
        {
          "name": "minimalTokenizer",
          "schema": "boolean",
          "description": "set to true to use the minimal tokenizer, good for variants and genotypes"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/search/entity/hpo-pl/{term}",
      "method": "getSearchHpoEntities",
      "httpMethod": "get",
      "tag": "search",
      "description": "Returns list of matching concepts or entities using lexical search",
      "parameters": [
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "string",
          "description": "row number to start from"
        },
        {
          "name": "phenotypeGroup",
          "schema": "string",
          "description": "phenotype group id"
        },
        {
          "name": "phenotypeGroupLabel",
          "schema": "string",
          "description": "phenotype group label"
        },
        {
          "name": "anatomicalSystem",
          "schema": "string",
          "description": "anatomical system id"
        },
        {
          "name": "anatomicalSystemLabel",
          "schema": "string",
          "description": "anatomical system label"
        },
        {
          "name": "highlightClass",
          "schema": "string",
          "description": "highlight class"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/search/entity/{term}",
      "method": "getSearchEntities",
      "httpMethod": "get",
      "tag": "search",
      "description": "Returns list of matching concepts or entities using lexical search",
      "parameters": [
        {
          "name": "fq",
          "schema": "array",
          "description": "fq string passed directly to solr, note that multiple filters will be combined with an AND operator. Combining fq_string with other parameters may result in unexpected behavior."
        },
        {
          "name": "category",
          "schema": "array",
          "description": "e.g. gene, disease"
        },
        {
          "name": "prefix",
          "schema": "array",
          "description": "ontology prefix: HP, -MONDO"
        },
        {
          "name": "includeEqs",
          "schema": "boolean",
          "description": "Include equivalent ids in prefix filter"
        },
        {
          "name": "boostFx",
          "schema": "array",
          "description": "boost function e.g. pow(edges,0.334)"
        },
        {
          "name": "boostQ",
          "schema": "array",
          "description": "boost query e.g. category:genotype^-10"
        },
        {
          "name": "taxon",
          "schema": "array",
          "description": "taxon filter, eg NCBITaxon:9606, includes inferred taxa"
        },
        {
          "name": "rows",
          "schema": "integer",
          "description": "number of rows"
        },
        {
          "name": "start",
          "schema": "string",
          "description": "row number to start from"
        },
        {
          "name": "highlightClass",
          "schema": "string",
          "description": "highlight class"
        },
        {
          "name": "minMatch",
          "schema": "string",
          "description": "minimum should match parameter, see solr docs for details"
        },
        {
          "name": "excludeGroups",
          "schema": "boolean",
          "description": "Exclude grouping classes (classes with subclasses)"
        },
        {
          "name": "minimalTokenizer",
          "schema": "boolean",
          "description": "set to true to use the minimal tokenizer, good for variants and genotypes"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/sim/compare",
      "method": "getSimCompare",
      "httpMethod": "get",
      "tag": "sim",
      "description": "Compare a reference profile vs one profiles",
      "parameters": [
        {
          "name": "isFeatureSet",
          "schema": "boolean",
          "description": "set to true if *all* input ids are phenotypic features, else set to false"
        },
        {
          "name": "metric",
          "schema": "string",
          "description": "Metric for computing similarity"
        },
        {
          "name": "refId",
          "schema": "array",
          "description": "A phenotype or identifier that is composed of phenotypes (eg disease, gene)"
        },
        {
          "name": "queryId",
          "schema": "array",
          "description": "A phenotype or identifier that is composed of phenotypes (eg disease, gene)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/sim/compare",
      "method": "postSimCompare",
      "httpMethod": "post",
      "tag": "sim",
      "description": "Compare a reference profile vs one or more profiles",
      "parameters": [
        {
          "name": "query_ids",
          "schema": "array",
          "description": ""
        },
        {
          "name": "reference_ids",
          "schema": "array",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/sim/score",
      "method": "getAnnotationScore",
      "httpMethod": "get",
      "tag": "sim",
      "description": "Get annotation score",
      "parameters": [
        {
          "name": "id",
          "schema": "array",
          "description": "Phenotype identifier (eg HP:0004935)"
        },
        {
          "name": "absentId",
          "schema": "array",
          "description": "absent phenotype (eg HP:0002828)"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/sim/score",
      "method": "postAnnotationScore",
      "httpMethod": "post",
      "tag": "sim",
      "description": "Get annotation score",
      "parameters": [
        {
          "name": "features",
          "schema": "array",
          "description": ""
        },
        {
          "name": "id",
          "schema": "string",
          "description": ""
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/sim/search",
      "method": "getSimSearch",
      "httpMethod": "get",
      "tag": "sim",
      "description": "Search for phenotypically similar diseases or model genes",
      "parameters": [
        {
          "name": "isFeatureSet",
          "schema": "boolean",
          "description": "set to true if *all* input ids are phenotypic features, else set to false"
        },
        {
          "name": "metric",
          "schema": "string",
          "description": "Metric for computing similarity"
        },
        {
          "name": "id",
          "schema": "array",
          "description": "A phenotype or identifier that is composed of phenotypes (eg disease, gene)"
        },
        {
          "name": "limit",
          "schema": "integer",
          "description": "number of rows, max 500"
        },
        {
          "name": "taxon",
          "schema": "string",
          "description": "ncbi taxon id"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/variation/set/",
      "method": "getVariantSetsCollection",
      "httpMethod": "get",
      "tag": "variation/set",
      "description": "Returns list of variant sets",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "description": "Page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "Results per page {error_msg}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/variation/set/",
      "method": "postVariantSetsCollection",
      "httpMethod": "post",
      "tag": "variation/set",
      "description": "Creates a new variant set",
      "parameters": [
        {
          "name": "body",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "category",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "category_id",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "pub_date",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    },
    {
      "url": "/variation/set/analyze/{id}",
      "method": "getVariantAnalyze",
      "httpMethod": "get",
      "tag": "variation/set",
      "description": "Returns list of matches",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/variation/set/archive/{year}/{month}/{day}",
      "method": "getVariantSetsArchiveCollection",
      "httpMethod": "get",
      "tag": "variation/set",
      "description": "Returns list of variant sets from a specified time period",
      "parameters": [
        {
          "name": "page",
          "schema": "integer",
          "description": "Page number"
        },
        {
          "name": "perPage",
          "schema": "integer",
          "description": "Results per page {error_msg}"
        }
      ],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/variation/set/{id}",
      "method": "deleteVariantSetItem",
      "httpMethod": "delete",
      "tag": "variation/set",
      "description": "Deletes variant set",
      "parameters": [],
      "responses": []
    },
    {
      "url": "/variation/set/{id}",
      "method": "getVariantSetItem",
      "httpMethod": "get",
      "tag": "variation/set",
      "description": "Returns a variant set",
      "parameters": [],
      "responses": [
        {
          "statusCode": "200",
          "description": ""
        }
      ]
    },
    {
      "url": "/variation/set/{id}",
      "method": "putVariantSetItem",
      "httpMethod": "put",
      "tag": "variation/set",
      "description": "Updates a variant set",
      "parameters": [
        {
          "name": "body",
          "schema": "string",
          "required": true,
          "description": ""
        },
        {
          "name": "category",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "category_id",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "id",
          "schema": "integer",
          "required": false,
          "description": ""
        },
        {
          "name": "pub_date",
          "schema": "string",
          "required": false,
          "description": ""
        },
        {
          "name": "title",
          "schema": "string",
          "required": true,
          "description": ""
        }
      ],
      "responses": []
    }
  ],
  "apiBaseUrl": "/api",
  "apiDescription": "API integration layer for linked biological objects.\n\n __Source:__ https://github.com/biolink/biolink-api/",
  "apiTitle": "BioLink API",
  "endpoints": 159,
  "sdkMethods": 293,
  "schemas": 46,
  "parameters": 1408,
  "difficultyScore": 668,
  "difficulty": "Very Hard"
}